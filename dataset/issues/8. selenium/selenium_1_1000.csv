"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","10213","[java] allow setting a different keyboard or pointer for actions on i…","You can see how difficult it is to work with an input device that isn't a default keyboard or a default mouse in the tests I wrote for a pointer.  Using a `setActivePointer()` / `setActiveKeyboard` is one way of making this easier. I was looking at different options like putting it in the constructor, but then you'd need 8 different constructors when we add in wheel support soon.  The Actions class does a good job of adding Pauses where needed for newly seen inputs already, but something does not like 2 different objects being given the same name, so we need to re-use the existing  input object if it is there rather than creating a new one.   The implementation can probably be improved.","closed","","titusfortner","2022-01-01T20:13:05Z","2022-01-10T14:01:07Z"
"","10292","[java]Sample code for xpath with web driver wait","Xpath wrapper with Webdriver wait  Long story short we are writing this way driver.findElement(By.xpath(xpathExpression)).click();  so below method wrapping with webdriver wait with custom seconds getElementByXpath(""ADD_YOUR_XPATH"", timeOutInSeconds).click();","closed","","dassusovan","2022-01-26T20:58:55Z","2022-01-31T14:19:22Z"
"","10291","[java]Sample code for xpath with web driver wait","Xpath wrapper with Webdriver wait  Long story short we are writing this way driver.findElement(By.xpath(xpathExpression)).click();  so below method wrapping with webdriver wait with custom seconds getElementByXpath(""ADD_YOUR_XPATH"", timeOutInSeconds).click();","closed","","dassusovan","2022-01-26T20:27:34Z","2022-01-26T20:56:44Z"
"","10034","Trunk","wrong","closed","","hixio-mh","2021-11-13T08:47:02Z","2021-11-13T11:50:15Z"
"","10537","[py] Tidy up python exception handling","Would like this for `4.3` not `4.2`.  A lot of the python code has some unnecessary exception handling catching some exception and instantly re-raising it; best to just let it bubble up here than catching it to begin with; I've removed usages of:  - catching an exception and instantly re-raising it with just not simply catching it - `raise e` with just `raise` to avoid creating unnecessary convoluted stack traces","closed","C-py,","symonk","2022-04-10T14:30:46Z","2022-05-23T20:20:40Z"
"","9953","Make `SearchContext.findElements` have a generic return type","Why do this? The main reason is to support frameworks that wish to extend Selenium, but return their own sub-types of `WebElement` from `findBy`.  `findElement` can already be overridden using co-variant return types, but the `List` returned by `findElements` could not be overridden as easily. This signature change allows that.  With this change in place, subclasses of WebDriver can now do something like this, without there being compilation issues:  ``` public interface Special extends WebDriver {     SpecialElement findElement(By locator);     List findElements(By locator); } ```  Compiling the entire java code base suggests that this is a safe change to make -- no tests or other calls sites needed to be modified in order for this change to work.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","shs96c","2021-10-19T12:27:54Z","2021-11-03T13:58:02Z"
"","10819","correctly checks the driver supports DevTools","When using a driver like EventFiringWebDriver as a parameter for JavaScriptEngine and trying to use StartEventMonitoring the constructor will throw a NullReferenceException. This is caused by casting the driver to IDevTools using ""as"" which will return null if the casting failed, and incorrectly checking the field ""session"" instead of ""devToolsDriver"" for null value.  fixes #10776  ### Description This commit will correctly check in the JavascriptEngine constructor that the driver passed as a parameter supports DevTools  ### Motivation and Context Previously the JavascriptEngine constructor checked the field session was not null, instead of the field devToolsDriver which would cause a NullReferenceException when using an incompatible driver like the EventFiringWebDriver. Now it correctly check the field devToolsDriver and, if the casting of the driver to IDevTools returns null, the JavascriptEngine constructor will correctly throw a WebDriverException with the message ""Driver must implement IDevTools to use these features""  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","elgatov","2022-06-27T14:15:04Z","2022-07-05T13:18:31Z"
"","10777","correctly checks the driver supports DevTools","When using a driver like EventFiringWebDriver as a parameter for JavaScriptEngine and trying to use StartEventMonitoring the constructor will throw a NullReferenceException. This is caused by casting the driver to IDevTools using ""as"" which will return null if the casting failed, and incorrectly checking the field ""session"" instead of ""devToolsDriver"" for null value.  fixes #10776  ### Description This commit will correctly check in the JavascriptEngine constructor that the driver passed as a parameter supports DevTools  ### Motivation and Context Previously the JavascriptEngine constructor checked the field session was not null, instead of the field devToolsDriver which would cause a NullReferenceException when using an incompatible driver like the EventFiringWebDriver. Now it correctly check the field devToolsDriver and, if the casting of the driver to IDevTools returns null, the JavascriptEngine constructor will correctly throw a WebDriverException with the message ""Driver must implement IDevTools to use these features""  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","elgatov","2022-06-16T13:53:17Z","2022-06-27T14:13:12Z"
"","10078","[py] Improved exception handling relative locators that return empty sequences","When using `driver.find_element(...)` with a `RelativeBy` type, an `IndexError` could be raised, this patch raises a `NoSuchElementException` in the event that the call to `find_elements(...)` returns an empty sequence, rather than a sequence of web elements.  I could use some steer here in terms of what the message should be; and instances where `root` may be `None` ?  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. (N/A) - [ ] I have updated the documentation accordingly. (N/A) - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","symonk","2021-11-23T23:39:27Z","2022-04-16T14:09:21Z"
"","10092","[py] send Base64 encoded addon to driver instead of path String","Uses `addon` parameter instead of `path` parameter for installing Firefox AddOn  reference: https://hg.mozilla.org/mozilla-central/file/tip/testing/geckodriver/CHANGES.md#l878  This matches current Ruby & .NET behavior.  This change will also make it easier to use in a remote driver when we get that functionality mixed in.  @AutomatedTester please let me know if my Python is correct here; like there might be a better way to do a relative file reference?","closed","C-py,","titusfortner","2021-11-26T23:50:00Z","2022-01-05T21:22:01Z"
"","10647","[py] python3.7+ syntax throughout `*.py` files.","Upgrades all python2 syntax to be python3.7+ (for the cases where `from __future__ import annotations` is defined benefits from more modern typing syntax `|`.  For now this is a full sweep of `/py/*.py`  Related to #10646   Noticeably:   - Remove redundant args to `open(...)` (default)  - Replace string formatting with a more modern approach  - Reduce explicit args to `super()` for inheritance  - Removes redundant `__future__` imports  - Removes redundant unicode prefixing `u'foo'` (I removed most of those in a previous pull request: #10562)  - Replace `set(...)` with literal `{..., ...}`  - Replace `IOError` with `OSError` as multiple exceptions are now aliased since `py3.3`  - more","closed","C-py,","symonk","2022-05-14T11:04:46Z","2022-06-13T18:05:42Z"
"","10650","Convenience Actions methods for Scrolling","Trunk right now has basic scrolling support merged.  This PR is set to conveniently show the diff of what exists and what could exist.  ### Options for reviewers:  1. Reject all changes and keep what is in trunk exactly as it is 2. Reject PR but make changes to what is in trunk  3. Accept PR, but make proposed changes 4. Accept PR and/or do nothing and this will get merged before 4.2 is released  ### Currently in Trunk  * I updated the Ruby implementation match the Python implementation approach. * I made the Java & .NET approaches similar (except .NET is using a class with properties, Java is using a class with static methods) * All languages have the same descriptions for each of the parameters * We have tests for the 5 working and 2 failing tests for these 4 languages.  There are legit issues to be taken with the implementation in trunk (especially with .NET since the class with properties isn't ideal). But, it is basic implementation of a `scroll()` method with all the functionality.  ### Changes proposed by this PR  The primary reason for this PR is that I believe it is not intuitive for users to understand the purpose of `x` and `y`, even if we called them `offsetX` and `offsetY`. The idea of offset from origin and the origin being one of two different things took me a while to figure out, and I like to think I'm at least average in figuring out this stuff compared to our users.  This PR removes a generic scroll method and replaces it with 3 convenience methods; the first 2 represent what 98% of use cases require. The 3rd is the featured method but it makes it blatantly obvious that the offsets are explicitly associated with the origin (viewport or element).  The names match the existing language conventions for pointer:  1. Scroll to Element — takes element argument .NET — `ScrollToElement()` Java — `scrollToElement()` Python — `scroll_to_element()` Ruby — `#scroll_to`  2. Scroll by Amount — takes deltaX/deltaY values: .NET — `ScrollByAmount()` Java — `scrollByAmount()` Python — `scroll_by_amount()` Ruby — `#scroll_by`  3. Scroll from an origin — takes deltaX/deltaY and a ScrollOrigin object instance .NET — `ScrollFromOrigin()` Java — `scrollFromOrigin()` Python — `scroll_from_origin()` Ruby — `#scroll_from`  There are a lot of potential (and valid) quibbles with this implementation, from method names to defaults, to where defaults live, to which stage of the actions class process does translations of scroll origin, etc. I tried very hard to make the implementations happen at the same ""place"" in the different languages, but in a language idiomatic way.","closed","C-java,","titusfortner","2022-05-14T20:26:47Z","2022-05-24T23:16:48Z"
"","10173","Fix assignment to ZENKAKU_HANKAKU.","This was an annotation rather than an assignment. As well as not working as an accessible property, flake8 really didn't like it. this is why the flake8 check in #10172 and every other recent commit from trunk has failed the flake8 check.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","colons","2021-12-21T10:56:47Z","2021-12-24T20:41:40Z"
"","10816","[JS] Updated jsdoc for move action","This PR improves the selenium JS documentation regarding move action. The current documentation doesnt give clear indication on what is the default behavior if no origin is specified and when view port is specified as origin. Users might mistaken that for view port also the default behavior is to move to center of the view port (same like webelement) but the implementation is like moving to top-left corner for all other origins other than webelement.    ### Motivation and Context  To improve clarity on move action  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","praveendvd","2022-06-26T11:31:16Z","2022-06-27T08:57:27Z"
"","10558","[py] convert `Color` to use `@classmethod` alternative constructors","This patch changes the alternative constructors of the `Color` class to use the intended `@classmethod` so the `cls` is available internally; this allows subclassing without the current static constructors returning instances of the parent class always..  I've moved the color unit tests out of `webdriver/support` as they are better suited in the `test-unit` bazel target I think.  The diff here also highlights its a bit of a wild west in terms of linting through `/py/` - should we discuss/look at implementing some linting, perhaps https://github.com/psf/black?","closed","C-py,","symonk","2022-04-19T16:31:34Z","2022-05-09T15:17:56Z"
"","10761","[py]: Introducing code formatting for a consistent code base","This makes some improvements to the python linting, Moving forward I would like to get the entire code base linted in a consistent manner for ease of maintenance and contributions.  As a proof of concept this pull request contains the following:  - Upgraded github workflow to use a new `tox -e linting` recipe. - `Black` (very common python code formatter) enablement only on `/py/test/*` to prove things out. - `Isort` - Python import automatic sorter and manager - Having `flake8` work in tandem with `black` & `isort` - introduction of a `.git-blame-ignore-revs` file for assisting `git blame` with sweeping changes required in future. - Some tweaks to the tox configurations (and increased the version of tox to latest, was outdated in CI).  Keeping things small and incremental right now to allow things to roll out gradually.  ~I would *much* rather have pre-commit implemented with this - why?~ edit: I know you all hate the idea of pre-commit 😄    - It only applies to staged files with ease  - Integrates into flow automatically on `git commit `, enforcing client side compliance, the argument for not wanting it to get in the way is trivial, `--no-verify` works as normal AND `SKIP=HOOKNAME git commit ` gives individual hook skips!  - Has *tons* more useful hooks for the code base  - Does largely the same thing but better  - Can be locked down to only apply to the python sub directory  - Does not require managing some sort of bash/executable files to move into `.git/hooks` its all implicit  I have kept this over `py/test/` for now, but I would _really_ like to have it fully rolled out, the benefits are fantastic (imo).  Right now as-is the flow is unchanged, what once was `tox -e flake8` should now be run as `tox -e linting` is now much more thorough and automatic at finding and correcting code formatting, this makes at *most* _very_ minor changes to the underlying AST/BC so will not introduce any bugs into the code.  ```console tox -e linting                                                                                                                                 ✔  py 🐍  22:34:53    linting installed: black==22.3.0,click==8.1.3,flake8==4.0.1,importlib-metadata==4.2.0,isort==5.10.1,mccabe==0.6.1,mypy-extensions==0.4.3,pathspec==0.9.0,platformdirs==2.5.2,pycodestyle==2.8.0,pyflakes==2.4.0,tomli==2.0.1,typed-ast==1.5.4,typing_extensions==4.2.0,zipp==3.8.0 linting run-test-pre: PYTHONHASHSEED='98988857' linting run-test: commands[0] | flake8 /home/si/workspaces/selenium/py linting run-test: commands[1] | isort /home/si/workspaces/selenium/py/test --profile black linting run-test: commands[2] | black /home/si/workspaces/selenium/py/test -l 120 All done! ✨ 🍰 ✨ 111 files left unchanged. ```","open","C-py,","symonk","2022-06-11T09:04:08Z","2022-07-14T17:15:23Z"
"","10365","run java tests with MS Edge","This isn't working on my fork. I'm downloading the browser the same way as Chrome, and msedgedriver works. Not sure why the browser isn't starting. @diemol any ideas?","closed","","titusfortner","2022-02-14T23:41:55Z","2022-03-30T19:44:13Z"
"","10636","[java] implement separate Origin class for WheelInput","This is what I was talking about in the TLC meeting. I'd rather have a separate implementation than use one from another (tangential but still unrelated) class that has an unsupported method that we have to treat differently.  (I also have an idea for how I'd like to build on this class in a way that requires it to be independent).","closed","C-java,","titusfortner","2022-05-11T17:41:40Z","2022-05-12T14:47:46Z"
"","10215","JWP Actions","This is slightly less ambitious than #10203  I broke it up into 2 commits. The first removes support for the things deprecated in 6b8bdae1 (1/7/2017) for selenium-3.1.0 The second removes support for the things deprecated in e561ca86 (10/29/2018) for selenium-3.141.0  I essentially deleted the deprecated classes and then removed everything that referenced them.  The biggest difference from the other commit is that I didn't touch any of the abandoned commands in `DriverCommand.java` which I think we can dramatically clean up in another commit.  One issue with this is that we did not deprecate `TouchActions.java`. I think the intention was to implement it with w3c compliant methods, but... because it is a subclass, we'd either need to add generics, make a bunch of private methods public, or add these methods to `Actions.java` directly. As it is, this implementation is not usable, so I think it should be removed for now, and we should add the touch actions in the `Actions.java` class directly, which I think we should do with ScrollWheel as well.","closed","C-java,","titusfortner","2022-01-03T21:16:12Z","2022-06-10T11:23:20Z"
"","9981","[grid] Fix host option is not working issue","this is regression bugs. refer to #5820  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context  It is not binding host info  ```shell $ java -jar selenium-server-4.0.0.jar standalone --host 127.0.0.1  $ netstat -nat | grep 4444 tcp6       0      0 :::4444                 :::*                    LISTEN ```  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","chozo99","2021-10-25T09:51:34Z","2021-10-25T11:13:39Z"
"","10323","add deleteNetworkConditions for chromium","This implements the functionality to delete previously set network conditions in Chromium.  Fixes #10322  ### Description  Adds the `deleteNetworkConditions` public method to the Chromium Driver.  ### Motivation and Context  The method was missing for Javascript.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","slhck","2022-02-04T12:57:23Z","2022-02-04T14:10:15Z"
"","10203","[java] remove deprecated action implementations","This has all been deprecated for > 3 years (3.14.0) so I think we're ok to remove it.  If Selenium 4.2 is supposed to be the version where we all implement the updated Actions support, this seems like the right time to remove it.   I got the old tests running, and everything that wasn't marked deprecated is passing. Please help me make sure I wasn't too aggressive in deleting something that was needed.","closed","C-java,","titusfortner","2021-12-30T22:42:19Z","2022-01-03T21:16:52Z"
"","10451","Remove deprecated default capabilities","This fixes: https://github.com/SeleniumHQ/selenium/issues/10442     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","PhilippSelenium","2022-03-16T12:13:21Z","2022-05-30T13:06:09Z"
"","10093","[dotnet] support installing temporary addon in Firefox","This fixes #10084   Jim, I think this is correct, but let me know if I missed something. Thanks","open","C-dotnet,","titusfortner","2021-11-27T00:38:15Z","2021-12-24T22:21:22Z"
"","10548","Update react scripts to 5.0.1","This also moves the eslintConfig to its own file.","closed","","diemol","2022-04-14T15:18:13Z","2022-04-14T15:35:58Z"
"","10749","[py]: Find `latest` version of `devtools` when requested version does not exist on disk","This adds a little resilliency to the python bindings when the requested `devtools/v{n}` cannot be found on disk.  This can happen when CDP is updated and python has not yet been released.  It will parse out all the version available in the `/devtools/*` path and select the _latest_ one only if the requested `ver` is not available and raises a `ModuleNotFoundError`.  This makes a few assumptions that the *only* contents in `/devtools` will be folders prefixed with `v{some_number}`.  closes #10699","closed","","symonk","2022-06-08T19:21:27Z","2022-06-13T15:56:24Z"
"","10591","chore: Enable codeql action","This action runs GitHub's industry-leading semantic code analysis engine, CodeQL, against a repository's source code to find security vulnerabilities.  https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-with-codeql  https://github.com/ossf/scorecard/blob/main/docs/checks.md#sast","closed","","naveensrinivasan","2022-04-29T22:07:43Z","2022-05-01T20:35:29Z"
"","10672","Update submit function","There was a bug that Java fixed that the other languages didn't. I also noticed that Java does everything in one wire call instead of two like the other languages, so I updated the other languages to match Java.  Also, when Submit method failed in Java, it's returning an unhelpful JavaScriptError. When submit method failed in the other languages, it returned an unhelpful NoSuchElementError which is confusing since the user didn't think they were searching for anything, and the locator is confusing unless they understand the implementation.  This PR uses: `To submit an element, it must be nested inside a form element`  Ruby & Java both have an `UnsupportedOperation` error, the other languages I went with the generic error.  If anyone has preferences for a different message or different exception class for any of these, let me know.  @harsha509 yeah, I made sure the existing submit test passed, but I didn't add any of the other tests.","closed","C-nodejs,","titusfortner","2022-05-20T06:12:28Z","2022-05-25T03:12:09Z"
"","10671","[dotnet] allow RemoteWebDriver to access Selenium logs","There are 3 options I can see for quickly fixing #8229, none of them are ideal.  1. Require users to subclass RemoteWebDriver and add implementation for `ISupportsLog` which I *think should ""just work"" (at least it did in my quick test of it). ```cs public class RemoteChromeDriver : RemoteWebDriver, ISupportsLogs ``` 2. This PR, which would allow a user to do this: ```cs var customCommandDriver = driver as ICustomDriverCommandExecutor; customCommandDriver.RegisterCustomDriverCommands(ChromeDriver.CustomCommandDefinitions);  ReadOnlyCollection logTypes = driver.Manage().Logs.AvailableLogTypes; driver.Url = ""https://selenium.dev/selenium/web/errors.html""; driver.FindElement(By.CssSelector(""input"")).Click(); ReadOnlyCollection results = driver.Manage().Logs.GetLog(""browser""); ``` 3. Can remove some of the uglier parts of this PR and put more onus on user: ```cs IReadOnlyDictionary logCommands = new Dictionary {     {         DriverCommand.GetAvailableLogTypes,         new HttpCommandInfo(HttpCommandInfo.GetCommand, ""/session/{sessionId}/se/log/types"")     },     {         DriverCommand.GetLog,         new HttpCommandInfo(HttpCommandInfo.PostCommand, ""/session/{sessionId}/se/log"")     } };  var customCommandDriver = driver as ICustomDriverCommandExecutor; customCommandDriver.RegisterCustomDriverCommands(logCommands);  ReadOnlyCollection logTypes = driver.Manage().Logs.AvailableLogTypes; driver.Url = ""https://selenium.dev/selenium/web/errors.html""; driver.FindElement(By.CssSelector(""input"")).Click(); ReadOnlyCollection results = driver.Manage().Logs.GetLog(""browser""); ```  The existing code allows driver classes for drivers that haven't implemented the logging endpoints, to call the log methods, but it won't actually send the commands. No error that the method isn't actually doing anything.  This PR would always send the command but will swallow the not-implemented exception if the driver commands were not added. So same end result, but slightly less efficient, but if a user is calling for something that never returns anything anyway, maybe that doesn't matter from an implementation standpoint.  Any feedback from anyone would be great on this, thanks.","closed","C-dotnet,","titusfortner","2022-05-20T05:38:39Z","2022-05-25T02:42:45Z"
"","10637","copy web content to be served on selenium.dev","The idea here is for us to be able to add code to https://github.com/SeleniumHQ/seleniumhq.github.io/tree/dev/examples for display in our documentation. This will make it a lot easier to create code examples for our documentation because we can just re-use our existing tests.","closed","","titusfortner","2022-05-11T17:54:20Z","2022-05-12T13:40:01Z"
"","10589","[py] An expectation for checking if non-empty text is present in element","text_to_be_present_in_element_non_empty method is added to check that the web element contains any non-empty text. Usually it's needed when text is generated on-the-fly on the server side, and of course, that the text of element is not empty.  Also, added self-test for this feature.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-py,","wwakabobik","2022-04-29T12:50:58Z","2022-05-09T15:10:35Z"
"","10516","Update remote_connection.py","Suggesting this change as when we try to run scripts on remote platform like browserstack and sauce labs, the urllib3 is throwing an error urllib3.exceptions.MaxRetryError: HTTPConnectionPool, this can be avoided if we set this value. the error was not coming until the urllib3==1.24.3. But post that urllib3 made certificate default.  There have been multiple communication chains regarding this issue. I could only fix this issue by explicity setting this value to none in the library stack.   In case you feel like not approving the change please do share the suggested fix to handle this issue as i could not find any.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","I-stale,","rohitanand1614","2022-04-06T11:49:53Z","2022-05-24T23:03:45Z"
"","10009","Split OpenTelemetry command","Split OpenTelemetry command in order to facilitate search by tags  Fixes #9942  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","llatinov","2021-11-03T22:28:18Z","2021-11-23T15:28:52Z"
"","10631","[py] Additional types and tweaks for remote webdriver","Some small tweaks & typing additions to `webdriver.remote.webdriver.py`.  Mostly types and short hand ways of doing a few things","closed","C-py,","symonk","2022-05-10T17:51:22Z","2022-06-09T12:56:20Z"
"","10627","[py] additional type hints in wait.py & command.py","Some minor additional type hints for `command.py` & `wait.py`.  Need to figure out the `driver` type hint; but that'll be a decent win throughout once thats sorted in a follow up.","closed","C-py,","symonk","2022-05-09T20:12:06Z","2022-06-09T19:34:35Z"
"","10763","[dotnet] Safer Displayed method return value evaluation","solution for #10757","open","C-dotnet,","ParanoikCZE","2022-06-13T09:29:22Z","2022-06-23T08:47:26Z"
"","10187","RemoteWebDriverBuilder for local drivers","So, this would fix #10064 but in a slightly hacky way. Since we can't create a null config, and we can't determine if a driver is local until `build()` is called, this creates a config with a zero readTimeout. Since no one should be passing in a config with a zero read timeout, anything they pass in will override the one that the local driver class put there, and will throw an error in `build()`.  It also seemed weird to have to do this: ``` ChromeDriver.builder().oneOf(new ChromeOptions()).build(); ```  So now this will do the expected thing: ``` ChromeDriver.builder().build(); ```","closed","C-java,","titusfortner","2021-12-26T20:59:52Z","2022-01-05T21:20:17Z"
"","10405","Running workflows based on affected bazel targets","So far, we have been using GitHub paths to decide when to run a workflow or not. However, this is not always accurate because one might need to build bazel targets from other code path and then the configuration gets tricky.  This PR changes that, analyses the diff to figure out if any bazel target is affected, and based on the code path, it is decided if the whole workflow will be executed or not.  So, there will be a main workflow (`dispatch-workflows.yml`) that will run on PRs and push to `trunk`, and based on the changeset, it will trigger the desired workflow.  In addition, to avoid corner cases, all workflows are scheduled to be run twice a day. With that, we can catch things that the improved workflow did not catch.  A follow up PR should be created to filter the workflow execution by the affected bazel targets.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-03-01T13:41:02Z","2022-03-02T13:33:04Z"
"","10622","[py] docs: updated api docs","skip ci   ### Description  fixes: #10571   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-docs,","SinghHrmn","2022-05-09T10:37:05Z","2022-05-10T17:41:12Z"
"","10634","fix: revert changes for py docs","skip ci    ### Description  Reverting this because the sphinx issue is now resolved.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","SinghHrmn","2022-05-11T13:09:30Z","2022-05-11T13:25:17Z"
"","10257","add expected_conditions tools function.","Simplify waiter and expected_conditions 's operation.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","miloira","2022-01-17T07:15:25Z","2022-01-17T20:55:16Z"
"","10312","Fatjar Selenium Java - not working properly","Similar to this issue for Maven https://github.com/SeleniumHQ/selenium/issues/9907 I found the same problem with Gradle.  Issue 9907 was closed, yet it does not appear to have a resolution?  I would be super grateful to get some guidance on this - in short, the below is the workaround that we use, inspired by issue 9907.  But a more formal solution would be great.  I can put a cut down repo on github, but the below shows the issue, in a fatjar with dependencies this fails.  In Eclipse debugger this works. Is WebDriverManager not playing nicely with Firefox and expecting Chrome?  public static void main(String[] args) { WebDriverManager.firefoxdriver().setup(); try {	       driver = new FirefoxDriver();       }catch(WebDriverException e) { 	log.error(e.toString() , e); 	}	 }  Environment is  Eclipse Version: 2019-12  Ubuntu 20.04.3 LTS Gradle Version: 6.0 Java Home: /usr/lib/jvm/java-11-openjdk-amd64 id 'com.github.johnrengelman.shadow' version '6.1.0'     //See https://github.com/SeleniumHQ/selenium/issues/9907 //In the jar file look for /META-INF/services/org.openqa.selenium.remote.service.DriverService$Builder //in that file replace this line: //org.openqa.selenium.chrome.ChromeDriverService$Builder //with this line: //org.openqa.selenium.firefox.GeckoDriverService$Builder //let archive manager repack the jar and then execute - works ok then..     I manage to find out where the problem was. It was not a problem with the path.  As you proabably know, at runtime, available driver services (e.g. GeckoDriverService, ChromeDriverService, etc.) are detected based on the content of a file named ""org.openqa.selenium.remote.service.DriverService$Builder"" that is located in the jar under the /META-INF/services/ path. It contains the names of the concrete available driver services.  When I examined the content of this file in my jar it contained only this single line : org.openqa.selenium.chrome.ChromeDriverService$Builder  So, only the chrome service was available at runtime.  I found 2 ways of fixing it.  1st solution  I added the following file to my project that overrides the default one put in the jar :  Project   |_src/resources/META-INF/sources/org.openqa.selenium.remote.service.DriverService$Builder  With the following content : org.openqa.selenium.firefox.GeckoDriverService$Builder  I rebuild the jar and everything works fine now.  2nd solution In the pom.xml, I moved up the ""selenium-firefox-driver"" dependency to the top of the dependencies, like that :                org.seleniumhq.selenium         selenium-firefox-driver         ${selenium.version}                   org.seleniumhq.selenium         selenium-java         ${selenium.version}                   org.seleniumhq.selenium         selenium-api         ${selenium.version}       etc.  And it works well.  If it's witten as below (as it was previously), then it's the chrome service that ends up in the ""org.openqa.selenium.remote.service.DriverService$Builder"" file. I actually don't know why but I checked several times to make it sure.                org.seleniumhq.selenium         selenium-java         ${selenium.version}                   org.seleniumhq.selenium         selenium-firefox-driver         ${selenium.version}                   org.seleniumhq.selenium         selenium-api         ${selenium.version}       This doesn't work.  ________________________________ De : Diego Molina ***@***.***> Envoyé : mercredi 13 octobre 2021 10:51 À : SeleniumHQ/selenium ***@***.***> Cc : Jean-Luc BARRILLOT ***@***.***>; Author ***@***.***> Objet : Re: [SeleniumHQ/selenium] FirefoxDriver crashes in toExecutor() method (#9907)   Environment in the IDE and the jar itself are different.  If you want, provide a GitHub repo with the code and we can have a look, and then I will reopen this issue.  — You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub, or unsubscribe. Triage notifications on the go with GitHub Mobile for iOS or Android.  _Originally posted by @jlucbt in https://github.com/SeleniumHQ/selenium/issues/9907#issuecomment-942200750_","closed","I-defect,","JohnGreenan","2022-02-01T05:59:55Z","2022-03-10T00:09:38Z"
"","10744","[py]: Share command mapping between all instances of RemoteConnection.","Share the `_COMMANDS` mapping between all instances of `RemoteConnection`, add a new constants for the HTTP verbs used and tidy up some of the `execute` code.  I'm not sure if the assert statement was ever firing here; I assume a `KeyError` would of been raised before it for the case it was 'attempting' to handle (will investigate)  `_commands` was non-public API so should be ok to rename it  Todo:  - reference `_COMMANDS` in subclasses  - move http verbs to a more central place to use in other `RemoteConnection` classes","closed","","symonk","2022-06-07T20:18:59Z","2022-06-10T23:42:41Z"
"","10751","Remove flag for network","Removing build --noexperimental_sandbox_default_allow_network  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-06-09T07:55:01Z","2022-06-09T09:52:10Z"
"","10562","[py] Remove redundant unicode string prefixing in keys / windows","Removes cases of prefixing literals with `u` for unicode strings; this is the default now.","closed","","symonk","2022-04-19T18:57:33Z","2022-05-10T09:10:39Z"
"","10716","[py]: remove redundant actions array of `action_chains`","remove the redundant `_actions` attribute of `ActionChains`, this is unused and just reassigned to an empty list.","closed","","symonk","2022-05-31T15:25:32Z","2022-06-09T10:48:24Z"
"","10832","[java] Add status endpoint","Related to #10725  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add /status endpoint as described in W3C spec  ### Motivation and Context  Add /status endpoint as described in W3C spec  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-06-30T11:27:55Z","2022-07-06T07:32:05Z"
"","10462","[python] replace misuses of `typing.NoReturn`","Recent introduction of typing has a few incorrect use cases; This patch addresses misuses of `typing.NoReturn` which should be used when a function has no possibility of returning, mostly used incorrectly in place of `None` on various setters.  I will audit the other uses of `NoReturn` throughout; consider this a start for now.  closes #10429 (eventually)  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","symonk","2022-03-20T17:01:42Z","2022-04-08T12:40:49Z"
"","10432","When I run the app with GRID4, it says ""Unable to determine element locating strategy for -android uiautomator"" ，I reported an error to appium, but appium said it was caused by you","quest link：https://github.com/appium/appium/issues/16550","closed","needs-triaging,","tianyao1111","2022-03-10T06:50:21Z","2022-04-15T00:10:35Z"
"","9923",".NET / C# - Selenium 4.0 - Invalid cookie configuration: SameSite=None must be Secure","My code ran fine in Selenium 3.x However after upgrading to V4, I can no longer read some cookies.  ```csharp OpenQA.Selenium.WebDriverException : Unexpected problem getting cookies   ----> System.ArgumentException : Invalid cookie configuration: SameSite=None must be Secure    at OpenQA.Selenium.CookieJar.GetAllCookies()    at OpenQA.Selenium.CookieJar.get_AllCookies()    at OpenQA.Selenium.CookieJar.GetCookieNamed(String name) ```","closed","","thomhurst","2021-10-14T12:38:14Z","2021-11-14T00:06:44Z"
"","10656","[py] simplify boolean checks for `_identify_http_proxy_auth`","minor; simplify the boolean check when checking proxy auth data","closed","C-py,","symonk","2022-05-16T21:09:19Z","2022-05-23T20:16:59Z"
"","10596","[py] Bugfix: `text_to_be_present_in_element_attribute` predicate checking","minor tweak for `text_to_be_present_in_element_attribute` which is referencing another expected condition however it is evaluating the result of that call in a boolean context; that function is returning a predicate function and not it's respective boolean return type.  closes #10592","closed","","symonk","2022-05-01T12:24:01Z","2022-05-01T21:13:34Z"
"","10492","`python`: fix `tox -e docs` by pinning `Jinja2`","Looks like `Jinja2` released a few updates on 24th & 25th of March that our `tox -e docs` is auto aquiring due to lack of pinning in there?  I've pinned `Jinja2` on an older working version and my local `tox -e docs` now exits `0`.  before: ```console Running Sphinx v1.8.2  Extension error: Could not import extension sphinx.builders.latex (exception: cannot import name 'contextfunction' from 'jinja2' (/home/{user}/workspaces/selenium/py/.tox/docs/lib/python3.7/site-packages/jinja2/__init__.py)) ```  after: ```console dumping object inventory... done build succeeded, 26 warnings.  The HTML pages are in ../build/docs/api/py. _________________________________________________________________________________________________________________ summary _________________________________________________________________________________________________________________   docs: commands succeeded   congratulations :) ```  Sphinx `1.8.2` is extremely old; we should maybe consider updating that in the very near future.  Example of an impacted PR: https://github.com/SeleniumHQ/selenium/pull/10490","closed","","symonk","2022-03-29T22:08:04Z","2022-03-30T20:33:01Z"
"","9964","fix some typos, mostly in Java code","Just fixed some typos in comments and tests.  reworked version of https://github.com/SeleniumHQ/selenium/pull/9937","closed","","asolntsev","2021-10-21T07:17:41Z","2021-10-21T20:48:37Z"
"","10063","#9784 use `shutdown()` instead of `shutdownNow()`","it waits for completion of already started tasks. Otherwise it may causes errors in those tasks, including succeeding NoClassDefFoundError.  ### Description  One more fix for https://github.com/SeleniumHQ/selenium/issues/9784 ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)","closed","","asolntsev","2021-11-19T23:31:18Z","2021-11-24T07:00:55Z"
"","9903","[py] allow relative locators to take by and value kwargs","Is this worth the added complexity?","closed","C-py,","titusfortner","2021-10-12T05:18:24Z","2021-10-12T11:05:19Z"
"","10651","[py]: exclude `*venv` directories from `flake8`","Invoking `tox` is a requirement currently and not something that bazel does; this means people need to typically make a virtualenv and install `tox` in it to do this task; installing `tox` globally is also possible but not -advised (but that won't encounter the problem this fixes if so).  Common python practice would be:  `python3.7 -m venv .venv` || `python3.7 -m venv venv` ( in the case of using 3.7 like selenium encourages)  This excludes `*venv` so that `tox -e flake8` does not take a long time to complete and flag up 200+ false positives by scanning files inside the virtual env.","closed","C-py,","symonk","2022-05-15T14:20:27Z","2022-06-09T15:17:14Z"
"","9950","IEDriver NewWindow3 API workaround solution for Edge IEMode","IEDriver NewWindow3 API workaround solution for Edge IEMode  ### Description This PR is to provide a workaround solution for IEDriver to track new created windows in Edge IEMode.   ### Motivation and Context When IEDriver drives IE browser, there is a [NewWindow3 ](https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa768288(v=vs.85)) API to help create new window and keep these new created window on track.   When IEDriver drives Edge browser in IEMode, there is no such NewWindow3 API in Edge Browser. This PR is to create a workaround solution to help IEDriver track new created windows in Edge IEMode without using the NewWindow3 API.   ### Types of changes Note that when Edge runs in IEMode, all IE windows are wrapped by an Edge window. That means, every IE window is a child window of a Edge window. It is possible to keep track of all IE window handles before and after a new window created. By comparing the window handles before after a new window event, the new window handles created from client side JS codes can be identified and tracked in IEDriver.","closed","","guangyuexu","2021-10-18T21:04:46Z","2021-10-25T13:57:57Z"
"","10164","[java] Passing port 0 for testing","Ideally, the InetSocketAddress will pick the server port and then we retrieve for tests. This should make things more stable, as we are getting often ""port already in use"" errors.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  To make tests more stable 🤞   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-12-18T20:10:54Z","2021-12-18T21:00:34Z"
"","10027","automatically provide links and close issues that depend on fixes in …","I've seen us send people to other projects regularly. How about if we create specific labels for these so we can track them, as well as make sure we are providing all the necessary info to users?  Any suggestions on content to make this more clear?","closed","","titusfortner","2021-11-11T21:22:13Z","2021-11-16T08:28:39Z"
"","10199","[dotnet] implement setting pointer event properties","I'm pretty sure I'm violating some .NET conventions on this one, but here's an implementation for #9996","closed","C-dotnet,","titusfortner","2021-12-30T05:52:41Z","2022-05-07T16:26:00Z"
"","10112","Ruby Scroll Methods","I'm making a lot of comparisons of the new `scroll` action to our existing implementation of the `pointerMove` action. Ideally we can have something similar in all the languages.  My proposal for Java/.NET looks like this: https://gist.github.com/titusfortner/716e108a813dbce601c25cb250c01925 I'm basing this implementation off of that while still staying Ruby.   I went with just a `Hash` return because I can't create an `#as_json` method for an `OpenStruct`, and a `Struct` seems a bit heavy for these. Also not sure if the namespacing makes the most sense for `ScrollOptions` since `WheelActions` itself is only imported into `ActionBuilder`.","closed","","titusfortner","2021-12-03T17:24:28Z","2022-01-05T21:22:43Z"
"","10773","[py]: Enable co-operative multi inheritance with `super()` throughout","I updated most of the code to be python3.7+ syntactically, a few outliers referencing their parent class explicitly by name. This patch addresses all cases of that throughout the code.  This will allow co-operative multi inheritance (leaving mro to python rather than strictly naming the class) should we/a user wish to benefit from it and make things syntactically tidier.  closes #10769","closed","","symonk","2022-06-15T08:22:49Z","2022-06-15T19:06:50Z"
"","10739","[java] remove excessive warnings about invalid capabilities","I think this will remove all the unnecessary warnings, especially from IE.  Running tests to see if it breaks anything (shouldn't).","closed","C-java,","titusfortner","2022-06-06T17:42:49Z","2022-06-08T09:43:44Z"
"","10712","[py]: remove deprecated `find_element_by_` methods","I think this is alright for `4.3` now.  Removal of `find_element_by_` methods throughout the python bindings.  I don't think any tests where running through those but instead the correct `find_element|find_elements`.  Will grab fallout from CI if any occurs.  Likely some `docs` related fallout here, will address as I find it.","closed","C-py,","symonk","2022-05-29T15:16:06Z","2022-07-05T22:40:06Z"
"","10640","[web] add index to webpages","I tested this on another site to make sure the right things are pulled from the API, but I wasn't able to verify the links are actually correct. Do they rate limit API calls to an endpoint or only ones that require authentication?","closed","","titusfortner","2022-05-12T17:02:50Z","2022-06-27T15:34:47Z"
"","10209","[java] remove references to invalid errors","I ran across a reference to an invalid error in something else I was working on and realized the ErrorCodec list is out of date with current w3c errors. I think these errors are getting used by the grid? I don't see references to them in the code base otherwise.  I'm not sure what is needed for backwards compatibility, or why the invalid ones aren't causing problems, and why the ShadowRootException not being on this list isn't an issue, and what tests we're missing for these one way or another.   This would all be much easier if we could remove JWP support like we'd originally planned.  This PR will run the Java tests and I'll see if there's anything important this breaks (hopefully). Otherwise let me know if I've gotten too delete happy.","closed","C-java,","titusfortner","2021-12-31T16:28:00Z","2022-05-23T15:17:41Z"
"","10563","[py] use `get_timeout()` for urllib pool manager timeouts in remote connection, prevents passing the default socket object directly","I noticed we are passing the `socket._GLOBAL_DEFAULT_TIMEOUT` object into the `urllib` pool manager which I think is a mistake; there already exists a `get_timeout()` that returns `None` under that instance; I think we should be calling that instead?  A lot of this is class level state on the `RemoteConnection` instance; should we move it into the instance and use `socket.getdefaulttimeout()`? when setting this state it leaks across tests as a bad side effect of global state; so using monkeypatch to tidy up some of the impacted areas","closed","","symonk","2022-04-19T23:09:24Z","2022-04-29T10:52:36Z"
"","9911","[py] BiDi APIs for python That's too bad","https://www.selenium.dev/documentation/webdriver/bidi_apis/  * Register Basic Auth  Python(selenium) has no `driver.register()`  --- this is bug?  * Mutation Observation  ```py  from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait  driver = webdriver.Chrome() async with driver.log.mutation_events() as event:     pages.load(""dynamic.html"")     driver.find_element(By.ID, ""reveal"").click()     WebDriverWait(driver, 5)\         .until(EC.visibility_of(driver.find_element(By.ID, ""revealed"")))  assert event[""attribute_name""] == ""style"" assert event[""current_value""] == """" assert event[""old_value""] == ""display:none;""  ``` 1. Python(selenium) has no `dirver.log` 2. How is `pages` defined?   Who can tell me how to use it:  ```py import asyncio from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.common.log import Log from selenium.webdriver.support import expected_conditions as EC   async def demo():     driver = webdriver.Chrome()     session = driver.bidi_connection()     log = Log(driver, session)      async with log.mutation_events() as event:         driver.get(""https://www.google.com"")         driver.find_element(By.ID, ""reveal"").click()         WebDriverWait(driver, 5)\             .until(EC.visibility_of(driver.find_element(By.ID, ""revealed"")))      assert event[""attribute_name""] == ""style""     assert event[""current_value""] == """"     assert event[""old_value""] == ""display:none;""  asyncio.run(demo()) ```  error:  ```shell Traceback (most recent call last):   File ""D:/github/test-circle/selenium4/code/demo.py"", line 25, in      asyncio.run(demo())   File ""C:\Python38\lib\asyncio\runners.py"", line 44, in run     return loop.run_until_complete(main)   File ""C:\Python38\lib\asyncio\base_events.py"", line 616, in run_until_complete     return future.result()   File ""D:/github/test-circle/selenium4/code/demo.py"", line 12, in demo     log = Log(driver, session)   File ""C:\Python38\lib\site-packages\selenium\webdriver\common\log.py"", line 48, in __init__     self.session = bidi_session.session AttributeError: '_AsyncGeneratorContextManager' object has no attribute 'session' ```  Must asyncio be used？ Why provide asyncio examples, and incomplete？","closed","","defnngj","2021-10-13T17:06:12Z","2021-11-13T00:06:29Z"
"","10197","Added possibility to reduce stacktrace from WebDriverWait","https://github.com/SeleniumHQ/selenium/issues/10195  ### Motivation and Context I wanna have possibility to reduce stacktrace output from WebDriverWait.until due to long output (see picture). ![image](https://user-images.githubusercontent.com/36446855/147663426-bde1055d-95f0-47c0-9aa8-9a49959e0410.png)   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","D-chrome,","VladimirPodolyan","2021-12-29T12:47:29Z","2022-05-22T18:46:19Z"
"","10817","[py]: Fix a bug with some invalid generated python modules for devtools","Highlighted in #10804 I had a quick look at the modules generated are referencing other classes inside the `debugger.py` by the `debugging.ClassName` which is not available in the name space; causing the error.  This small patch handles that particular edge case; however the auto generation library we are using is a little out dated, as `devtools` keeps moving forward we should be wary of that (I know we wan't to technically drop devtools as quickly as possible in favour of bidi)  `DebugSymbols` & `ScriptLanguage` was added in `r814213`, I think we are quite out dated.  I still need to test the change(s) here but the generated files are subsequently 'patched' to use the term loosely.  closes #10804   output of generation now using `../common/devtools/*.json`   Now:  ```python     @classmethod     def from_json(cls, json: T_JSON_DICT) -> ScriptParsed:         return cls(             script_id=runtime.ScriptId.from_json(json['scriptId']),             url=str(json['url']),             start_line=int(json['startLine']),             start_column=int(json['startColumn']),             end_line=int(json['endLine']),             end_column=int(json['endColumn']),             execution_context_id=runtime.ExecutionContextId.from_json(json['executionContextId']),             hash_=str(json['hash']),             execution_context_aux_data=dict(json['executionContextAuxData']) if 'executionContextAuxData' in json else None,             is_live_edit=bool(json['isLiveEdit']) if 'isLiveEdit' in json else None,             source_map_url=str(json['sourceMapURL']) if 'sourceMapURL' in json else None,             has_source_url=bool(json['hasSourceURL']) if 'hasSourceURL' in json else None,             is_module=bool(json['isModule']) if 'isModule' in json else None,             length=int(json['length']) if 'length' in json else None,             stack_trace=runtime.StackTrace.from_json(json['stackTrace']) if 'stackTrace' in json else None,             code_offset=int(json['codeOffset']) if 'codeOffset' in json else None,             # culprits below:             script_language=ScriptLanguage.from_json(json['scriptLanguage']) if 'scriptLanguage' in json else None,             debug_symbols=DebugSymbols.from_json(json['debugSymbols']) if 'debugSymbols' in json else None         ) ```  vs trunk:  ```python             code_offset=int(json['codeOffset']) if 'codeOffset' in json else None,             # cannot reference via such a namespace:             script_language=debugger.ScriptLanguage.from_json(json['scriptLanguage']) if 'scriptLanguage' in json else None,             debug_symbols=debugger.DebugSymbols.from_json(json['debugSymbols']) if 'debugSymbols' in json else None         ) ```","open","","symonk","2022-06-26T21:15:50Z","2022-07-11T20:59:26Z"
"","10241","Seems to mouse must be ON THE element to being clickable. Help","Hi, excuse me. I have an issue related to click() made but doesn't happen; it would be because of the same case? I'm attaching a screenshot below or in the next comment.  ""Whether you use click using JS or click using the native method. This problem will be there when there are multiple instances of browsers are running or your VM is too slow. The only solution I have seen working so far os checking next condition and re-click after a few seconds say 20 seconds or so (but not so soon like 1-2 seconds).  My best guess is when there is a resource crunch, the browser does not complete event binding with the object even when DOM status is completed.""  _Originally posted by @vinaybond in https://github.com/SeleniumHQ/selenium/issues/4075#issuecomment-437759475_","closed","I-issue-template,","fabianmendes","2022-01-10T20:39:52Z","2022-02-10T00:07:25Z"
"","10560","[py] proof of concept; formatting python code with `black`.","Hi, a quick proof of concept I'd like to discuss using something like black (https://github.com/psf/black) to apply to our python codebase.  This is a naive implementation, consider this PR mainly for discussions.  I think it's critical to get consistency across the python code base to make contributing as simple as possible with a clean (automatic) UX.  Ideally I'd like to get something like `pre-commit` (https://github.com/pre-commit/pre-commit) applying this stuff automatically on git pre-commit to avoid needless churn and be as as effecient as possible; formatting is only one small benefit there, we can use it to automate a whole heap of useful stuff.  Thoughts?  If we feel this is beneficial I will look at implementing it properly; for now I have just did a 'quick pass' of the tooling to show what it may look like.  I think the consistency is a massive plus.  We can make slight adjustments to the configuration if we need, or even go with a completely different formatter but I'd like to see something alongside `flake8`.  I would strongly push implementing `pre-commit` with some hooks on the client side.  [Do not merge this with tox/setup configuration as is; for demo purposes only]","closed","C-py,","symonk","2022-04-19T18:36:42Z","2022-05-09T22:59:08Z"
"","9914","Error Building dotnet project in Windows","Hello,  I'm trying to build the dotnet project in windows but I'm having issues. I have tried to build it using two different ways:  1. Using Visual Studio 2019. After installing the dependencies, I'm able to build the `Webdriver` project, but when I try to build the project `Webdriver.Common.Tests` then I get some issues similar to the this one:  ```txt C:/users//_bazel_/io65vnbs/external/maven/BUILD:1737:8: Executing genrule @maven//:io_netty_netty_transport_native_epoll_4_1_67_Final_extension failed: (Exit 127): bash.exe failed: error executing command ``` 2. Using the command line. Running the command `bazel build dotnet/...` ```txt ERROR: C:/github/selenium/dotnet/src/webdriverbackedselenium/BUILD.bazel:227:11: in src attribute of nuget_push rule //dotnet/src/webdriverbackedselenium:publish: '//dotnet/src/webdriverbackedselenium:package' must produce a single file ERROR: C:/github/selenium/dotnet/src/webdriverbackedselenium/BUILD.bazel:227:11: Analysis of target '//dotnet/src/webdriverbackedselenium:publish' failed ERROR: file 'dotnet/test/common/bazelout/netcoreapp2.1/Newtonsoft.Json.dll' is generated by these conflicting actions: Label: //dotnet/test/common:edge, //dotnet/test/common:firefox RuleClass: nunit_test rule Configuration: aa07a07519e82af810774c182569ca55c645d883994ca9f38206e0a45c93967d Mnemonic: CopyFile Action key: 8e55144576d1ad53f03a8496f5eef0c6956cea29389c534297527ed5abb5881c, 1170696927e279935540456bb63d6023998c9e71393f04e77a136632e239f270 Progress message: Copying files PrimaryInput: File:[C:/users//_bazel_/io65vnbs/external/json.net[source]]lib/netstandard2.0/Newtonsoft.Json.dll PrimaryOutput: File:[[]bazel-out/x64_windows-fastbuild/bin]dotnet/test/common/bazelout/netcoreapp2.1/Newtonsoft.Json.dll Owner information: ConfiguredTargetKey{label=//dotnet/test/common:edge, config=BuildConfigurationValue.Key[aa07a07519e82af810774c182569ca55c645d883994ca9f38206e0a45c93967d]}, ConfiguredTargetKey{label=//dotnet/test/common:firefox, config=BuildConfigurationValue.Key[aa07a07519e82af810774c182569ca55c645d883994ca9f38206e0a45c93967d]} MandatoryInputs: Attempted action contains artifacts not in previous action (first 5):         dotnet/test/common/edge-copy-files.bat Previous action contains artifacts not in attempted action (first 5):         dotnet/test/common/firefox-copy-files.bat Outputs: are equal ERROR: com.google.devtools.build.lib.skyframe.ArtifactConflictFinder$ConflictException: com.google.devtools.build.lib.actions.MutableActionGraph$ActionConflictException: for dotnet/test/common/bazelout/netcoreapp2.1/Newtonsoft.Json.dll, previous action: action 'Copying files', attempted action: action 'Copying files' INFO: Elapsed time: 57.083s INFO: 0 processes. FAILED: Build did NOT complete successfully (360 packages loaded, 12877 targets configured) ```  Any idea what can be the issue?  Thanks.","closed","","sarvaje","2021-10-13T20:15:01Z","2021-11-13T00:06:27Z"
"","10784","[wip][py] Streamline API of Safari webdriver","Heavily a draft still, please see the todos here; there is still plenty of work to do, but I figured if I took one driver in particular and make a start in tidying stuff up; `RemoteWebDriver` accepts optional `Options` so we should be able to do individual drivers like this rather than do the `RemoteWebDriver` first and be forced to do all drivers in one PR/swoop.  Still to do:  - Update accurate docs throughout  - Improve types where free wins can be made  - Tests & Docs fallout  - Check all diff is not API breaking","open","","symonk","2022-06-18T16:34:54Z","2022-07-11T21:02:37Z"
"","10457","@titusfortner @stevenerat Getting error classCastException after change the as you guys suggested.","Getting error after changing the code as you mention.  **java.lang.ClassCastException: org.openqa.selenium.support.events.EventFiringWebDriver cannot be cast to org.openqa.selenium.remote.RemoteWebDriver**  I am using Below code  WebElement shadow_host = driver.findElement(By.id(""shadow_host"")); Object shadowRoot = ((JavascriptExecutor) driver).executeScript(""return arguments[0].shadowRoot"", shadow_host);  String id = (String) ((Map) shadowRoot).get(""shadow-6066-11e4-a52e-4f735466cecf""); RemoteWebElement remoteWebElement = new RemoteWebElement(); remoteWebElement.setParent(driver); remoteWebElement.setId(id); WebElement insideDOM = remoteWebElement.findElement(By.id(""inside_dom""))  **Selenium 3.14 and chrome version 99**  Kindly suggest.","closed","I-question,","trs1993","2022-03-18T07:48:31Z","2022-04-18T00:12:04Z"
"","10230","[java] Make the connection method call back map thread-safe","Fixes #9889  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9889  ### Motivation and Context  The map used to store method callbacks when creating CDP connection is not thread-safe. So when the condition arises, if multiple CDP commands are issues simultaneously then some commands might not be fulfilled and will throw a TimeoutException instead of returning the respective result.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-01-07T06:10:04Z","2022-01-08T22:59:35Z"
"","10700","[Java] Convert RemoteWebElement::getLocation and ::getSize from JWP Standard to W3C Standard","Fixes #10698 as part of #10374  This switches two commands that were left over from JWP (which is no longer supported) to use a W3C command instead and achieve the same result.   ### Description `GET_ELEMENT_LOCATION` and `GET_ELEMENT_SIZE` have been changed to `GET_ELEMENT_RECT` inside the respective `getLocation` and `getSize` functions of `RemoteWebElement`  ### Motivation and Context Anyone running tests in W3C mode will not be able to use these functions as they will throw an exception for trying to use invalid commands.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","BJap","2022-05-26T21:43:13Z","2022-05-27T17:42:43Z"
"","10818","Use `which()` to get Firefox path on Mac OS","Fixes #10686    ### Description The Firefox binary under Mac OS was using a hardcoded path. This was failing when trying to manipulate PATH env var to use Firefox from a different location or if Firefox was installed in a different place.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bogdancondurache","2022-06-27T10:07:29Z","2022-07-18T08:06:15Z"
"","10667","[java] prevent session from ending when cannot connect to sockets","fixes #10661  It looks like the way all Java AugmenterProviders work is by storing `getImplementation()`, so I don't see a way to wait for a user to try to use a DevTools function to make this call.  This does 2 things. 1. Rescues the exception by default so that no session gets killed as a result of this 2. Sets up a new capability to prevent the Augmenter from even adding this. The other advantage is that the methods from this Augmentation won't be added or usable in such a session  I've tested it and it works on Firefox, but couldn't figure out a way to add it to the test suite right now. Also, I couldn't figure out how to do something similar for `HasCDP` augmentation.  If either of you can help on these, that would be helpful. Thanks.","closed","C-java,","titusfortner","2022-05-18T16:12:58Z","2022-05-24T11:46:19Z"
"","10682","[py] extend typing options for get_property()","fixes #10624  Extend list of types which can be returned byt `get_property()` method.  ### Description  Current typing options does not cover all possible types returned by get_property()  For example  * `clientHeight` property is returned as int * `fooBar` property is returned as NoneType * `childNodes` property is returned as list   ### Motivation and Context  Linters (like mypy or PyCharm) complains about `get_property()` usage when we expect one of mentioned data type.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","open","C-py,","eNcacz","2022-05-23T06:42:15Z","2022-07-25T09:07:41Z"
"","10873","[dotnet] Including xml docs in nuget package","Fixes #10371 ?  I'm not sure, wrote code in notepad. If you can provide me within built nuget package from this PR, I can answer whether xml docs are inluded.  - [ ] Do not forget to make the same changes for `WebDriver.Support` package.","open","","nvborisenko","2022-07-13T23:38:19Z","2022-07-20T18:15:28Z"
"","10250","Fix added missing quotation marks in examples","Fixes #10249   ### Description Fix missing quotations, Backslashes, and some #  ### Motivation and Context Fixing documentation issues  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","boris779","2022-01-14T09:44:01Z","2022-01-20T13:47:49Z"
"","10463","[py] remove unused `kind` arg of `WheelInput`","Fixes #10210, this method looks like it blindly copy/pasted from `add_pointer_input(...)` originally.  Still need to add a test for this and looking at `WheelInput` in general it looks a little neglected/unused, will try understand what it's for exactly and tidy up.  (tests incoming when my local setup is working shortly)  I suspect there is more work to do on this class; some instances are being passed `name=interaction.WHEEL` but it defines internally a `self.type=interaction.WHEEL` so possibly other bugs there as well.","closed","C-py,","symonk","2022-03-20T17:35:51Z","2022-05-09T15:30:03Z"
"","9929","update doc string for CDP Commands","Fixed spelling issue and fixed the return statement to be of Promise  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x ] My change requires a change to the documentation. - [ x] I have updated the documentation accordingly. - [ x] I have added tests to cover my changes. - [ x] All new and existing tests passed.  Fixed spelling issue and fixed the return statement to be of Promise","closed","","mastrzyz","2021-10-14T19:13:08Z","2021-10-15T05:36:09Z"
"","10120","Fixed incorrect use of `NoReturn` type-hint for Python.","Fixed incorrect use of `NoReturn` type-hint for Python.  ### Description   The [NoReturn](https://docs.python.org/3/library/typing.html#typing.NoReturn) type-hint in Python indicates the function never returns (e.g., it always raises an exception). These methods are incorrectly marked as `NoReturn` when they in fact either return no value (`None`) or raise an exception on error. These should be hinted using `None`.     ### Motivation and Context   It fixes some incorrect type-hints.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","cpburnz","2021-12-08T22:59:23Z","2021-12-24T22:00:16Z"
"","9939","Fix XPath crash issue in IEDriver","Fix IEDriver XPath crash issue  ### Description This PR is to fix XPath crash issue tracked in #9938   ### Motivation and Context The XPath crash issue in IEDriver was caused by regex update from this commit: https://github.com/SeleniumHQ/selenium/commit/cf49ba23. The IEDriver crashed when IE (or Edge in IEMode) tried to parse the unicode regex ending with `/gu`.   ### Types of changes In this PR, a browser type check is added to let IE (or Edge in IEMode) use `/g` regex and other browsers use `/gu` unicode regex in the file.  In addition, this PR generated the file atoms.h to reflect the changes in javascript/atom and updated the file for IEDriver.","closed","","guangyuexu","2021-10-15T23:19:38Z","2021-10-18T15:41:35Z"
"","10919","Handle OutOfMemoryError in remote driver","Fix for issue #10870 https://github.com/SeleniumHQ/selenium/issues/10870 - OutOfMemoryError handle in RemoteWebDriver - OutOfMemoryError handle in NoClassDefFoundError  To isolate any remote error from a local issue.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","open","","automationpi","2022-08-03T17:40:23Z","2022-08-03T18:20:45Z"
"","10814","#10812 don't allow selecting a disabled option","fix for #10812","open","C-java,","asolntsev","2022-06-25T21:20:25Z","2022-06-29T14:23:12Z"
"","10723","[py]: fix `flake8` violations in trunk","fix flake8 in trunk.","closed","","symonk","2022-06-01T15:29:32Z","2022-06-01T16:45:40Z"
"","10655","[py] implement `__all__` for `selenium.common`","Expose all exceptions in the public API of `selenium.common`.  Relates to: #10643","closed","C-py,","symonk","2022-05-16T21:04:11Z","2022-05-23T20:58:25Z"
"","10072","Fix wrong type annotations for ""env"" it's a dict not a string","env used here: https://github.com/SeleniumHQ/selenium/blob/adeca5c45a9c5c666cb0d81952fff0964d82f24d/py/selenium/webdriver/common/service.py#L48 and passed to subprocess here: https://github.com/SeleniumHQ/selenium/blob/adeca5c45a9c5c666cb0d81952fff0964d82f24d/py/selenium/webdriver/common/service.py#L71","closed","","jedie","2021-11-22T08:44:14Z","2021-11-22T10:35:00Z"
"","10346","#10345 make driver.close() tolerant to CDP failures","Driver should still be closed even if failed to disconnect DevTools session (which apparently happens because Selenium doesn't support current version of browser's CDP)  ### Description Fixes URGENT bug with latest Firefox https://github.com/SeleniumHQ/selenium/issues/10345   ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","asolntsev","2022-02-09T16:22:34Z","2022-02-11T15:19:22Z"
"","10621","Update of Java and .NET Tests","Draft PR to run the tests and troubleshoot problems.  Mostly fixes to get .NET tests passing on Mac which fixed things in Windows as well. Went back and forth between the Java & .NET tests to make sure both were up to date and properly documented.","closed","","titusfortner","2022-05-09T02:26:49Z","2022-05-09T05:54:46Z"
"","10625","[py]: Deprecate `opera` webdriver & options in prep for removal in `4.3`","Deprecate opera driver `Options` and `WebDriver` subclass usage.  I have added appropriate 'rip out' todo's so grepping for `# Todo: gh-10379 (Remove for 4.3)` will yield everything that needs removed after 4.2 is cut; and we can properly remove it for `4.3` .  There isn't actually any `opera` webdriver based tests outside of basic unit/options ones so I didn't invest the time into that here as i'll be removing it in a few days again.  relates to #10379","closed","C-py,","symonk","2022-05-09T17:00:17Z","2022-05-10T15:52:30Z"
"","10035","package-lock update","depandabot npm and yarn","closed","C-nodejs,","hixio-mh","2021-11-13T08:53:53Z","2021-11-18T21:37:10Z"
"","10657","[py]: Align error handling to `W3C`","Converts the error codes into a `Tuple` as they are immutable and adds appropriate type hints for them. Removes unused vars `screen` & `stacktrace` as they are redefined later when used.","open","C-py,","symonk","2022-05-16T21:22:07Z","2022-07-14T22:26:50Z"
"","10911","Fix issue #10908. But the Grid crash issue need to be fix to merge this.","Commented code that checks for service is not available. So that grid default timeouts and retries kicks-in.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","ketanvj","2022-07-28T14:26:29Z","2022-08-03T08:19:07Z"
"","10567","docs: use Browser constants for browser name","Cleanup the nodejs bindings  ### Description Cleanup the browser name usage in the readme of   ### Motivation and Context This is a better approach that can avoid typo errors  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Meir017","2022-04-20T14:10:50Z","2022-04-20T15:59:56Z"
"","10356","Pre-process SameSite value before put it into caps","ChromeDriver is overly restrictive in which SameSite values are accepted. canonicalize the known good values in https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite","closed","C-grid,","katrina95","2022-02-10T17:25:12Z","2022-03-28T19:56:50Z"
"","10403","update IRC server","change IRC server from freenode to liberachat  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","luisfcorreia","2022-02-28T12:59:34Z","2022-02-28T16:11:54Z"
"","10210","[🐛 Bug]: action_builder.ActionBuilder.add_wheel_input throws TypeError","Calling `ActionBuilder.add_wheel_input()` will always throw a `TypeError`. There are no tests or docs that I can see, so I'm unsure whether to remove the `kind` argument from `add_wheel_input` or add it to `WheelInput.__init__()`. This appears to have been the case since [it was introduced](https://github.com/SeleniumHQ/selenium/commit/122c9f9feaa69a3d052858c307f86e3cb37e85b4).  ### How can we reproduce the issue?  You can reproduce the `TypeError` without even creating a `WebDriver` instance by doing:  ```python >>> from selenium.webdriver.common.action_chains import ActionChains >>> ActionChains('').w3c_actions.add_wheel_input('', '') Traceback (most recent call last):   File """", line 1, in    File "".../selenium/webdriver/common/actions/action_builder.py"", line 77, in add_wheel_input     new_input = WheelInput(kind, name) TypeError: __init__() takes 2 positional arguments ```","closed","I-defect,","colons","2021-12-31T19:05:15Z","2022-06-09T00:11:21Z"
"","10894","Bump terser from 5.13.1 to 5.14.2 in /javascript/grid-ui","Bumps [terser](https://github.com/terser/terser) from 5.13.1 to 5.14.2.  Changelog Sourced from terser's changelog.  v5.14.2  Security fix for RegExps that should not be evaluated (regexp DDOS) Source maps improvements (#1211) Performance improvements in long property access evaluation (#1213)  v5.14.1  keep_numbers option added to TypeScript defs (#1208) Fixed parsing of nested template strings (#1204)  v5.14.0  Switched to @​jridgewell/source-map for sourcemap generation (#1190, #1181) Fixed source maps with non-terminated segments (#1106) Enabled typescript types to be imported from the package (#1194) Extra DOM props have been added (#1191) Delete the AST while generating code, as a means to save RAM     Commits  See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=terser&package-manager=npm_and_yarn&previous-version=5.13.1&new-version=5.14.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-07-21T03:28:21Z","2022-07-26T14:17:36Z"
"","10889","Bump terser from 5.10.0 to 5.14.2","Bumps [terser](https://github.com/terser/terser) from 5.10.0 to 5.14.2.  Changelog Sourced from terser's changelog.  v5.14.2  Security fix for RegExps that should not be evaluated (regexp DDOS) Source maps improvements (#1211) Performance improvements in long property access evaluation (#1213)  v5.14.1  keep_numbers option added to TypeScript defs (#1208) Fixed parsing of nested template strings (#1204)  v5.14.0  Switched to @​jridgewell/source-map for sourcemap generation (#1190, #1181) Fixed source maps with non-terminated segments (#1106) Enabled typescript types to be imported from the package (#1194) Extra DOM props have been added (#1191) Delete the AST while generating code, as a means to save RAM  v5.13.1  Removed self-assignments (varname=varname) (closes #1081) Separated inlining code (for inlining things into references, or removing IIFEs) Allow multiple identifiers with the same name in var destructuring (eg var { a, a } = x) (#1176)  v5.13.0  All calls to eval() were removed (#1171, #1184) source-map was updated to 0.8.0-beta.0 (#1164) NavigatorUAData was added to domprops to avoid property mangling (#1166)  v5.12.1  Fixed an issue with function definitions inside blocks (#1155) Fixed parens of new in some situations (closes #1159)  v5.12.0  TERSER_DEBUG_DIR environment variable @​copyright comments are now preserved with the comments=""some"" option (#1153)  v5.11.0  Unicode code point escapes (\u{abcde}) are not emitted inside RegExp literals anymore (#1147) acorn is now a regular dependency     Commits  See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=terser&package-manager=npm_and_yarn&previous-version=5.10.0&new-version=5.14.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-07-20T12:19:52Z","2022-07-26T14:17:09Z"
"","10306","Bump path-parse from 1.0.6 to 1.0.7 in /javascript/node/selenium-webdriver","Bumps [path-parse](https://github.com/jbgutierrez/path-parse) from 1.0.6 to 1.0.7.  Commits  See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=path-parse&package-manager=npm_and_yarn&previous-version=1.0.6&new-version=1.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-01-30T03:57:07Z","2022-02-03T09:55:41Z"
"","10798","Bump Newtonsoft.Json from 12.0.3 to 13.0.1 in /dotnet/test/common","Bumps [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) from 12.0.3 to 13.0.1.  Release notes Sourced from Newtonsoft.Json's releases.  13.0.1  New feature - Add JsonSelectSettings with configuration for a regex timeout Change - Remove portable assemblies from NuGet package Change - JsonReader and JsonSerializer MaxDepth defaults to 64 Fix - Fixed throwing missing member error on ignored fields Fix - Fixed various nullable annotations Fix - Fixed annotations not being copied when tokens are cloned Fix - Fixed naming strategy not being used when deserializing dictionary enum keys Fix - Fixed serializing nullable struct dictionaries Fix - Fixed JsonWriter.WriteToken to allow null with string token Fix - Fixed missing error when deserializing JToken with a contract type mismatch Fix - Fixed JTokenWriter when writing comment to an object     Commits  ae9fe44 Remove compiler package and update sourcelink (#2498) 8ef6621 Remove prerelease for 13.0.1 11331f5 Update SDK to 5.0.200 (#2495) c7e8abc Update to 13.0.1-beta2 1745d7c Fix JTokenWriter when writing comment to an object (#2493) 583eb12 Fix missing error when deserializing JToken with a contract type mismatch (#2... b6dc05b Change MaxDepth default to 64 (#2473) 15525f1 Fix JsonWriter.WriteToken to allow null with string token (#2472) 926d2f0 Enable embed untracked sources (#2471) 0a56633 Fixes #2372 - variable typos (#2465) Additional commits viewable in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Newtonsoft.Json&package-manager=nuget&previous-version=12.0.3&new-version=13.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed",".NET,","dependabot[bot]","2022-06-22T15:25:38Z","2022-06-23T04:43:14Z"
"","10797","Bump Newtonsoft.Json from 12.0.3 to 13.0.1 in /dotnet/src/webdriver","Bumps [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) from 12.0.3 to 13.0.1.  Release notes Sourced from Newtonsoft.Json's releases.  13.0.1  New feature - Add JsonSelectSettings with configuration for a regex timeout Change - Remove portable assemblies from NuGet package Change - JsonReader and JsonSerializer MaxDepth defaults to 64 Fix - Fixed throwing missing member error on ignored fields Fix - Fixed various nullable annotations Fix - Fixed annotations not being copied when tokens are cloned Fix - Fixed naming strategy not being used when deserializing dictionary enum keys Fix - Fixed serializing nullable struct dictionaries Fix - Fixed JsonWriter.WriteToken to allow null with string token Fix - Fixed missing error when deserializing JToken with a contract type mismatch Fix - Fixed JTokenWriter when writing comment to an object     Commits  ae9fe44 Remove compiler package and update sourcelink (#2498) 8ef6621 Remove prerelease for 13.0.1 11331f5 Update SDK to 5.0.200 (#2495) c7e8abc Update to 13.0.1-beta2 1745d7c Fix JTokenWriter when writing comment to an object (#2493) 583eb12 Fix missing error when deserializing JToken with a contract type mismatch (#2... b6dc05b Change MaxDepth default to 64 (#2473) 15525f1 Fix JsonWriter.WriteToken to allow null with string token (#2472) 926d2f0 Enable embed untracked sources (#2471) 0a56633 Fixes #2372 - variable typos (#2465) Additional commits viewable in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Newtonsoft.Json&package-manager=nuget&previous-version=12.0.3&new-version=13.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed",".NET,","dependabot[bot]","2022-06-22T15:18:40Z","2022-06-23T04:29:34Z"
"","10407","Bump nanoid from 3.1.30 to 3.3.1 in /javascript/grid-ui","Bumps [nanoid](https://github.com/ai/nanoid) from 3.1.30 to 3.3.1.  Changelog Sourced from nanoid's changelog.  3.3.1  Reduced package size.  3.3  Added size argument to function from customAlphabet (by Stefan Sundin).  3.2  Added --size and --alphabet arguments to binary (by Vitaly Baev).  3.1.32  Reduced async exports size (by Artyom Arutyunyan). Moved from Jest to uvu (by Vitaly Baev).  3.1.31  Fixed collision vulnerability on object in size (by Artyom Arutyunyan).     Commits  ec6f809 Release 3.3.1 version c7d8578 Update dependencies 05b2596 Remove old tests 368a6e7 Remove process.env.NODE_ENV ee7dee3 Remove @​napi-rs/uuid to fix CI defe20f Try to fix CI ee85121 Try to fix CI c7f4219 Sync English and Russian docs f74a41d Release 3.3 version 9c09cdc Fix coverage config Additional commits viewable in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nanoid&package-manager=npm_and_yarn&previous-version=3.1.30&new-version=3.3.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-03-01T19:23:15Z","2022-03-02T09:24:37Z"
"","10483","Bump minimist from 1.2.5 to 1.2.6 in /javascript/grid-ui","Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.  Commits  7efb22a 1.2.6 ef88b93 security notice for additional prototype pollution issue c2b9819 isConstructorOrProto adapted from PR bc8ecee test from prototype pollution PR See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimist&package-manager=npm_and_yarn&previous-version=1.2.5&new-version=1.2.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-03-26T20:45:06Z","2022-03-26T23:35:11Z"
"","10482","Bump minimist from 1.2.5 to 1.2.6","Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.  Commits  7efb22a 1.2.6 ef88b93 security notice for additional prototype pollution issue c2b9819 isConstructorOrProto adapted from PR bc8ecee test from prototype pollution PR See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimist&package-manager=npm_and_yarn&previous-version=1.2.5&new-version=1.2.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-03-26T20:45:05Z","2022-03-26T22:50:40Z"
"","10481","Bump minimist from 1.2.5 to 1.2.6 in /javascript/node/selenium-webdriver","Bumps [minimist](https://github.com/substack/minimist) from 1.2.5 to 1.2.6.  Commits  7efb22a 1.2.6 ef88b93 security notice for additional prototype pollution issue c2b9819 isConstructorOrProto adapted from PR bc8ecee test from prototype pollution PR See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=minimist&package-manager=npm_and_yarn&previous-version=1.2.5&new-version=1.2.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-03-26T20:43:26Z","2022-03-26T22:48:12Z"
"","10305","Bump jszip from 3.6.0 to 3.7.0 in /javascript/node/selenium-webdriver","Bumps [jszip](https://github.com/Stuk/jszip) from 3.6.0 to 3.7.0.  Changelog Sourced from jszip's changelog.  v3.7.0 2021-07-23  Fix: Use a null prototype object for this.files  (see #766)  This change might break existing code if it uses prototype methods on the .files property of a zip object, for example zip.files.toString(). This approach is taken to prevent files in the zip overriding object methods that would exist on a normal object.       Commits  e5b3f0d 3.7.0 e88ba4b Update for version 3.7.0 9046487 Disable proto assert that fails in browsers 6d029b4 Merge pull request #766 from MichaelAquilina/fix/files-null-prototype bb38812 Ensure prototype isn't modified by zip file d024c22 test: Add test case for loading zip filenames which shadow method names 2235749 fix: Use a null prototype object for this.files b7f472d Merge pull request #757: Update license to be valid spdx identifier a311039 update license to be valid spdx identifier See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jszip&package-manager=npm_and_yarn&previous-version=3.6.0&new-version=3.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-01-30T03:57:07Z","2022-02-03T09:50:05Z"
"","10364","Bump follow-redirects from 1.14.7 to 1.14.8 in /javascript/grid-ui","Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.14.7 to 1.14.8.  Commits  3d81dc3 Release version 1.14.8 of the npm package. 62e546a Drop confidential headers across schemes. See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.14.7&new-version=1.14.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-02-14T22:15:37Z","2022-02-16T21:08:07Z"
"","10363","Bump follow-redirects from 1.14.7 to 1.14.8","Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.14.7 to 1.14.8.  Commits  3d81dc3 Release version 1.14.8 of the npm package. 62e546a Drop confidential headers across schemes. See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.14.7&new-version=1.14.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-02-14T21:07:27Z","2022-02-16T21:09:26Z"
"","10256","Bump follow-redirects from 1.14.6 to 1.14.7","Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.14.6 to 1.14.7.  Commits  2ede36d Release version 1.14.7 of the npm package. 8b347cb Drop Cookie header across domains. See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.14.6&new-version=1.14.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-01-15T17:17:22Z","2022-01-24T20:42:27Z"
"","10585","Bump ejs from 3.1.6 to 3.1.7","Bumps [ejs](https://github.com/mde/ejs) from 3.1.6 to 3.1.7.  Release notes Sourced from ejs's releases.  v3.1.7 Version 3.1.7    Commits  820855a Version 3.1.7 076dcb6 Don't use template literal faf8b84 Skip test -- error message vary depending on JS runtime c028c34 Update packages e4180b4 Merge pull request #629 from markbrouwer96/main d5404d6 Updated jsdoc to 3.6.7 7b0845d Merge pull request #609 from mde/dependabot/npm_and_yarn/glob-parent-5.1.2 32fb8ee Bump glob-parent from 5.1.1 to 5.1.2 f21a9e4 Merge pull request #603 from mde/mde-null-proto-where-possible a50e46f Merge pull request #606 from akash-55/main Additional commits viewable in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ejs&package-manager=npm_and_yarn&previous-version=3.1.6&new-version=3.1.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-04-28T10:05:59Z","2022-04-28T10:39:14Z"
"","10584","Bump ejs from 3.1.6 to 3.1.7 in /javascript/grid-ui","Bumps [ejs](https://github.com/mde/ejs) from 3.1.6 to 3.1.7.  Release notes Sourced from ejs's releases.  v3.1.7 Version 3.1.7    Commits  820855a Version 3.1.7 076dcb6 Don't use template literal faf8b84 Skip test -- error message vary depending on JS runtime c028c34 Update packages e4180b4 Merge pull request #629 from markbrouwer96/main d5404d6 Updated jsdoc to 3.6.7 7b0845d Merge pull request #609 from mde/dependabot/npm_and_yarn/glob-parent-5.1.2 32fb8ee Bump glob-parent from 5.1.1 to 5.1.2 f21a9e4 Merge pull request #603 from mde/mde-null-proto-where-possible a50e46f Merge pull request #606 from akash-55/main Additional commits viewable in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ejs&package-manager=npm_and_yarn&previous-version=3.1.6&new-version=3.1.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","javascript,","dependabot[bot]","2022-04-28T10:05:47Z","2022-04-28T10:37:51Z"
"","10577","fixes #10574","Attempt to fix https://github.com/SeleniumHQ/selenium/issues/10574","closed","C-rb,","meetme2meat","2022-04-26T13:32:18Z","2022-05-10T13:09:16Z"
"","10169","Duplicate netty-transport classes","After https://github.com/SeleniumHQ/selenium/commit/612896f443f03e84efc1444197b02564dffce1e2, `selenium-remote-driver` now has dependencies on both `netty-transport-native-epoll` and `netty-transport-classes-epoll`. These JARs have identical classes and result in duplicate classes at runtime. - `netty-transport-classes-epoll` comes from `selenium-remote-driver` - `netty-transport-native-epoll` comes from `async-http-client`  Can we update the dependencies to exclusively use one or the other?  _Originally posted by @pkoenig10 in https://github.com/SeleniumHQ/selenium/issues/10102#issuecomment-998284082_","closed","","pkoenig10","2021-12-20T21:38:22Z","2022-01-20T00:07:18Z"
"","10638","[py]: Extra reusable utility function for css_selector conversions","adds a reusable `CSS_SELECTOR` conversion utility method that both `webdriver` and `webelement` can benefit from with some additional types.  Todo:  - double check types  - finalise docstrings","closed","C-py,","symonk","2022-05-11T19:16:12Z","2022-06-09T18:59:53Z"
"","10568","[py] Add debug logging for urllib response data","Adds a little debug logging for urllib responses:  - status code - decoded data - headers (not sure on this, added it to discuss)  ```console # example: DEBUG    selenium.webdriver.remote.remote_connection:remote_connection.py:347 POST http://localhost:45941/session/466ce33e335f29ddb99ddc51b738c3fd/element {""using"": ""css selector"", ""value"": ""[id=\""multilinelink\""]""} DEBUG    urllib3.connectionpool:connectionpool.py:456 http://localhost:45941 ""POST /session/466ce33e335f29ddb99ddc51b738c3fd/element HTTP/1.1"" 200 88 DEBUG    selenium.webdriver.remote.remote_connection:remote_connection.py:369 Remote response: response.status=200 | data='{""value"":{""element-6066-11e4-a52e-4f735466cecf"":""a7a58249-b553-442a-a4ed-7b48533749ef""}}' | HTTPHeaderDict({'Content-Length': '88', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'}) DEBUG    selenium.webdriver.remote.remote_connection:remote_connection.py:398 Finished Request ```","closed","","symonk","2022-04-20T18:49:56Z","2022-04-20T20:37:18Z"
"","10500","Added constructors with TimeSpan commandTimeout argument.","Added constructors with `TimeSpan commandTimeout` argument in `RemoteWebDriver.cs` class.  ### Description Added constructors: ```csharp public RemoteWebDriver(DriverOptions options, TimeSpan commandTimeout) public RemoteWebDriver(ICapabilities desiredCapabilities, TimeSpan commandTimeout) public RemoteWebDriver(Uri remoteAddress, DriverOptions options, TimeSpan commandTimeout) ```  ### Motivation and Context No longer needed to call `ToCapabilities()` on the `DriverOptions` argument when constructing an `RemoteWebDriver` instance.  ### Code samples Old code: ```csharp new RemoteWebDriver(new Uri(""foo""), new ChromeOptions().ToCapabilities(), TimeSpan.FromMinutes(5)) ``` New code: ```csharp new RemoteWebDriver(new Uri(""foo""), new ChromeOptions(), TimeSpan.FromMinutes(5)) ``` ### Types of changes - [x] New feature (non-breaking change which adds functionality)","closed","C-dotnet,","Enzo-Lucas","2022-03-31T20:26:18Z","2022-06-23T05:21:17Z"
"","10575","Added DepricationWarning to the warnings.warn methods inside the find_element_by_x methods","Added ""DepricationWarning"" argument to the warnings.warn inside the find_element_by_x methods from the WebElement class.  In such a way, the IDE will mark the methods as deprecated, similar to how it marks the find_element_by_x methods from the webDriver class.","closed","","BusHero","2022-04-26T04:56:33Z","2022-05-06T08:02:27Z"
"","10662","[py]: Additional types for element fetching methods","Add additional types in some places that fetch elements removed unnecessary `__ne__` implementation.  `WebElement` & `ShadowRoot` have a circular dependency, will address that one in future.","closed","C-py,","symonk","2022-05-17T20:44:40Z","2022-06-09T15:15:32Z"
"","10490","`python`: test function names tidy up inline with pep8","A rather crazy one, apologies whoever reviews!  I noticed a lot of the tests use a camel case naming, in python we should opt for snake case as best as possible; with the help of regex & the `string manipulation` plugin for pycharm (highly recommend it!) I've went through all the `def test*` functions inside `/py/test/selenium*` and rejigged them into snake case.  This also has some extra pieces of:  - Remove duplicate test names (likely not executing the former defined ones as they are overwritten in the namespace) - Made _some_ non test functions (utility) inline with snake case - Removed some redundant fixtures from tests  Kinda relying on CI to give me a steer in any fallout here; but I was quite meticulous when going through it; so should be minimal (I hope).","closed","","symonk","2022-03-29T21:23:21Z","2022-04-07T21:01:51Z"
"","10198","[java] implement event support for pointer device actions","A Java implementation for #9996   This doesn't feel like a very ""Selenium"" way to implement this functionality. It's pretty much just private properties with chained setters. No getters because we're expecting it to be used inline.  So, it would look like this: ```java pen.createPointerDown(PointerInput.eventProperties().setHeight(12).setTiltX(30)) ```  That said, it's hard to nitpick my solution when you compare it to how difficult Java makes working with non-default keyboard and mouse inputs because there is no access to them via `Actions` class...   The full user-required code: ```java         PointerInput pen = new PointerInput(PointerInput.Kind.PEN, ""my pen"");         Sequence actionList = new Sequence(pen, 0)                 .addAction(pen.createPointerMove(Duration.ZERO, PointerInput.Origin.fromElement(element), 0, 0))                 .addAction(pen.createPointerDown(new PointerInput.eventProperties().setHeight(12).setTiltX(30))                 .addAction(pen.createPointerMove(Duration.ZERO, PointerInput.Origin.viewport(), 50, 50))                 .addAction(pen.createPointerUp(0));         ((RemoteWebDriver) driver).perform(Collections.singletonList(actionList)); ```  ~Also, I couldn't figure out how to get Bazel to run the tests in `org.openqa.selenium.interactions`, so I put the test for this in `org.openqa.selenium.remote`.~","closed","C-java,","titusfortner","2021-12-30T04:33:55Z","2022-02-03T12:29:29Z"
"","10743","[py] Implement `/status` in the python bindings","A draft implementation of calling out to the w3c `/status` endpoint.  Todo:  - Error handling  - More test(s)","closed","","symonk","2022-06-07T19:54:25Z","2022-07-14T17:16:55Z"
"","10613","[py] use `typing_extensions` to be compatible with `py37`","`typing.Literal` is only available in py3.8+; this patch uses `typing-extensions` for older versions.  closes #10612","closed","","symonk","2022-05-05T13:46:38Z","2022-05-05T14:48:50Z"
"","10648","[py]: fix `flake8` issues in `trunk`","`trunk` is currently broken with py builds due to `flake8` violations.  (I much prefer to have `pre-commit` catching these before they are committed locally rather than finding out later on the remote)","closed","C-py,","symonk","2022-05-14T12:42:09Z","2022-05-15T07:42:05Z"
"","10717","[py]: Remove unused arg `resolve_ip` from `RemoteConnection` initialiser","`resolve_ip` has been unused for quite some time; removed it as an arg to `RemoteConnection`","closed","","symonk","2022-05-31T15:30:33Z","2022-06-09T18:59:29Z"
"","10872","update docs for PointerActions#move_to","`move_to` has been changed to start from the center of the element rather than the top-left corner.  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","mockdeep","2022-07-13T17:21:43Z","2022-07-14T15:21:17Z"
"","10626","fix return type hints for `screenshot_as_png`","`b64decode` returns bytes..  closes #10623","closed","","symonk","2022-05-09T17:12:56Z","2022-05-09T19:16:30Z"
"","10630","[py] remove `opera`","`4.2` seen the deprecation of opera; I have opened this for now to account for the removal of it altogether; will re base later once we ship 4.2 and get this in for `4.3`.  #10379 will be considered done as far as the python bindings are concerned in 4.3  @titusfortner @AutomatedTester we originally thought `4.3` for opera removal; but it's only deprecated in `4.2` however the message does say it'll be removed in `4.3` specifically; whatever you think tho, maybe `4.4` for this? I'll keep the PR in sync atleast.","closed","C-py,","symonk","2022-05-10T17:34:08Z","2022-06-14T19:20:21Z"
"","10304","[dotnet] Fix toReturn[""type""]","[🐛 Bug]: WheelScrollInteraction does not work for dotnet Selenium #10303  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","eversoutheast","2022-01-30T01:32:48Z","2022-02-02T20:36:40Z"
"","10513","[docs] Added Testing instructions  in Contributing.md","[skip ci]  ### Description  Added Instructions on how to test locally for contributing to selenium.   ### Motivation and Context  Local testing should be done before pushing code but I couldn’t find proper instructions on which tests to run. Tests which are bare minimum before submitting PR.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","SinghHrmn","2022-04-05T16:36:23Z","2022-04-06T12:57:08Z"
"","10461","[py] Port to new style classes","[documentation](https://github.com/symonk/selenium/tree/trunk/py#supported-python-versions) states we only support `Python 3.7+`.  This is a small (but wide) PR to remove the unnecessary explicit inheritance on `object` which is more applicable to python 2, in favour of new style classes.","closed","C-py,","symonk","2022-03-20T16:47:42Z","2022-05-16T20:31:28Z"
"","10138","[py] update ShadowRoot find element signatures to match those in WebElement","@AutomatedTester just making sure there wasn't a reason the signatures were different.","closed","","titusfortner","2021-12-13T06:26:51Z","2021-12-13T15:22:52Z"
"","10641","[dotnet] implement scroll action",".NET implemented multiple `WheelScrollInteraction` interactions for `WheelInputDevice`, but this single `Scroll()` method matches what we're doing for other languages at this point, with the same tests.","closed","","titusfortner","2022-05-12T17:39:41Z","2022-05-14T20:26:44Z"
"","10526","Set permissions for GitHub actions","- Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions  https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions  https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs  [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)   Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much.  Signed-off-by: naveensrinivasan","closed","","naveensrinivasan","2022-04-07T13:38:52Z","2022-04-07T14:57:23Z"
"","10807","[dotnet] Handle unsuccessful http requests properly","- Check http status code - Removed code which is never executed  I didn't verify whether the solution is still compiling without errors, I wrote this code in notepad.  Fixes #10805","closed","","nvborisenko","2022-06-24T13:02:01Z","2022-07-13T18:18:26Z"
"","10148","Added RelativeBy class on the main API","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it** ### Description This exposes the `RelativeBy` class on the main API so we can do `instanceof` checks of relative locators in other libraries, like Nightwatch.  ### Motivation and Context See above.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","beatfactor","2021-12-14T09:07:32Z","2021-12-14T09:38:33Z"
"","10255","[JS] chore/connect to CDP based on ENV selenium address var","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.  ### Summary  Connection to CPD does not work properly in k8s.   ### Description  In `createCDPConnection` capability object  has 'se:cdp' which looks like 'ws://xxx.xx.x.x:4444/session/sessionID/se/cdp' map_: Map(18) { ...  'se:cdp' => 'ws://xxx.xx.x.x:4444/session/sessionID/se/cdp',  ...}    but when WS interface tries to connect -  stderr: Error: connect ECONNREFUSED xxx.xx.x.x:4444     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1159:16) {   errno: -111,   code: 'ECONNREFUSED',   syscall: 'connect',   address: 'xxx.xx.x.x',   port: 4444 }  As a workaround i did replacement of the original getCapabilities to my fn with required  'se:cdp' value which is based on my  `SELENIUM_REMOTE_URL`  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2022-01-15T14:28:28Z","2022-01-17T15:49:14Z"
"","9927","ability to set no_vnc_port","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   Ability to set NO_VNC_PORT  ### Description The vnc port is hardcoded to 7900. Allowing it to be set will enable live view for users who are not using the default port  ### Motivation and Context Live view does not work for me because I am unable to set separate external and internal ports  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.  The change simply reads the system property of NO_VNC_PORT and uses the default 7900 if not set. ** @diemol, I could change this to use a command line option instead of an environment variable, but I am not all that familiar with the codebase and NO_VNC_PORT is a variable already used in docker-selenium. **","closed","C-grid,","therealdjryan","2021-10-14T15:29:48Z","2022-03-04T12:49:27Z"
"","10800","[py] WebElement parameter supported in some of expected_condition  methods","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   ### Description When parameter(locator) is not a tuple of (by, path) but WebElement, it dosen't work.  ### Motivation and Context when you located an element already, you can just use it now  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Qnner","2022-06-23T12:24:46Z","2022-06-23T12:52:29Z"
"","9990","[rb] Fix an example of `WebDriver::Options`","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   ### Description  `:options` as a parameter for driver initialization is deprecated now. So I changed to use `:capabilities`.  ```ruby options = Selenium::WebDriver::Chrome::Options.new(args: ['start-maximized', 'user-data-dir=/tmp/temp_profile']) Selenium::WebDriver.for(:chrome, options: options) # => WARN Selenium [DEPRECATION] [:browser_options] :options as a parameter for driver initialization is deprecated. Use :capabilities with an Array of value capabilities/options if necessary instead. ```   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","y-yagi","2021-10-26T22:55:09Z","2021-11-16T22:52:02Z"
"","10005","[js] Attach to page target while creating a CDP connection","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.    The majority of the code changes are done by @AutomatedTester. Thank you!   ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/9993  ### Motivation and Context  Ensure we are attaching to page target as needed by the CDP(ChromeDevTools) protocol, to allow BiDi Apis to work with the Grid.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-11-02T06:06:17Z","2021-11-02T22:32:57Z"
"","10280","[java] Using retries due to GitHub actions env","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.    Retrying some tests in the Java workflow, as the environment in GitHub actions is not stable.  ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-01-23T22:22:10Z","2022-01-24T16:15:25Z"
"","10150","Support new Cast command added to Chrome Devtools","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.    ### Description StartDesktopMirroring() is recently added to DevTools. https://chromium-review.googlesource.com/c/chromium/src/+/3290959  ### Motivation and Context This will allow user to call and use start_desktop_mirroring in webdriver.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","cliffordcheng","2021-12-14T19:37:44Z","2021-12-24T22:20:43Z"
"","10855","Adding GitPod Config","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     Configure GitPod to have a ready to use environment to develop Selenium  ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-07-07T13:35:50Z","2022-07-12T11:18:36Z"
"","10801","[py] WebElement parameter supported in some of expected_condition methods","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description WebElement parameter supported in some of expected_conditon.py mehtods  ### Motivation and Context when you located an element already, you can just use it now;    ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Qnner","2022-06-23T13:08:37Z","2022-06-23T13:09:50Z"
"","10802","[py] WebElement parameter supported in some of expected_condition methods","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description WebElement parameter supported in some of expected_conditions methods  ### Motivation and Context when you located an element already, you can just use it now;    ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","open","","Qnner","2022-06-23T13:17:35Z","2022-06-23T14:27:46Z"
"","10046","Issue #10045  uploadFile not working with docker images exposing chromedriver directly","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Updating to allow switching the uploadFile command using system property selenium.uploadFileMode the default will still use the current solution to use the /se/file endpoint, while other value  would allow to use different implementation ""chromedriver"" mode for example.   ### Motivation and Context While updating to latest selenium 4.0 we encountered issues with the uploadFile command using docker image (selenoid/vnc:chrome_95.0) which used to work very well in the past. Based on the history of the uploadFile which was first set to use /file and finally again to use /se/file , it appears that it would make sense to allow to choose which endpoint to use for that command rather than to force one implementation.  ### Types of changes  - [] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [] All new and existing tests passed.","closed","","tyge68","2021-11-16T14:31:43Z","2021-11-16T21:20:07Z"
"","9931","Fix classloading error in host identifier","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Simple fix for https://github.com/SeleniumHQ/selenium/issues/9784   ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","asolntsev","2021-10-14T20:25:20Z","2021-11-18T20:56:59Z"
"","10037","remove useless rimraf package, change io public api import","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Remove useless **rimraf** package  ### Motivation and Context [rimraf](https://www.npmjs.com/package/rimraf) package was updated 2 years ago.  currently nodejs has own API which allows work with io/dirs/files without additional packages selenium-webdriver js used rimraf only in one place thats why i replaced it to fs and remove **rimraf** from dependencies   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2021-11-14T12:46:20Z","2021-11-16T17:49:38Z"
"","10815","[py] Remove assertion for python version check","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Remove assertions that check if the python version is 3.7 or above.  ### Motivation and Context - New selenium versions only support python version 3.7+.  - Pip will not install an incompatible selenium version.  ### Types of changes Tech debt. - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","jsfehler","2022-06-25T23:01:53Z","2022-07-05T13:23:59Z"
"","10024","Feat/9943 inject telemetry context","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Provide OpenTelemetry context from outside, in order to connect the custom tracing with Selenium traces. Context is set with: OpenTelemetryTracer.getInstance().setOpenTelemetryContext(Context.current().with(span));  Fixes #9943  ### Motivation and Context In order to be able to link a custom tracing with Selenium OpenTelemetry traces.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","llatinov","2021-11-10T21:54:13Z","2021-11-23T15:28:45Z"
"","10524","Added fix to intercept PUT request and created test to intercept RESTful APIs","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description NetworkInterceptor was not able to intercept HTTP PUT request because it was not listed in the _HttpMethod.java_. Also, targeted tests to intercept RESTful APIs was missing. So I added a new test for all the HTTP requests (GET, POST, PUT, DELETE).  ### Motivation and Context Fixes [https://github.com/SeleniumHQ/selenium/issues/10484]  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","TamsilAmani","2022-04-07T10:25:43Z","2022-04-07T12:26:22Z"
"","10540","[java] Added PATCH request","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description NetworkInterceptor was not able to detect PATCH method , Instead of returning PATCH , the interceptor returning GET . i have check previous PR from here https://github.com/SeleniumHQ/selenium/pull/10524 and added PATCH http method  ### Motivation and Context  https://github.com/SeleniumHQ/selenium/issues/10539  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","argotri","2022-04-12T21:26:54Z","2022-04-13T08:41:07Z"
"","10168","[java] Fix typo in Java Changelog","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Fix typo introduced in https://github.com/SeleniumHQ/selenium/commit/e8fcc2cecf033f804a950389a61fa66409a35e08.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","valfirst","2021-12-20T21:11:31Z","2021-12-20T21:31:05Z"
"","10529","[java] Fix links in JavaDocs","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Fix links in JavaDocs  ### Motivation and Context Make JavaDocs navigable  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","valfirst","2022-04-08T09:31:50Z","2022-04-08T10:12:19Z"
"","10360","[java] Fix issue ""Incompatible types for '-' operation"" in JavascriptExecutor","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description As a developer, I want to execute given sample code, So fix this as Java grammar  ### Motivation and Context In Java, the long value will be converted as String which is impossible to execute post minus in System.out.println So the  compile error will throw as ""Incompatible types for '-' operation""  Before the change:  ![图片](https://user-images.githubusercontent.com/3264250/153713400-4e8c43ed-8400-4f7a-8602-5ed4a73ca87b.png) Post the change:  ![图片](https://user-images.githubusercontent.com/3264250/153713405-43027d7a-633b-4350-8576-df2e66370058.png)   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alaahong","2022-02-12T13:35:09Z","2022-02-14T06:06:00Z"
"","10333","[java] Fix modifier keys scope on Java Actions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Add Keys.META and Keys.COMMAND as the modifier keys into Actions.java  ### Motivation and Context As the defiination in SingleKeyAction.java, the modifier keys are from below array and the description highlight that ""if the provided key is none of those, IllegalArgumentException is thrown"", so update the code to match the scope.  `Keys.SHIFT, Keys.CONTROL, Keys.ALT, Keys.META, Keys.COMMAND, Keys.LEFT_ALT, Keys.LEFT_CONTROL, Keys.LEFT_SHIFT`  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alaahong","2022-02-06T14:09:42Z","2022-02-06T18:08:51Z"
"","10528","[java] Introduce common interface for all web storage types","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description [java] Introduce common interface for all web storage types  ### Motivation and Context Common interface will simplify usage of `LocalStorage` and `SessionStorage` to perform same operations  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","valfirst","2022-04-08T09:24:28Z","2022-04-09T23:51:06Z"
"","10603","[dotnet] #10161 Allow new targets to wait until debugger is attached","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description -Added TargetAttached event to Target domain in order to allow consumers of DevTools session to be informed about new targets. -Added SendCommands function to DevToolsSession. This function is needed when using the Runtime.runIfWaitingForDebugger command in conjuntion with other commands. Using the singular SendCommand function will result in blocking issues. -Added waitForDebugger argument to InitializeSession function DevToolsSession to enable/disable waiting for the debugger to attach. By default it's disabled because that's current behavior.   ### Motivation and Context  When a new target (new tab for instance) is created DevTools continues execution based on the WaitForDebugger property set in the SetAutoAttach feature. When the WaitForDebugger property is set to false DevTools continues without waiting the consumer to properly enable all domains on the target. For instance when being interested in network events from the network domain we need to invoke Network.enable for that specific target. The current behavior causes some of the network events to be missing due to Selenium enabling the domains after the target already performed network requests.  By allowing consumers to enable the WaitForDebugger property we can enable all domains and tell DevTools whenever we are ready by using the Run.runIfWaitingForDebugger command.    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","open","C-dotnet,","EdwinVanVliet","2022-05-03T10:16:02Z","2022-06-19T22:34:11Z"
"","9952","Update Netty dependency. Add Bouncy Castle for self-signed certificate.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Update Netty dependency. Add Bouncy Castle for self-signed certificate.  ### Motivation and Context  Fix breaking tests due to missing dependency.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-10-19T09:03:58Z","2021-11-18T19:47:06Z"
"","10838","Cleanup docstrings, fix broken formatting","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Tweak the docstrings in webdriver/common/log.py to standardize their style and fix broken formatting.  ### Motivation and Context  The documentation now formats the docstrings correctly.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","jsfehler","2022-07-03T04:43:11Z","2022-07-06T12:35:45Z"
"","10229","[java] Attempt to fix the local driver error test","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The remote web driver builder test passes locally but fails in GitHub actions. The changes attempt to fix that.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2022-01-07T06:02:49Z","2022-01-07T13:22:47Z"
"","10156","Improving GitHub workflow for Java","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Tests are not well distributed  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-12-15T20:34:43Z","2021-12-16T20:37:00Z"
"","10098","#8318 Remove references to opera_blink in favour of opera","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove references to opera_blink in favour of opera for issue #8318   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","morskyrv","2021-11-28T12:23:23Z","2021-12-01T14:47:28Z"
"","10007","[js] Remove explicit id passing for CDP commands","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove explicit id passing for CDP commands  ### Motivation and Context  CDP connection now takes care of passing a unique id for every CDP command as needed. The changes remove explicitly passing of this id in code implementation and tests.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-11-03T07:02:04Z","2021-11-03T12:17:09Z"
"","10427","[java] Remove deprecated methods that use capabilities in WebDrivers","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove deprecated methods that use capabilities in WebDrivers  ### Motivation and Context  It is recommended to use browser-specific options instead of capabilities. Hence, the WebDriver implementation constructors that use capabilities are deprecated. These have been deprecated for multiple versions.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2022-03-09T14:32:08Z","2022-06-09T22:23:58Z"
"","10663","[JS] feat: Added virtual authenticator","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Relates #10541 - Added virtual authenticator for js. - Added tests for the same.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","TamsilAmani","2022-05-18T06:50:15Z","2022-05-31T06:10:58Z"
"","10398","[java] Update extension in the tests to use the common extensions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to https://github.com/SeleniumHQ/selenium/issues/10266  ### Motivation and Context  Ensure all language bindings use the same extensions for testing. The changes help fix this for Java bindings.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-02-25T09:32:04Z","2022-02-25T18:51:28Z"
"","10772","[dotnet] Add Virtual Authenticator support","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #10541   ### Motivation and Context  Add Virtual Authenticator support for Dotnet bindings.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-dotnet,","pujagani","2022-06-14T10:20:21Z","2022-07-05T13:15:33Z"
"","10220","[java] Fix the retry request filter's max duration value to allow retries","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Primarily related to https://github.com/SeleniumHQ/selenium/issues/9528  ### Motivation and Context  Misunderstood the max-duration option (https://github.com/failsafe-lib/failsafe/pull/244/files) and hence it was not configured correctly to allow retries. This was an issue if the request timeout exception was thrown. The changes fix it by adding appropriate max duration values.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-01-05T07:05:39Z","2022-01-10T10:40:25Z"
"","9998","Fix the problem that it closes all tabs when using webdriver.close() to close the current tab in Edge IE Mode.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Let it go the same way in Edge IE Mode as in IE when closing the current tab(window).  ### Motivation and Context  To solve the problem that it closes all active tabs(windows) when using webdriver.close() to close the current tab(window) in Edge IE Mode.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","yk9772","2021-10-29T15:58:14Z","2021-11-04T19:45:52Z"
"","10296","Log Timestamp flag added","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/9402  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","amiluslu","2022-01-28T06:31:19Z","2022-01-28T14:16:37Z"
"","10387","[java] Avoid using ServiceLoader while creating FirefoxDriver instance","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes https://github.com/SeleniumHQ/selenium/issues/10010 and https://github.com/SeleniumHQ/selenium/issues/10301.  ### Motivation and Context  https://github.com/SeleniumHQ/selenium/commit/017f2c7f62963353ecc2fd662027676f193b9935 introduced the use of ServiceLoader in creating the FirefoxDriver instance. This was to support the legacy system and XpiDriverService. However, legacy support was long deprecated by Selenium and now it is removed via https://github.com/SeleniumHQ/selenium/commit/d4dba1c07a1d8601f80b9e71be7853317ab0d49d, https://github.com/SeleniumHQ/selenium/commit/12c8c2752b3ec8dcc05175e85b7ccf5c363dcefe, and https://github.com/SeleniumHQ/selenium/commit/5fc8b53b579d08753b0f89cc6307c5a1bc0e539e. ServiceLoader introduced a problem while packaging jars as the `META-INF/services/org.openqa.selenium.remote.service.DriverService$Builder` files would overwrite each other and FirefoxDriver would not be detected while creating the FirefoxDriver instance. Removing the dependency of using ServiceLoader while creating the instance fixes this.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-02-23T11:02:31Z","2022-02-23T11:56:33Z"
"","10281","[java] Allow disabling tracing in RemoteWebDriver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #10251  ### Motivation and Context  The changes allows enabling or disabling tracing when using the RemoteWebDriver. This will help the client setup and use their own OpenTelemetry Instance if needed.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-01-24T09:20:09Z","2022-01-24T13:13:44Z"
"","10271","[java] Replace dynamic proxy with ByteBuddy for webdriverdecorator","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #10233  ### Motivation and Context  The changes allow using Augmenter and WebdriverDecorator together without any class cast exceptions.  This leads to a better user experience and ease of use.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-01-21T07:38:56Z","2022-01-27T20:34:57Z"
"","10200","[java] Update toJson() method creation for integer type in CdpClientGenerator","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #10155  ### Motivation and Context  The changes fix the toJson() to return Number instead of String for Number type.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-12-30T13:11:10Z","2021-12-31T05:17:19Z"
"","10219","[java] Throw error when using custom client config with local driver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #10064  ### Motivation and Context   Ideally, the client config should be respected by the local driver. However, since that requires a good amount of restructuring, for the time being, it is a good idea to throw an error so the client is aware.  The fix might not be the best way to go, but it ensures minimum code changes to throw the error.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-01-05T04:15:20Z","2022-01-05T15:00:20Z"
"","10029","[js] Fix flaky CDP dom mutation","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix flaky CDP dom mutation  ### Motivation and Context  The dom mutation detection using CDP throws ""`InvalidSelectorError: invalid selector: An invalid or illegal selector was specified`"" randomly, hence it seemed flaky. This happened every time,  the target used [here](https://github.com/SeleniumHQ/selenium/blob/d6acda7c0254f9681574bf4078ff2001705bf940/javascript/node/selenium-webdriver/lib/webdriver.js#L1474), started with a number.  Example: `*[data-__webdriver_id=8ppq8ljgt47kvw5jnkq]` The changes fix this by ensuring the id is parsed correctly.  Before: `*[data-__webdriver_id=8ppq8ljgt47kvw5jnkq]` After: `*[data-__webdriver_id=\38 ppq8ljgt47kvw5jnkq]`  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-11-12T11:56:12Z","2021-11-15T07:59:41Z"
"","10238","[java] Add remotedriverbuilder tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adding missing tests for the RemoteDriverBuilder related to augmenter and local driver.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-01-10T13:21:34Z","2022-01-11T05:21:14Z"
"","10670","[JS]add support to switch frame by name","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  added support to switch frame by name param.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","gravityvi","2022-05-19T14:14:16Z","2022-05-19T16:11:33Z"
"","10445","[java] Add wheel input","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add wheel input  ### Motivation and Context  Add wheel input to support scroll() method similar to https://github.com/SeleniumHQ/selenium/blob/08a19171c1ac96ca29733b8c30bf966ec40c19d3/py/selenium/webdriver/common/actions/wheel_actions.py#L32 in the next iteration.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2022-03-15T09:42:23Z","2022-05-11T12:21:32Z"
"","10061","[java] Add updated timeout to ensure correct error message","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add updated timeout to ensure correct error message  ### Motivation and Context  Fixes #10033  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2021-11-19T13:15:33Z","2021-12-30T08:08:45Z"
"","10843","[dotnet] Add status method endpoint","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add status endpoint  ### Motivation and Context  Related to #10725  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","open","","pujagani","2022-07-04T06:09:41Z","2022-08-03T12:14:57Z"
"","10023","[rb] Add secure websocket support for Devtools","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add secure websocket support for Devtools  ### Motivation and Context  Related to #https://github.com/SeleniumHQ/selenium/issues/10017.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-11-10T14:21:27Z","2021-11-17T20:35:04Z"
"","10789","[java] Add BiDi augmenter","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add BiDi augmenter support  ### Motivation and Context  Add BiDi augmenter to allow RemoteWebDriver to use BiDi  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-06-21T13:44:10Z","2022-06-22T05:31:31Z"
"","10550","[py] Use monotonic clock for waits, fixes #10544","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Use monotonic clock for waits, fixes #10544  ### Motivation and Context   WebDriverWait uses `time.time()`, which displays system clock time and is non-monotonic:  https://github.com/SeleniumHQ/selenium/blob/2a43011ec7a209b40d73bb83635bff74a6be652d/py/selenium/webdriver/support/wait.py#L75  It should instead use `time.monotonic()`, which is ""[not affected by system clock updates](https://docs.python.org/3.7/library/time.html#time.monotonic)""  https://docs.python.org/3.7/library/time.html#time.monotonic https://www.webucator.com/article/python-clocks-explained/ https://en.wikipedia.org/wiki/Monotonic_function   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","Kache","2022-04-14T23:39:16Z","2022-04-21T09:14:42Z"
"","10790","[grid] Flags to configure locator validation","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   This is an approach to allow non-W3C locators be forwarded to endpoint nodes so users can benefit from integration with Appium or cloud providers.  We need to wait on https://github.com/w3c/webdriver/pull/1671 before merging this. And it will probably need changes after the issue is solved in the WebDriver spec.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-06-21T14:12:33Z","2022-08-03T22:38:12Z"
"","10741","[java] Throwing warnings for non-W3C before creating session","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   This improves checking for non-W3C caps just before the session creation is requested. We were doing that when every capability was being set, which could throw false positives.  ### Motivation and Context   Removing JWP support in upcoming releases.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-java,","diemol","2022-06-07T12:50:55Z","2022-06-08T09:42:58Z"
"","10438","Remove universal wheel, python 2 is unsupported","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context Python 2 support was dropped, yet the wheel still contains the python 2 identifier. This is unnecessary.   ### Types of changes  - [x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x ] All new and existing tests passed.","closed","","gopackgo90","2022-03-11T20:10:28Z","2022-03-17T09:36:47Z"
"","10796","[JS] kill chromium service on quit","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context  - fixes #10795   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","gravityvi","2022-06-22T14:40:04Z","2022-07-04T23:01:15Z"
"","10423","PR1","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","valapishetty","2022-03-08T15:56:24Z","2022-03-08T16:08:12Z"
"","10141","Fix typos.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","dosas","2021-12-13T19:36:48Z","2021-12-20T17:58:22Z"
"","10579","[py] Added virtual authenticator for Python Bindings","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","SinghHrmn","2022-04-26T16:02:27Z","2022-05-07T17:16:01Z"
"","10311","#9792 Trying to add node info for client","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","amiluslu","2022-01-31T20:49:50Z","2022-02-01T06:22:53Z"
"","10110","[js] update code format, public API exports, remove deprecated legacy","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2021-12-02T12:16:18Z","2021-12-03T16:22:03Z"
"","10097","[js] update code format, public API exports","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2021-11-28T08:03:47Z","2021-11-28T13:40:37Z"
"","10094","update map/filter, clean up to common format","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2021-11-27T13:10:33Z","2021-11-28T07:25:29Z"
"","10075","Remove legacy in favour of W3C endpoints.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","dosas","2021-11-23T19:14:28Z","2021-11-30T12:11:30Z"
"","9979","[nodejs] code cleanup second iteration","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2021-10-23T13:17:56Z","2021-11-05T13:39:54Z"
"","10052","Fix typos for Python bindings","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ x] My change requires a change to the documentation. - [ x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","kianmeng","2021-11-18T04:03:44Z","2021-11-20T09:25:24Z"
"","10858","add: findElementAndClick method","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","tayal1996","2022-07-08T14:01:18Z","2022-07-08T21:02:30Z"
"","10604","[build] Move bazel version to 5","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2022-05-03T14:30:15Z","2022-05-05T11:20:03Z"
"","10594","Update .bazelrc by dan","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","jksdhfsjkhfsljkdff","2022-05-01T10:53:22Z","2022-05-01T14:01:10Z"
"","10593","Update .bazelrcswseds","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","jksdhfsjkhfsljkdff","2022-05-01T09:54:47Z","2022-05-01T10:18:01Z"
"","10514","[py] Add the ability to create sdist package of the python bindings","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","AutomatedTester","2022-04-05T21:05:25Z","2022-06-09T07:43:55Z"
"","10491","Running tests with Chrome beta too","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-03-29T21:32:58Z","2022-03-29T21:46:28Z"
"","10380","[java] Adding Chrome beta and dev to GitHub Actions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2022-02-19T23:31:14Z","2022-02-20T00:02:56Z"
"","10298","Add example of how to easily add driver to PATH","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","QazCetelic","2022-01-28T14:20:08Z","2022-01-29T20:56:19Z"
"","10276","c","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sarasofiademelo","2022-01-21T17:57:40Z","2022-01-21T18:23:51Z"
"","10170","Java tests -- retry NettyAppServer start","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-12-20T22:54:21Z","2022-01-03T21:22:42Z"
"","10166","Using bind-host false for server tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-12-20T18:12:54Z","2021-12-21T00:35:22Z"
"","10114","[js] update code format, public api exports","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","potapovDim","2021-12-05T11:04:16Z","2021-12-05T12:10:47Z"
"","10519","[Javascript] Split String on grapheme pairs in sendKeys command","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.      ### Description  - split string on grapheme pairs under `sendKeys` command ### Motivation and Context   - fixes #10518  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","gravityvi","2022-04-06T16:43:37Z","2022-04-12T04:12:46Z"
"","10660","[java] Add support to create a BiDi session","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**    ### Description  Add support to create a BiDi session  ### Motivation and Context  Related to adding support for #10335   Note: The code is using the current structure of DevTools implementation in Java. Though that causes a fair amount of code duplication, keeping the BiDi and DevTools implementation will make it easier to remove DevTools support in the future.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-05-17T11:00:38Z","2022-05-18T11:17:39Z"
"","10487","sendkeys error message fixed","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**    ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harshit-bs","2022-03-29T06:07:44Z","2022-03-30T07:35:23Z"
"","10013","IEDriver: remove first run banner in Edge IEMode","**IEDriver: remove first run banner in Edge IEMode**  ### Description This PR is to remove the first run banner in Edge IEMode.  ### Motivation and Context When IEDriver starts a new session to launch Edge in IEMode, it always uses a new profile. This resulted in the first run banner in the new launched Edge window. In this PR, four new parameters are added to disable the Edge first run banner.","closed","","guangyuexu","2021-11-04T17:13:15Z","2021-11-04T19:32:11Z"
"","10006","Create temporary folder for Edge in IEMode","**Create temporary folder for Edge in IEMode**  ### Description This PR creates a unique temporary folder for Edge in IEMode. The temporary folder will be used as user data directory for the testing Edge browser. In addition, the temporary folder will be deleted when the test browser quits.  ### Motivation and Context By creating a unique temporary folder, IEDriver can drive multiple Edge tests (in IEMode) without interfering each other.  ### Types of changes 1. create a unique temporary folder 2. use the temporary folder as user data directory for Edge in IEMode 3. delete the temporary folder after browser quits","closed","","guangyuexu","2021-11-02T06:09:53Z","2021-11-03T14:09:56Z"
"","10068","[refactoring] improve handling exceptions","* throw ""new UncheckedIOException(ioe)"""" instead of just ""new RuntimeException(ioe)"" * avoid catching too broad Exception which causes unneeded re-wrapping of RuntimeExceptions   ### Description it's just a small refactoring: improving some of ""catch Exception"" blocks.  P.S. Replacing RuntimeException by UncheckedIOException doesn't explicitly solve any practical problem, it's just a better exception for wrapping IOException.  You Many coding standards recommend to avoid throwing too generic exceptions like `RuntimeException` or `Exception`. And `UncheckedIOException` is exactly for that: it's a ""RuntimeException for wrapping IOException"".   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","asolntsev","2021-11-20T16:45:47Z","2021-12-08T11:17:05Z"
"","10057","Added default executable path in service module for","* chrome * edge * firefox * ie * safari * webkitgtk * wpewebkit  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","dosas","2021-11-18T19:31:33Z","2021-11-19T09:29:23Z"
"","10056","Added default executable path in service module for","* chrome * edge * firefox * ie * safari * webkitgtk * wpewebkit  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","dosas","2021-11-18T19:21:33Z","2021-11-18T21:39:36Z"
"","10205","[🐛 Bug]: Getting Error: ECONNRESET read while trying to connect to a Selenium Standalone running on a Docker container on Windows 10 host.","### What happened? I am running a Selenium Standalone Server as a Docker container on my Windows 10 host. On my host, I have a Node.js script that uses selenium-webdriver package to connect to this Selenium Server container, but the script constantly returns this error: ``` ECONNRESET read ECONNRESET     at ClientRequest. (C:\path-to-my-script\node_modules\selenium-webdriver\http\index.js:297:15)     at ClientRequest.emit (events.js:400:28)     at Socket.socketErrorListener (_http_client.js:475:9)     at Socket.emit (events.js:400:28)     at emitErrorNT (internal/streams/destroy.js:106:8)     at emitErrorCloseNT (internal/streams/destroy.js:74:3)     at processTicksAndRejections (internal/process/task_queues.js:82:21) ``` *Please note that I've added a new line of `console.log(e)` after index.js:279 that makes the line numbers different than the original library. For your information, the output of that line shows:* ``` Error: read ECONNRESET     at TCP.onStreamRead (internal/stream_base_commons.js:209:20) {   errno: -4077,   code: 'ECONNRESET',   syscall: 'read' } ``` ## A little Background about my experiments on this issue: ### A brief quote about the meaning behind this error: > ""ECONNRESET"" means the other side of the TCP conversation abruptly closed its end of the connection. ([citation link](https://www.quora.com/What-does-%E2%80%9CError-read-ECONNRESET%E2%80%9D-mean)) ### Using a different Webdriver (PHP Webdriver): When I use PHP Webdriver from (https://github.com/php-webdriver/php-webdriver), everything works perfectly fine. A new instance of a Firefox browser runs and navigates through the URL I want fully-functional, but when I use this library on Node.js, I only get this error, and the Selenium Server doesn't react to anything (The library cannot make this request, therefore throws this ECONNRESET exception). ### Running this Selenium Docker container on a Linux CentOS 7 host: When I run this Node.js script to connect to the Selenium Standalone Docker container on a CentOS 7 virtual-machine host, everything works perfectly fine. Therefore, it seems to be a problem with this library communicating with Windows [WSL2](https://docs.microsoft.com/en-us/windows/wsl/about).  ## My Node.js Code: ``` const {Builder, By} = require('selenium-webdriver');  (function run(){     try {         let driver = await new Builder()         .forBrowser('firefox')         .usingServer(`http://localhost:4444/wd/hub`)         .build();                  console.log(""Done"");     } catch(e) {         console.log(e);     } await driver.get('https://google.com'); })(); ``` ## My Selenium Standalone bash script: `java -jar selenium-server-4.0.0.jar standalone --override-max-sessions true --max-sessions 20 --session-timeout 1800` ## My Dockerfile: *Link: https://github.com/iliaamiri/selenium-on-Linux-setup-dependencies/blob/main/Dockerfile*  ## My scripts to run this Docker Container ### Script for Linux host:  `docker run -it -p 4444:4444 -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix redbolder/selenium_standalone_firefox_centos` ### Script for Windows host: `docker run -it -p 4445:4444 -e DISPLAY=192.168.1.2:0.0 -v c:/tmp/X11-unix:/tmp/.X11-unix redbolder/selenium_standalone_firefox_centos`  ## Every information about the technologies I have mentioned above: **Selenium Standalone Version:** 4.0.0 **Java Version:** JRE 8u311 Linux x64 **Linux Virtual Host:** CentOS 7 (Core) **Docker on Linux Virtual Host:** Docker Engine - Community - 20.10.10 **Docker on Windows Host:** Docker Engine - Community - 20.10.11 **Windows Host:** Windows 10 Pro **Docker Container Operation System:** CentOS 8 **Node.js Version:** 14.17.6  ### How can we reproduce the issue?  ```shell Please refer to this Github Repository: https://github.com/iliaamiri/selenium-webdriver-javascript-ECONNRESET-read-issue ```   ### Relevant log output  ```shell Error: ECONNRESET read ECONNRESET     at ClientRequest. (C:\xampp\htdocs\Github-Repositories\a-web-bot-for-booking-the-closest-possible-appointment-on-ICBC-Driver-Licensing\node_modules\selenium-webdriver\http\index.js:297:15)     at ClientRequest.emit (events.js:400:28)     at Socket.socketErrorListener (_http_client.js:475:9)     at Socket.emit (events.js:400:28)     at emitErrorNT (internal/streams/destroy.js:106:8)     at emitErrorCloseNT (internal/streams/destroy.js:74:3)     at processTicksAndRejections (internal/process/task_queues.js:82:21) ```   ### Operating System  CentOS 8 Docker Container on Windows 10 Host  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 91.4.0esr  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","iliaamiri","2021-12-31T03:32:46Z","2022-05-12T00:12:39Z"
"","10666","[🐛 Bug]: [WinError 6] The handle is invalid","### What happened?         from selenium.webdriver.support import expected_conditions as EC         from selenium.webdriver.common.by import By         from selenium import webdriver         from selenium.webdriver.firefox.options import Options         from selenium.webdriver.common.keys import Keys         from selenium.webdriver.common.by import By         from selenium.common import exceptions         from selenium.webdriver.common.action_chains import ActionChains         from selenium.webdriver.support.ui import WebDriverWait         from selenium.webdriver.firefox.webdriver import FirefoxProfile         from selenium.webdriver.firefox.firefox_binary import FirefoxBinary         from selenium.webdriver.common.proxy import Proxy, ProxyType         from selenium.webdriver.firefox.service import Service          profile_path = ""F:\\ea_env\\..................\\firefox_profile""         cookie_path  = ""F:\\ea_env\\..................\\firefox_cookie.pkl""         my_url = ""https://kitchen.applitools.com/ingredients/canvas/""                  profile_path = r""C:\Users\..................\Roaming\Mozilla\Firefox\Profiles\2jwvchja.bot5""         desktop_path = str(pathlib.Path.home()) + '\\Desktop'         gecko_path = f""{desktop_path}\\geckodriver.exe""         options = Options()         options.headless = False         options.set_preference('profile', profile_path)         service = Service(gecko_path)         options.add_argument('--no-first-run --no-service-autorun --password-store=basic')         options.add_argument('--excludeSwitches --enable-logging')         options.add_argument('--no-default-browser-check')         options.add_argument('--no-sandbox')         driver = webdriver.Firefox (service=service, options=options)         driver.implicitly_wait(100)         driver.set_page_load_timeout(100)          driver.get (my_url)         canvas = driver.find_element(By.ID, ""burger_canvas"")         action = ActionChains(driver)         action.move_to_element_with_offset(canvas, 500, 350).click().perform()    ### How can we reproduce the issue?  ```shell I followed tutorial below and tried to do it by Python Standalone Selenium. https://www.youtube.com/watch?v=NebFQ31NFtE target url for test: https://kitchen.applitools.com/ingredients/canvas  I saved canvas picture and tried to find the center location of canvas's button (Lets Eat) via Paint. x: 500px y: 350px  https://imgur.com/a/kya1dji ```   ### Relevant log output  ```shell Exception ignored in:  Traceback (most recent call last):   File ""C:\Python38\lib\subprocess.py"", line 949, in __del__             self._internal_poll(_deadstate=_maxsize)   File ""C:\Python38\lib\subprocess.py"", line 1348, in _internal_poll     if _WaitForSingleObject(self._handle, 0) == _WAIT_OBJECT_0:      OSError: [WinError 6] The handle is invalid ```   ### Operating System  Windows 10 - 64 bit - latest build  ### Selenium version  Python 3.8.10 & 3.9.10 -- Selenim 4.1.5  ### What are the browser(s) and version(s) where you see this issue?  Firefox 99  ### What are the browser driver(s) and version(s) where you see this issue?  Gecko driver 0.31  ### Are you using Selenium Grid?  No","closed","I-question,","alimp5","2022-05-18T14:40:40Z","2022-06-23T00:11:04Z"
"","10595","[🐛 Bug]: 使用window_handles获取不到窗口句柄","### What happened?  我的自动化脚本执行时，点击了一个会弹出新窗口的按钮，我尝试使用web.window_handles获取新窗口的句柄（新窗口已经正常打开），但是只获取到当前窗口的句柄，请问这是什么原因？  ### How can we reproduce the issue?  ```shell def scan():     while True:         try:             switch_to_frame(web, ""fraMenu"")             web.find_element(by=By.XPATH, value=""//a[@title='新扫描管理']"").click()             web.save_screenshot('./image.png')  # 截图             web.find_element(by=By.XPATH, value=""//a[@title='扫描']"").send_keys(Keys.ENTER)             switch_to_frame(web, ""fraInterface"")             break         except:             pass      web.switch_to.default_content()     h1 = web.current_window_handle     print(""h1："", h1)     for i in range(1000):         h2 = web.window_handles         print(""h2："", h2)         if len(h2)>1:             break  scan() ```   ### Relevant log output  ```shell h1： 9c2a633a-8808-4b2e-bc6a-378d3e440729 h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] h2： ['9c2a633a-8808-4b2e-bc6a-378d3e440729'] ```   ### Operating System  Windows10  ### Selenium version  Python 3.7.6  ### What are the browser(s) and version(s) where you see this issue?  IE10  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer_Win32_4.0.0  ### Are you using Selenium Grid?  selenium 4.1.2","closed","I-question,","Mo-rot","2022-05-01T11:03:39Z","2022-06-01T00:13:46Z"
"","10771","[🐛 Bug]: Wait and Input duplicates the value while assigning to html input field","### What happened?  xml code `                                                      781831                             2773                             1                             2                                                                               781831                             2773                             2                             3                                                                               781831                             14                             4                             1                                              `  robot file ${xml}=    Parse Xml    ${myxml.xml}     @{NeighboringCells}=    Get Elements    ${xml}    .//radioaccess/sites/site[@id='${SiteID}']/neighboringcells/cell     FOR    ${NeighboringCell}    IN    @{NeighboringCells}         ${NeighboringCell wacnid}=    XML.Get Element Text    ${NeighboringCell}    wacnid 	Wait and Input   sitewacnid    ${NeighboringCell wacnid}	          	${NeighboringCell sysid}=    XML.Get Element Text    ${NeighboringCell}    sysid 	Wait and Input    sitesystemid    ${NeighboringCell sysid} 		 	${NeighboringCell rfssid}=    XML.Get Element Text    ${NeighboringCell}    rfssid 	Wait and Input    siterfssid    ${NeighboringCell rfssid}          	${NeighboringCell cellid}=    XML.Get Element Text    ${NeighboringCell}    cellid 	Wait and Input    sitecellid    ${NeighboringCell cellid} 		     END  ### How can we reproduce the issue?  ```shell try to loop with xml attributes and the values to html input fields ```   ### Relevant log output  ```shell actual webpage output wacnid          systemid   rfssid cellsid 781831781831    277314     114    1 781831781831    27732773   111    2 781831781831    27732773   112    3  expected webpage output wacnid    systemid   rfssid cellsid 781831    2773       4       1 781831    2773       1       2 781831    2773       2       3 ```   ### Operating System  ubuntu20.04  ### Selenium version  latest  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver  ### Are you using Selenium Grid?  no","closed","I-defect,","manasa-maddi","2022-06-14T09:11:20Z","2022-07-15T00:13:39Z"
"","10071","[🐛 Bug]: AttributeError: 'dict' object has no attribute 'is_displayed'","### What happened?  Within the expected_conditions.py support package of selenium python,  `is_displayed()`   does not appear to be a function of:  `from selenium.webdriver.remote.webdriver import WebElement`  So, when attempting to: `WebDriverWait(webdriver, 30).until(ec.element_to_be_clickable((By.ID, ""username"")))`  The following is produced from shell: > AttributeError: 'dict' object has no attribute 'is_displayed'  I've attached the python file that would reproduce the bug. Please help. Thanks!  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.common.exceptions import WebDriverException, TimeoutException, \     ElementClickInterceptedException, ElementNotVisibleException, \     ElementNotInteractableException, NoSuchElementException, UnexpectedAlertPresentException, StaleElementReferenceException from selenium.webdriver.chrome.options import Options from selenium.webdriver.chrome.service import Service from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support import expected_conditions as ec from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support.wait import WebDriverWait  def browser_settings(user_agent):     """"""     Inits the chrome browser with headless setting and user agent     :param headless_mode: Boolean     :param user_agent: String     :return: webdriver obj     """"""      service = Service('drivers/chromedriver')     options = Options()     options.add_argument(f'user-agent={user_agent}')     options.add_experimental_option(""excludeSwitches"", [""enable-automation""])     options.add_experimental_option('useAutomationExtension', False)     options.add_experimental_option('w3c', False)      prefs = {         ""profile.default_content_setting_values.geolocation"": 2,         'profile.default_content_setting_values.notifications': 2,         'profile.content_settings.exceptions.notifications': 2,         'profile.default_content_settings.geolocation': 2,         ""profile.managed_default_content_settings.popups"": 2,         ""profile.managed_default_content_settings.notifications"": 2,         #""profile.managed_default_content_settings.images"": 2,         #""profile.default_content_settings.images"": 2,         'profile.content_settings.exceptions.geolocation': 2,         ""profile.managed_default_content_settings.infobar"": 2,         'profile.managed_default_content_settings.geolocation': 2,         'credentials_enable_service': False,         'profile': {             'password_manager_enabled': False         }     }      options.add_experimental_option(""prefs"", prefs)     chrome_obj = webdriver.Chrome(service=service, options=options)     return chrome_obj  userAgent = ""Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.0 Safari/605.1.15""       browser = browser_settings(userAgent) browser.get('https://account.protonmail.com/login') WebDriverWait(browser, 30).until(ec.element_to_be_clickable((By.ID, ""username""))) browser.find_element(By.ID, ""username"").send_keys(""email_address@protonmail.com"") time.sleep(7) browser.quit() ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""Y:\For filing a report.py"", line 58, in      WebDriverWait(browser, 10).until(ec.element_to_be_clickable((By.NAME, ""loginfmt"")))   File ""C:\Users\Lovelace\AppData\Local\Programs\Python\Python310-32\lib\site-packages\selenium\webdriver\support\wait.py"", line 78, in until     value = method(self._driver)   File ""C:\Users\Lovelace\AppData\Local\Programs\Python\Python310-32\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 332, in _predicate     target = visibility_of(target)(driver)   File ""C:\Users\Lovelace\AppData\Local\Programs\Python\Python310-32\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 143, in _predicate     return _element_if_visible(element)   File ""C:\Users\Lovelace\AppData\Local\Programs\Python\Python310-32\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 154, in _element_if_visible     return element if element.is_displayed() == visibility else False AttributeError: 'dict' object has no attribute 'is_displayed' ```   ### Operating System  Windows 10 Pro 32-bit  ### Selenium version  Selenium 4.0.0; Python 3.10.150.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  No","closed","needs-triaging,","Lovelaces","2021-11-21T21:48:37Z","2021-12-23T00:07:17Z"
"","10050","[🐛 Bug]: Confusing JAVA API documentation, failed to cast org.openqa.selenium.remote.ShadowRoot","### What happened?  With Chrome 96 update, our tests broke because of shadow DOM handling. I have tried to update selenium from v3.141.59 to v4.0.0 and this also breaks the code. I can solve it and it's fine but I don't understand. In the [documentation](https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/remote/package-summary.html) I can't find the definition of this class. I have found the new `getShadowRoot()` method in the documentation. The problem is that from the code this method is only available from `RemoteWebElement`. Simple `WebElement` doesn't implement this method in the code, but the documentation still contains it. Furthermore, in the documentation the `getShadowRoot` method returns `SearchContext` and not `ShadowRoot`.... Which documentation should I use? Previously the attached code worked fine.   ### How can we reproduce the issue?  ```shell private static ExpectedCondition jsReturnsShadowRoot(WebElement parent) {       return new ExpectedCondition() {           @Override           public WebElement apply(WebDriver driver) {               return (WebElement) ((JavascriptExecutor) driver).executeScript(""return arguments[0].shadowRoot"", parent);           }       };   } ```   ### Relevant log output  ```shell org.openqa.selenium.remote.ShadowRoot cannot be cast to org.openqa.selenium.WebElement java.lang.ClassCastException: org.openqa.selenium.remote.ShadowRoot cannot be cast to org.openqa.selenium.WebElement ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome v96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver v96.0.4664.45  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","RedDevil91","2021-11-17T09:15:52Z","2022-01-13T00:07:50Z"
"","10597","[🐛 Bug]: Windows 11 node identified as Windows 10 so hub can't find a Windows 11 platform","### What happened?  With 4.1.4 update hub and nodes were updated.  Test run specifies a platformName of ""win11"" and the hub cannot find a suitable node to run the test.  Checking the info about the node in the Selenium Grid UI the node is incorrectly identified as ""Windows 10"".  ![image](https://user-images.githubusercontent.com/23370442/166146619-43e4b90f-206c-4690-9fe6-c8dc126ccf6d.png)  The session appears on the queue as:  {""acceptInsecureCerts"":true,""acceptSslCerts"":true,""browserName"":""chrome"",""build"":""master"",""goog:chromeOptions"":{""args"":[],""excludeSwitches"":[""enable-automation""],""extensions"":[]},""name"":""alfresco_TestAddSharedFolder.createFolder"",""pageLoadStrategy"":""eager"",""platformName"":""windows 11"",""screenResolution"":""1272x1024"",""se.screenResolution"":""1272x1024"",""se:recordVideo"":true,""se:timeZone"":""America/Chicago"",""tz"":""America/Chicago""}  I thought this might be fixed with the platform enum changes in v4.1.4 that support win11 as platformName.  ### How can we reproduce the issue?  ```shell Using grid v4.1.4 attach a Windows 11 node to the grid.  Then run a test with platform ""win11"". ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.4', revision: '535d840ee2' System info: host: 'myserver.net', ip: 'fe80:0:0:0:1cce:7b4d:a98c:2d9f%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.9' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [], excludeSwitches: [enable-automation], extensions: []}, pageLoadStrategy: eager, platformName: windows 11, se:recordVideo: true, se:timeZone: America/Chicago}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserName: chrome, build: master, goog:chromeOptions: {args: [], excludeSwitches: [enable-automation], extensions: []}, name: alfresco_TestAddFolder.crea..., pageLoadStrategy: eager, platformName: windows 11, screenResolution: 1272x1024, se.screenResolution: 1272x1024, se:recordVideo: true, se:timeZone: America/Chicago, tz: America/Chicago}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at utils.BrowserFactory.getBrowser(BrowserFactory.java:146) 	at tests.BaseTestWithBrowser.configLogAndClients(BaseTestWithBrowser.java:60) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) 	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) 	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeEachMethod(TimeoutExtension.java:76) 	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:506) 	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$21(ClassBasedTestDescriptor.java:491) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachMethods$3(TestMethodTestDescriptor.java:171) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:199) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:199) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:168) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95) 	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91) 	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60) 	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210) 	Suppressed: java.lang.NullPointerException 		at tests.myFilesTests.TestAddFolder.cleanup(TestAddFolder.java:61) 		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 		at java.base/java.lang.reflect.Method.invoke(Method.java:566) 		at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) 		at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) 		at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) 		at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126) 		at org.junit.jupiter.engine.extension.TimeoutExtension.interceptAfterEachMethod(TimeoutExtension.java:108) 		at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 		at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) 		at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 		at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:506) 		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeAfterEachMethodAdapter$22(ClassBasedTestDescriptor.java:496) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachMethods$10(TestMethodTestDescriptor.java:240) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:273) 		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:273) 		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:272) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachMethods(TestMethodTestDescriptor.java:238) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139) 		... 47 more 	Suppressed: java.lang.NullPointerException 		at tests.BaseTestWithBrowser.attachmentsAndShutDown(BaseTestWithBrowser.java:91) 		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 		at java.base/java.lang.reflect.Method.invoke(Method.java:566) 		at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) 		at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) 		at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) 		at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126) 		at org.junit.jupiter.engine.extension.TimeoutExtension.interceptAfterEachMethod(TimeoutExtension.java:108) 		at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 		at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) 		at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) 		at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 		at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeMethodInExtensionContext(ClassBasedTestDescriptor.java:506) 		at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$synthesizeAfterEachMethodAdapter$22(ClassBasedTestDescriptor.java:496) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachMethods$10(TestMethodTestDescriptor.java:240) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:273) 		at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:273) 		at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:272) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachMethods(TestMethodTestDescriptor.java:238) 		at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139) 		... 47 more Caused by: java.lang.RuntimeException: NettyHttpHandler request execution error 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:76) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:97) 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	... 78 more Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to grid4.ibodog.net/10.10.0.215:4444 after 180000 ms 	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:395) 	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2022) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59) 	... 91 more Caused by: java.util.concurrent.TimeoutException: Request timeout to grid4.ibodog.net/10.10.0.215:4444 after 180000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) 	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:834) ```   ### Operating System  hub (docker-linux), node Windows 11  ### Selenium version  4.1.4  ### What are the browser(s) and version(s) where you see this issue?  chrome was tested only  ### What are the browser driver(s) and version(s) where you see this issue?  using grid  ### Are you using Selenium Grid?  4.1.4","closed","C-grid,","ibodog","2022-05-01T13:00:18Z","2022-06-06T00:10:14Z"
"","9970","[🐛 Bug]: Selenium 4 Dotnet ChromiumDriver extends WebDriver instead of RemoteWebDriver","### What happened?  Why is Dotnet version for Selenium 4 ChromiumDriver class extends WebDriver instead of RemoteWebDriver? The alpha versions of ChromiumDriver were extending RemoteWebDriver. Also, the Java version of ChromiumDriver inherits RemoteWebDriver. Why is the Dotnet version different?  ### How can we reproduce the issue?  ```shell RemoteWebDriver driver = new ChromeDriver();   This is throwing type cast error in Selenium 4. It used to work fine in the alpha versions. ```   ### Relevant log output  ```shell System.InvalidCastException : Unable to cast object of type 'OpenQA.Selenium.Chrome.ChromeDriver' to type 'OpenQA.Selenium.Remote.RemoteWebDriver' ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 93  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 93.0.4577.1500  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","pjanakiraman24","2021-10-21T21:01:55Z","2021-12-13T00:07:00Z"
"","10518","[🐛 Bug]: Split on grapheme pairs while using sendKeys","### What happened?  While using `sendKeys` in javascript binding we are splitting like this: which ends up splitting emoji characters that are represented by a pair of code points (E.g. `😀 --> ""\uD83D\uDE00""`) into two separate parts which leads to `invalidArguementError`. https://github.com/SeleniumHQ/selenium/blob/482d5a4e6f621d1a299b79233e82ed2d66d87e7a/javascript/node/selenium-webdriver/lib/webdriver.js#L2533  ### How can we reproduce the issue?  ```shell element.sendKeys('😀') Or  element.sendKeys('\uD83D\uDE00') ```   ### Relevant log output  ```shell Request POST /session/3855d03d-1269-4f3b-a858-c100d0aeba0c/element/57be9c4d-bc65-4d4a-813b-5e87d8c9cd03/value      { text: '😀', value: [ '�', '�' ] }    Response 400 POST /session/3855d03d-1269-4f3b-a858-c100d0aeba0c/element/57be9c4d-bc65-4d4a-813b-5e87d8c9cd03/value (7ms)    {      value: {        error: 'invalid argument',        message: 'Failed to decode request as JSON: {""text"":""\\ud83d\\ude00"",""value"":[""\\ud83d"",""\\ude00""]}',        stacktrace: ''      }   } ```   ### Operating System  macOS Monterey  ### Selenium version  Javascript 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100, firefox 98.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 99, geckodriver 3.0.1  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","gravityvi","2022-04-06T15:55:14Z","2022-05-12T00:12:44Z"
"","10045","[🐛 Bug]: uploadFile not working with docker images exposing chromedriver directly","### What happened?  While trying to switch to latest selenium api 4.0, we hit the issue with the uploadFile. Generally if we use selenium chrome standalone docker image there are no issues, as that one uses selenium server internally.  But if you use other distributions (like selenoide/vnc:chrome_95.0) which allow to easily do video recording of the tests, the uploadFile will fails as it doesn't know the command with .../se/file since that is not implemented in the chromedriver out of the box, instead it should use .../file which is implemented.  As both should be possible, I suppose we need a fallback mechanism to allow this to work, or eventually a mechanism to detect or turn it one based on environment variable / system properties.  ### How can we reproduce the issue?  ```shell - Assuming it's a java based project - Assuming it enable LocalFileDetector in your driver with following: ((RemoteWebDriver) driver).setFileDetector(new LocalFileDetector()); - Assuming the page have a input of type ""file"" - On your selenium element, sendKeys(...) with corresponding filepath in the input element of type ""file""  observe the error in the logs (see below)  This is due to the current code (1) which force to use .../se/file for UPLOAD_FILE operation, while chromedriver implement it at .../file already. (1) https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/remote/codec/w3c/W3CHttpCommandCodec.java#L161 ```   ### Relevant log output  ```shell INFO: Detected dialect: W3C  org.openqa.selenium.UnsupportedCommandException: unknown command: unknown command: session/c6d981124b6ec773f82df7c6eb73da7d/se/file ```   ### Operating System  Linux, Mac  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95, Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  95.0.4638.69, 96.0.4664.35  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","tyge68","2021-11-16T14:09:03Z","2021-12-19T00:07:52Z"
"","10342","[🐛 Bug]:Chromedriver 98 - --window-size= argument is not working on chromeoptions","### What happened?  While switching chrome to 98 and updating the chromedriver to 98 , --window-size= argument stopped changing the driver window resolution    ### How can we reproduce the issue?  ```shell ChromeOptions chromeOptions = new ChromeOptions();          chromeOptions.setExperimentalOption(""prefs"", prefs);         chromeOptions.addArguments(""start-maximized"");         chromeOptions.addArguments(""--disable-infobars"");         chromeOptions.addArguments(""--no-sandbox"");         chromeOptions.addArguments(""--disable-dev-shm-usage"");         chromeOptions.addArguments(""--window-size=1200, 800""); return chromeOptions;          driver = new ChromeDriver(chromeOptions); ```   ### Relevant log output  ```shell no indication for any related error on log ```   ### Operating System  Windows 10 , Windows server 2012  ### Selenium version  Selenium 3.141.59  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.80  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","levtomer","2022-02-09T14:35:42Z","2022-03-12T00:08:53Z"
"","10206","[🐛 Bug]: Unable to execute request for an existing session: java.util.concurrent.TimeoutException","### What happened?  While running k8s-deployment-full-grid.yaml on a kubernets cluster, I make a request to  http://selenium-router:4444/wd/hub  ``` 06:57:11.512 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""d9872562fdd32137b83c62f07eb36f4d"",""eventTime"": 1640933831511920124,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request for an existing session: java.util.concurrent.TimeoutException\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'selenium-router-deployment-764b9ff95-sd5m5', ip: '192.168.1.245', os.name: 'Linux', os.arch: 'amd64', os.version: '4.14.105-19-0022', java.version: '11.0.13'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'selenium-router-deployment-764b9ff95-sd5m5', ip: '192.168.1.245', os.name: 'Linux', os.arch: 'amd64', os.version: '4.14.105-19-0022', java.version: '11.0.13'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:72)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:83)\n\tat net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.Execution.executeSync(Execution.java:128)\n\tat net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379)\n\tat net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:83)\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:83)\n\tat net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.Execution.executeSync(Execution.java:128)\n\tat net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379)\n\tat net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:83)\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\n\tat org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:110)\n\tat org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)\n\tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:92)\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:110)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$NestedRoute.handle(Route.java:270)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\nCaused by: java.util.concurrent.TimeoutException\n\tat java.base\u002fjava.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1886)\n\tat java.base\u002fjava.util.concurrent.CompletableFuture.get(CompletableFuture.java:2021)\n\tat org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206)\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:66)\n\t... 53 more\n"",""exception.type"": ""org.openqa.selenium.TimeoutException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.router.HandleSession"",""http.host"": ""selenium-router:4444"",""http.method"": ""POST"",""http.request_content_length"": ""42"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fsession\u002fba009f4ceb9598b60400699a4dadcec3\u002felements"",""http.user_agent"": ""okhttp\u002f3.9.1"",""session.id"": ""ba009f4ceb9598b60400699a4dadcec3""}} ```  ### How can we reproduce the issue?  ```shell run k8s-deployment-full-grid.yaml on a kubernets cluster ```   ### Relevant log output  ```shell . ```   ### Operating System  centos7  ### Selenium version  java11  ### What are the browser(s) and version(s) where you see this issue?  unknown  ### What are the browser driver(s) and version(s) where you see this issue?  unknown  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","kasnet","2021-12-31T07:10:55Z","2022-02-21T00:09:04Z"
"","9980","[🐛 Bug]: requests to `/session/:id/se/vnc` do not respect page origin, are hardcoded to `0.0.0.0:4444`","### What happened?  While running [k8s-deployment-full-grid.yaml](https://github.com/SeleniumHQ/docker-selenium/blob/trunk/k8s-deployment-full-grid.yaml) on a local minikube cluster, I noticed that viewing a session video via the Sessions tab makes a request to `ws://0.0.0.0:4444` instead of having the request be relative to the host / origin of the page. All other requests correctly respect the document origin and make relative requests like `/graphql` etc. These requests seem to be initiated by `LiveView.tsx` `connect()` function  ![Screenshot from 2021-10-23 12-29-09](https://user-images.githubusercontent.com/7543705/138569044-3839fc5c-16a4-46db-af23-890b28aa108a.png)     ### How can we reproduce the issue?  ```shell - deploy [k8s-deployment-full-grid.yaml](https://github.com/SeleniumHQ/docker-selenium/blob/trunk/k8s-deployment-full-grid.yaml) to a local kubernetes cluster - set up a local dns entry e.g. in `/etc/hosts/` for the selenium hub such as `selenium.local.test    192.168.49.2` or whatever the cluster IP or IP of `svc/selenium-router` - navigate to the selenium hub dashboard on `selenium.local.test/ui/index.html` - run a test against the selenium cluster to trigger a session - navigate to the `Sessions` tab and click the video icon next to the session (🎥) to launch the in-browser vnc session - observe `net::ERR_CONNECTION_REFUSED` due to the request failing to `ws://0.0.0.0:4444/session/:id/se/vnc` when the request should be sent to `ws://selenium.local.test/session/:id/se/vnc` - run `kubectl port-forward svc/selenium-router -n default 4444:4444 --address='0.0.0.0'`, try to view the session again, observe that it now works ```   ### Relevant log output  ```shell value   websock.js:185:26 value   rfb.js:511:23 value   rfb.js:773:21 value   self-hosted:1222:27 (Async: setTimeout handler) n   rfb.js:286:8 n/i.connect LiveView.tsx:96:15 value   LiveView.tsx:108:9 ps  react-dom.production.min.js:219:410 Ml  react-dom.production.min.js:259:159 ... ```   ### Operating System  Ubuntu  ### Selenium version  4.0.0, nodejs  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 94  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","skylarmb","2021-10-23T19:45:55Z","2021-12-24T00:07:18Z"
"","10163","[🐛 Bug]: Response code 500. Message: Could not start a new session. Could not start a new session. Timed out waiting for driver server to shutdown.","### What happened?  While executing the selenium automation script in docker selenium grid in facing the below issue. Please help me to resolve this issue  org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Could not start a new session. Could not start a new session. Timed out waiting for driver server to shutdown.   ### How can we reproduce the issue?  ```shell DesiredCapabilities dr1 =new DesiredCapabilities(); 			dr1.setCapability(""browserName"", browser); //			dr1.setBrowserName(BrowserType.CHROME); 			dr1.setCapability(""platformName"", Platform.LINUX); 			System.out.println(gridurl); 			DriverManager.setDriver(new RemoteWebDriver(new URL(ConfigUtil.getpropertyvalue(""GRIDURL"")), dr1)); 			System.out.println(browser); 			System.out.println(ConfigUtil.getpropertyvalue(""GRIDURL"")); 		DriverManager.getDriver().get(ConfigUtil.getpropertyvalue(""ApplicationURL"")); ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Could not start a new session. Could not start a new session. Timed out waiting for driver server to shutdown. Build info: version: '4.1.0', revision: '87802e897b' System info: host: '813fdc3658fa', ip: '172.23.180.150', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.27-linuxkit', java.version: '11.0.11' Driver info: driver.version: unknown Build info: version: '4.1.0', revision: '87802e897b' System info: host: '813fdc3658fa', ip: '172.23.180.150', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.27-linuxkit', java.version: '11.0.11' Driver info: driver.version: unknown Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'ff91e36f0b77', ip: '172.23.178.249', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.27-linuxkit', java.version: '11.0.11' Driver info: driver.version: unknown Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'LENOVO', ip: '172.17.240.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, platformName: linux}], desiredCapabilities=Capabilities {browserName: chrome, platformName: LINUX}}] Capabilities {} ```   ### Operating System  Windows 10  ### Selenium version  java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96  ### Are you using Selenium Grid?  version 4","closed","I-defect,","kaviraja339","2021-12-18T03:48:45Z","2022-02-20T00:10:24Z"
"","10159","[🐛 Bug]: Selenium tests fails on start up when browser is not in foreground","### What happened?  While executing selenium tests with latest version of selenium, it opens the browser but fails to navigate to website when opened browser is not in the foreground of the screen. For example if we execute the tests through Jenkins on remote desktop, if the remote desktop is opened on local screen in foreground it executes the tests perfectly fine but fails when the remote connection is put in background/minimized. Local execution works fine because for each session it brings the browser in foreground of the screen.  Note: we see a line printed as org.openqa.selenium.remote.ProtocolHandshake createSession for successful execution but it dose not print on failure.  Always it wants the remote machine on focused.  ### How can we reproduce the issue?  ```shell Execute the tests(selenium version 4.0.0-rc-1) on remote machine without having the connection to remote machine opened in the local machine.  We have tried the same with latest selenium version 4.0.0.0 for IE and EDGE browsers. ```   ### Relevant log output  ```shell It is giving the same error messages mentioned in the issue #10137.   Due to company security restrictions, we are not allowed to share the log information. ```   ### Operating System  Windows 10  ### Selenium version  selenium version 4.0.0-rc-1  ### What are the browser(s) and version(s) where you see this issue?  IE and IE compatible EDGE browsers  ### What are the browser driver(s) and version(s) where you see this issue?  IE driver 4.0.0.0s  ### Are you using Selenium Grid?  NA","closed","needs-triaging,","BhavinMasterM","2021-12-16T17:53:30Z","2022-01-16T00:08:11Z"
"","10629","[🐛 Bug]: cant able to switch between windows in IE (mode) in serenity framework","### What happened?  While executing in IE mode in edge, I cant able to switch to the new window, if anyone have the solution please help me with the solution. Below is the code I was using,  String parent=driver.getWindowHandle(); Sets=driver.getWindowHandles(); Iterator I1= s.iterator(); while(I1.hasNext()) { String child_window=I1.next(); if(!parent.equals(child_window)) { driver.switchTo().window(child_window); }  ### How can we reproduce the issue?  ```shell String parent=driver.getWindowHandle(); Sets=driver.getWindowHandles(); Iterator I1= s.iterator(); while(I1.hasNext()) { String child_window=I1.next(); if(!parent.equals(child_window)) { driver.switchTo().window(child_window); } ```   ### Relevant log output  ```shell . ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  edge 101 version  ### What are the browser driver(s) and version(s) where you see this issue?  msEdgeDriver 101 version  ### Are you using Selenium Grid?  _No response_","closed","I-question,","kishoreCraziee","2022-05-10T10:55:23Z","2022-06-10T00:11:48Z"
"","10040","[🐛 Bug]: Menu links are being double-rendered","### What happened?  While crawling https://www.thebraintrainco.com/early-childhood-intervention/ the menu links are being double-rendered. This is not seen using a desktop version of Chrome.  ### How can we reproduce the issue?  ```shell ChromeOptions options = new ChromeOptions(); 		options.setBinary(""/usr/bin/chrome"");   		//remove unexepectedalertexceptions 		options.addArguments(""--unexpectedAlertBehaviour=dismiss"", ""--headless"", ""--blink-settings=imagesEnabled=false"", ""--disable-blink-features"", ""--disable-notifications"",  				""--disable-blink-features=AutomationControlled"", ""--disable-gpu"", ""--no-sandbox"", ""--window-size=1920,1200"", ""--ignore-certificate-errors"", ""--disable-application-cache"");    		//no alerts 		options.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, ""dismiss""); 		 		// no downloads 		Map chromePrefs = new HashMap(); 		chromePrefs.put(""download_restrictions"", 3); //		chromePrefs.put(""download.prompt_for_download"", ""True""); 		chromePrefs.put(""download.default_directory"", ""/dev/null""); 		 		options.setExperimentalOption(""prefs"", chromePrefs); 		         LoggingPreferences logPrefs = new LoggingPreferences();         logPrefs.enable(LogType.PERFORMANCE, Level.ALL); //        options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);         options.setCapability( ""goog:loggingPrefs"", logPrefs );         options.setPageLoadStrategy(PageLoadStrategy.EAGER);  		DriverService.Builder serviceBuilder = new ChromeDriverService.Builder().withSilent(true); 		ChromeDriverService chromeDriverService = (ChromeDriverService)serviceBuilder.build();   		chromeDriverService.start(); 		 		ClientConfig config = ClientConfig.defaultConfig().connectionTimeout(Duration.ofMinutes(10))                 .readTimeout(Duration.ofMinutes(10)).baseUrl(chromeDriverService.getUrl());         Tracer tracer = OpenTelemetryTracer.getInstance();         CommandExecutor executor = new HttpCommandExecutor(                 buildChromiumCommandMappings(""goog""),                 config,                 new TracedHttpClient.Factory(tracer, HttpClient.Factory.createDefault()));          RemoteWebDriver driver = new RemoteWebDriver(executor, options);          Map parameters = new HashMap();          //Stop caching         parameters.put(""cacheDisabled"", ""true"");         Command cacheDisableCommand = new Command(driver.getSessionId(), ChromiumDriverCommand.EXECUTE_CDP_COMMAND, ImmutableMap.of(""cmd"", ""Network.setCacheDisabled"", ""params"", parameters));         driver.getCommandExecutor().execute(cacheDisableCommand);          //Stop any unwanted downloading of *.pdf *.crdownload et al. files         parameters = new HashMap();         parameters.put(""behavior"", ""deny"");         Command setDownloadBehaviorCommand = new Command(driver.getSessionId(), ChromiumDriverCommand.EXECUTE_CDP_COMMAND, ImmutableMap.of(""cmd"", ""Browser.setDownloadBehavior"", ""params"", parameters));         driver.getCommandExecutor().execute(setDownloadBehaviorCommand); 		     	driver.manage().timeouts().pageLoadTimeout(Duration.ofMillis(60000);     	driver.manage().timeouts().setScriptTimeout(Duration.ofMillis(5000);  		Map parameters = new HashMap(); 		parameters.put(""userAgent"", ""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36""); 		 		Command addScriptCommand = new Command(driver.getSessionId(), ChromiumDriverCommand.EXECUTE_CDP_COMMAND, ImmutableMap.of(""cmd"", ""Network.setUserAgentOverride"", ""params"", parameters)); 		driver.getCommandExecutor().execute(addScriptCommand);  		JavascriptExecutor js = (JavascriptExecutor) driver; 		driver.get(uRL.toExternalForm()); 		content = driver.getPageSource(); ``` ```   ### Relevant log output  ```shell The menu items with duplicated links are below:   	Sensorimotor Intensive ProgramSensorimotor Intensive Program 	Early Childhood InterventionEarly Childhood Intervention 	Occupational TherapyOccupational Therapy 	Speech PathologySpeech Pathology 	PhysiotherapyPhysiotherapy 	Exercise PhysiologyExercise Physiology 	Family SupportFamily Support  ```   ### Operating System  Linux  ### Selenium version  Selenium 4 - Beta 2  ### What are the browser(s) and version(s) where you see this issue?  Chrome version 88  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver version 88  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","githubuser100007","2021-11-14T21:01:16Z","2021-12-16T00:06:55Z"
"","10259","[🐛 Bug]: Adding CDP listener results in Connection pool is full errors","### What happened?  whenever I'm using CDP listener with the undetected driver, on the new version, I'm getting this error after adding a few listeners: WARNING:urllib3.connectionpool:Connection pool is full, discarding connection: localhost  By adding a CDP listener, a few times in a row, with 3 seconds interval between each, it'll keep the errors shown above on the terminal. It was running fine on previous versions, however, the previous version was detected by Cloudflare, so using them is not an option for me. I guess the reason is that the CDP connection made will not be closed after they ran completely.  ### How can we reproduce the issue?  ```shell driver.add_cdp_listener('Network.requestWillBeSent', self.get_header) I should also mention that the method get_header usually finishes in less than mili seconds. ```   ### Relevant log output  ```shell Python 3.9.9 undetected-chromedriver 3.1.3 selenium 4.1.0  ------------- WARNING:urllib3.connectionpool:Connection pool is full, discarding connection: localhost WARNING:urllib3.connectionpool:Connection pool is full, discarding connection: localhost WARNING:urllib3.connectionpool:Connection pool is full, discarding connection: localhost WARNING:urllib3.connectionpool:Connection pool is full, discarding connection: localhost WARNING:urllib3.connectionpool:Connection pool is full, discarding connection: localhost ```   ### Operating System  Macos & windows 10  ### Selenium version  Python 4.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome v96  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver v96  ### Are you using Selenium Grid?  No","closed","C-devtools,","ManiMozaffar","2022-01-17T14:31:21Z","2022-04-13T00:11:32Z"
"","10282","[🐛 Bug]: Selenium 4 ""Failed to establish a new connection"" exception when 250 webdrivers created using Python","### What happened?  When you try to create and keep alive, around 250 webdrivers at the same time an exception is shown. This doesn't happen with Selenium 3.  I reproduce it using remote drivers with a Selenium grid with version 4.1.0 just because I can't create this number of drivers on my local machine so I'm not sure if the issue is reproduced with local drivers or just with remotes. But, in both scenarios (using in my local Selenium 3: work, or Selenium 4:issue) I'm using the v4.1.0 in the Grid  Looking in to the code i found the issue is located with the new funcion `_get_connection_manager()` [https://github.com/SeleniumHQ/selenium/blob/d7dfe5ec604faae440cc0be2c088c8ba9b92804f/py/selenium/webdriver/remote/remote_connection.py#L131](url)  ### How can we reproduce the issue?  ```shell With Selenium 4.1.0 in your local, try to create 250 remote webdrivers without closing anyone first, using a Selenium grid v4.1.0 ```   ### Relevant log output  ```shell File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 268, in __init__   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 359, in start_session   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 422, in execute   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py"", line 421, in execute   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py"", line 443, in _request   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/request.py"", line 78, in request   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/request.py"", line 170, in request_encode_body   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/poolmanager.py"", line 375, in urlopen   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 783, in urlopen   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 783, in urlopen   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 783, in urlopen   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 755, in urlopen   File ""/Users/user/.pyenv/versions/3.8.6/lib/python3.8/site-packages/urllib3/util/retry.py"", line 574, in increment urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='x.x.x.x', port=yyyy): Max retries exceeded with url: /wd/hub/session (Caused by NewConnectionError(': Failed to establish a new connection: [Errno 24] Too many open files')) ```   ### Operating System  macOS Monterey  ### Selenium version  Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  4.1.0","closed","needs-triaging,","bott17","2022-01-24T10:28:59Z","2022-02-24T00:08:57Z"
"","10415","[🐛 Bug]: An error is reported on the page when searching for the title in the API document","### What happened?  When viewing the API document, page 404  ### How can we reproduce the issue?  ```shell Access address:https://www.selenium.dev/selenium/docs/api/java/overview-summary.html seach : title select : org.openqa.selenium.support.ui.ExpectedConditions.titleContains(String) ```   ### Relevant log output  ```shell 404 File not found ```   ### Operating System  win7  ### Selenium version  Java  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  None  ### Are you using Selenium Grid?  _No response_","closed","C-docs,","zhangheng0027","2022-03-07T09:48:12Z","2022-05-08T00:11:25Z"
"","10025","[🐛 Bug]: FindElements By TagName doesn't work anymore inside Shadow root element","### What happened?  When using version 4.0.0 and up of Selenium, I get this error now when trying to find elements by tag name inside a shadow root element  ``` javascript error: b.getElementsByTagName is not a function   (Session info: chrome=95.0.4638.69) ```  This error isn't there when I use version 3.141.0 and it's only when the find element is with tag name as far as I checked.  I'm using the x64 version of ChromeDriver 95.0.4638.69 and the application is in C# with .Net5.0  To reproduce, simply try it with Chrome download page.  ### How can we reproduce the issue?  ```shell [HttpGet(""TestShadowRoot"")]         public bool TestShadowRoot()         {             try             {                 var driver = new ChromeDriverNoOptions().GenerateDriver(); //Change this to generate the driver                 driver.Navigate().GoToUrl(""chrome://downloads"");                 var root = driver.FindElement(By.XPath(""/*""));                 var shadowRoot = (IWebElement)((IJavaScriptExecutor)driver).ExecuteScript(""return arguments[0].querySelector(arguments[1]).shadowRoot"",                                                                                            root,                                                                                            new string[] { ""downloads-manager"" });                 var elements = shadowRoot.FindElements(By.TagName(""cr-button""));             }             catch (Exception ex)             {                 return false;             }              return true;         } ```   ### Relevant log output  ```shell javascript error: b.getElementsByTagName is not a function   (Session info: chrome=95.0.4638.69) ```   ### Operating System  Windows 10  ### Selenium version  C# 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.69  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","squilcon","2021-11-10T22:57:11Z","2022-01-01T00:07:30Z"
"","10893","[🐛 Bug]: Edge Driver returning 'Cannot determine loading status' for specific URL","### What happened?  When using the Edge driver to go on IBM FixCentral website, it returns the attached error stack. When tested with www.google.com and www.cnn.com, it works with no problem. The only URL I have noticed this issue with is this specific one: https://www.ibm.com/support/fixcentral/swg/identifyFixes?query.parent=IBM%20Security&query.product=ibm~Other%20software~IBM%20Security%20QRadar%20SIEM&query.release=7.40&query.platform=Linux   When used with the Chrome driver, it faces no problems.  I have verified my Edge browser is running the latest version, has the correct driver, and my selenium version is good.   ### How can we reproduce the issue?  ```shell import os.path  import re  import tarfile  from tkinter import *  from tkinter.filedialog import askopenfilename   fixCentral_URL = 'https://www.ibm.com/support/fixcentral/swg/identifyFixesquery.parent=IBM%20Security&query.product=ibm~Other%20software~IBM%20Security%20QRadar%20SIEM&query.release='+ matchesToStr + '.0&query.platform=Linux'   from selenium import webdriver  import time  driver = webdriver.Edge('./msedgedriver')  driver.get(fixCentral_URL) driver.find_element_by_xpath('/html/body/div[1]/div[4]/main/div/div/div/div/div[1]/div[1]/form/p[2]/button[1]').click()  ```   ### Relevant log output  ```shell selenium.common.exceptions.WebDriverException: Message: unknown error: cannot determine loading status from unknown error: unexpected command response   (Session info: MicrosoftEdge=103.0.1264.62) Stacktrace: Backtrace: 	Microsoft::Applications::Events::EventProperties::unpack [0x00007FF6D8E66312+24642] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x00007FF6D8DB9A62+334098] 	Ordinal0 [0x00007FF6D8957915+620821] 	Ordinal0 [0x00007FF6D89464C5+550085] 	Ordinal0 [0x00007FF6D8945A7B+547451] 	Ordinal0 [0x00007FF6D8944E45+544325] 	Ordinal0 [0x00007FF6D8943BB0+539568] 	Ordinal0 [0x00007FF6D8944133+540979] 	Ordinal0 [0x00007FF6D894FE00+589312] 	Ordinal0 [0x00007FF6D8960492+656530] 	Ordinal0 [0x00007FF6D8964AA9+674473] 	Ordinal0 [0x00007FF6D89444D5+541909] 	Ordinal0 [0x00007FF6D8960051+655441] 	Ordinal0 [0x00007FF6D89C3516+1062166] 	Ordinal0 [0x00007FF6D89AECB3+978099] 	Ordinal0 [0x00007FF6D8985F00+810752] 	Ordinal0 [0x00007FF6D8987508+816392] 	Microsoft::Applications::Events::EventProperty::EventProperty [0x00007FF6D8C1D578+135480] 	Microsoft::Applications::Events::EventProperty::EventProperty [0x00007FF6D8C04C77+34871] 	Microsoft::Applications::Events::EventProperty::EventProperty [0x00007FF6D8C07CFC+47292] 	Microsoft::Applications::Events::EventProperty::to_string [0x00007FF6D8A611B6+23222] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x00007FF6D8DC0F6B+364059] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x00007FF6D8DC59A4+383060] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x00007FF6D8DC5AFD+383405] 	Microsoft::Applications::Events::time_ticks_t::time_ticks_t [0x00007FF6D8DD040E+39918] 	BaseThreadInitThunk [0x00007FFDA40813D2+34] 	RtlUserThreadStart [0x00007FFDA68954F4+52] ```   ### Operating System  Windows Server 2016, Windows 10, Windows 8, Mac OSX 12.4  ### Selenium version  Python 4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Edge v 103.0.1264.62  ### What are the browser driver(s) and version(s) where you see this issue?  MSEdgeDriver 103.0.1264.62  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","jgilbrook","2022-07-20T22:48:42Z","2022-07-22T12:27:01Z"
"","10661","[🐛 Bug]: Can't use Augmenter when sockets aren't supported","### What happened?  When using Selenium Grid on a platform that does not support socket connections, when client runs Augmenter and executes the `HasDevTools getImplementation()`, results in 'org.openqa.selenium.remote.http.ConnectionFailedException' exception.  I believe the other bindings only connect to the socket when making a call that requires it.  ### How can we reproduce the issue?  ```shell FirefoxOptions browserOptions = new FirefoxOptions();          browserOptions.setPlatformName(""Windows 10"");         browserOptions.setBrowserVersion(""latest"");          Map sauceOptions = new HashMap();         sauceOptions.put(""seleniumVersion"", ""4.0.0"");         sauceOptions.put(""username"", System.getenv(""SAUCE_USERNAME""));         sauceOptions.put(""accessKey"", System.getenv(""SAUCE_ACCESS_KEY""));          WebDriver driver = RemoteWebDriver.builder()                 .oneOf(browserOptions)                 .setCapability(""sauce:options"", sauceOptions)                 .address(""https://ondemand.us-west-1.saucelabs.com/wd/hub"")                 .build(); ```   ### Relevant log output  ```shell org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to http://10.119.84.104:4443/session/f2b4c34d-bed6-491e-8a2d-37cc78560801/se/cdp Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'SL-1495.local', ip: '172.30.110.117', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_292' Driver info: driver.version: unknown  	at org.openqa.selenium.remote.http.netty.NettyWebSocket.(NettyWebSocket.java:104) 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.lambda$create$3(NettyWebSocket.java:137) 	at org.openqa.selenium.remote.http.netty.NettyClient.openSocket(NettyClient.java:127) 	at org.openqa.selenium.devtools.Connection.(Connection.java:77) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.(SeleniumCdpConnection.java:34) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.lambda$create$0(SeleniumCdpConnection.java:56) 	at java.util.Optional.map(Optional.java:215) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.create(SeleniumCdpConnection.java:54) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.create(SeleniumCdpConnection.java:47) 	at org.openqa.selenium.devtools.DevToolsProvider.getImplementation(DevToolsProvider.java:48) 	at org.openqa.selenium.devtools.DevToolsProvider.getImplementation(DevToolsProvider.java:29) 	at org.openqa.selenium.remote.Augmenter.augment(Augmenter.java:186) 	at org.openqa.selenium.remote.RemoteWebDriverBuilder.build(RemoteWebDriverBuilder.java:363) 	at com.saucedemo.selenium.se4newfeatures.RemoteWebDriverBuilderTest.webDriverBuilder(RemoteWebDriverBuilderTest.java:51) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688) 	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) 	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) 	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) 	at java.util.ArrayList.forEach(ArrayList.java:1259) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) 	at java.util.ArrayList.forEach(ArrayList.java:1259) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) 	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) 	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) ```   ### Operating System  N/A  ### Selenium version  Java 4.0+   ### What are the browser(s) and version(s) where you see this issue?  Firefox & Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  4.0+","closed","C-devtools,","titusfortner","2022-05-17T20:13:28Z","2022-07-07T00:13:22Z"
"","10111","[🐛 Bug]: ""WARNING: Failed to resolve host name"" displayed with Selenium 4.1.0 on MacOS.","### What happened?  When using Selenium 4.1.0 (Chrome 96, MacOS, Serenity BDD 3.1.4) the follow warning appears during test execution:  ``` Dec 02, 2021 2:32:43 PM org.openqa.selenium.net.HostIdentifier resolveHostName WARNING: Failed to resolve host name java.lang.InterruptedException         at java.base/java.lang.Object.wait(Native Method)         at java.base/java.lang.Object.wait(Object.java:472)         at java.base/java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:408)         at java.base/java.lang.ProcessImpl.waitFor(ProcessImpl.java:449)         at org.openqa.selenium.net.HostIdentifier.resolveHostName(HostIdentifier.java:52)         at org.openqa.selenium.net.HostIdentifier.getHostName(HostIdentifier.java:112)         at org.openqa.selenium.WebDriverException.getSystemInformation(WebDriverException.java:95)         at org.openqa.selenium.WebDriverException.createMessage(WebDriverException.java:87)         at org.openqa.selenium.WebDriverException.getMessage(WebDriverException.java:65)         at java.base/java.lang.Throwable.getLocalizedMessage(Throwable.java:397)         at java.base/java.lang.Throwable.toString(Throwable.java:496)         at java.base/java.lang.Throwable.(Throwable.java:317)         at java.base/java.lang.Exception.(Exception.java:103)         at java.base/java.lang.RuntimeException.(RuntimeException.java:97)         at java.base/java.util.concurrent.CompletionException.(CompletionException.java:88)         at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)         at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)         at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1770)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)         at java.base/java.lang.Thread.run(Thread.java:833) ```  This message did not appear in version 4.0.0.  ### How can we reproduce the issue?  ```shell https://github.com/serenity-dojo/swaglabs-serenity-cucumber.git   Run ""mvn verify"" (problem observed on MacOS). ```   ### Relevant log output  ```shell Dec 02, 2021 2:32:43 PM org.openqa.selenium.net.HostIdentifier resolveHostName WARNING: Failed to resolve host name java.lang.InterruptedException         at java.base/java.lang.Object.wait(Native Method)         at java.base/java.lang.Object.wait(Object.java:472)         at java.base/java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:408)         at java.base/java.lang.ProcessImpl.waitFor(ProcessImpl.java:449)         at org.openqa.selenium.net.HostIdentifier.resolveHostName(HostIdentifier.java:52)         at org.openqa.selenium.net.HostIdentifier.getHostName(HostIdentifier.java:112)         at org.openqa.selenium.WebDriverException.getSystemInformation(WebDriverException.java:95)         at org.openqa.selenium.WebDriverException.createMessage(WebDriverException.java:87)         at org.openqa.selenium.WebDriverException.getMessage(WebDriverException.java:65)         at java.base/java.lang.Throwable.getLocalizedMessage(Throwable.java:397)         at java.base/java.lang.Throwable.toString(Throwable.java:496)         at java.base/java.lang.Throwable.(Throwable.java:317)         at java.base/java.lang.Exception.(Exception.java:103)         at java.base/java.lang.RuntimeException.(RuntimeException.java:97)         at java.base/java.util.concurrent.CompletionException.(CompletionException.java:88)         at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:315)         at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:320)         at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1770)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)         at java.base/java.lang.Thread.run(Thread.java:833)  -------------------  14:40:34.414 [main] INFO  i.g.bonigarcia.wdm.WebDriverManager - Using chromedriver 96.0.4664.45 (resolved driver for Chrome 96) 14:40:34.455 [main] INFO  i.g.bonigarcia.wdm.WebDriverManager - Exporting webdriver.chrome.driver as /Users/john/.cache/selenium/chromedriver/mac64/96.0.4664.45/chromedriver Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 63409 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Dec 02, 2021 2:40:38 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Dec 02, 2021 2:40:38 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 96 ```   ### Operating System  macOS  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  No","closed","I-defect,","wakaleo","2021-12-02T14:49:08Z","2022-01-10T00:07:35Z"
"","10010","[🐛 Bug]: Exception in FirefoxDriver constructor after assembly but not during development","### What happened?  When using FirefoxDriver in a Java program created using the maven-assembly-plugin, the FirefoxDriver constructor produces an exception and no driver is created. This, despite the usage of WebDriverManager and a functioning installation of Firefox. The issue does not occur when executing the program within IntelliJ IDEA.  ### How can we reproduce the issue?  Java snippet:  ```java import io.github.bonigarcia.wdm.WebDriverManager; import org.openqa.selenium.WebDriverException; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.remote.service.DriverService; import org.openqa.selenium.support.ui.WebDriverWait;  import java.time.Duration; import java.util.List; import java.util.ServiceLoader; import java.util.stream.Collectors;  public class Test {     public static void main(final String[] args) {         WebDriverManager.firefoxdriver().setup();          final List driverServiceBuilders = ServiceLoader.load(DriverService.Builder.class)                 .stream()                 .map(b -> b.type().getName().replaceAll(""[A-Za-z.]+\\."", """"))                 .collect(Collectors.toUnmodifiableList());         System.out.println(driverServiceBuilders);          final var options = new FirefoxOptions();         options.setHeadless(true);         final var driver = new FirefoxDriver(options);         final var wait = new WebDriverWait(driver, Duration.ofSeconds(10));          try {             // ...         } catch (final WebDriverException e) {             // ...         } finally {             driver.quit();         }     } } ```  Corresponding Maven configuration: ```xml       4.0.0      com.example     test     0.0.1-SNAPSHOT               11         @         ${java.version}         ${java.version}         UTF-8         UTF-8                                          org.seleniumhq.selenium             selenium-java             4.0.0                                        io.github.bonigarcia             webdrivermanager             5.0.3                                        org.slf4j             slf4j-simple             1.7.32                                                           org.apache.maven.plugins                 maven-assembly-plugin                 3.3.0                                                               package                                                      single                                                                                                                                                     Test                                                                                                                            jar-with-dependencies                                                                                                                         ```   ### Relevant log output  Running the code from within IntelliJ IDEA gives the following log:  ```shell [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Using geckodriver 0.30.0 (resolved driver for Firefox 93) [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Exporting webdriver.gecko.driver as [...]\.cache\selenium\geckodriver\win64\0.30.0\geckodriver.exe [ChromeDriverService$Builder, EdgeDriverService$Builder, GeckoDriverService$Builder, XpiDriverService$Builder, InternetExplorerDriverService$Builder, OperaDriverService$Builder, SafariDriverService$Builder, SafariTechPreviewDriverService$Builder] 1635979091778	geckodriver	INFO	Listening on 127.0.0.1:58965 1635979092654	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""-headless"" ""--remote-debugging-port"" ""53683"" ""-no-remote"" ""-profile"" ""[...]"" *** You are running in headless mode. 1635979092860	Marionette	INFO	Marionette enabled (... more successful geckodriver stuff ...) ```  Whereas the assembled jar outputs this: ```shell [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Using geckodriver 0.30.0 (resolved driver for Firefox 93) [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Exporting webdriver.gecko.driver as [...]\.cache\selenium\geckodriver\win64\0.30.0\geckodriver.exe [ChromeDriverService$Builder] Exception in thread ""main"" org.openqa.selenium.WebDriverException: Build info: version: '4.0.0', revision: '3a21814679' System info: host: '[...]', ip: '[...]', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.11' Driver info: driver.version: FirefoxDriver         at java.base/java.util.Optional.orElseThrow(Optional.java:408)         at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:230)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186)         at Test.main(Test.java:25) ```  Note especially that the list of available driver service builders is reduced from eight instances to one. Internet Explorer, Edge, Chrome, and Firefox are all installed on my system, and I have not installed any drivers outside of those managed by WebDriverManager.   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox latest  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","TobiasHeinen","2021-11-03T23:25:41Z","2022-03-10T00:09:28Z"
"","9928","[🐛 Bug]: Turn off remote debugging to open this site in IE mode otherwise it might not work as expected.","### What happened?  When using dotnet Selenium 4 bindings with the IEServerDriver and Edge mode the MSEdge browser starts and visits the correct page but displays ""Turn off remote debugging to open this site in IE mode otherwise it might not work as expected.""  ### How can we reproduce the issue?  ```shell var options = new InternetExplorerOptions {     UnhandledPromptBehavior = UnhandledPromptBehavior.Dismiss,     IgnoreZoomLevel = true,     EnablePersistentHover = true,     PageLoadStrategy = PageLoadStrategy.Default,     AttachToEdgeChrome = true,     EdgeExecutablePath = @""C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"" }; options.SetLoggingPreference(""driver"", LogLevel.Warning); options.SetLoggingPreference(""browser"", LogLevel.Warning); ```   ### Relevant log output  ```shell NA ```   ### Operating System  Windows 10  ### Selenium version  4  ### What are the browser(s) and version(s) where you see this issue?  Edge 94.0.992.47  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 3.150.2.0  ### Are you using Selenium Grid?  NA","closed","D-IE,","JDCain","2021-10-14T18:49:00Z","2022-01-26T00:10:04Z"
"","10064","[🐛 Bug]: RemoteWebDriverBuilder does not respect config with local driver","### What happened?  When using `RemoteWebDriverBuilder.config()` to set a `ClientConfig` instance that does not contain a `baseUri` and does not set an address with `address()` method, the `build()` method will get a non null return from `this.getLocalDriver()`, but that method does not create a driver using the provided `ClientConfig` values.  I don't actually see a way to set a `ClientConfig` for local driver sessions, which, if that's the case, is a bigger issue to address. For this I think we should at least throw an exception that the config instance provided can not be respected if we get a local driver result.  ### How can we reproduce the issue?  ```shell FirefoxOptions browserOptions = new FirefoxOptions();         ClientConfig config = ClientConfig.defaultConfig()                 .connectionTimeout(Duration.ofMinutes(5))                 .readTimeout(Duration.ofMinutes(4));          WebDriver driver = RemoteWebDriver.builder()                 .oneOf(browserOptions)                 .config(config)                 .build(); ```   ### Relevant log output  ```shell n/a ```   ### Operating System  n/a  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  n/a  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  n/a","closed","I-defect,","titusfortner","2021-11-20T01:29:12Z","2022-02-05T00:06:04Z"
"","10799","[🐛 Bug]: Error using user-data-dir= in Chrome 103.0.5060.53","### What happened?  When using **chrome_options.add_argument('user-data-dir='** in Chrome 103 the error occurs:  Selenium.common.exceptions.WebDriverException: Message: unknown error: unexpected command response   (Session info: chrome=103.0.5060.53)  **if I remove this parameter, it works.**  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.chrome.service import Service  chrome_options = webdriver.ChromeOptions() chrome_options.add_argument('user-data-dir=C:\\Perfil')  driver_path = 'chromedriver.exe' service = Service(driver_path) driver = webdriver.Chrome(service=service,options=chrome_options)  driver.get(""https://google.com"") ```   ### Relevant log output  ```shell elenium.common.exceptions.WebDriverException: Message: unknown error: unexpected command response   (Session info: chrome=103.0.5060.53) Stacktrace: Backtrace: 	Ordinal0 [0x007E6463+2188387] 	Ordinal0 [0x0077E461+1762401] 	Ordinal0 [0x00693D78+802168] 	Ordinal0 [0x00687210+750096] 	Ordinal0 [0x0068675A+747354] 	Ordinal0 [0x00685D3F+744767] 	Ordinal0 [0x0068557C+742780] 	Ordinal0 [0x00699BF3+826355] 	Ordinal0 [0x006ECF6D+1167213] 	Ordinal0 [0x006DC5F6+1099254] 	Ordinal0 [0x006B6BE0+945120] 	Ordinal0 [0x006B7AD6+948950] 	GetHandleVerifier [0x00A871F2+2712546] 	GetHandleVerifier [0x00A7886D+2652765] 	GetHandleVerifier [0x0087002A+520730] 	GetHandleVerifier [0x0086EE06+516086] 	Ordinal0 [0x0078468B+1787531] 	Ordinal0 [0x00788E88+1805960] 	Ordinal0 [0x00788F75+1806197] 	Ordinal0 [0x00791DF1+1842673] 	BaseThreadInitThunk [0x75F7FA29+25] 	RtlGetAppContainerNamedObjectPath [0x77987A9E+286] 	RtlGetAppContainerNamedObjectPath [0x77987A6E+238] ```   ### Operating System  Windows 10 and Manjaro  ### Selenium version  Python (Selenium 4)  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53  ### Are you using Selenium Grid?  _No response_","closed","","cjdduarte","2022-06-23T00:28:43Z","2022-07-31T02:45:27Z"
"","10588","Selenium inside Docker TLS Handshake Error[🐛 Bug]:","### What happened?  When trying to reach ea.com from inside Docker Container with selenium. I get an webpage with following Error: `502 Bad Gateway TlsProtocolException('Cannot establish TLS with accounts.ea.com:443 (sni: accounts.ea.com): TlsException(""SSL handshake error: Error([(\'SSL routines\', \'\', \'unsafe legacy renegotiation disabled\')])"")')`  It happended since I update chromedriver and google-chrome and it only happens inside Docker-Container.  Im not sure if its correct to post it here, but im stuck since 2 days with this errror.  ### How can we reproduce the issue?  ```shell print(""not local init..."") # chrome_options.add_argument('--headless') chrome_options.add_argument(""--window-size=1920x1080"") chrome_options.add_argument('--disable-gpu') chrome_options.add_argument(""--disable-dev-shm-usage"") chrome_options.add_argument(""--no-sandbox"") chrome_options.add_argument(""--remote-debugging-port=9222"") chrome_options.add_argument('--ignore-certificate-errors') chrome_options.add_argument('--ignore-ssl-errors')  driver = webdriver.Chrome(options=chrome_options) ```   ### Relevant log output  ```shell 502 Bad Gateway TlsProtocolException('Cannot establish TLS with accounts.ea.com:443 (sni: accounts.ea.com): TlsException(""SSL handshake error: Error([(\'SSL routines\', \'\', \'unsafe legacy renegotiation disabled\')])"")')` ```   ### Operating System  Ubuntu  ### Selenium version  newest  ### What are the browser(s) and version(s) where you see this issue?  101  ### What are the browser driver(s) and version(s) where you see this issue?  chrome  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","thlorenzen","2022-04-28T19:24:04Z","2022-05-29T00:12:54Z"
"","10825","[🐛 Bug]: Cannot pass custom capabilities to handshake","### What happened?  When trying to pass some custom desired capabilities (like access key, test name, etc), Selenium shortlists all the passed capabilities according to `_W3C_CAPABILITY_NAMES` list and losses the ones which are necessary for the handshake. This bug started after https://github.com/SeleniumHQ/selenium/pull/10494 being merged. The bug disappears if this change is reverted.  ### How can we reproduce the issue?  ```shell from selenium import webdriver options = webdriver.ChromeOptions() options.set_capability(""browserVersion"", 103) options.set_capability(""testName"", current_test_name) options.set_capability(""accessKey"", get_browser_access_key()) webdriver.Remote('', options=options) ```   ### Relevant log output  ```shell self =  response = {'status': 401, 'value': '{\n  ""message"" : ""No credentials provided"",\n  ""value"" : {\n    ""message"" : ""No credentials provided""\n  },\n  ""status"" : 401\n}'} ```   ### Operating System  macOS Monterey  ### Selenium version  Python 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53  ### Are you using Selenium Grid?  _No response_","closed","","AndriusZal","2022-06-28T15:20:48Z","2022-07-29T00:12:16Z"
"","10234","[🐛 Bug]: Selenium 4.1.0 failed to obtain webdriver instance for Chrome, Edge and Safari on macOS (M1)","### What happened?  When trying to obtain the webdriver instance using Python `3.10` (Selenium `4.1.0`) on macOS Big Sur (`11.6`) **Apple Silicon**, Selenium raises an exception, but the message only includes a line break ""\n"".   Confirmed browsers that have this issue: - Safari: version `15.2 (16612.3.6.1.8, 16612)` - Microsoft Edge stable: `97.0.1072.55`, driver version: `97.0.1072.55 (ce3bf3364880558d4945082f4ac36e01fe36716e)` - Microsoft Edge canary: `99.0.1127.0`, driver version: `99.0.1127.0 (66f7d37d5932c101d04eac8b872ec520160c21ff)` - Google Chrome stable: `97.0.4692.36` driver version: `97.0.4692.36 (747e0a0f19c13ca6ee136200f5b097448ae4892f-refs/branch-heads/4692@{#607})`  However, the same example codes works just fine on Linux systems (`x86_64`)  ### How can we reproduce the issue?  ```shell 1. Install web browser (Microsoft Edge): 97.0.1072.55 2. Install web driver of the same version: 97.0.1072.55 3. Run this code (Python 3.10 and Selenium 4.1.0)  from selenium.webdriver import Edge  try:     exec_path = ""/Users/zhongdongy/Libs/msedgedriver""     driver = Edge(exec_path)     print(driver)     driver.get('https://bing.com') except Exception as e:     print(e)     exit(1) ```   ### Relevant log output  ```shell The exception only includes one ""\n"" in exception message.  ![Screenshot of exception in PyCharm debugger](https://i.stack.imgur.com/NeWIM.png) ```   ### Operating System  macOS Big Sur  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 97, Edge 99, Chrome 97, Safari 15.2  ### What are the browser driver(s) and version(s) where you see this issue?  Edge 97.0.1072.55, Edge 99.0.1127.0, Chrome 97.0.4692.36  ### Are you using Selenium Grid?  No","closed","I-defect,","zhongdongy","2022-01-08T07:17:56Z","2022-06-13T00:13:39Z"
"","9947","[🐛 Bug]: .Net C# / Selenium 4.0: IE Timing out with InterExplorerDriver and IE Mode options","### What happened?  When trying to Launch New Internet Explorer with InternetExplorerOptions for Edge in IE Mode.  I got WebDriverException. Stack Trace is as follows. ``` Exception thrown: 'OpenQA.Selenium.WebDriverException' in WebDriver.dll An unhandled exception of type 'OpenQA.Selenium.WebDriverException' occurred in WebDriver.dll The HTTP request to the remote WebDriver server for URL http://localhost:50413/session timed out after 60 seconds. Inner Exception: ""A task was canceled.""   Document     | Name | Value | Type -- | -- | -- | --   | StackTrace | ""   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at OpenQA.Selenium.Remote.HttpCommandExecutor.d__35.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)"" | string    ```  ### How can we reproduce the issue?  ```shell var ieOptions = new InternetExplorerOptions(); ieOptions.AttachToEdgeChrome = true;              ieOptions.EdgeExecutablePath = @""C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe""; driver = new InternetExplorerDriver(ieOptions); ```   ### Relevant log output  ```shell Stack Trace is as follows.  Exception thrown: 'OpenQA.Selenium.WebDriverException' in WebDriver.dll An unhandled exception of type 'OpenQA.Selenium.WebDriverException' occurred in WebDriver.dll The HTTP request to the remote WebDriver server for URL http://localhost:50413/session timed out after 60 seconds. Inner Exception: ""A task was canceled.""   Document     | Name | Value | Type -- | -- | -- | --   | StackTrace | ""   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at OpenQA.Selenium.Remote.HttpCommandExecutor.d__35.MoveNext()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)"" | string    ``` ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  MS Edge in IE Mode  ### What are the browser driver(s) and version(s) where you see this issue?  IEdriverServer 3.150.1.1  ### Are you using Selenium Grid?  _No response_","closed","D-IE,","csharsha","2021-10-18T07:59:24Z","2021-12-24T00:07:21Z"
"","10410","[🐛 Bug]: Requests for MicrosoftEdge create wrong browser","### What happened?  When trying to create new session for Edge with some parameters, I get different sessions. This seems to mostly be either Firefox or Safari, depending on what parameters are passed in. Sometimes I get Edge, but it really seems to vary. I may get Edge five times in a row, but then only Firefox or only Safari.  ### How can we reproduce the issue?  ```shell #!/bin/bash  WDURL=""http://localhost:4444/wd/hub"";  CAPABILITIES='{""capabilities"":{""firstMatch"":[{""browserName"":""MicrosoftEdge"",""ms:edgeChromium"":true}]},""desiredCapabilities"":{""tags"":[""mandarin.per.nicols.uk"",""PHP 7.4.28""],""browserName"":""MicrosoftEdge"",""ms:edgeChromium"":true,""browser"":""edge"",""ignoreZoomSetting"":false,""name"":""Behat feature suite""}}'  RESPONSE=`curl -s  -H 'Content-Type: application/json; charset=utf-8' -d ""${CAPABILITIES}"" ""${WDURL}/session""` SESSIONID=`echo ""${RESPONSE}"" | python3 -c ""import sys, json; print(json.load(sys.stdin)['value']['sessionId'])""`  echo $RESPONSE  echo ""Deleting window:"" curl -X DELETE ""${WDURL}/session/${SESSIONID}"" echo ```   ### Relevant log output [wrongbrowser.log](https://github.com/SeleniumHQ/selenium/files/8182700/wrongbrowser.log)   ### Operating System  macOS Monterey 12.2.1  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Edge 98.0.1108.62  ### What are the browser driver(s) and version(s) where you see this issue?  edgedriver 98.0.1108.62  ### Are you using Selenium Grid?  No","closed","I-defect,","andrewnicols","2022-03-04T02:56:24Z","2022-04-12T00:10:38Z"
"","10554","[🐛 Bug]: Selenium Click Action not working after upgrading chrome version to 100.","### What happened?  When trying to click on the Web Element using Selenium's Actions class there is no exception thrown but the element is not getting clicked. This test case was working before upgrading to chrome version 100. Below is the implementation for the click action:  ((JavascriptExecutor)driver).executeScript(""arguments[0].scrollIntoView(true);"", 1) Actions acts = new Actions(driver); acts.click(query); Action action = acts.build(); action.perform();  After trying to scroll to the object to bring it in viewport, a few cases working but remaining not. I am not able to figure out why they are failing, because there are no pattern. Changing implementation is not possible as it will have huge implications in maintaining. So we have to make it work only through this code.  ### How can we reproduce the issue?  ```shell NA ```   ### Relevant log output  ```shell The action is passing as no exception is thrown but in reality it doesn't click the web object. ```   ### Operating System  Windows 10  ### Selenium version  Java 8 selenium 3.141.59  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100.0.4896.75  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome driver  100.0.4896.60  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","ssd9881","2022-04-18T12:29:48Z","2022-05-22T00:11:37Z"
"","10750","[🐛 Bug]: Selenium 4 Node is not registering with Hub in same machine in windows 10","### What happened?  When the user tried to launch the selenium 4 hub with selenium server version as 4.1.2 or 4.2.1. User is successfully able to launch the Hub without any issues.    But something when the user tried to register the node with the Hub, the user keep on getting ""sending registration event"".  Hub launching:  ![image](https://user-images.githubusercontent.com/39691064/172764913-194785ed-649b-4913-b3c3-0746d6f0074f.png)  Node Lanching: ![image](https://user-images.githubusercontent.com/39691064/172765203-ca0c94de-24e2-4eaf-ae36-e93a7b769e7a.png)  Note: I have opened port number 5555 for recognition as well.   Hence can anyone please provide the solution here.       ### How can we reproduce the issue?  ```shell 1. Download the selenium server 4.1.2 or selenium standalone server 4.2.1   2. Run the command:     ===============    java -jar selenium-server-.jar hub  3. Run the command:    ===============    java -jar selenium-server-.jar node ```   ### Relevant log output  ```shell D:\Grid 4>java -jar selenium-server-4.1.2.jar node 10:06:06.736 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:06:06.736 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:06:07.238 INFO [UnboundZmqEventBus.] - Connecting to tcp://0.0.0.0:4442 and tcp://0.0.0.0:4443 10:06:07.291 INFO [UnboundZmqEventBus.] - Sockets created 10:06:08.294 INFO [UnboundZmqEventBus.] - Event bus ready 10:06:09.245 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.1.35:5555 10:06:10.968 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 10:06:11.017 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 10:06:11.050 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 8 times 10:06:11.050 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox""} 8 times 10:06:11.050 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 10:06:12.676 INFO [NodeServer$1.start] - Starting registration process for node id 1707cdec-ae09-43c6-a813-f12545b9d42d 10:06:12.684 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://192.168.1.35:5555 10:06:12.684 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:06:22.701 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:06:32.715 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:06:42.745 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:06:52.753 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:07:02.764 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:07:12.771 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:07:22.784 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:07:32.806 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:07:42.816 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:07:52.830 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:08:02.854 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:08:12.722 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ### Operating System  Windows 10  ### Selenium version  4.1.2 or 4.2.1  ### What are the browser(s) and version(s) where you see this issue?  NA  ### What are the browser driver(s) and version(s) where you see this issue?  NA  ### Are you using Selenium Grid?  4.1.2 or 4.2.1","closed","I-defect,","lakshminagandla","2022-06-09T04:43:49Z","2022-07-15T00:13:38Z"
"","10759","[🐛 Bug]: (Java)(Python) S3-S4 W3C Mode Not Supported Using ExpectedConditions","### What happened?  When the user attempts to wait for an `ExpectedCondition` to occur, some of them use an API that will result in a 404 error, which is to `findElement`.  This is due to the fact that unlike JWP, this command returns an error and ends the server session according to W3C spec:  https://www.w3.org/TR/webdriver/#find-element https://www.w3.org/TR/webdriver/#dfn-no-such-element  vs JWP which returns the element or `null` if not found:  https://webdriver.io/docs/api/jsonwp/#findelement  This problem exists in both [Java](https://github.com/SeleniumHQ/selenium/blob/d594da2f5c2df8deeb56c9c45c67373edb75b6d5/java/src/org/openqa/selenium/support/ui/ExpectedConditions.java) and [Python](https://github.com/SeleniumHQ/selenium/blob/3824c3e9c5bb66b768e5ba2b56e8427e4f4f3c59/py/selenium/webdriver/support/expected_conditions.py) instances of `ExpectedConditions`/`expected_conditions`.    Currently the problemed functions use:  ```java driver.findElement(locator); ```  ```python driver.find_element(*locator) ```  Both which can fail according to the W3C spec.  The solution would be to do something different such as leveraging `findElements`:  ```java driver.findElements(locator); ```  ```python driver.find_elements(*locator) ```  Source: https://www.w3.org/TR/webdriver/#dfn-find-elements    This is because it will return the result no matter what, not an error, which could very well be an empty array. I feel the best solution would be to use that and grab the first element in most cases since this is the default behavior of the `findElement` function anyway. If there is no element, that would need to be handled as if the condition were true or false per function also.  ""If result is empty, return [error](https://www.w3.org/TR/webdriver/#dfn-error) with [error code](https://www.w3.org/TR/webdriver/#dfn-error-code) [no such element](https://www.w3.org/TR/webdriver/#dfn-no-such-element). Otherwise, return the first element of result.""  `visibilityOfAllElementsLocatedBy` is already using this function so it makes a good template even if it checks all elements (and we would just check the first one in most? cases).    The affected functions from what I can see are:  **Java**  presenceOfElementLocated visibilityOfElementLocated textToBePresentInElementLocated textToBePresentInElementValue frameToBeAvailableAndSwitchToIt invisibilityOfElementLocated invisibilityOfElementWithText elementSelectionStateToBe attributeToBe textToBe textMatches attributeContains visibilityOfNestedElementsLocatedBy presenceOfNestedElementLocatedBy presenceOfNestedElementLocatedBy presenceOfNestedElementsLocatedBy  **Python**  presence_of_element_located visibility_of_element_located text_to_be_present_in_element text_to_be_present_in_element_value text_to_be_present_in_element_attribute frame_to_be_available_and_switch_to_it invisibility_of_element_located element_to_be_clickable element_located_to_be_selected element_located_selection_state_to_be element_attribute_to_include  The unit tests for [ExpectedConditionsTest](https://github.com/SeleniumHQ/selenium/blob/d594da2f5c2df8deeb56c9c45c67373edb75b6d5/java/test/org/openqa/selenium/support/ui/ExpectedConditionsTest.java) and [expected_conditions_tests](https://github.com/SeleniumHQ/selenium/blob/trunk/py/test/selenium/webdriver/support/expected_conditions_tests.py) 'may' need looked at.  ### How can we reproduce the issue?  Attempt to wait for any expected condition in the list above using a locator for an element that is not present in the DOM.   ### Relevant log output  A server log will look something like:  ```shell [WD Proxy] Got response with status 404: {""value"":{""error"":""stale element reference"",""message"":""stale element reference: element is not attached to the page document\n ```  A stack trace will look something like  ```shell at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41) at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1) at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1) at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:780) ```   ### Operating System  Any  ### Selenium version  Java and Python Selenium 3 and 4  ### What are the browser(s) and version(s) where you see this issue?  Any using W3C mode  ### What are the browser driver(s) and version(s) where you see this issue?  Any using W3C mode  ### Are you using Selenium Grid?  No","closed","I-defect,","BJap","2022-06-10T18:36:22Z","2022-07-22T00:14:03Z"
"","10698","[🐛 Bug]: (Java) S3-S4 W3C Mode Not Supported Using RemoteWebElement to getLocation and getSize","### What happened?  When the user attempts to get a web element's location and size, the code will crash because the command is not supported in W3C mode.  This is due to the fact that unlike JWP, those commands are not supported, and W3C only allows getRect as per spec.  https://w3c.github.io/webdriver/#get-element-rect  Only JWP (not W3C) allows those two as supported commands:  https://www.selenium.dev/documentation/legacy/json_wire_protocol/#sessionsessionidelementidlocation https://www.selenium.dev/documentation/legacy/json_wire_protocol/#sessionsessionidelementidsize  The code in Selenium 3 should have checked for W3C mode like the Python implementation does, and choose accordingly. Selenium 4 is W3C mode purely and the code should have been migrated to support only that. It is currently still using JWP commands.  This means that the Python and Java implementations are not in sync, and the Java implementation is incorrect. The `getLocation` and `getSize` code for Selenium 4 could just use the `getRect` as a function in both implementations since that's all that's available, and wrap around it to extract the relevant data.  **Java** - Selenium 3 [here](https://github.com/SeleniumHQ/selenium/blob/selenium-3.150.0/java/client/src/org/openqa/selenium/remote/RemoteWebElement.java#L363) - Selenium 4 [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.1.4-java/java/src/org/openqa/selenium/remote/RemoteWebElement.java#L319)  **Python** - Selenium 3 [here](https://github.com/SeleniumHQ/selenium/blob/selenium-3.150.0/py/selenium/webdriver/remote/webelement.py#L524) - Selenium 4 [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.1.4-python/py/selenium/webdriver/remote/webelement.py#L613)    ---   The solution for Selenium 4 Java (and similarly Python) can just be something like:  ```java @Override @SuppressWarnings({""unchecked""}) public Point getLocation() {   Rectangle rect = getRect();   return rect.getPoint(); }  @Override @SuppressWarnings({""unchecked""}) public Dimension getSize() {   Rectangle rect = getRect();   return rect.getDimension(); }  @Override @SuppressWarnings({""unchecked""}) public Rectangle getRect() {   Response response = execute(DriverCommand.GET_ELEMENT_RECT(id));   Map rawRect = (Map) response.getValue();   int x = ((Number) rawRect.get(""x"")).intValue();   int y = ((Number) rawRect.get(""y"")).intValue();   int width = ((Number) rawRect.get(""width"")).intValue();   int height = ((Number) rawRect.get(""height"")).intValue();   return new Rectangle(x, y, height, width); } ```  or for consistency, this:  ```java @Override @SuppressWarnings({""unchecked""}) public Point getLocation() {   Response response = execute(DriverCommand.GET_ELEMENT_RECT(id));   Map rawPoint = (Map) response.getValue();   int x = ((Number) rawPoint.get(""x"")).intValue();   int y = ((Number) rawPoint.get(""y"")).intValue();   return new Point(x, y); }  @Override @SuppressWarnings({""unchecked""}) public Dimension getSize() {   Response response = execute(DriverCommand.GET_ELEMENT_RECT(id));   Map rawSize = (Map) response.getValue();   int width = ((Number) rawSize.get(""width"")).intValue();   int height = ((Number) rawSize.get(""height"")).intValue();   return new Dimension(width, height); }  @Override @SuppressWarnings({""unchecked""}) public Rectangle getRect() {   Response response = execute(DriverCommand.GET_ELEMENT_RECT(id));   Map rawRect = (Map) response.getValue();   int x = ((Number) rawRect.get(""x"")).intValue();   int y = ((Number) rawRect.get(""y"")).intValue();   int width = ((Number) rawRect.get(""width"")).intValue();   int height = ((Number) rawRect.get(""height"")).intValue();   return new Rectangle(x, y, height, width); } ```  In Selenium 3 this was a parameterized choice of one or the other based on whether the test was run in JWP or W3C modes. in Selenium 4, those two functions are basically just helper/wrapper functions.  ### How can we reproduce the issue?  Visit a webpage (Selenium) or a WebView (Appium) in W3C mode, and attempt to get the size or location of a `WebElement`.  `webElement.getLocation();`  `webElement.getSize();`  The workaround is to use the API directly as the fix above would suggest and use:  `webElement.getRect().getPoint();`  `webElement.getRect().getDimension();`  The problem with this is that a lot of teams that are using this for their testing and want to migrate already have much of their code written in the former use case. It would ease the friction of migration and save lost hours of debugging time to correct the implementation and allow teams to use their code in its existing state without the workaround.   ### Relevant log output  **Description:** ""Cannot call non W3C standard command while in W3C mode ""  When using `getLocation()`  ```shell at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41) at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1) at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1) at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285) at io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45) at io.appium.java_client.MobileElement.execute(MobileElement.java:1) at io.appium.java_client.android.AndroidElement.execute(AndroidElement.java:1) at org.openqa.selenium.remote.RemoteWebElement.getLocation(RemoteWebElement.java:337) ```  --  When using `getSize()`  ```shell at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41) at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1) at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1) at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285) at io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45) at io.appium.java_client.MobileElement.execute(MobileElement.java:1) at io.appium.java_client.android.AndroidElement.execute(AndroidElement.java:1) at org.openqa.selenium.remote.RemoteWebElement.getSize(RemoteWebElement.java:346) ```   ### Operating System  Not Applicable but on macOS against Android and iOS  ### Selenium version  Java Selenium 3 and 4  ### What are the browser(s) and version(s) where you see this issue?  WebView  ### What are the browser driver(s) and version(s) where you see this issue?  Available on Request  ### Are you using Selenium Grid?  No","closed","I-defect,","BJap","2022-05-26T19:34:45Z","2022-06-27T00:12:19Z"
"","9991","[🐛 Bug]: Relative locator fails when the root element is an inner element","### What happened?  When the root element used to locate the new element from is found through another element, the relative locator fails to locate the new element. I'm using Java.  ### How can we reproduce the issue?  ```shell 1. Look for container element and then look for inner element inside it (element.findElement...) 2. Use relative locator locating new element next to the inner element found at the first stage. ```   ### Relevant log output  ```shell Caused by: org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'DESKTOP-JKEB3NF', ip: '192.168.10.85', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [2dc36142c232a3e869aa224f944095c4, findElement {using=relative, value={root={xpath=//p[contains(@class, 'FieldReadModeValue')]}, filters=[{kind=below, args=[[[[[ChromeDriver: chrome on ANY (2dc36142c232a3e869aa224f944095c4)] -> xpath: //div[contains(@class, 'form-wrapper')]]] -> xpath: //div[contains(@class, 'FieldLabel')]]]}]}}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.54, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b...}, goog:chromeOptions: {debuggerAddress: localhost:3434}, javascriptEnabled: true, pageLoadStrategy: normal, platform: ANY, platformName: ANY, proxy: Proxy(), se:cdp: ws://localhost:3434/devtool..., se:cdpVersion: 95.0.4638.54, setWindowRect: false, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 2dc36142c232a3e869aa224f944095c4 	at org.openqa.selenium.json.SimplePropertyDescriptor.lambda$getPropertyDescriptors$1(SimplePropertyDescriptor.java:107) 	at org.openqa.selenium.json.JsonOutput.mapObject(JsonOutput.java:392) 	at org.openqa.selenium.json.JsonOutput.lambda$new$31(JsonOutput.java:207) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.mapObject(JsonOutput.java:395) 	at org.openqa.selenium.json.JsonOutput.lambda$new$31(JsonOutput.java:207) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.base/java.util.Collections$2.tryAdvance(Collections.java:4747) 	at java.base/java.util.Collections$2.forEachRemaining(Collections.java:4755) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) 	at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) 	at com.google.common.collect.RegularImmutableMap.forEach(RegularImmutableMap.java:185) 	at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) 	at java.base/java.util.Collections$2.tryAdvance(Collections.java:4747) 	at java.base/java.util.Collections$2.forEachRemaining(Collections.java:4755) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) 	at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) 	at com.google.common.collect.RegularImmutableMap.forEach(RegularImmutableMap.java:185) 	at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) 	at com.google.common.collect.RegularImmutableMap.forEach(RegularImmutableMap.java:185) 	at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278) 	at org.openqa.selenium.json.Json.toJson(Json.java:42) 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:259) 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375) 	at jdk.internal.reflect.GeneratedMethodAccessor12.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.support.events.EventFiringWebDriver.lambda$new$1(EventFiringWebDriver.java:115) 	at com.sun.proxy.$Proxy19.findElement(Unknown Source) 	at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:204) 	at plainid.auto.infra.web.SeleniumBot.lambda$getElementBelow$14(SeleniumBot.java:307) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208) 	... 35 more 	Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream ```   ### Operating System  Windows 10  ### Selenium version  4.00  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome driver 95  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","ValorHeart","2021-10-28T07:24:28Z","2021-11-30T00:06:45Z"
"","10391","[🐛 Bug]: Selenium Hub container - status code is 200, even if the grid isn't ready","### What happened?  When the grid isn't ready the healthcheck shouldn't return a 200 OK status code.  I think the correct status code would be 503. https://developer.mozilla.org/en-US/docs/Web/HTTP/Status#server_error_responses  When the grid would return a proper status code - health checks would make a real sense, which could lead to a pod restart.  ![image](https://user-images.githubusercontent.com/12625568/155353017-f1600d73-3677-45aa-a177-ec20cf15216c.png)   ### How can we reproduce the issue?  ```shell Start a hub in kubernetes and see the health check statuscode in your browser. It's always ""OK"".  apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-hub   labels:     app: selenium-hub spec:   replicas: 1   selector:     matchLabels:       app: selenium-hub   template:     metadata:       labels:         app: selenium-hub     spec:       containers:         - name: selenium-hub           image: selenium/hub:4           ports:             - containerPort: 4444             - containerPort: 4443             - containerPort: 4442           resources:             limits:               memory: ""1000Mi""               cpu: ""500m""             requests:               memory: ""250Mi""               cpu: ""10m""           livenessProbe:             httpGet:               path: /wd/hub/status               port: 4444             initialDelaySeconds: 30             timeoutSeconds: 5           readinessProbe:             httpGet:               path: /wd/hub/status               port: 4444             initialDelaySeconds: 15             timeoutSeconds: 5 ```   ### Relevant log output  ```shell No server logs ```   ### Operating System  Docker Container  ### Selenium version  image: selenium/hub:4  ### What are the browser(s) and version(s) where you see this issue?  ignore  ### What are the browser driver(s) and version(s) where you see this issue?  ignore  ### Are you using Selenium Grid?  image: selenium/hub:4","closed","C-grid,","Bjego","2022-02-23T15:44:08Z","2022-04-24T00:12:02Z"
"","9948","[🐛 Bug]: Selenium 4: A new RemoteWebDriver is not created after the driver.quit() command","### What happened?  When switching to selenium 4, I encountered the following problem, in the new version, the following code gives the error ""org.openqa.selenium.SessionNotCreatedException exception: Failed to start a new session. Possible reasons are an incorrect address of the remote server or a failure when launching the browser."":  RemoteWebDriver driver = new RemoteWebDriver(url, chromeOptions); //everything works fine here driver.quit(); driver = new RemoteWebDriver(url, chromeOptions); //Failed to start a new session  In silenium 3, this code worked perfectly!  We use Docker images selenium/standalone-chrome:latest.  ### How can we reproduce the issue?  ```shell Run the code:  final ChromeOptions chromeOptions = new ChromeOptions(); chromeOptions.addArguments(""--no-sandbox""); chromeOptions.addArguments(""--disable-dev-shm-usage""); chromeOptions.addArguments(""--lang=en""); chromeOptions.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.ACCEPT); chromeOptions.setCapability(CapabilityType.UNHANDLED_PROMPT_BEHAVIOUR, UnexpectedAlertBehaviour.ACCEPT); chromeOptions.addArguments(""--disable-extensions""); chromeOptions.addArguments(""--ignore-certificate-errors""); chromeOptions.addArguments(""disable-infobars"");  RemoteWebDriver driver = new RemoteWebDriver(url, chromeOptions); //everything works fine here driver.quit(); driver = new RemoteWebDriver(url, chromeOptions); //Failed to start a new session ```   ### Relevant log output  ```shell error org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.   Build info: version: '4.0.0', revision: '3a21814679'   System info: host: 'd1ef0391b0b9', ip: '172.17.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.0-17-amd64', java.version: '1.8.0_292'   Driver info: org.openqa.selenium.remote.RemoteWebDriver   Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --lang=en, --disable-extensions, --ignore-certificate-errors, disable-infobars, --headless], extensions: []}, unhandledPromptBehavior: accept}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, --lang=en, --disable-extensions, --ignore-certificate-errors, disable-infobars, --headless], extensions: []}, unexpectedAlertBehaviour: accept, unhandledPromptBehavior: accept}}]   Capabilities {} ```   ### Operating System  linux  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome: 94.0.4606.81  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver: 94.0.4606.61  ### Are you using Selenium Grid?  _No response_","closed","C-java,","alsundukov","2021-10-18T13:49:21Z","2022-02-06T01:52:58Z"
"","10076","[🐛 Bug]: InvalidArgumentError on Firefox Remote Capabilities","### What happened?  When starting up a new/default Firefox profile with remote capabilities I see the below error  ```Bash Selenium::WebDriver::Error::InvalidArgumentError: Invalid moz:firefoxOptions field capabilities from C://ruby/gems/2.6.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/response.rb:56:in `assert_ok' ``` I was not able to fetch more detail error logs. Let me know how to do that it could help debug error.  BTW If I skip the capabilities part ,`capabilities: Selenium::WebDriver::Remote::Capabilities.firefox(accept_insecure_certs: true)` Firefox opens up as expected and my test pass.  ### How can we reproduce the issue?  ```shell Watir::Browser.start('https://www.google.com/maps',                          :firefox,                          options: { profile:      Selenium::WebDriver::Firefox::Profile.new,                                     capabilities: Selenium::WebDriver::Remote::Capabilities                                                     .firefox(accept_insecure_certs: true)                          }     ) ```   ### Relevant log output  ```shell Selenium::WebDriver::Error::InvalidArgumentError: Invalid moz:firefoxOptions field capabilities from C://ruby/gems/2.6.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/response.rb:56:in `assert_ok' ```   ### Operating System  Windows 10 ### Watir version  Watir 7.1.0  ### Selenium version  Selenium-webdriver 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 94.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  NA","closed","needs-triaging,","pgundlupetvenkatesh","2021-11-23T21:53:33Z","2021-12-24T00:07:15Z"
"","9954","[🐛 Bug]: JSON parsing error when creating capabilities","### What happened?  When starting a session on Sauce Labs, if a user does not have sufficient VMs for their account, Sauce Labs will reply with a redirect message and (I believe) an empty payload. @shs96c I know you fixed something like this and I thought it was addressed in the RC, but the stack trace below is showing 4.0.0. Does a Redirect response need separate processing? It seems like it shouldn't be necessary to parse the payload at all for a redirect.  ### How can we reproduce the issue?  ```shell It would be difficult to reproduce this without a Sauce account and running more in parallel than sessions available, but should be able to mock out a response in a unit test? ```   ### Relevant log output  ```shell Caused by: org.openqa.selenium.json.JsonException: Unable to parse:  	at org.openqa.selenium.json.Json.toType(Json.java:57) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:109) 	... 28 more Caused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read:  Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'EC2AMAZ-DQI8KAO', ip: '10.204.197.75', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '15.0.2' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:307) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:229) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.Json.toType(Json.java:71) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	... 30 more  org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response:  	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) ```   ### Operating System  n/a  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  n/a  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  n/a","closed","I-defect,","titusfortner","2021-10-20T00:02:07Z","2022-01-08T00:07:13Z"
"","10775","[🐛 Bug]: [Java] FirefoxProfile is incorrectly loaded","### What happened?  When setting preferences in a `FirefoxProfile`, these settings can't be correctly read from the profiles from `FirefoxOptions#getProfile()`.  ### How can we reproduce the issue?  ```shell import org.junit.jupiter.api.Test; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile;  import static org.junit.jupiter.api.Assertions.assertEquals;  class FirefoxProfileTest {      @Test     void testFirefoxProfileIO() {         String key = ""browser.startup.homepage"";         String value = ""about:robots"";          FirefoxProfile profile = new FirefoxProfile();         profile.setPreference(key, value);          FirefoxOptions options = new FirefoxOptions();         options.setProfile(profile);          assertEquals(profile.getStringPreference(key, ""-""), value);         assertEquals(options.getProfile().getStringPreference(key, ""-""), value); //","closed","I-defect,","frensjan","2022-06-15T20:17:41Z","2022-07-18T00:11:46Z"
"","10106","[🐛 Bug]: `selenium.common.exceptions.WebDriverException: Message: Service geckodriver unexpectedly exited. Status code was: 1`","### What happened?  When running the initialization of Firefox driver I get this: ```py  File ""/usr/local/lib/python3.8/site-packages/seleniumwire/webdriver.py"", line 162, in __init__     super().__init__(*args, **kwargs)   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/firefox/webdriver.py"", line 174, in __init__     self.service.start()   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 98, in start     self.assert_process_still_running()   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 110, in assert_process_still_running     raise WebDriverException( selenium.common.exceptions.WebDriverException: Message: Service geckodriver unexpectedly exited. Status code was: 1 ``` From the log it seems selenium needs to use `--port` instead of `--websocket-port`  ```sh $ /usr/local/bin/geckodriver --help | grep port         --marionette-port     Port to use to connect to Gecko (default: system-allocated port)     -p, --port                Port to use for WebDriver server (default: 4444) ```  ### How can we reproduce the issue?  ```shell from selenium import webdriver driver = webdriver.Firefox() ```   ### Relevant log output  ```shell error: Found argument '--websocket-port' which wasn't expected, or isn't valid in this context  USAGE:     geckodriver [FLAGS] [OPTIONS]  For more information try --help error: Found argument '--websocket-port' which wasn't expected, or isn't valid in this context  USAGE:     geckodriver [FLAGS] [OPTIONS]  For more information try --help ```   ### Operating System  Debian  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Mozilla Firefox 78.15.0esr  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 0.24.0 ( 2019-01-28)  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","donno2048","2021-11-30T19:02:43Z","2021-12-31T00:07:20Z"
"","10286","[🐛 Bug]: Non-descriptive exceptions talk about CDP","### What happened?  When running the first test ever using Selenium 4 (after migrating from 3) I got the following output ``` Jan 25, 2022 4:07:59 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch WARNING: Unable to find an exact match for CDP version 97, so returning the closest version found: 96 Jan 25, 2022 4:07:59 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found CDP implementation for version 97 of 96 ```  I have no idea what CDP is. Among suggestions from google is ""Carbon Disclosure Project"" but I don't think that's it  There are so many questions here: Do I have CDP? Have I installed CDP? Should I install another CDP? Is it ok that 96 is pretty close to 97? Did Selenium find a CDP implementation for version 97 even though it didn't find an exact match for version 97. What does even ""of 96"" mean in the second log? Where there only 96 versions but still version 97 was found?   Jokes aside, I can start googling it and maybe CDP is somehow related to Chrome as I was trying to run a Chrome test but could the exception messages please instead tell what I should do? 96 and 97 sound like Chrome or Chromedriver versions but both of them are 97.x on my machine  ### How can we reproduce the issue?  ```shell By having the wrong CDP version I guess.. ```   ### Relevant log output  ```shell Jan 25, 2022 4:07:59 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch WARNING: Unable to find an exact match for CDP version 97, so returning the closest version found: 96 Jan 25, 2022 4:07:59 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found CDP implementation for version 97 of 96 ```   ### Operating System  macOs Big Sur  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  No","closed","","Artur-","2022-01-25T14:18:01Z","2022-02-26T00:08:54Z"
"","10393","[🐛 Bug]: Sending chord of CTRL-a to input field writes unicode character  instead","### What happened?  When run in Selenium 4 Grid on Windows 10 (from a Mac client), `element.sendKeys(Keys.chord(Keys.CONTROL, ""a""))` writes unicode character `` instead.  This breaks test flows that sends keys to input fields.  When run in Selenium 4 Grid configuration on Mac, then there is no visible character input to the field.  selenium-server-4.1.2.jar (Standalone grid configuration) Chrome 98.0.4758.102 ChromeDriver 98.0.4758.48 Windows 10 (grid with standalone hub/node) Mac 10.15.7 (client) Azul Zulu JDK 1.8   ### How can we reproduce the issue?  ```shell Run against Selenium 4.1.2 Grid on Windows 10; Set a break point on driver.quit and observe the input field shows a single character when debugger stops.       @Test     public void sendChordCtrlAIssue() throws MalformedURLException {              WebDriver driver = new RemoteWebDriver(new URL(HUB_ADDR), new ChromeOptions());         try {             driver.get(""https://www.google.com"");             WebElement searchFieldLocator = driver.findElement(By.xpath(""//input[@title='Search']""));             searchFieldLocator.sendKeys(Keys.chord(Keys.CONTROL, ""a""));         } finally {             driver.quit();         }     } ``` ```   ### Relevant log output  ```shell NA ```   ### Operating System  Windows 10  ### Selenium version  Azul Zuli 1.8  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98  ### Are you using Selenium Grid?  4.1.2","closed","needs-triaging,","stevenerat","2022-02-23T23:10:39Z","2022-03-31T00:58:51Z"
"","10082","Brave browser closes instantly when opened from __init__ method in Python","### What happened?  When opening Brave browser from __init__ method, the browser will open and then instantly close. Paths to browser executable and chrome driver are both correct, provided code snippet works as expected when taken out of the class.   ### How can we reproduce the issue?  ```shell ---------Works as expected---------  from selenium import webdriver from selenium.webdriver.chrome.service import Service  driver_path = Service('C:/chromedriver.exe') op = webdriver.ChromeOptions() op.binary_location = 'C:/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe' browser = webdriver.Chrome(service=driver_path, options=op)  ---------Does not work as expected---------  from selenium import webdriver from selenium.webdriver.chrome.service import Service   class Main:     def __init__(self):         driver_path = Service('C:/chromedriver.exe')         op = webdriver.ChromeOptions()         op.binary_location = 'C:/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe'         self.browser = webdriver.Chrome(service=driver_path, options=op)   if __name__ == '__main__':     Main() ```   ### Relevant log output  ```shell Process finished with exit code 0 ```   ### Operating System  Windows 10  ### Selenium version  Python 3.8, Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Brave V1.32.106  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.20  ### Are you using Selenium Grid?  _No response_","closed","I-question,","Elias-Poor","2021-11-24T20:51:12Z","2022-01-01T00:07:32Z"
"","9973","[🐛 Bug]: C# - DevToolsSession - Close() last tab causes unhandeled exception crash","### What happened?  When one has `.GetDevToolsSession()` used once, and then one uses `.Close()` at the last tab of the browser, an unhandeled exception occures, that is impossible to catch for the owner of the program, because it happens in `OnTargetDetached` event handler of `OpenQA.Selenium.DevTools.DevToolsSession`.  On local chrome driver I receive this error: ``` System.InvalidOperationException: A command response was not received: Target.getTargets    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken params, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V95.Target.TargetAdapter.GetTargets(GetTargetsCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V95.V95Target.GetTargets()    at OpenQA.Selenium.DevTools.DevToolsSession.InitializeSession()    at OpenQA.Selenium.DevTools.DevToolsSession.OnTargetDetached(Object sender, TargetDetachedEventArgs e)    at System.Threading.Tasks.Task.c.b__140_1(Object state)    at System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() ```  ### Additional Info  The bug was probably introduce by the changes mentioned in this comment: https://github.com/SeleniumHQ/selenium/issues/9798#issuecomment-929411979 .   On remote driver I receive a slightly different error in the same `OnTargetDetached` function: ``` System.InvalidOperationException: A command response was not received: Target.setAutoAttach      at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken params, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)      at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)      at OpenQA.Selenium.DevTools.V95.Target.TargetAdapter.SetAutoAttach(SetAutoAttachCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)      at OpenQA.Selenium.DevTools.V95.V95Target.SetAutoAttach()      at OpenQA.Selenium.DevTools.DevToolsSession.InitializeSession()      at OpenQA.Selenium.DevTools.DevToolsSession.OnTargetDetached(Object sender, TargetDetachedEventArgs e) ```  ### How can we reproduce the issue?   Program.cs  ``` using System; using System.Threading.Tasks; using OpenQA.Selenium.Chrome;  using (var driver = new ChromeDriver()) {     driver.Url = ""https://www.selenium.dev"";     var devToolsSession = driver.GetDevToolsSession();     driver.Close();     await Task.Delay(TimeSpan.FromSeconds(5)); }  ```  Project file  ```                Exe         net5.0                                        ```  https://github.com/schrufygroovy/devtoolssessionclosecrashes  ### Relevant log output  ```shell System.InvalidOperationException: A command response was not received: Target.getTargets    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken params, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V95.Target.TargetAdapter.GetTargets(GetTargetsCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V95.V95Target.GetTargets()    at OpenQA.Selenium.DevTools.DevToolsSession.InitializeSession()    at OpenQA.Selenium.DevTools.DevToolsSession.OnTargetDetached(Object sender, TargetDetachedEventArgs e)    at System.Threading.Tasks.Task.c.b__140_1(Object state)    at System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.54  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.1700  ### Are you using Selenium Grid?  Similar error on RemoteDriver but slightly different ``` System.InvalidOperationException: A command response was not received: Target.setAutoAttach      at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken params, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)      at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)      at OpenQA.Selenium.DevTools.V95.Target.TargetAdapter.SetAutoAttach(SetAutoAttachCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)      at OpenQA.Selenium.DevTools.V95.V95Target.SetAutoAttach()      at OpenQA.Selenium.DevTools.DevToolsSession.InitializeSession()      at OpenQA.Selenium.DevTools.DevToolsSession.OnTargetDetached(Object sender, TargetDetachedEventArgs e) ```","closed","I-defect,","schrufygroovy","2021-10-22T05:50:48Z","2021-11-27T00:06:29Z"
"","10272","[🐛 Bug]:","### What happened?  When i use TouchActions in python, the Error is Message: unknown command: Cannot call non W3C standard command while in W3C mode With this, ActionChains class works well. This is my python code:  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.chrome.options import Options #from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.touch_actions import TouchActions  mobile_emulation = { ""deviceName"": ""Nexus 5"" } options = Options() options.add_argument('--headless') options.add_experimental_option('mobileEmulation', mobile_emulation) driver = webdriver.Chrome(options=options) driver.get(""http://example.com/"") element = driver.find_element(By.TAG_NAME, 'body') actions = TouchActions(driver) actions.tap(element) #actions.double_tap(element) #actions.flick(10, 10) actions.perform() driver.quit() ```   ### Relevant log output  ```shell Cannot call non W3C standard command while in W3C mode With this ```   ### Operating System  Linux  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  97.0.4692.71  ### What are the browser driver(s) and version(s) where you see this issue?  97.0.4692.71  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","cyberfuhrer","2022-01-21T09:23:34Z","2022-02-21T00:09:03Z"
"","10090","[🐛 Bug]: C# Selenium 4.0 Proxy Authentication with Chrome Driver BiDi APIs freezing","### What happened?  when I use the code block below, my browser does not go to the address.  ``` `var options = new ChromeOptions(); options.Proxy = new Proxy {HttpProxy = ""1.1.1.1:12345"", SslProxy = ""1.1.1.1:12345"", Kind = ProxyKind.Manual}; var driver = new ChromeDriver(ChromeDriverService.CreateDefaultService(), options, TimeSpan.FromMinutes(2));  NetworkAuthenticationHandler handler = new NetworkAuthenticationHandler() {     UriMatcher = d => true,     Credentials = new PasswordCredentials(""proxy_user"", ""proxy_pass"") };  var networkInterceptor = driver.Manage().Network; networkInterceptor.AddAuthenticationHandler(handler); networkInterceptor.StartMonitoring();  driver.Navigate().GoToUrl(""https://stackoverflow.com/"");  networkInterceptor.StopMonitoring(); driver.Quit();` ```  it works if i disable this code:  `networkInterceptor.StartMonitoring();`  ### How can we reproduce the issue?  ```shell but this time it doesn't verify. what can I do?  Relevant source: https://www.selenium.dev/documentation/webdriver/bidi_apis/ ```   ### Relevant log output  ```shell no error, freezing program. ```   ### Operating System  Windows 10  ### Selenium version  C#  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 96  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","yazilimprogram","2021-11-26T14:05:03Z","2022-01-01T00:07:34Z"
"","10853","[🐛 Bug]: Debug and Run differ from crashing the script","### What happened?  When I use Run for the script it fails at row #139 However when I Debug the script it fails at row #20.  Additional information: The .cs file uses a helper.cs  the helpers file: ![image](https://user-images.githubusercontent.com/104067056/177563055-b89041fe-6542-427f-9984-383da6a25c8b.png)  ![image](https://user-images.githubusercontent.com/104067056/177563600-4d45c6a3-86ef-4c24-8e51-a5e14abca328.png)    ### How can we reproduce the issue?  ```shell Use Run, then use Debug /\ \/ (starting from the small icon by mouseclick) ```   ### Relevant log output  ```shell Severity	Code	Description	Project	File	Line	Suppression State Warning	CS8032	An instance of analyzer Microsoft.CodeAnalysis.CSharp.Analyzers.FixAnalyzers.CSharpFixerWithFixAllAnalyzer cannot be created from C:\Users\Specimend\.nuget\packages\microsoft.codeanalysis.analyzers\1.1.0\analyzers\dotnet\cs\Microsoft.CodeAnalysis.CSharp.Analyzers.dll: Could not load type 'Microsoft.CodeAnalysis.Analyzers.FixAnalyzers.FixerWithFixAllAnalyzer`1' from assembly 'Microsoft.CodeAnalysis.Analyzers, Version=3.0.0.0, Culture=neutral, PublicKeyToken=specimend'..	CT.Services		1	Active ```   ### Operating System  Windows 10  ### Selenium version  latest stable  ### What are the browser(s) and version(s) where you see this issue?  Edge Version 103.0.1264.44 (Official build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver latest  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","greenthus","2022-07-06T13:45:11Z","2022-07-07T14:48:41Z"
"","10701","[🐛 Bug]: Tab cannot be switched in IE compatibility mode of edge.","### What happened?  When I try to switch tab with driver.switchTo().window() at IE compatibility mode of edge,it doesn't work.  It worked using chrome and edge.   ### Detail  Currently, we are testing an application that requires tab switching using Edge IE mode.  Using driver.switchTo().window() code only changes the focus of the program.  During runtime, we observed that the above code does not change the focus of the screen.  We have come up to the solution of using driver.switchTo().window() and send key (CTRL + Tab) to switch both program and screen focus. However, since send keys are unstable (not returning any indication whether it successfully switched tab or not), we would like to know is it possible to have the driver.switchTo().window() code support both program and screen focus switch for Edge IE mode? Is it expected that driver.switchTo().window() only supports program focus?   Regarding tab and window, are there assurances that there is no difference in terms of data, function and control between window and tab?  ### Relevant log output  ```shell nothing ```   ### Operating System  Windows 10  ### Selenium version  selenium 4.1.2, java 11  ### What are the browser(s) and version(s) where you see this issue?  edge 101.0.1210.53  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  _No response_","closed","G-msedgedriver,","accamo","2022-05-27T03:18:08Z","2022-07-17T00:12:21Z"
"","10840","[🐛 Bug]: Lates Firefox browser version(v 102) is not support with selenium.","### What happened?  When I try to run my selenium Test cases with the lates Firefox browser version (102), getting **NS_Binding_Aborted (SessionNotCreated)** Error.  When I trigger the test Browser opens and closed and getting the above error.  But when I run the test on downgraded Firefox browser (v101), tests are running successfully. So Im assuming Latest Firefox browser is not support with Selenium.  ### How can we reproduce the issue?  ```shell I'm unable to share any repo files since this is my office work related. Only way that you could reproduce, try to run a selenium C# with the lates gecko driver and the lates Firefox browser. ```   ### Relevant log output  ```shell System.InvalidOperationException: Error: NS_BINDING_ABORTED (SessionNotCreated) ```   ### Operating System  macOS  ### Selenium version  .Net 5.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 102  ### What are the browser driver(s) and version(s) where you see this issue?  Gecko driver 0.31.0.1  ### Are you using Selenium Grid?  no","closed","I-issue-template,","TJay90","2022-07-04T01:15:49Z","2022-07-15T09:58:24Z"
"","10401","[🐛 Bug]: Selenium 4 / Safari / Proxy - Response code 500. Message: Capability 'proxy' could not be honored.","### What happened?  When I try to run locally safari tests using Selenium 4.1.0 and proxy I get SessionNotCreatedException with the following message --> Could not start a new session. Response code 500. Message: Capability 'proxy' could not be honored.    ### How can we reproduce the issue?  ```shell You can use the following code snippet          Proxy proxy = new Proxy();         proxy.setAutodetect(false);         proxy.setSslProxy(""localhost:8080"");         proxy.setHttpProxy(""localhost:8080"");         SafariOptions safariOptions = new SafariOptions();         safariOptions.setProxy(proxy);           safariOptions.setAcceptInsecureCerts(true);          WebDriver webDriver = new SafariDriver(safariOptions);         webDriver.get(""https://www.google.com"");         webDriver.close();  If you change safariOptions.setProxy(proxy); to safariOptions.setCapability(""proxy"", proxy); the same error is displayed ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Capability 'proxy' could not be honored. Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'wks101009.local', ip: 'fe80:0:0:0:10c8:3b73:9595:1c3e%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.5', java.version: '11.0.12' Driver info: org.openqa.selenium.safari.SafariDriver Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: safari, proxy: {httpProxy: localhost:8080, proxyType: manual, sslProxy: localhost:8080}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: safari, proxy: Proxy(manual, http=localhos...}}] Capabilities {} ```   ### Operating System  macOS Big Sur 11.6  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Safari - 15.1  ### What are the browser driver(s) and version(s) where you see this issue?  SafariDriver - 4.1.0  ### Are you using Selenium Grid?  No","closed","needs-triaging,","NikolayStanoev","2022-02-28T09:23:26Z","2022-03-31T00:58:53Z"
"","10886","[🐛 Bug]: Build WebDriver with authenticated Proxy not working","### What happened?  When i try to build a connection to a RemoteWebDriver (provider: Saucelabs) over an authenticated Proxy im getting a SessionNotCreatedException.   The connection is working with an non authenticated Proxy.   ### How can we reproduce the issue?  ```shell // import java.net.InetSocketAddress; import java.net.MalformedURLException; import java.net.Proxy; import java.util.HashMap; import java.util.Map;  import org.openqa.selenium.UsernameAndPassword; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.remote.RemoteWebDriver; import org.openqa.selenium.remote.http.ClientConfig; //  We just try to connect to the provider like they suggest (and i added the part with the authentication):                          ChromeOptions options = new ChromeOptions();                         options.setPlatformName(""Windows 10"");                         options.setBrowserVersion(""latest"");                          Map sauceOptions = new HashMap();                         sauceOptions.put(""username"", username);                         sauceOptions.put(""accessKey"", accessKey);                         sauceOptions.put(""name"", name);                          Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(proxy, proxyPort));                          ClientConfig config = ClientConfig.defaultConfig()                                                .authenticateAs(new UsernameAndPassword(proxyUsername, proxyPassword))                                                .proxy(proxy);                          WebDriver driver = RemoteWebDriver.builder()                                                .oneOf(options)                                                .setCapability(""sauce:options"", sauceOptions)                                                .address(address)                                                .config(config)                                                .build();                          driver.quit(); ```   ### Relevant log output  ```shell Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response: 404 N ot Found The resource could not be found.               at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:130)             at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)             at org.openqa.selenium.remote.RemoteWebDriverBuilder.getRemoteDriver(RemoteWebDriverBuilder.java:399)             at org.openqa.selenium.remote.RemoteWebDriverBuilder.build(RemoteWebDriverBuilder.java:372)             at Saucelabs.Main.main(Main.java:62) Caused by: org.openqa.selenium.json.JsonException: Unable to parse: 404 Not Found The resource could not be found.               at org.openqa.selenium.json.Json.toType(Json.java:57)             at org.openqa.selenium.json.Json.toType(Json.java:50)             at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:127)             ... 4 more Caused by: org.openqa.selenium.json.JsonException: Unable to determine type from:","closed","","ehesognp","2022-07-18T08:20:37Z","2022-08-03T21:34:29Z"
"","10740","[🐛 Bug]: SeleniumGrid: DriverFactory from config is expected to be a SessionFactory","### What happened?  When i try to add a custom selenium driver with ""--driver-factory"" argument and a class derived from ""`org.openqa.selenium.remote.server.DriverFactory`"" i will get an error, that the class is expected to be a ""org.openqa.selenium.grid.node.SessionFactory""  In method ""private void addDriverFactoriesFromConfig"" (line 262) the configured class gets loaded and tried to make a Sessionfactory out of it, which fails. https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/grid/node/config/NodeOptions.java  Besides that, the error message is misleading:`Caused by: java.lang.IllegalArgumentException: Class ..XXDriverFactory's `create(Config, Capabilities)` method must be static`  ### How can we reproduce the issue?  ```shell Create a class derived from ""org.openqa.selenium.remote.server.DriverFactory"". Start a grid-node with the --driver-factory argument whith this class.  java -cp  ""yourArtifacts"" org.openqa.selenium.grid.Bootstrap node --config  X.toml --driver-factory XXDriverFactory ""{\\\""browserName\\\"": \\\""custom\\\""}"" ```   ### Relevant log output  ```shell Caused by: java.lang.IllegalArgumentException: Class XXDriverFactory's `create(Config, Capabilities)` method must be static         at org.openqa.selenium.grid.node.config.NodeOptions.createSessionFactory(NodeOptions.java:296)         at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverFactoriesFromConfig$3(NodeOptions.java:274)         at java.base/java.util.HashMap.forEach(HashMap.java:1425)         at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverFactoriesFromConfig$4(NodeOptions.java:272)         at java.base/java.util.Optional.ifPresent(Optional.java:176)         at org.openqa.selenium.grid.node.config.NodeOptions.addDriverFactoriesFromConfig(NodeOptions.java:264)         at org.openqa.selenium.grid.node.config.NodeOptions.getSessionFactories(NodeOptions.java:209)         at org.openqa.selenium.grid.node.local.LocalNodeFactory.create(LocalNodeFactory.java:79)         ... 22 more ```   ### Operating System  Windows10  ### Selenium version  4.0.0-alpha-2  ### What are the browser(s) and version(s) where you see this issue?  grid-node  ### What are the browser driver(s) and version(s) where you see this issue?  custom-driver  ### Are you using Selenium Grid?  4.1.0","closed","I-question,","HenningL","2022-06-07T09:39:30Z","2022-07-08T00:14:16Z"
"","10021","[🐛 Bug]: Display es-ES instead of es-419 for chrome headless","### What happened?  When I set es_419/es-419 for chrome headless, the chrome shows es-ES. But for chrome debug mode, the language change to es-419 correctly.  What should I do to change language to es-419 for chrome headless? Could anyone help me?    ### How can we reproduce the issue?  ```shell options = Selenium::WebDriver::Chrome::Options.new(args: ['headless', '--lang=es-419']) @driver = Selenium::WebDriver.for(:chrome, options: options) ```   ### Relevant log output  ```shell 09:10:31.417 INFO [LocalDistributor.newSession] - Session request received by the distributor:  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, --verbose, --blink-settings=imagesEnab..., --use-fake-ui-for-media-stream, --use-fake-device-for-media..., --lang=es_419, --enable-automation, --disable-background-timer-..., --disable-renderer-backgrou..., --disable-backgrounding-occ..., --disable-ipc-flooding-prot..., --allow-http-screen-capture, --no-user-gesture-required, --autoplay-policy=no-user-g..., --ignore-autoplay-restrictions, --disable-gpu, --disable-dev-shm-usage, --ignore-certificate-errors, --allow-running-insecure-co..., --disable-web-security]}}] Starting ChromeDriver 95.0.4638.54 (d31a821ec901f68d0d34ccdbaea45b4c86ce543e-refs/branch-heads/4638@{#871}) on port 16960 ```   ### Operating System  Windows 10  ### Selenium version  4.0.0-rc-1  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 95.0.4638.69 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.54 (d31a821ec901f68d0d34ccdbaea45b4c86ce543e-refs  ### Are you using Selenium Grid?  4.0.0-rc-1 (revision bc5511cbda)","closed","","sumpler","2021-11-10T02:06:24Z","2021-12-11T00:06:33Z"
"","10361","[🐛 Bug]:","### What happened?  When I run selenium with firefox driver, firefox opens with an error dialog and then quits.  ``` Profile Missing  Your Firefox profile cannot be loaded. It may be missing or inaccessible ```    ### How can we reproduce the issue?  ```shell Even a very minimal program raises the issue with web. The following code running with Selenium version 4.1.2   import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions;  public class Selenium {     public static void main(String[] args) {         System.setProperty(""webdriver.gecko.driver"", ""/tmp/drivers/linux/marionette/64bit/geckodriver"");          FirefoxOptions options = new FirefoxOptions();         options.setBinary(""/snap/bin/firefox"");         FirefoxDriver driver = new FirefoxDriver(options);     } } ``` ```   ### Relevant log output  ```shell No logs. ```   ### Operating System  Ubuntu Linux 22.04  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97.0  ### What are the browser driver(s) and version(s) where you see this issue?  Firefox Driver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-question,","taksan","2022-02-12T16:39:13Z","2022-03-17T00:09:23Z"
"","10837","[🐛 Bug]: selenium.common.exceptions.InvalidArgumentException: Message: invalid argument (only in Linux)","### What happened?  When I run my code on Linux it returns this error On Windows it works just as expected I have this code: ``` cwd = os.getcwd() html_path = os.path.join(cwd, 'assets', 'thumbnail.html') self.scrapper.driver.get(html_path) ```  On Linux, it returns: /home/jmaranhao/Documents/video-maker/assets/thumbnail.html That's the ""invalid"" string  ### How can we reproduce the issue?  ```shell Just create a driver and have an HTML local file Pass HTML to the function driver.get(html_path) ```   ### Relevant log output  ```shell [WDM] - ====== WebDriver manager ====== [WDM] - Current brave-browser version is 102 [WDM] - Get LATEST chromedriver version for 102 brave-browser [WDM] - Driver [/home/jmaranhao/.wdm/drivers/chromedriver/linux64/102.0.5005.61/chromedriver] found in cache Traceback (most recent call last):   File ""/home/jmaranhao/Documents/video-maker/video_maker/main.py"", line 11, in      thumb_creator.create_thumbnail()   File ""/home/jmaranhao/Documents/video-maker/video_maker/usecases/create_thumbnail.py"", line 26, in create_thumbnail     self.scrapper.driver.get(html_path)   File ""/home/jmaranhao/Documents/video-maker/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 447, in get     self.execute(Command.GET, {'url': url})   File ""/home/jmaranhao/Documents/video-maker/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 435, in execute     self.error_handler.check_response(response)   File ""/home/jmaranhao/Documents/video-maker/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: invalid argument   (Session info: headless chrome=102.1.39.122) ```   ### Operating System  Fedora 35  ### Selenium version  Python 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Brave 102  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.61  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","joaomaranhao","2022-07-02T16:14:59Z","2022-07-04T00:52:07Z"
"","9967","[🐛 Bug]: Squid Proxy being injected into session creation when on gitlab.","### What happened?  When I run a gitlab pipeline with a short test code with selenium 4.0 it fails. With selenium 3.141 it works. No other change has been made  ### How can we reproduce the issue?  ```shell Run the following code on gitlab:  from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options() chrome_options.add_argument(""--headless"") driver = webdriver.Chrome(options=chrome_options) driver.quit()  with either selenium 4.0 or 3.141. Used version of chrome: 92.0.4515.107-1_amd64 Used version of chromedriver: 92.0.4515.43 ```   ### Relevant log output  ```shell $ python tester.py Traceback (most recent call last):   File ""tester.py"", line 7, in      driver = webdriver.Chrome(options=chrome_options)   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 69, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 93, in __init__     RemoteWebDriver.__init__(   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 266, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 357, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 207, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message:     ERROR: The requested URL could not be retrieved    ERROR The requested URL could not be retrieved    The following error was encountered while trying to retrieve the URL: http://localhost:51881/session  Connection to ::1 failed.  The system returned: (111) Connection refused The remote host or network may be down. Please try the request again. ```   ### Operating System  ubuntu I guess  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome: 92.0.4515.107-1_amd64  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver: 92.0.4515.43  ### Are you using Selenium Grid?  no","closed","I-defect,","alex4200","2021-10-21T11:53:37Z","2022-01-16T00:08:12Z"
"","10460","[🐛 Bug]: Safari Browser in IOS Device Hangs in Selenium 4","### What happened?  When I launch seemingly any IOS device on SauceLabs (as defined on the platform configurator as a guide) and Selenium 4 the Safari Browser initialises to 127.0.0.1 with a  message ""Let's browse!""  After that it just seems to hang and then times out after 90 seconds.  See: https://app.saucelabs.com/tests/c406b979336d4a33b1015722c14759bc  Why?  What can I do to either stop it from going to 127.0.0.1 or work around it?  Attempts to detect and repeatedly hit the desired destination page does not seem to work:       public void GetPage(SauceryRemoteWebDriver driver) {             driver.Navigate().GoToUrl(PageUrl);             WaitForPageLoad(driver, 10);       }        public void CheckTitle(SauceryRemoteWebDriver driver) {             while(driver.Title.Equals(SauceryConstants.APPLE_TITLE) || driver.PageSource.Contains(""Let's browse!"")) {                 GetPage(driver);             }             Assert.AreEqual(Title, driver.Title);       }               What am I not seeing? Am I doing something fundamentally incorrect for IOS platforms?  My code base works fine for all desktop platforms and Android. Its just Apple platforms that are being temperamental.  ### How can we reproduce the issue?  ```shell See code and unit tests here: https://github.com/Sauceforge/Saucery ```   ### Relevant log output  ```shell See logs at https://app.saucelabs.com/tests/c406b979336d4a33b1015722c14759bc ```   ### Operating System  SauceLabs Apple platforms  ### Selenium version  C# Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  All SauceLabs IOS platforms   ### What are the browser driver(s) and version(s) where you see this issue?  AppiumDriver  ### Are you using Selenium Grid?  SauceLabs","closed","needs-triaging,","agray","2022-03-20T05:25:47Z","2022-04-21T00:12:54Z"
"","10711","[🐛 Bug]: Upgrading to WebDriver 4.2.0 throughs false positive validateCapability failures while initializing a new session","### What happened?  When I initialize a new chromeDriver instance with a specific chromeOptions object, several false-positive failure logs are thrown telling me that certain capabilities (that I'm not using) are not W3C compliant and I should remove them.  Expected: only relevant capabilities that I'm actually using should trigger such messages.    ### How can we reproduce the issue?  ```shell Import this project and run the TestClass file: https://github.com/MohabMohie/Selenium-Java-validateCapability/tree/main/seleniumCapabilities  Or duplicate the code from this gist: https://gist.github.com/MohabMohie/6dc76bed2faf8bb8073bd0b22fd96e1c ```   ### Relevant log output  ```shell ChromeDriver was started successfully. May 29, 2022 11:42:51 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected upstream dialect: W3C May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:52 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 101 May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""chrome"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""javascriptEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""networkConnectionEnabled"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ May 29, 2022 11:42:54 AM org.openqa.selenium.W3CCapabilityKeysValidator validateCapability WARNING: Support for Legacy Capabilities is deprecated; You are sending ""platform"" which is an invalid capability. Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ ```   ### Operating System  Windows 11  ### Selenium version  Java 4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  No","closed","I-defect,","MohabMohie","2022-05-29T12:33:37Z","2022-06-30T00:12:21Z"
"","10787","[🐛 Bug]: Codecov python code summary is consistently not working","### What happened?  When I go to the CodeCov URL for the Selenium (https://app.codecov.io/gh/SeleniumHQ/selenium/), there is always a message saying that ""Coverage is either being processed, there has been no coverage report uploaded, or there was an error processing.""  This makes it difficult to see which areas need tests.  ### How can we reproduce the issue?  ```shell Go to the URL: https://app.codecov.io/gh/SeleniumHQ/selenium/ ```   ### Relevant log output  ```shell Coverage is either being processed, there has been no coverage report uploaded, or there was an error processing. ```   ### Operating System  N/A (This is about the CodeCov site)  ### Selenium version  N/A (This is about CodeCov)  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  N/A","open","I-defect,","ollie-iterators","2022-06-20T12:34:23Z","2022-06-21T13:19:35Z"
"","10533","[🐛 Bug]: Selenium 4.1.0 proxy in capability does not change to what was set","### What happened?  When I followed the instruction as posted on [official selenium documentation]( https://www.selenium.dev/documentation/webdriver/capabilities/shared/#proxy ) on how to configure webdriver to utilize proxy in python by using DesiredCapabilities, the session that was connected to the target URL showed that it was connected from my IP address instead of the proxy ip address that I set up. Furthermore, when I checked driver.desired_capabilities it shows that it is using localhost ip address instead of the proxy address as if the setup that was done prior had no effect at all (The result from ip checking website shows my ip addres instead). This behavior, however does not appear and it works fine when I followed the [instruction on C#](https://www.selenium.dev/documentation/webdriver/capabilities/shared/#proxy) as every worked correctly.  ### How can we reproduce the issue?  ```shell from seleniumwire import webdriver import time  proxy_ip = ""xx.xx.xx.xx"" proxy_port = xxxx  PROXY_STR = ""{}:{}"".format(proxy_ip,proxy_port)  webdriver.DesiredCapabilities.FIREFOX['proxy'] = { ""httpProxy"": PROXY_STR, ""ftpProxy"": PROXY_STR, ""sslProxy"": PROXY_STR, ""proxyType"": ""MANUAL"",  }  with webdriver.Firefox(executable_path='./firefox_drivers/geckodriver.exe') as driver:     driver.get(""https://ipinfo.io"")     print(driver.desired_capabilities['proxy'])     time.sleep(400) ```   ### Relevant log output  ```shell 1649525375697	geckodriver	INFO	Listening on 127.0.0.1:61488 1649525378751	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""--remote-debugging-port"" ""61489"" ""-no-remote"" ""-profile"" ""C:\\Users\\schwi\\AppData\\Local\\Temp\\rust_mozprofilexrv1d6"" 1649525378995	Marionette	INFO	Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at C:\\Users\\schwi\\AppData\\Local\\Temp\\rust_mozprofilexrv1d6\\search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:61489/devtools/browser/0424e4a1-96ec-44a0-9b04-964687713111 1649525380625	Marionette	INFO	Listening on port 61495 1649525380799	RemoteAgent	WARN	TLS certificate errors will be ignored for this session 1649525380801	RemoteAgent	INFO	Proxy settings initialised: {""proxyType"":""manual"",""httpProxy"":""127.0.0.1:61486"",""sslProxy"":""127.0.0.1:61486""} ```   ### Operating System  Windows10  ### Selenium version  Python 3.9.2, Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 99.0  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","spdev01","2022-04-09T17:31:29Z","2022-05-13T00:14:31Z"
"","9956","[🐛 Bug]: Unexpected error creating WebSocket DevTools session calling GetDevToolsSession with v4.0.0 C# bindings and Selenium Server","### What happened?  When I execute a new RemoteWebDriver in C# against a Selenium 4.0.0 server running locally on the same computer and Chrome v94 the call to GetDevToolsSession() throws an unexpected exception as follows ...  ``` {""Unexpected error creating WebSocket DevTools session.""} ```  ### How can we reproduce the issue?  Within a project in **Visual Studio Professional 2015** (other versions untested) ensure the NuGet package **Selenium.WebDriver v4.0.0** is installed and the **Target framework** of the project is **.NET Framework 4.7**.  Create a program with the following code ...  ``` using OpenQA.Selenium.Chrome; using OpenQA.Selenium; ```  ....  ``` ChromeOptions options = new ChromeOptions(); IWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:4444""), options.ToCapabilities()); var devTools = driver.GetDevToolsSession(); ```  Ensure the Selenium server **selenium-server-4.0.0.jar** exists on the computer. Ensure java is installed (version **1.8.0_231** tested).  Start the Selenium server with the following command in a CLI ...  ``` ""\java.exe"" -Xmx128m -jar \selenium-server-4.0.0.jar standalone ```  Run the program above in Debug mode in Visual Studio. Execution of the GetDevToolsSession call above will trigger the exception .... mentioned above.    ### Expected behavior  It is expected that the call to GetDevToolsSession is successful (no exception).  Have tested this call (using the code above) with the Selenium.WebDriver v4.0.0 NuGet package in combination with Selenium Server v4.0.0 Release Candidate 3 and is successful.  Selenium.WebDriver v4.0.0 NuGet package in combination with Selenium Server v4.0.0 (not Release Candidate 3) is however unsuccessful (as per bug report above).  I have also tried the Selenium 4.0.0 server and RemoteWebDriver with Chrome 93 and experience a different exception.    Have also tried to use Chrome 95 though this was in beta at the time and I could not understand how to configure the ""binary"" attribute of the ""stereotype"" parameter in the Selenium Grid (TOML) config file to successfully point to the local path for Chrome Beta on my PC.    ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94.0.4606.61  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","seanhaydongriffin","2021-10-20T01:32:04Z","2022-06-17T00:11:29Z"
"","10289","[🐛 Bug]: ruby: dangling window handles after a file download in a headless chrome","### What happened?  When I download a file in **headless**  Chrome it spawns a window, which then cannot be interacted with. When I e.g. try to get the url from it, it times out with Net::ReadTimeout exception.  Partial workaround: such window can be at least closed.  There is no problem without the headless mode.  ### How can we reproduce the issue?  ```shell require 'selenium/webdriver'   File.write(File.join(__dir__, 'download.html'), >> http://127.0.0.1:9515/session | {""capabilities"":{""alwaysMatch"":{""browserName"":""chrome"",""goog:chromeOptions"":{""args"":[""--headless""],""prefs"":{""download"":{""prompt_for_download"":false,""default_directory"":""/home/jstefek/workspace/selenium-bug/downloads""}}}}}} 2022-01-26 15:42:42 DEBUG Selenium      > {""Accept""=>""application/json"", ""Content-Type""=>""application/json; charset=UTF-8"", ""User-Agent""=>""selenium/4.1.0 (ruby linux)"", ""Content-Length""=>""222""} 2022-01-26 15:42:42 INFO Selenium  POST session/a0c551bcaf05dad5563ed79dfc9da30b/url 2022-01-26 15:42:42 INFO Selenium    >>> http://127.0.0.1:9515/session/a0c551bcaf05dad5563ed79dfc9da30b/url | {""url"":""file:///home/jstefek/workspace/selenium-bug/download.html""} 2022-01-26 15:42:42 DEBUG Selenium      > {""Accept""=>""application/json"", ""Content-Type""=>""application/json; charset=UTF-8"", ""User-Agent""=>""selenium/4.1.0 (ruby linux)"", ""Content-Length""=>""67""} 2022-01-26 15:42:42 INFO Selenium  GET session/a0c551bcaf05dad5563ed79dfc9da30b/window/handles 2022-01-26 15:42:42 INFO Selenium  POST session/a0c551bcaf05dad5563ed79dfc9da30b/element 2022-01-26 15:42:42 INFO Selenium    >>> http://127.0.0.1:9515/session/a0c551bcaf05dad5563ed79dfc9da30b/element | {""using"":""css selector"",""value"":""a""} 2022-01-26 15:42:42 DEBUG Selenium      > {""Accept""=>""application/json"", ""Content-Type""=>""application/json; charset=UTF-8"", ""User-Agent""=>""selenium/4.1.0 (ruby linux)"", ""Content-Length""=>""36""} 2022-01-26 15:42:42 INFO Selenium  POST session/a0c551bcaf05dad5563ed79dfc9da30b/element/2f7d2bc6-f65a-46f2-9d99-46b3c83dc6db/click 2022-01-26 15:42:42 INFO Selenium  GET session/a0c551bcaf05dad5563ed79dfc9da30b/window/handles 2022-01-26 15:42:43 INFO Selenium  GET session/a0c551bcaf05dad5563ed79dfc9da30b/window/handles 2022-01-26 15:42:43 INFO Selenium  POST session/a0c551bcaf05dad5563ed79dfc9da30b/window 2022-01-26 15:42:43 INFO Selenium    >>> http://127.0.0.1:9515/session/a0c551bcaf05dad5563ed79dfc9da30b/window | {""handle"":""CDwindow-DDC4BE669651BB5DE2E903C41D1DB202""} 2022-01-26 15:42:43 DEBUG Selenium      > {""Accept""=>""application/json"", ""Content-Type""=>""application/json; charset=UTF-8"", ""User-Agent""=>""selenium/4.1.0 (ruby linux)"", ""Content-Length""=>""54""} 2022-01-26 15:42:43 INFO Selenium  GET session/a0c551bcaf05dad5563ed79dfc9da30b/url 2022-01-26 15:42:43 INFO Selenium  POST session/a0c551bcaf05dad5563ed79dfc9da30b/window 2022-01-26 15:42:43 INFO Selenium    >>> http://127.0.0.1:9515/session/a0c551bcaf05dad5563ed79dfc9da30b/window | {""handle"":""CDwindow-4424994D680D68FBD3B3B5F1EF4E1E3B""} 2022-01-26 15:42:43 DEBUG Selenium      > {""Accept""=>""application/json"", ""Content-Type""=>""application/json; charset=UTF-8"", ""User-Agent""=>""selenium/4.1.0 (ruby linux)"", ""Content-Length""=>""54""} 2022-01-26 15:42:43 INFO Selenium  GET session/a0c551bcaf05dad5563ed79dfc9da30b/url 2022-01-26 15:42:53 INFO Selenium -> DELETE session/a0c551bcaf05dad5563ed79dfc9da30b/window /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/protocol.rb:219:in `rbuf_fill': Net::ReadTimeout with # (Net::ReadTimeout) 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/protocol.rb:193:in `readuntil' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/protocol.rb:203:in `readline' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http/response.rb:42:in `read_status_line' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http/response.rb:31:in `read_new' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1575:in `block in transport_request' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1566:in `catch' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1566:in `transport_request' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1539:in `request' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/http/default.rb:124:in `response_for' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/http/default.rb:77:in `request' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/bridge.rb:588:in `execute' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/bridge.rb:194:in `close' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/common/driver.rb:192:in `close' 	from reproducer.rb:47:in `ensure in ' 	from reproducer.rb:47:in `' /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/protocol.rb:219:in `rbuf_fill': Net::ReadTimeout with # (Net::ReadTimeout) 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/protocol.rb:193:in `readuntil' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/protocol.rb:203:in `readline' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http/response.rb:42:in `read_status_line' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http/response.rb:31:in `read_new' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1575:in `block in transport_request' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1566:in `catch' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1566:in `transport_request' 	from /home/jstefek/.rubies/ruby-3.1.0/lib/ruby/3.1.0/net/http.rb:1539:in `request' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/http/default.rb:124:in `response_for' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/http/default.rb:77:in `request' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/http/common.rb:59:in `call' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/bridge.rb:588:in `execute' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/remote/bridge.rb:141:in `url' 	from /home/jstefek/.gem/ruby/3.1.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/common/driver.rb:153:in `current_url' 	from reproducer.rb:44:in `block in ' 	from reproducer.rb:41:in `each' 	from reproducer.rb:41:in `' ```   ### Operating System  Centos 8 stream, Fedora 30  ### Selenium version  selenium-webdriver 4.1.0, ruby 3.1  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 97.0.4692.99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71 (adefa7837d02a07a604c1e6eff0b3a09422ab88d-refs/branch-heads/4692@{#1247})  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","jstefek","2022-01-26T14:45:32Z","2022-03-10T00:09:30Z"
"","10555","[🐛 Bug]: ChromeDriver does not fully quit when using Selenium for java","### What happened?  When I create a ChromeDriver instance and then stop Apache Tomcat, my code calls driver.quit() method. but Tomcat log seems like some threads(AsyncHttpClient, UrlChecker) continue to be running and leave logs right before the JVM shuts down. What should I do if I want to shutdown every thread clearly?  FYR, the source code doesn't close the AsyncHttpClient instance. (NettyClient.java: 145)  ### How can we reproduce the issue?  ```shell public static void main(String[] args) {     WebDriver driver= new ChromeDriver();     driver.get(""localpath"");      JavascriptExecutor js = (JavascriptExecutor) driver;     js.executeScript(""script"");          Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() { 	WebDriver driver;  	public Runnable init(WebDriver driver) { 		this.driver = driver; 		return this; 	}  	@Override 	public void run() { 		if (driver != null) 			driver.quit(); 	}     }.init(driver))); } ```   ### Relevant log output  ```shell 19-Apr-2022 15:35:33.658 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [ReportingServer8] appears to have started a thread named [AsyncHttpClient-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  java.lang.Thread.sleep(Native Method)  io.netty.util.HashedWheelTimer$Worker.waitForNextTick(HashedWheelTimer.java:600)  io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:496)  io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)  java.lang.Thread.run(Thread.java:748) 19-Apr-2022 15:35:33.658 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [ReportingServer8] appears to have started a thread named [UrlChecker-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  sun.misc.Unsafe.park(Native Method)  java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)  java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)  java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)  java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)  java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1073)  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1134)  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)  java.lang.Thread.run(Thread.java:748) 19-Apr-2022 15:35:33.659 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [ReportingServer8] appears to have started a thread named [AsyncHttpClient-1-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)  sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:296)  sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:278)  sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:159)  sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)  sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)  sun.nio.ch.SelectorImpl.select(SelectorImpl.java:101)  io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)  io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:813)  io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460)  io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)  io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)  io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)  java.lang.Thread.run(Thread.java:748) 19-Apr-2022 15:35:33.669 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [ReportingServer8] appears to have started a thread named [AsyncHttpClient-1-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)  sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:296)  sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:278)  sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:159)  sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)  sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)  sun.nio.ch.SelectorImpl.select(SelectorImpl.java:101)  io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)  io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:813)  io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460)  io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)  io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)  io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)  java.lang.Thread.run(Thread.java:748) 19-Apr-2022 15:35:33.670 WARNING [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [ReportingServer8] appears to have started a thread named [AsyncHttpClient-1-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:  sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method)  sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:296)  sun.nio.ch.WindowsSelectorImpl$SubSelector.access$400(WindowsSelectorImpl.java:278)  sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:159)  sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:86)  sun.nio.ch.SelectorImpl.select(SelectorImpl.java:97)  sun.nio.ch.SelectorImpl.select(SelectorImpl.java:101)  io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68)  io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:813)  io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460)  io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)  io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)  io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)  java.lang.Thread.run(Thread.java:748) 19-Apr-2022 15:35:33.671 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [ReportingServer8] created a ThreadLocal with key of type [java.lang.InheritableThreadLocal] (value [java.lang.InheritableThreadLocal@18354539]) and a value of type [m2soft.javard.util.MessageHandler] (value [m2soft.javard.util.MessageHandler@3fce8d78]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. 19-Apr-2022 15:35:33.672 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [ReportingServer8] created a ThreadLocal with key of type [java.lang.InheritableThreadLocal] (value [java.lang.InheritableThreadLocal@18354539]) and a value of type [m2soft.javard.util.MessageHandler] (value [m2soft.javard.util.MessageHandler@3fce8d78]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. 19-Apr-2022 15:35:33.673 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [ReportingServer8] created a ThreadLocal with key of type [java.lang.InheritableThreadLocal] (value [java.lang.InheritableThreadLocal@18354539]) and a value of type [m2soft.javard.util.MessageHandler] (value [m2soft.javard.util.MessageHandler@3fce8d78]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. 19-Apr-2022 15:35:33.673 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [ReportingServer8] created a ThreadLocal with key of type [java.lang.InheritableThreadLocal] (value [java.lang.InheritableThreadLocal@18354539]) and a value of type [m2soft.javard.util.MessageHandler] (value [m2soft.javard.util.MessageHandler@3fce8d78]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. 19-Apr-2022 15:35:33.674 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [ReportingServer8] created a ThreadLocal with key of type [java.lang.InheritableThreadLocal] (value [java.lang.InheritableThreadLocal@18354539]) and a value of type [m2soft.javard.util.MessageHandler] (value [m2soft.javard.util.MessageHandler@3fce8d78]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. 19-Apr-2022 15:35:33.682 SEVERE [localhost-startStop-2] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [ReportingServer8] created a ThreadLocal with key of type [java.lang.InheritableThreadLocal] (value [java.lang.InheritableThreadLocal@18354539]) and a value of type [m2soft.javard.util.MessageHandler] (value [m2soft.javard.util.MessageHandler@3fce8d78]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak. ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100.0.4896.127 (Official Build)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","yjlee0","2022-04-19T07:06:51Z","2022-05-22T00:11:39Z"
"","10101","System.Net.WebSockets.WebSocketException [🐛 Bug]:","### What happened?  when i am using  networkInterceptor.StartMonitoring() this error was thrown:  System.InvalidOperationException: 'There is already one outstanding 'SendAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.'   ### How can we reproduce the issue?  ```shell var handler = new NetworkAuthenticationHandler()                 {                     UriMatcher = d => true, //d.Host.Contains(""google.com""),                     Credentials = new PasswordCredentials(""test"", ""test"")                 };                  var networkInterceptor = driver.Manage().Network;                 networkInterceptor.AddAuthenticationHandler(handler);                  networkInterceptor.StartMonitoring(); ```   ### Relevant log output  ```shell System.InvalidOperationException   HResult=0x80131509   Message=There is already one outstanding 'SendAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.   Source=System   StackTrace:    at System.Net.WebSockets.WebSocketBase.d__47.MoveNext()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__35.MoveNext()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__34`2.MoveNext()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V96.Fetch.FetchAdapter.d__16.MoveNext()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V96.V96Network.d__12.MoveNext()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at OpenQA.Selenium.NetworkManager.d__20.MoveNext()    at System.Runtime.CompilerServices.AsyncMethodBuilderCore.c.b__6_1(Object state)    at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)    at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback()    This exception was originally thrown at this call stack:     [External Code] ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","mehranahmadifar","2021-11-29T15:43:37Z","2022-01-03T00:07:38Z"
"","10707","[🐛 Bug]: Sometimes application URL is not getting launched on Edge Browser with IEMode ,using Selenium Java","### What happened?  When I am launching my website using IE mode with IEDriver 4.0.0 , sometimes the application URL doesn't get launched the driver stucks displaying a blank page with message as ""This is the initial start page for WebDriver Server"" . The issue exists even after killing browser and driver instances in Task Manager and deleting files in %temp% folder  Configurations: Edge Version 101 IE Driver version 4.0.0 32 bit  Using below IEOptions:   InternetExplorerOptions edgeIe11Options = new InternetExplorerOptions();     Map ops = (Map) edgeIe11Options.getCapability(""se:ieOptions"");     ieOptions.attachToEdgeChrome();     ieOptions.withEdgeExecutablePath(""msedge.exe"");     // Edge Browser directory path      edgeIe11Options.introduceFlakinessByIgnoringSecurityDomains();     edgeIe11Options.ignoreZoomSettings();     edgeIe11Options.enablePersistentHovering();     edgeIe11Options.takeFullPageScreenshot();     edgeIe11Options.disableNativeEvents();     edgeIe11Options.requireWindowFocus();     edgeIe11Options.destructivelyEnsureCleanSession();      edgeIe11Options.setCapability(""ignoreProtectedModeSettings"", true);     edgeIe11Options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.IGNORE);    ### How can we reproduce the issue?  ```shell No ```   ### Relevant log output  ```shell No ```   ### Operating System  windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Edge Browser 101 version with IEMode  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver 4.0.0   ### Are you using Selenium Grid?  4.0.0-alpha-2","closed","I-issue-template,","divya415","2022-05-27T11:38:24Z","2022-07-03T00:14:07Z"
"","10188","[🐛 Bug]: Selenium closes after script runs","### What happened?  When ever I try to open a website using **driver.get(url)** it just closes. I've read some things in stack overflow that say to use **chrome_options.add_experimental_option(""detach"", True)**, but it just doesn't work.  ### How can we reproduce the issue?  ```shell from selenium import webdriver from webbrowser import Chrome import time  driver = webdriver.Chrome()  driver.get(url) ```   ### Relevant log output  ```shell DevTools listening on ws://127.0.0.1:53978/devtools/browser/01498b3b-b86f-4b8e-a80f-13b650101a98  That's all. There are no errors in the logs ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96 and Edge 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45, EdgeDriver 96.0.1054.62  ### Are you using Selenium Grid?  Not that I know of","closed","R-awaiting answer,","TwoChins","2021-12-27T01:17:32Z","2022-01-31T00:07:20Z"
"","9989","[🐛 Bug]: Unable to cast RemoteWebDriver with HasLogEvents","### What happened?  When creating a Chrome session via the Selenium Grid 4 the `RemoteWebdriver` is unable to call `onLogEvent` function present in the `HasLogEvents`.  ### How can we reproduce the issue?  ```shell ChromeOptions chromeOptions = new ChromeOptions(); WebDriver driver=RemoteWebDriver.builder().address(""https://localhost:4444"").addAlternative(chromeOptions).build(); Augmenter augmenter = new Augmenter(); driver = augmenter.augment(driver);  AtomicReference seen = new AtomicReference(); CountDownLatch latch = new CountDownLatch(1); ((HasLogEvents) driver).onLogEvent(domMutation(mutation -> {                 seen.set(mutation);                 latch.countDown();                 System.out.println(""CALLED setMutationObserver""); })); ``` ```   ### Relevant log output  ```shell Starting ChromeDriver 95.0.4638.17 (a9d0719444d4b035e284ed1fce73bf6ccd789df2-refs/branch-heads/4638@{#178}) on port 54433 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 01:22:36.461 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 01:22:36.512 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 6f22ede5087c20495851ba842a983655, Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.54, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: C:\Users\UDAAN\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:57981}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: {}, se:cdp: ws://localhost:62864/sessio..., se:cdpVersion: 95.0.4638.54, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Oct 27, 2021 1:22:37 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 95 01:22:37.413 INFO [ProxyNodeWebsockets.createWsEndPoint] - Establishing connection to ws://localhost:57981/devtools/browser/db16502d-4a46-4c20-85f3-0775e0afc68d java.lang.ClassCastException: org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$zfgo1jMb cannot be cast to org.openqa.selenium.logging.HasLogEvents 	at com.qapitol.sauron.tests.Sel4LocalMutationTest.setMutationObserver(Sel4LocalMutationTest.java:98) 	at com.qapitol.sauron.tests.Sel4LocalMutationTest.test(Sel4LocalMutationTest.java:76) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.util.ArrayList.forEach(ArrayList.java:1259) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332) 	at org.testng.SuiteRunner.run(SuiteRunner.java:276) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1134) 	at org.testng.TestNG.runSuites(TestNG.java:1063) 	at org.testng.TestNG.run(TestNG.java:1031) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.54  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 95.0.4638.17  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","aditya-qapitol","2021-10-26T20:08:47Z","2021-11-27T00:06:28Z"
"","10155","[🐛 Bug]: Expires field of Network.setCookie not serialized as double","### What happened?  When calling Network.setCookie, any value set for expires is serialized as a string  ``` INFO: -> {   ""id"": 5,   ""method"": ""Network.setCookie"",   ""params"": {     ""name"": ""test"",     ""value"": ""test"",     ""domain"": "".example.com"",     ""expires"": ""-1""   },   ""sessionId"": ""BBD81B244C0A68D25C798704C7C340E2"" } ```  Response is an error  `{""id"":5,""error"":{""code"":-32602,""message"":""Invalid parameters"",""data"":""Failed to deserialize params.expires - BINDINGS: double value expected at position 56""},""sessionId"":""BBD81B244C0A68D25C798704C7C340E2""}`   Seems like it should be serialized as a double, eg: `""expires"": -1` not `""expires"": ""-1""`  ### How can we reproduce the issue?  ```shell Unit test to reproduce issue --  Test setCookieDoesNotWork will fail  `import org.junit.After; import org.junit.Before; import org.junit.Test; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.devtools.DevTools; import org.openqa.selenium.devtools.v85.network.Network; import org.openqa.selenium.devtools.v85.network.model.TimeSinceEpoch;  import java.util.Optional;  public class SetCookieTest {     private ChromeDriver chromeDriver = null;     private DevTools devTools = null;      @Before     public void setup() {         ChromeOptions chromeOptions = new ChromeOptions();         chromeOptions.setHeadless(true);         chromeDriver = new ChromeDriver(chromeOptions);         devTools = chromeDriver.getDevTools();         devTools.createSession();     }      @After     public void cleanup() {         chromeDriver.quit();     }      @Test     public void setCookieWorks() {         devTools.send(Network.setCookie(                 ""test"",                 ""test"",                 Optional.empty(),                 Optional.of("".example.com""),                 Optional.empty(),                 Optional.empty(),                 Optional.empty(),                 Optional.empty(),                 Optional.empty(),                 Optional.empty()));     }      @Test     public void setCookieDoesNotWork() {         // this fails with error:         // {""id"":6,""error"":{""code"":-32602,""message"":""Invalid parameters"",""data"":""Failed to deserialize params.expires - BINDINGS: double value expected at position 56""},""sessionId"":""D99E2349D88F4D799EC526BCCE31B9EF""}         devTools.send(Network.setCookie(                 ""test"",                 ""test"",                 Optional.empty(),                 Optional.of("".example.com""),                 Optional.empty(),                 Optional.empty(),                 Optional.empty(),                 Optional.empty(),                 // when TimeSinceEpoch fails                 Optional.of(new TimeSinceEpoch(-1)),                 Optional.empty()));     } } ` ```   ### Relevant log output  ```shell Exception message --  org.openqa.selenium.devtools.DevToolsException: {""id"":5,""error"":{""code"":-32602,""message"":""Invalid parameters"",""data"":""Failed to deserialize params.expires - BINDINGS: double value expected at position 56""},""sessionId"":""69A350CDD71F711A42EE71A1266FCC76""} Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'rhart-rmac.local', ip: '192.168.1.116', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.6', java.version: '17' Driver info: driver.version: unknown  	at org.openqa.selenium.devtools.Connection.sendAndWait(Connection.java:159) 	at org.openqa.selenium.devtools.DevTools.send(DevTools.java:70) 	at SetCookieTest.setCookieDoesNotWork(SetCookieTest.java:55) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) Caused by: org.openqa.selenium.WebDriverException: {""id"":5,""error"":{""code"":-32602,""message"":""Invalid parameters"",""data"":""Failed to deserialize params.expires - BINDINGS: double value expected at position 56""},""sessionId"":""69A350CDD71F711A42EE71A1266FCC76""} Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'rhart-rmac.local', ip: '192.168.1.116', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.6', java.version: '17' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:234) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:58) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:199) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) 	at java.base/java.lang.Thread.run(Thread.java:833) ```   ### Operating System  macOS Big Sur  ### Selenium version  Java 4.1.0/4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96  ### Are you using Selenium Grid?  Not applicable","closed","I-defect,","rrhartjr","2021-12-15T18:34:31Z","2022-01-31T00:07:19Z"
"","10228","[🐛 Bug]: Grid 4 error: Failed to create Chrome process","### What happened?  When attempting to start a test using Selenium Grid 4 that runs in Chrome, the grid hub returns a 500 response to the new session request with a message that says ""Failed to create Chrome process"".  Tests using Internet Explorer work correctly.   ### How can we reproduce the issue?  ```shell ` using System; using System.Threading; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Edge; using OpenQA.Selenium.IE; using OpenQA.Selenium.Remote;  namespace app {     public class Program     {         public static void Main(string[] args)         {             const string server = ""host:4444"";             //var capabilities = new InternetExplorerOptions             //{             //    PlatformName = ""WINDOWS""             //};             var capabilities = new ChromeOptions             {                 PlatformName = ""WINDOWS""             };              try             {                 var driver = new RemoteWebDriver(new Uri(""http://"" + server),                     capabilities.ToCapabilities(), TimeSpan.FromMinutes(1));                 driver.Navigate().GoToUrl(""https://www.msn.com/"");                 Thread.Sleep(TimeSpan.FromSeconds(30));                 driver.Quit();             }             catch (Exception ex)             {                 Console.WriteLine($""ERROR: {ex.Message}"");                 Console.WriteLine(ex.StackTrace);             }         }     } } ```` ```   ### Relevant log output  ```shell System info: host: 'BK38HM2', ip: '10.12.73.121', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:131) 	at org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:65) 	at org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143) 	at org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:314) 	at org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52) 	at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64) 	at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.node.Node.execute(Node.java:240) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source) ```   ### Operating System  Windows 10  ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96, Internet Explorer 11  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.4500, IEDriver 4.0.0  ### Are you using Selenium Grid?  4.1.1","closed","","ccarmannt","2022-01-06T20:50:34Z","2022-02-07T00:07:15Z"
"","10522","[🐛 Bug]: Driver method call hangs when there is an alert in child window","### What happened?  When an alert is present in other window handles the execution of most driver method calls causes a timeout. Simple alert checking in current window also does not work.  ### How can we reproduce the issue?  ```python from selenium import webdriver  driver = webdriver.Chrome()  driver.get('https://www.google.com/') driver.execute_script('window.open("""", ""popupwindow"", ""width=500,height=500"");')  parentWindowHandle = driver.current_window_handle childWindows = driver.window_handles childWindows.remove(parentWindowHandle)  # Switch to any child window to generate an alert driver.switch_to.window(childWindows[0]) driver.execute_script(""alert('Sample ALert')"")  # Switch back to parent window driver.switch_to.window(parentWindowHandle)  # Most of the driver call fail here since there is an alert in the other window alert = driver.switch_to.alert  print(f'Alert: {alert}') ```   ### Relevant log output  ```shell selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: 300.000   (Session info: chrome=99.0.4844.84) ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.84  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","justinearl","2022-04-07T08:55:44Z","2022-05-08T00:11:20Z"
"","10026","[🐛 Bug]: driver.execute_script and execute_async_script return prematurely with use of window.confirm or prompt","### What happened?  When a script, run by driver.execute_script or driver.execute_async_script, uses either window.confirm() or window.prompt() both execute_script and execute_async_script return instantly with no value.  I have tested with both ChromeDriver and GeckoDriver using Python.  ### How can we reproduce the issue?  ```shell # Python script to reproduce from selenium import webdriver driver = webdriver.Firefox() result = driver.execute_script(""window.confirm('something'); return 'result';"") # result == None result = driver.execute_script(""console.log('something'); return 'result';"") # result == ""result"" ```   ### Relevant log output  ```shell Unsure what to include here ```   ### Operating System  Windows 10  ### Selenium version  Python 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 94.0.1, Chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0, ChromeDriver 95.0.4638.54  ### Are you using Selenium Grid?  None","closed","I-defect,","gilesjohn","2021-11-11T15:32:26Z","2021-12-12T00:07:22Z"
"","10353","[🐛 Bug]: TimeoutException with DevTools protocol after starting a new WebDriver.","### What happened?  When a new WebDriver is started (devToolEventSecond method), an exception is thrown.  ### How can we reproduce the issue?  ```shell Utils: public final class Util {      public static WebDriver driver = new Augmenter().augment(getWebDriver());     public static DevTools devTools = ((HasDevTools) driver).getDevTools();  }  Test: public class DraftTest {      @BeforeMethod     public void init() {         open(""https://www.google.com/"");     }      @Test     public void devToolEvent() {         Util.devTools.createSession();         Util.devTools.send(Network.clearBrowserCache());     }      @Test     public void devToolEventSecond() {         Util.devTools.createSession();         Util.devTools.send(Network.clearBrowserCache());     }      @AfterMethod     public void tearDown() {         closeWebDriver();     }  POM:       4.0.0      org.example     Draft     1.0-SNAPSHOT               UTF-8         11         11                                 org.testng             testng             7.4.0                               com.codeborne             selenide-testng             6.3.1                               net.bytebuddy             byte-buddy             1.12.7                ```   ### Relevant log output  ```shell org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'My-MacBook-Air.local', ip: 'IP', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.1', java.version: '16.0.2' Driver info: driver.version: unknown  	at org.openqa.selenium.devtools.Connection.sendAndWait(Connection.java:161) 	at org.openqa.selenium.devtools.DevTools.createSession(DevTools.java:95) 	at DraftTest.devToolEventSecond(DraftTest.java:29) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332) 	at org.testng.SuiteRunner.run(SuiteRunner.java:276) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1134) 	at org.testng.TestNG.runSuites(TestNG.java:1063) 	at org.testng.TestNG.run(TestNG.java:1031) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) Caused by: java.util.concurrent.TimeoutException 	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1956) 	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2091) 	at org.openqa.selenium.devtools.Connection.sendAndWait(Connection.java:150) 	... 29 more ```   ### Operating System  macOS Monterey  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.80  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","arsen-papoyan","2022-02-10T12:09:34Z","2022-03-13T00:09:50Z"
"","10235","ImportError: sys.meta_path is None, Python is likely shutting down[🐛 Bug]:","### What happened?  Well i am making a simple python script using selenium to open Instagram and grab an element from the site and close the driver but the driver failed to close. And a strange error was shown I looked up on the internet and there was same error faced by other people. But they wrote that we should driver.quit() instead of driver.close() I did the same but the problem remained the same.  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait    driver = webdriver.Edge(""msedgedriver.exe"")  # Opening instagram driver.get(""https://instagram.com"")  WebDriverWait(driver, 15)  login_username = driver.find_element_by_name(""username"") print(login_username) driver.quit() ```   ### Relevant log output  ```shell D:\Projects\InstAut\env\Scripts\python.exe D:/Projects/InstAut/main.py Traceback (most recent call last):   File ""D:/Projects/InstAut/main.py"", line 13, in      login_username = driver.find_element_by_name(""username"")   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 365, in find_element_by_name     return self.find_element(by=By.NAME, value=name)   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 752, in find_element     'value': value})['value']   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 236, in execute     self.error_handler.check_response(response)   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 192, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""name"",""selector"":""username""}   (Session info: MicrosoftEdge=97.0.1072.55)   (Driver info: msedgedriver=97.0.1072.55 (ce3bf3364880558d4945082f4ac36e01fe36716e),platform=Windows NT 10.0.19042 x86_64)  Exception ignored in:  Traceback (most recent call last):   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\common\service.py"", line 163, in __del__   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\common\service.py"", line 139, in stop   File ""D:\Projects\InstAut\env\lib\site-packages\selenium\webdriver\common\service.py"", line 110, in send_remote_shutdown_command ImportError: sys.meta_path is None, Python is likely shutting down ```   ### Operating System  windows 10  ### Selenium version  selenium for python 3.0  ### What are the browser(s) and version(s) where you see this issue?  Edge Version 97.0.1072.55  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver Version 97.0.1072.55  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","fahad-programmer","2022-01-08T12:35:46Z","2022-02-09T00:09:24Z"
"","10544","[🐛 Bug]: WebDriverWait uses a non-monotonic clock, time.time()","### What happened?  WebDriverWait uses `time.time()`, which displays system clock time and is non-monotonic:  https://github.com/SeleniumHQ/selenium/blob/2a43011ec7a209b40d73bb83635bff74a6be652d/py/selenium/webdriver/support/wait.py#L75  It should instead use `time.monotonic()`, which is ""[not affected by system clock updates](https://docs.python.org/3.7/library/time.html#time.monotonic)""  https://docs.python.org/3.7/library/time.html#time.monotonic https://www.webucator.com/article/python-clocks-explained/ https://en.wikipedia.org/wiki/Monotonic_function  ### How can we reproduce the issue?  call `time.time()` around changes to system clock   ### Relevant log output  ```shell n/a ```   ### Operating System  n/a  ### Selenium version  master  ### What are the browser(s) and version(s) where you see this issue?  n/a  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Kache","2022-04-13T17:04:48Z","2022-05-22T00:11:40Z"
"","10284","[🐛 Bug]: WebdriverJS FluentWait","### What happened?  WebdriverJS FluentWait works in Javascript as per the example in the [documentation](https://www.selenium.dev/documentation/webdriver/waits/#fluentwait). However in TypeScript we are missing the types for the 4th parameter (the frequency at which it polls).  Working JavaScript example (which is polling and including the frequency at which it polls:   ```shell const { Builder } = require(""selenium-webdriver"");  function myFunc() {   console.log(""hello world""); }  (async function example() {   let driver = await new Builder().forBrowser(""chrome"").build();   await driver.get(""http://google.com"");   // should log 5 times, polling every 1 second then times out   await driver.wait(myFunc, 5000, ""Timed out after 5 seconds"", 1000);   await driver.close(); })(); ```     ### How can we reproduce the issue?    ```shell import { Builder } from ""selenium-webdriver"";  function myFunc() {   console.log(""hello world""); }  (async function example() {   let driver = await new Builder().forBrowser(""chrome"").build();   await driver.get(""http://google.com"");   // should log 5 times, polling every 1 second then times out   await driver.wait(myFunc, 5000, ""Timed out after 5 seconds"", 1000);   await driver.close(); })(); ```  Note: if we cast the `driver` to `any` we are able to get it polling correctly:   ``` await (driver as any).wait(myFunc, 5000, ""Timed out after 5 seconds"", 1000); ```  ### Relevant log output  ```shell index.ts:11:65 - error TS2554: Expected 1-3 arguments, but got 4. 11   await driver.wait(myFunc, 5000, ""Timed out after 5 seconds"", 1000); ```  Issue is within `types.d.ts:`   ```  wait(condition: WebElementCondition, opt_timeout?: number, opt_message?: string): WebElementPromise; ```  ### Operating System  macOS  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  97  ### Are you using Selenium Grid?  _No response_","open","I-defect,","Zidious","2022-01-24T22:35:15Z","2022-01-27T21:35:28Z"
"","10673","[🐛 Bug]: selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: crashed.","### What happened?  webdriver doesn't seem be able to start chrome properly. Visually I can't see any window popping up.  It was working at around Chrome v99.  This bug does NOT happen if I add `options.add_argument('--headless')`. Anything else like   ``` options.add_argument('--disable-gpu') options.add_argument('--single-process') options.add_argument('--no-sandbox') options.add_argument('--disable-dev-shm-usage') ```  does NOT help.  ### How can we reproduce the issue?  ```shell from selenium import webdriver  options = webdriver.ChromeOptions() driver = webdriver.Chrome(options=options)  driver.get('https://example.com') print(driver.title) driver.close() ```   ### Relevant log output  ```shell F:\sync\code\python\_gists>_test5.py Traceback (most recent call last):   File ""F:\sync\code\python\_gists\_test5.py"", line 14, in      driver = webdriver.Chrome(options=options)   File ""C:\Program Files\Python3\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 70, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""C:\Program Files\Python3\lib\site-packages\selenium\webdriver\chromium\webdriver.py"", line 92, in __init__     RemoteWebDriver.__init__(   File ""C:\Program Files\Python3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 275, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Program Files\Python3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 365, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Program Files\Python3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 430, in execute     self.error_handler.check_response(response)   File ""C:\Program Files\Python3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: crashed.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location C:\Users\Administrator\AppData\Local\Google\Chrome\Application\chrome.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.) Stacktrace: Backtrace:         Ordinal0 [0x0126B8F3+2406643]         Ordinal0 [0x011FAF31+1945393]         Ordinal0 [0x010EC748+837448]         Ordinal0 [0x01109994+956820]         Ordinal0 [0x01105D71+941425]         Ordinal0 [0x01138EE0+1150688]         Ordinal0 [0x01138B3A+1149754]         Ordinal0 [0x01134096+1130646]         Ordinal0 [0x0110E636+976438]         Ordinal0 [0x0110F546+980294]         GetHandleVerifier [0x014D9612+2498066]         GetHandleVerifier [0x014CC920+2445600]         GetHandleVerifier [0x01304F2A+579370]         GetHandleVerifier [0x01303D36+574774]         Ordinal0 [0x01201C0B+1973259]         Ordinal0 [0x01206688+1992328]         Ordinal0 [0x01206775+1992565]         Ordinal0 [0x0120F8D1+2029777]         BaseThreadInitThunk [0x752D343D+18]         RtlInitializeExceptionChain [0x772A9812+99]         RtlInitializeExceptionChain [0x772A97E5+54] ```   ### Operating System  Windows 7  ### Selenium version  Python 3.8.7 + selenium 4.1.5  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101.0.4951.67  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41 (93c720db8323b3ec10d056025ab95c23a31997c9-refs/branch-heads/4951@{#904})  ### Are you using Selenium Grid?  No","closed","needs-triaging,","fireattack","2022-05-20T07:01:23Z","2022-06-21T00:15:35Z"
"","10248","[🐛 Bug]: .NET - Fetch.getResponseBody error when Network monitoring enabled","### What happened?  We use Network monitoring to log requests and responses for failed tests.  ```csharp             var network = _driver.Manage().Network;             await network.StartMonitoring();             network.NetworkRequestSent += NetworkRequestSent;             network.NetworkResponseReceived += NetworkResponseReceived; ```  Unfortunately, sometimes we receive the following errors: ``` System.InvalidOperationException: A command response was not received: Fetch.getResponseBody ```  It happens it random places, and we cannot reproduce that consistently. Even worse that it makes the whole test run crash.  ### How can we reproduce the issue?  Unfortunately, I don't know how to reproduce this issue consistently. Sometimes it happens, sometimes it doesn't. I'll update this issue if I am able to find a repro case   ### Relevant log output  ```shell The active test run was aborted. Reason: Test host process crashed :  Unhandled exception. System.InvalidOperationException: A command response was not received: Fetch.getResponseBody    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken commandParameters, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V96.Fetch.FetchAdapter.GetResponseBody(GetResponseBodyCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V96.V96Network.AddResponseBody(HttpResponseData responseData)    at OpenQA.Selenium.NetworkManager.OnResponsePaused(Object sender, ResponsePausedEventArgs e)    at System.Threading.Tasks.Task.c.b__139_1(Object state)    at System.Threading.QueueUserWorkItemCallback.c.b__6_0(QueueUserWorkItemCallback quwi)    at System.Threading.ExecutionContext.RunForThreadPoolUnsafe[TState](ExecutionContext executionContext, Action`1 callback, TState& state)    at System.Threading.QueueUserWorkItemCallback.Execute()    at System.Threading.ThreadPoolWorkQueue.Dispatch() ```   ### Operating System  Windows 10, Linux  ### Selenium version  .NET 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.7100  ### Are you using Selenium Grid?  No","open","C-devtools,","Dreamescaper","2022-01-13T11:43:01Z","2022-02-22T09:46:35Z"
"","10085","[🐛 Bug]: Kotlin/Selenium-Java 4.1.0 java.io.IOException: Cannot run program ""hostname"": error=2, No such file or directory","### What happened?  We use Kotlin for our automation framework and since Selenium 4 was released we get an error (I attached the error log) when we try to execute our test in a cloud farm, Saucelabs, and we need to download some files using a precondition in a Windows machine.  The error only happens using Kotlin, if we try to execute the same test in Java is working as expected so here is where I suspect there's an issue with the library and I need your help. This error wasn't happening with Selenium 3.  ### How can we reproduce the issue?  ```shell Here you have a repo with examples: https://github.com/lroman-uz/selenium4-saucelabserrors  Test failing is: Selenium4PreRunWindowsTest.kt  Same Test working in Java is: Selenium4JavaPreRunWindowsTest.java ```   ### Relevant log output  ```shell nov. 25, 2021 10:15:37 A. M. org.openqa.selenium.net.HostIdentifier resolveHostName ADVERTENCIA: Failed to resolve host name java.io.IOException: Cannot run program ""hostname"": error=2, No such file or directory 	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1128) 	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1071) 	at java.base/java.lang.Runtime.exec(Runtime.java:590) 	at java.base/java.lang.Runtime.exec(Runtime.java:414) 	at java.base/java.lang.Runtime.exec(Runtime.java:311) 	at org.openqa.selenium.net.HostIdentifier.resolveHostName(HostIdentifier.java:50) 	at org.openqa.selenium.net.HostIdentifier.getHostName(HostIdentifier.java:116) 	at org.openqa.selenium.WebDriverException.getSystemInformation(WebDriverException.java:95) 	at org.openqa.selenium.WebDriverException.createMessage(WebDriverException.java:87) 	at org.openqa.selenium.WebDriverException.getMessage(WebDriverException.java:65) 	at java.base/java.lang.Throwable.getLocalizedMessage(Throwable.java:207) 	at java.base/java.lang.Throwable.toString(Throwable.java:355) 	at java.base/java.lang.Throwable.printStackTrace(Throwable.java:544) 	at java.base/java.lang.Throwable.printStackTraceHelper(Throwable.java:342) 	at java.base/java.lang.Throwable.printStackTrace(Throwable.java:318) 	at org.junit.runner.notification.Failure.getTrace(Failure.java:75) 	at com.intellij.junit4.JUnit4TestListener.getTrace(JUnit4TestListener.java:298) 	at com.intellij.junit4.JUnit4TestListener.testFailure(JUnit4TestListener.java:280) 	at com.intellij.junit4.JUnit4TestListener.testFailure(JUnit4TestListener.java:231) 	at com.intellij.junit4.JUnit4TestListener.testFailure(JUnit4TestListener.java:210) 	at org.junit.runner.notification.SynchronizedRunListener.testFailure(SynchronizedRunListener.java:63) 	at org.junit.runner.notification.RunNotifier$4.notifyListener(RunNotifier.java:142) 	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72) 	at org.junit.runner.notification.RunNotifier.fireTestFailures(RunNotifier.java:138) 	at org.junit.runner.notification.RunNotifier.fireTestFailure(RunNotifier.java:132) 	at org.junit.internal.runners.model.EachTestNotifier.addFailure(EachTestNotifier.java:23) 	at org.junit.internal.runners.model.EachTestNotifier.addMultipleFailureException(EachTestNotifier.java:29) 	at org.junit.internal.runners.model.EachTestNotifier.addFailure(EachTestNotifier.java:21) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:329) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) Caused by: java.io.IOException: error=2, No such file or directory 	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method) 	at java.base/java.lang.ProcessImpl.(ProcessImpl.java:319) 	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:250) 	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1107) 	... 41 more  nov. 25, 2021 10:15:38 A. M. org.openqa.selenium.net.HostIdentifier resolveHostAddress ADVERTENCIA: Failed to resolve host address java.lang.NullPointerException 	at org.openqa.selenium.net.HostIdentifier.resolveHostAddress(HostIdentifier.java:92) 	at org.openqa.selenium.net.HostIdentifier.getHostAddress(HostIdentifier.java:123) 	at org.openqa.selenium.WebDriverException.getSystemInformation(WebDriverException.java:95) 	at org.openqa.selenium.WebDriverException.createMessage(WebDriverException.java:87) 	at org.openqa.selenium.WebDriverException.getMessage(WebDriverException.java:65) 	at java.base/java.lang.Throwable.getLocalizedMessage(Throwable.java:207) 	at java.base/java.lang.Throwable.toString(Throwable.java:355) 	at java.base/java.lang.Throwable.printStackTrace(Throwable.java:544) 	at java.base/java.lang.Throwable.printStackTraceHelper(Throwable.java:342) 	at java.base/java.lang.Throwable.printStackTrace(Throwable.java:318) 	at org.junit.runner.notification.Failure.getTrace(Failure.java:75) 	at com.intellij.junit4.JUnit4TestListener.getTrace(JUnit4TestListener.java:298) 	at com.intellij.junit4.JUnit4TestListener.testFailure(JUnit4TestListener.java:280) 	at com.intellij.junit4.JUnit4TestListener.testFailure(JUnit4TestListener.java:231) 	at com.intellij.junit4.JUnit4TestListener.testFailure(JUnit4TestListener.java:210) 	at org.junit.runner.notification.SynchronizedRunListener.testFailure(SynchronizedRunListener.java:63) 	at org.junit.runner.notification.RunNotifier$4.notifyListener(RunNotifier.java:142) 	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72) 	at org.junit.runner.notification.RunNotifier.fireTestFailures(RunNotifier.java:138) 	at org.junit.runner.notification.RunNotifier.fireTestFailure(RunNotifier.java:132) 	at org.junit.internal.runners.model.EachTestNotifier.addFailure(EachTestNotifier.java:23) 	at org.junit.internal.runners.model.EachTestNotifier.addMultipleFailureException(EachTestNotifier.java:29) 	at org.junit.internal.runners.model.EachTestNotifier.addFailure(EachTestNotifier.java:21) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:329) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54)   org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response:   	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:50) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:168) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at org.example.Selenium4PreRunWindowsTest.setUp(Selenium4PreRunWindowsTest.kt:45) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) Caused by: org.openqa.selenium.json.JsonException: Unable to parse:  	at org.openqa.selenium.json.Json.toType(Json.java:57) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:109) 	... 32 more Caused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read:  Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'iMac-de-Luis.local', ip: '192.168.0.18', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '14.0.2' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:307) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:229) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.MapCoercer$$Lambda$93/0000000000000000.apply(Unknown Source) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer$$Lambda$294/0000000000000000.apply(Unknown Source) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.Json.toType(Json.java:71) 	at org.openqa.selenium.json.Json.toType(Json.java:55) 	... 34 more ```   ### Operating System  Windows 10/Saucelabs  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 93/Firefox 94/Edge 93  ### What are the browser driver(s) and version(s) where you see this issue?  Ones Saucelabs is using  ### Are you using Selenium Grid?  Saucelabs Grid","closed","needs-triaging,","lroman-uz","2021-11-25T09:46:50Z","2021-12-26T00:08:10Z"
"","9972","[🐛 Bug]: ""Port 53836 already in use"" from embedded Grid","### What happened?  We start an embedded Grid server in the beginning of every test:  ```java     int hubPort = org.openqa.selenium.net.PortProber.findFreePort();     org.openqa.selenium.grid.Main.main(new String[]{""standalone"", ""--port"", String.valueOf(hubPort)}); ```  After upgrading to Selenium 4, it started failing **time-to-time**: ``` IOException: Port 53836 already in use ```   ### How can we reproduce the issue?  The test suite that fails occasionally: https://github.com/selenide/selenide/tree/master/modules/grid/src/test/java/integration  Not sure how to reproduce it stably.   ### Relevant log output  ```shell CustomWebdriverProviderWithRemoteBrowser > customWebdriverProviderCanUseRemoteWebdriver() FAILED     java.io.UncheckedIOException: java.io.IOException: Port 53836 already in use         at org.openqa.selenium.netty.server.NettyServer.start(NettyServer.java:156)         at org.openqa.selenium.netty.server.NettyServer.start(NettyServer.java:51)         at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:214)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129)         at org.openqa.selenium.grid.Main.launch(Main.java:83)         at org.openqa.selenium.grid.Main.go(Main.java:57)         at org.openqa.selenium.grid.Main.main(Main.java:42)         at integration.AbstractGridTest.setUpGrid(AbstractGridTest.java:30) ```  See for example https://github.com/selenide/selenide/runs/3969071951?check_suite_focus=true  ### Operating System  Linux  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 94.0.4606.61  ### Are you using Selenium Grid?  4.0.0","closed","needs-triaging,","asolntsev","2021-10-22T05:43:46Z","2021-12-21T00:07:27Z"
"","10863","[🐛 Bug]: v4.3.1 Terminate orphan process: pid (1729) (chromedriver) loop","### What happened?  We run selenium in github actions, when not killing the process properly, github action has problems of getting rid ot the test runner, leading to a timeout. `driver.quit` do not kill the process like it is needed (see https://github.com/SeleniumHQ/selenium/issues/10795).   This issue is handled with the PR https://github.com/SeleniumHQ/selenium/pull/10796 which removes the functions `getDefaultService` and `setDefaultService`. Unfortunally this PR includes breaking changes and made it into version ^4.  Previously the functions where used like this when starting a service: ```ts   if (seleniumChrome.getDefaultService().isRunning()) {     await seleniumChrome.getDefaultService().kill()   }   const service = new seleniumChrome.ServiceBuilder(chromedriver.path).build()   seleniumChrome.setDefaultService(service) ```  We use mocha as a test runner (`yarn test` triggers it), which will opens a chrome browser in the before hook.  In github actions under **Complete job** this will be logged: ``` 1 Cleaning up orphan processes 2 Terminate orphan process: pid (1701) (node) 3 Terminate orphan process: pid (1712) (sh) 4 Terminate orphan process: pid (1713) (node) 5 Terminate orphan process: pid (1720) (node) 6 Terminate orphan process: pid (1729) (chromedriver) 7 Terminate orphan process: pid (1808) (chromedriver) 8 Terminate orphan process: pid (1885) (chromedriver) ... 76 Terminate orphan process: pid (7060) (chrome) ```  ### How can we reproduce the issue?  A github action runner running selenium 4.3.1. Inside `yarn test` we simply use mocha to start the browser and close/quit it.  ```yml name: Test Runner  on:   workflow_dispatch:   repository_dispatch:     types: [test]  jobs:   e2e_chrome:     runs-on: ubuntu-latest     timeout-minutes: 20      steps:       - uses: actions/setup-node@v1         with:           node-version: 16.13.2        - uses: actions/checkout@v2         with:           ref: ${{ github.event.pull_request.head.ref }}       - uses: bahmutov/npm-install@v1        - run: yarn test ``` ```   ### Relevant log output  ```shell Cleaning up orphan processes Terminate orphan process: pid (1701) (node) Terminate orphan process: pid (1712) (sh) Terminate orphan process: pid (1713) (node) Terminate orphan process: pid (1720) (node) Terminate orphan process: pid (1729) (chromedriver) Terminate orphan process: pid (1808) (chromedriver) Terminate orphan process: pid (1885) (chromedriver) Terminate orphan process: pid (1965) (chromedriver) Terminate orphan process: pid (2051) (chromedriver) Terminate orphan process: pid (2123) (chromedriver) Terminate orphan process: pid (2201) (chromedriver) Terminate orphan process: pid (2281) (chromedriver) Terminate orphan process: pid (2354) (chromedriver) Terminate orphan process: pid (2427) (chromedriver) Terminate orphan process: pid (2505) (chromedriver) Terminate orphan process: pid (2581) (chromedriver) Terminate orphan process: pid (2669) (chromedriver) Terminate orphan process: pid (2754) (chromedriver) Terminate orphan process: pid (2831) (chromedriver) Terminate orphan process: pid (2915) (chromedriver) Terminate orphan process: pid (2994) (chromedriver) Terminate orphan process: pid (3070) (chromedriver) Terminate orphan process: pid (3146) (chromedriver) Terminate orphan process: pid (3220) (chromedriver) Terminate orphan process: pid (3299) (chromedriver) Terminate orphan process: pid (3390) (chromedriver) Terminate orphan process: pid (3467) (chromedriver) Terminate orphan process: pid (3543) (chromedriver) Terminate orphan process: pid (3622) (chromedriver) Terminate orphan process: pid (3699) (chromedriver) Terminate orphan process: pid (3770) (chromedriver) Terminate orphan process: pid (3845) (chromedriver) Terminate orphan process: pid (3925) (chromedriver) Terminate orphan process: pid (4003) (chromedriver) Terminate orphan process: pid (4077) (chromedriver) Terminate orphan process: pid (4152) (chromedriver) Terminate orphan process: pid (4226) (chromedriver) Terminate orphan process: pid (4303) (chromedriver) Terminate orphan process: pid (4380) (chromedriver) Terminate orphan process: pid (4450) (chromedriver) Terminate orphan process: pid (4523) (chromedriver) Terminate orphan process: pid (4601) (chromedriver) Terminate orphan process: pid (4674) (chromedriver) Terminate orphan process: pid (4748) (chromedriver) Terminate orphan process: pid (4836) (chromedriver) Terminate orphan process: pid (4908) (chromedriver) Terminate orphan process: pid (4980) (chromedriver) Terminate orphan process: pid (5053) (chromedriver) Terminate orphan process: pid (5141) (chromedriver) Terminate orphan process: pid (5220) (chromedriver) Terminate orphan process: pid (5294) (chromedriver) Terminate orphan process: pid (5368) (chromedriver) Terminate orphan process: pid (5445) (chromedriver) Terminate orphan process: pid (5517) (chromedriver) Terminate orphan process: pid (5593) (chromedriver) Terminate orphan process: pid (5671) (chromedriver) Terminate orphan process: pid (5753) (chromedriver) Terminate orphan process: pid (5830) (chromedriver) Terminate orphan process: pid (5912) (chromedriver) Terminate orphan process: pid (5986) (chromedriver) Terminate orphan process: pid (6062) (chromedriver) Terminate orphan process: pid (6135) (chromedriver) Terminate orphan process: pid (6209) (chromedriver) Terminate orphan process: pid (6286) (chromedriver) Terminate orphan process: pid (6361) (chromedriver) Terminate orphan process: pid (6439) (chromedriver) Terminate orphan process: pid (6516) (chromedriver) Terminate orphan process: pid (6591) (chromedriver) Terminate orphan process: pid (6670) (chromedriver) Terminate orphan process: pid (6745) (chromedriver) Terminate orphan process: pid (6817) (chromedriver) Terminate orphan process: pid (6896) (chromedriver) Terminate orphan process: pid (6978) (chromedriver) Terminate orphan process: pid (7054) (chromedriver) Terminate orphan process: pid (7060) (chrome) ```   ### Operating System  Ubuntu latest  ### Selenium version  4.3.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","MarkusJLechner","2022-07-11T13:53:20Z","2022-07-14T06:39:13Z"
"","10178","[🐛 Bug]: Attempting to get Selenium Standalone working with WebKitGTK browsers and WebKitWebDriver","### What happened?  We run our tests on GitHub Actions in Selenium/Standalone-Chrome container images.  We're looking to experiment with also including WebKitGTK browsers.  I successfully created [WebKitWebDriver-Browser-Images](https://github.com/jamesmortensen/WebKitWebDriver-Browser-Images), a multi-arch container image, which uses Epiphany browser and MiniBrowser, alongside WebKitWebDriver, which also accepts remote connections. I connected WebdriverIO to it using the following capabilities:  ``` capabilities: [{         maxInstances: 1,         browserName: 'MiniBrowser',         browserVersion: '2.34.1',         'webkitgtk:browserOptions': {             args: [                 '--automation'             ], // ln -s /usr/lib/`arch`-linux-gnu /usr/lib/linux-gnu             binary: `/usr/lib/${ARCH}-linux-gnu/webkit2gtk-4.0/MiniBrowser`         }     }], ```  We're able to run tests standalone, but I believe if we want to include WebKitGTK browsers in a Selenium Grid, the containers will also need to be running Selenium as a node.  I've experimented with some modifications to the config.toml file in order to see if I can register MiniBrowser via standalone mode, as shown below:  ``` # cat ../selenium/config.toml  [network] relax-checks = true  [node] session-timeout = ""300"" override-max-sessions = false detect-drivers = false max-sessions = 1  [[node.driver-configuration]] display-name = ""WebKitGTK"" stereotype = '{""browserName"": ""WebKitGTK"", ""browserVersion"": """", ""platformName"": ""Linux""}' max-sessions = 1 webdriver-executable = '/usr/bin/WebKitWebDriver' ```  As you can see, I've included the WebDriver binary location.  However, I get the following exception when trying to launch the Selenium server:  ``` Selenium Grid Standalone configuration:  [network] relax-checks = true  [node] session-timeout = ""300"" override-max-sessions = false detect-drivers = false max-sessions = 1  [[node.driver-configuration]] display-name = ""WebKitGTK"" stereotype = '{""browserName"": ""WebKitGTK"", ""browserVersion"": """", ""platformName"": ""Linux""}' max-sessions = 1  Starting Selenium Grid Standalone... 09:13:45.628 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 09:13:45.652 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 09:13:46.296 INFO [NodeOptions.getSessionFactories] - Detected 1 available processors java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) 	at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: org.openqa.selenium.grid.config.ConfigException: java.lang.reflect.InvocationTargetException 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:115) 	at org.openqa.selenium.grid.node.config.NodeOptions.getNode(NodeOptions.java:131) 	at org.openqa.selenium.grid.commands.Standalone.createHandlers(Standalone.java:203) 	at org.openqa.selenium.grid.TemplateGridServerCommand.asServer(TemplateGridServerCommand.java:41) 	at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:214) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) 	at org.openqa.selenium.grid.Main.launch(Main.java:83) 	at org.openqa.selenium.grid.Main.go(Main.java:57) 	at org.openqa.selenium.grid.Main.main(Main.java:42) 	... 6 more Caused by: java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.grid.config.ClassCreation.callCreateMethod(ClassCreation.java:50) 	at org.openqa.selenium.grid.config.MemoizedConfig.lambda$getClass$4(MemoizedConfig.java:100) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1737) 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:95) 	... 14 more Caused by: org.openqa.selenium.grid.config.ConfigException: Unable to find matching driver for Capabilities {browserName: WebKitGTK, browserVersion: , platformName: Linux, se:vncEnabled: true} 	at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverConfigs$11(NodeOptions.java:351) 	at java.base/java.util.Optional.orElseThrow(Optional.java:408) 	at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverConfigs$15(NodeOptions.java:350) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverConfigs$16(NodeOptions.java:323) 	at java.base/java.util.Optional.ifPresent(Optional.java:183) 	at org.openqa.selenium.grid.node.config.NodeOptions.addDriverConfigs(NodeOptions.java:277) 	at org.openqa.selenium.grid.node.config.NodeOptions.getSessionFactories(NodeOptions.java:190) 	at org.openqa.selenium.grid.node.local.LocalNodeFactory.create(LocalNodeFactory.java:76) 	... 22 more  ```  The exception error message appears [here in this part of the code](https://github.com/SeleniumHQ/selenium/blob/3a2181467904af9043828cede13e5dc866c1af12/java/src/org/openqa/selenium/grid/node/config/NodeOptions.java#L351) but I'm not sure what's needed to make this work.  Am I using the wrong variation of the name?  ""WebKitGTK"" vs ""webkitgtk2"", etc, or does a separate implementation need to be created, similar to ChromeDriver, FirefoxDriver, ChromeOptions, FirefoxOptions, etc?    Hoping to get a little insight on what I can do to make this work.  Thank you!  ### How can we reproduce the issue?  To reproduce the issue, please build the container image from [this GitHub repo](https://github.com/jamesmortensen/WebKitGTK-Selenium-Standalone). This is a minimum reproducible example.    Once built, run the container, then go to http://localhost:7900 and open a terminal. Alternatively, use docker exec to bash into the container.    On start of the container, you'll see the exceptions. From within the container shell, you can try other alternative inputs to the config.toml (WebKitGTK, webkitgtk all lowercase, etc).  The variations of capitalization I tried all resulted in the same exception.  To start the selenium server, I'm using the shell script within the container:  ```shell $ /opt/bin/start-selenium-standalone.sh ```  ### Relevant log output  ```shell Selenium Grid Standalone configuration:  [network] relax-checks = true  [node] session-timeout = ""300"" override-max-sessions = false detect-drivers = false max-sessions = 1  [[node.driver-configuration]] display-name = ""WebKitGTK"" stereotype = '{""browserName"": ""WebKitGTK"", ""browserVersion"": """", ""platformName"": ""Linux""}' max-sessions = 1  Starting Selenium Grid Standalone... 09:13:45.628 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 09:13:45.652 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 09:13:46.296 INFO [NodeOptions.getSessionFactories] - Detected 1 available processors java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) 	at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: org.openqa.selenium.grid.config.ConfigException: java.lang.reflect.InvocationTargetException 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:115) 	at org.openqa.selenium.grid.node.config.NodeOptions.getNode(NodeOptions.java:131) 	at org.openqa.selenium.grid.commands.Standalone.createHandlers(Standalone.java:203) 	at org.openqa.selenium.grid.TemplateGridServerCommand.asServer(TemplateGridServerCommand.java:41) 	at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:214) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) 	at org.openqa.selenium.grid.Main.launch(Main.java:83) 	at org.openqa.selenium.grid.Main.go(Main.java:57) 	at org.openqa.selenium.grid.Main.main(Main.java:42) 	... 6 more Caused by: java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.grid.config.ClassCreation.callCreateMethod(ClassCreation.java:50) 	at org.openqa.selenium.grid.config.MemoizedConfig.lambda$getClass$4(MemoizedConfig.java:100) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1737) 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:95) 	... 14 more Caused by: org.openqa.selenium.grid.config.ConfigException: Unable to find matching driver for Capabilities {browserName: WebKitGTK, browserVersion: , platformName: Linux, se:vncEnabled: true} 	at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverConfigs$11(NodeOptions.java:351) 	at java.base/java.util.Optional.orElseThrow(Optional.java:408) 	at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverConfigs$15(NodeOptions.java:350) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.openqa.selenium.grid.node.config.NodeOptions.lambda$addDriverConfigs$16(NodeOptions.java:323) 	at java.base/java.util.Optional.ifPresent(Optional.java:183) 	at org.openqa.selenium.grid.node.config.NodeOptions.addDriverConfigs(NodeOptions.java:277) 	at org.openqa.selenium.grid.node.config.NodeOptions.getSessionFactories(NodeOptions.java:190) 	at org.openqa.selenium.grid.node.local.LocalNodeFactory.create(LocalNodeFactory.java:76) 	... 22 more ```   ### Operating System  macOS 12.0.1 Apple M1, but running in a Debian 11 ARM/Ubuntu 20.04 x86_64 container image.  I don't think the architecture is relevant as binaries are available for the same version of WebKitGTK and WebKitWebDriver for both x86_64 and ARM64.  By default, the Dockerfile in the repo is built for those on x86_64 architectures, from selenium/node-base:latest.  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Epiphany, MiniBrowser, WebKitGTK 2.34.1  ### What are the browser driver(s) and version(s) where you see this issue?  WebKitWebDriver version 2.34.1  ### Are you using Selenium Grid?  Not yet, but that's the end goal. I'm starting by just trying to run in standalone mode as that involves the least number of other components.","closed","R-awaiting answer,","jamesmortensen","2021-12-24T12:16:30Z","2022-03-21T00:09:58Z"
"","10453","[🐛 Bug]: ClientConfig.connectionTimeout setter is gone","### What happened?  We implemented a custom HttpClientFactory/HttpClient based on the Java 11 HttpClient to get rid of the netty dependencies. Our ClientConfig is initialized with values out of a configuration file, but the connectionTimeout setter has been removed in commit  https://github.com/SeleniumHQ/selenium/commit/1990a43a745669e87acb39331a0742979ecc728a   @pujagani Is it possible to get it back please  ### How can we reproduce the issue?  ```shell ClientConfig.defaultConfig().connectionTimeout(Duration.ofSeconds(1337)) ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Windows 10 x64  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  none - this is api related  ### What are the browser driver(s) and version(s) where you see this issue?  none - this is api related  ### Are you using Selenium Grid?  _No response_","closed","C-java,","joerg1985","2022-03-17T15:40:34Z","2022-04-25T00:10:22Z"
"","10030","[🐛 Bug]: Selenium v4 - Browsers crash after 300s of idle time, even with a jasmineTimeout = 900s","### What happened?  We have several tests that open multiple browsers, and some of that browsers need be idle for some minutes before any expectation. When using selenium 3.141.59 this was working just fine, but when using selenium 4.0.0, the browsers close unexpectedly after 300 seconds. We have a defaultTimeoutInterval = 900 seconds. It has been hard to understand the root cause of this issue since we have no logs available when the browsers close unexpectedly.  Note: If we perform some action on the browser (breaking the idle time) the test finishes successfully.   ### How can we reproduce the issue?  ```shell We can reproduce this by implementing a test that opens a browser session and stays idle for more than 300 seconds, while having a jasmineTimeout higher than that. ```   ### Relevant log output  ```shell Unfortunately there is no logs available when the browser automatically close. ```   ### Operating System  macOS Big Sur Version 11.6  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 95.0.4638.69  ### Are you using Selenium Grid?  Yes (not on my machine, just on the pipeline)","closed","needs-triaging,","pedrofig-td","2021-11-12T13:00:21Z","2022-01-02T00:07:51Z"
"","10600","[🐛 Bug]: Inconsistent IEDriverServer 4.0.0 instance shutdown (using Edge in IEMode + Selenium 4)","### What happened?  We have been facing an issue (which is inconsistent), the IEDriverServer instance managed by Selenium Grid not shutting down gracefully.  Frequently the selenium node instance continue in loop for driver.quit() request, trying to keep sending DELETE request to IEDriverServer, and thru log we could see the IEDriverServer loops waiting for all browser instance to close, however the browser instance is already closed.  **What we are using?** Selenium 4.1.4 (for hub and node) Selenium Java Client 4.1.2 Internet Explorer - with capability to run on Edge in IE Mode  **Hub started with below command line:** java -jar ""C:\TAAS_AUTOMATION\selenium-server-4.1.4.jar"" hub  **Node started with below command line:** java -Dwebdriver.ie.driver.logfile=driver.log -Dwebdriver.ie.driver.loglevel=DEBUG -jar selenium-server-4.1.4.jar node --detect-drivers true --http-logs true --log-level FINE --log session.log    ### How can we reproduce the issue?  ```shell **What we are using?** Selenium 4.1.4 (for hub and node) Selenium Java Client 4.1.2 Internet Explorer - with capability to run on Edge in IE Mode  **Hub started with below command line:** java -jar ""C:\TAAS_AUTOMATION\selenium-server-4.1.4.jar"" hub  **Node started with below command line:** java -Dwebdriver.ie.driver.logfile=driver.log -Dwebdriver.ie.driver.loglevel=DEBUG -jar selenium-server-4.1.4.jar node --detect-drivers true --http-logs true --log-level FINE --log session.log ```   ### Relevant log output  ```shell T 2022-05-02 12:05:12:818 C:\Projects\selenium\cpp\webdriver-server\server.cc(479) Entering Server::SendResponseToClient T 2022-05-02 12:05:12:818 C:\Projects\selenium\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize T 2022-05-02 12:05:12:818 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /session/4e4c2094-0f96-4fa1-a77c-9d2a029ddcdd HTTP verb: DELETE body: {} T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\webdriver-server\server.cc(334) Entering Server::DispatchCommand T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\webdriver-server\server.cc(687) Entering Server::LookupCommand D 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\webdriver-server\server.cc(343) Command: DELETE /session/4e4c2094-0f96-4fa1-a77c-9d2a029ddcdd {} T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\webdriver-server\server.cc(466) Entering Server::LookupSession T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\iedriver\IESession.cpp(198) Entering IESession::ExecuteCommand T 2022-05-02 12:05:13:056 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(156) Entering IECommandExecutor::OnSetCommand T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize D 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""quit"", ""locator"" : { ""sessionid"" : ""4e4c2094-0f96-4fa1-a77c-9d2a029ddcdd"" }, ""parameters"" : {} } T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize D 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""quit"", ""locator"" : { ""sessionid"" : ""4e4c2094-0f96-4fa1-a77c-9d2a029ddcdd"" }, ""parameters"" : {} } T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(178) Entering IECommandExecutor::OnExecCommand T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(974) Entering IECommandExecutor::DispatchCommand T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser D 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(992) Checking for alert before executing quit command T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found D 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1039) Executing command: quit T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1325) Entering IECommandExecutor::GetManagedBrowserHandles T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\Browser.cpp(571) Entering Browser::IsValidWindow T 2022-05-02 12:05:13:057 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:058 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle T 2022-05-02 12:05:13:058 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser T 2022-05-02 12:05:13:058 C:\Projects\selenium\cpp\iedriver\Browser.cpp(428) Entering Browser::Close T 2022-05-02 12:05:13:058 C:\Projects\selenium\cpp\iedriver\Browser.cpp(559) Entering Browser::GetTopLevelWindowHandle T 2022-05-02 12:05:13:058 C:\Projects\selenium\cpp\iedriver\IESession.cpp(226) Beginning wait for response length to be not zero T 2022-05-02 12:05:13:058 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(149) Entering DocumentHost::SetFocusedFrameByElement T 2022-05-02 12:05:13:059 C:\Projects\selenium\cpp\webdriver-server\response.cc(81) Entering Response::SetSuccessResponse T 2022-05-02 12:05:13:059 C:\Projects\selenium\cpp\webdriver-server\response.cc(87) Entering Response::SetResponse D 2022-05-02 12:05:13:059 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1042) Command execution for quit complete T 2022-05-02 12:05:13:059 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser T 2022-05-02 12:05:13:059 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser T 2022-05-02 12:05:13:059 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1304) Current command executor is not valid T 2022-05-02 12:05:13:121 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:121 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:121 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:121 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:121 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:122 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:122 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:194 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:194 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:195 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:258 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found  T 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:319 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:371 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:372 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:372 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:372 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:372 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:372 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:372 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:443 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:505 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:505 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:505 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:505 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:505 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:505 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:506 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:568 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:639 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:697 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:755 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:818 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:884 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:13:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:14:008 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:14:067 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:14:068 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:14:068 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:14:068 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:14:068 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:14:068 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:14:068 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:14:131 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:14:131 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:14:131 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:14:132 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:14:132 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:14:132 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:14:132 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found T 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait T 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers T 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID a514800a-286b-490d-81e8-1474cdaba229 T 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive T 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle T 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle D 2022-05-02 12:05:14:194 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found ```   ### Operating System  Windows 10  ### Selenium version  Selenium Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Edge in IEMode  ### What are the browser driver(s) and version(s) where you see this issue?  InternetExplorer Driver 4.0.0  ### Are you using Selenium Grid?  Yes - 4.1.4","open","I-defect,","adhisivanr","2022-05-02T11:42:54Z","2022-06-01T07:26:15Z"
"","10087","[🐛 Bug]: ""No such file or directory"" exception when initializing Chrome Driver in Docker container","### What happened?  We have a project written in .NET (specifically .NET Core 3.1) using Selenium, and we build a Linux Docker image from that app. We have the following code for initializing the driver:  ``` var path = Path.Combine(Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location)); var driver = new ChromeDriver(ChromeDriverService.CreateDefaultService(path), chromeOptions, chromeSettings.Value.CreativePageLoadTimeout); ```  Whenever this code is run, we get the following error message: ``` [10:05:06 ERR] An unexpected error occurred while processing a request System.ComponentModel.Win32Exception (2): No such file or directory    at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)    at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)    at System.Diagnostics.Process.Start()    at OpenQA.Selenium.DriverService.Start()    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.WebDriver..ctor(ICommandExecutor executor, ICapabilities capabilities)    at OpenQA.Selenium.Chromium.ChromiumDriver..ctor(ChromiumDriverService service, ChromiumOptions options, TimeSpan commandTimeout)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout) ```  We've confirmed that the ""chromedriver"" file does indeed exist in the specified directory by SSHing into the Docker container. We have also tried not specifying a path, specifying the root path, and many other combinations but they all result in the same problem.  If the project is debugged locally in Windows (ie. not running within a Linux Docker instance) then everything works as expected.  ### How can we reproduce the issue?  ```shell I can't share this project as is but I can create and share a new reproduceable project with you if needed. ```   ### Relevant log output  ```shell [10:05:06 ERR] An unexpected error occurred while processing a request System.ComponentModel.Win32Exception (2): No such file or directory    at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)    at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)    at System.Diagnostics.Process.Start()    at OpenQA.Selenium.DriverService.Start()    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.WebDriver..ctor(ICommandExecutor executor, ICapabilities capabilities)    at OpenQA.Selenium.Chromium.ChromiumDriver..ctor(ChromiumDriverService service, ChromiumOptions options, TimeSpan commandTimeout)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout) ```   ### Operating System  Windows 10, Alpine Linux  ### Selenium version  .NET   ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 93.0.4577.1500  ### Are you using Selenium Grid?  _No response_","closed","I-question,","sbates-bannerflow","2021-11-26T10:14:31Z","2022-01-01T00:07:33Z"
"","10496","[🐛 Bug]: CdpVersionFinder does not find any implementation for Spring Boot Application","### What happened?  We have a framework which uses Selenium 4 java library. Our Application uses Spring Boot. Execution from both Intellij and Gradle works well but this is because classpath is accessed directly. When we create a fat jar, ServiceLoader cannot access inner libraries to load them and use. It results with NoOp and disability to create session  ### How can we reproduce the issue?  ```shell Create Spring boot application which wants to open browser using selenium. Add line to create CDP session afterwards. Build FatJar, run from jar file using java -jar ```   ### Relevant log output  ```shell --- ```   ### Operating System  Windows 10, Linux  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver according to 99 version (WebDriverManager)  ### Are you using Selenium Grid?  No","closed","C-devtools,","globus1987","2022-03-30T10:25:46Z","2022-05-08T00:11:23Z"
"","10870","[🐛 Bug]: Error handling in Java e.g. SessionNotCreatedException/UnreachableBrowserException caused by Error","### What happened?  We had some issues with our system, this lead to an OutOfMemoryError error. This is nothing Selenium should try to handle and wrap into a SessionNotCreatedException or UnreachableBrowserException in `RemoteWebDriver#execute`.  The javadoc of [Error](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Error.html) states `... indicates serious problems that a reasonable application should not try to catch.`  By wrapping this into a SessionNotCreatedException or UnreachableBrowserException the Error is ""downgraded"" to a [RuntimeException](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/RuntimeException.html), `... superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.`  One might try to run the browser on a different machine after a SessionNotCreatedException has has occurred. But the real reason might be a local issue (e.g. OutOfMemoryError, NoClassDefFoundError, etc.)  I am not sure if there are other places on which this applies.  ### How can we reproduce the issue?  ```shell public static void main(String[] args) {     new RemoteWebDriver(new CommandExecutor() {         @Override         public Response execute(Command command) throws IOException {             throw new OutOfMemoryError(""this just a fake"");         }     }, new ChromeOptions()); } ```   ### Relevant log output  ```shell Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.3.0', revision: 'a4995e2c09*' System info: host: 'myHost', ip: '192.168.1.10', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:587) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:264) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:179) 	at just.a.Dummy.main(Dummy.java:21) Caused by: java.lang.OutOfMemoryError: this just a fake 	at just.a.Dummy$1.execute(Dummy.java:24) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569) 	... 3 more ```   ### Operating System  Windows 10 x64  ### Selenium version  Java 4.x  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  No","open","I-defect,","joerg1985","2022-07-13T10:08:11Z","2022-07-14T14:31:51Z"
"","10654","[🐛 Bug]: frame command does not support using an ID or name directly","### What happened?  We can't use frame command with ID or names like: ```js // Using the ID await driver.switchTo().frame('buttonframe');`  // Or using the name instead await driver.switchTo().frame('myframe'); ``` But as per [docs](https://www.selenium.dev/documentation/webdriver/browser/frames/#using-a-name-or-id), it says we can do that  ### What browsers and operating systems are you seeing the problem on?  Across all browsers","closed","I-enhancement,","gravityvi","2022-05-16T16:13:11Z","2022-06-16T00:11:11Z"
"","10122","[🐛 Bug]: Selenium 4.0 and 4.1 Relative locators are not working properly starting from December 6 2021, but the same worked fine till November end 2021","### What happened?  We are using web based application and working in Chrome browser 96.0.4664.93 version. We implemented Selenium relative locators for the project and the same was working fine till November end 2021 and starting from December 6th 2021, it is not working.  below direction is not working so far, it is not inputting value in the immediate next below input box, instead it is inputting value in the 2nd input box.  Note: tried in both Selenium 4.0 and 4.1  ### How can we reproduce the issue?  ```shell . ```   ### Relevant log output  ```shell . ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.0.0 and Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.93  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 96.0.4664.93  ### Are you using Selenium Grid?  no","closed","I-issue-template,","YasodhaNithi","2021-12-09T07:31:54Z","2022-01-26T00:10:11Z"
"","10899","[🐛 Bug]: Selenium 4.1.1 org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure","### What happened?  We are using serenity 3.2.4, Selenium 4.1.1 and IEDriverServer 4.3.0 for executing test cases on IE Mode of Edge. When we are executing x number of test cases in a row then in between some test cases selenium is not able to establish the connection with the browser launched by selenium. Below is the stack trace.   ### How can we reproduce the issue?  ```shell As these are in Client setup cannot share the ```   ### Relevant log output  ```shell Started InternetExplorerDriver server (64-bit) 4.3.0.0 Listening on port 55336 Only local connections are allowed 00:50:25.919 [AsyncHttpClient-1-1] DEBUG org.asynchttpclient.netty.channel.DefaultChannelPool - Entry count for : http://localhost:63628 : 1 00:50:25.919 [AsyncHttpClient-1-1] DEBUG org.asynchttpclient.netty.channel.DefaultChannelPool - Adding Candidate expired Channel [id: 0x2634db97, L:/127.0.0.1:63314 ! R:localhost/127.0.0.1:63628] isIdleTimeoutExpired=false isRemotelyClosed=true isTtlExpired=false 00:50:25.919 [AsyncHttpClient-1-1] DEBUG org.asynchttpclient.netty.channel.DefaultChannelPool - Closing Idle Channel [id: 0x2634db97, L:/127.0.0.1:63314 ! R:localhost/127.0.0.1:63628] 00:50:25.919 [AsyncHttpClient-1-1] DEBUG org.asynchttpclient.netty.channel.DefaultChannelPool - Closed 1 connections out of 1 in 0 ms 00:50:26.087 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.channel.NettyConnectListener - Using new Channel '[id: 0x7378f161, L:/127.0.0.1:63319 - R:localhost/127.0.0.1:55336]' for 'POST' to '/session' 00:53:26.115 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.handler.HttpHandler - Channel Closed: [id: 0x7378f161, L:/127.0.0.1:63319 ! R:localhost/127.0.0.1:55336] with attribute NettyResponseFuture{currentRetry=0, 	isDone=0, 	isCancelled=0, 	asyncHandler=org.asynchttpclient.AsyncCompletionHandlerBase@19bd2cb, 	nettyRequest=org.asynchttpclient.netty.request.NettyRequest@67a6cf53, 	future=java.util.concurrent.CompletableFuture@46c8385[Not completed], 	uri=http://localhost:55336/session, 	keepAlive=true, 	redirectCount=0, 	timeoutsHolder=org.asynchttpclient.netty.timeout.TimeoutsHolder@34ec86a1, 	inAuth=0, 	touch=1658389826087} 00:53:26.115 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.request.NettyRequestSender - Trying to recover request DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /session HTTP/1.1 User-Agent: selenium/4.1.2 (java windows) Content-Length: 1108 Content-Type: application/json; charset=utf-8 host: localhost:55336 accept: */*  |-- Open browser in maximise mode 00:53:26.669 [main] INFO  - STEP ERROR: net.serenitybdd.core.exceptions.SerenityManagedException: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.       net.serenitybdd.core.exceptions.SerenityManagedException: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 	at core.EdgeIE.newDriver(EdgeIE.java:28) 	at net.serenitybdd.core.webdriver.driverproviders.ProvidedDriverProvider.newInstance(ProvidedDriverProvider.java:22) 	at net.thucydides.core.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:157) 	at net.thucydides.core.webdriver.WebDriverFactory.newWebdriverInstance(WebDriverFactory.java:136) 	at net.thucydides.core.webdriver.WebDriverFacade.newDriverInstance(WebDriverFacade.java:143) 	at net.thucydides.core.webdriver.WebDriverFacade.newProxyDriver(WebDriverFacade.java:134) 	at net.thucydides.core.webdriver.WebDriverFacade.getProxiedDriver(WebDriverFacade.java:104) 	at net.thucydides.core.webdriver.WebDriverFacade.manage(WebDriverFacade.java:334) 	at csm_pfm.com.stepdefinitions.core.BaseSteps.openBrowserInMaximiseMode(BaseSteps.java:55) 	at csm_pfm.com.stepdefinitions.core.BaseSteps$ByteBuddy$8VEswRYF.openBrowserInMaximiseMode$accessor$hptB7YcJ(Unknown Source) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at net.thucydides.core.steps.BaseMethodRunner.invokeMethod(BaseMethodRunner.java:18) 	at net.thucydides.core.steps.NormalMethodRunner.invokeMethodAndNotifyFailures(NormalMethodRunner.java:18) 	at net.thucydides.core.steps.StepInterceptor.runNormalMethod(StepInterceptor.java:406) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:191) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:84) 	at net.thucydides.core.steps.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:51) 	at csm_pfm.com.stepdefinitions.core.BaseSteps$ByteBuddy$8VEswRYF.openBrowserInMaximiseMode(Unknown Source) 	at csm_pfm.com.stepdefinitions.core.BaseDefinitions.setUp(BaseDefinitions.java:19) Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:188) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:180) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:156) 	at core.EdgeIE.newDriver(EdgeIE.java:24) 	at net.serenitybdd.core.webdriver.driverproviders.ProvidedDriverProvider.newInstance(ProvidedDriverProvider.java:22) 	at net.thucydides.core.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:157) 	at net.thucydides.core.webdriver.WebDriverFactory.newWebdriverInstance(WebDriverFactory.java:136) 	at net.thucydides.core.webdriver.WebDriverFacade.newDriverInstance(WebDriverFacade.java:143) 	at net.thucydides.core.webdriver.WebDriverFacade.newProxyDriver(WebDriverFacade.java:134) 	at net.thucydides.core.webdriver.WebDriverFacade.getProxiedDriver(WebDriverFacade.java:104) 	at net.thucydides.core.webdriver.WebDriverFacade.manage(WebDriverFacade.java:334) 	at csm_pfm.com.stepdefinitions.core.BaseSteps.openBrowserInMaximiseMode(BaseSteps.java:55) 	at csm_pfm.com.stepdefinitions.core.BaseSteps$ByteBuddy$8VEswRYF.openBrowserInMaximiseMode$accessor$hptB7YcJ(Unknown Source) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at net.thucydides.core.steps.BaseMethodRunner.invokeMethod(BaseMethodRunner.java:18) 	at net.thucydides.core.steps.NormalMethodRunner.invokeMethodAndNotifyFailures(NormalMethodRunner.java:18) 	at net.thucydides.core.steps.StepInterceptor.runNormalMethod(StepInterceptor.java:406) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:191) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:84) 	at net.thucydides.core.steps.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:51) 	at csm_pfm.com.stepdefinitions.core.BaseSteps$ByteBuddy$8VEswRYF.openBrowserInMaximiseMode(Unknown Source) 	at csm_pfm.com.stepdefinitions.core.BaseDefinitions.setUp(BaseDefinitions.java:19) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66) 	at io.cucumber.java.Invoker.invoke(Invoker.java:24) 	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47) 	at io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64) 	at io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46) 	at io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21) 	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10) 	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86) 	at io.cucumber.core.runner.TestStep.run(TestStep.java:57) 	at io.cucumber.core.runner.TestCase.run(TestCase.java:89) 	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151) 	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151) 	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23) 	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137) 	at io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:258) 	at io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:58) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at io.cucumber.junit.CucumberSerenityRunner$RunCucumber.evaluate(CucumberSerenityRunner.java:287) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:364) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:272) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:237) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:158) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428) 	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162) 	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548) Caused by: org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'CRDQN1VQPFMAP50', ip: '10.215.104.90', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_161' Driver info: driver.version: InternetExplorerDriver 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:72) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:124) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	... 74 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1771) 	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1915) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:66) ```   ### Operating System  Microsoft 2012 server R2  ### Selenium version  serenity 3.2.4, Selenium 4.1.1 and IEDriverServer 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  MSEdge - 103.0.1264.49  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer - 4.3.0  ### Are you using Selenium Grid?  No","open","D-edge,","BKandukuri-clgx","2022-07-22T13:11:05Z","2022-08-03T12:15:29Z"
"","10576","[🐛 Bug]: unable to connect the node to the hub: Could not bind to address or port is already in use","### What happened?  We are using AWS EC2 instance with OS version debian 9 and trying to start a selenium node version 4 on the EC2 instance using the below command , but it is giving the error as ""Could not bind to address or port is already in use""  java -jar selenium-server-4.1.2.jar node --host $public_ip --hub  http://127.0.0.1:35577/wd/hub --publish-events tcp://127.0.0.1:5442 --subscribe-events tcp://127.0.0.1:5443 --detect-drivers false --log-level ""fine"" --port 5555 --override-max-sessions true --max-sessions 74 --max-threads 55 --driver-configuration display-name=""$(hostname)"" max-sessions=74  stereotype='{""browserName"":""chrome"",""cluster:pcgeo"":""geo""}'  The  hub is running on a normal linux machine with debian 11 . To connect to the hub which is installed on the linux machine, on EC2 instance we are using port forwarding and the hub is behind a haproxy load balancer. So the local port 35577 on the EC2 instance will make a connection to the frontend haproxy bind port 35555 which will forward the requests to the linux machine (debian11) where the hub is running on the port 4444  Even though there are no process running on the port 5555 on EC2 instance we still get the error as 'Could not bind to address or port is already in use'. Selecting a random port for the node is giving the same error.   ### How can we reproduce the issue?  ```shell java -jar selenium-server-4.1.2.jar node --host $public_ip --hub  http://127.0.0.1:35577/wd/hub --publish-events tcp://127.0.0.1:5442 --subscribe-events tcp://127.0.0.1:5443 --detect-drivers false --log-level ""fine"" --port 5555 --override-max-sessions true --max-sessions 74 --max-threads 55 --driver-configuration display-name=""$(hostname)"" max-sessions=74  stereotype='{""browserName"":""chrome"",""cluster:pcgeo"":""geo""}' ```   ### Relevant log output  ```shell [07:09][sdf@ip-172-31-15-152:selenium-server]$ java -jar selenium-server-4.1.2.jar node --host $public_ip --hub  http://127.0.0.1:35577/wd/hub --publish-events tcp://127.0.0.1:5442 --subscribe-events tcp://127.0.0.1:5443 --detect-drivers false  --log-level ""fine"" --port 57843 --override-max-sessions true --max-sessions 74 --max-threads 55 --driver-configuration display-name=""$(hostname)"" max-sessions=74 stereotype='{""browserName"":""chrome"",""cluster:pcgeo"":""aws_paris""}' 07:10:05.343 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 07:10:05.350 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 07:10:05.509 DEBUG [AutoConfiguredOpenTelemetrySdkBuilder.build] - Global OpenTelemetrySdk set to OpenTelemetrySdk{tracerP rovider=SdkTracerProvider{clock=SystemClock{}, idGenerator=RandomIdGenerator{}, resource=Resource{schemaUrl=https://opente lemetry.io/schemas/1.8.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.na me=""opentelemetry"", telemetry.sdk.version=""1.10.1""}}, spanLimitsSupplier=SpanLimitsValue{maxNumberOfAttributes=128, maxNum berOfEvents=128, maxNumberOfLinks=128, maxNumberOfAttributesPerEvent=128, maxNumberOfAttributesPerLink=128, maxAttributeVa lueLength=2147483647}, sampler=ParentBased{root:AlwaysOnSampler,remoteParentSampled:AlwaysOnSampler,remoteParentNotSampled :AlwaysOffSampler,localParentSampled:AlwaysOnSampler,localParentNotSampled:AlwaysOffSampler}, spanProcessor=SimpleSpanProc essor{spanExporter=org.openqa.selenium.remote.tracing.opentelemetry.SeleniumSpanExporter$1@16267862}}} by autoconfiguration 07:10:05.614 INFO [UnboundZmqEventBus.] - Connecting to tcp://127.0.0.1:5442 and tcp://127.0.0.1:5443 07:10:05.700 INFO [UnboundZmqEventBus.] - Sockets created 07:10:06.704 INFO [UnboundZmqEventBus.] - Event bus ready 07:10:07.119 INFO [NodeServer.createHandlers] - Reporting self as: http://public_ip_of_ec2:5555 07:10:07.165 INFO [NodeOptions.getSessionFactories] - Detected 1 available processors 07:10:07.166 WARN [NodeOptions.getSessionFactories] - Overriding max recommended number of 1 concurrent sessions. Session  stability and reliability might suffer! 07:10:07.166 WARN [NodeOptions.getSessionFactories] - One browser session is recommended per available processor. Safari is always limited to 1 session per host. 07:10:07.167 WARN [NodeOptions.getSessionFactories] - Overriding this value for Internet Explorer is not recommended. Issues related to parallel testing with Internet Explored won't be accepted. 07:10:07.167 WARN [NodeOptions.getSessionFactories] - Double check if enabling 'override-max-sessions' is really needed 07:10:07.169 WARN [NodeOptions.getSessionFactories] - Max sessions set to 74  07:10:07.273 DEBUG [NodeOptions.getDriverMaxSessions] - Overriding max recommended number of 1 concurrent sessions for Chrome, setting it to 74 07:10:07.336 INFO [NodeOptions.report] - Adding ip-private-ip for {""browserName"": ""chrome"",""cluster:pcgeo"": ""geo"",""platformName"": ""LINUX""} 74 times 07:10:07.474 INFO [Node.] - Binding additional locator mechanisms: id, relative, name 07:10:07.609 DEBUG [MultithreadEventLoopGroup.] - -Dio.netty.eventLoopThreads: 2 07:10:07.660 DEBUG [InternalThreadLocalMap.] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 07:10:07.663 DEBUG [InternalThreadLocalMap.] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 07:10:07.734 DEBUG [PlatformDependent0.explicitNoUnsafeCause0] - -Dio.netty.noUnsafe: false 07:10:07.734 DEBUG [PlatformDependent0.javaVersion0] - Java version: 11 07:10:07.736 DEBUG [PlatformDependent0.] - sun.misc.Unsafe.theUnsafe: available 07:10:07.740 DEBUG [PlatformDependent0.] - sun.misc.Unsafe.copyMemory: available 07:10:07.741 DEBUG [PlatformDependent0.] - java.nio.Buffer.address: available 07:10:07.742 DEBUG [PlatformDependent0.] - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled 07:10:07.742 DEBUG [PlatformDependent0.] - java.nio.Bits.unaligned: available, true 07:10:07.743 DEBUG [PlatformDependent0.] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @c4ed84 07:10:07.744 DEBUG [PlatformDependent0.] - java.nio.DirectByteBuffer.(long, int): unavailable 07:10:07.745 DEBUG [PlatformDependent.unsafeUnavailabilityCause0] - sun.misc.Unsafe: available 07:10:07.749 DEBUG [PlatformDependent.maxDirectMemory0] - maxDirectMemory: 508887040 bytes (maybe) 07:10:07.757 DEBUG [PlatformDependent.tmpdir0] - -Dio.netty.tmpdir: /tmp (java.io.tmpdir) 07:10:07.757 DEBUG [PlatformDependent.bitMode0] - -Dio.netty.bitMode: 64 (sun.arch.data.model) 07:10:07.758 DEBUG [PlatformDependent.] - -Dio.netty.maxDirectMemory: -1 bytes 07:10:07.761 DEBUG [PlatformDependent.] - -Dio.netty.uninitializedArrayAllocationThreshold: -1 07:10:07.762 DEBUG [CleanerJava9.] - java.nio.ByteBuffer.cleaner(): available 07:10:07.764 DEBUG [PlatformDependent.] - -Dio.netty.noPreferDirect: false 07:10:07.766 DEBUG [NioEventLoop.] - -Dio.netty.noKeySetOptimization: false 07:10:07.770 DEBUG [NioEventLoop.] - -Dio.netty.selectorAutoRebuildThreshold: 512 07:10:07.780 DEBUG [PlatformDependent$Mpsc.] - org.jctools-core.MpscChunkedArrayQueue: available 07:10:07.835 DEBUG [DefaultChannelId.] - -Dio.netty.processId: 38260 (auto-detected) 07:10:07.839 DEBUG [NetUtil.] - -Djava.net.preferIPv4Stack: false 07:10:07.839 DEBUG [NetUtil.] - -Djava.net.preferIPv6Addresses: false 07:10:07.846 DEBUG [NetUtilInitializations.determineLoopback] - Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo) 07:10:07.847 DEBUG [NetUtil$1.run] - /proc/sys/net/core/somaxconn: 128 07:10:07.849 DEBUG [DefaultChannelId.] - -Dio.netty.machineId: 06:66:21:ff:fe:37:18:90 (auto-detected) 07:10:07.868 DEBUG [ResourceLeakDetector.] - -Dio.netty.leakDetection.level: simple 07:10:07.874 DEBUG [ResourceLeakDetector.] - -Dio.netty.leakDetection.targetRecords: 4 07:10:07.922 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.numHeapArenas: 2 07:10:07.922 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.numDirectArenas: 2 07:10:07.922 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.pageSize: 8192 07:10:07.923 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxOrder: 11 07:10:07.923 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.chunkSize: 16777216 07:10:07.923 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.smallCacheSize: 256 07:10:07.923 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.normalCacheSize: 64 07:10:07.924 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768 07:10:07.924 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.cacheTrimInterval: 8192 07:10:07.924 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0 07:10:07.925 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.useCacheForAllThreads: true 07:10:07.925 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 07:10:07.943 DEBUG [ByteBufUtil.] - -Dio.netty.allocator.type: pooled 07:10:07.944 DEBUG [ByteBufUtil.] - -Dio.netty.threadLocalDirectBufferSize: 0 07:10:07.944 DEBUG [ByteBufUtil.] - -Dio.netty.maxThreadLocalCharBufferSize: 16384 07:10:07.977 DEBUG [LoggingHandler.channelRegistered] - [id: 0x56c341a2] REGISTERED 07:10:07.979 DEBUG [LoggingHandler.bind] - [id: 0x56c341a2] BIND: /public_ip:57843 java.lang.reflect.InvocationTargetException         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.base/java.lang.reflect.Method.invoke(Method.java:566)         at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77)         at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: org.openqa.selenium.netty.server.ServerBindException: Could not bind to address or port is already in use. Host public_ip_of_ec2, Port 5555         at org.openqa.selenium.netty.server.NettyServer.start(NettyServer.java:169)         at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:191)         at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:188)         at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:230)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129)         at org.openqa.selenium.grid.Main.launch(Main.java:83)        at org.openqa.selenium.grid.Main.go(Main.java:57)         at org.openqa.selenium.grid.Main.main(Main.java:42)         ... 6 more Caused by: java.net.BindException: Cannot assign requested address         at java.base/sun.nio.ch.Net.bind0(Native Method)         at java.base/sun.nio.ch.Net.bind(Net.java:459)         at java.base/sun.nio.ch.Net.bind(Net.java:448)         at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227)         at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:134)         at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562)         at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1334)         at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:506)         at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:491)         at io.netty.handler.logging.LoggingHandler.bind(LoggingHandler.java:230)         at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:506)         at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:491)         at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:973)         at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:260)         at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:356)         at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469)         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503)         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)         at java.base/java.lang.Thread.run(Thread.java:829) 07:10:08.014 DEBUG [LoggingHandler.close] - [id: 0x56c341a2] CLOSE 07:10:08.016 DEBUG [LoggingHandler.channelUnregistered] - [id: 0x56c341a2] UNREGISTERED ```   ### Operating System  debian 11, debian 9  ### Selenium version  selenium version 4  ### What are the browser(s) and version(s) where you see this issue?  chrome browser and  version 99  ### What are the browser driver(s) and version(s) where you see this issue?  chromdriver 99  ### Are you using Selenium Grid?  yes","closed","","shettypriy","2022-04-26T10:30:32Z","2022-05-27T00:11:52Z"
"","10055","[🐛 Bug]: Trace selenium webDriver within Docker does not appear ?","### What happened?  We are using a Firefox-based selenium webDriver for testing purposes. Using a dockerized approach, we are also using a standalone Firefox selenium image _(see Docker-compose)_. We have a crash that refers to `Failed to decode response from marionette`, such issue has already been solved a lot in this repository issues section. However, we did not find a way to fix it and we would like to export the selenium webDriver trace to see if we can better understand what is going on or if we should create a new issue following logs, so we would appreciate any help you can provide. Following the snippet that follows, how can we track the log in the docker, as it does not display elsewhere at the moment:  ```python   firefox_profile = webdriver.FirefoxProfile(fp_path) #fp_path is not  relevant to be added here it is our firefox profile path  options = webdriver.FirefoxOptions()   options.browser_version = '92'  options.platform_name = 'Windows 10'  options.page_load_strategy = 'eager'  options.log.level = ""TRACE""   driver = webdriver.Remote(command_executor=""http://selenium:4444/wd/hub"",                            desired_capabilities=DesiredCapabilities.FIREFOX,                            browser_profile=firefox_profile,                            options=options) ```  So, here's our docker-compose file (Note: we use the shm_size as recommended a lot in many issues's threads):  ```shell version: ""3"" services:   selenium:     image: selenium/standalone-firefox:4.0.0-rc-3-20211010     ports:       - 4444:4444       - 7900:7900     mem_limit: 2500m     mem_reservation: 2500m     shm_size: 2gb    our_solution:     container_name: our_solution_container_name     build:       context: .     volumes:       - ./data:/app/data       - ./src:/app/src       - ./api:/app/api     command: sleep 5000     depends_on:       - selenium     ports:       - 8050:8050     shm_size: '4gb'     mem_limit: 2500m     mem_reservation: 2500m ```  ### How can we reproduce the issue?  ```shell Using:  - Docker version 20.10.8, build 3967b7d - selenium/standalone-firefox:4.0.0-rc-3-20211010 - Python 3.7  To run this snippet, create a docker-compose using the selenium standalone-firefox image (as seen above) as its first service and a simple Python solution as its second. Build and configure the docker-compose in order to run the python solution from a command line interpreter. There is no traceback file for any crashes or any actions that were outputted. ```   ### Relevant log output  ```shell //Trying to get some. ```   ### Operating System  MacOS Monterey  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 92  ### What are the browser driver(s) and version(s) where you see this issue?  Selenium WebDriver / Marionette ?  ### Are you using Selenium Grid?  _No response_","closed","I-question,","simonprovost","2021-11-18T16:50:16Z","2021-12-19T00:07:50Z"
"","10474","[🐛 Bug]: Grid HUb 4.1.2 becomes unresponsive","### What happened?  We are seeing the hub become unresponsive after what appears to be invalid request are seen in the log. We are not sure where the odd/bad requests are coming from but we are going with the assumption that is it some sort of security scanning on our end for now based on the fact that these request seem to always happen around the same time each night.  This has been an ongoing issue that we have been tracking here - most notably through issues 1434, 1469, and 9959  We have seen several different issues in the log:  java.lang.IllegalArgumentException: Invalid UUID string:          at java.base/java.util.UUID.fromString(UUID.java:215)         at org.openqa.selenium.events.zeromq.UnboundZmqEventBus$PollingRunnable.run(UnboundZmqEventBus.java:241)         at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)         at java.base/java.lang.Thread.run(Thread.java:829)   ### How can we reproduce the issue?  ```shell NA ```   ### Relevant log output  ```shell java.lang.IllegalArgumentException: Invalid UUID string:          at java.base/java.util.UUID.fromString(UUID.java:215)         at org.openqa.selenium.events.zeromq.UnboundZmqEventBus$PollingRunnable.run(UnboundZmqEventBus.java:241)         at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)         at java.base/java.lang.Thread.run(Thread.java:829 ```   ### Operating System  linux  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  NA  ### What are the browser driver(s) and version(s) where you see this issue?  NA  ### Are you using Selenium Grid?  4.1.2","closed","","kevnpayx","2022-03-24T13:25:53Z","2022-04-24T00:11:58Z"
"","10768","[🐛 Bug]: [Inconsistent] Error at node: No slot matched the requested capabilities","### What happened?  We are running on a Selenium4 grid hub-node configuration then we are getting this error and it's Inconsistent 'No slot matched the requested capabilities' not always this is happening, when we restart the hub-node then 3  or 4 tests works then 5th test case fails with this error at the node level and not sure what's causing this issue and even we are trying to analyze if this could be our remote 2016/2019 servers that are causing this issue.  Note: At this point of time we are trying to upgrade the selenium 4.2.2 version but other open issues here are causing much bigger issues. So for us, the stable version is 3.141.59 and IE Edge mode with the below code is working     ### How can we reproduce the issue?  ```shell any basic tests to find an element or enter a value with the below IE Edge mode: capability  Setup @BeforeMethod at : 			InternetExplorerOptions ieOptions = new InternetExplorerOptions(); 			Map ops = (Map)                          ieOptions.getCapability(""se:ieOptions""); 			ops.put(""ie.edgechromium"", true); 			ops.put(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe""); 			ieOptions.introduceFlakinessByIgnoringSecurityDomains(); 			ieOptions.ignoreZoomSettings(); 			ieOptions.enablePersistentHovering(); 			ieOptions.requireWindowFocus(); 			ieOptions.destructivelyEnsureCleanSession(); 			ieOptions.withAttachTimeout(Duration.ofSeconds(60)); 			ieOptions.setCapability(""implicit"", ""5000""); 			ieOptions.setCapability(""pageLoad"", ""60000""); 			capability.merge(ieOptions); 		driver = new RemoteWebDriver(new URL(http://XX.XXX.XXX.XX:4444), capability); 		driver.manage().timeouts().implicitlyWait(600L, TimeUnit.MILLISECONDS); 		driver.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS); 		session = ((RemoteWebDriver)driver).getSessionId(); ```   ### Relevant log output  ```shell Started InternetExplorerDriver server (32-bit) 4.0.0.0 Listening on port 50508 Only local connections are allowed 14:45:56.178 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""23685aaebf5b43562437ce329494a1cb"",""eventTime"": 1654893956178961663,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: internet explorer, platformName: windows, se:ieOptions: {browserAttachTimeout: 60000, enablePersistentHover: true, ie.edgechromium: true, ie.edgepath: C:\\Program Files (x86)\\Micr..., ie.ensureCleanSession: true, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, requireWindowFocus: true}}"",""session.request.downstreamdialect"": ""[W3C, OSS]""}}   14:45:56.194 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""1d2c0221d23af17f499f0f8cb7893353"",""eventTime"": 1654893955596893831,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:50508"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: java.util.concurrent.TimeoutException\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'XXXXXXXXXXXXX', ip: 'XX.XXX.XXX.XX', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException\nBuild info: version: '4.1.4', revision: '535d840ee2'\nSystem info: host: 'XXXXXXXXXXXXX', ip: 'XX.XXX.XXX.XX', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:65)\r\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\r\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\r\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49)\r\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\r\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\r\n\tat org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:97)\r\n\tat org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)\r\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)\r\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)\r\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)\r\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:141)\r\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:67)\r\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:145)\r\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:349)\r\n\tat org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52)\r\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)\r\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\r\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\r\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.util.concurrent.TimeoutException\r\n\tat java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1784)\r\n\tat java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928)\r\n\tat org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206)\r\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59)\r\n\t... 36 more\r\n"",""exception.type"": ""org.openqa.selenium.TimeoutException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""se:ieOptions\"": {\""ie.edgechromium\"": true,\""ie.ensureCleanSession\"": true,\""browserAttachTimeout\"": 60000,\""enablePersistentHover\"": true,\""requireWindowFocus\"": true,\""ie.edgepath\"": \""C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\"",\""ignoreZoomSetting\"": true,\""ignoreProtectedModeSettings\"": true},\""browserName\"": \""internet explorer\"",\""platformName\"": \""ANY\""}\n""}} ```   ### Operating System  Microsoft Windows Server 2019/2016 Datacenter  ### Selenium version  Java 1.8 JDK  ### What are the browser(s) and version(s) where you see this issue?  IE Edge Mode  ### What are the browser driver(s) and version(s) where you see this issue?  IE Driver 4.0.0 and Selenium 3141.59  ### Are you using Selenium Grid?  4.1.4","closed","I-defect,","manu141","2022-06-13T20:11:36Z","2022-07-17T00:12:22Z"
"","10909","[🐛 Bug]: Selenium grid 4 getting TargetInvocationException caused by selenium.grid.config.configException","### What happened?  We are recently migrating from selenium grid 3 to grid 4.  In the grid configuration command line file, trying to pass driver configurations using --driver-configurations   (""java exe ""  -jar ""selenium jar ""  node --override-max-session true --hub ""hub address""  --port ""port"" --session-timeouts 300 --host ""node name"" --driver-configuration display-name=""Edge"" max-sessions=2 webdriver-path=""path of driver"" stereotype='{""browserName"": ""edge"", ""browserVersion"": ""102"", ""maxInstances"" : ""5""}'  --driver-configuration display-name=""chrome"" max-sessions=2 webdriver-path=""path of driver"" stereotype='{""browserName"": ""chrome"", ""browserVersion"": ""102"", ""maxInstances"" : ""3""}'   when execute from command line, getting **InvocationTargetException** caused by  org.openqa.selenium.grid.config.ConfigException : **One or more driver configs does not have the required 'key=value' structure.**  Is the way I gave the driver-configuration is correct ? I have same for firefox and ie as well. If I remove the driver-configuration, node is getting added to grid.  Appreciate the help.     ### How can we reproduce the issue?  ```shell (""java exe "" -jar ""selenium jar "" node --override-max-session true --hub ""hub address"" --port ""port"" --session-timeouts 300 --host ""node name"" --driver-configuration display-name=""Edge"" max-sessions=2 webdriver-path=""path of driver"" stereotype='{""browserName"": ""edge"", ""browserVersion"": ""102"", ""maxInstances"" : ""5""}' --driver-configuration display-name=""chrome"" max-sessions=2 webdriver-path=""path of driver"" stereotype='{""browserName"": ""chrome"", ""browserVersion"": ""102"", ""maxInstances"" : ""3""}' ```   ### Relevant log output  ```shell attached the screenshot ```   ### Operating System  Win 10  ### Selenium version  Selenium 4  ### What are the browser(s) and version(s) where you see this issue?  chrome 102, edge 102  ### What are the browser driver(s) and version(s) where you see this issue?  chromedrive 102 , edge drive 102  ### Are you using Selenium Grid?  4.1.3","closed","needs-triaging,","remyanekkuth","2022-07-27T18:07:39Z","2022-08-01T14:00:18Z"
"","10440","We are facing some network issue while running selenium scripts in gitlab. Any support on this will be helpful .","### What happened?  We are facing the page navigating to homepage when after some button is clicked instead of navigating to the destination Page. This issue appears only in gitlab when the script is executed and its not reproducible.(As its not displaying any error)  Tried to capture the network logs of the browser where we can see some network _ABORTED due to script type.   ### How can we reproduce the issue?  ```shell The issue appears only when selenium scripts are executed in Gitlab. This issue is not reproducible ```   ### Relevant log output  ```shell Due to the above issue script are failing in gitlab ```   ### Operating System  Mac OS  ### Selenium version  java  ### What are the browser(s) and version(s) where you see this issue?  chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 98  ### Are you using Selenium Grid?  No","closed","I-question,","Sreelogo","2022-03-14T12:17:06Z","2022-04-14T00:11:38Z"
"","10447","[🐛 Bug]: Message: unknown error: bad inspector message","### What happened?  We are automating test execution of Oracle web based application. Our scripts ran successfully until last week 06-Mar-22. Script is getting failed from 07-Mar-22 displaying error message ""Bad Inspector Message"". Facing issue in some pages.  When we researched on Bad Inspector Message error on google, they have mentioned as “when Selenium can't parse the HTML or text of the elements because the elements are invalid unicode characters”. We have enquired and came to know that other companies who automate the same application are also facing this issue.  We need selenium team help to resolve this issue as it working fine in tools like UFT.  Chrome Browser version:  99.0.4844.51 Chrome Driver version : 4.0.0-alpha-6  Note: we are logging new issue as old ticket #7359 has been closed. We never faced this issue in same oracle web application for the past 1.5 years.  Error looks like:  unknown error: bad inspector message: {""id"":521,""result"":{""root"":{""nodeId"":2696,""backendNodeId"":2469,""nodeType"":9,""nodeName"":""#document"",""localName"":"""",""nodeValue"":"""",""childNodeCount"":2,""children"":  ### How can we reproduce the issue?  ```shell Even a normal click through selenium is not working for a few pages in the oracle web application and is working for other pages. ```   ### Relevant log output  ```shell unknown error: bad inspector message: {""id"":521,""result"":{""root"":{""nodeId"":2696,""backendNodeId"":2469,""nodeType"":9,""nodeName"":""#document"",""localName"":"""",""nodeValue"":"""",""childNodeCount"":2,""children"": ```   ### Operating System  Windows Server 2016  ### Selenium version  JDK 17.0.1  ### What are the browser(s) and version(s) where you see this issue?   Chrome Browser version:  99.0.4844.51  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver version : 4.0.0-alpha-6  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","uitestteam","2022-03-15T11:54:20Z","2022-06-17T00:11:28Z"
"","10375","[🐛 Bug]: Nuget package doesn't contain inline documentation (xml file)","### What happened?  Visual Studio doesn't highlight members inline documentation.  ### How can we reproduce the issue?  ```shell Use `Selenium.WebDriver` nuget package. ```   ### Relevant log output  ```shell any ```   ### Operating System  any  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  any  ### What are the browser driver(s) and version(s) where you see this issue?  any  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","nvborisenko","2022-02-18T22:16:33Z","2022-03-21T00:09:56Z"
"","10332","Low concurrency[🐛 Bug]:","### What happened?  V4 grid node utilization is very low compared to V3. In V3 if you had 100 grid nodes ready and registered to the hub and then ran 100 tests in parallel, all 100 grid nodes was immediately put to work but in V4 you can do the same and see only about 12 nodes being utilized. 88 nodes never got tests routed to them. Note: that the queue in this scenario is 0.  Setting a higher ""--max-threads"" value has no effect and actually we cannot see this parameter being used in the selenium code at all?  ### How can we reproduce the issue?  ```shell We see this consistently with V4.1.2 using java openjdk 11 and latest TestNG. We ruled out TestNG as the issue and verified that when requesting 100 tests in parallel on an empty grid, the queue immediately went to 100.  The grid is started as distributed, hub and nodes on separate AWS VM's. ```   ### Relevant log output  ```shell Full logs of this event are very large, will try to attach in comments... ```   ### Operating System  Ubuntu 20.04  ### Selenium version  Selenium v4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  96.0.4664.45  ### Are you using Selenium Grid?  4.1.2","open","I-defect,","csgbn","2022-02-05T19:27:09Z","2022-06-27T15:06:39Z"
"","9971","[🐛 Bug]: selenium-webdriver gem warns about deprecation but does not match docs","### What happened?  Using the latest Ruby selenium-webdriver gem (4.0.3), the `Selenium::WebDriver.for` method is documented to take `desired_capabilities:` -- see the third example in https://www.selenium.dev/selenium/docs/api/rb/Selenium/WebDriver.html#for-class_method  However, attempting to use this triggers a deprecation warning.  ### How can we reproduce the issue?  ```shell require ""selenium-webdriver"" Selenium::WebDriver.for :remote,  desired_capabilities: {} ```   ### Relevant log output  ```shell 2021-10-22 02:42:57 WARN Selenium [DEPRECATION] [:desired_capabilities] :desired_capabilities as a parameter for driver initialization is deprecated. Use :capabilities with an Array value of capabilities/options if necessary instead. ```   ### Operating System  Ubuntu 20.04.2 LTS  ### Selenium version  4.0.3  ### What are the browser(s) and version(s) where you see this issue?  remote  ### What are the browser driver(s) and version(s) where you see this issue?  remote  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","DreadPirateShawn","2021-10-22T02:50:02Z","2021-11-25T00:06:39Z"
"","10854","[🐛 Bug]: 'Error: NS_BINDING_ABORTED (SessionNotCreated)'","### What happened?  using the latest firefox browser  with the code below it throws this exception error >> System.InvalidOperationException: 'Error: NS_BINDING_ABORTED (SessionNotCreated)'   >>https://prnt.sc/cT6m9hCWNk2c  ### How can we reproduce the issue?  ```shell FirefoxDriver driver = null;              var driverService = FirefoxDriverService.CreateDefaultService();                           FirefoxOptions FirefoxOptions = new FirefoxOptions();              FirefoxOptions.AddArgument(""start-maximized"");             driverService.HideCommandPromptWindow = true;              driver = new FirefoxDriver(driverService, FirefoxOptions, TimeSpan.FromSeconds(220));             driver.ExecuteScript(""Object.defineProperty(navigator, 'webdriver', {get: () => undefined})""); ```   ### Relevant log output  ```shell FirefoxDriver driver = null;              var driverService = FirefoxDriverService.CreateDefaultService();                           FirefoxOptions FirefoxOptions = new FirefoxOptions();              FirefoxOptions.AddArgument(""start-maximized"");             driverService.HideCommandPromptWindow = true;              driver = new FirefoxDriver(driverService, FirefoxOptions, TimeSpan.FromSeconds(220));             driver.ExecuteScript(""Object.defineProperty(navigator, 'webdriver', {get: () => undefined})""); ```   ### Operating System  windows 10  ### Selenium version  4.3  ### What are the browser(s) and version(s) where you see this issue?  firefofox  ### What are the browser driver(s) and version(s) where you see this issue?  firefofox  ### Are you using Selenium Grid?  no","closed","I-defect,","vitalisc","2022-07-07T13:26:44Z","2022-07-07T13:29:19Z"
"","10619","[🐛 Bug]: ""Error: Invalid URL: http:/"" with Node.js v18","### What happened?  Using selenium-webdriver with Node.js v18 is not possible, as an error is thrown.  ``` Error: Invalid URL: http:/     at getRequestOptions (/Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/index.js:51:11) ```  To reproduce, install Node.js v18 or higher (e.g. via `nvm install node`).  Given the following `package.json`:  ```json {   ""dependencies"": {     ""selenium-webdriver"": ""^4.1.2""   } } ```  Run the sample code in `index.js` with `node index.js`:  ```javascript const { Builder, By, Key, until } = require(""selenium-webdriver""); (async function example() {   let driver = await new Builder().forBrowser(""chrome"").build();   try {     await driver.get(""http://www.google.com/ncr"");     await driver.findElement(By.name(""q"")).sendKeys(""webdriver"", Key.RETURN);     await driver.wait(until.titleIs(""webdriver - Google Search""), 1000);   } finally {     await driver.quit();   } })(); ```  With Node.js v18, I get:  ``` ➜ node index.js   /Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/index.js:51     throw new Error('Invalid URL: ' + aUrl)           ^  Error: Invalid URL: http:/     at getRequestOptions (/Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/index.js:51:11)     at new HttpClient (/Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/index.js:90:21)     at getStatus (/Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/util.js:38:18)     at checkServerStatus (/Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/util.js:76:14)     at /Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/util.js:74:5     at new Promise ()     at Object.waitForServer (/Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/http/util.js:57:10)     at /Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/remote/index.js:251:24     at new Promise ()     at /Users/werner/Desktop/selenium-node-test/node_modules/selenium-webdriver/remote/index.js:246:20  Node.js v18.1.0 ```  With Node.js v16 (the current LTS release), it works fine. It should be noted though that with v18, the variables for the `.format` call are:  ``` serverUrl: http:/, hostname: undefined, port: 52511, self.path_: / ```  Whereas for v16, the variables are:  ``` serverUrl: http://127.0.0.1:52535/, hostname: 127.0.0.1, port: 52535, self.path_: / ```  Notably, the hostname is undefined in Node.js v18. This leads me to the function `os.networkInterfaces()` whose output is different in v18 compared to v16.  Here is v16:  ``` > os.networkInterfaces() {   lo0: [     {       address: '127.0.0.1',       netmask: '255.0.0.0',       family: 'IPv4',       mac: '00:00:00:00:00:00',       internal: true,       cidr: '127.0.0.1/8'     }    ... ```  And here is v18:  ``` > os.networkInterfaces() {   lo0: [     {       address: '127.0.0.1',       netmask: '255.0.0.0',       family: 4,       mac: '00:00:00:00:00:00',       internal: true,       cidr: '127.0.0.1/8'     },     ... ```  See that the `family` property now reads `4` and not `IPv4`.  ### How can we reproduce the issue?  ```shell Shown above. ```   ### Relevant log output  ```shell Log already shown in reproducible example above. ```   ### Operating System  Any  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Irrelevant  ### What are the browser driver(s) and version(s) where you see this issue?  Irrelevant  ### Are you using Selenium Grid?  No","closed","needs-triaging,","slhck","2022-05-08T11:52:56Z","2022-06-27T00:12:16Z"
"","9968","[🐛 Bug]: Method register() in HasAuthentication interface not working as expected on Linux/Chrome","### What happened?  Using register() method from HasAuthentication interface in Java 16 not working as expected on Chrome on Linux. Everything looks fine on Chrome for Windows.  It seems that if you passing credentials like:  ((HasAuthentication) driver).register(UsernameAndPassword.of(""username123"", ""password123""));  it will always pass the same (the first one) parameter for username and password, so in my example username will be set to ""username123"" and password will be set to ""username123"" as well.  ### How can we reproduce the issue?  Execute register() method on any web application that requires authentication through authentication pop-up. ```shell ((HasAuthentication) driver).register(UsernameAndPassword.of(""username123"", ""password123""));  ```  In a case where username and password are the same, everything will work fine.   ### Relevant log output   Currently unable to log this problem on relevant environment (Chrome in Linux Docker image)    ### Operating System  Linux/amd64 under Docker image (markhobson/maven-chrome:jdk-16)  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 93  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 93.0.4577.63  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","koko89kt","2021-10-21T14:58:07Z","2022-01-01T00:07:28Z"
"","10897","[🐛 Bug]:","### What happened?  Using node js. I've created some test automation using the page model architecture. They work fine on my laptop but my colleague gets this error below when they try to run it.   Would appreciate any idea on how to go about debugging the issue ```ts async function loginFromHomePage(page: BasePage) {   const { password, phoneNumber } = LoginConfig.loginDetails;   try {     await page.get(`${page.baseUrl}/login`);     await page.driver.executeScript(""localStorage.clear()"")     await page.driver.navigate().refresh()     await skipCookiesDialogue(page)     // it throws an error at this point     const loginByCellButton = await page.driver.wait(       until.elementLocated(By.id(""loginWithCellButton"")),       10000     ); // wait for a maximum of 10 seconds for the login button to appear        await page.driver.wait(until.elementIsEnabled(loginByCellButton), 10000); // wait for a maximum of 10 seconds for the login button to be enabled);       await loginByCellButton.click();      // find the phone number and password input then send keys     const inputs = await page.findAll(       ""input.MuiInputBase-input.MuiFilledInput-input"",       80000     );     await Promise.all([       inputs[0].sendKeys(phoneNumber),       inputs[1].sendKeys(password),     ]);      // find the login button and click it     const loginButton = await page.driver.findElement(By.name(""button""));     await loginButton.click();      // if we can find the play button, we are logged in     const playButton = await page.find(""#firstTimeDialogPlayButton"", 20000);     await page.driver.wait(until.elementIsVisible(playButton), 5000);     await playButton.click();    } catch (error) {     throw new Error(""There was an error logging in from homepage"");   } } ```  ### How can we reproduce the issue?  ```shell export default async function skipCookiesDialogue(page: BasePage ) {   const el = await page.find(`.cookieDialogue`, 5000); //uses a maximum of 5sec to find the element   const dialogue = await page.driver.wait(until.elementIsVisible(el))    const el2 = dialogue.findElement(By.css("".acceptBtn""))   const acceptButton = await page.driver.wait(until.elementIsEnabled(el2))    await acceptButton.click()    await page.driver.sleep(250) //wait for half a second for modal to close }  async function loginFromHomePage(page: BasePage) {   const { password, phoneNumber } = LoginConfig.loginDetails;   try {     await page.get(`${page.baseUrl}/login`);     await page.driver.executeScript(""localStorage.clear()"")     await page.driver.navigate().refresh()     await skipCookiesDialogue(page)     // it throws an error at this point     const loginByCellButton = await page.driver.wait(       until.elementLocated(By.id(""loginWithCellButton"")),       10000     ); // wait for a maximum of 10 seconds for the login button to appear        await page.driver.wait(until.elementIsEnabled(loginByCellButton), 10000); // wait for a maximum of 10 seconds for the login button to be enabled);       await loginByCellButton.click();      // find the phone number and password input then send keys     const inputs = await page.findAll(       ""input.MuiInputBase-input.MuiFilledInput-input"",       80000     );     await Promise.all([       inputs[0].sendKeys(phoneNumber),       inputs[1].sendKeys(password),     ]);      // find the login button and click it     const loginButton = await page.driver.findElement(By.name(""button""));     await loginButton.click();      // if we can find the play button, we are logged in     const playButton = await page.find(""#firstTimeDialogPlayButton"", 20000);     await page.driver.wait(until.elementIsVisible(playButton), 5000);     await playButton.click();    } catch (error) {     throw new Error(""There was an error logging in from homepage"");   } ```   ### Relevant log output  ```shell DevTools listening on ws://127.0.0.1:56896/devtools/browser/2c60a25e-2447-4323-b022-ab8aaea0bebe     1) ""before all"" hook for ""Should display Menu button""     0 passing (20s)   1 failing    1) Side bar test        ""before all"" hook for ""Should display Menu button"":      WebDriverError: unknown error: unexpected command response   (Session info: chrome=103.0.5060.134)       at Object.throwDecodedError (node_modules\selenium-webdriver\lib\error.js:522:15)       at parseHttpResponse (node_modules\selenium-webdriver\lib\http.js:589:13)       at Executor.execute (node_modules\selenium-webdriver\lib\http.js:514:28)       at processTicksAndRejections (node:internal/process/task_queues:96:5)       at thenableWebDriverProxy.execute (node_modules\selenium-webdriver\lib\webdriver.js:740:17)       at thenableWebDriverProxy.findElements (node_modules\selenium-webdriver\lib\webdriver.js:1066:17) ```   ### Operating System  windows 10  ### Selenium version  4.3.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 103.0.5060.134  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","uwemneku","2022-07-21T14:29:13Z","2022-07-22T12:50:32Z"
"","10821","[🐛 Bug]: useShellWindowsApiToAttachToIe will be blocking on initial page in Edge IE Mode","### What happened?  useShellWindowsApiToAttachToIe will be blocking on initial page in Edge IE Mode.  The page will be stopping at below initial url ![image](https://user-images.githubusercontent.com/3264250/176080467-965d3ae3-2bf1-4574-b30b-d36b456c05c5.png)  Just directly call the option in code as below `ieOptions.useShellWindowsApiToAttachToIe()`  As IE had been decommission by Microsoft, if this option is a legacy and won't work well any more, it should be removed, right?  Otherwise, any missed configuration to make the browser blocking to throw the SessionNotCreatedException?  ### How can we reproduce the issue?  ```shell @Test   public void withEdgeExecutablePathEnabledTest() {     ieOptions = new InternetExplorerOptions();     ieOptions.attachToEdgeChrome(); // Browser will be blocking on Initial Start Page      ieOptions.useShellWindowsApiToAttachToIe();     ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");     driver = new InternetExplorerDriver(ieOptions);     driver.get(""https://www.bing.com"");   } ```   ### Relevant log output  ```shell 10:34:13,173 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 10:34:13,173 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 10:34:13,174 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/D:/code/Selenium4InAction/06-expansion/target/classes/logback.xml] 10:34:13,174 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath. 10:34:13,174 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/D:/code/Selenium4InAction/06-expansion/target/classes/logback.xml] 10:34:13,174 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/D:/code/Selenium4InAction/00-common/target/classes/logback.xml] 10:34:13,224 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set 10:34:13,224 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 10:34:13,229 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT] 10:34:13,232 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.github.bonigarcia] to DEBUG 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io] to WARN 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org] to WARN 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [com] to WARN 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.javalin] to OFF 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 10:34:13,320 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT] 10:34:13,320 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 10:34:13,321 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@1cf6d1be - Registering current configuration as safe fallback point  2022-06-28 10:34:13 [main] DEBUG i.g.bonigarcia.wdm.WebDriverManager.resolveDriverVersion(1224) - The driver version for IEXPLORER is unknown ... trying with latest 2022-06-28 10:34:13 [main] INFO  i.g.bonigarcia.wdm.WebDriverManager.logSeekRepo(1534) - Reading https://api.github.com/repos/SeleniumHQ/selenium/releases to seek IEDriverServer 2022-06-28 10:34:16 [main] DEBUG i.g.bonigarcia.wdm.WebDriverManager.createUrlHandler(1426) - Driver to be downloaded IEDriverServer 4.2.0 2022-06-28 10:34:16 [main] INFO  i.g.bonigarcia.wdm.WebDriverManager.exportDriver(1252) - Exporting webdriver.ie.driver as C:\Users\Ian\.cache\selenium\IEDriverServer\win64\4.2.0\IEDriverServer.exe Started InternetExplorerDriver server (64-bit) 4.2.0.0 Listening on port 57992 Only local connections are allowed  org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.3.0', revision: 'a4995e2c09*' System info: host: 'IAN', ip: '192.168.31.112', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Command: [null, newSession {capabilities=[Capabilities {browserName: internet explorer, se:ieOptions: {ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr..., ie.forceShellWindowsApi: true}}], desiredCapabilities=Capabilities {browserName: internet explorer, ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr..., ie.forceShellWindowsApi: true, se:ieOptions: {ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr..., ie.forceShellWindowsApi: true}}}] Capabilities {}  	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:587) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:264) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:184) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:171) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:148) 	at cn.ianzhang.selenium.BrowserInternetExplorerOptionsTest.withEdgeExecutablePathEnabledTest(BrowserInternetExplorerOptionsTest.java:51) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) 	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) 	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) 	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86) 	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86) 	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53) 	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) 	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) Caused by: java.lang.RuntimeException: NettyHttpHandler request execution error 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:76) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:98) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:120) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569) 	... 74 more Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:57992 after 180000 ms 	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396) 	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59) 	... 87 more Caused by: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:57992 after 180000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) 	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:833) ```   ### Operating System  Windows 11  ### Selenium version  Java 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 103.0.1264.37  ### What are the browser driver(s) and version(s) where you see this issue?  InternetExplorerDriver 4.2.0.0  ### Are you using Selenium Grid?  No","closed","G-msedgedriver,","alaahong","2022-06-28T02:43:51Z","2022-07-29T00:12:20Z"
"","9985","[🐛 Bug]: use Selenium C# get the chrome-version:81.0.4044.138 x64 Session Storage，Exception:Driver doest not support manipulating HTML5 web storage. Use the HasWebStrorage property to test the driver capability","### What happened?  use Selenium C# get the chrome-version:81.0.4044.138 x64 Session Storage，Exception:Driver doest not support manipulating HTML5 web storage. Use the HasWebStrorage property to test the driver capability ` RemoteWebDriver remote=(RemoteWebDriver )selenium;  string vuex=remote.WebStorage.SessionStorage.getItem(""vuex""); //the code can use Other Chrome Version:Ex 62 75 `  ### How can we reproduce the issue?  ```shell IwebDriver selenium=new ChromeDriver(dservice,options); selenium.Navigate().GoToUrl(""https://download.csdn.net/"")  RemoteWebDriver remote=(RemoteWebDriver )selenium;  string vuex=remote.WebStorage.SessionStorage.getItem(""Hm_lpvt_6bcd52f51e9b3dce32bec4a3997715ac""); ```   ### Relevant log output  ```shell Exception:Driver doest not support manipulating HTML5 web storage. Use the HasWebStrorage property to test the driver capability ```   ### Operating System  windows 7  ### Selenium version  C# 3.141.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 81.0.4044.138 x64   ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 81.0.4044.138/    ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","312855935","2021-10-26T05:45:09Z","2021-12-03T00:06:56Z"
"","10448","[🐛 Bug]: Setting chrome to w3c: false in Selenium 4 causes errors","### What happened?  Upon upgrading from selenium 3.142 to 4.1, the driver started throwing a `Selenium::WebDriver::Error::ScriptTimeoutError` when attempting to reset between tests via `driver.reset!`    ### How can we reproduce the issue?  ```shell No specific details to reproduce. I can provide our configuration though that might be able to help replicate the problem.   # Driver setup Capybara.register_driver :selenium_chrome_headless do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     acceptInsecureCerts: true,     'goog:chromeOptions': {       args: %W[         headless         proxy-server=#{ENV['CI'] ? 'localhost' : ENV.fetch('NGINX_IP')}:#{Billy.proxy.port}         window-size=1440,900       ],       prefs: {         download: {           default_directory: DownloadSpecHelpers::CHROME_PATH         }       },       w3c: false     },     'goog:loggingPrefs': {       browser: 'ALL'     }   )    options = {     browser: ENV['CI'] ? :chrome : :remote,     capabilities: capabilities,     url: 'http://localhost:4445/wd/hub'   }    Capybara::Selenium::Driver.new(app, options).tap do |d|     unless ENV['CI']       d.browser.file_detector = lambda do |args|         str = args.first.to_s         str if File.exist?(str)       end     end   end end ```   ### Relevant log output  ```shell Example Failure: (byebug) Capybara.current_session.driver.reset! *** Selenium::WebDriver::Error::ScriptTimeoutError Exception: Unable to execute request for an existing session: POST /session/9c2e8f72783418513a46e4354f9fd08f/goog/cdp/execute Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'c202f6697df7', ip: '172.18.0.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.47-linuxkit', java.version: '11.0.11' Driver info: driver.version: unknown   Deeper Stacktrace triggered in rspec run:      1.1) Failure/Error: Capybara.reset! unless example.exception (rails_helper.rb:89)            Selenium::WebDriver::Error::ScriptTimeoutError:             Unable to execute request for an existing session: POST /session/71459489cd31d6928048675764dc467b/goog/cdp/execute             Build info: version: '4.1.0', revision: '87802e897b'             System info: host: 'c202f6697df7', ip: '172.18.0.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.47-linuxkit', java.version: '11.0.11'             Driver info: driver.version: unknown           # java.lang.RuntimeException: Unable to execute request for an existing session: POST /session/71459489cd31d6928048675764dc467b/goog/cdp/execute           # Build info: version: '4.1.0', revision: '87802e897b'           # System info: host: 'c202f6697df7', ip: '172.18.0.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.47-linuxkit', java.version: '11.0.11'           # Driver info: driver.version: unknown           # 	at org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:139)           # 	at org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)           # 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68)           # 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)           # 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68)           # 	at org.openqa.selenium.grid.router.Router.execute(Router.java:91)           # 	at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)           # 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)           # 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)           # 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68)           # 	at org.openqa.selenium.remote.http.Route$NestedRoute.handle(Route.java:270)           # 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68)           # 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)           # 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68)           # 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)           # 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68)           # 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)           # 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)           # 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)           # 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)           # 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)           # 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)           # 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)           # 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)           # 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)           # 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)           # 	at java.base/java.lang.Thread.run(Thread.java:829)           # ./spec/rails_helper.rb:200:in `block (2 levels) in ' ```  #### Relevant Selenium Logger Output: ```shell 2022-03-16 09:49:28 INFO Selenium -> POST session/bb0994cc75b38f0e33f96c2620f47680/url 2022-03-16 09:49:28 INFO Selenium    >>> http://localhost:4445/wd/hub/session/bb0994cc75b38f0e33f96c2620f47680/url | {""url"":""about:blank""} 2022-03-16 09:49:28 INFO Selenium  POST session/bb0994cc75b38f0e33f96c2620f47680/elements 2022-03-16 09:49:28 INFO Selenium    >>> http://localhost:4445/wd/hub/session/bb0994cc75b38f0e33f96c2620f47680/elements | {""using"":""xpath"",""value"":""/html/body/*""} 2022-03-16 09:49:28 INFO Selenium  POST session/bb0994cc75b38f0e33f96c2620f47680/goog/cdp/execute 2022-03-16 09:49:28 INFO Selenium    >>> http://localhost:4445/wd/hub/session/bb0994cc75b38f0e33f96c2620f47680/goog/cdp/execute | {""cmd"":""Storage.clearDataForOrigin"",""params"":{""origin"":""*"",""storageTypes"":""cookies,local_storage""}} 2022-03-16 09:49:28 INFO Selenium","open","help wanted,","marcoadkins","2022-03-15T21:07:04Z","2022-07-20T18:14:35Z"
"","10324","[🐛 Bug]: Regression in selenium 4.1.2 with NoSuchMethodError on ImmutableMap.of","### What happened?  Upon updating from Selenium 4.1.1 to 4.1.2 I got this stacktrace with  ``` java.lang.NoSuchMethodError: 'com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)' 	at org.openqa.selenium.chrome.AddHasCasting.getAdditionalCommands(AddHasCasting.java:38) ```  Reverting back to 4.1.1 fixes the issue.  `ImmutableMap.of()` can only take 5 arguments, here it asks for 10.  _(**EDIT**: `of` can take 10 args, but AddHasCasting.java ask for 12)_  Someone else also noticed the same thing, see https://stackoverflow.com/a/70969932/13365 (last part)  ### How can we reproduce the issue?  ```shell This is a huge project, so I haven't got a snippet yet. ```   ### Relevant log output  ```shell Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [no.example.config.ModuleTestConfig$$EnhancerBySpringCGLIB$$9a335649]: Constructor threw exception; nested exception is java.lang.NoSuchMethodError: 'com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)' 	at app//org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224) 	at app//org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) 	at app//org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) 	... 101 more Caused by: java.lang.NoSuchMethodError: 'com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)' 	at org.openqa.selenium.chrome.AddHasCasting.getAdditionalCommands(AddHasCasting.java:38) 	at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.getExtraCommands(ChromeDriver.java:123) 	at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.(ChromeDriver.java:118) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:106) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:93) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:82) 	at no.example.webdriver.WebDriverSelector.createChromeDriver(WebDriverSelector.kt:137) 	at no.example.webdriver.WebDriverSelector.createWebDriverFor(WebDriverSelector.kt:142) 	at no.example.webdriver.WebDriverSelector.getDriver(WebDriverSelector.kt:95) 	at no.example.config.LmsModuleTestConfig.(ModuleTestConfig.java:26) 	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) 	... 103 more ```   ### Operating System  macOS 12.1, Ubuntu 20.04  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  ChromeDriver 83.0.4103.14  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 83.0.4103.14  ### Are you using Selenium Grid?  No","closed","","henrik242","2022-02-04T15:07:30Z","2022-03-10T00:09:29Z"
"","10140","[🐛 Bug]: accessibility_id appium locator returns ""InvalidArgumentException: Message: Unable to determine element locating strategy for accessibility id""","### What happened?  Upgrade from Grid 3 to Grid 4 does not support accessibility_id appium locator. Setup - **does not work**: Selenium Grid 4.1.0 Appium 1.22.1  If appium tries to identify acessibility_id it returns error `InvalidArgumentException: Message: Unable to determine element locating strategy for accessibility id`  This issue appears after upgrade from Selenium-Grid-v3.141.59 to Selenium Grid 4.1.0.  Code example ``` On Page     Landscape     AppiumLibrary.Wait Until Element Is Visible  accessibility_id=login_title  ### How can we reproduce the issue?  ``` 1. Use Appium 1.22.1 with Selenium Grid 4.1.0 2. Have a iOS app with locator accessibility_id for an element 3. Run automated test that uses accessibility_id locator for the element. ```   ### Relevant log output  ```shell Start / End / Elapsed:	20211213 14:27:37.453 / 20211213 14:27:37.909 / 00:00:00.456 14:27:37.453	DEBUG	POST http://192.168.65.2:4444/wd/hub/session/341fbc49-861e-4a13-8b39-5f65dc3a1998/elements {""using"": ""accessibility id"", ""value"": ""login_title""}	 14:27:37.463	DEBUG	http://192.168.65.2:4444 ""POST /wd/hub/session/341fbc49-861e-4a13-8b39-5f65dc3a1998/elements HTTP/1.1"" 400 159	 14:27:37.464	DEBUG	Finished Request	 00:00:00.441KEYWORD AppiumLibrary . Capture Page Screenshot 14:27:37.908	FAIL	InvalidArgumentException: Message: Unable to determine element locating strategy for accessibility id 14:27:37.908	DEBUG	Traceback (most recent call last):   File ""/usr/local/lib/python3.7/dist-packages/decorator.py"", line 232, in fun     return caller(func, *(extras + args), **kw)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/keywordgroup.py"", line 21, in _run_on_failure_decorator     raise err   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/keywordgroup.py"", line 16, in _run_on_failure_decorator     return method(*args, **kwargs)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/_waiting.py"", line 28, in wait_until_element_is_visible     self._wait_until_no_error(timeout, check_visibility)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/_waiting.py"", line 128, in _wait_until_no_error     timeout_error = wait_func(*args)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/_waiting.py"", line 21, in check_visibility     visible = self._is_visible(locator)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/_element.py"", line 624, in _is_visible     element = self._element_find(locator, True, False)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/keywords/_element.py"", line 574, in _element_find     elements = self._element_finder.find(application, _locator, tag)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/locators/elementfinder.py"", line 36, in find     return strategy(browser, criteria, tag, constraints)   File ""/usr/local/lib/python3.7/dist-packages/AppiumLibrary/locators/elementfinder.py"", line 95, in _find_element_by_accessibility_id     elements = browser.find_elements_by_accessibility_id(criteria)   File ""/usr/local/lib/python3.7/dist-packages/appium/webdriver/extensions/search_context/mobile.py"", line 63, in find_elements_by_accessibility_id     return self.find_elements(by=MobileBy.ACCESSIBILITY_ID, value=accessibility_id)   File ""/usr/local/lib/python3.7/dist-packages/appium/webdriver/webdriver.py"", line 444, in find_elements     return self.execute(RemoteCommand.FIND_ELEMENTS, {'using': by, 'value': value})['value'] or []   File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.7/dist-packages/appium/webdriver/errorhandler.py"", line 31, in check_response     raise wde   File ""/usr/local/lib/python3.7/dist-packages/appium/webdriver/errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) ```   ### Operating System  macOs bigsur  ### Selenium version  openjdk 13.0.1 2019-10-15 OpenJDK Runtime Environment (build 13.0.1+9) OpenJDK 64-Bit Server VM (build 13.0.1+9, mixed mode, sharing)  ### What are the browser(s) and version(s) where you see this issue?  Appium 1.22.1 - iOS app  ### What are the browser driver(s) and version(s) where you see this issue?  Appium 1.22.1 - iOS app  ### Are you using Selenium Grid?  Selenium Grid 4.1.0","closed","I-defect,","kingages","2021-12-13T15:06:58Z","2022-04-04T00:10:08Z"
"","10439","[🐛 Bug]: org.openqa.selenium.UnsupportedCommandException: getElementDomAttribute with Opera remote webdriver","### What happened?  Unsupported command exception when trying to work with a Select element.  No similar problem on chrome/firefox.  ### How can we reproduce the issue?  ```shell // Priority drop down trigger 	  @FindBy(name = ""prop_bpm_workflowPriority"") 	  WebElement prioritySelect; 	   	private void setPriority(String priority) { 		Select priorityPicker = new Select(prioritySelect); 		priorityPicker.selectByVisibleText(priority);  	} ```   ### Relevant log output  ```shell Std out running the test from IDE:  Mar 12, 2022 5:04:03 PM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFO: Using OpenTelemetry for tracing Mar 12, 2022 5:04:06 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS   Part of my test log including the full trace:  2022-03-12 17:04:10 INFO  [Flight Recorder     ] Searching for WebElement 'By.name: prop_bpm_workflowPriority' 2022-03-12 17:04:10 INFO  [Flight Recorder     ] Searching for WebElement 'By.name: prop_bpm_workflowPriority' 2022-03-12 17:04:10 WARN  [Flight Recorder     ] getElementDomAttribute 2022-03-12 17:04:10 ERROR [TestWatcherExtension] **** Test Failed for test doCompleteWorkflow() **** 2022-03-12 17:04:10 ERROR [TestWatcherExtension] Trace:  org.openqa.selenium.UnsupportedCommandException: getElementDomAttribute Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'supermac.machoman.org', ip: 'fe80:0:0:0:11cb:9223:731a:56b5%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.9' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [e6f2171fd5c2b9722314d76519c0e88a, getElementDomAttribute {id=0.8885363640437294-41, name=multiple}] Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserConnectionEnabled: false, browserName: opera, build: master, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:51430}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, name: alfresco_tests.taskTests.Wo..., nativeEvents: true, networkConnectionEnabled: false, opera: {operadriverVersion: 98.0.4758.82 (199fc4f2ce084..., userDataDir: C:\Users\jkruse\AppData\Loc...}, operaOptions: {args: [], excludeSwitches: [enable-automation], extensions: []}, pageLoadStrategy: eager, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), rotatable: false, screenResolution: 1272x1024, se.screenResolution: 1272x1024, se:cdp: ws://mygrid.machoman.org:4444/..., se:cdpVersion: 98.0.4758.109, se:recordVideo: true, se:timeZone: America/Chicago, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, tz: America/Chicago, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 98.0.4758.109, webStorageEnabled: true, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Element: [[RemoteWebDriver: opera on WINDOWS (e6f2171fd5c2b9722314d76519c0e88a)] -> name: prop_bpm_workflowPriority] Session ID: e6f2171fd5c2b9722314d76519c0e88a 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:250) ~[selenium-remote-driver-4.1.2.jar:?] 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127) ~[selenium-remote-driver-4.1.2.jar:?] 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172) ~[selenium-remote-driver-4.1.2.jar:?] 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) ~[selenium-remote-driver-4.1.2.jar:?] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558) ~[selenium-remote-driver-4.1.2.jar:?] 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:251) ~[selenium-remote-driver-4.1.2.jar:?] 	at org.openqa.selenium.remote.RemoteWebElement.getDomAttribute(RemoteWebElement.java:145) ~[selenium-remote-driver-4.1.2.jar:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?] 	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?] 	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?] 	at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:236) ~[selenium-support-4.1.2.jar:?] 	at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48) ~[selenium-support-4.1.2.jar:?] 	at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:298) ~[selenium-support-4.1.2.jar:?] 	at net.bytebuddy.renamed.java.lang.Object$ByteBuddy$p4xeYXa2.getDomAttribute(Unknown Source) ~[?:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?] 	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?] 	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?] 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52) ~[selenium-support-4.1.2.jar:?] 	at com.sun.proxy.$Proxy59.getDomAttribute(Unknown Source) ~[?:?] 	at org.openqa.selenium.support.ui.Select.(Select.java:54) ~[selenium-support-4.1.2.jar:?] 	at pageobjects.StartWorkflow.setPriority(StartWorkflow.java:163) ~[test/:?] 	at pageobjects.StartWorkflow.createNewWorkflow(StartWorkflow.java:111) ~[test/:?] 	at tests.taskTests.WorkflowTest.doCompleteWorkflow(WorkflowTest.java:77) ~[test/:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?] 	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?] 	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?] 	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?] 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) ~[junit-platform-commons-1.8.2.jar:1.8.2] 	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?] 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?] 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107) ~[junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) [junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95) [junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91) [junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60) [junit-platform-launcher-1.8.2.jar:1.8.2] 	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98) [.cp/:?] 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) [.cp/:?] 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529) [.cp/:?] 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756) [.cp/:?] 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452) [.cp/:?] 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210) [.cp/:?] ```   ### Operating System  Windows 10 64-bit  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Opera 84.0.4316.31  ### What are the browser driver(s) and version(s) where you see this issue?  OperaDriver 98.0.4758.82  ### Are you using Selenium Grid?  4.1.2","closed","needs-triaging,","ibodog","2022-03-13T01:47:33Z","2022-04-29T00:11:14Z"
"","10598","[🐛 Bug]: Unexpected free port is appended to the argument list when '--connect-existing' is used","### What happened?  Unexpected free port is appended to the argument list when '--connect-existing' is used. The driver unexpectedly quits with status code 64.  Error occurs in: 8b984a0 selenium/py/selenium/webdriver/firefox/service.py Line 57   ### How can we reproduce the issue?  ```shell from selenium import webdriver browser = webdriver.Firefox('./',service_args=['--connect-existing','--marionette-port=2828'], log_path='./') ``` ```   ### Relevant log output  ```shell Geckodriver Log:  geckodriver: error: Found argument '53610' which wasn't expected, or isn't valid in this context  USAGE:     geckodriver [OPTIONS]  For more information try --help ```   ### Operating System  Win10x64  ### Selenium version  4.1.3 (Python 3.x)  ### What are the browser(s) and version(s) where you see this issue?  Firefox v99.0.1  ### What are the browser driver(s) and version(s) where you see this issue?  Geckodriver 0.31.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","seizu","2022-05-01T16:25:43Z","2022-06-01T00:13:43Z"
"","10614","[🐛 Bug]: ignoreZoomSetting","### What happened?  Unexpected error launching Internet Explorer. Browser zoom level was set to 125%. It should be set to 100% ie options ignoreZoomSetting can not work  ### How can we reproduce the issue?  ```shell async initDriver() {         let ieOptions = new IE.Options()         ieOptions.addArguments('--headless')         ieOptions.addArguments('--disable-gpu')         ieOptions.addArguments('--no-sandbox')         ieOptions.addArguments('--start-maximized')         ieOptions.addArguments('--disable-dev-shm-usage')         ieOptions.addArguments('--incognito')         ieOptions.addArguments('excludeSwitches', ['enable-automation'])         ieOptions.ignoreZoomSetting(true)         const driver = await new Builder().             setIeOptions(ieOptions).             forBrowser('internet explorer').build();         this.driver = driver;         context.set('driver', driver);          return async () => {             await this.driver.quit()             process.exit(0)         }     } ```   ### Relevant log output  ```shell Unexpected error launching Internet Explorer. Browser zoom level was set to 125%. It should be set to 100% ```   ### Operating System  windows 10  ### Selenium version  ^4.0.0-alpha.7  ### What are the browser(s) and version(s) where you see this issue?  IE 11  ### What are the browser driver(s) and version(s) where you see this issue?  19044.1645  ### Are you using Selenium Grid?  _No response_","closed","","lonelyGentleman","2022-05-06T05:58:20Z","2022-06-07T00:10:12Z"
"","10297","[🐛 Bug]: [Firefox] UnknownMethodError for CDP methods: Network.getResponseBody, Network.setBlockedURLs","### What happened?  Unable to perform some CDP methods, for example: Network.getResponseBody, Network.setBlockedURLs  For example Network.getResponseBody is not implemented in Firefox devtools: https://bugzilla.mozilla.org/show_bug.cgi?id=1637062  Why do we have the same implementation for Chrome and Firefox if they have different APIs?  ### How can we reproduce the issue?  ```shell RemoteWebDriver driver = new RemoteWebDriver(gridUrl, capabilities);  Field capabilitiesField = RemoteWebDriver.class.getDeclaredField(""capabilities""); capabilitiesField.setAccessible(true);  String sessionId = driver.getSessionId().toString(); String devtoolsUrl = String.format(""ws://%s:%s/session/%s/se/cdp"", gridUrl.getHost(), gridUrl.getPort(), sessionId);  MutableCapabilities mutableCapabilities = (MutableCapabilities) capabilitiesField.get(driver); mutableCapabilities.setCapability(""se:cdp"", devtoolsUrl); mutableCapabilities.setCapability(""se:cdpVersion"", mutableCapabilities.getBrowserVersion());  driver = (RemoteWebDriver) new Augmenter().augment(driver);  DevTools devTools = ((HasDevTools) driver).getDevTools();     devTools.createSession();  devTools.send(org.openqa.selenium.devtools.v85.network.Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));  devTools.send(org.openqa.selenium.devtools.v85.network.Network.setBlockedURLs(         Arrays.asList(""*png"")));  driver.get(""https://ya.ru""); ```   ### Relevant log output  ```shell {""id"":6,""error"":{""message"":""Network.setBlockedURLs"",""data"":""RemoteAgentError@chrome://remote/content/cdp/Error.jsm:29:5\nUnknownMethodError@chrome://remote/content/cdp/Error.jsm:112:7\nexecute@chrome://remote/content/cdp/domains/DomainCache.jsm:98:13\nreceiveMessage@chrome://remote/content/cdp/sessions/ContentProcessSession.jsm:84:45\n""},""sessionId"":""f414ed6b-905f-4b62-b49f-e1b19564b1c7""} Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'MacBook-Pro-Macbook-2.local', ip: 'fe80:0:0:0:14c6:e870:25a7:e52d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_201' Driver info: driver.version: unknown org.openqa.selenium.devtools.DevToolsException: {""id"":6,""error"":{""message"":""Network.setBlockedURLs"",""data"":""RemoteAgentError@chrome://remote/content/cdp/Error.jsm:29:5\nUnknownMethodError@chrome://remote/content/cdp/Error.jsm:112:7\nexecute@chrome://remote/content/cdp/domains/DomainCache.jsm:98:13\nreceiveMessage@chrome://remote/content/cdp/sessions/ContentProcessSession.jsm:84:45\n""},""sessionId"":""f414ed6b-905f-4b62-b49f-e1b19564b1c7""} Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'MacBook-Pro-Macbook-2.local', ip: 'fe80:0:0:0:14c6:e870:25a7:e52d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_201' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection.sendAndWait(Connection.java:159) 	at org.openqa.selenium.devtools.DevTools.send(DevTools.java:70) 	at com.ringcentral.vlt.regression.tests.debug.DebugTests.firefoxDevToolsTest(DebugTests.java:129) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:583) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.access$000(SuiteRunner.java:40) 	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489) 	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: org.openqa.selenium.WebDriverException: {""id"":6,""error"":{""message"":""Network.setBlockedURLs"",""data"":""RemoteAgentError@chrome://remote/content/cdp/Error.jsm:29:5\nUnknownMethodError@chrome://remote/content/cdp/Error.jsm:112:7\nexecute@chrome://remote/content/cdp/domains/DomainCache.jsm:98:13\nreceiveMessage@chrome://remote/content/cdp/sessions/ContentProcessSession.jsm:84:45\n""},""sessionId"":""f414ed6b-905f-4b62-b49f-e1b19564b1c7""} Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'MacBook-Pro-Macbook-2.local', ip: 'fe80:0:0:0:14c6:e870:25a7:e52d%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_201' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:234) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:58) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:199) 	... 3 more ```   ### Operating System  MacOs Monterey M1  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox 96.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  4.1.1","closed","needs-triaging,","bimanaev","2022-01-28T09:30:36Z","2022-02-28T00:10:19Z"
"","10294","System.ArgumentNullException: Frame element cannot be null (Parameter 'frameElement')","### What happened?  unable to locate Iframe no matter what I do. I am unable to locate a iFrame?  ### How can we reproduce the issue?  ```shell use switch to iframe method ```   ### Relevant log output  ```shell System.ArgumentNullException: Frame element cannot be null (Parameter 'frameElement') ```   ### Operating System  Windows 10  ### Selenium version  3  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome  ### Are you using Selenium Grid?  no","closed","I-question,","qaguru1","2022-01-28T02:19:27Z","2022-03-02T00:12:05Z"
"","9982","[🐛 Bug]: Dynamic Grid: java.lang.reflect.InvocationTargetException","### What happened?  Unable run grid in dynamic mode. Using compose file to run the services on the same docker host.  Docker version : Docker version 20.10.8, build 3967b7d Docker host is Windows.   Docker-compose content:  ```yaml version: ""3"" services:   node-docker:     image: selenium/node-docker:4.0.0     volumes:               - ./config.toml:/opt/bin/config.toml       - ./assets:/opt/selenium/assets     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443    selenium-hub:     image: selenium/hub:4.0.0     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```  Config.toml with image tags:  ```toml [docker] # Configs have a mapping between the Docker image to use and the capabilities that need to be matched to # start a container with the given image. configs = [     ""selenium/standalone-firefox:4.0.0"", ""{\""browserName\"": \""firefox\""}"",     ""selenium/standalone-chrome:4.0.0"", ""{\""browserName\"": \""chrome\""}"",     ""selenium/standalone-edge:4.0.0"", ""{\""browserName\"": \""MicrosoftEdge\""}""     ]  # URL for connecting to the docker daemon # host.docker.internal works for macOS and Windows. # Linux could use --net=host in the `docker run` instruction or 172.17.0.1 in the URI below. # To have Docker listening through tcp on macOS, install socat and run the following command # socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock url = ""http://host.docker.internal:2375"" # Docker imagee used for video recording #video-image = ""selenium/video:ffmpeg-4.3.1-20211013""  # Uncomment the following section if you are running the node on a separate VM # Fill out the placeholders with appropriate values #[server] #host = ""tcp://172.23.0.3"" #port = ""2375"" ```  ### How can we reproduce the issue?  ```shell Use the provided compose file and toml file to run instances of the images. The grid is up and sessions are queued, but containers are not spun up in a dynamic fashion. ```   ### Relevant log output  ```shell C:\Users\a149760\Desktop\Grid4>docker-compose -f elastic-grid.yml up [+] Running 3/3  - Network grid4_default          Created                                                                                                                                                                                               0.0s  - Container selenium-hub         Created                                                                                                                                                                                               0.7s  - Container grid4-node-docker-1  Created                                                                                                                                                                                               1.0s Attaching to grid4-node-docker-1, selenium-hub selenium-hub         | 2021-10-25 14:23:21,577 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing selenium-hub         | 2021-10-25 14:23:21,579 INFO supervisord started with pid 9 grid4-node-docker-1  | 2021-10-25 14:23:22,567 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-node-docker.conf"" during parsing grid4-node-docker-1  | 2021-10-25 14:23:22,569 INFO supervisord started with pid 8 selenium-hub         | 2021-10-25 14:23:22,581 INFO spawned: 'selenium-grid-hub' with pid 11 selenium-hub         | 14:23:22.974 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding selenium-hub         | 2021-10-25 14:23:22,976 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) selenium-hub         | 14:23:22.979 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing selenium-hub         | 14:23:23.052 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.27.0.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.27.0.2:4443] selenium-hub         | 14:23:23.103 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.27.0.2:4442 and tcp://172.27.0.2:4443 selenium-hub         | 14:23:23.122 INFO [UnboundZmqEventBus.] - Sockets created grid4-node-docker-1  | 2021-10-25 14:23:23,572 INFO spawned: 'selenium-grid-node-docker' with pid 10 grid4-node-docker-1  | Starting Selenium Grid Node Docker... grid4-node-docker-1  | 2021-10-25 14:23:23,577 INFO success: selenium-grid-node-docker entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) grid4-node-docker-1  | 14:23:23.910 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding grid4-node-docker-1  | 14:23:23.916 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing grid4-node-docker-1  | 14:23:23.983 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-hub:4442 and tcp://selenium-hub:4443 grid4-node-docker-1  | 14:23:24.024 INFO [UnboundZmqEventBus.] - Sockets created selenium-hub         | 14:23:24.124 INFO [UnboundZmqEventBus.] - Event bus ready selenium-hub         | 14:23:24.725 INFO [Hub.execute] - Started Selenium Hub 4.0.0 (revision 3a21814679): http://172.27.0.2:4444 grid4-node-docker-1  | 14:23:25.026 INFO [UnboundZmqEventBus.] - Event bus ready grid4-node-docker-1  | 14:23:25.129 INFO [NodeServer.createHandlers] - Reporting self as: http://172.27.0.3:5555 grid4-node-docker-1  | 14:23:25.146 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors grid4-node-docker-1  | java.lang.reflect.InvocationTargetException grid4-node-docker-1  |  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) grid4-node-docker-1  |  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) grid4-node-docker-1  |  at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) grid4-node-docker-1  |  at java.base/java.lang.reflect.Method.invoke(Method.java:566) grid4-node-docker-1  |  at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) grid4-node-docker-1  |  at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) grid4-node-docker-1  | Caused by: org.openqa.selenium.grid.config.ConfigException: java.lang.reflect.InvocationTargetException grid4-node-docker-1  |  at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:115) grid4-node-docker-1  |  at org.openqa.selenium.grid.node.config.NodeOptions.getNode(NodeOptions.java:131) grid4-node-docker-1  |  at org.openqa.selenium.grid.node.httpd.NodeServer.createHandlers(NodeServer.java:128) grid4-node-docker-1  |  at org.openqa.selenium.grid.node.httpd.NodeServer.asServer(NodeServer.java:184) grid4-node-docker-1  |  at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:231) grid4-node-docker-1  |  at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) grid4-node-docker-1  |  at org.openqa.selenium.grid.Main.launch(Main.java:83) grid4-node-docker-1  |  at org.openqa.selenium.grid.Main.go(Main.java:57) grid4-node-docker-1  |  at org.openqa.selenium.grid.Main.main(Main.java:42) grid4-node-docker-1  |  ... 6 more grid4-node-docker-1  | Caused by: java.lang.reflect.InvocationTargetException grid4-node-docker-1  |  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) grid4-node-docker-1  |  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) grid4-node-docker-1  |  at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) grid4-node-docker-1  |  at java.base/java.lang.reflect.Method.invoke(Method.java:566) grid4-node-docker-1  |  at org.openqa.selenium.grid.config.ClassCreation.callCreateMethod(ClassCreation.java:50) grid4-node-docker-1  |  at org.openqa.selenium.grid.config.MemoizedConfig.lambda$getClass$4(MemoizedConfig.java:100) grid4-node-docker-1  |  at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1737) grid4-node-docker-1  |  at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:95) grid4-node-docker-1  |  ... 14 more grid4-node-docker-1  | Caused by: org.openqa.selenium.docker.DockerException: Unable to reach the Docker daemon at http://host.docker.internal:2375 grid4-node-docker-1  |  at org.openqa.selenium.grid.node.docker.DockerOptions.getDockerSessionFactories(DockerOptions.java:125) grid4-node-docker-1  |  at org.openqa.selenium.grid.node.local.LocalNodeFactory.create(LocalNodeFactory.java:80) grid4-node-docker-1  |  ... 22 more grid4-node-docker-1  | Exception in thread ""Thread-0"" java.lang.NullPointerException grid4-node-docker-1  |  at org.openqa.selenium.grid.node.httpd.NodeServer.lambda$new$0(NodeServer.java:80) grid4-node-docker-1  |  at java.base/java.lang.Thread.run(Thread.java:829) grid4-node-docker-1  | 2021-10-25 14:23:38,163 INFO exited: selenium-grid-node-docker (exit status 1; not expected) Gracefully stopping... (press Ctrl+C again to force) [+] Running 0/1  - Container grid4-node-docker-1  Stopping                                                                                                                                                                                              0.2s [+] Running 2/2  - Container selenium-hub         Killed                                                                                                                                                                                                0.5s  - Container grid4-node-docker-1  Killed                                                                                                                                                                                                0.5s canceled ```   ### Operating System  Windows 10  ### Selenium version  3.14 using Java and testNG from Eclipse  ### What are the browser(s) and version(s) where you see this issue?  chrome and FF capabilities (options)  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  4.0.0","closed","needs-triaging,","pmswatuser","2021-10-25T15:08:45Z","2021-11-25T00:06:41Z"
"","10275","[🐛 Bug]: Grid GraphQL query failure: Unable to parse","### What happened?  Trying to use the graphQL query example [from the documentation](https://www.selenium.dev/documentation/grid/advanced_features/graphql_support/#query-to-get-session-information-for-a-given-session) for session info results in an ""Unable to parse"" error.   ### How can we reproduce the issue?  ```shell curl -X POST -H ""Content-Type: application/json"" --data '{""query"":""{ session (id: """") { id, capabilities, startTime, uri, nodeId, nodeUri, sessionDurationMillis, slot { id, stereotype, lastStarted } } } ""}' -s  ```   ### Relevant log output  ```shell {   ""value"": {     ""error"": ""unknown error"",     ""message"": ""Unable to parse: {\""query\"":\""{ session (id: \""8675309\"") { id, capabilities, startTime, uri, nodeId, nodeUri, sessionDurationMillis, slot { id, stereotype, lastStarted } } } \""}"",     ""stacktrace"": ""org.openqa.selenium.json.JsonException: Unable to parse: {\""query\"":\""{ session (id: \""8675309\"") { id, capabilities, startTime, uri, nodeId, nodeUri, sessionDurationMillis, slot { id, stereotype, lastStarted } } } \""}\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:57)\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:50)\r\n\tat org.openqa.selenium.grid.graphql.GraphqlHandler.execute(GraphqlHandler.java:114)\r\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\r\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\nCaused by: org.openqa.selenium.json.JsonException: Unable to read name. Expected colon separator, but saw '}'\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'LEWVDTAUTOHUB4', ip: '10.120.20.159', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_271'\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.json.JsonInput.nextName(JsonInput.java:142)\r\n\tat org.openqa.selenium.json.StringCoercer.lambda$apply$0(StringCoercer.java:38)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)\r\n\tat org.openqa.selenium.json.ObjectCoercer.lambda$apply$0(ObjectCoercer.java:72)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)\r\n\tat org.openqa.selenium.json.MapCoercer.lambda$apply$0(MapCoercer.java:68)\r\n\tat java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)\r\n\tat java.util.Iterator.forEachRemaining(Unknown Source)\r\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.copyInto(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)\r\n\tat java.util.stream.ReduceOps$ReduceOp.evaluateSequential(Unknown Source)\r\n\tat java.util.stream.AbstractPipeline.evaluate(Unknown Source)\r\n\tat java.util.stream.ReferencePipeline.collect(Unknown Source)\r\n\tat org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:72)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:71)\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:55)\r\n\t... 19 more\r\n""   } } ```   ### Operating System  Windows10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  n/a  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","ccarmannt","2022-01-21T17:47:27Z","2022-02-24T00:08:59Z"
"","10862","[🐛 Bug]: selenium 4 issue with identifying element with css selector","### What happened?  trying to identify css selector driver.findElement(By.css(""input[name='username']""), get message not able to findElement, used to work in selenium 3x  ### How can we reproduce the issue?  ```shell driver.findElement(By.css(""input[name='username']"") ```   ### Relevant log output  ```shell unable to find element ```   ### Operating System  mac bigsur  ### Selenium version  java  ### What are the browser(s) and version(s) where you see this issue?  chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 102  ### Are you using Selenium Grid?  no","closed","I-issue-template,","ravi005e","2022-07-10T23:31:05Z","2022-07-12T13:51:54Z"
"","10804","[🐛 Bug]: devtools.debugger.enable() causes exception","### What happened?  Trying to enable the Chrome DevTools debugger using the wrappers provided by Selenium will cause an exception. The `enable()` functions for other CDP domains seem to work though (e.g., `devtools.runtime.enable()`).  ### How can we reproduce the issue?  ```shell import trio from selenium import webdriver from selenium.webdriver.chrome.service import Service from webdriver_manager.chrome import ChromeDriverManager   async def main():     driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))      async with driver.bidi_connection() as connection:         session, devtools = connection.session, connection.devtools          driver.get('https://google.com')          # Try to enable debugger         await session.execute(devtools.debugger.enable())   trio.run(main) ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""bug.py"", line 19, in      trio.run(main)   File ""/home/tim/.local/lib/python3.8/site-packages/trio/_core/_run.py"", line 1946, in run     raise runner.main_task_outcome.error   File ""bug.py"", line 16, in main     await session.execute(devtools.debugger.enable())   File ""/usr/lib/python3.8/contextlib.py"", line 189, in __aexit__     await self.gen.athrow(typ, value, traceback)   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 1188, in bidi_connection     yield BidiConnection(session, cdp, devtools)   File ""/usr/lib/python3.8/contextlib.py"", line 189, in __aexit__     await self.gen.athrow(typ, value, traceback)   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 481, in open_cdp     await conn.aclose()   File ""/home/tim/.local/lib/python3.8/site-packages/trio/_core/_run.py"", line 813, in __aexit__     raise combined_error_from_nursery   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 458, in _reader_task     session._handle_data(data)   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 256, in _handle_data     self._handle_event(data)   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 293, in _handle_event     event = devtools.util.parse_json_event(data)   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/common/devtools/v102/util.py"", line 19, in parse_json_event     return _event_parsers[json['method']].from_json(json['params'])   File ""/home/tim/.local/lib/python3.8/site-packages/selenium/webdriver/common/devtools/v102/debugger.py"", line 1219, in from_json     script_language=debugger.ScriptLanguage.from_json(json['scriptLanguage']) if 'scriptLanguage' in json else None, NameError: name 'debugger' is not defined ```   ### Operating System  Linux Mint 20.1  ### Selenium version  Python 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.61  ### Are you using Selenium Grid?  _No response_","open","I-defect,","TimRecktenwald","2022-06-24T11:13:05Z","2022-07-12T17:55:26Z"
"","9983","[🐛 Bug]: Dynamic Grid - node parameters for Selenium nodes. Need to pass image specific parameters in config.toml","### What happened?  Trying to add VNC parameters to node-docker image when running dynamicgrid. But parameters don't take effect.   example:  VNC_NO_PASSWORD=1 has no effect.  Ports: 5900 and 7900 have no effect. Although SE_NODE_GRID_URL works and allows a live view of a running session on dynamic grid.  While these parameters works in a standard grid 4 (not dynamic), how do we accomplish this using config.toml file? the ports will need to be specific to an image. How do we specify the port mapping in the config file?   ### How can we reproduce the issue?  ```shell version: ""3"" services:   node-docker:     image: selenium/node-docker:4.0.0     volumes:               - ./config.toml:/opt/bin/config.toml       - ./assets:/opt/selenium/assets     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443       - SE_NODE_GRID_URL=http://localhost:4444       - VNC_NO_PASSWORD=1      ports:       - ""6900:5900""       - ""7900:7900""    selenium-hub:     image: selenium/hub:4.0.0     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444""   config file used:  [docker] configs = [     ""selenium/standalone-firefox:4.0.0"", ""{\""browserName\"": \""firefox\""}"",     ""selenium/standalone-chrome:4.0.0"", ""{\""browserName\"": \""chrome\""}"",     ""selenium/standalone-edge:4.0.0"", ""{\""browserName\"": \""MicrosoftEdge\""}""     ] url = ""http://host.docker.internal:2375"" ```   ### Relevant log output  ```shell Cannot get live view using port 7900.  Trying to avoid entering password for VNC when launching the session from queue manager on localhost:4444. ALways asks for password. ```   ### Operating System  Windows 10  ### Selenium version  4  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  NA  ### Are you using Selenium Grid?  4.0","closed","","pmswatuser","2021-10-25T17:49:28Z","2021-11-27T00:06:27Z"
"","10570","chromedriver not changing [🐛 Bug]:","### What happened?  trying run **headless vivaldi** with my profile - not working  trying run **chromium** with my profile - not working  only default one **chromedriver** works with some non-.config profile  ### How can we reproduce the issue?   `driver = webdriver.Chrome(service=Service('/usr/bin/vivaldi-stable'), options=options)`  it's just open new blank vivaldi window and do nothing!   `options.binary_location = '/usr/bin/vivaldi-stable'`  **USELESS..**  `options.add_argument('--user-data-dir=/home/chibo/.config/chromium/Default')` `options.add_argument('user-data-dir=/home/chibo/.config/chromium/Default')`  **DON'T CARE AT ALL**    ### Relevant log output  ```python from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.chrome.service import Service   options = Options()  options.binary_location = '/usr/bin/vivaldi-stable'   options.add_argument('disable-infobars') options.add_argument('--headless') options.add_argument('--no-sandbox') options.add_argument('--disable-gpu') options.add_argument('--user-data-dir=/home/chibo/.config/chromium/Default')   driver = webdriver.Chrome(     service=Service('/usr/bin/vivaldi-stable'),     options=options )  URL = 'https://www.youtube.com'  driver.get(URL) driver.set_window_size(800, 1200) driver.save_screenshot(""screenshot.png"")  driver.quit()  print('#DONE') ```   ### Operating System  Arch Linux 5.17.3-arch1-1  ### Selenium version  python-selenium 4.1.0-2  ### What are the browser(s) and version(s) where you see this issue?  vivaldi 5.2.2623.39-1  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome/100.0.4896.133  ### Python?  Python 3.10.4","closed","I-defect,","chiboreache","2022-04-21T21:22:52Z","2022-05-22T00:11:32Z"
"","10051","[🐛 Bug]: NoSuchMethodError: org.openqa.selenium.WebElement.getDomAttribute","### What happened?  Tried to use the `Select` class (`org.openqa.selenium.support.ui.Select`) as before but this feature doesn't work anymore.   ### How can we reproduce the issue?  ```shell Select groupBy = new Select(groupByButton());  //the definition of groupByButton public WebElement groupByButton(); ```   ### Relevant log output  ```shell org.openqa.selenium.WebElement.getDomAttribute(Ljava/lang/String;)Ljava/lang/String; java.lang.NoSuchMethodError: org.openqa.selenium.WebElement.getDomAttribute(Ljava/lang/String;)Ljava/lang/String; 	at org.openqa.selenium.support.ui.Select.(Select.java:54) ```   ### Operating System  Win 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome v96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver v96.0.4664.45  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","RedDevil91","2021-11-17T12:34:52Z","2021-12-26T00:08:11Z"
"","10881","[🐛 Bug]:  Touch/flick API is giving ""Cannot call non W3C standard command while in W3C mode"" in POSTMAN","### What happened?  Tried to test all the Selenium API's in Postman, most of them worked but few of the API's started to give message like ""Cannot call non W3C standard command while in W3C mode"".  1. In the Postman called a Create Session API and captured the Session ID. POST - [ http://localhost:9515/session]  2. Using this Session ID navigated to URL and maximized the browser window. POST - [http://localhost:9515/session/{{sessionId}}/url] POST - [http://localhost:9515/session/{{sessionId}}/window/maximize]  3. Tried to Identify the Element by POST Call POST - [http://localhost:9515/session/{{sessionId}}/element]  4. Tried to call below API with respective body values and every time getting the same message. ![image](https://user-images.githubusercontent.com/24207575/179250126-b94d212c-b27c-4446-aea6-dfc457814371.png) ![POSTMAN2](https://user-images.githubusercontent.com/24207575/179250811-9e45dda1-db60-4888-acd3-802b46a26011.PNG)   Can anyone help me solving this scroll issue using POSTMAN.    ### How can we reproduce the issue?  ```shell API: POST - http://localhost:9515/session/{{sessionId}}/touch/flick  Body:  {     ""element"":""{{nameBoxElement}}"",     ""xoffset "":0,     ""yoffset "":250,     ""speed"":10 } ```   ### Relevant log output  ```shell {     ""value"": {         ""error"": ""unknown command"",         ""message"": ""unknown command: Cannot call non W3C standard command while in W3C mode"",         ""stacktrace"": ""Backtrace:\n\tOrdinal0 [0x01476463+2188387]\n\tOrdinal0 [0x0140E461+1762401]\n\tOrdinal0 [0x01323D78+802168]\n\tOrdinal0 [0x01346D39+945465]\n\tOrdinal0 [0x01347AD6+948950]\n\tGetHandleVerifier [0x017171F2+2712546]\n\tGetHandleVerifier [0x0170886D+2652765]\n\tGetHandleVerifier [0x0150002A+520730]\n\tGetHandleVerifier [0x014FEE06+516086]\n\tOrdinal0 [0x0141468B+1787531]\n\tOrdinal0 [0x01418E88+1805960]\n\tOrdinal0 [0x01418F75+1806197]\n\tOrdinal0 [0x01421DF1+1842673]\n\tBaseThreadInitThunk [0x76D6919F+14]\n\tRtlInitializeExceptionChain [0x7788AD2F+143]\n\tRtlInitializeExceptionChain [0x7788ACFA+90]\n""     } } ```   ### Operating System  Windows 10  ### Selenium version  Selenium here not required  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060.114  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 103.0.5060.114  ### Are you using Selenium Grid?  No","closed","needs-triaging,","vishnuprakash9845","2022-07-15T15:07:24Z","2022-07-15T17:34:55Z"
"","10484","[🐛 Bug]: Getting HttpMethod for PUT request returns GET","### What happened?  Tried network interception for a PUT request, but it is not possible, because the org.openqa.selenium.remote.http.HttpMethod does not contain a PUT value. When a PUT request is intercepted and HttpRequest.getMethod() is called, it returns HttpMethod.GET  ### How can we reproduce the issue?  ```shell https://github.com/fviktor92/test_framework_kotlin/blob/master/src/test/kotlin/com/fviktor/test_framework_kotlin/ui/SwaggerV2Test.kt updatingAnExistingPetShouldSucceed test method  1. Set a breakpoint in org.openqa.selenium.devtools.NetworkInterceptor#NetworkInterceptor(org.openqa.selenium.WebDriver, org.openqa.selenium.remote.http.Routable) 2. Execute above mentioned test case 3. When breakpoint is reached, because the PUT request has been sent to /pet endpoint, call req.method Actual result: ""GET"" Expected result: ""PUT"" ```   ### Relevant log output  ```shell {} ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 99.0.4844.51  ### Are you using Selenium Grid?  _No response_","closed","C-devtools,","fviktor92","2022-03-27T14:34:47Z","2022-05-09T00:11:05Z"
"","10080","[🐛 Bug]: TracedCommandExecutor throws NPE for driver.switchTo().defaultContent() method for RemoteWebDriver","### What happened?  TracedCommandExecutor throws NPE for `driver.switchTo().defaultContent()` method for RemoteWebDriver ``` Caused by: java.lang.NullPointerException 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:47) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) ``` It fails [here](https://github.com/SeleniumHQ/selenium/blob/24a9c50fedecfea1216480c89e016552b539f271/java/src/org/openqa/selenium/remote/TracedCommandExecutor.java#L47) because  `driver.switchTo().defaultContent() ` calls `DriverCommand.SWITCH_TO_FRAME(null)` and command parameter `null`. It causes  NPE on `parameter.getValue().toString()`  ![image](https://user-images.githubusercontent.com/6514276/143272682-8478efce-1272-4ede-864e-e6c91ee8556e.png)   ### How can we reproduce the issue?  ```shell @Test     public void foo() throws MalformedURLException {         // You have to setup some Selenium grid to use RemoteWebDriver         ChromeOptions chromeOptions = new ChromeOptions();         RemoteWebDriver driver = null;         try {             driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), chromeOptions);             driver.get(""https://www.w3schools.com/html/html_iframe.asp"");             driver.switchTo().frame(0);             driver.switchTo().defaultContent();         } catch (Throwable e) {             throw e;         } finally {             if (driver != null) {                 driver.quit();             }         }     } ```   ### Relevant log output  ```shell System info: host: 'bo-MS-7B86', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.11.0-40-generic', java.version: '1.8.0_302' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [6adcb1735cb29eb0dccefcc24f1dd320, switchToFrame {id=null}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: ..., javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 6adcb1735cb29eb0dccefcc24f1dd320 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:583) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.defaultContent(RemoteWebDriver.java:1042) 	at com.example.demo_selenied.MainPageTest.iframeTest2(MainPageTest.java:106) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     ... 	at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.NullPointerException 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:47) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	... ```   ### Operating System  Any  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Any remote  ### What are the browser driver(s) and version(s) where you see this issue?  Any  ### Are you using Selenium Grid?  Selenoid","closed","I-defect,","BorisOsipov","2021-11-24T16:05:59Z","2022-01-01T00:07:35Z"
"","10152","[🐛 Bug]: Selenium is working well under Docker container but not when deployed on cloud","### What happened?  To begin, we have devised a solution using Selenium that scrapes for the purpose of obtaining some freely available data but is not very expensive in terms of processing. The solution is both locally and dockerized (locally again) working. While we are currently attempting to deploy it utilising AZURE ACR/ACI beneath these docker containers. Things change, the solution ceases to function properly despite the fact that no code changes have been made. Our question is, could you possibly lead us toward creating a good crash log, given what we now have was already there previously (locally on docker / locally on our machine)? Or, if you notice a crash in our traceback, could you direct us to the cause and solution? _Note: We have heard about directly outputting a crash file from the web remote driver, but we could not find any documentation on this; perhaps we missed the good documentation page._  ### How can we reproduce the issue?   Using a simple way for scraping data from a web page. Every aspect of the system should be dockerized. See the results of utilising Azure ACR for docker container storage and ACI for obtaining a remote address. What we have noticed is that if we do not do a lot on each page that opens, there is no ""crash"" However, if we open ten pages and scrape information from each, everything will crash. We initially encountered this issue on Docker locally, as our Docker desktop did not allow for sufficient RAM. However, here we have ten gigabytes of memory and two CPUs available for the selenium grid docker container as well as our Python solution under its docker container.   ### Relevant log output  ```shell Everything could be retrieves on this Hastening output log:  https://www.toptal.com/developers/hastebin/imibibepex.apache ```   ### Operating System  Azure container Instance under linux ubuntu latest stable version  ### Selenium version  Selenium GRID 4.1.0 stable version  ### What are the browser(s) and version(s) where you see this issue?  Firefox remove web driver  ### What are the browser driver(s) and version(s) where you see this issue?  Firefox version associated with the selenium grid image  ### Are you using Selenium Grid?  4.1.0","closed","I-issue-template,","simonprovost","2021-12-15T14:15:50Z","2022-04-21T00:12:56Z"
"","10227","[🐛 Bug]: Cannot cast shadow root element to an IWebElement in version 96+","### What happened?  This only started happening with ChromeDriver version 96.  In C#, when executing a JS command to get the shadow root element and then casting it to an IWebElement, it throws an exception of:  **System.InvalidCastException: 'Unable to cast object of type 'OpenQA.Selenium.ShadowRoot' to type 'OpenQA.Selenium.IWebElement'.'**  ### How can we reproduce the issue?  ```shell `var shadowRootElement = (IWebElement) driver.ExecuteScript(""return arguments[0].shadowRoot"", element);` ```   ### Relevant log output  ```shell **System.InvalidCastException: 'Unable to cast object of type 'OpenQA.Selenium.ShadowRoot' to type 'OpenQA.Selenium.IWebElement'.'** ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome v96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver v96  ### Are you using Selenium Grid?  No","closed","needs-triaging,","Sckye","2022-01-06T18:16:37Z","2022-02-12T00:07:57Z"
"","10624","[🐛 Bug]: Wrong type for WebElement.get_property","### What happened?  This is similar issue to #10623   In this case it's not so straightforward. The `WebElement.get_property` declare return value type as `str`.  It is true in many cases but if you try to get property 'parentElement' (see example below), then the return value is `WebElement`. But mypy (PyCharm and other linters) complains that result of get_property is always `str`. Can you declare return type of `get_property` as `Union` of all possible types, which the method can return?  ### How can we reproduce the issue?  ```shell from chromedriver_binary.utils import get_chromedriver_path from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.remote.webelement import WebElement   def test():   driver = webdriver.Chrome(executable_path=get_chromedriver_path() + '/chromedriver')   driver.get('http://www.example.com/')   element = driver.find_element(by=By.TAG_NAME, value='h1')   parentElement: WebElement = element.get_property('parentElement')   print(type(parentElement))   if __name__ == '__main__':   test() ```   ### Relevant log output  ```shell no log needed ```   ### Operating System  Gentoo Linux  ### Selenium version  Python 4.1.5  ### What are the browser(s) and version(s) where you see this issue?  not relevant  ### What are the browser driver(s) and version(s) where you see this issue?  not relevant  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","eNcacz","2022-05-09T16:19:23Z","2022-06-19T00:12:00Z"
"","10471","[🐛 Bug]: Selenium grid 4 hub becomes unresponsive to new sessions when Chrome does not start","### What happened?  This is an issue that we have seen regularly since we began using Selenium Grid 4 a few months ago, and only recently were able to conjecture as to the cause.  We have noticed that when Chrome fails to start on one of the nodes, the hub becomes unresponsive to new requests coming into it.  The hub continues to respond to its health checks and serves HTTP requests, but no new sessions begin across any of the nodes.  We only see this behavior on our selenium grid that receives very frequent traffic and almost always has one or two sessions running on it.  We have unfortunately not been able to reproduce outside of our Kubernetes cluster.  We also have not been able to detect a pattern with when the issue occurs.  Sometimes it will happen within hours of the selenium grid being redeployed on the cluster, and sometimes we will go days without running into the issue.  We are also unsure of what more can be done to debug the situation.  ### How can we reproduce the issue?  These are the environment variables that are supplied to the Chrome node containers: ```       SE_EVENT_BUS_HOST:                  se4-hub       SE_EVENT_BUS_SUBSCRIBE_PORT:        4443       SE_EVENT_BUS_PUBLISH_PORT:          4442       SE_NODE_MAX_SESSIONS:               2       NODE_HEARTBEAT_PERIOD:              30       NODE_OVERRIDE_MAX_SESSIONS:         true       NODE_SESSION_TIMEOUT:               180 ``` These are the environment variables supplied to the Hub: ```       SESSIONQUEUE_REQUEST_TIMEOUT:         120       SESSIONQUEUE_SESSION_RETRY_INTERVAL:  5       LOGGING_LOG_LEVEL:                    INFO       SERVER_MAX_THREADS:                   64       DISTRIBUTOR_HEALTHCHECK_INTERVAL:     30 ```  ### Relevant log output  ```shell 2022-03-23 01:22:34.388	Starting ChromeDriver 99.0.4844.51 (d537ec02474b5afe23684e7963d538896c63ac77-refs/branch-heads/4844@{#875}) on port 52937 2022-03-23 01:25:52.427	08:25:52.426 WARN [SpanWrappedHttpHandler.execute] - Unable to execute request: java.net.ConnectException: Connection refused: localhost/127.0.0.1:52937 2022-03-23 01:25:52.427	java.io.UncheckedIOException: java.net.ConnectException: Connection refused: localhost/127.0.0.1:52937 2022-03-23 01:25:52.427	Caused by: java.net.ConnectException: Connection refused: localhost/127.0.0.1:52937 2022-03-23 01:25:52.427	Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost/127.0.0.1:52937 2022-03-23 01:25:52.428	08:25:52.427 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""30203ffeee13a6b855c708470eac460f"",""eventTime"": 1648023952425653053,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request: java.net.ConnectException: Connection refused: localhost\u002f127.0.0.1:52937"",""exception.stacktrace"": ""java.io.UncheckedIOException: java.net.ConnectException: Connection refused: localhost\u002f127.0.0.1:52937\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80)\n\tat net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.Execution.executeSync(Execution.java:128)\n\tat net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379)\n\tat net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80)\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80)\n\tat net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)\n\tat net.jodah.failsafe.Execution.executeSync(Execution.java:128)\n\tat net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379)\n\tat net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68)\n\tat org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80)\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\n\tat org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:110)\n\tat org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)\n\tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:92)\n\tat org.openqa.selenium.grid.node.ProtocolConvertingSession.execute(ProtocolConvertingSession.java:75)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:123)\n\tat org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:393)\n\tat org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\nCaused by: java.net.ConnectException: Connection refused: localhost\u002f127.0.0.1:52937\n\tat org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179)\n\tat org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108)\n\tat org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28)\n\tat org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n\tat io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)\n\tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321)\n\tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\t... 1 more\nCaused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: localhost\u002f127.0.0.1:52937\nCaused by: java.net.ConnectException: Connection refused\n\tat java.base\u002fsun.nio.ch.SocketChannelImpl.checkConnect(Native Method)\n\tat java.base\u002fsun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:777)\n\tat io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330)\n\tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""java.io.UncheckedIOException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remote.http.Route$PredicatedRoute"",""http.host"": ""se4-hub.k8s.tools.blend.com:4444"",""http.method"": ""POST"",""http.request_content_length"": ""120"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fsession\u002f1fc868cc66914a5c0728bc6575e959e9\u002factions"",""http.user_agent"": ""webdriver\u002f7.7.4""}} ```   ### Operating System  Selenium Grid 4.1.12  ### Selenium version  Selenium Grid 4.1.12  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  4.1.2","closed","R-awaiting answer,","millerick","2022-03-23T14:57:21Z","2022-06-04T00:12:04Z"
"","10556","[🐛 Bug]: ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools.v100'","### What happened?  This is a variation of #10390 - for v100 of Chrome devtools.  ### How can we reproduce the issue?  ```shell 1. Install Python/Selenium 4.1.3 2. Ensure that browser is on at least version 100 3. Run following snippet:  import asyncio  from selenium import webdriver from selenium.webdriver.chrome.service import Service from selenium.webdriver.common.log import Log   async def printConsoleLogs():   service = Service(executable_path=""./driver/chromedriver"")   chrome_options = webdriver.ChromeOptions()   driver = webdriver.Chrome(service=service)   driver.get(""http://www.google.com"")    async with driver.bidi_connection() as session:       log = Log(driver, session)       from selenium.webdriver.common.bidi.console import Console       async with log.add_listener(Console.ALL) as messages:           driver.execute_script(""console.log('I love cheese')"")       print(messages[""message""])    driver.quit()  asyncio.run(printConsoleLogs()) ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools.v100' ``` ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""/Users/jure/selenium-test/test.py"", line 23, in      asyncio.run(printConsoleLogs())   File ""/Users/jure/.pyenv/versions/3.9.10/lib/python3.9/asyncio/runners.py"", line 44, in run     return loop.run_until_complete(main)   File ""/Users/jure/.pyenv/versions/3.9.10/lib/python3.9/asyncio/base_events.py"", line 642, in run_until_complete     return future.result()   File ""/Users/jure/selenium-test/test.py"", line 14, in printConsoleLogs     async with driver.bidi_connection() as session:   File ""/Users/jure/.pyenv/versions/3.9.10/lib/python3.9/contextlib.py"", line 181, in __aenter__     return await self.gen.__anext__()   File ""/Users/jure/selenium-test/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 1577, in bidi_connection     cdp.import_devtools(version)   File ""/Users/jure/selenium-test/lib/python3.9/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 55, in import_devtools     devtools = importlib.import_module(""selenium.webdriver.common.devtools.v{}"".format(version))   File ""/Users/jure/.pyenv/versions/3.9.10/lib/python3.9/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1030, in _gcd_import   File """", line 1007, in _find_and_load   File """", line 984, in _find_and_load_unlocked ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools.v100' ```   ### Operating System  macOs 12.3.1  ### Selenium version  Python 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","jurecuhalev","2022-04-19T08:44:22Z","2022-06-05T00:14:03Z"
"","10848","[🐛 Bug]: org.openqa.selenium.UnsupportedCommandException: HTTP method not allowed on getting window size from firefox","### What happened?  There is an exception when trying to get (or set) an existing browser window size for Firefox remote webdriver (using LambdaTest grid).  code like: driver.manage().window().getSize()  produces error: org.openqa.selenium.UnsupportedCommandException: HTTP method not allowed Command duration or timeout: 167 milliseconds Build info: version: '4.2.1', revision: 'ac4d0fdd4a' System info: host: 'mypc.nowhere.net', ip: 'fe80:0:0:0:899:fc07:3009:778f%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.9' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [bd8a1356-1c44-4082-9452-8bc047964991, getCurrentWindowSize {}] Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, binary: E:\firefox\100.0\firefox.exe, browserName: firefox, browserVersion: 100.0, enableNetworkThrottling: false, moz:accessibilityChecks: false, moz:buildID: 20220419190903, moz:firefoxOptions: {args: [--width=1920, --height=1000], binary: E:\firefox\100.0\firefox.exe, prefs: {devtools.console.stdout.content: true, network.proxy.allow_hijacking_localhost: true, network.proxy.http: 127.0.0.1, network.proxy.http_port: 46000, network.proxy.no_proxies_on: , network.proxy.ssl: 127.0.0.1, network.proxy.ssl_port: 46000, network.proxy.type: 1}}, moz:geckodriverVersion: 0.31.0, moz:headless: false, moz:processID: 324, moz:profile: C:\Users\ltuser\AppData\Loc..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, performance: false, platformName: WINDOWS, platformVersion: 10.0, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, video: true}  ### How can we reproduce the issue? You might need access to LambdaTest Selenium Grid v4...  ```shell MutableCapabilities browserOptions = null; browserOptions = new FirefoxOptions(); ((FirefoxOptions) browserOptions).setAcceptInsecureCerts(true); ((FirefoxOptions) browserOptions).setPageLoadStrategy(PageLoadStrategy.EAGER); ((FirefoxOptions) browserOptions).addPreference(""devtools.console.stdout.content"", true);  HashMap ltOptions = new HashMap(); ltOptions.put(""user"", Config.LT_USERNAME); ltOptions.put(""accessKey"", Config.LT_ACCESS_KEY); ltOptions.put(""platformName"", ""Windows 11""); ltOptions.put(""network"", false); ltOptions.put(""console"", true); ltOptions.put(""selenium_version"", ""4.1.2""); ltOptions.put(""terminal"", true); browserOptions.setCapability(""LT:Options"", ltOptions);  URL webDriverRemoteURL = new URL(""https://my.name:myApiKey@hub.lambdatest.com/wd/hub"");  WebDriver driver = new RemoteWebDriver(webDriverRemoteURL, browserOptions);  driver.manage().window().getSize();  ```   ### Relevant log output  ```shell org.openqa.selenium.UnsupportedCommandException: HTTP method not allowed Command duration or timeout: 167 milliseconds Build info: version: '4.2.1', revision: 'ac4d0fdd4a' System info: host: 'mypc.nowhere.net', ip: 'fe80:0:0:0:899:fc07:3009:778f%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.9' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [bd8a1356-1c44-4082-9452-8bc047964991, getCurrentWindowSize {}] Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, binary: E:\firefox\100.0\firefox.exe, browserName: firefox, browserVersion: 100.0, enableNetworkThrottling: false, moz:accessibilityChecks: false, moz:buildID: 20220419190903, moz:firefoxOptions: {args: [--width=1920, --height=1000], binary: E:\firefox\100.0\firefox.exe, prefs: {devtools.console.stdout.content: true, network.proxy.allow_hijacking_localhost: true, network.proxy.http: 127.0.0.1, network.proxy.http_port: 46000, network.proxy.no_proxies_on: , network.proxy.ssl: 127.0.0.1, network.proxy.ssl_port: 46000, network.proxy.type: 1}}, moz:geckodriverVersion: 0.31.0, moz:headless: false, moz:processID: 324, moz:profile: C:\Users\ltuser\AppData\Loc..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, performance: false, platformName: WINDOWS, platformVersion: 10.0, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, video: true} ```   ### Operating System  Test runner is MacOS X, running remote selenium 4 grid on LambdaTest  ### Selenium version  4.3.0 on test runner, 4.2.1 on LambdaTest  ### What are the browser(s) and version(s) where you see this issue?  Firefox 102  ### What are the browser driver(s) and version(s) where you see this issue?  remoteWebdriver on LambdaTest v4 grid  ### Are you using Selenium Grid?  4.1.2","closed","","ibodog","2022-07-04T18:28:24Z","2022-07-04T22:51:22Z"
"","10033","[🐛 Bug]: misleading log message","### What happened?  There is a misleading log message. See steps to reproduce, below.  ### How can we reproduce the issue?  I have the following script:  ```java long start = System.currentTimeMillis(); driver.manage().timeouts().scriptTimeout(Duration.ofMillis(10000)); // this will obviously time out! driver.executeAsyncScript(""window.setTimeout(arguments[arguments.length - 1], 20000);""); log.info(""Elapsed time: "" + (System.currentTimeMillis() - start)); ```  ### Relevant log output  The above script produces **expected** org.openqa.selenium.ScriptTimeoutException. This is followed by the message:  ```shell Command: [f634c328f5ee0db65e63f424e23f7ef2, executeAsyncScript {script=window.setTimeout(arguments[arguments.length - 1], 20000);, args=[]}] Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: /tmp/.com.google.Chrome.ejxyR3}, goog:chromeOptions: {debuggerAddress: localhost:46805}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://localhost:46805/devtoo..., se:cdpVersion: 95.0.4638.69, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} ```  My question (bug) is specifically about the ""timeouts: {script: 30000}"" part above. I am expecting to see ""script: 10000"" in my case.  ### Operating System  all  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  all?  ### What are the browser driver(s) and version(s) where you see this issue?  all?  ### Are you using Selenium Grid?  n/a","closed","needs-triaging,","SiKing","2021-11-12T22:12:30Z","2022-01-26T00:10:07Z"
"","10464","[🐛 Bug]: IE11(Win11) ,use selenium to click upload_file_button, but after clicking the open file dialog, the whole system is unresponsive","### What happened?  the whole system is unresponsive.The following code doesn't work  ### How can we reproduce the issue?  ```shell win11 IE11,upload_file ```   ### Relevant log output  ```shell No ```   ### Operating System  windows 11  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  IE 11  ### What are the browser driver(s) and version(s) where you see this issue?  IE 4.0.0 64bit  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","susan20150801","2022-03-21T05:20:49Z","2022-04-21T00:12:53Z"
"","10444","ctrl +c in python terminal while driver is open [🐛 Bug]:","### What happened?  The webpage will crash if in the terminal a ctrl+c command is used. Which might be used to correct for in incorrect input into the terminal. Expected would be the KeyboardInterrupt in the terminal to not cause the web driver to close.  ### How can we reproduce the issue?  ```shell Start a python Terminal. Start the selenium driver press ctrl+c ```   ### Relevant log output  ```shell None ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 98.0.4758.102  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","arne182","2022-03-14T16:51:00Z","2022-04-18T00:12:03Z"
"","10571","[🐛 Bug]: Webdriver.firefox API documentation incomplete","### What happened?  The Webdriver.firefox API documentation (https://www.selenium.dev/selenium/docs/api/py/api.html#webdriver-firefox) is incomplete, in that it doesn't mention `selenium.webdriver.firefox.remote_connection` or `selenium.webdriver.firefox.service`.  ### How can we reproduce the issue?  Visit https://www.selenium.dev/selenium/docs/api/py/api.html#webdriver-firefox and note the following links: - selenium.webdriver.firefox.extension_connection - selenium.webdriver.firefox.firefox_binary - selenium.webdriver.firefox.options - selenium.webdriver.firefox.firefox_profile - selenium.webdriver.firefox.webdriver  However, viewing the source code (https://github.com/SeleniumHQ/selenium/tree/trunk/py/selenium/webdriver/firefox) shows the missing items: - remote_connection - service   ### Relevant log output  ```shell n/a ```   ### Operating System  Kubuntu  ### Selenium version  Python 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  LibreWolf 99.0.1  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.31.0  ### Are you using Selenium Grid?  _No response_","closed","C-docs,","BWPanda","2022-04-22T03:58:07Z","2022-06-11T00:11:05Z"
"","10746","[🐛 Bug]: TouchActions in DotNet do not work","### What happened?  The TouchActions in .Net do not work at all because the TouchActions class uses a separate ActionBuilder.  When calling Perform() the ActionBuilder from the base class is used which does not have any actions registered.  ``` public class Actions : IAction    {         private readonly TimeSpan DefaultScrollDuration = TimeSpan.FromMilliseconds(250);         private readonly TimeSpan DefaultMouseMoveDuration = TimeSpan.FromMilliseconds(250);         private ActionBuilder actionBuilder = new ActionBuilder(); //","closed","I-defect,","ICannotStopEatingMeat","2022-06-08T13:39:13Z","2022-07-25T00:12:34Z"
"","10583","[🐛 Bug]: Selenium NuGet package not updated with newer CDP bindings","### What happened?  The Selenium.WebDriver 4.1.0 NuGet package is several major releases behind the stable Chrome DevTools Protocol, so it does not work with latest stable of Chrome (v100.x as of this writing). The latest version in 4.1.0 release is v96 which is no longer works against v100. The .NET bindings are clearly being kept updated as the CDP is versioned (see ) but no NuGet package releases have been made.  It seems to me that there should be a new 4.x.x release of the Selenium.WebDriver NuGet package based on the latest trunk.  ### How can we reproduce the issue?  ```shell - Create .NET 5.0 test project using dotnet new - Install latest Chrome (v100.x) - Add Selenium.WebDriver 4.1.0 and Selenium.WebDriver.ChromeDriver 100.x matching Chrome version  In a test, attempt to create a DevTools session to use something available in the latest available DevTools version in the 4.1.0 package.   using OpenQA.Selenium.DevTools.V96.Fetch; // no newer NuGet package version to use V100.Fetch  var driver = new ChromeDriver(); var fetchAdapater = new FetchAdapater(driver.GetDevToolsSession()); ``` ```   ### Relevant log output  ```shell Error: OpenQA.Selenium.WebDriverException: Unexpected error creating WebSocket DevTools session. ---> System.NullReferenceException: Object reference not set to an instance of an object..   Stack Trace:       at OpenQA.Selenium.DevTools.DevToolsDomains.InitializeDomains(Int32 protocolVersion, DevToolsSession session, Int32 versionRange)    at OpenQA.Selenium.DevTools.DevToolsDomains.InitializeDomains(Int32 protocolVersion, DevToolsSession session)    at OpenQA.Selenium.DevTools.DevToolsSession.StartSession(Int32 requestedProtocolVersion)    at OpenQA.Selenium.Chromium.ChromiumDriver.GetDevToolsSession(Int32 devToolsProtocolVersion) --- End of inner exception stack trace --- ```   ### Operating System  Windows Server 2022  ### Selenium version  .NET 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101.0.4951.15  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.15  ### Are you using Selenium Grid?  _No response_","closed","","jeffreyrivor","2022-04-27T21:31:00Z","2022-05-29T00:12:53Z"
"","10176","[🐛 Bug]: Informed driver port not being used - The port minus one is the port being used. Why?","### What happened?  The selected port for the ChromeDriver doesn't look right.   Why the port selected by the ChromeDriver receives a ` - 1` ?  ```ruby def socket_lock    @socket_lock ||= SocketLock.new(@port - 1, SOCKET_LOCK_TIMEOUT) end ``` I took a look at the documentation, but  I couldn't find a reason.   See https://github.com/SeleniumHQ/selenium/blob/e3e492af0c9d9c99ce31b9dc036dbf75327e6f30/rb/lib/selenium/webdriver/common/service_manager.rb  ### How can we reproduce the issue?  Start a ChromeDriver by choosing a busy port.  #### Example For this example, we're choosing port 9999.  First, let's make the port 9998 busy (port 9999 - 1)  python -m SimpleHTTPServer 9998   Second, let's try to instantiate the ChromeDriver in the port 9999 ```ruby  driver = Selenium::WebDriver.for(:chrome,  service:   Selenium::WebDriver::Chrome::Service.chrome(port: 9999)) ```   ### Relevant log output  ![image](https://user-images.githubusercontent.com/12430174/147362066-da01f177-6912-4507-ad7b-9204bdf070ca.png)     ### Operating System  Ubuntu 18.04  ### Selenium version  4.0.3  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  No","closed","I-defect,","RichardsonWTR","2021-12-23T14:31:52Z","2022-02-05T00:06:01Z"
"","10497","[🐛 Bug]: Unable to navigate to application URL on Internet Explorer Browser.","### What happened?  The script is stuck at initial WebDriver screen. Kindly find the below details, Selenium - 4.1.2 IE Driver - 4.0.0 IE Browser - IE 11  Note : The weird thing is that the same script working once in while.  ![image](https://user-images.githubusercontent.com/29259681/160979320-41beff38-604c-434f-b9b7-397f48ba9695.png) ![IE Version](https://user-images.githubusercontent.com/29259681/160979869-22ffc783-e581-4129-a068-7840f3965826.png)    ### How can we reproduce the issue?  ```shell Script :  import org.openqa.selenium.WebDriver; import org.openqa.selenium.ie.InternetExplorerDriver;  import io.github.bonigarcia.wdm.WebDriverManager;  public class IELaunchTest {  	public static void main(String[] args) { 		// TODO Auto-generated method stub 		WebDriverManager.iedriver().proxy(""XXX.XXX.XXX.XX:80"").arch32().setup(); 		WebDriver driver = new InternetExplorerDriver(); 		driver.get(""https://www.google.co.in/""); 		driver.manage().window().maximize(); 		driver.quit(); 		 	}  } ```   ### Relevant log output  ```shell SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Started InternetExplorerDriver server (32-bit) 4.0.0.0 Listening on port 57551 Only local connections are allowed Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'XXXXVDID0189', ip: 'XXX.XX.XX.XX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Command: [null, newSession {capabilities=[Capabilities {browserName: internet explorer, se:ieOptions: {}}], desiredCapabilities=Capabilities {browserName: internet explorer, se:ieOptions: {}}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:188) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:180) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:144) 	at IELaunchTest.main(IELaunchTest.java:11) Caused by: java.io.UncheckedIOException: java.io.IOException: Stream closed 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80) 	at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.Execution.executeSync(Execution.java:128) 	at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379) 	at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80) 	at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.Execution.executeSync(Execution.java:128) 	at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379) 	at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:110) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558) 	... 5 more Caused by: java.io.IOException: Stream closed 	at java.io.BufferedInputStream.getInIfOpen(Unknown Source) 	at java.io.BufferedInputStream.available(Unknown Source) 	at java.io.FilterInputStream.available(Unknown Source) 	at java.io.PushbackInputStream.available(Unknown Source) 	at io.netty.handler.stream.ChunkedStream.isEndOfInput(ChunkedStream.java:82) 	at io.netty.handler.stream.ChunkedStream.readChunk(ChunkedStream.java:109) 	at io.netty.handler.stream.ChunkedStream.readChunk(ChunkedStream.java:36) 	at io.netty.handler.stream.ChunkedWriteHandler.doFlush(ChunkedWriteHandler.java:229) 	at io.netty.handler.stream.ChunkedWriteHandler.flush(ChunkedWriteHandler.java:131) 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750) 	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765) 	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:790) 	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:758) 	at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1020) 	at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:311) 	at org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(NettyInputStreamBody.java:77) 	at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:433) 	at org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(NettyConnectListener.java:80) 	at org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(NettyConnectListener.java:156) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onSuccess(NettyChannelConnector.java:92) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:26) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605) 	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104) 	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:300) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:335) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Unknown Source) ```   ### Operating System  Window 10  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Internet Explorer  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  NA","closed","I-defect,","pbin1990","2022-03-31T05:17:17Z","2022-06-12T00:12:07Z"
"","10207","[🐛 Bug]: [java] FluentWait's sample usage refers to methods that have been removed","### What happened?  The sample usage for java's `FluentWait` class refers to the methods `withTimeout` and `pollingEvery` that take a `TimeUnit` argument. These methods have been removed in commit 502301edeb4c4caf27aad125e8e75da3f22691f1, and no longer exist.  ### How can we reproduce the issue?  ```shell Attempt to compile the code featured in `FluentWait`'s sample usage. ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Windows 10 (but should reproduce regardless of OS)  ### Selenium version  Noticed in Java 4.1.1, problem introduced in Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  No.","closed","needs-triaging,","mureinik","2021-12-31T09:05:04Z","2022-01-31T00:07:16Z"
"","10511","[🐛 Bug]: tags missing for 4.1.1-4.1.3","### What happened?  The official packages on e.g. PyPI have been updated with versions newer than 4.1.0, but the sources have not been tagged.  https://github.com/SeleniumHQ/selenium/tags  See also https://github.com/SeleniumHQ/selenium/issues/9917: issues like these are making it harder for downstreams to package selenium.  ### How can we reproduce the issue?  ```shell - Visit PyPi - pick a version - download the wheel - visit github - try to find the commit from which the wheel was built ```   ### Relevant log output  ```shell n/a ```   ### Operating System  all  ### Selenium version  4.1.1+  ### What are the browser(s) and version(s) where you see this issue?  n/a  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  no","closed","I-defect,","bollwyvl","2022-04-05T12:09:35Z","2022-05-06T00:12:21Z"
"","10371","[🐛 Bug]: Missing .NET documentation comments","### What happened?  The NuGet packages have no documentation comments at all. This affects all versions >= 4.0.0.  - v4.1.0:     ![grafik](https://user-images.githubusercontent.com/9693842/154506165-9f94741f-cc5a-467b-a7f7-267f036b8b63.png) - v3.141.0     ![grafik](https://user-images.githubusercontent.com/9693842/154506055-6203d5d1-3582-47f3-94a6-87673f3818e1.png)   ### How can we reproduce the issue?  ```shell - Install version 4.1.0 of the Selenium.Support package - Press F12 on any Selenium type -> no documentation comments - Downgrade to version 3.141.0 - Press F12 on any Selenium type -> documentation comments 🎉 ```   ### Relevant log output  ```shell - ```   ### Operating System  Windows 11  ### Selenium version  .NET 4.0.0, 4.0.1, 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  -  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.8000  ### Are you using Selenium Grid?  No","open","C-docs,","BaerMitUmlaut","2022-02-17T14:51:58Z","2022-06-01T20:37:44Z"
"","9993","[🐛 Bug]: Node.js bindings don't connect to a target","### What happened?  The Node.js example [in the docs](https://www.selenium.dev/documentation/support_packages/chrome_devtools/#emulate-geo-location) is not working as the bindings don't connect to a target. The script exists before Chrome return a response. If you add a wait (e.g. `await new Promise(resolve => setTimeout(resolve, 100))` you will see that it returns with:  ``` {""id"":1,""error"":{""code"":-32601,""message"":""'Emulation.setGeolocationOverride' wasn't found""} ```  It seems that the bindings don't attach to a target like other [bindings do](https://github.com/SeleniumHQ/selenium/blob/b8de36fdc3cc215fca14e0251bf8583556b5bffc/py/selenium/webdriver/common/bidi/cdp.py#L290), e.g. call `Target.attachToTarget` retrieve the session id and send this along at all times.    ### How can we reproduce the issue?  Run this code:  ```js const { Builder } = require(""selenium-webdriver"");  (async function geoLocationTest() {   const driver = await new Builder().usingServer('http://localhost:4444').forBrowser(""chrome"").build();   try {     await driver.get(""https://my-location.org/"");     const pageCdpConnection = await driver.createCDPConnection('page');     //Latitude and longitude of Tokyo, Japan     const coordinates = {       latitude: 35.689487,       longitude: 139.691706,       accuracy: 100,     };       await pageCdpConnection.execute(         ""Emulation.setGeolocationOverride"",         1,         coordinates       );       await new Promise(r => setTimeout(r, 1000))   } catch (e) {     console.log(e)   } finally {      await driver.quit();   } })();  and add to `node_modules/selenium-webdriver/devtools/CDPConnection.js` the following to the constructor: ```js wsConnection.on('message', (a) => console.log(a.toString())) ``` This will log the output mentioned above. ```   ### Relevant log output  ```shell n/a ```   ### Operating System  macOS  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95  ### What are the browser driver(s) and version(s) where you see this issue?  Selenium Grid with Chromedriver  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","christian-bromann","2021-10-28T10:25:22Z","2021-12-03T00:06:40Z"
"","10719","[🐛 Bug]: Grid node hangs with log error ""Expected to read a START_MAP but instead have: END. ""","### What happened?  The node can run for hours without issues before the error. But when the error appears in the grid log, the node doesn't recover and any attempt to create a new session fails with the same error. The best thing would be if this was fixed completely. If that is not possible then it would be good if the Node could recover after the error and keep functioning for future sessions.  ### How can we reproduce the issue?  ```shell It's a standard grid node on a Windows 10 VM (not Docker) with max 4 chrome browser sessions in the config. ```   ### Relevant log output  ```shell 03:39:33.502 WARN [SpanWrappedHttpHandler.execute] - Unable to execute request: Unable to parse: org.openqa.selenium.json.JsonException: Unable to parse:         at org.openqa.selenium.json.Json.toType(Json.java:57)         at org.openqa.selenium.json.Json.toType(Json.java:50)         at org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:49)         at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)         at org.openqa.selenium.remote.http.Route.execute(Route.java:68)         at org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)         at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)         at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)         at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)         at org.openqa.selenium.remote.http.Route.execute(Route.java:68)         at org.openqa.selenium.grid.node.Node.execute(Node.java:240)         at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)         at org.openqa.selenium.remote.http.Route.execute(Route.java:68)         at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)         at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)         at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)         at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)         at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)         at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)         at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)         at java.util.concurrent.FutureTask.run(Unknown Source)         at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)         at java.lang.Thread.run(Unknown Source) Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.grid.data.CreateSessionRequest Build info: version: '4.2.0', revision: '86eb611648' System info: host: 'Selenium-WebDri', ip: '10.169.54.29', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_333' Driver info: driver.version: unknown         at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61)         at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)         at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)         at org.openqa.selenium.json.Json.toType(Json.java:71)         at org.openqa.selenium.json.Json.toType(Json.java:55)         ... 23 more Caused by: java.lang.reflect.InvocationTargetException         at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59)         ... 27 more Caused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: Build info: version: '4.2.0', revision: '86eb611648' System info: host: 'Selenium-WebDri', ip: '10.169.54.29', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_333' Driver info: driver.version: unknown         at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:307)         at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:229)         at org.openqa.selenium.grid.data.CreateSessionRequest.fromJson(CreateSessionRequest.java:69)         ... 31 more 03:39:33.502 WARN [SeleniumSpanExporter$1.lambda$export$1] - Unable to execute request: Unable to parse: 03:39:33.518 WARN [SeleniumSpanExporter$1.lambda$export$1] - org.openqa.selenium.json.JsonException: Unable to parse:         at org.openqa.selenium.json.Json.toType(Json.java:57)         at org.openqa.selenium.json.Json.toType(Json.java:50)         at org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:49)         at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)         at org.openqa.selenium.remote.http.Route.execute(Route.java:68)         at org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)         at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)         at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)         at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)         at org.openqa.selenium.remote.http.Route.execute(Route.java:68)         at org.openqa.selenium.grid.node.Node.execute(Node.java:240)         at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)         at org.openqa.selenium.remote.http.Route.execute(Route.java:68)         at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)         at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)         at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)         at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)         at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)         at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)         at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)         at java.util.concurrent.FutureTask.run(Unknown Source)         at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)         at java.lang.Thread.run(Unknown Source) Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.grid.data.CreateSessionRequest Build info: version: '4.2.0', revision: '86eb611648' System info: host: 'Selenium-WebDri', ip: '10.169.54.29', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_333' Driver info: driver.version: unknown         at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61)         at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)         at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)         at org.openqa.selenium.json.Json.toType(Json.java:71)         at org.openqa.selenium.json.Json.toType(Json.java:55)         ... 23 more Caused by: java.lang.reflect.InvocationTargetException         at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59)         ... 27 more Caused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: Build info: version: '4.2.0', revision: '86eb611648' System info: host: 'Selenium-WebDri', ip: '10.169.54.29', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_333' Driver info: driver.version: unknown         at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:307)         at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:229)         at org.openqa.selenium.grid.data.CreateSessionRequest.fromJson(CreateSessionRequest.java:69)         ... 31 more  03:39:33.518 WARN [SeleniumSpanExporter$1.lambda$export$3] - {""traceId"": ""ba8abd604e62b5c84ca44944a2dfde2c"",""eventTime"": 1654054773485731300,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request: Unable to parse: "",""exception.stacktrace"": ""org.openqa.selenium.json.JsonException: Unable to parse: \r\n\tat org.openqa.selenium.json.Json.toType(Json.java:57)\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:50)\r\n\tat org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:49)\r\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)\r\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\r\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\r\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\nCaused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.grid.data.CreateSessionRequest\nBuild info: version: '4.2.0', revision: '86eb611648'\nSystem info: host: 'Selenium-WebDri', ip: '10.169.54.29', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_333'\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)\r\n\tat org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:71)\r\n\tat org.openqa.selenium.json.Json.toType(Json.java:55)\r\n\t... 23 more\r\nCaused by: java.lang.reflect.InvocationTargetException\r\n\tat sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n\tat java.lang.reflect.Method.invoke(Unknown Source)\r\n\tat org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59)\r\n\t... 27 more\r\nCaused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read: \nBuild info: version: '4.2.0', revision: '86eb611648'\nSystem info: host: 'Selenium-WebDri', ip: '10.169.54.29', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_333'\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.json.JsonInput.expect(JsonInput.java:307)\r\n\tat org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:229)\r\n\tat org.openqa.selenium.grid.data.CreateSessionRequest.fromJson(CreateSessionRequest.java:69)\r\n\t... 31 more\r\n"",""exception.type"": ""org.openqa.selenium.json.JsonException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.security.RequiresSecretFilter$$Lambda$424\u002f246105376"",""http.host"": ""10.169.54.29:5555"",""http.method"": ""POST"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fse\u002fgrid\u002fnode\u002fsession"",""http.user_agent"": ""selenium\u002f4.2.0 (java unix)""}} ```   ### Operating System  Windows 10  ### Selenium version  4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.61  ### Are you using Selenium Grid?  4.2.0","closed","I-defect,","ndrsst","2022-06-01T08:45:05Z","2022-07-03T00:14:08Z"
"","10612","[🐛 Bug]: 4.1.4 Released but only working with Python 3.8+","### What happened?  The new release 4.1.4 is out and is only usable for Python 3.8+ because it relies on version **'Literal' from 'typing'**  which is only available on version 3.8+ of Python.  cannot import name 'Literal' from 'typing' (/usr/local/lib/python3.7/typing.py)  ### How can we reproduce the issue?  ```shell Just run a python script using selenium with python < 3.8 ```   ### Relevant log output  ```shell 'Literal' from 'typing' ```   ### Operating System  MacOS,Linux  ### Selenium version  4.1.4  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","fofiedelly","2022-05-05T13:32:05Z","2022-06-05T00:14:02Z"
"","10043","[🐛 Bug]: IEDriverServer 4.0.0 doesn't work with native events disabled","### What happened?  The last version of IEDriver that worked fine with native events disabled was 3.150.1.  ### How can we reproduce the issue?  ```shell InternetExplorerOptions ieOptions = new InternetExplorerOptions(); ieOptions.disableNativeEvents(); // IMPORTANT WebDriver driver = new InternetExplorerDriver(ieOptions); driver.get(""http://www.google.com""); new WebDriverWait(driver, Duration.ofMillis(10000), Duration.ofMillis(100)).until( 	ExpectedConditions.visibilityOfElementLocated(By.name(""q""))); WebElement searchField = driver.findElement(By.name(""q"")); searchField.sendKeys(""test""); searchField.submit(); new WebDriverWait(driver, Duration.ofMillis(10000), Duration.ofMillis(100)).until( 	ExpectedConditions.titleContains(""test"")); driver.quit(); ```   ### Relevant log output  ```shell Started InternetExplorerDriver server (32-bit) 4.0.0.0 Listening on port 56213 Only local connections are allowed Nov 15, 2021 12:27:55 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" org.openqa.selenium.TimeoutException: Expected condition failed: waiting for title to contain ""test"". Current title: ""Google"" (tried for 10 second(s) with 100 milliseconds interval) Build info: version: '4.0.0', revision: '3a21814679' System info: host: '...', ip: '...', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: false, ie.browserCommandLineSwitches: , ie.edgechromium: false, ie.edgepath: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:56213/, nativeEvents: false, requireWindowFocus: false}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 80ecfb08-dd39-4fe3-b1d8-cbdcba770191 	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231) 	at Test.main(Test.java:24) ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  IE 11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  no","closed","I-defect,","JohnA2","2021-11-15T17:46:10Z","2022-06-11T00:11:02Z"
"","9960","[🐛 Bug]: Java binding does not support calling quit in shutdown hook","### What happened?  The Java binding does not support calling quit in shutdown hook since 4.0.0-beta-2.  It appears that the java binding has a shutdown hook that closes netty clients and this hook is executed prior to a user-registered hook designed to quit the driver.  ### How can we reproduce the issue?  ```shell static void main(String[] args) {     WebDriver driver = new FirefoxDriver();     Runtime.getRuntime().addShutdownHook(new Thread(driver::quit));     driver.get(""http://localhost/""); } ```   ### Relevant log output  ```shell The browser remains open. ```   ### Operating System  Windows 10  ### Selenium version  4.0.0-beta-2 and later  ### What are the browser(s) and version(s) where you see this issue?  Firefox  ### What are the browser driver(s) and version(s) where you see this issue?  -  ### Are you using Selenium Grid?  -","closed","I-defect,","barancev","2021-10-20T16:14:27Z","2021-12-09T00:06:53Z"
"","10833","[🐛 Bug]: InvalidSelectorException is handled differently in Java & C# / Python bindings","### What happened?  The InvalidSelectorException in Java derives from NoSuchElementException, a FluentWait will retry until the timeout is reached. The InvalidSelectorException in C# derives from NoSuchElementException, a WebDriverWait will retry until the timeout is reached. The InvalidSelectorException in Python derives from WebDriverException, a wait will instantly fail.  This is confusing in my mind, is it correct to derive InvalidSelectorException from NoSuchElementException? Will a invalid selector, repair it self over time?  ### How can we reproduce the issue?  ```shell search By.xpath(""]"") using a FluentWait / WebDriverWait / wait ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Windows 10 x64  ### Selenium version  4.x.x  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  _No response_","open","I-defect,","joerg1985","2022-06-30T15:08:07Z","2022-07-01T01:45:16Z"
"","10731","Codespell report for ""Selenium"" (on fossies.org)","### What happened?  The FOSS server [fossies.org](https://fossies.org) - supporting now also the [Selenium](https://fossies.org/linux/selenium) project - offers among others a feature named ""[Source code misspelling reports](https://fossies.org/features.html#codespell)"". Such reports are normally only generated on request, but as Fossies administrator I have just created for testing purposes such a [codespell](https://github.com/codespell-project/codespell) based analysis for the ""Selenium"" development version:   https://fossies.org/linux/test/selenium-trunk.tar.gz/codespell.html  That version-independent URL should redirect always to the report for the latest ""trunk"" version identified by the short GitHub commit ID and a year-month-day string (YYMMDD) representing the according git pull date (mostly = commit date). The data are residing within a special restricted ""test"" folder that isn't really integrated into the standard Fossies services and should also not be accessible to search engines. The report should be available at least for some weeks and is continuously updated (currently with a half-hourly refresh rate).  By the way, the context type of the spelling errors and typos are marked by a single character (within the sortable column ""T""): The less interesting, probably not user visible ones (in ""comments"") are greyed, while the probably more interesting ones are black-colored. Especially interesting may be unassigned errors marked by a ""?"" since they may be contained in the source code itself. Some more according information is offered by a tooltip if the mouse is over the string ""error context type character"" above the table, over the ""T"" in the table header or over such a context character itself within the table. If JavaScript is enabled all table columns are sortable.  Although after a first review some obviously wrong matches (""False Positives"" = FPs) are already filtered out (ignored) please inform me if you find more of them so that I can exclude them if applicable.  Just for information there are also three supplemental pages showing some used ""codespell"" [configuration details](https://fossies.org/linux/test/selenium-trunk.tar.gz/codespell_conf.html), all obvious [false positives](https://fossies.org/linux/test/selenium-trunk.tar.gz/codespell_fps.html) and a [misspelling history](https://fossies.org/linux/test/selenium-trunk.tar.gz/codespell_hist.html) (log).  OK, spelling corrections certainly have a low priority, but they may also contribute to the overall quality of a software project. So I hope that the report can nevertheless be a little bit useful.  ### How can we reproduce the issue?  ```shell N/A ```   ### Relevant log output  ```shell N/A ```   ### Operating System  N/A  ### Selenium version  N/A  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  N/A","closed","","jschleus","2022-06-03T12:38:18Z","2022-07-08T00:14:18Z"
"","10352","[🐛 Bug]: Upload fails with ""unknown command"" for ""se/file"" if LocalFileDetector is used with ChromeDriver","### What happened?  The following test works fine for uploading a file (as long as ""image.png"" exists) ```         WebDriver driver = new ChromeDriver();         try {             driver.get(""https://artur.app.fi/upload.html"");             WebElement uploadElement = driver.findElement(By.tagName(""input""));             File imageFile = new File(""image.png"");             uploadElement.sendKeys(imageFile.getAbsolutePath());             WebElement image = driver.findElement(By.tagName(""img""));             Assert.assertNotNull(image.getAttribute(""src""));         } finally {             driver.close();         } ```  However if you add ``` if (uploadElement instanceof RemoteWebElement) {     ((RemoteWebElement) uploadElement).setFileDetector(new LocalFileDetector()); } ``` to support uploads to a cluster, the above test stops working and fails with ``` org.openqa.selenium.UnsupportedCommandException: unknown command: unknown command: session/f1cfdffffa23ffd675299c0f666f2534/se/file ```   ### How can we reproduce the issue?  ```shell WebDriver driver = new ChromeDriver();         try {             driver.get(""https://artur.app.fi/upload.html"");             WebElement uploadElement = driver.findElement(By.tagName(""input""));             File imageFile = new File(""image.png"");             if (uploadElement instanceof RemoteWebElement) {                 ((RemoteWebElement) uploadElement).setFileDetector(new LocalFileDetector());             }             uploadElement.sendKeys(imageFile.getAbsolutePath());             WebElement image = driver.findElement(By.tagName(""img""));             Assert.assertNotNull(image.getAttribute(""src""));         } finally {             driver.close();         } ``` ```   ### Relevant log output  ```shell org.openqa.selenium.UnsupportedCommandException: unknown command: unknown command: session/e916ba8688416f542f4e8acc8435bdb8/se/file Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: '...', ip: '...', os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '12.2', java.version: '11.0.12' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [e916ba8688416f542f4e8acc8435bdb8, uploadFile {file=}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 98.0.4758.80, chrome: {chromedriverVersion: 97.0.4692.71 (adefa7837d02a..., userDataDir: /var/folders/3r/3_0g1bhn44j...}, goog:chromeOptions: {debuggerAddress: localhost:57736}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), se:cdp: ws://localhost:57736/devtoo..., se:cdpVersion: 98.0.4758.80, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Element: [[ChromeDriver: chrome on MAC (e916ba8688416f542f4e8acc8435bdb8)] -] tag name: input] ```   ### Operating System  macOS Big Sur  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  No","closed","","Artur-","2022-02-10T08:14:40Z","2022-03-13T00:09:57Z"
"","10047","[🐛 Bug]: input type file, upload error","### What happened?  The file is not loaded via the file type input when using RemoteWebDriver.  If you use WebDriver and the corresponding browser instead of RemoteWebDriver, then everything works.  ### How can we reproduce the issue?  ```shell options = ChromeOptions() options.binary_location = ""GoogleChromePortable/App/Chrome-bin/chrome.exe""  driver = RemoteWebDriver(CHROME_DRIVER_ADDRESS, options=options)  url = """" driver.get(url) inp = driver.find_elements(By.TAG_NAME, ""input"") print(inp[8].get_attribute(""type"")) inp[8].send_keys(os.getcwd() + ""\TypeFile.txt"") time.sleep(5) driver.quit() # inp[8] - input type file ```   ### Relevant log output  ```shell file Traceback (most recent call last):   File ""C:\Users\dimau\PycharmProjects\webscanner\test.py"", line 35, in      inp[8].send_keys(os.getcwd() + ""\TypeFile.txt"")   File ""C:\Users\dimau\PycharmProjects\webscanner\venv\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 536, in send_keys     remote_files.append(self._upload(file))   File ""C:\Users\dimau\PycharmProjects\webscanner\venv\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 768, in _upload     raise e   File ""C:\Users\dimau\PycharmProjects\webscanner\venv\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 759, in _upload     return self._execute(Command.UPLOAD_FILE, {'file': content})['value']   File ""C:\Users\dimau\PycharmProjects\webscanner\venv\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 693, in _execute     return self._parent.execute(command, params)   File ""C:\Users\dimau\PycharmProjects\webscanner\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""C:\Users\dimau\PycharmProjects\webscanner\venv\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown command: unknown command: session/7a484bba05eb391ec543922ed6438333/se/file Stacktrace: Backtrace: 	Ordinal0 [0x005FD403+2479107] 	Ordinal0 [0x00597D51+2063697] 	Ordinal0 [0x004A20C8+1056968] 	Ordinal0 [0x004E371E+1324830] 	Ordinal0 [0x004E351D+1324317] 	Ordinal0 [0x00484D3F+937279] 	Ordinal0 [0x00485246+938566] 	Ordinal0 [0x00485521+939297] 	GetHandleVerifier [0x0077F3F6+1531734] 	GetHandleVerifier [0x0082E9AE+2249998] 	GetHandleVerifier [0x006839AB+501003] 	GetHandleVerifier [0x00682A29+497033] 	Ordinal0 [0x0059D11D+2085149] 	Ordinal0 [0x00484ADE+936670] 	Ordinal0 [0x004846C0+935616] 	GetHandleVerifier [0x00855E4C+2410924] 	BaseThreadInitThunk [0x75B7FA29+25] 	RtlGetAppContainerNamedObjectPath [0x77277A9E+286] 	RtlGetAppContainerNamedObjectPath [0x77277A6E+238]   Process finished with exit code 1 ```   ### Operating System  Windows 10  ### Selenium version  4.0 Python  ### What are the browser(s) and version(s) where you see this issue?  Chrome 93  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 93  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","nord98d","2021-11-16T15:31:34Z","2021-12-19T00:07:54Z"
"","10339","[🐛 Bug]: When Edge IEmode is run in parallel, one of the operations will conflict with the other.","### What happened?  The CI system automatically runs UI tests in parallel. When using EdgeIE mode, one test fails. One Navigate operation will affect the other browser.   ### How can we reproduce the issue?  I created a simple, single console program. [Here](https://github.com/HiroyukiSakoh/ReproEdgeIEModeParallel/blob/main/ReproEdgeIEModeParallel/Program.cs)  I ran the caller's program separately, and got the same result.   ### Relevant log output  Log of the execution of the reproducing program. [Here](https://github.com/HiroyukiSakoh/ReproEdgeIEModeParallel/tree/main/Log_v4.0.0)   ### Operating System  Windows10,Windows11  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 98.0.1108.43  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver 4.0.0  ### Are you using Selenium Grid?  _No response_","closed","G-msedgedriver,","HiroyukiSakoh","2022-02-08T16:17:05Z","2022-05-13T00:14:33Z"
"","10139","[🐛 Bug]: The c-nodejs documentation describes a method setDownloadPath that does not seem to exist in TypeScript","### What happened?  The C-nodejs [documentation](https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/chrome_exports_Driver.html#setDownloadPath) describes the method `setDownloadPath` but it does not appear in the definition of the WebDriver in TypeScript.   ### How can we reproduce the issue?  ```shell const {Builder} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('chrome').build();   await driver.setDownloadPath('./temp');   await driver.quit(); })(); ```   ### Relevant log output  ```shell Property 'setDownloadPath' does not exist on type 'WebDriver'. ```   ### Operating System  macOS Monterey  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96  ### Are you using Selenium Grid?  _No response_","open","I-defect,","doberkofler","2021-12-13T10:54:23Z","2021-12-26T02:36:48Z"
"","10299","[🐛 Bug]: Edge is started but not working with standalone server","### What happened?  The browser is started and will remain open for some seconds, a Exception is raised.  The server logs contains some errors, see logs textbox below.  ### How can we reproduce the issue?  ```shell 1. Start the server  java -Dwebdriver.gecko.driver=geckodriver.exe -Dwebdriver.edge.driver=msedgedriver.exe -jar selenium-server-4.1.1.jar standalone --port 1234  2. Run this code         RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://127.0.0.1:1234""), new EdgeOptions());          driver.navigate().to(""https://www.google.de/"");          driver.quit(); ```   ### Relevant log output  ```shell ------------------------------ - Java Output  ------------------------------  Jan. 28, 2022 4:46:10 PM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFORMATION: Using OpenTelemetry for tracing SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: DevToolsActivePort file doesn't exist Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'CSTRLLE47720226', ip: '53.206.62.157', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8' Driver info: driver.version: unknown Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'CSTRLLE47720226', ip: '53.206.62.157', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8' Driver info: driver.version: unknown Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'CSTRLLE47720226', ip: '53.206.62.157', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: MicrosoftEdge, ms:edgeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: MicrosoftEdge, ms:edgeOptions: {args: [], extensions: []}}}] Capabilities {} 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:230) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:151) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:138) 	at Issue9671.main(Issue9671.java:32)   ------------------------------ - Server Output ------------------------------  16:45:55.260 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 16:45:55.267 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 16:46:02.306 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 16:46:02.308 WARN [NodeOptions.getSessionFactories] - Overriding max recommended number of 8 concurrent sessions. Session stability and reliability might suffer! 16:46:02.309 WARN [NodeOptions.getSessionFactories] - One browser session is recommended per available processor. Safari is always limited to 1 session per host. 16:46:02.310 WARN [NodeOptions.getSessionFactories] - Overriding this value for Internet Explorer is not recommended. Issues related to parallel testing with Internet Explored won't be accepted. 16:46:02.310 WARN [NodeOptions.getSessionFactories] - Double check if enabling 'override-max-sessions' is really needed 16:46:02.310 WARN [NodeOptions.getSessionFactories] - Max sessions set to 128 16:46:02.351 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 16:46:02.395 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox""} 128 times 16:46:02.397 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 128 times 16:46:03.373 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 16:46:03.399 INFO [LocalDistributor.add] - Added node db314629-f4ef-4129-8fe8-cf2052cc88d0 at http://192.168.1.25:1234. Health check every 120s 16:46:03.400 INFO [GridModel.setAvailability] - Switching node db314629-f4ef-4129-8fe8-cf2052cc88d0 (uri: http://192.168.1.25:1234) from DOWN to UP 16:46:06.612 INFO [Standalone.execute] - Started Selenium Standalone 4.1.1 (revision e8fcc2cecf): http://192.168.1.25:1234 16:46:17.343 INFO [LocalDistributor.newSession] - Session request received by the distributor:  [Capabilities {browserName: MicrosoftEdge, ms:edgeOptions: {args: [], extensions: []}}] Starting MSEdgeDriver 97.0.1072.55 (ce3bf3364880558d4945082f4ac36e01fe36716e) on port 59223 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping MSEdgeDriver safe. MSEdgeDriver was started successfully. 16:47:20.889 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""959917a2efdc9d3b23f18bedcb93556a"",""eventTime"": 1643384840318688700,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:59223"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: DevToolsActivePort file doesn't exist\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'mybox', ip: '192.168.1.25', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: DevToolsActivePort file doesn't exist\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'mybox', ip: '192.168.1.25', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.8'\nDriver info: driver.version: unknown\r\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\r\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)\r\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)\r\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:131)\r\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:65)\r\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\r\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:314)\r\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.startSession(LocalDistributor.java:513)\r\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.newSession(LocalDistributor.java:440)\r\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.handleNewSessionRequest(LocalDistributor.java:648)\r\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.lambda$run$1(LocalDistributor.java:612)\r\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:834)\r\n"",""exception.type"": ""org.openqa.selenium.SessionNotCreatedException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""browserName\"": \""MicrosoftEdge\"",\""ms:edgeOptions\"": {\""args\"": [  ],  \""extensions\"": [    ]    }    }\n""}}  16:47:20.899 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""959917a2efdc9d3b23f18bedcb93556a"",""eventTime"": 1643384840898789500,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"",""http.host"": ""127.0.0.1:1234"",""http.method"": ""POST"",""http.request_content_length"": ""371"",""http.scheme"": ""HTTP"",""http.status_code"": 500,""http.target"": ""\u002fsession"",""http.user_agent"": ""selenium\u002f4.1.1 (java windows)""}} ```   ### Operating System  Windows 10 x64  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Edge x86 97.0.1072.55  ### What are the browser driver(s) and version(s) where you see this issue?  msedgedriver.exe 97.0.1072.55  ### Are you using Selenium Grid?  selenium-server-4.1.1.jar","closed","I-defect,","joerg1985","2022-01-28T15:58:06Z","2022-03-04T00:10:55Z"
"","10502","[🐛 Bug]:","### What happened?  The below **java.lang.NoClassDefFoundError for InvalidCoordinatesException** class is generated and no further execution of the code happens while using **selenium-java 4.1.3 version.jar** for creating a HTMLUnitDriver object.  Please refer to the below code snippet. Also, observed that both **selenium-api-4.1.3.jar** and 4.1.3 selenium javadoc are missing InvalidCoordinatesException class reference.  https://www.javadoc.io/doc/org.seleniumhq.selenium/selenium-api/latest/org/openqa/selenium/WebDriverException.html  https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/WebDriverException.html  **Observation**: When a downgraded selenium-java and selenium-api version 4.1.2 are used the below code snippet can be executed even when the below java.lang.NoClassDefFoundError for InvalidCoordinatesException class exception is produced.   ------------------------------------------------------------------- Exception received while executing the below code snippet. ------------------------------------------------------------------- Exception in thread ""pool-1-thread-1"" java.lang.NoClassDefFoundError: org/openqa/selenium/interactions/InvalidCoordinatesException 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.resetKeyboardAndMouseState(HtmlUnitDriver.java:605) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:600) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.lambda$get$7(HtmlUnitDriver.java:560) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.lambda$runAsync$0(HtmlUnitDriver.java:292) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) 	at java.base/java.lang.Thread.run(Thread.java:833) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.interactions.InvalidCoordinatesException 	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) 	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) 	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) 	... 7 more     ### How can we reproduce the issue?  ```shell import org.openqa.selenium.htmlunit.HtmlUnitDriver; import org.junit.jupiter.api.Test; import org.openqa.selenium.ie.InternetExplorerDriver; import com.gargoylesoftware.htmlunit.BrowserVersion; import com.gargoylesoftware.htmlunit.WebClient;  public class InstallDriversTest {  @Test public void htmlUnitDriver() { HtmlUnitDriver driver = new HtmlUnitDriver(BrowserVersion.EDGE); driver.get(""https://htmlunit.sourceforge.io/""); } } ```   ### Relevant log output  ```shell Exception in thread ""pool-1-thread-1"" java.lang.NoClassDefFoundError: org/openqa/selenium/interactions/InvalidCoordinatesException 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.resetKeyboardAndMouseState(HtmlUnitDriver.java:605) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:600) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.lambda$get$7(HtmlUnitDriver.java:560) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.lambda$runAsync$0(HtmlUnitDriver.java:292) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) 	at java.base/java.lang.Thread.run(Thread.java:833) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.interactions.InvalidCoordinatesException 	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) 	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) 	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) 	... 7 more ```   ### Operating System  windows10  ### Selenium version  **selenium-java-4.1.3.jar, selenium-api-4.1.3.jar, htmlunit-driver-3.60.0.jar**  ### What are the browser(s) and version(s) where you see this issue?  HTMLUnitDriver  ### What are the browser driver(s) and version(s) where you see this issue?  **Edge** Version = 99.0.1150.55,  **Chrome** Version= 99.0.4844.84  ### Are you using Selenium Grid?  None","closed","","ski123786","2022-03-31T21:47:53Z","2022-05-03T00:11:08Z"
"","10126","[🐛 Bug]: Update .NET API Docs","### What happened?  The available stable API version for C# is 4.1.0, but when I open the docs and navigate to the ChromeDriver section, the content is for version 3.1.0. This was exceptionally confusing for me as numerous methods have been removed, but they are listed in the docs, so I couldn't figure out why the methods were not available.  ### How can we reproduce the issue?  ```shell Navigate to ChromeDriver section of docs https://www.selenium.dev/selenium/docs/api/dotnet/index.html ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664  ### Are you using Selenium Grid?  _No response_","open","C-docs,","JonathonAnderson","2021-12-10T03:53:42Z","2021-12-26T07:34:04Z"
"","10475","[🐛 Bug]: fullscreen_window() in combination with options.set_preference() is not working","### What happened?  The aim in my project is to get a kiosk-like fullscreen firefox that does not show any menu, search or address bar, even if you hover with the mouse over the top screen. The only way to get out of the fullscreen should be by pressing the F11 key.  To achieve that I already tried the following: [https://support.mozilla.org/en-US/questions/1323320 ](https://support.mozilla.org/en-US/questions/1323320)  This works fine when using firefox without the webdriver. As far as I know the use of specific profiles has been deprecated, so the chrome folder with the userChrome.css will not be copied, hence it will not be taken into account when firefox is called via selenium/geckodriver.  The next approach was using firefox preferences via Options(). There is a way to prevent the bars from showing up by using  ´  full-screen-api.ignore-widgets | true -- | --   ´  This also works fine, but in combination with the command driver.fullscreen_window() it ends up in a windowed firefox which is not fullscreen nor maximized.  I then tried to first maximize the window and then calling the fullscreen command, but even with that it first maximizes the window and subsequently ends up in a smaller windowed firefox which always has a certain size.  I ended up using pyautogui.press('f11'), but that really should not be the answer to the problem. Why not using Chrome and chromedriver? Because I'd like to stick with python and firefox.  Below you will find the code with testing an existing firefox profile.  ### How can we reproduce the issue?  ```shell options=Options() options.Profile='C:/Users/Tissi/AppData/Roaming/Mozilla/Firefox/Profiles/xx513scw.Selenium_Test' options.binary_location = 'C:/Program Files/Mozilla Firefox/firefox.exe' options.set_preference(""full-screen-api.ignore-widgets"", True) service = Service(r'C:\Python310x64\geckodriver') driver = webdriver.Firefox(service=service, options=options) driver.maximize_window() driver.fullscreen_window() ```   ### Relevant log output  ```shell I do not have any log. ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Firefox 98.0.1. 64-bit  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0 (2021-09-16, d372710b98a6)  ### Are you using Selenium Grid?  Not applicable","closed","I-question,","tissi-2","2022-03-24T14:35:11Z","2022-04-24T00:11:59Z"
"","10623","[🐛 Bug]: Wrong type for screenshot_as_png","### What happened?  The `WebElement` class in `selenium/webdriver/remote/webelement.py` file has a property `screenshot_as_png` which declare the return type as `str`, but it returns the output of `b64decode` method which returns `bytes`.  See the `screenshot_as_png` source code in selenium 4.1.5 package. It looks like this one:  ```python     @property     def screenshot_as_png(self) -> str:         """"""         Gets the screenshot of the current element as a binary data.          :Usage:             ::                  element_png = element.screenshot_as_png         """"""         return b64decode(self.screenshot_as_base64.encode('ascii'))  ``` So the `screenshot_as_png` seems to return `str` but in runtime it returns `bytes`. The `str` type for return value should be changed to `bytes`.  If you run the example below, then it works as expected - the screenshot variable is `bytes` but PyCharm (and mypy) complains for line 10 that `Expected type 'bytes', got 'str' instead ` which is not true in runtime.  ### How can we reproduce the issue?  ```shell from chromedriver_binary.utils import get_chromedriver_path from selenium import webdriver from selenium.webdriver.common.by import By   def test():   driver = webdriver.Chrome(executable_path=get_chromedriver_path() + '/chromedriver')   driver.get('http://www.example.com/')   element = driver.find_element(by=By.TAG_NAME, value='h1')   screenshot:bytes = element.screenshot_as_png   print(type(screenshot))   if __name__ == '__main__':   test() ```   ### Relevant log output  ```shell No log needed. ```   ### Operating System  Gentoo Linux  ### Selenium version  Python 4.1.5  ### What are the browser(s) and version(s) where you see this issue?  it's not relevant  ### What are the browser driver(s) and version(s) where you see this issue?  it's not relevant  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","eNcacz","2022-05-09T15:46:25Z","2022-06-09T00:11:19Z"
"","10165","[🐛 Bug]: What happened to the Selenium Python API Documentation?","### What happened?  The [![SeleniumPyDocumentation](https://user-images.githubusercontent.com/26503213/146682543-f4f890f6-e7c5-4cd6-9353-3651f40712eb.png)](https://www.selenium.dev/selenium/docs/api/py/api.html#selenium-documentation) seems to have been taken down partially?  Any reason to take it down?  ### How can we reproduce the issue?  ```shell Access the [Selenium Python API Documentation](https://www.selenium.dev/selenium/docs/api/py/api.html) link. ```   ### Relevant log output  ```shell N/A ```   ### Operating System  N/A  ### Selenium version  N/A  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Debanjan-B","2021-12-19T16:25:27Z","2022-01-24T00:07:40Z"
"","9965","[🐛 Bug]: Selenium W3C dialect creating issue when I draw something on canvas","### What happened?  Thank you for helping in advance.  The issue is when w3c is true, all the actions performed are from center of the canvas, i.e. the drawing starts from the center of the canvas and end also at the center of the canvas. But the same is not true in case w3c is false because in case w3c is false the start and end are on top left corner of the element.  I just wanted to understand, is this behavior of selenium w3c is intentional or it's a bug.  Any suggestion will be really helpful. Thank you again.  ### How can we reproduce the issue?  ```shell import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.interactions.Actions;  public class MouseActions {    public static void main(String[] args) {     System.setProperty(""webdriver.chrome.driver"", ""assets\\drivers\\chromedriver_94.exe"");      // In the build.gradle     // implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'      ChromeOptions chromeOptions = new ChromeOptions();     chromeOptions.setExperimentalOption(""w3c"", true);      WebDriver driver = new ChromeDriver(chromeOptions);     driver.manage().window().maximize();     driver.get(""https://sketchtoy.com/"");      // Canvas element     WebElement element = driver.findElement(By.xpath(""//div[@class='sketch-canvas-container']/canvas""));     Actions builder = new Actions(driver);      builder.moveToElement(element, 10, 10).perform();     builder.clickAndHold().perform();     builder.moveByOffset(150, 50).perform();     builder.pause(5000).perform();      driver.quit();    } } ```   ### Relevant log output  ```shell ============== When W3C is True ============== Starting ChromeDriver 94.0.4606.61 (418b78f5838ed0b1c69bb4e51ea0252171854915-refs/branch-heads/4606@{#1204}) on port 11386 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Oct 21, 2021 2:58:25 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Oct 21, 2021 2:59:24 PM org.openqa.selenium.interactions.Actions moveToElement INFO: When using the W3C Action commands, offsets are from the center of element  ============== When W3C is False============== Starting ChromeDriver 94.0.4606.61 (418b78f5838ed0b1c69bb4e51ea0252171854915-refs/branch-heads/4606@{#1204}) on port 28299 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Oct 21, 2021 2:55:04 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Oct 21, 2021 2:55:39 PM org.openqa.selenium.interactions.Actions moveToElement INFO: When using the W3C Action commands, offsets are from the center of element ```   ### Operating System  Windows 10  ### Selenium version  3.141.59  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94.0.4606.81  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 94.0.4606.81  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","AMP-BH","2021-10-21T09:32:08Z","2022-01-09T00:08:00Z"
"","10079","[🐛 Bug]: selenium 4.0: find_element returning dictionary instead of WebElement (Win App Driver)","### What happened?  Tested with Win App Driver 1.2.99 and Appium-Python-Client 2.0.0. Code: driver.find_element(By.XPATH, ) Return: {'ELEMENT': '42.1312384.4.2'} ![image](https://user-images.githubusercontent.com/18415164/143203722-6cc03cfd-0f72-45a2-a411-b6cafaa8e598.png)   ### How can we reproduce the issue?  ```shell Code: driver.find_element(By.XPATH, ) Return: {'ELEMENT': '42.1312384.4.2'} ```   ### Relevant log output  ```shell self =  session =       def go_to_display_settings_page(self, session):         jjj = session.find_element(By.XPATH, ""//Window[@Name='Settings'][@AutomationId='TitleBar']/Button[@Name='Maximize Settings'][@AutomationId='Maximize']"") >       jjj.click() E       AttributeError: 'dict' object has no attribute 'click' ```   ### Operating System  OS: Win10 (Version: 21H1, Build: 19043.1348)  ### Selenium version  Selenium 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  No Browser  ### What are the browser driver(s) and version(s) where you see this issue?  Win App Driver 1.2.99  ### Are you using Selenium Grid?  No","closed","needs-triaging,","CandyLuWang","2021-11-24T08:52:04Z","2021-12-25T00:07:03Z"
"","10143","[🐛 Bug]: Selenium::WebDriver::Error:: on Chrome headless execution","### What happened?  Test execution on headless Chrome using Watir v7.1.0 gives Selenium WebDriver exception but works just fine when the same test script is run opening Chrome.  ### Additional findings At my work script when I do `element.click` I get `Selenium::WebDriver::Error::ElementClickInterceptedError: element click intercepted: Element is not clickable at point (-250, 18)` only when on headless. ``` element.present? #=> true element.obscured? #=> false element.located? #=> true ``` #### Selenium Log ``` 2021-12-10 23:18:41 INFO Selenium -> POST session/17c5881585ba86904574800ef4f3f394/element/4ef1bca4-b638-4ee2-b988-5737329486c4/click 2021-12-10 23:18:42 INFO Selenium  POST session 2021-12-13 19:46:27 INFO Selenium    >>> http://127.0.0.1:9516/session | {""capabilities"":{""alwaysMatch"":{""browserName"":""chrome"",""unhandledPromptBehavior"":""ignore"",""goog:chromeOptions"":{""args"":[""--headless"",""--disable-gpu"",""--no-sandbox""]}}}} 2021-12-13 19:46:28 INFO Selenium  POST session/5b6b502e70bd7314227c4386f7c8680e/url 2021-12-13 19:46:28 INFO Selenium    >>> http://127.0.0.1:9516/session/5b6b502e70bd7314227c4386f7c8680e/url | {""url"":""http://watir.com""} 2021-12-13 19:46:29 INFO Selenium","closed","G-chromedriver,","pgundlupetvenkatesh","2021-12-14T04:24:02Z","2022-01-17T00:07:50Z"
"","9957","[🐛 Bug]: Selenium 4.0 (or one of its dependencies) breaks junit parallelism","### What happened?  Take a look at:  https://github.com/cocorossello/junit-parallel-broken-when-using-selenium  It's basically a parallel test suite with 8 tests throttled to 2 threads that sleeps for 2 seconds, total execution time should be >= 8 seconds.  It works when no selenium is used at all. When I open a selenium window that throttling is broken.  So, I guess that selenium (or one of its dependencies... maybe asynchttpclient) must be doing something weird with the ForkJoinPool used by junit   ### How can we reproduce the issue?  ```shell Check out the sample project and do a  ./gradlew test  It will fail.  Remove the line simulateOpenSelenium(); and it will work ```   ### Relevant log output  ```shell Whithout selenium:  [INFO ] 2021-10-20 11:25:41.150 [ForkJoinPool-1-worker-3] ParallelTest - Starting all tests [INFO ] 2021-10-20 11:25:41.162 [ForkJoinPool-1-worker-3] ParallelTest - Starting [INFO ] 2021-10-20 11:25:41.162 [ForkJoinPool-1-worker-1] ParallelTest - Starting [INFO ] 2021-10-20 11:25:43.174 [ForkJoinPool-1-worker-1] ParallelTest - Ending [INFO ] 2021-10-20 11:25:43.174 [ForkJoinPool-1-worker-3] ParallelTest - Ending [INFO ] 2021-10-20 11:25:43.177 [ForkJoinPool-1-worker-3] ParallelTest - Starting [INFO ] 2021-10-20 11:25:43.178 [ForkJoinPool-1-worker-1] ParallelTest - Starting [INFO ] 2021-10-20 11:25:45.187 [ForkJoinPool-1-worker-3] ParallelTest - Ending [INFO ] 2021-10-20 11:25:45.187 [ForkJoinPool-1-worker-1] ParallelTest - Ending [INFO ] 2021-10-20 11:25:45.188 [ForkJoinPool-1-worker-3] ParallelTest - Starting [INFO ] 2021-10-20 11:25:45.188 [ForkJoinPool-1-worker-1] ParallelTest - Starting [INFO ] 2021-10-20 11:25:47.202 [ForkJoinPool-1-worker-3] ParallelTest - Ending [INFO ] 2021-10-20 11:25:47.202 [ForkJoinPool-1-worker-1] ParallelTest - Ending [INFO ] 2021-10-20 11:25:47.203 [ForkJoinPool-1-worker-3] ParallelTest - Starting [INFO ] 2021-10-20 11:25:47.203 [ForkJoinPool-1-worker-1] ParallelTest - Starting [INFO ] 2021-10-20 11:25:49.204 [ForkJoinPool-1-worker-3] ParallelTest - Ending [INFO ] 2021-10-20 11:25:49.216 [ForkJoinPool-1-worker-1] ParallelTest - Ending [INFO ] 2021-10-20 11:25:49.217 [ForkJoinPool-1-worker-3] ParallelTest - Ending all tests BUILD SUCCESSFUL in 9s 3 actionable tasks: 2 executed, 1 up-to-date 11:25:49: Task execution finished ':test --tests ""org.example.ParallelTest""'.   With Selenium:   [INFO ] 2021-10-20 11:38:57.831 [ForkJoinPool-1-worker-3] ParallelTest - Starting all tests oct 20, 2021 11:38:57 A. M. org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFO: Using OpenTelemetry for tracing SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-3] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-11] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-15] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-5] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-13] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-1] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.782 [ForkJoinPool-1-worker-7] ParallelTest - Starting [INFO ] 2021-10-20 11:38:58.790 [ForkJoinPool-1-worker-9] ParallelTest - Starting [INFO ] 2021-10-20 11:39:00.783 [ForkJoinPool-1-worker-5] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.784 [ForkJoinPool-1-worker-3] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.785 [ForkJoinPool-1-worker-11] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.785 [ForkJoinPool-1-worker-15] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.790 [ForkJoinPool-1-worker-1] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.790 [ForkJoinPool-1-worker-13] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.790 [ForkJoinPool-1-worker-7] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.793 [ForkJoinPool-1-worker-9] ParallelTest - Ending [INFO ] 2021-10-20 11:39:00.793 [ForkJoinPool-1-worker-3] ParallelTest - Ending all tests  Parrallel execution should be throttled to 2 threads, throttling not working, took 2956 ms java.lang.Exception: Parrallel execution should be throttled to 2 threads, throttling not working, took 2956 ms 	at org.example.ParallelTest.tearup(ParallelTest.java:36) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:515) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$invokeAfterAllMethods$9(ClassTestDescriptor.java:387) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$invokeAfterAllMethods$10(ClassTestDescriptor.java:386) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1087) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeAfterAllMethods(ClassTestDescriptor.java:386) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.after(ClassTestDescriptor.java:217) 	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.after(ClassTestDescriptor.java:74) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:119) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:119) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71) 	at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:169) 	at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:113) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:110) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:72) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:95) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:71) 	at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:169) 	at java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194) 	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:295) 	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1016) 	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1665) 	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1598) 	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)  ParallelTest > executionError FAILED     java.lang.Exception at ParallelTest.java:36 ```   ### Operating System  doesn't matter  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  doesn't matter  ### What are the browser driver(s) and version(s) where you see this issue?  doesn't matter  ### Are you using Selenium Grid?  No","closed","I-defect,","cocorossello","2021-10-20T09:39:58Z","2021-11-20T00:06:29Z"
"","10278","[🐛 Bug]:Unable to install the extension(.xpi) using selenium-Java 3.14.0 or 4.1.0 or 4.1.1 with FireFox version 91.4.1esr (64-bit).","### What happened?  Steps to reproduce: ================= Trying to install the .xpi file using selenium supported code. FireFox browse is launched without Installation of extension.  Selenium Version :  3.14.0 or 4.1.0 or 4.1.1 Browser details :  91.4.1esr (64-bit)  Additional information :  1. WebExtension is an internal company developed one. 2. Extension is signed by Mozilla.  2. Able to install the same .xpi manually but failed to it automated way.  Note: Also created a ticket to Mozilla team.  https://bugzilla.mozilla.org/show_bug.cgi?id=1751301  ### How can we reproduce the issue?  ```shell Code sample. ==============  public void setUpDriver(WebDriver webDriver) { FirefoxProfile firefoxProfile = new FirefoxProfile(); FirefoxOptions firefoxOptions = new firefoxOptions(); firefoxProfile.addExtension(""extension.xpi""); firefoxOptions.setProfile(firefoxProfile); webDriver = new FirefoxDriver(firefoxOptions); } ``` ```   ### Relevant log output  ```shell 1642794155603	geckodriver::marionette	DEBUG	Waiting 60s to connect to browser on 127.0.0.1:53260 1642794155604	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794155707	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794155810	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794155914	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156018	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156122	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156227	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156328	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156429	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156530	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156632	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156720	Marionette	INFO	Marionette enabled 1642794156733	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156782	RemoteAgent	DEBUG	CDP enabled 1642794156801	Marionette	TRACE	Received observer notification toplevel-window-ready 1642794156834	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794156935	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157037	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157141	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157245	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157349	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157449	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157550	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157652	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157757	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157858	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794157961	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158066	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158168	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158271	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 2022-01-21 11:42:38.321 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-01-21 11:42:38.322 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-01-21 11:42:38.323 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-01-21 11:42:38.323 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-01-21 11:42:38.324 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-01-21 11:42:38.325 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-01-21 11:42:38.325 firefox-bin[15728:2463542] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 1642794158378	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158481	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158581	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158681	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158782	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794158883	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /var/folders/j1/y271rqmn28bftgrb952g7n8m0000gs/T/rust_mozprofileeemMqK/search.json.mozlz4"", (void 0))) 1642794158987	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159091	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159195	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159299	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159400	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159504	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159608	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159708	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms console.error: BackgroundUpdate:    _reasonsToNotScheduleUpdates: Failed to check for Maintenance Service Registry Key: [Exception... ""Component returned failure code: 0x80004001 (NS_ERROR_NOT_IMPLEMENTED) [nsIUpdateProcessor.getServiceRegKeyExists]""  nsresult: ""0x80004001 (NS_ERROR_NOT_IMPLEMENTED)""  location: ""JS frame :: resource://gre/modules/BackgroundUpdate.jsm :: _reasonsToNotScheduleUpdates :: line 243""  data: no] 1642794159809	geckodriver::marionette	TRACE	Connection refused (os error 61). Retrying in 100ms 1642794159867	Marionette	TRACE	Received observer notification marionette-startup-requested 1642794159867	Marionette	TRACE	Waiting until startup recorder finished recording startup scripts... 1642794159881	Marionette	TRACE	All scripts recorded. 1642794159881	RemoteAgent	DEBUG	Setting recommended pref apz.content_response_timeout to 60000 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.contentblocking.introCount to 99 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.download.panel.shown to true 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.pagethumbnails.capturing_disabled to true 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.tabs.disableBackgroundZombification to false 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.tabs.remote.separatePrivilegedContentProcess to false 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.tabs.unloadOnLowMemory to false 1642794159882	RemoteAgent	DEBUG	Setting recommended pref browser.tabs.warnOnCloseOtherTabs to false 1642794159883	RemoteAgent	DEBUG	Setting recommended pref browser.toolbars.bookmarks.visibility to never 1642794159883	RemoteAgent	DEBUG	Setting recommended pref browser.urlbar.suggest.searches to false 1642794159884	RemoteAgent	DEBUG	Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false 1642794159884	RemoteAgent	DEBUG	Setting recommended pref dom.file.createInChild to true 1642794159884	RemoteAgent	DEBUG	Setting recommended pref dom.push.connection.enabled to false 1642794159884	RemoteAgent	DEBUG	Setting recommended pref extensions.getAddons.cache.enabled to false 1642794159884	RemoteAgent	DEBUG	Setting recommended pref extensions.getAddons.discovery.api_url to data:,  1642794159884	RemoteAgent	DEBUG	Setting recommended pref network.http.prompt-temp-redirect to false 1642794159885	RemoteAgent	DEBUG	Setting recommended pref privacy.trackingprotection.enabled to false 1642794159885	RemoteAgent	DEBUG	Setting recommended pref security.notification_enable_delay to 0 1642794159885	RemoteAgent	DEBUG	Setting recommended pref signon.autofillForms to false 1642794159886	RemoteAgent	DEBUG	Setting recommended pref dom.disable_beforeunload to true 1642794159888	Marionette	INFO	Listening on port 53260 1642794159888	Marionette	DEBUG	Marionette is listening 1642794159922	Marionette	DEBUG	Accepted connection 0 from 127.0.0.1:53321 1642794159924	geckodriver::marionette	DEBUG	Connection to Marionette established on 127.0.0.1:53260. 1642794159930	Marionette	DEBUG	0 -> [0,1,""WebDriver:NewSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox""}] 1642794159932	RemoteAgent	WARN	TLS certificate errors will be ignored for this session 1642794159943	Marionette	DEBUG	0","closed","needs-triaging,","MaheshkumarPalled","2022-01-21T19:53:11Z","2022-03-18T00:09:49Z"
"","10454","[🐛 Bug]: Using Selenium WebDriver with NUnit or xUnit causes .NET Core Test Explorer Tree test items to spin forever.","### What happened?  Steps to reproduce: 1. Create NUnit Project under VS Code C#: ``` dotnet new nunit --framwork net5.0 ``` The same problem if I use xUnit: ""Microsoft.NET.Test.Sdk"" Version=""17.1.0"" ""xunit"" Version=""2.4.1"" ""xunit.runner.visualstudio"" Version=""2.4.3""  2. Use NuGet to add Package to add Selenium WebDriver  Version=""4.1.0""  3. Add the following code in any of the test methods and running the test from the tree, will cause the test to run forever but the test will complete and no results are provided. ``` IWebDriver driver; driver = new ChromeDriver(); ```  Following are the required details:  1. Dotnet sdk version: .NET 5.0 2. Unit test framework: NUnit 3.13.1 3. The link to the repo with the issue: https://github.com/tarekahf/NUnit-Selenium 4. Selenium WebDriver: 4.1.0 5. .NET Core Test Explorer v0.7.7  ![xUnit Selenium WebDriver Test](https://user-images.githubusercontent.com/20842027/158876765-bb78abb3-3694-4faa-b47d-ae96965a2c9b.PNG)    ### How can we reproduce the issue?  ```shell IWebDriver driver; driver = new ChromeDriver(); ```   ### Relevant log output  ```shell Finding projects for pattern c:/Projects\folder\UnitTests/UnitTests.csproj Found 1 matches for pattern in folder c:\Projects\folder\UnitTests Evaluating match c:/Projects/foldername/UnitTests/UnitTests.csproj Adding directory c:/Projects/foldername/UnitTests Executing dotnet test -t -v=q in c:/Projects/foldername/UnitTests Test run for MyTests.TestNavigateGoogle Executing dotnet build in c:/Projects/foldername/UnitTests Executing dotnet test --no-build --logger ""trx;LogFileName=C:\Users\e5640771\AppData\Local\Temp\2\test-explorer-3R2XsA\0.trx"" --filter ""FullyQualifiedName=MyTests.TestNavigateGoogle"" in c:/Projects/foldername/UnitTests Process 31196 started ```   ### Operating System  Windows 10 Enterprise  ### Selenium version  C# with .NET 5.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 99.0.4844.74  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  N/A","closed","needs-triaging,","tarekahf","2022-03-17T19:03:25Z","2022-04-19T00:12:07Z"
"","10913","[🐛 Bug]: Selenium >= 4 requires utf-8 encoding to be delcared on `Content-Type` header","### What happened?  Starting a session with Selenium >= 4 requires the HTTP request's `Content-Type` header to declare the character encoding as utf-8.  `Content-Type: application/json` results in ```""Content-Type header does not indicate utf-8 encoded json: application/json""```  Per the [RFC](https://www.ietf.org/rfc/rfc4627.txt), section 3 UTF-8 is the default encoding for the `application/json` mime-type and requiring its declaration is redundant.  ### How can we reproduce the issue?  ```shell Send any HTTP request without `;charset=utf-8` in the `Content-Type` header with Selenium version > 4 ```   ### Relevant log output  ```shell Error: CmdError(Standard(WebDriver { error: UnknownError, message: ""Content-Type header does not indicate utf-8 encoded json: application/json"", stacktrace: """" })) ```   ### Operating System  Any  ### Selenium version  >= 4  ### What are the browser(s) and version(s) where you see this issue?  Any  ### What are the browser driver(s) and version(s) where you see this issue?  Any  ### Are you using Selenium Grid?  _No response_","open","I-defect,","lamalex","2022-07-29T13:13:48Z","2022-08-03T14:43:04Z"
"","10725","[🐛 Bug]: Status endpoint","### What happened?  Someone pointed out that I incorrectly removed status endpoint from Python (still supported https://w3c.github.io/webdriver/#status). I removed it because no method was calling it. Need to make sure all the languages have methods that can call this endpoint. Don't have time to investigate now and don't want to forget.  ### How can we reproduce the issue?  ```shell driver.status ```   ### Relevant log output  ```shell none ```   ### Operating System  n/a  ### Selenium version  latest  ### What are the browser(s) and version(s) where you see this issue?  n/a  ### What are the browser driver(s) and version(s) where you see this issue?  n/a  ### Are you using Selenium Grid?  n/a","open","I-defect,","titusfortner","2022-06-01T20:24:30Z","2022-07-08T12:27:29Z"
"","10151","[🐛 Bug]: Selenium cannot interact with Vue framework elements","### What happened?  Some of the elements under the special symbols on html page such as (for example): `` or: ``  are not visible by Selenium. It cannot wait until any element under such symbols is displayed or interact with it.  These symbols are generated directly by Vue js framework. So it would be great to fix Selenium to work with it.  ### How can we reproduce the issue?  ```         WebDriver driver = new ChromeDriver();         WebDriverManager.chromedriver().setup();         driver.manage().window().maximize();         driver.get(""https://mamikos.com/"");         WebDriverWait wait = new WebDriverWait(driver, 10);         WebElement accessibleEl = driver.findElement(By.id(""home""));         WebElement notAccessibleEl = driver.findElement(By.id(""loginModal""));         wait.until(ExpectedConditions.visibilityOf(accessibleEl));         wait.until(ExpectedConditions.visibilityOf(notAccessibleEl)); ```  Expected behavior: Selenium can find both accessibleEl and notAccessibleEl elements.  Actual behavior: it can find only accessibleEl and fails on: `wait.until(ExpectedConditions.visibilityOf(notAccessibleEl));`  Because notAccessibleEl webelement is under Vue Js fragment in html source code of page.  ### Relevant log output  ```shell Step failed org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on WINDOWS (6a76b544351ef7665626cc0262f39401)] -> id: loginModal] (tried for 10 second(s) with 500 milliseconds interval) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'EPRUPET', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\IGOR_G~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:60019}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 6a76b544351ef7665626cc0262f39401 ```   ### Operating System  win/linux  ### Selenium version  Java 1.8.0_231  ### What are the browser(s) and version(s) where you see this issue?  chrome 96.0.4664.93  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","GgStormer","2021-12-15T08:29:53Z","2022-01-15T00:07:21Z"
"","10044","[🐛 Bug]: Not able to define executable path attribute in webdriver.Chrome (selenium==3.141.0)","### What happened?  So when trying to instantiate my browser object using seleniums webdriver module, the `executable_path` attribute that is passed through to `webdriver.Chrome` like this:  `browser = webdriver.Chrome(executable_path=r""C:\path\to\chromedriver\chromedriver.exe"")`  Is not being reflected in the WebDriver class. The executable path remains as `chromedriver`, the default. I had to change the source code to my path in order to get this to run with an absolute path to my executable.  ### How can we reproduce the issue?  ```shell Download the same version of selenium and Python 3.7.6. Try to pass in the absolute path to your chromedriver.exe and see if the system cannot find the file specified. If so, using your IDE, step into the Chrome portion of webdriver.Chrome, this will take you to the WebDriver class. If you place a debug point in the constructor you will be able to see that the default ""chromedriver"" value stays as the classes attribute. ```   ### Relevant log output  ```shell I do not have a log but I do have the error message:   Traceback (most recent call last):   File ""C:\Users\rbeas\miniconda3\lib\site-packages\selenium\webdriver\common\service.py"", line 76, in start     stdin=PIPE)   File ""C:\Users\rbeas\miniconda3\lib\subprocess.py"", line 800, in __init__     restore_signals, start_new_session)   File ""C:\Users\rbeas\miniconda3\lib\subprocess.py"", line 1207, in _execute_child     startupinfo)   File ""C:\Users\rbeas\OneDrive\Documents\Deep Learning Research-DESKTOP-EMK236C\PyCharm Community Edition 2020.1.4\plugins\python-ce\helpers\pydev\_pydev_bundle\pydev_monkey.py"", line 551, in new_CreateProcess     return getattr(_subprocess, original_name)(app_name, patch_arg_str_win(cmd_line), *args) FileNotFoundError: [WinError 2] The system cannot find the file specified  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File """", line 983, in _find_and_load   File """", line 967, in _find_and_load_unlocked   File """", line 677, in _load_unlocked   File """", line 728, in exec_module   File """", line 219, in _call_with_frames_removed   File ""C:\Benzinga\scrapie-engine\scrapers\syndicatescraper\scraper.py"", line 19, in      browser = webdriver.Chrome(options=chromeOptions)   File ""C:\Users\rbeas\miniconda3\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 73, in __init__     self.service.start()   File ""C:\Users\rbeas\miniconda3\lib\site-packages\selenium\webdriver\common\service.py"", line 83, in start     os.path.basename(self.path), self.start_error_message) selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home ```   ### Operating System  Windows 10  ### Selenium version  3.141.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  9ChromeDriver 95.0.4638.69  ### Are you using Selenium Grid?  Note using that","closed","I-defect,","rb05751","2021-11-15T23:55:32Z","2022-01-01T00:07:31Z"
"","10499","[🐛 Bug]: JS- ECONNREFUSED when using two WebDrivers and .quit()ing one","### What happened?  So I have two built web drivers. On each I navigate to a specific site with a .get(). Then on one of them I use .quit() to close it. Then i try to use the second driver that is still open and try to navigate to a different site(really just do anything with the driver). Upon trying to use the second driver that should still be opened and using any API call, I get this ECONNREFUSED error. It appears that for some reason calling .quit() on the first driver also destroys the communication between selenium and the second driver.  I have pinpointed that this bug was introduced in Selenium 4.0.0-alpha.5 and has persisted until the latest version of selenium(4.1.1). Trying to do this should work as it works with versions prior to 4.0.0-alpha.5.   This same behavior also occurs MsEdgeDriver. Which leads me to believe this is a problem with selenium and not chromedriver. Also worth noting that this does not occur when using geckodriver.   ### How can we reproduce the issue?  ```shell const { exec, spawn } = require('child_process'); const webdriver = require('selenium-webdriver'); const BROWSER_NAME = webdriver.Browser.CHROME; const chrome = require('selenium-webdriver/chrome');  async function startChromedriver() {     const chromedriverExecutable = process.platform === 'win32' ? './chromedriver.exe' : './chromedriver';     const child = spawn(chromedriverExecutable, { detached: true, stdio: 'ignore' });     child.unref(); }   async function stopChromedriver() {     return new Promise((resolve, reject) => {       const cmd = process.platform === 'win32' ? 'taskkill /F /IM chromedriver.exe' : 'killall chromedriver';       try {         exec(cmd, (error, stdout, stderr) => {           if (error) {             resolve(false);           }           resolve(stdout);         });       } catch (error) {         resolve(false);       }     }); }  async function getDriver() {   const options = new chrome.Options();    return new webdriver.Builder()   .forBrowser(BROWSER_NAME)   .withCapabilities(webdriver.Capabilities.chrome())   .setChromeOptions(options).build(); }  async function doStuff(){      await startChromedriver();      const firstDriver = await getDriver();     firstDriver.get('https://google.com')      const secondDriver = await getDriver();     await secondDriver.get('https://youtube.com')      await firstDriver.quit();      await secondDriver.get('https://reddit.com'); //","closed","I-defect,","danielamar101","2022-03-31T13:59:44Z","2022-05-26T00:12:36Z"
"","10144","[🐛 Bug]: Not stable when tested in Edge IE mode with IEDriver 4.0.0.0","### What happened?  Since previous IEDriver had a problem with opening child windows in Edge IE mode, we have downloaded the new IEDriver 4.0.0.0 and been testing the stablility. Recursively accessing a page with window.open and calling getWindowHandler through the new IEDriver, selenium access will become unstable in 2 ways.  First, when recursive access reaches about 20 times, it will be unable to get the window handle. Using the normal IE or normal Edge, the problem with not occur and could get the child window handle permanently, so this problem seems only to occur in IE mode.  Second, selenium timeout occurs. Exception example) Exception in thread ""main"" org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException The timeout occurs in many methods, like close(closing driver), getWindowhandlers, findelement(xpath), possibilty the driver control has a problem.  In closing we want to know if this problem reproduces in every windows environment, and the cause of this problem.  [Test.txt](https://github.com/SeleniumHQ/selenium/files/7708951/Test.txt) [IEMode_1st.txt](https://github.com/SeleniumHQ/selenium/files/7708952/IEMode_1st.txt) [IEMode_2nd.txt](https://github.com/SeleniumHQ/selenium/files/7708947/IEMode_2nd.txt) [IEMode_3rd.txt](https://github.com/SeleniumHQ/selenium/files/7708948/IEMode_3rd.txt) [IEMode_4th.txt](https://github.com/SeleniumHQ/selenium/files/7708949/IEMode_4th.txt) [IEmode_timeout.txt](https://github.com/SeleniumHQ/selenium/files/7708950/IEmode_timeout.txt)  ### How can we reproduce the issue?  ```shell We have made a simple test program Test.java(Test.txt) that recurisively window.open and get handler of the child window. When it fails to get the handle, the program will retry 10 times to get the window handle, but in this case no matter you retry you wouldn't be able to get the window handle. On failing the 10 time retry, it will abort and end the program. When ending the program it will output which loop it failed to get the handle. (Otherwise it means it successed n-1 loops to get the handle.)  The result, we have tried about 4 cycles, each cycle was 1st. 38 loops 2nd. 34 loops 3rd. 45 loops 4th. 5 loops  For the timeout occasion sample, please refer IEmode_timeout.txt ```   ### Relevant log output  ```shell Refer to the attached file IEMode_1st.txt IEMode_2nd.txt IEMode_3rd.txt IEMode_4th.txt IEmode_timeout.txt ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Edge v.96.0.1054.43 (IE Mode)  ### What are the browser driver(s) and version(s) where you see this issue?  Internet Explorer Driver 4.0.0(32bit)  ### Are you using Selenium Grid?  No","closed","I-defect,","fujimotosts","2021-12-14T05:34:11Z","2022-02-05T00:06:06Z"
"","10722","[🐛 Bug]: Test using keyboard tabbing runs endlessly without failing (C# specflow, selenium 4.2.0)","### What happened?  Since installing the package (selenium.webdriver net bindings for the SW API) I have a test which uses the below code to tab through a page of elements, since the update to 4.2.0 it no longer tabs beyond the first element on the page and it does not time out like other steps but stalls endlessly.  If i go back to the previous version the step runs in a second with no issues.    	When I use the ""Tab"" key on my keyboard to reach ""Change Password"" - **stalls here** 	And I press ""Enter"" 	And I am taken to the ""Change Password"" page 	 Apologies If i am missing something obviously I am relatively new to automation and coding and still trying to find my bearings. 	   ### How can we reproduce the issue?  ```shell Actions act = new Actions(driver);             act.SendKeys(Keys.Tab);               IWebElement elem = null;              do             {                 act.Perform();                 elem = driver.SwitchTo().ActiveElement();                 Debug.WriteLine(""Text from an element: "" + elem.Text);              }             while (!elem.Text.Contains(elementName));          } ```   ### Relevant log output  ```shell no log output ```   ### Operating System  Windows 10  ### Selenium version  C#   ### What are the browser(s) and version(s) where you see this issue?  CHROME 102  ### What are the browser driver(s) and version(s) where you see this issue?  SELENIUM.WEBDRIIVER 4.2.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Wanizame18","2022-06-01T15:02:53Z","2022-07-14T00:15:07Z"
"","10338","[🐛 Bug]: Selenium4 unable to connect to RemoteWebDriver with proxy","### What happened?  Selenium4 unable to connect to RemoteWebDriver with proxy  ### How can we reproduce the issue?  ```shell URL browserStackHubURL = new URL("""");             DesiredCapabilities capabilities = new DesiredCapabilities();             capabilities.setCapability(""browserName"", ""chrome"");             HashMap browserstackOptions = new HashMap();             browserstackOptions.put(""os"", ""Windows"");             browserstackOptions.put(""osVersion"", ""10"");             browserstackOptions.put(""buildName"", ""BStack-[Java] Selenium 4 Sample Test"");             browserstackOptions.put(""sessionName"", ""Selenium 4 test"");             browserstackOptions.put(""seleniumVersion"", ""4.0.0"");             capabilities.setCapability(""bstack:options"", browserstackOptions);             InetSocketAddress inetSocketAddress = new InetSocketAddress(Constants.BS_PROXY_HOST, Constants.BS_PROXY_PORT);             System.out.println(""Debug Proxy :: ClientConfig"");             ClientConfig config = ClientConfig.defaultConfig()                     .baseUrl(browserStackHubURL)                     .readTimeout(Duration.ofSeconds(60))                     .proxy(new Proxy(HTTP, inetSocketAddress));             HttpClient.Factory httpClientFactory = HttpClient.Factory.createDefault();             httpClientFactory.createClient(config);             HttpCommandExecutor executor = new HttpCommandExecutor(new HashMap(), config, httpClientFactory);              Webdriver webdDriver = new RemoteWebDriver(executor, capabilities); ```   ### Relevant log output  ```shell -Dio.netty.leakDetection.level: simple -Dio.netty.leakDetection.targetRecords: 4 Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@47a86fbb -Dio.netty.noUnsafe: false Java version: 11 sun.misc.Unsafe.theUnsafe: available sun.misc.Unsafe.copyMemory: available java.nio.Buffer.address: available direct buffer constructor: unavailable: Reflective setAccessible(true) disabled java.nio.Bits.unaligned: available, true jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @442d9b6e java.nio.DirectByteBuffer.(long, int): unavailable sun.misc.Unsafe: available maxDirectMemory: 16844324864 bytes (maybe) -Dio.netty.tmpdir: /tmp (java.io.tmpdir) -Dio.netty.bitMode: 64 (sun.arch.data.model) -Dio.netty.maxDirectMemory: -1 bytes -Dio.netty.uninitializedArrayAllocationThreshold: -1 java.nio.ByteBuffer.cleaner(): available -Dio.netty.noPreferDirect: false org.jctools-core.MpscChunkedArrayQueue: available -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 Default protocols (JDK): [TLSv1.3, TLSv1.2, TLSv1.1, TLSv1] Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384] -Dio.netty.eventLoopThreads: 16 -Dio.netty.noKeySetOptimization: false -Dio.netty.selectorAutoRebuildThreshold: 512 -Dio.netty.allocator.numHeapArenas: 16 -Dio.netty.allocator.numDirectArenas: 16 -Dio.netty.allocator.pageSize: 8192 -Dio.netty.allocator.maxOrder: 11 -Dio.netty.allocator.chunkSize: 16777216 -Dio.netty.allocator.smallCacheSize: 256 -Dio.netty.allocator.normalCacheSize: 64 -Dio.netty.allocator.maxCachedBufferCapacity: 32768 -Dio.netty.allocator.cacheTrimInterval: 8192 -Dio.netty.allocator.cacheTrimIntervalMillis: 0 -Dio.netty.allocator.useCacheForAllThreads: true -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 -Dio.netty.allocator.type: pooled -Dio.netty.threadLocalDirectBufferSize: 0 -Dio.netty.maxThreadLocalCharBufferSize: 16384 Build HttpCommandExecutor with proxy Stsrting remote webdriver -Dio.netty.processId: 1612 (auto-detected) -Djava.net.preferIPv4Stack: false -Djava.net.preferIPv6Addresses: false Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo) /proc/sys/net/core/somaxconn: 128 -Dio.netty.machineId: 00:50:56:ff:fe:8f:65:96 (auto-detected) -Dio.netty.buffer.checkAccessible: true -Dio.netty.buffer.checkBounds: true Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@44e93b08 Trying to recover from failing to connect channel [id: 0xc9468f46] with a retry value of true Failed to recover from connect exception: io.netty.channel.ConnectTimeoutException: connection timed out: hub.browserstack.com/207.254.8.9:443 with channel [id: 0xc9468f46] connection timed out: hub.browserstack.com/207.254.8.9:443 Trying to recover from failing to connect channel [id: 0x2c222e25] with a retry value of true Failed to recover from connect exception: io.netty.channel.ConnectTimeoutException: connection timed out: hub.browserstack.com/207.254.8.9:443 with channel [id: 0x2c222e25] connection timed out: hub.browserstack.com/207.254.8.9:443 Trying to recover from failing to connect channel [id: 0x76b6edb6] with a retry value of true   Keep retrying for 20 more time.. Then Caused by: java.io.UncheckedIOException: java.net.ConnectException: connection timed out: hub.browserstack.com/207.254.8.9:443         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80)         at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80)         at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) Caused by: java.net.ConnectException: connection timed out: hub.browserstack.com/207.254.8.9:443         at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179)         at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: hub.browserstack.com/207.254.8.9:443         at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261)         ... 9 more ```   ### Operating System  macos  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  chrome   ### What are the browser driver(s) and version(s) where you see this issue?  any version  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","sumanguduru","2022-02-08T15:50:04Z","2022-03-14T00:09:50Z"
"","10102","[🐛 Bug]: 2 of netty-transport-native-epoll-4.1.69.Final.jar","### What happened?  selenium-java-4.1.0.zip contains lib/netty-transport-native-epoll-4.1.69.Final.jar 2 times.  ### How can we reproduce the issue?  ```shell if [ ""$(7z l selenium-java-4.1.0.zip | grep -Ec ""netty-transport-native-epoll-.*\.Final.jar"")"" -gt 1 ] ; then     echo ""Fail""; fi ```   ### Relevant log output  ```shell > ls -hal total 8.0K drwxrwxr-x 2 tim tim 4.0K 2021-11-29 13:26 . drwxrwxr-x 3 tim tim 4.0K 2021-11-29 13:19 ..   > 7z x ../selenium-java-4.1.0.zip   7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_CA.UTF-8,Utf16=on,HugeFiles=on,64 bits,8 CPUs 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1),ASM,AES-NI)  Scanning the drive for archives: 1 file, 24643465 bytes (24 MiB)  Extracting archive: ../selenium-java-4.1.0.zip -- Path = ../selenium-java-4.1.0.zip Type = zip Physical Size = 24643465       Would you like to replace the existing file:   Path:     ./lib/netty-transport-native-epoll-4.1.69.Final.jar   Size:     171406 bytes (168 KiB)   Modified: 2010-01-01 00:00:00 with the file from archive:   Path:     lib/netty-transport-native-epoll-4.1.69.Final.jar   Size:     140549 bytes (138 KiB)   Modified: 2010-01-01 00:00:00 ? (Y)es / (N)o / (A)lways / (S)kip all / A(u)to rename all / (Q)uit? Q  Archives with Errors: 1    Break signaled   > 7z l ../selenium-java-4.1.0.zip | grep netty-transport-native-epoll-4.1.69.Final.jar 2010-01-01 00:00:00 .....       171406       171406  lib/netty-transport-native-epoll-4.1.69.Final.jar 2010-01-01 00:00:00 .....       140549       140549  lib/netty-transport-native-epoll-4.1.69.Final.jar ```   ### Operating System  N/A  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  No","closed","I-defect,","Dmole","2021-11-29T18:34:16Z","2022-01-20T00:07:17Z"
"","10733","[🐛 Bug]: Unable to find an exact match for CDP version 102, so returning the closest version found: a no-op implementation","### What happened?  Selenium works fine with chrome in the idea, but becomes unable to find a CDP implementation after compilation.  console log: ``` 6月 04, 2022 11:06:44 上午 org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch 警告: Unable to find an exact match for CDP version 102, so returning the closest version found: a no-op implementation 6月 04, 2022 11:06:44 上午 org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch 信息: Unable to find CDP implementation matching 102. 6月 04, 2022 11:06:44 上午 org.openqa.selenium.chromium.ChromiumDriver lambda$new$3 警告: Unable to find version of CDP to use for . You may need to include a dependency on a specific version of the CDP using something similar to `org.seleniumhq.selenium:selenium-devtools-v86:4.1.0` where the version (""v86"") matches the version of the chromium-based browser you're using and the version number of the artifact is the same as Selenium's. Exception in thread ""main"" org.openqa.selenium.devtools.DevToolsException: You are using a no-op implementation of the CDP. The most likely reason for this is that Selenium was unable to find an implementation of the CDP protocol that matches your browser. Please be sure to include an implementation on the classpath, possibly by adding a new (maven) dependency of `org.seleniumhq.selenium:selenium-devtools-vNN:4.1.0` where `NN` matches the major version of the browser you're using. Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-0HQNPFR', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12' Driver info: DevTools Connection 	at org.openqa.selenium.devtools.noop.NoOpDomains.target(NoOpDomains.java:59) 	at org.openqa.selenium.devtools.DevTools.createSession(DevTools.java:95) 	at top.ewlgc.chaoxing.check.job.SitTask.validation(SitTask.java:77) 	at top.ewlgc.chaoxing.check.job.SitTask.checkDo(SitTask.java:56) 	at top.ewlgc.chaoxing.check.job.SitTask.main(SitTask.java:47) ``` Google Chrome	102.0.5005.63 (正式版本) （64 位） (cohort: Stable Installs & Version Pins)  chromedriver：http://chromedriver.storage.googleapis.com/index.html?path=102.0.5005.61/  my pom file: ```       4.0.0     top.ewlgc.chaoxing     ckeck     0.0.1-SNAPSHOT     check     check               1.8         UTF-8         UTF-8         2.4.1                                 org.springframework.boot             spring-boot-starter                                org.springframework.boot             spring-boot-starter-test             test                                org.projectlombok             lombok             true                                org.seleniumhq.selenium             selenium-java             4.1.0                                org.seleniumhq.selenium             selenium-chrome-driver             4.1.0                                org.seleniumhq.selenium             selenium-remote-driver             4.1.0                                org.seleniumhq.selenium             selenium-api             4.1.0                                         org.seleniumhq.selenium             selenium-devtools             4.0.0-rc-1                                com.google.guava             guava             31.0.1-jre                                                      us.codecraft             webmagic-core             0.7.5                                        us.codecraft             webmagic-extension             0.7.5                                org.quartz-scheduler             quartz             2.3.2                                                           org.springframework.boot                 spring-boot-dependencies                 ${spring-boot.version}                 pom                 import                                                                        org.apache.maven.plugins                 maven-compiler-plugin                 3.8.1                                      1.8                     1.8                     UTF-8                                                            org.springframework.boot                 spring-boot-maven-plugin                 2.4.1                                      top.ewlgc.chaoxing.check.CkeckApplication                                                                                repackage                                                      repackage                                                                                             ``` And this version only seems to be specified one by one, which is strange: maven url: https://developer.aliyun.com/mvn/guide ![image](https://user-images.githubusercontent.com/64238218/171978408-e7eadb47-e8fd-4594-ab50-702ca7b751e2.png)   ### How can we reproduce the issue?  ```shell package top.ewlgc.chaoxing.check.job;  import lombok.SneakyThrows; import org.openqa.selenium.*; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.devtools.DevTools; import org.openqa.selenium.devtools.v96.emulation.Emulation; import org.openqa.selenium.support.ui.ExpectedCondition; import org.openqa.selenium.support.ui.Wait; import org.openqa.selenium.support.ui.WebDriverWait; import org.quartz.Job; import org.quartz.JobExecutionContext; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import top.ewlgc.chaoxing.check.config.UserConfig;  import javax.annotation.Resource; import java.util.HashMap; import java.util.Optional; import java.util.Set;  /**  * @ClassName SitTask  * @Description TODO  * @Author lushi  * @Date 2022/6/4 8:35  */ public class SitTask implements Job {     private static final Logger logger = LoggerFactory.getLogger(SitTask.class);      String url = ""**"";      @Resource     private UserConfig userConfig = new UserConfig();      @SneakyThrows     public void execute(JobExecutionContext jobExecutionContext) {         if (checkDo()==1){             logger.info(""签到成功"");         }else {             logger.info(""签到失败"");         }     }      public static void main(String[] args) throws InterruptedException {         new SitTask().checkDo();     }      /**      * 签到      *      * @return bool      */     public Integer checkDo() throws InterruptedException {         WebDriver check = validation();         return 0;     }      /**      * 验证登录      *      * @return bool      */     public WebDriver validation() throws InterruptedException {         logger.info(""验证账号有效性"");         System.setProperty(""webdriver.chrome.driver"", ""D:\\Environment\\chromedriver\\chromedriver.exe"");         HashMap  mobileEmulation = new HashMap();         mobileEmulation.put(""deviceName"",""iPhone X"");         ChromeOptions options = new ChromeOptions();         options.setExperimentalOption(""mobileEmulation"", mobileEmulation) //                .addArguments(""--headless"")                 .addArguments(""--disable-gpu"")                 .addArguments(""--no-sandbox"");         ChromeDriver browser = new ChromeDriver(options);         DevTools devTools = browser.getDevTools();         devTools.createSession();         devTools.send(Emulation.setGeolocationOverride(Optional.of(52.5043),                 Optional.of(13.4501),                 Optional.of(1)));         //账号密码登录         browser.get(url);         browser.manage().deleteAllCookies();         Thread.sleep(5000);         browser.get(url);         try {             browser.findElement(By.xpath(""//*[@id=\""formGuide\""]/div[2]"")).click();         }catch (Exception e){             logger.error(""无确认页面"",e);         }         browser.findElement(By.className(""ipt-tel"")).clear();         browser.findElement(By.className(""ipt-pwd"")).clear();         browser.findElement(By.className(""ipt-tel"")).sendKeys(userConfig.getPhone());         browser.findElement(By.className(""ipt-pwd"")).sendKeys(userConfig.getPassword());         Thread.sleep(3000);         browser.findElement(By.xpath(""/html/body/div/div[2]/div[1]/form/div[3]/button"")).click();         Wait wait = new WebDriverWait(browser, 5);         WebElement element = wait.until(visibilityOfElementLocated(By.xpath(""/html/body/div/div[3]/div/div[3]/div/div[1]/div[4]/div[4]/div/p"")));         if (element != null) {             logger.info(element.getText());             Set cookies = browser.manage().getCookies();             logger.info(userConfig.getPhone() + ""cookies获取成功，账号有效,有效载荷为"" + cookies);             return browser;         }         return null;     }      /**      * ""visibilityOfElementLocated""实现      *      * @param locator 元素名      * @return ExpectedCondition      */     public ExpectedCondition visibilityOfElementLocated(final By locator) {         return driver -> {             WebElement toReturn = driver.findElement(locator);             if (toReturn.isDisplayed()) {                 return toReturn;             }             return null;         };     }  } ```   ### Relevant log output  ```shell D:\server\jdk-11\bin\java.exe -javaagent:D:\server\app\apps\IDEA-U\ch-0\221.5787.30\lib\idea_rt.jar=65458:D:\server\app\apps\IDEA-U\ch-0\221.5787.30\bin -Dfile.encoding=UTF-8 -classpath D:\projectCode\java\ckeck\target\classes;C:\Users\lushi\.m2\repository\org\springframework\boot\spring-boot-starter\2.4.1\spring-boot-starter-2.4.1.jar;C:\Users\lushi\.m2\repository\org\springframework\boot\spring-boot\2.4.1\spring-boot-2.4.1.jar;C:\Users\lushi\.m2\repository\org\springframework\spring-context\5.3.2\spring-context-5.3.2.jar;C:\Users\lushi\.m2\repository\org\springframework\spring-aop\5.3.2\spring-aop-5.3.2.jar;C:\Users\lushi\.m2\repository\org\springframework\spring-beans\5.3.2\spring-beans-5.3.2.jar;C:\Users\lushi\.m2\repository\org\springframework\spring-expression\5.3.2\spring-expression-5.3.2.jar;C:\Users\lushi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.4.1\spring-boot-autoconfigure-2.4.1.jar;C:\Users\lushi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.4.1\spring-boot-starter-logging-2.4.1.jar;C:\Users\lushi\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\lushi\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\lushi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.3\log4j-to-slf4j-2.13.3.jar;C:\Users\lushi\.m2\repository\org\apache\logging\log4j\log4j-api\2.13.3\log4j-api-2.13.3.jar;C:\Users\lushi\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\lushi\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\lushi\.m2\repository\org\springframework\spring-core\5.3.2\spring-core-5.3.2.jar;C:\Users\lushi\.m2\repository\org\springframework\spring-jcl\5.3.2\spring-jcl-5.3.2.jar;C:\Users\lushi\.m2\repository\org\yaml\snakeyaml\1.27\snakeyaml-1.27.jar;C:\Users\lushi\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\lushi\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\lushi\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\lushi\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\lushi\.m2\repository\org\assertj\assertj-core\3.18.1\assertj-core-3.18.1.jar;C:\Users\lushi\.m2\repository\org\projectlombok\lombok\1.18.16\lombok-1.18.16.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-java\4.1.0\selenium-java-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v85\4.1.0\selenium-devtools-v85-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v94\4.1.0\selenium-devtools-v94-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v95\4.1.0\selenium-devtools-v95-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v96\4.1.0\selenium-devtools-v96-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\lushi\.m2\repository\com\squareup\okhttp3\okhttp\3.14.9\okhttp-3.14.9.jar;C:\Users\lushi\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-firefox-xpi-driver\4.1.0\selenium-firefox-xpi-driver-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\4.1.0\selenium-chrome-driver-4.1.0.jar;C:\Users\lushi\.m2\repository\com\google\auto\service\auto-service-annotations\1.0.1\auto-service-annotations-1.0.1.jar;C:\Users\lushi\.m2\repository\com\google\auto\service\auto-service\1.0.1\auto-service-1.0.1.jar;C:\Users\lushi\.m2\repository\com\google\auto\auto-common\1.2\auto-common-1.2.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-chromium-driver\4.1.0\selenium-chromium-driver-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-json\4.1.0\selenium-json-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\4.1.0\selenium-remote-driver-4.1.0.jar;C:\Users\lushi\.m2\repository\com\beust\jcommander\1.81\jcommander-1.81.jar;C:\Users\lushi\.m2\repository\io\netty\netty-buffer\4.1.55.Final\netty-buffer-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-codec-http\4.1.55.Final\netty-codec-http-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-codec\4.1.55.Final\netty-codec-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-handler\4.1.55.Final\netty-handler-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-common\4.1.55.Final\netty-common-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-transport-native-epoll\4.1.55.Final\netty-transport-native-epoll-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.55.Final\netty-transport-native-kqueue-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.55.Final\netty-transport-native-unix-common-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-transport\4.1.55.Final\netty-transport-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-resolver\4.1.55.Final\netty-resolver-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-api\1.9.0\opentelemetry-api-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-context\1.9.0\opentelemetry-context-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-exporter-logging\1.9.0\opentelemetry-exporter-logging-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk-metrics\1.9.0-alpha\opentelemetry-sdk-metrics-1.9.0-alpha.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk-logs\1.9.0-alpha\opentelemetry-sdk-logs-1.9.0-alpha.jar;C:\Users\lushi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\lushi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\lushi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk-common\1.9.0\opentelemetry-sdk-common-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure-spi\1.9.0\opentelemetry-sdk-extension-autoconfigure-spi-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure\1.9.0-alpha\opentelemetry-sdk-extension-autoconfigure-1.9.0-alpha.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk-trace\1.9.0\opentelemetry-sdk-trace-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-api-metrics\1.9.0-alpha\opentelemetry-api-metrics-1.9.0-alpha.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-sdk\1.9.0\opentelemetry-sdk-1.9.0.jar;C:\Users\lushi\.m2\repository\io\opentelemetry\opentelemetry-semconv\1.9.0-alpha\opentelemetry-semconv-1.9.0-alpha.jar;C:\Users\lushi\.m2\repository\io\ous\jtoml\2.0.0\jtoml-2.0.0.jar;C:\Users\lushi\.m2\repository\net\bytebuddy\byte-buddy\1.10.18\byte-buddy-1.10.18.jar;C:\Users\lushi\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\lushi\.m2\repository\org\asynchttpclient\async-http-client\2.12.3\async-http-client-2.12.3.jar;C:\Users\lushi\.m2\repository\org\asynchttpclient\async-http-client-netty-utils\2.12.3\async-http-client-netty-utils-2.12.3.jar;C:\Users\lushi\.m2\repository\io\netty\netty-codec-socks\4.1.55.Final\netty-codec-socks-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-handler-proxy\4.1.55.Final\netty-handler-proxy-4.1.55.Final.jar;C:\Users\lushi\.m2\repository\io\netty\netty-transport-native-epoll\4.1.55.Final\netty-transport-native-epoll-4.1.55.Final-linux-x86_64.jar;C:\Users\lushi\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.55.Final\netty-transport-native-kqueue-4.1.55.Final-osx-x86_64.jar;C:\Users\lushi\.m2\repository\org\reactivestreams\reactive-streams\1.0.3\reactive-streams-1.0.3.jar;C:\Users\lushi\.m2\repository\com\typesafe\netty\netty-reactive-streams\2.0.4\netty-reactive-streams-2.0.4.jar;C:\Users\lushi\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-http\4.1.0\selenium-http-4.1.0.jar;C:\Users\lushi\.m2\repository\net\jodah\failsafe\2.4.4\failsafe-2.4.4.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-api\4.1.0\selenium-api-4.1.0.jar;C:\Users\lushi\.m2\repository\org\seleniumhq\selenium\selenium-devtools\4.0.0-rc-1\selenium-devtools-4.0.0-rc-1.jar;C:\Users\lushi\.m2\repository\com\google\guava\guava\31.0.1-jre\guava-31.0.1-jre.jar;C:\Users\lushi\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\lushi\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\lushi\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\lushi\.m2\repository\org\checkerframework\checker-qual\3.12.0\checker-qual-3.12.0.jar;C:\Users\lushi\.m2\repository\com\google\errorprone\error_prone_annotations\2.7.1\error_prone_annotations-2.7.1.jar;C:\Users\lushi\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\lushi\.m2\repository\us\codecraft\webmagic-core\0.7.5\webmagic-core-0.7.5.jar;C:\Users\lushi\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\lushi\.m2\repository\org\apache\httpcomponents\httpcore\4.4.14\httpcore-4.4.14.jar;C:\Users\lushi\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\lushi\.m2\repository\org\apache\commons\commons-lang3\3.11\commons-lang3-3.11.jar;C:\Users\lushi\.m2\repository\us\codecraft\xsoup\0.3.2\xsoup-0.3.2.jar;C:\Users\lushi\.m2\repository\org\jsoup\jsoup\1.13.1\jsoup-1.13.1.jar;C:\Users\lushi\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\lushi\.m2\repository\commons-collections\commons-collections\3.2.2\commons-collections-3.2.2.jar;C:\Users\lushi\.m2\repository\commons-io\commons-io\2.8.0\commons-io-2.8.0.jar;C:\Users\lushi\.m2\repository\com\alibaba\fastjson\1.2.75\fastjson-1.2.75.jar;C:\Users\lushi\.m2\repository\us\codecraft\webmagic-extension\0.7.5\webmagic-extension-0.7.5.jar;C:\Users\lushi\.m2\repository\redis\clients\jedis\3.3.0\jedis-3.3.0.jar;C:\Users\lushi\.m2\repository\org\apache\commons\commons-pool2\2.9.0\commons-pool2-2.9.0.jar;C:\Users\lushi\.m2\repository\org\quartz-scheduler\quartz\2.3.2\quartz-2.3.2.jar;C:\Users\lushi\.m2\repository\com\mchange\mchange-commons-java\0.2.15\mchange-commons-java-0.2.15.jar top.ewlgc.chaoxing.check.job.SitTask 11:06:40.407 [main] INFO top.ewlgc.chaoxing.check.job.SitTask - 验证账号有效性 11:06:40.646 [main] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework 11:06:40.651 [main] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple 11:06:40.651 [main] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4 11:06:40.655 [main] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@3bf7ca37 11:06:40.677 [main] DEBUG io.netty.util.internal.PlatformDependent - Platform: Windows 11:06:40.680 [main] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false 11:06:40.680 [main] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11 11:06:40.681 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available 11:06:40.682 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available 11:06:40.684 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available 11:06:40.686 [main] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled 	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31) 	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238) 	at java.base/java.security.AccessController.doPrivileged(Native Method) 	at io.netty.util.internal.PlatformDependent0.(PlatformDependent0.java:232) 	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293) 	at io.netty.util.internal.PlatformDependent.(PlatformDependent.java:92) 	at io.netty.util.HashedWheelTimer.(HashedWheelTimer.java:109) 	at io.netty.util.HashedWheelTimer.(HashedWheelTimer.java:218) 	at io.netty.util.HashedWheelTimer.(HashedWheelTimer.java:197) 	at org.asynchttpclient.DefaultAsyncHttpClient.newNettyTimer(DefaultAsyncHttpClient.java:111) 	at org.asynchttpclient.DefaultAsyncHttpClient.(DefaultAsyncHttpClient.java:90) 	at org.asynchttpclient.Dsl.asyncHttpClient(Dsl.java:32) 	at org.openqa.selenium.remote.http.netty.NettyClient.createHttpClient(NettyClient.java:103) 	at org.openqa.selenium.remote.http.netty.NettyClient.(NettyClient.java:50) 	at org.openqa.selenium.remote.http.netty.NettyClient$Factory.createClient(NettyClient.java:144) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:107) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:94) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:85) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.(DriverCommandExecutor.java:77) 	at org.openqa.selenium.chromium.ChromiumDriverCommandExecutor.(ChromiumDriverCommandExecutor.java:35) 	at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.(ChromeDriver.java:111) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:104) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:91) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:80) 	at top.ewlgc.chaoxing.check.job.SitTask.validation(SitTask.java:75) 	at top.ewlgc.chaoxing.check.job.SitTask.checkDo(SitTask.java:56) 	at top.ewlgc.chaoxing.check.job.SitTask.main(SitTask.java:47) 11:06:40.687 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true 11:06:40.688 [main] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @31f9b85e 	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361) 	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591) 	at java.base/java.lang.reflect.Method.invoke(Method.java:558) 	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352) 	at java.base/java.security.AccessController.doPrivileged(Native Method) 	at io.netty.util.internal.PlatformDependent0.(PlatformDependent0.java:343) 	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:293) 	at io.netty.util.internal.PlatformDependent.(PlatformDependent.java:92) 	at io.netty.util.HashedWheelTimer.(HashedWheelTimer.java:109) 	at io.netty.util.HashedWheelTimer.(HashedWheelTimer.java:218) 	at io.netty.util.HashedWheelTimer.(HashedWheelTimer.java:197) 	at org.asynchttpclient.DefaultAsyncHttpClient.newNettyTimer(DefaultAsyncHttpClient.java:111) 	at org.asynchttpclient.DefaultAsyncHttpClient.(DefaultAsyncHttpClient.java:90) 	at org.asynchttpclient.Dsl.asyncHttpClient(Dsl.java:32) 	at org.openqa.selenium.remote.http.netty.NettyClient.createHttpClient(NettyClient.java:103) 	at org.openqa.selenium.remote.http.netty.NettyClient.(NettyClient.java:50) 	at org.openqa.selenium.remote.http.netty.NettyClient$Factory.createClient(NettyClient.java:144) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:107) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:94) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:85) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.(DriverCommandExecutor.java:77) 	at org.openqa.selenium.chromium.ChromiumDriverCommandExecutor.(ChromiumDriverCommandExecutor.java:35) 	at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.(ChromeDriver.java:111) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:104) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:91) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:80) 	at top.ewlgc.chaoxing.check.job.SitTask.validation(SitTask.java:75) 	at top.ewlgc.chaoxing.check.job.SitTask.checkDo(SitTask.java:56) 	at top.ewlgc.chaoxing.check.job.SitTask.main(SitTask.java:47) 11:06:40.688 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.(long, int): unavailable 11:06:40.688 [main] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available 11:06:40.701 [main] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 2090860544 bytes (maybe) 11:06:40.701 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\lushi\AppData\Local\Temp (java.io.tmpdir) 11:06:40.701 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model) 11:06:40.703 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes 11:06:40.703 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1 11:06:40.704 [main] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available 11:06:40.704 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false 11:06:40.711 [main] DEBUG io.netty.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available 11:06:40.733 [main] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 11:06:40.733 [main] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 11:06:41.374 [main] DEBUG io.netty.handler.ssl.JdkSslContext - Default protocols (JDK): [TLSv1.3, TLSv1.2, TLSv1.1, TLSv1]  11:06:41.374 [main] DEBUG io.netty.handler.ssl.JdkSslContext - Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384] 11:06:41.398 [main] DEBUG io.netty.channel.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 16 11:06:41.407 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false 11:06:41.407 [main] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 16 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 16 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 11 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 16777216 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: true 11:06:41.446 [main] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 11:06:41.455 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled 11:06:41.455 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0 11:06:41.455 [main] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384 Starting ChromeDriver 102.0.5005.61 (0e59bcc00cc4985ce39ad31c150065f159d95ad3-refs/branch-heads/5005@{#819}) on port 55832 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 11:06:42.241 [Forwarding newSession on session null to remote] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 14216 (auto-detected) 11:06:42.243 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false 11:06:42.243 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false 11:06:42.527 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1) 11:06:42.527 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200 11:06:42.848 [Forwarding newSession on session null to remote] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected) 11:06:42.908 [AsyncHttpClient-1-2] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true 11:06:42.909 [AsyncHttpClient-1-2] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true 11:06:42.909 [AsyncHttpClient-1-2] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@55263ce7 11:06:42.920 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.channel.NettyConnectListener - Using new Channel '[id: 0xeb0672f3, L:/127.0.0.1:65497 - R:localhost/127.0.0.1:55832]' for 'POST' to '/session' 11:06:42.942 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096 11:06:42.942 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2 11:06:42.942 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16 11:06:42.942 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8 11:06:42.942 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.delayedQueue.ratio: 8 11:06:43.832 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.handler.HttpHandler -   Request DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /session HTTP/1.1 User-Agent: selenium/4.1.0 (java windows) Content-Length: 619 Content-Type: application/json; charset=utf-8 host: localhost:55832 accept: */*  Response DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 200 OK Content-Length: 788 Content-Type: application/json; charset=utf-8 cache-control: no-cache  11:06:43.845 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.channel.ChannelManager - Adding key: http://localhost:55832 for channel [id: 0xeb0672f3, L:/127.0.0.1:65497 - R:localhost/127.0.0.1:55832] 6月 04, 2022 11:06:43 上午 org.openqa.selenium.remote.ProtocolHandshake createSession 信息: Detected dialect: W3C 11:06:43.994 [AsyncHttpClient-1-3] DEBUG org.asynchttpclient.netty.channel.NettyConnectListener - Using new Channel '[id: 0x27655eaf, L:/127.0.0.1:65506 - R:localhost/127.0.0.1:65498]' for 'GET' to '/json/version' 11:06:44.019 [AsyncHttpClient-1-3] DEBUG org.asynchttpclient.netty.handler.HttpHandler -   Request DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: EmptyByteBufBE) GET /json/version HTTP/1.1 User-Agent: selenium/4.1.0 (java windows) host: localhost:65498 accept: */*  Response DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 200 OK Content-Length: 450 Content-Type: application/json; charset=UTF-8  11:06:44.019 [AsyncHttpClient-1-3] DEBUG org.asynchttpclient.netty.channel.ChannelManager - Adding key: http://localhost:65498 for channel [id: 0x27655eaf, L:/127.0.0.1:65506 - R:localhost/127.0.0.1:65498] 11:06:44.039 [main] DEBUG io.netty.util.internal.ThreadLocalRandom - -Dio.netty.initialSeedUniquifier: 0xa6034ae57e3c370e 11:06:44.048 [AsyncHttpClient-1-4] DEBUG org.asynchttpclient.netty.channel.NettyConnectListener - Using new Channel '[id: 0x870e24b9, L:/127.0.0.1:65507 - R:localhost/127.0.0.1:65498]' for 'GET' to '/devtools/browser/d57fa1a9-2133-48bb-aad7-6055cc90dedf' 11:06:44.059 [AsyncHttpClient-1-4] DEBUG org.asynchttpclient.netty.handler.WebSocketHandler -   Request DefaultFullHttpRequest(decodeResult: success, version: HTTP/1.1, content: EmptyByteBufBE) GET /devtools/browser/d57fa1a9-2133-48bb-aad7-6055cc90dedf HTTP/1.1 upgrade: websocket connection: upgrade sec-websocket-key: EXTsmSdW62vz79Ur7WWwnw== sec-websocket-version: 13 origin: http://localhost:65498 host: localhost:65498 accept: */* user-agent: AHC/2.1  Response DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 101 WebSocket Protocol Handshake Upgrade: WebSocket Connection: Upgrade Sec-WebSocket-Accept: VERlw3QKLVE9NsS9ZMJtaX0mbRU=  6月 04, 2022 11:06:44 上午 org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch 警告: Unable to find an exact match for CDP version 102, so returning the closest version found: a no-op implementation 6月 04, 2022 11:06:44 上午 org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch 信息: Unable to find CDP implementation matching 102. 6月 04, 2022 11:06:44 上午 org.openqa.selenium.chromium.ChromiumDriver lambda$new$3 警告: Unable to find version of CDP to use for . You may need to include a dependency on a specific version of the CDP using something similar to `org.seleniumhq.selenium:selenium-devtools-v86:4.1.0` where the version (""v86"") matches the version of the chromium-based browser you're using and the version number of the artifact is the same as Selenium's. Exception in thread ""main"" org.openqa.selenium.devtools.DevToolsException: You are using a no-op implementation of the CDP. The most likely reason for this is that Selenium was unable to find an implementation of the CDP protocol that matches your browser. Please be sure to include an implementation on the classpath, possibly by adding a new (maven) dependency of `org.seleniumhq.selenium:selenium-devtools-vNN:4.1.0` where `NN` matches the major version of the browser you're using. Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-0HQNPFR', ip: '192.168.137.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12' Driver info: DevTools Connection 	at org.openqa.selenium.devtools.noop.NoOpDomains.target(NoOpDomains.java:59) 	at org.openqa.selenium.devtools.DevTools.createSession(DevTools.java:95) 	at top.ewlgc.chaoxing.check.job.SitTask.validation(SitTask.java:77) 	at top.ewlgc.chaoxing.check.job.SitTask.checkDo(SitTask.java:56) 	at top.ewlgc.chaoxing.check.job.SitTask.main(SitTask.java:47)  Process finished with exit code 1 ```   ### Operating System  Microsoft Windows 10 pro  ### Selenium version  java11.0.12  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 102.0.5005.63 stable  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver：102.0.5005.61  ### Are you using Selenium Grid?  4.1.0 and springboot2.4.1","closed","","lushi78778","2022-06-04T03:20:41Z","2022-07-06T08:21:44Z"
"","10564","[🐛 Bug]: 'NetworkManager.OnRequestPaused' event throwing exception instead of catching, causing application to crash","### What happened?  Selenium WebDriver's `NetworkManager.OnRequestPaused` event is throwing exception when it should be catching it. This is causing the application to crash due to the uncaught exception.  ### How can we reproduce the issue?  ```shell // Create options var options = new OpenQA.Selenium.Chrome.ChromeOptions(); options.AddArguments(""--no-sandbox"", ""--disable-dev-shm-usage"", ""--headless"", ""--disable-gpu"", ""--disable-cache"", ""--disable-infobars"", ""--window-size=1366,768"", ""--start-maximized"", ""--disable-extensions"", ""--remote-debugging-port=9230"", ""--disable-blink-features=AutomationControlled"", ""user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36"");  // Create Driver var driver = new OpenQA.Selenium.Chrome.ChromeDriver(options);  // Start DevTools session (Sometimes there will be error after this line if the 'NetworkManager.OnRequestPaused' event throws an exception) var devToolsSession = driver.GetDevToolsSession(); ```   ### Relevant log output  ```shell Unhandled exception. System.InvalidOperationException: A command response was not received: Fetch.continueRequest  at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken commandParameters, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)  at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)  at OpenQA.Selenium.DevTools.V96.Fetch.FetchAdapter.ContinueRequest(ContinueRequestCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)  at OpenQA.Selenium.DevTools.V96.V96Network.ContinueRequestWithoutModification(HttpRequestData requestData)  at OpenQA.Selenium.NetworkManager.OnRequestPaused(Object sender, RequestPausedEventArgs e)  at System.Threading.Tasks.Task.c.b__128_1(Object state)  at System.Threading.QueueUserWorkItemCallback.c.b__6_0(QueueUserWorkItemCallback quwi)  at System.Threading.ExecutionContext.RunForThreadPoolUnsafe[TState](ExecutionContext executionContext, Action`1 callback, TState& state)  at System.Threading.QueueUserWorkItemCallback.Execute()  at System.Threading.ThreadPoolWorkQueue.Dispatch()  at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart() ```   ### Operating System  Google Kubernetes Engine Cluster  ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  no","open","I-defect,","wongkhaimeng","2022-04-20T04:07:13Z","2022-04-21T07:03:37Z"
"","10022","[🐛 Bug]: malformed python wheel","### What happened?  Selenium v4's python wheel is malformed. REF: https://github.com/pdm-project/pdm/issues/719#issuecomment-961758667  ### How can we reproduce the issue?  ```shell . ```   ### Relevant log output  ```shell . ```   ### Operating System  Linux  ### Selenium version  4  ### What are the browser(s) and version(s) where you see this issue?  .  ### What are the browser driver(s) and version(s) where you see this issue?  .  ### Are you using Selenium Grid?  No","closed","I-defect,","jjangga0214","2021-11-10T03:57:05Z","2022-04-09T00:11:13Z"
"","10430","[🐛 Bug]: Reflective XSS","### What happened?  Selenium Server Grid Version 4.1.1 Security audit found reflective XSS vulnerability by entering this URL in browser:  http://YOURIPANDPORT/ui/%3Cscript%3Ealert()%3C/script%3E.shtml  This resulted in a JS popup.  ### How can we reproduce the issue?  ```shell http://YOURIPANDPORT/ui/%3Cscript%3Ealert()%3C/script%3E.shtml ```   ### Relevant log output  ```shell No log output to share.  Open URL in browser to see JS popup  http://YOURIPANDPORT/ui/%3Cscript%3Ealert()%3C/script%3E.shtml ```   ### Operating System  Windows Server 2012  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 90+  ### What are the browser driver(s) and version(s) where you see this issue?  Seeing it on external accessing the URL  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","bryanseaton","2022-03-09T19:50:42Z","2022-04-25T00:10:21Z"
"","10041","[🐛 Bug]: Unable to start Firefox 94 with custome profile","### What happened?  Selenium not able to pass the profile variable to geckodriver, it was still using the temp profile when started.  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.options import Options from selenium.webdriver.firefox.firefox_profile import FirefoxProfile  profile_path = r""C:\Users\scruel\AppData\Roaming\Mozilla\Firefox\Profiles\test.default-release"" options=Options() options.log.level = ""trace"" options.set_preference('profile', profile_path) browser = webdriver.Firefox(options=options) ```   ### Relevant log output  ```shell 1636940642906	geckodriver	INFO	Listening on 127.0.0.1:5149 1636940645941	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""--remote-debugging-port"" ""5150"" ""-no-remote"" ""-profile"" ""C:\\Users\\scruel\\AppData\\Local\\Temp\\rust_mozprofileayfj0h"" 1636940645947	geckodriver::marionette	DEBUG	Waiting 60s to connect to browser on 127.0.0.1:5155 1636940646209	RemoteAgent	DEBUG	CDP enabled 1636940646209	Marionette	INFO	Marionette enabled 1636940646262	Marionette	TRACE	Received observer notification toplevel-window-ready ```   ### Operating System  Windows 10 Pro  ### Selenium version  Selenium 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 94  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 30.0.0  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","scruel","2021-11-15T01:51:55Z","2021-12-16T00:06:53Z"
"","10251","[🐛 Bug]: Issues when using selenium-remote-driver and opentelemetry sdk","### What happened?  Selenium java  remote web driver currently initialize OptenTelemetrySdk instance by itself and that makes impossible to use pre configured OpenTelemetry instances (exception thrown).  Also it's impossible to use opentelementry-agent with selenium.  ### How can we reproduce the issue?  ```shell // configure opentelementry instance and set it as global OpenTelemetrySdk.builder()      .setTracerProvider(sdkTracerProvider)                       .setPropagators(ContextPropagators.create(W3CTraceContextPropagator.getInstance()))      .buildAndRegisterGlobal();  // then try use selenium new RemoteWebDriver(remoteAddress, capabilities) ```  To reproduce issue with agent add ""-javaagent:path/to/opentelemetry-javaagent.jar"" to project using selenium remote and JPMS.   ### Relevant log output   ```shell Wrapped by: java.lang.IllegalStateException: GlobalOpenTelemetry.set has already been called. GlobalOpenTelemetry.set must be called only once before any calls to GlobalOpenTelemetry.get. If you are using the OpenTelemetrySdk, use OpenTel emetrySdkBuilder.buildAndRegisterGlobal instead. Previous invocation set to cause of this exception.         at io.opentelemetry.api@1.9.0/io.opentelemetry.api.GlobalOpenTelemetry.set(GlobalOpenTelemetry.java:84)         at io.opentelemetry.sdk.autoconfigure@1.9.0-alpha/io.opentelemetry.sdk.autoconfigure.OpenTelemetrySdkAutoConfiguration.newOpenTelemetrySdk(OpenTelemetrySdkAutoConfiguration.java:113)         at io.opentelemetry.sdk.autoconfigure@1.9.0-alpha/io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdkBuilder.build(AutoConfiguredOpenTelemetrySdkBuilder.java:177)         at io.opentelemetry.sdk.autoconfigure@1.9.0-alpha/io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk.initialize(AutoConfiguredOpenTelemetrySdk.java:29)         at io.opentelemetry.sdk.autoconfigure@1.9.0-alpha/io.opentelemetry.sdk.autoconfigure.OpenTelemetrySdkAutoConfiguration.initialize(OpenTelemetrySdkAutoConfiguration.java:47)         at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer.createTracer(OpenTelemetryTracer.java:77)         at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer.getInstance(OpenTelemetryTracer.java:59)         at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.RemoteWebDriver.createTracedExecutorWithTracedHttpClient(RemoteWebDriver.java:151)         at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) ```  Trace when using with java agent:  ``` java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:40) 	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:51) 	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:44) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:491) 	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:503) Caused by: java.lang.NoSuchMethodError: 'io.opentelemetry.sdk.resources.Resource io.opentelemetry.sdk.resources.Resource.create(io.opentelemetry.javaagent.shaded.io.opentelemetry.api.common.Attributes)' 	at io.opentelemetry.javaagent.tooling.AutoVersionResourceProvider.createResource(AutoVersionResourceProvider.java:26) 	at io.opentelemetry.sdk.autoconfigure@1.10.0-alpha/io.opentelemetry.sdk.autoconfigure.ResourceConfiguration.configureResource(ResourceConfiguration.java:42) 	at io.opentelemetry.sdk.autoconfigure@1.10.0-alpha/io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdkBuilder.build(AutoConfiguredOpenTelemetrySdkBuilder.java:186) 	at io.opentelemetry.javaagent.tooling.OpenTelemetryInstaller.installAgentTracer(OpenTelemetryInstaller.java:63) 	at io.opentelemetry.javaagent.tooling.OpenTelemetryInstaller.beforeAgent(OpenTelemetryInstaller.java:35) 	at io.opentelemetry.javaagent.tooling.AgentInstaller.runBeforeAgentListeners(AgentInstaller.java:192) 	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:122) 	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:100) 	... 13 more ```  ### Selenium version  java 4.1.0","closed","I-defect,","valodzka","2022-01-14T23:58:21Z","2022-03-03T00:10:10Z"
"","10826","[🐛 Bug]: selenium grid cannot establishing devtool session","### What happened?  selenium grid : selenium-server-4.3.0 chrome version(x86) : 103.0.5060.53 chrome driver version(x86) : 103.0.5060.53 language : c#, selenium.webdriver 4.3.0 os : windows server 2016 x64  I successfully connected with selenium grid using remotewebdriver  selenium grid start option  java -jar selenium-server-4.3.0.jar standalone --port 16669 --session-timeout 300 --max-sessions 100 --override-max-sessions true  and i tried  var devtool = driver.GetDevToolsSession();  The selenium grid console has the following logs:  13:42:13.348 INFO [ProxyNodeWebsockets.createWsEndPoint] - Establishing connection to ws://localhost:9222/devtools/browser/4a240809-0328-473a-8862-8b988ae29f36  And everything was stopped What's the problem?   ### How can we reproduce the issue?  ```shell I'm not sure if it's a bug or my mistake ```   ### Relevant log output  ```shell C:\selenium>cd c:\selenium  C:\selenium>java -jar selenium-server-4.3.0.jar standalone --port 16669 --session-timeout 300 --max-sessions 100 --override-max-sessions true 14:03:29.520 INFO [LogManager$RootLogger.log] - Using the system default encoding 14:03:29.520 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 14:03:30.208 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 14:03:30.208 WARN [NodeOptions.getSessionFactories] - Overriding max recommended number of 8 concurrent sessions. Session stability and reliability might suffer! 14:03:30.208 WARN [NodeOptions.getSessionFactories] - One browser session is recommended per available processor. Safari is always limited to 1 session per host. 14:03:30.208 WARN [NodeOptions.getSessionFactories] - Overriding this value for Internet Explorer is not recommended. Issues related to parallel testing with Internet Explored won't be accepted. 14:03:30.208 WARN [NodeOptions.getSessionFactories] - Double check if enabling 'override-max-sessions' is really needed 14:03:30.208 WARN [NodeOptions.getSessionFactories] - Max sessions set to 100 14:03:30.224 INFO [NodeOptions.discoverDrivers] - Discovered 1 driver(s) 14:03:30.255 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 100 times 14:03:30.317 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 14:03:30.349 INFO [GridModel.setAvailability] - Switching Node ecde9ac0-7c8b-484f-a7a3-77e4ffb58070 (uri: http://[ip]:16669) from DOWN to UP 14:03:30.349 INFO [LocalDistributor.add] - Added node ecde9ac0-7c8b-484f-a7a3-77e4ffb58070 at http://[ip]:16669. Health check every 120s 14:03:30.567 INFO [Standalone.execute] - Started Selenium Standalone 4.3.0 (revision a4995e2c09*): http://[ip]:16669 14:03:41.567 INFO [LocalDistributor.newSession] - Session request received by the Distributor:  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, window-size=1920x1480, --disable-extensions, --disable-plugins, --disable-infobars, --disable-gpu, --disable-sync, ?-mute-audio, --disable-background-mode, --remote-debugging-port=9222, --user-data-dir=remote-profile], excludeSwitches: [enable-automation], prefs: {profile.default_content_setting_values.images: 2}}, platformName: WINDOWS}] Starting ChromeDriver 103.0.5060.53 (a1711811edd74ff1cf2150f36ffa3b0dae40b17f-refs/branch-heads/5060@{#853}) on port 51690 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 14:03:42.961 INFO [ProtocolHandshake.createSession] - Detected upstream dialect: W3C 14:03:42.972 INFO [LocalNode.newSession] - Session created by the Node. Id: 33d764bbe365950bbb4a05bf891d06ab, Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.53, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: remote-profile}, goog:chromeOptions: {debuggerAddress: localhost:9222}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: http://localhost:9222, se:cdpVersion: 103.0.5060.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 14:03:42.978 INFO [LocalDistributor.newSession] - Session created by the Distributor. Id: 33d764bbe365950bbb4a05bf891d06ab  Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.53, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: remote-profile}, goog:chromeOptions: {debuggerAddress: localhost:9222}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://[ip]:16669/se..., se:cdpVersion: 103.0.5060.53, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 14:03:45.988 INFO [ProxyNodeWebsockets.createWsEndPoint] - Establishing connection to ws://localhost:9222/devtools/browser/780fbd53-8342-4133-9283-445286908007 ```   ### Operating System  windows server 2016 standard  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  103.0.5060.53  ### What are the browser driver(s) and version(s) where you see this issue?  103.0.5060.53  ### Are you using Selenium Grid?  4.3.0","closed","I-question,","libu1129","2022-06-29T04:52:23Z","2022-07-30T00:11:58Z"
"","10157","[🐛 Bug]: Selenium cannot interact with some visible elements with fragment tags","### What happened?  Selenium cannot interact with some visible elements which contain ""fragment"" keyword. Run the code from snippet.  Element ""//main[contains(@class, 'App---main')]"" is visible on page.  So expected behavior is that this block of code works fine: `wait.until(ExpectedConditions.visibilityOf(fragment));`  ### How can we reproduce the issue?  ```shell         WebDriver driver = new ChromeDriver();         driver.manage().window().maximize();         driver.get(""https://anker.dev-bs-ecom.com/products/2-LO-0PA-10"");         WebDriverWait wait = new WebDriverWait(driver, 10);         // Even some creepy wait         Thread.sleep(10000);         WebElement fragment = driver.findElement(By.xpath(""//main[contains(@class, 'App---main')]""));         wait.until(ExpectedConditions.visibilityOf(fragment)); ```   ### Relevant log output  ```shell Exception in thread ""main"" org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on XP (1e85e298f2e143a984b6ff5a0edab033)] -> xpath: //main[contains(@class, 'App---main')]] (tried for 10 second(s) with 500 milliseconds interval) Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'GG-OK', ip: '192.168.0.98', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.37.544315 (730aa6a5fdba15..., userDataDir: C:\Users\Gg\AppData\Local\T...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 96.0.4664.110, webStorageEnabled: true} Session ID: 1e85e298f2e143a984b6ff5a0edab033 	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231) 	at Test.main(Test.java:21) ```   ### Operating System  win 7, win 10, linux  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.110  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriverVersion: 2.37.544315  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","GgStormer","2021-12-16T11:19:19Z","2022-01-26T00:09:58Z"
"","10531","[🐛 Bug]: Selenium 4.1.3 doesn't Acknowledging proxy config set in ClientConfig","### What happened?  Selenium 4.1.3 unable to connect to RemoteWebDriver with proxy (no authentication)  https://github.com/SeleniumHQ/selenium/commit/897caec5f850adb084d4409d1c5f8f57b6e66d26 I have tried debug.  config is always null  if (config.credentials() != null) {       Credentials credentials = config.credentials();              previous bug: https://github.com/SeleniumHQ/selenium/issues/10231  ### How can we reproduce the issue?  ```shell URL browserStackHubURL = new URL("""");             DesiredCapabilities capabilities = new DesiredCapabilities();             capabilities.setCapability(""browserName"", ""chrome"");             HashMap browserstackOptions = new HashMap();             browserstackOptions.put(""os"", ""Windows"");             browserstackOptions.put(""osVersion"", ""10"");             browserstackOptions.put(""buildName"", ""BStack-[Java] Selenium 4 Sample Test"");             browserstackOptions.put(""sessionName"", ""Selenium 4 test"");             browserstackOptions.put(""seleniumVersion"", ""4.0.0"");             capabilities.setCapability(""bstack:options"", browserstackOptions);              InetSocketAddress inetSocketAddress = new InetSocketAddress(Constants.BS_PROXY_HOST, Constants.BS_PROXY_PORT);         ClientConfig config = ClientConfig.defaultConfig()                 .baseUrl(browserStackHubURL)                 .proxy(new Proxy(HTTP, inetSocketAddress));  WebDriver driver = RemoteWebDriver.builder()                 .oneOf(capabilities)                 .config(config)                 .build(); ```   ### Relevant log output  ```shell -Dio.netty.leakDetection.level: simple -Dio.netty.leakDetection.targetRecords: 4 Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@27f8f1cc -Dio.netty.noUnsafe: false Java version: 11 sun.misc.Unsafe.theUnsafe: available sun.misc.Unsafe.copyMemory: available java.nio.Buffer.address: available direct buffer constructor: unavailable: Reflective setAccessible(true) disabled java.nio.Bits.unaligned: available, true jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @5c8d685e java.nio.DirectByteBuffer.(long, int): unavailable sun.misc.Unsafe: available maxDirectMemory: 16844324864 bytes (maybe) -Dio.netty.tmpdir: /tmp (java.io.tmpdir) -Dio.netty.bitMode: 64 (sun.arch.data.model) -Dio.netty.maxDirectMemory: -1 bytes -Dio.netty.uninitializedArrayAllocationThreshold: -1 java.nio.ByteBuffer.cleaner(): available -Dio.netty.noPreferDirect: false org.jctools-core.MpscChunkedArrayQueue: available -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 Default protocols (JDK): [TLSv1.3, TLSv1.2, TLSv1.1, TLSv1]  Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384] -Dio.netty.eventLoopThreads: 16 -Dio.netty.noKeySetOptimization: false -Dio.netty.selectorAutoRebuildThreshold: 512 -Dio.netty.allocator.numHeapArenas: 16 -Dio.netty.allocator.numDirectArenas: 16 -Dio.netty.allocator.pageSize: 8192 -Dio.netty.allocator.maxOrder: 9 -Dio.netty.allocator.chunkSize: 4194304 -Dio.netty.allocator.smallCacheSize: 256 -Dio.netty.allocator.normalCacheSize: 64 -Dio.netty.allocator.maxCachedBufferCapacity: 32768 -Dio.netty.allocator.cacheTrimInterval: 8192 -Dio.netty.allocator.cacheTrimIntervalMillis: 0 -Dio.netty.allocator.useCacheForAllThreads: false -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 -Dio.netty.allocator.type: pooled -Dio.netty.threadLocalDirectBufferSize: 0 -Dio.netty.maxThreadLocalCharBufferSize: 16384 -Dio.netty.processId: 53138 (auto-detected) -Djava.net.preferIPv4Stack: false -Djava.net.preferIPv6Addresses: false Loopback interface: lo (lo, 0:0:0:0:0:0:0:1%lo) /proc/sys/net/core/somaxconn: 128 -Dio.netty.machineId: 00:50:56:ff:fe:8f:65:96 (auto-detected) -Dio.netty.buffer.checkAccessible: true -Dio.netty.buffer.checkBounds: true Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@7a4d3465 connection timed out: hub.browserstack.com/207.254.56.9:443   org.openqa.selenium.SessionNotCreatedException:  Could not start a new session. Response code 500. Message: java.net.ConnectException: connection timed out: hub.browserstack.com/207.254.56.9:443 Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: '', ip: , os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.49.1.el7.x86_64', java.version: '11.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.RemoteWebDriverBuilder.getRemoteDriver(RemoteWebDriverBuilder.java:395) 	at org.openqa.selenium.remote.RemoteWebDriverBuilder.build(RemoteWebDriverBuilder.java:368) 	at com.mastercard.commercial.track.testrunners.RunCucumber.beforeClass(RunCucumber.java:78) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410) 	at org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54) 	at org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:367) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:410) 	at org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54) 	at org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:367) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.apache.maven.surefire.junitcore.pc.ParallelComputerBuilder$PC$1.run(ParallelComputerBuilder.java:590) 	at org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55) 	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137) 	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107) 	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83) 	at org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75) 	at org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:158) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:206) 	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:161) 	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:84) 	at org.apache.maven.plugin.surefire.InPluginVMSurefireStarter.runSuitesInProcess(InPluginVMSurefireStarter.java:87) 	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1166) 	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011) 	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857) 	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) 	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116) 	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) 	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) 	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307) 	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193) 	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106) 	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863) 	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288) 	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) 	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) 	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) 	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) ```   ### Operating System  MacOs Bigsur  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  browser stack","closed","I-defect,","sumanguduru","2022-04-08T22:38:07Z","2022-05-14T00:15:55Z"
"","9977","Selenium 4 exceptions produce a Traceback that contains this superfluous 'Backtrace' info.","### What happened?  Selenium 4 exceptions produce a Traceback that contains superfluous 'Backtrace' information that is not useful for ordinary debugging as the Traceback already contains the traditional call stack information.  ### How can we reproduce the issue?  ```shell Create an exception that produces a ElementClickInterceptedException     def webwait_rl(self, locator_type, locator_value, condition=EC.element_to_be_clickable, wait=wait_default):         try:             result = WebDriverWait(self.browser, wait).until(condition((self.locator_map[locator_type], locator_value)))             return result         except Exception as e:             raise AssertionError(""\n\n%s\nwebwait_rl exception %s\n%r\nlocator: %s=%s   wait: %d   condition: %s\n%s""                                  % (self.output_stack(ss), e, self.e_type(e), locator_type, locator_value, wait,                                     condition, msg)) ```   ### Relevant log output  ```shell Selenium 3.141.0 FAILED (failures=1) FailureTraceback (most recent call last):   File ""C:\Users\pflaherty\pycharmprojects\automation-master\Live\RCV_Guardian\RcvGuardian_Tip.py"", line 247, in test_001_create_guardian_eyewitness_tip     rcv_main.close_module_by_name(""SAFETY_PROFILE"")   File ""C:\Users\pflaherty\pycharmprojects\automation-master\RCV_Guardian_Pages\RcvGuardianMainPage.py"", line 368, in close_module_by_name     self.click_(x_query, retry=3, msg=f""Unable to click button to close the '{module_name}' module."")   File ""C:\Users\pflaherty\pycharmprojects\automation-master\PageObject\AWDTools.py"", line 293, in click_     (msg, locator, i, self.output_stack(), ex)) AssertionError: Unable to click button to close the 'SAFETY_PROFILE' module. click_ failed using locator xpath=//*[@smartlettype='SAFETY_PROFILE']//div[@class='action smartletClose']/a after 3 retries test_001_create_guardian_eyewitness_tip--close_module_by_name--click_--491-3783 10-22-21  10:43:03AMElementClickInterceptedException('element click intercepted: Element ... is not clickable at point (1321, 321). Other element would receive the click: ...\n  (Session info: chrome=94.0.4606.81)', None, None)  Selenium 4.0 FAILED (failures=1) FailureTraceback (most recent call last):   File ""C:\Users\pflaherty\pycharmprojects\automation-master\Live\RCV_Guardian\RcvGuardian_Tip.py"", line 247, in test_001_create_guardian_eyewitness_tip     rcv_main.close_module_by_name(""SAFETY_PROFILE"")   File ""C:\Users\pflaherty\pycharmprojects\automation-master\RCV_Guardian_Pages\RcvGuardianMainPage.py"", line 368, in close_module_by_name     self.click_(x_query, retry=3, msg=f""Unable to click button to close the '{module_name}' module."")   File ""C:\Users\pflaherty\pycharmprojects\automation-master\PageObject\AWDTools.py"", line 293, in click_     (msg, locator, i, self.output_stack(), ex)) AssertionError: Unable to click button to close the 'SAFETY_PROFILE' module. click_ failed using locator xpath=//*[@smartlettype='SAFETY_PROFILE']//div[@class='action smartletClose']/a after 3 retries test_001_create_guardian_eyewitness_tip--close_module_by_name--click_--491-3161 10-22-21  10:32:41AMElementClickInterceptedException('element click intercepted: Element ... is not clickable at point (1321, 321). Other element would receive the click: ...\n  (Session info: chrome=94.0.4606.81)', None, ['Backtrace:', '\tOrdinal0 [0x0080BDE3+2473443]', '\tOrdinal0 [0x007A6661+2057825]', '\tOrdinal0 [0x006B2438+1057848]', '\tOrdinal0 [0x006E27B9+1255353]', '\tOrdinal0 [0x006E0AE0+1247968]', '\tOrdinal0 [0x006DE8AD+1239213]', '\tOrdinal0 [0x006DD701+1234689]', '\tOrdinal0 [0x006D3567+1193319]', '\tOrdinal0 [0x006F56E3+1332963]', '\tOrdinal0 [0x006D3386+1192838]', '\tOrdinal0 [0x006F57CA+1333194]', '\tOrdinal0 [0x00704ABF+1395391]', '\tOrdinal0 [0x006F55AB+1332651]', '\tOrdinal0 [0x006D2104+1188100]', '\tOrdinal0 [0x006D2F59+1191769]', '\tGetHandleVerifier [0x00992266+1549718]', '\tGetHandleVerifier [0x00A3D4A7+2250711]', '\tGetHandleVerifier [0x0089718B+521403]', '\tGetHandleVerifier [0x00896229+517465]', '\tOrdinal0 [0x007AB79D+2078621]', '\tOrdinal0 [0x007AFB58+2095960]', '\tOrdinal0 [0x007AFC92+2096274]', '\tOrdinal0 [0x007B9541+2135361]', '\tBaseThreadInitThunk [0x7725FA29+25]', '\tRtlGetAppContainerNamedObjectPath [0x77A47A9E+286]', '\tRtlGetAppContainerNamedObjectPath [0x77A47A6E+238]', '']) ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  94.0.4606.81 (Official Build) (64-bit) (cohort: Stable)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  No","closed","I-defect,","PatrickFlaherty","2021-10-22T15:26:43Z","2022-01-26T00:10:05Z"
"","10572","[🐛 Bug]: Missing ByAll from Selenium3 in Selenium4","### What happened?  Selenium 3 (C#) had a ByAll class which made it possible to search by multiple criteria. I tried to find something similar in Selenium 4 without success. I couldn't also find any hint that ByAll got removed during the Selenium 3 to 4 version change.   The upgrade guide https://www.selenium.dev/documentation/webdriver/getting_started/upgrade_to_selenium_4/ doesn't mention that breaking change at all.  ### How can we reproduce the issue?  ```shell Reference Selenium 3 -> ByAll class is there Reference Selenium 4 -> no ByAll class exists ```   ### Relevant log output  ```shell Severity	Code	Description	Project	File	Line	Suppression State Error	CS0246	The type or namespace name 'ByAll' could not be found (are you missing a using directive or an assembly reference?)	Siemens.Collaboration.Net.Web.Automation	D:\Git\siemens\apis.webautomation\src\Siemens.Collaboration.Net.Web.Automation\_global\SeleniumExtensions.cs	1453	N/A ```   ### Operating System  Windows 10  ### Selenium version  CSharp latest   ### What are the browser(s) and version(s) where you see this issue?  Chrome latest  ### What are the browser driver(s) and version(s) where you see this issue?  ChromDriver latest  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","TFTomSun","2022-04-23T04:57:50Z","2022-05-24T00:12:30Z"
"","9945","[🐛 Bug]: Selenium WebDriver v4 Ruby select_by(:index) for a dropdown fails, which was fine in v3.142.7","### What happened?  Select dropdown **by index** no longer works in Selenium WebDriver 4.0.0 Ruby (in 4.0.0beta and 4.0.0.rc as well).  The same test script has always worked fine in v3.   Select by text or value is fine.   ### How can we reproduce the issue?  ```shell driver.get ""https://crossbrowsertesting.github.io/selenium_example_page.html""  elem = Selenium::WebDriver::Support::Select.new(driver.find_element(:id, ""dropdown""))  elem.select_by(:index, 2) ```   ### Relevant log output  ```shell Failure/Error: elem.select_by(:index, 2)  Selenium::WebDriver::Error::NoSuchElementError:        cannot locate element with index: 2 ```   ### Operating System  macOS Big Sur, Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome v94 (and v94)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61 (and v93)  ### Are you using Selenium Grid?  No","closed","needs-triaging,","courtneyzhan","2021-10-18T05:34:29Z","2021-11-20T00:06:38Z"
"","10633","🐛 Session timeout exception while launching Edge in IE mode","### What happened?  See #9793 the scenario is exactly same. But even after using the mentioned solution and configuring with the latest of selenium and IEDriverServer.exe versions, the problem remains same. i.e., Edge opens in IE mode successfully but control is never returned back to the script.  ### How can we reproduce the issue?  ```shell Language: C# 1. Download Selenium.Webdriver v4.1.1 2. Download 32-Bit IEDriverServer.exe v4.0.0 or higher and put it in path(say C:/Drivers/IEDriverServer.exe) 3. Use below script:  using OpenQA.Selenium.IE;  namespace SeleniumTest {     class Program     {         static void Main(string[] args)         {              var driver = new InternetExplorerDriver(@""C:\Driver"", new InternetExplorerOptions             {                 AttachToEdgeChrome = true,                 EdgeExecutablePath = ""C:/Program Files (x86)/Microsoft/Edge/Application/msedge.exe"",                 IgnoreZoomLevel = true             });         }     } }  ``` ```   ### Relevant log output  ```shell OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://localhost:53359/session timed out after 60 seconds.' ```   ### Operating System  Windows 10  ### Selenium version  DOTNET 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Edge 101.0.1210.39  ### What are the browser driver(s) and version(s) where you see this issue?  32/64-Bit IEDriverServer 4.0.0.0  ### Are you using Selenium Grid?  _No response_","closed","G-msedgedriver,","SubhenduShekhar","2022-05-11T12:56:57Z","2022-06-11T00:11:04Z"
"","10809","artifact version 4.3.0 not committed to org.seleniumhq.selenium yet [🐛 Bug]:","### What happened?  same issue with  https://github.com/SeleniumHQ/selenium/issues/10803  still can't checkout 4.3.0 from artifact   ### How can we reproduce the issue?  ```shell same issue with  https://github.com/SeleniumHQ/selenium/issues/10803  still can't checkout 4.3.0 from artifact ```   ### Relevant log output  ```shell same issue with  https://github.com/SeleniumHQ/selenium/issues/10803  still can't checkout 4.3.0 from artifact ```   ### Operating System  MAC  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  MAC  ### What are the browser driver(s) and version(s) where you see this issue?  chrome  ### Are you using Selenium Grid?  _No response_","closed","I-question,","hollyhw15","2022-06-24T19:34:34Z","2022-07-29T00:12:17Z"
"","10065","[🐛 Bug]: selenium.common.exceptions.WebDriverException: Message: Host header doesn't match server localhost:60955","### What happened?  Running the python program give a direct exception: ``` Traceback (most recent call last):   File ""/home/deadf00d/Documents/RedditBot/bot.py"", line 3, in      driver = webdriver.Firefox()   File ""/usr/lib/python3.9/site-packages/selenium/webdriver/firefox/webdriver.py"", line 180, in __init__     RemoteWebDriver.__init__(   File ""/usr/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 266, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 357, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 420, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py"", line 244, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Host header doesn't match server localhost:60955 ```  ### How can we reproduce the issue?  ```shell from selenium import webdriver  driver = webdriver.Firefox() driver.get(""https://dev.to"") ```   ### Relevant log output  ```shell NaN ```   ### Operating System  Linux deadf00d 5.14.14-arch1-1 #1 SMP PREEMPT Wed, 20 Oct 2021 21:35:18 +0000 x86_64 GNU/Linux  ### Selenium version  Python - Selenium 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 93.0 (64 bit)  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 0.30.0 (d372710b98a6 2021-09-16 10:29 +0300)  ### Are you using Selenium Grid?  No (i guess)","closed","needs-triaging,","DEADF00D","2021-11-20T14:13:57Z","2021-12-21T00:07:26Z"
"","10520","[🐛 Bug]: Gecko driver triggers MutationObserver for unrelated events","### What happened?  Running the page below with real browsers (by clicking the button) produces only 'click' as output.  Running the same with Selenium produces 'attributes; styleattributes; styleattributes; styleattributes; styleclick' when using the gecko driver and FF.  ### How can we reproduce the issue?  ```shell   	Click me 	 	 	 	const button = document.getElementById('testButton');     const div = document.getElementById('logArea');     button.addEventListener('click', e => { 		div.innerHTML += ""click "";    }); 		const targetNode = document.getElementById('testButton'); 		const config = { attributes: true, childList: true, subtree: true }; 		const callback = function(mutationsList, observer) { 			mutationsList.forEach(function(mutation) { 				div.innerHTML += mutation.type + ""; ""; 				div.innerHTML += mutation.attributeName; 			}); 		document.count++; 	}; 	 	const observer = new MutationObserver(callback); 	observer.observe(targetNode, config); 	  ```   ### Relevant log output  ```shell none ```   ### Operating System  Windows 10  ### Selenium version  Java 1.8 / Selenium 4.1.3 / GeckoDriver 0.30.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 98  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  no","closed","G-geckodriver,","rbri","2022-04-06T17:22:21Z","2022-05-07T00:10:16Z"
"","10878","[🐛 Bug]: MaxListenersExceededWarning using --parallel","### What happened?  Running tests in parallel throws a Node MaxListenersExceededWarning, which you can see in the attached log output.  This seems to be the same as #6812 which was marked as stale due to lack of update.  The same test suite runs fine when not being used in parallel.  ### How can we reproduce the issue?  ```shell https://github.com/SeleniumHQ/selenium/issues/6812#issuecomment-451555700  I'm unable to provide the specific test suite I'm using as it's a closed system.  However the above link claims to have replicated the issue to allow diagnosis. ```   ### Relevant log output  ```shell (node:8308) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 exit listeners added to [process]. Use emitter.setMaxListeners() to increase limit     at _addListener (node:events:601:17)     at process.addListener (node:events:623:10)     at process.once (node:events:667:8)     at exec (D:\****\node_modules\selenium-webdriver\io\exec.js:135:11)     at D:\****\node_modules\selenium-webdriver\remote\index.js:213:29     at runMicrotasks ()     at processTicksAndRejections (node:internal/process/task_queues:96:5)     at async Executor.execute (D:\****\node_modules\selenium-webdriver\lib\http.js:505:16) ```   ### Operating System  Windows 10 & 11  ### Selenium version  JavaScript 4.3.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox 102.0.1  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.31.0  ### Are you using Selenium Grid?  _No response_","open","I-defect,","lukesrw","2022-07-14T15:37:18Z","2022-08-03T21:44:55Z"
"","10146","[🐛 Bug]: Ruby Firefox - impossible choose non-default profile (Profiles.from_name does not work)","### What happened?  ruby, selenium-webdriver 4.1.0 (most probably since 3.150.0)  The next line fails due to missing Util / Util.app_data_path: Selenium::WebDriver::Firefox::Profile.from_name(""profile_name"")  Util.app_data_path is used twice in lib/selenium/webdriver/firefox/profiles_ini.rb, but it is removed more than 2 years ago:  https://github.com/SeleniumHQ/selenium/commit/32262cc6b87d3c466e3eab5c6445394f300ec1cd  As a workaround - I have provided my own copy of that function (and everything started to work), but it would be nice to fix it. Or is there some other way now to use profiles for Firefox in selenium?  ### How can we reproduce the issue?  ```shell require 'selenium-webdriver' Selenium::WebDriver::Firefox::Profile.from_name(""profile_name"") ```   ### Relevant log output  ```shell Ruby30/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/firefox/profiles_ini.rb:26:in `initialize': uninitialized constant Selenium::WebDriver::Firefox::ProfilesIni::Util (NameError)         from Ruby30/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/firefox/profile.rb:41:in `new'         from Ruby30/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/firefox/profile.rb:41:in `ini'         from Ruby30/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/firefox/profile.rb:45:in `from_name' ```   ### Operating System  Windows 10  ### Selenium version  ruby, selenium-webdriver 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 95  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","mingulov","2021-12-14T06:31:09Z","2022-01-26T00:10:14Z"
"","10758","[🐛 Bug]: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure","### What happened?  Recently my web test cases which were running on chrome headless mode in CI started Failing with below error.  Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure ``` org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:162)         at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:106)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:106)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:93)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:82)         at app.functions.webFunctions.WebDriverInitFunctions.setupChromeDriver(WebDriverInitFunctions.kt:34)         at app.functions.webFunctions.CybersourceFunctions$getCybersourceExternalToken$2.invokeSuspend(CybersourceFunctions.kt:27)         at app.functions.webFunctions.CybersourceFunctions$getCybersourceExternalToken$2.invoke(CybersourceFunctions.kt)         at app.functions.webFunctions.CybersourceFunctions$getCybersourceExternalToken$2.invoke(CybersourceFunctions.kt)         at io.kotest.assertions.RetryKt.retry-G6guFE4(Retry.kt:67)         at app.functions.webFunctions.CybersourceFunctions.getCybersourceExternalToken(CybersourceFunctions.kt:22)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1.invoke$validateCybersource3dsPurchase(Cybs3ds1.kt:76)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1.access$invoke$validateCybersource3dsPurchase(Cybs3ds1.kt:51)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1$1$1.invokeSuspend(Cybs3ds1.kt:383)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1$1$1.invoke(Cybs3ds1.kt)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1$1$1.invoke(Cybs3ds1.kt)         Caused by:         org.openqa.selenium.WebDriverException: Driver server process died prematurely.         **Build info: version: '4.2.1', revision: 'ac4d0fdd4a'         System info: host: '014d6c15-e8c1-11ec-b9d8-ca14bbdd5338', ip: '10.0.50.95', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.117-58.216.amzn2.x86_64', java.version: '11.0.14'**         Driver info: driver.version: ChromeDriver             at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:226)             at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:98)             at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551)             ... 17 more ```  I have highlighted the build info in above code.  Piece of code block  which is failing is  ``` val webConfig = WebDriverInitFunctions()  val driver = webConfig.setupChromeDriver() ``` Implementation of Set setupChromeDriver is  ```` fun setupChromeDriver(): WebDriver {         WebDriverManager.chromedriver().setup()         val preferences = LoggingPreferences()         preferences.enable(LogType.PERFORMANCE, Level.ALL)         val option = ChromeOptions()         option.setCapability(CapabilityType.LOGGING_PREFS, preferences)         option.setCapability(""goog:loggingPrefs"", preferences)          if (System.getenv(""HEADLESS"").lowercase() == ""true"") {             option.addArguments(""--disable-dev-shm-usage"")             option.addArguments(""--disable-gpu"")             option.addArguments(""--no-sandbox"")             option.addArguments(""--start-maximized"")             option.addArguments(""--window-size=1920,1080"")             option.addArguments(""--headless"")             option.addArguments(""--user-agent=HeadlessChrome/${option.browserVersion}"")         }          driver = ChromeDriver(option)         return driver ```     }`     ### How can we reproduce the issue?  ```shell Running below code block in CI  `fun setupChromeDriver(): WebDriver {         WebDriverManager.chromedriver().setup()         val preferences = LoggingPreferences()         preferences.enable(LogType.PERFORMANCE, Level.ALL)         val option = ChromeOptions()         option.setCapability(CapabilityType.LOGGING_PREFS, preferences)         option.setCapability(""goog:loggingPrefs"", preferences)          if (System.getenv(""HEADLESS"").lowercase() == ""true"") {             option.addArguments(""--disable-dev-shm-usage"")             option.addArguments(""--disable-gpu"")             option.addArguments(""--no-sandbox"")             option.addArguments(""--start-maximized"")             option.addArguments(""--window-size=1920,1080"")             option.addArguments(""--headless"")             option.addArguments(""--user-agent=HeadlessChrome/${option.browserVersion}"")         }          driver = ChromeDriver(option)         return driver     }`  CI job in Prow is as followed:   presubmits:  /--api-automation:     - name: payment       context: ""Build and Run Regression Payment tests""       agent: kubernetes       always_run: false       skip_report: false       decorate: true       clone_uri: ""-------""       cluster: {{ .Values.clusters.prowJobs }}       labels:         preset-github: ""true""         preset-scripts: ""true""       spec:         serviceAccountName: xyz         containers:           - name: rg-automation-ci             image: openjdk:11             resources:               requests:                 cpu: ""2""                 memory: ""2Gi""               limits:                 cpu: ""2""                 memory: ""2Gi""             envFrom:               - secretRef:                   name: xyz             securityContext:                   privileged: true             command:               - /bin/bash             args:               - -c               - |                 echo ""-----------------------------------------------------------------""                 echo ""-----------------------------------------------------------------""                 apt-get update && apt-get install -y bash                 apt-get install -y curl                 apt-get install -y awscli                 aws --version                 apt-get install -y jq                 echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/chrome.list                 wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -                 set -x \                     && apt-get update \                     && apt-get install -y google-chrome-stable                 export CHROME_BIN=""/usr/bin/google-chrome""                  echo ""-----------------------------------------------------------------""                 echo ""Fetching branch name...""                 echo ""-----------------------------------------------------------------""                 branchName=`curl -s -H ""Authorization: token ${GITHUB_OAUTH_TOKEN}"" -H ""Accept: application/json""----------} | jq -r .head.ref`                 echo ""Branch Name = '$branchName'""                  echo ""-----------------------------------------------------------------""                 echo ""Building and running all 'Payment Regression' automation tests.(Only 1 paymaya case as of now..""                 echo ""-----------------------------------------------------------------""                 ./gradlew clean test -Dkotest.tags=""Payment & Cybs"" -DrunId=""79901""                      I have Removed unnecessary details from above job ```   ### Relevant log output  ```shell app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1 > Visa Secure Card Enrolled: Successful Authentication FP_LA[tags = Regression, WebTests, TestRailIds, Payment, Cybs] FAILED     org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:162)         at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:106)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:106)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:93)         at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:82)         at app.functions.webFunctions.WebDriverInitFunctions.setupChromeDriver(WebDriverInitFunctions.kt:34)         at app.functions.webFunctions.CybersourceFunctions$getCybersourceExternalToken$2.invokeSuspend(CybersourceFunctions.kt:27)         at app.functions.webFunctions.CybersourceFunctions$getCybersourceExternalToken$2.invoke(CybersourceFunctions.kt)         at app.functions.webFunctions.CybersourceFunctions$getCybersourceExternalToken$2.invoke(CybersourceFunctions.kt)         at io.kotest.assertions.RetryKt.retry-G6guFE4(Retry.kt:67)         at app.functions.webFunctions.CybersourceFunctions.getCybersourceExternalToken(CybersourceFunctions.kt:22)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1.invoke$validateCybersource3dsPurchase(Cybs3ds1.kt:76)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1.access$invoke$validateCybersource3dsPurchase(Cybs3ds1.kt:51)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1$1$1.invokeSuspend(Cybs3ds1.kt:383)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1$1$1.invoke(Cybs3ds1.kt)         at app.journeys.payments.cybersource.cards.async.redirections.Cybs3ds1$1$1$1.invoke(Cybs3ds1.kt)         Caused by:         org.openqa.selenium.WebDriverException: Driver server process died prematurely.         Build info: version: '4.2.1', revision: 'ac4d0fdd4a'         System info: host: '014d6c15-e8c1-11ec-b9d8-ca14bbdd5338', ip: '10.0.50.95', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.117-58.216.amzn2.x86_64', java.version: '11.0.14'         Driver info: driver.version: ChromeDriver             at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:226)             at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:98)             at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551)             ... 17 more ```   ### Operating System  Linux  ### Selenium version  seleniumVersion = ""4.1.4""  ### What are the browser(s) and version(s) where you see this issue?  Chrome  102.0.5005.115   ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.61   ### Are you using Selenium Grid?  no","closed","I-question,","sumitchauhanJan","2022-06-10T15:17:02Z","2022-07-14T00:15:08Z"
"","10488","[🐛 Bug]: Microsoft Edge in IE Mode: On clicking elements its throwing 'org.openqa.selenium.ElementNotInteractableException' error. But same function and locator is working for Selenium 3.","### What happened?  Recently I have moved from selenium 3.14 to Selenium 4  in order to enable automation in Microsoft edge with IE mode.  On clicking most of the elements its throwing following error.. But same function and locator is working for Selenium 3..  org.openqa.selenium.ElementNotInteractableException: Received a JavaScript error attempting to click on the element using synthetic events. We are assuming this is because the element isn't displayed, but it may be due to other problems with executing JavaScript. or org.openqa.selenium.InvalidElementStateException: A JavaScript error was encountered clearing the element. The driver assumes this is because the element is hidden, disabled or read-only, and it must not be to clear the element.  Build info: version: '4.0.0', revision: '3a21814679' os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18'  ### How can we reproduce the issue?  ```shell import org.openqa.selenium.By; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerOptions; public class IEDriverSample {     public static void main(String[] args) {                 InternetExplorerOptions ieOptions = new InternetExplorerOptions();         ieOptions.attachToEdgeChrome();         ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");                  WebDriver driver = new InternetExplorerDriver(ieOptions);         driver.get(""http://www.bing.com"");         WebElement elem = driver.findElement(By.id(""sb_form_q""));         elem.sendKeys(""IE mode"", Keys.RETURN);         driver.close();     } } ```   ### Relevant log output  ```shell org.openqa.selenium.InvalidElementStateException: A JavaScript error was encountered clearing the element. The driver assumes this is because the element is hidden, disabled or read-only, and it must not be to clear the element. Build info: version: '4.0.0', revision: '3a21814679' os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Command: [1c7a0657-9a30-4d56-b477-d6cf21e45fb0, clearElement {id=4f3ce207-d0f4-43db-a8e3-89a8cd680829}] Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr..., ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:55036/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Element: [[InternetExplorerDriver: internet explorer on WINDOWS (1c7a0657-9a30-4d56-b477-d6cf21e45fb0)] -> xpath: //input[contains(@name,'effectiveDate')]] Session ID: 1c7a0657-9a30-4d56-b477-d6cf21e45fb0 ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Microsoft edge with IE mode  ### What are the browser driver(s) and version(s) where you see this issue?  IE driver 4.0.0  ### Are you using Selenium Grid?  No","closed","G-msedgedriver,","message2guna","2022-03-29T06:21:34Z","2022-05-12T00:12:41Z"
"","10710","[🐛 Bug]:Python upgrading to selenium 4 raises exception:  selenium.common.exceptions.WebDriverException: Message:","### What happened?  Python version: `Python 3.8.10`  I upgraded my selenium package from `selenium==3.14.0` to  `selenium==4.0.0`, with selenium 4 it failed to open a chrome browser and raises `selenium.common.exceptions.WebDriverException: Message:`. But the same code can run without issues with selenium 3.14.0.  What confused me is the `WebDriverException` Message is empty, so I couldn't figure out where the problem really lies.   I have made sure the chromedriver is in `PATH`.  The same issue occured when running with firefox and geckodriver, selenium 4.0.0  ### How can we reproduce the issue?  ```shell from selenium import webdriver  browser = webdriver.Chrome() browser.get('http://selenium.dev/') ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""selenium_test.py"", line 3, in      browser = webdriver.Chrome()   File ""/home/patrick/python/venv/selenium/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 69, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/home/patrick/python/venv/selenium/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 93, in __init__     RemoteWebDriver.__init__(   File ""/home/patrick/python/venv/selenium/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 266, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/patrick/python/venv/selenium/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 357, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/patrick/python/venv/selenium/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""/home/patrick/python/venv/selenium/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 207, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: ```   ### Operating System  Ubuntu 20  ### Selenium version  `selenium==4.0.0`  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 102  ### Are you using Selenium Grid?  no","closed","I-defect,","davuses","2022-05-29T03:21:40Z","2022-07-04T18:32:29Z"
"","10113","[🐛 Bug]: significant performance and memory usage - regressions when switching from Selenium 3 to 4","### What happened?  PrimeFaces comes with a suite of integrationstest: https://github.com/primefaces/primefaces/tree/master/primefaces-integration-tests  We currently use Selenium 3.141.59. When i run them on my dev-machine (8C/16T, 32 GB RAM) it looks like this: ![image](https://user-images.githubusercontent.com/10461942/144725101-ff311199-9057-4a6b-a4dc-afb24a9c3cbd.png)  With https://github.com/primefaces/primefaces/pull/8145 we try to upgrade to Selenium 4.1.0. There it looks like this: ![image](https://user-images.githubusercontent.com/10461942/144725218-5703a332-610b-43c5-b0e0-a1c3fcd75ea7.png)  Additional my notebook get´s unresponsive.  We also run this integrationtests on Github actions. They take about twice the time with Selenium 4.1.0. (And we run into some follow-up problems probably because of worse performance due to resource starvation.)  There already has been a (to some degree) similar issue: https://github.com/SeleniumHQ/selenium/issues/9536  ### How can we reproduce the issue?  See PrimeFaces-Github-links above.   ### Relevant log output  Selenium 4.1.0: https://github.com/primefaces/primefaces/actions/runs/1539682360  Compare this with a run on 3.141.59: https://github.com/primefaces/primefaces/runs/4413396941?check_suite_focus=true  ### Operating System  Windows 10, Ubuntu 20.04.3  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.45, Firefox 94.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45, GeckoDriver 0.30.0  ### Are you using Selenium Grid?  No","closed","I-defect,","christophs78","2021-12-04T21:39:02Z","2022-03-15T00:09:44Z"
"","10658","[🐛 Bug]: ChromeOptions Detach not working","### What happened?  Previously worked on Selenium 4.1.3 with Chromedriver v101. The chrome browser opens and stayed open after completing its task.   Saw that there was some update regarding about 4.1.3 which causes the next lines of code unreadable. Thus, updated to 4.1.5.  Next lines of code are readable but the detach argument isn't working anymore either.   Used the code as below and the browser closes right after the webpage is loaded.  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options() chrome_options.add_experimental_option(""detach"", True)  driver = webdriver.Chrome(options=chrome_options)  driver.get('https://www.google.com') ```   ### Relevant log output  ```shell DevTools listening on ws://127.0.0.1:57091/devtools/browser/df209925-c880-494d-9a7f-6dcb98216d52 ```   ### Operating System  Windows 10  ### Selenium version  4.1.5  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101.0.4951.67  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  No","closed","C-py,","cljiahao","2022-05-17T04:36:23Z","2022-06-19T00:12:08Z"
"","10181","[🐛 Bug]: IE Driver GetAttributeValue incorrectly using atom","### What happened?  Per spec, using the attribute endpoint should return only the attribute, not the result of the atom.  ### How can we reproduce the issue?  ```shell Based on the IE driver code: https://github.com/SeleniumHQ/selenium/blob/trunk/cpp/iedriver/Element.cpp#L572 ```   ### Relevant log output  ```shell n/a ```   ### Operating System  Windows  ### Selenium version  trunk  ### What are the browser(s) and version(s) where you see this issue?  IE  ### What are the browser driver(s) and version(s) where you see this issue?  latest  ### Are you using Selenium Grid?  n/a","open","I-defect,","titusfortner","2021-12-24T19:21:22Z","2021-12-24T19:21:22Z"
"","10359","[🐛 Bug]: Incorrect description on JavascriptExecutor.executeScript","### What happened?  Original description on Selenium Doc is as below  `For a map, return a Map with values following the rules above.`  As I thought, the word ""map"" should be more common to avoid misunderstanding, e.g. object.  If this ""map"" is only cover the Java Map, it's fine,  below code will return a Map  `((JavascriptExecutor) driver).executeScript(""return arguments[0]"", map)` But no other steps can cover common Object in Java, so it will go to  `For all other cases, a String is returned`  If this map is standing as JavaScript Map, what's the expected response from WebDriver? Try to call the WebDriver as below: `{   ""script"": ""return new Map([['key1','value1'],['key2','value2']])"",   ""args"": [   ] }` The Chrome will return a empty list by   `[null]` ![图片](https://user-images.githubusercontent.com/3264250/153707448-806eaf1d-d96f-482b-bb7e-8cad44e2d7e6.png)  The Firefox will return a empty object by `{}` ![图片](https://user-images.githubusercontent.com/3264250/153707445-5a51f67b-3c6c-41ac-99e9-54b3b3e70097.png)  As I thought, the expected value might same as Firefox did, it might be a defect on ChromeDriver, so address a ticket on there for tracking https://bugs.chromium.org/p/chromedriver/issues/detail?id=4031    Finally, I think the original ""For a map"" might point to a object.   ### How can we reproduce the issue?  ```shell Below Code are under Chrome  Map:  Code 1 ((JavascriptExecutor) driver).executeScript(""return new Map([['key1','value1'],['key2','value2']])"");  Code 2 ((JavascriptExecutor) driver).executeScript(""return new Map()"");  Set: ((JavascriptExecutor) driver).executeScript(""return new Set()"");  All above code will return the empty list just like below execution: ((JavascriptExecutor) driver).executeScript(""return [null]""); ```   ### Relevant log output  ```shell 2022-02-12 17:40:41 [Forwarding executeScript on session 18038b0c57e548a03be48eaa79260bcd to remote] DEBUG o.a.netty.request.NettyRequestSender.pollPooledChannel(593) - Using pooled Channel '[id: 0xdd3430a4, L:/127.0.0.1:10332 - R:localhost/127.0.0.1:58332]' for 'POST' to 'http://localhost:58332/session/18038b0c57e548a03be48eaa79260bcd/execute/sync' 2022-02-12 17:40:41 [Forwarding executeScript on session 18038b0c57e548a03be48eaa79260bcd to remote] DEBUG o.a.netty.request.NettyRequestSender.sendRequestWithOpenChannel(251) - Using open Channel [id: 0xdd3430a4, L:/127.0.0.1:10332 - R:localhost/127.0.0.1:58332] for POST '/session/18038b0c57e548a03be48eaa79260bcd/execute/sync' 2022-02-12 17:40:42 [AsyncHttpClient-1-2] DEBUG o.a.netty.handler.HttpHandler.handleHttpResponse(70) -   Request DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /session/18038b0c57e548a03be48eaa79260bcd/execute/sync HTTP/1.1 User-Agent: selenium/4.1.2 (java windows) Content-Length: 88 Content-Type: application/json; charset=utf-8 host: localhost:58332 accept: */*  Response DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 200 OK Content-Type: application/json; charset=utf-8 cache-control: no-cache content-length: 16  2022-02-12 17:40:42 [AsyncHttpClient-1-2] DEBUG o.a.netty.channel.ChannelManager.tryToOfferChannelToPool(270) - Adding key: http://localhost:58332 for channel [id: 0xdd3430a4, L:/127.0.0.1:10332 - R:localhost/127.0.0.1:58332] ```   ### Operating System  Win10  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 64 bit  98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.80  ### Are you using Selenium Grid?  No","closed","G-w3c,","alaahong","2022-02-12T10:26:07Z","2022-06-13T00:13:33Z"
"","10400","[🐛 Bug]: Unable to run tests on docker selenium grid using macOS","### What happened?  org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'HARSHAs-Air.ht.home', ip: '2607:fea8:e00:6130:0:0:0:b2ed%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.1', java.version: '11.0.14' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}] Capabilities {}  ### How can we reproduce the issue?  ```shell Docker commands used to create grid: docker run -d --link selenium-hub:hub selenium/node-chrome:3.4.0 docker run -d -p 4444:4444 --name selenium-hub selenium/hub:3.4.0  code: String browserName = Optional.ofNullable(System.getProperty(""browser"")).orElse(""chrome"");         String remote_url = ""http://localhost:4444/wd/hub"";         if (browserName.equalsIgnoreCase(""chrome"")) {             ChromeOptions options = new ChromeOptions();             this.driver = new RemoteWebDriver(new URL(remote_url), options);         } else if (browserName.equalsIgnoreCase(""firefox"")) {             FirefoxOptions options = new FirefoxOptions();             this.driver = new RemoteWebDriver(new URL(remote_url), options);         } ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'HARSHAs-Air.ht.home', ip: '2607:fea8:e00:6130:0:0:0:b2ed%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.1', java.version: '11.0.14' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}] Capabilities {} ```   ### Operating System  ProductName:macOS ;ProductVersion:12.1 ;BuildVersion:	21C52  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  selenium/node-chrome:3.4.0  ### What are the browser driver(s) and version(s) where you see this issue?  selenium/node-chrome:3.4.0  ### Are you using Selenium Grid?  selenium/node-chrome:3.4.0","closed","C-grid,","gvsharshavardhan","2022-02-28T05:39:33Z","2022-04-02T00:09:40Z"
"","10565","[🐛 Bug]: Selenium 4.1.3 org.openqa.selenium.devtools.DevToolsException: Unable to create DevTools connection. When running on Selenoid.","### What happened?  org.openqa.selenium.devtools.DevToolsException: Unable to create DevTools connection is the error message. Stack trace:  Driver info: DevTools Connection 20:35:31 	at org.openqa.selenium.devtools.HasDevTools.lambda$getDevTools$0(HasDevTools.java:25) 20:35:31 	at java.base/java.util.Optional.orElseThrow(Optional.java:401) 20:35:31 	at org.openqa.selenium.devtools.HasDevTools.getDevTools(HasDevTools.java:25) 20:35:31 	at org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$WfZIZ2kE.getDevTools(Unknown Source) 20:35:31 	at com.logmein.piranha.webdriver.selenoidtests.SelenoidGridTest.testSelenoidChrome(SelenoidGridTest.java:38)  We're facing this issue when trying to create a session on Selenoid setup on a remote machine, whereas on local machine it works.   ### How can we reproduce the issue?  ```shell Facing this when running on Selenoid.  driver = new RemoteWebDriver( 					URI.create(""http://selenoid-ip:4444/wd/hub"").toURL(), 					capabilities 					); WebDriver webDriver = driver.webDriver();         webDriver = new Augmenter().augment(webDriver);         DevTools devTools =  ((HasDevTools) webDriver).getDevTools();         devTools.createSession(); ```   ### Relevant log output  ```shell 20:35:31 org.openqa.selenium.devtools.DevToolsException: Unable to create DevTools connection 20:35:31 Build info: version: '4.1.3', revision: '7b1ebf28ef' 20:35:31 System info: host: '', ip: '', os.name: 'Linux', os.arch: 'amd64', os.version: '', java.version: '13' 20:35:31 Driver info: DevTools Connection 20:35:31 	at org.openqa.selenium.devtools.HasDevTools.lambda$getDevTools$0(HasDevTools.java:25) 20:35:31 	at java.base/java.util.Optional.orElseThrow(Optional.java:401) 20:35:31 	at org.openqa.selenium.devtools.HasDevTools.getDevTools(HasDevTools.java:25) 20:35:31 	at org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$WfZIZ2kE.getDevTools(Unknown Source) 20:35:31 	at com.logmein.piranha.webdriver.selenoidtests.SelenoidGridTest.testSelenoidChrome(SelenoidGridTest.java:38) ```   ### Operating System  macOSBigsur, Linux  ### Selenium version  Java Selenium 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100  ### Are you using Selenium Grid?  _No response_","closed","","sachinhr10","2022-04-20T04:48:11Z","2022-05-22T00:11:41Z"
"","10609","[🐛 Bug]: Second instance of IEDriverServer with attached Edge(IE mode) doesn't work properly","### What happened?  Opened the first instance of IEDriverServer attached to Edge, run some scripts... doesn't close the web driver/browser window, Tried to open a second instance of IEDriverServer attached to Edge to run some scripts ...  The second browser window hangs on the initial page and scripts are running on the first browser window ...  ![image](https://user-images.githubusercontent.com/35834865/166906300-c13e9df9-ccdd-4dfa-ae4b-d59052244708.png)  Using .NET Selenium  ### How can we reproduce the issue?  ```shell Steps to reproduce: * Create program/script to automate Edge in IE mode using IEDriverServer * Create InternetExplorerDriverService providing path to IEDriverServer * Create InternetExplorerOptions and set this options:   * AttachToEdgeChrome = true,   * EdgeExecutablePath = ""PATH_TO_MS_EDGE"", * Create IEDriverServer webdriver * Run program/script twice!  Expected: Script should run on the newly opened browser window. Actual: The new window hangs on the initial page of the web driver and scripts are running on the previously opened window.  Here is a little sample from my code: `             var ieService = InternetExplorerDriverService.CreateDefaultService(WEBDRIVER_DIRECTORY, WEBDRIVER_NAME);             ieService.HideCommandPromptWindow = true;              var ieOptions = new InternetExplorerOptions             {                 Proxy = null,                 IntroduceInstabilityByIgnoringProtectedModeSettings = true,                 IgnoreZoomLevel = true,                 AttachToEdgeChrome = true,                 EdgeExecutablePath = ""PATH_TO_MS_EDGE"",             };              var webDriver = new InternetExplorerDriver(ieService, ieOptions, TimeSpan.FromMinutes(4));             webDriver.Navigate().GoToUrl(""bing.com""); `  ```   ### Relevant log output  ```shell 'IEModeSAmple.exe' (CLR v4.0.30319: DefaultDomain): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_32\mscorlib\v4.0_4.0.0.0__b77a5c561934e089\mscorlib.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: DefaultDomain): Loaded 'C:\Users\Sargis.Tovmasyan\source\repos\IEModeSAmple\IEModeSAmple\bin\Debug\IEModeSAmple.exe'. Symbols loaded. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Users\Sargis.Tovmasyan\source\repos\IEModeSAmple\IEModeSAmple\bin\Debug\WebDriver.dll'.  'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Drawing\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Configuration\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Core\v4.0_4.0.0.0__b77a5c561934e089\System.Core.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Xml\v4.0_4.0.0.0__b77a5c561934e089\System.Xml.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Net.Http\v4.0_4.0.0.0__b03f5f7f11d50a3a\System.Net.Http.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Runtime.Serialization\v4.0_4.0.0.0__b77a5c561934e089\System.Runtime.Serialization.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System.Numerics\v4.0_4.0.0.0__b77a5c561934e089\System.Numerics.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. 'IEModeSAmple.exe' (CLR v4.0.30319: IEModeSAmple.exe): Loaded 'C:\Windows\Microsoft.Net\assembly\GAC_32\System.Data\v4.0_4.0.0.0__b77a5c561934e089\System.Data.dll'. Skipped loading symbols. Module is optimized and the debugger option 'Just My Code' is enabled. The thread 0x29f8 has exited with code 0 (0x0). The thread 0x63d8 has exited with code 0 (0x0). The thread 0x58e0 has exited with code 0 (0x0). The thread 0x1fe0 has exited with code 0 (0x0). The thread 0x1db4 has exited with code 0 (0x0). The thread 0x6854 has exited with code 0 (0x0). The thread 0x6980 has exited with code 0 (0x0). ```   ### Operating System  Windows 10 x64 21h2  ### Selenium version  .NET 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 101.0.1210.32  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","Saqo1995s","2022-05-05T10:44:33Z","2022-06-05T00:14:06Z"
"","10694","[🐛 Bug]: Open.Selenium.InvalidStateException was occurred using IE.","### What happened?  Open.Selenium.InvalidStateException was occurred using IE.  For details and reproduction methods, I wonder if you check items after 'How can we reproduce the issue?'.  This exception is occured at InternetExplorerDriver, is not occured at EdgeDriver.  I test this 👆 change to EdgeDriver class from InternetExplorerDriver class, test has all passed.  Sorry for my poor english, thank you.  ### How can we reproduce the issue?  ```shell The implementation is like this:   private readonly IWebDriver _webDriver; // selenium process run class field.  ...  public ctor(string webDriverDirectoryPath) {     // get webdriver directory absolute path from ctor argument.     _webDriver = new InternetExplorerDriver(webDriverDirectoryPath); }  public void Init() {   // this method is navigating method for looping invoke method page. }  // this method called by other class using foreach. public void Invoke(TestCase testCase) {     ...      _webDriver         .FindElement(By.Id(""{Input html tag id}""))         .Clear();  // error has occurred this point.     _webDriver         .FindElement(By.Id(""{Input html tag id}""))         .SendKeys(testCase.Value);      ...      var selectElement = new SelectElement(_webDriver         .FindElement(By.Id(""{Select html tag id}""))     );     selectElement.SelectByIndex(testCase.SelectIndex);  // this method not work. however using for loop and SendKey(Keys.ArrowDown) is work. }   That👆 code runnning at Xunit testing.  ```cs var testCases = new[] {     new TestCase(1, 1, ""hoge"", ""001"", ""51000"", ""Yamada""),     new TestCase(2, 1, ""fuga"", ""002"", ""51001"", ""Tanaka""),     new TestCase(3, 1, ""piyo"", ""003"", ""51002"", ""Suzuki"") };  using var invoker = new SeleniumInvoker(); invoker.Init();  var result1 = invoker.Invoke(testCases[0]); Assert.Equal(""OK"", result1.CheckResult); Assert.Equal(""Yamada"", result1.CustomerName); Assert.Empty(result1.ErrorMessages);  var result2 = invoker.GetResult(testCases[1]); Assert.Equal(""NG"", result2.CheckResult); Assert.Equal(""Tanaka"", result2.CustomerName); Assert.Equal(""Invalid Code"", result2.ErrorMessages.Single());  var result3 = invoker.GetResult(testCases[2]); Assert.Equal(""NG"", result3.CheckResult); Assert.Equal(""Suzuki"", result3.CustomerName); Assert.Equal(""No Account"", result3.ErrorMessages.Single()); ``` ```   ### Relevant log output  ```shell Xunit failed message:  OpenQA.Selenium.InvalidElementStateException A JavaScript error was encountered clearing the element. The driver assumes this is because the element is hidden, disabled or read-only, and it must not be to clear the element.    at OpenQA.Selenium.WebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebElement.Execute(String commandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebElement.Clear() ``` ```   ### Operating System  Windows 10, Version 21H1 , OS Build 19043.1706  ### Selenium version  C#, Selenium.Support 4.1.1, Selenium.WebDriver 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Internet Explorer Version 21H1 (OS Build 19043.1706)  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer.exe 4.0.0.0 (64-bit)  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","neko3cs","2022-05-26T03:44:26Z","2022-07-24T00:14:26Z"
"","10300","[🐛 Bug]:  profile-directory keeps being erased and initialized when switch between native launch and selenium launch","### What happened?  Open chrome from application center, login some websites, say google.com. Quit. And then use selenium to load the same profile.  From the visit history I can see they are the same profile, but all of the login cookies have been cleared.    Vice versa. If open with selenium first, login, close browser. And then open chrome from application center. Same thing happened.  I tried the same code in windows. No such issue.    ### How can we reproduce the issue?  ```shell chrome_options = webdriver.ChromeOptions()         chrome_options.add_argument(""--user-data-dir=/Users//Library/Application Support/Google/Chrome"")          chrome_options.add_argument('--profile-directory=Profile 2')         driver = Chrome(options=chrome_options) ```   ### Relevant log output  ```shell No logs. Code runs smooth. ```   ### Operating System  macOS Version 12.0.1 (Build 21A559)  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 97.0.4692.99 (Official Build) (arm64)  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 97.0.4692.71  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","whhsw","2022-01-28T17:02:37Z","2022-03-02T00:12:03Z"
"","10237","[🐛 Bug]: With Chromedriver 97 / Python, unable to find elements within shadow-root parent element","### What happened?  Once using the latest chrome-driver version = 97, I have an issue with shadow root elements. Once finding the shadow-root element on the DOM, I want to look up an element inside the shadow-root element.  Starting from version 97, this is not possible, and exception is thrown, few days ago while using version 96, all worked fine    ### How can we reproduce the issue?  ```shell (Python)  In the previous version, chrome-driver = 96, I could do the following thing : shadow_root = self.driver.execute_script('return arguments[0].shadowRoot',self.driver.find_element_by_tag_name(SocialElements.SOCIAL_SHADOW_ROOT_PARENT_ELEMENT))                                                 shadow_root.find_element_by_css_selector(""i[class*='social-icon-dots']"").click()  BUT, on version 97, I'm getting an exception: ""AttributeError: 'ShadowRoot' object has no attribute 'find_element_by_css_selector'"" ```   ### Relevant log output  ```shell E       AttributeError: 'ShadowRoot' object has no attribute 'find_element_by_css_selector' ```   ### Operating System  Windows 10  ### Selenium version  Python - Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97.0.4692.71  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  No, pytest has parallel execution within its framework","closed","","DimaEdunov","2022-01-10T08:36:44Z","2022-02-10T00:07:28Z"
"","10917","[🐛 Bug]: Dockerized Selenium grid 4 stops responding when scanned by vulnerability scanning software (Nexpose)","### What happened?  Observing reoccurrence of [#1434](https://github.com/SeleniumHQ/docker-selenium/issues/1434) and [#1497](https://github.com/SeleniumHQ/docker-selenium/issues/1497)  Observing disconnects in selenium grid 4 in distributed form after security vulnerability scanning software (nexpose) performs a scan on the host. This causes no nodes to be displayed on the UI and the grid does not accept any new tests. A restart of the selenium-router docker container being the grid back to normal.  ### How can we reproduce the issue?  ```shell Looks like nexpose scans all the open ports on the host but unsure which exact request is causing the issue. Unable to repro with any specific request but able to repo consistently by kicking off a nexpose scan on the host.   No error logs are generated in any of the selenium grid 4 componenets when the grid goes down, but the `/graphql` endpoint times out. ```   ### Relevant log output  ```shell Possible problematic request from the scan 2022-08-01T20:40:28 [INFO] [Thread: 10.240.9.14:4444/TCP] [Site: ENG] Wrote 508 byte(s).    16 03 03 01 F7 01 00 01  F3 03 03 E1 57 F7 EE DB    ............W...    DC 69 AE 6D 0F C6 38 CF  97 90 C9 89 1E B7 DE 2F    .i.m..8......../    64 AE 7D 64 E6 24 D5 68  E1 1B 4D 20 45 BA 04 BF    d.}d.$.h..M E...    B9 CD 07 64 52 70 10 D2  3C 81 07 2A 91 94 C0 D9    ...dRp..","closed","needs-triaging,","Abhijith2893","2022-08-03T04:51:04Z","2022-08-03T04:55:22Z"
"","10100","[🐛 Bug]: Selenium is expecting pages to load faster than it can, only on *Chrom*","### What happened?  NOTE : The same exact script works on Firefox `94.0.1` with `GeckoDriver` `v0.30.0` on the same exact machine  Selenium is expecting \*Chrom\* to load pages way faster than it can do, querying elements when the elements aren't still loaded resulting on errors.  It only ever happened to me on NVIDIA Driver download pages  When switching from the `*nix` driver list page (https://www.nvidia.com/en-us/drivers/unix/) to the appropriate download page.   It seems to have loaded the page from the outside (i.e all elements *seem* loaded when looking at the webpage, but in depth they aren't), so when I try to query an attribute of an element (like with  ```python driver.find_elements(     By.CSS_SELECTOR,     ""#mainContent > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > ""     ""a:nth-child(1)"")[0].get_attribute(""href"") ``` ) that isn't loaded it fails (see errors 1 and 2)  Will have a report on both Google and MS websites too  ### How can we reproduce the issue?  ```shell from selenium.webdriver.common.by import By  driver = Chrome() #or ChromiumEdge() driver.get(""https://www.nvidia.com/en-us/drivers/unix/"") link_text = driver.find_elements(     By.CSS_SELECTOR,     f""#rightContent > p:nth-child(1) > a:nth-child(3)"")[0].text driver.find_element(By.LINK_TEXT, link_text).click() # Only works consistently with a time.sleep(1) driver.find_element(By.ID, ""lnkDwnldBtn"").click() dl_link = driver.find_elements(     By.CSS_SELECTOR,     ""#mainContent > table:nth-child(3) > tbody:nth-child(1) > tr:nth-child(1) > td:nth-child(1) > ""     ""a:nth-child(1)"")[0].get_attribute(""href"") driver.close() ```   ### Relevant log output  ```shell --- ERROR 1 ---  Traceback (most recent call last):   File ""./main.py"", line 184, in      dl_link, driver_version = get_dl_url(os_code=os_code, branch_code=branch_code)   File ""./main.py"", line 161, in get_dl_url     driver.close()   File ""/home/stig124/.local/share/virtualenvs/autonvidia-ouBhMtGZ/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 937, in close     self.execute(Command.CLOSE)   File ""/home/stig124/.local/share/virtualenvs/autonvidia-ouBhMtGZ/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 424, in execute     self.error_handler.check_response(response)   File ""/home/stig124/.local/share/virtualenvs/autonvidia-ouBhMtGZ/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id Stacktrace: #0 0x55eedc1d3473  #1 0x55eedbc48307  #2 0x55eedbc74e6f  #3 0x55eedbc76315  #4 0x55eedc1fd2a7  #5 0x55eedc20ce6d  #6 0x55eedc20cbe9  #7 0x55eedc20d312  #8 0x55eedc1fe7bb  #9 0x55eedc20d605  #10 0x55eedc1f43d5  #11 0x55eedc224638  #12 0x55eedc2247e8  #13 0x55eedc23edaa  #14 0x7fca97c73b37  #15 0xaaaaaaaaaaaaaaaa   --- ERROR 2 --- Traceback (most recent call last):   File ""./main.py"", line 183, in      dl_link, driver_version = get_dl_url(os_code=os_code, branch_code=branch_code)   File ""./main.py"", line 155, in get_dl_url     dl_link = driver.find_elements( IndexError: list index out of range ```   ### Operating System  openSUSE Tumbleweed  ### Selenium version  Python 3.8.12 | Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge (dev channel) 97.0.1072.13 | Chrome (stable) 96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeChromiumDriver 97.0.1072.13 | ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  No","closed","I-defect,","signed-log","2021-11-28T18:55:07Z","2021-12-30T00:07:20Z"
"","10343","[🐛 Bug]: Ruby `send_keys` wrong for combination like `element.send_keys([:shift, 'a'])` after update to Chromedriver v98","### What happened?  Not sure that this is a best place to report it, I think it may be a bug in Chromedriver itself, but have a bad experience contacting google issue tracker, so I'll start in this repo, sorry if I'm doing this wrong  So after updating Chromedriver to v98 I got troubles with sending those combinations to input areas: ``` element.send_keys([:shift, 'a']) element.send_keys([:control, 'a'])  ``` And probably all others combination of several keys  Example code is attached with chromedriver included: [chromedriver-bug-send-keys.zip](https://github.com/SeleniumHQ/selenium/files/8033620/chromedriver-bug-send-keys.zip)   ### How can we reproduce the issue?  I've attached archive with required files, but steps are:  1. Create HTML file `test.rb` with: ```                                             ```  2. Create this spec file `test_input_spec.rb`, which will compare result of execution of Chromedriver v97 and v98: ``` # frozen_string_literal: true  require 'rspec' require 'selenium-webdriver'  text_to_input = 'TestText'  describe 'text_input' do   it 'chromedriver 97' do     service = Selenium::WebDriver::Chrome::Service.new(path: ""#{Dir.pwd}/chromedriver_linux_97"")      driver = Selenium::WebDriver.for(:chrome, service: service)     driver.navigate.to(""file://#{Dir.pwd}/test.html"")     element = driver.find_element(:xpath, '//input')     element.send_keys(text_to_input)     element.send_keys([:shift, 'a'])     expect(element.attribute('value')).to eq(""#{text_to_input}A"")   end    it 'chromedriver 97' do     service = Selenium::WebDriver::Chrome::Service.new(path: ""#{Dir.pwd}/chromedriver_linux_98"")      driver = Selenium::WebDriver.for(:chrome, service: service)     driver.navigate.to(""file://#{Dir.pwd}/test.html"")     element = driver.find_element(:xpath, '//input')     element.send_keys(text_to_input)     element.send_keys([:shift, 'a'])     expect(element.attribute('value')).to eq(""#{text_to_input}A"")   end end ```  3. Download `ChromeDriver 97.0.4692.71` and `ChromeDriver 98.0.4758.80` and place it in same folder as `chromedriver_linux_97` and `chromedriver_linux_98`  4. run ` rspec text_input_spec.rb` and see output for errors.   And of course I can enter `A` as `A`, not as `[:shift, 'a']`, but it's just for simplicity of example  ### Relevant log output  ```shell Output of this script will be:  .F  Failures:    1) text_input chromedriver 97      Failure/Error: expect(element.attribute('value')).to eq(""#{text_to_input}A"")              expected: ""TestTextA""             got: ""TestTextA""              (compared using ==)      # ./text_input_spec.rb:28:in `block (2 levels) in '  Finished in 2.28 seconds (files took 0.14498 seconds to load) 2 examples, 1 failure  Failed examples:  rspec ./text_input_spec.rb:20 # text_input chromedriver 97 ```  So Chromedriver 97 correctly calls `[:shift, 'a']` as `A`  But chromedriver 98 input `A` instead (some kind of incorrect unicode symbol)  You can see it on screenshot:  ### Operating System  Ubuntu 20.04  ### Selenium version  ruby gem selenium-webdriver (4.1.0)  ### What are the browser(s) and version(s) where you see this issue?   98.0.4758.80   ### What are the browser driver(s) and version(s) where you see this issue?  98.0.4758.80 is broken and everything ok on 97.0.4692.71  ### Are you using Selenium Grid?  Nope","closed","","ShockwaveNN","2022-02-09T14:53:17Z","2022-03-12T00:08:55Z"
"","10244","[🐛 Bug]: getDomAttribute and getAttribute do the same thing (?)","### What happened?  Not sure if this is a bug but I can't tell without documentation on these methods. In Java there are two methods that seem to return the same information: getDomAttribute and getAttribute. I have tested them against few examples. Are they duplicates or am I missing something?  ### How can we reproduce the issue?  ```shell @Test     public void exampleTest1(){         WebDriverManager.chromedriver().setup();         driver = new ChromeDriver();         driver.get(""https://fakestore.testelka.pl/product/windsurfing-w-lanzarote-costa-teguise/"");         WebElement element = driver.findElement(By.cssSelector(""[name='quantity']""));         String attribute = element.getDomAttribute(""id"");         String attribute2 = element.getAttribute(""id"");         System.out.println(""Attribute 1: "" + attribute + ""\nAttribute 2: "" + attribute2);     } ```   ### Relevant log output  ```shell Attribute 1: quantity_61dd90fb756b4 Attribute 2: quantity_61dd90fb756b4 ```   ### Operating System  Windows 11 Pro  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97.0.4692.71  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","aphx07","2022-01-11T20:17:51Z","2022-02-18T00:07:46Z"
"","10857","[🐛 Bug]: org.asynchttpclient.exception.RemotelyClosedException when starting 3 tests at once with Sauce Labs","### What happened?  Not sure if this belongs here or in Sauce Labs but:  When starting three simple tests at the same time with Selenium 4.3.0 the end result is always (at least on my M1 Mac) that test 1 and test 3 run and work fine (although in Saucelabs they show up as 'errored') but test 2 fails to start with  ``` org.openqa.selenium.SessionNotCreatedException:  Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failur e. Build info: version: '4.3.0', revision: 'a4995e2c09*' System info: host: 'myhostname', ip: 'myip', os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '12.4', java.ver sion: '17.0.1' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extens ions: []}, sauce:options: {access_key: , name: test2, tunnelIdentifier: my-tunnel-id, username: my-sa uce-username}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions:  []}, sauce:options: {access_key: , name: test2, tunnelIdentifier: my-tunnel-id, username: my-sauce-u sername}}}] Capabilities {}         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:587)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:264)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:179)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:161)         at com.example.application.MyIT.test(MyIT.java:52)         at com.example.application.MyIT.test2(MyIT.java:30)         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)         at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43 )         at java.base/java.lang.reflect.Method.invoke(Method.java:568)         at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)         at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)         at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)         at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)         at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:61)         at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)         at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)         at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)         at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)         at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)         at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)         at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)         at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)         at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)         at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)         at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)         at org.junit.runners.ParentRunner.run(ParentRunner.java:413)         at org.junit.runner.JUnitCore.run(JUnitCore.java:137)         at org.junit.runner.JUnitCore.run(JUnitCore.java:115)         at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)         at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)         at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)         at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)         at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)         at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)         at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)         at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)         at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)         at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)         at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)         at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)         at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)         at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418) Caused by: java.io.UncheckedIOException: org.asynchttpclient.exception.RemotelyClosedException: Remotely closed         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:73)         at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)         at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49)         at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)         at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)         at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:98)         at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:120)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)         at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)         at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569)         ... 42 more Caused by: org.asynchttpclient.exception.RemotelyClosedException: Remotely closed         at org.asynchttpclient.exception.RemotelyClosedException.INSTANCE(Unknown Source) ```  ### How can we reproduce the issue?  ```shell https://github.com/Artur-/saucetest ```   ### Relevant log output  ```shell The full log of one run can be found here https://gist.github.com/Artur-/5e5ec1b70949560b1e75361ba27145a4 ```   ### Operating System  macOs Big Sur  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  Remotedriver + Saucelabs  ### Are you using Selenium Grid?  No","closed","C-java,","Artur-","2022-07-08T12:04:52Z","2022-07-12T17:13:14Z"
"","10876","[🐛 Bug]: Not able to run the test in non headless mode in linux","### What happened?  Not able to run the test in non headless mode in linux. I have created the docker linux image and running the test in container. Test are running fine with --headless option but without that its not working. Below is the error    Error Message:    OpenQA.Selenium.WebDriverException : unknown error: Chrome failed to start: exited abnormally.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) TearDown : System.NullReferenceException : Object reference not set to an instance of an object.    ### How can we reproduce the issue?  ```shell Any test we can take and run in linux enviroment without --headless chrome option ```   ### Relevant log output  ```shell Error Message:    OpenQA.Selenium.WebDriverException : unknown error: Chrome failed to start: exited abnormally.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) TearDown : System.NullReferenceException : Object reference not set to an instance of an object. ```   ### Operating System  Debian  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 103  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 103  ### Are you using Selenium Grid?  _No response_","closed","","amitkpal83","2022-07-14T13:29:11Z","2022-07-14T14:25:16Z"
"","10109","[🐛 Bug]: NetworkInterface.getByName(""en0"") throw NullPointException","### What happened?  NetworkInterface.getByName(""en0"") throw NullPointException   ### How can we reproduce the issue?  ```shell I use a proxy options.addArguments(""--proxy-server=http://"" + proxy); ```   ### Relevant log output  ```shell WARNING: Failed to resolve host address java.lang.NullPointerException 	at org.openqa.selenium.net.HostIdentifier.resolveHostAddress(HostIdentifier.java:92) 	at org.openqa.selenium.net.HostIdentifier.getHostAddress(HostIdentifier.java:123) 	at org.openqa.selenium.WebDriverException.getSystemInformation(WebDriverException.java:95) 	at org.openqa.selenium.WebDriverException.createMessage(WebDriverException.java:87) 	at org.openqa.selenium.WebDriverException.getMessage(WebDriverException.java:65) 	at java.lang.Throwable.getLocalizedMessage(Throwable.java:391) 	at java.lang.Throwable.toString(Throwable.java:480) 	at java.lang.String.valueOf(String.java:2994) 	at java.io.PrintStream.println(PrintStream.java:821) 	at java.lang.Throwable$WrappedPrintStream.println(Throwable.java:748) 	at java.lang.Throwable.printStackTrace(Throwable.java:655) 	at java.lang.Throwable.printStackTrace(Throwable.java:643) 	at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1061) 	at java.lang.ThreadGroup.uncaughtException(ThreadGroup.java:1052) 	at java.lang.Thread.dispatchUncaughtException(Thread.java:1959) ```   ### Operating System  macOS Monterey 12.0.1  ### Selenium version  java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 96.0.4664.55   ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 95  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","hackeryutu","2021-12-02T08:56:53Z","2022-01-10T00:07:34Z"
"","10002","[🐛 Bug]: [Chrome 95] Page is stuck on loading when using Throttling settings on Chrome 95 version","### What happened?  Network operations not working - page is stuck on loading when using Throttling settings on Chrome 95 version  **Not reproducing on other chrome versions.**       ### How can we reproduce the issue?  ```shell ((ChromeDriver)driver).NetworkConditions = ChromeNetConditions(networkProfile);  //function used         public ChromeNetworkConditions ChromeNetConditions(string profile)         {             ChromeNetworkConditions networkConditions = new ChromeNetworkConditions();             profile = profile.ToLower();             switch (profile)             {                 case ""2g"":                     networkConditions.Latency = TimeSpan.FromMilliseconds(300);                     networkConditions.DownloadThroughput = 250 * 1024;                     networkConditions.UploadThroughput = 50 * 1024;                     networkConditions.IsOffline = false;                     break;                  case ""3g"":                     networkConditions.Latency = TimeSpan.FromMilliseconds(100);                     networkConditions.DownloadThroughput = 750 * 1024;                     networkConditions.UploadThroughput = 250 * 1024;                     networkConditions.IsOffline = false;                     break;                                  default:                     throw new Exception(""There is no Profile name that matching the given parameter"");              }             return networkConditions;          } ```   ### Relevant log output  ```shell no log output ```   ### Operating System  Windows 10  ### Selenium version  C# 3.141.0  /  4.0.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.54  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 95.0.4638.54  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","zupap","2021-11-01T13:01:59Z","2022-03-14T00:09:49Z"
"","10683","[🐛 Bug]: The previously configured ChromeDriver service is still running. (wrong error message for unsupported chromedriver version?)","### What happened?  My tests ran fine before a system upgrade. Now I get: Even if running my tests is the first thing I do after booting my computer. ``` Error: The previously configured ChromeDriver service is still running. You must shut it down before you may adjust its configuration.     at Object.setDefaultService (/home/ploppz/oa/minos/ui/node_modules/.pnpm/selenium-webdriver@4.1.2/node_modules/selenium-webdriver/chrome.js:262:11)     at buildChromeDriver (/home/ploppz/oa/minos/ui/tests/features/support/world.js:20:10) ```  ### How can we reproduce the issue?  The code is not open source, but I have a suspicion that it has to do with my version of `chromium`. I'm on Arch Linux, and after the system update, my `chromium` version is `101`. Does Selenium support this chromium version? If not, then perhaps the error message could be improved.   ### Operating System  Arch Linux  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  chromium 101  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 101  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Ploppz","2022-05-23T09:17:09Z","2022-07-08T12:36:09Z"
"","9995","DeprecationWarning: executable_path has been deprecated, please pass in a Service object","### What happened?  My selenium program was working yesterday but not today ..  The following error comes . !  ``` DeprecationWarning: executable_path has been deprecated, please pass in a Service object ```   ### How can we reproduce the issue?  _No response_  ### Relevant log output  ```shell DeprecationWarning: executable_path has been deprecated, please pass in a Service object ```   ### Operating System  Windows 10   ### Selenium version  Python 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95 (latest)  ### What are the browser driver(s) and version(s) where you see this issue?  Latest ChromeDriver   ### Are you using Selenium Grid?  _No response_","closed","I-question,","httpanand","2021-10-28T14:28:57Z","2022-01-07T00:07:33Z"
"","10160","[🐛 Bug]:","### What happened?  My program has been working fine until recently and I have not changed anything in the code. The last time I had a problem with selenium like this it was because my chrome updated its version but this time my chrome version has not changed.  My code does not use anything like SQLite either.  Chrome version: Version 94.0.4606.54 (Official Build) (64-bit) Code I use to launch my selenium:  ``` def launch_web_driver(self,single_website = False):     if self.web_driver is None or not self.check_if_browser_alive():         user_directory = ""C:\\Users\\bestg\\AppData\\Local\\Google\\Chrome\\"" + self.data_dir         config_options = Options()         config_options.add_argument(f'user-data-dir={user_directory}')         try:             self.launch_message()             self.web_driver = webdriver.Chrome(options = config_options)             self.visit_website(self.initial_url)         except Exception as e:             print(f""Selenium error: \n{str(e)}"")             if 'user data directory is already in use' in str(e):                 url = self.web_driver.command_executor._url       #""http://127.0.0.1:60622/hub""                 session_id = self.web_driver.session_id            #'4e167f26-dc1d-4f51-a207-f761eaf73c31                 self.web_driver = webdriver.Remote(command_executor=url,desired_capabilities={})                 self.web_driver.session_id = session_id       elif single_website and self.web_driver.current_url != self.initial_url:         self.visit_website(self.initial_url) ```   ### How can we reproduce the issue?  ```shell I am not sure; everything was working fine and then stopped. I have not touched the source code for this program in a while and as far as I know, nothing has been updated that would have broken it externally. ```   ### Relevant log output  ```shell December 16 2021 03:30:03 PM | Launching web driver  DevTools listening on ws://127.0.0.1:1600/devtools/browser/af61a701-c7dc-408c-b875-367663e26405 [7024:7764:1216/153004.922:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE id=? [7024:7764:1216/153004.922:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ? [7024:7764:1216/153004.926:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ? [7024:7764:1216/153004.938:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ? [7024:7764:1216/153005.337:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ? [7024:7764:1216/153006.406:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ? [7024:18884:1216/153007.485:ERROR:chrome_browser_main_extra_parts_metrics.cc(228)] crbug.com/1216328: Checking Bluetooth availability started. Please report if there is no report that this ends. [7024:18884:1216/153007.485:ERROR:chrome_browser_main_extra_parts_metrics.cc(231)] crbug.com/1216328: Checking Bluetooth availability ended. [7024:18884:1216/153007.486:ERROR:chrome_browser_main_extra_parts_metrics.cc(234)] crbug.com/1216328: Checking default browser status started. Please report if there is no report that this ends. [7024:10988:1216/153007.488:ERROR:device_event_log_impl.cc(214)] [15:30:07.488] USB: usb_device_handle_win.cc:1048 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [7024:10988:1216/153007.490:ERROR:device_event_log_impl.cc(214)] [15:30:07.490] USB: usb_device_handle_win.cc:1048 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [7024:18884:1216/153007.494:ERROR:chrome_browser_main_extra_parts_metrics.cc(238)] crbug.com/1216328: Checking default browser status ended. [7024:7764:1216/153007.504:ERROR:database.cc(1761)] History SQLite error: code 1 errno 0: no such column: publicly_routable sql: SELECT id,url,visit_time,from_visit,transition,segment_id,visit_duration,incremented_omnibox_typed_score,publicly_routable FROM visits WHERE url=? ORDER BY visit_time DESC, id DESC LIMIT ? ```   ### Operating System  Windows 11  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome  94.0.4606.54 (Official Build) (64-bit)  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","NickWinston123","2021-12-16T20:51:28Z","2022-01-17T00:07:49Z"
"","10117","[🐛 Bug]: Unable to establish websocket connection to http://x.x.x.x:4444/session/${session}/se/cdp","### What happened?  My objective is: to retrieve information in a xhr response body, sent by a submitted filled in form  My approach is: to use DevTools. 1) locally, my approach is working 2) remotely, my approach isn't working indeed i have this exception 14:29:12  org.openqa.selenium.remote.http.ConnectionFailedException:  14:29:12  Unable to establish websocket connection to http://x.x.x.x:4444/session/${session}/se/cdp 14:29:12  Build info: version: '4.0.0', revision: '3a21814679' 14:29:12  System info: host: 'c54d6a2a855f', ip: '10.0.5.6', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.45.1.el7.x86_64', java.version: '11.0.12' 14:29:12  Driver info: driver.version: unknown  ### How can we reproduce the issue?  ```shell **DevTools** Code to use DevTools -----------------------         WebDriver augmentedDriver= new Augmenter().augment(WebDriverRunner.getWebDriver());         DevTools devTools = ((ChromeDriver) augmentedDriver).getDevTools();         devTools.createSession();         devTools.send(Network.enable(Optional.of(100000000), Optional.empty(), Optional.empty()));         final String[] textFromResponseBody= new String[1];         devTools.addListener(Network.responseReceived(), responseReceived -> {             if (responseReceived.getResponse()                                 .getUrl()                                 .contains(PATH_CONTEXT)) {                 textFromResponseBody[0] = devTools.send(Network.getResponseBody(responseReceived.getRequestId()))                                                            .getBody();             }         });  after the filling in the form -----------------------------         log.info(""clickOnSubmit "" + SUBMIT_BUTTON);         SUBMIT_BUTTON.should(enabled, visible)                      .click();  confirmation of extracting the responseBody -------------------------------------------          log.info(""Work request ID : {}"", textFromResponseBody[0]);  **NetworkInterceptor**         final String[] textFromResponseBody= new String[1];         NetworkInterceptor interceptor = new NetworkInterceptor(                 (((ChromeDriver)new Augmenter().augment(WebDriverRunner.getWebDriver()))),                 (Filter) next -> req -> {                     HttpResponse res = next.execute(req);                     if ( req.getUri().contains(PATH_CONTEXT)) {                         log.info(res.getContentString());                         textFromResponseBody[0] = res.getContentString();                     }                     return res;                 }         );  ```  ### Relevant log output  ```shell 14:29:11  Dec 07, 2021 1:28:54 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch 14:29:11  INFO: Found exact CDP implementation for version 95 14:29:11  Dec 07, 2021 1:29:04 PM org.openqa.selenium.remote.http.netty.NettyWebSocket lambda$new$0 14:29:11  WARNING: connection timed out: /x.x.x.x:4444 14:29:11  java.net.ConnectException: connection timed out: /x.x.x.x:4444 14:29:11  	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 14:29:11  	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 14:29:11  	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 14:29:11  	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 14:29:11  	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262) 14:29:11  	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) 14:29:11  	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) 14:29:11  	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 14:29:11  	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) 14:29:11  	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) 14:29:11  	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 14:29:11  	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 14:29:11  	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 14:29:11  	at java.base/java.lang.Thread.run(Thread.java:866) 14:29:11  Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /10.42.2.196:4444 14:29:11  	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261) 14:29:11  	... 9 more 14:29:11   14:29:11  Dec 07, 2021 1:29:04 PM org.openqa.selenium.remote.http.WebSocket$Listener onError 14:29:11  WARNING: connection timed out: /x.x.x.x:4444 14:29:11  java.net.ConnectException: connection timed out: /x.x.x.x:4444 14:29:11  	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 14:29:11  	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 14:29:11  	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 14:29:11  	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 14:29:11  	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 14:29:11  	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262) 14:29:11  	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) 14:29:11  	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) 14:29:11  	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 14:29:11  	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) 14:29:11  	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) 14:29:11  	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 14:29:11  	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 14:29:11  	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 14:29:11  	at java.base/java.lang.Thread.run(Thread.java:866) 14:29:11  Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /10.42.2.196:4444 14:29:11  	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261) 14:29:11  	... 9 more 14:29:11   ... ... 14:29:12  [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 51.575 s","closed","","Tonicku","2021-12-07T13:57:47Z","2022-02-11T00:07:50Z"
"","10586","[🐛 Bug]: OpenQA.Selenium.WebDriverException: 'Cannot start the driver service on http://localhost:59166/'","### What happened?  My MStest test script works as a charm using Selenium 3.141.0 version. After I upgraded to the latest version 4.1.0 , I have started getting This error only in Firefox session  ### How can we reproduce the issue?  ```shell - Create .NET 3.1 mstest project  - Firefox driver latest version or previous ( any version)  -Add selenium 4.1.0  - Run test ```   ### Relevant log output  ```shell OpenQA.Selenium.WebDriverException   HResult=0x80131500   Message=Cannot start the driver service on http://localhost:59166/   Source=WebDriver   StackTrace:    at OpenQA.Selenium.DriverService.Start()    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.WebDriver..ctor(ICommandExecutor executor, ICapabilities capabilities)    at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxDriverService service, FirefoxOptions options, TimeSpan commandTimeout)    at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxDriverService service, FirefoxOptions options)    at bPerxDynamocData.bPerxVoucherCall.InitializeClass(TestContext TestContext) in C:\Users\Karim\source\repos\bPerxDynamocData\configuration\bPerxVoucherCall.cs:line 67 ```   ### Operating System  windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 90  ### What are the browser driver(s) and version(s) where you see this issue?  Firefox driver v0.27.0  ### Are you using Selenium Grid?  No","closed","I-issue-template,","QA1980","2022-04-28T15:50:55Z","2022-05-30T00:13:52Z"
"","10331","[🐛 Bug]: Unknown exceptions when start selenium","### What happened?  My machine and version info:  ```  lizhe@ori  OS: Manjaro 21.2.3 Qonos  Kernel: x86_64 Linux 5.15.16-1-MANJARO  Uptime: 5h 55m  Packages: 1440  Shell: python  Resolution: 3840x1080  DE: KDE 5.90.0 / Plasma 5.23.5  WM: KWin  GTK Theme: Breeze [GTK2/3]  Icon Theme: breeze-dark  Disk: 39G / 236G (17%)  CPU: Intel Core i7-7700K @ 8x 4.5GHz [50.0°C]  GPU: Intel Corporation HD Graphics 630 (rev 04)  RAM: 9835MiB / 15866MiB  Python 3.10.2 selenium version 4.1.0  ```  I just run a basic code  ```py from selenium import webdriver  options = webdriver.ChromeOptions() driver = webdriver.Chrome() url = ""https://www.google.com"" driver.get(url) input(""please wait..."")  ``` Error msg in pycharm:  >/usr/bin/python3 /home/lizhe/Applications/pycharm-2021.3.1/plugins/python/helpers/pydev/pydevd.py --multiproc --qt-support=auto --client 127.0.0.1 --port 41933 --file /home/lizhe/OriNote/wikiScripts/VoiceCommand.py Connected to pydev debugger (build 213.6777.50) Traceback (most recent call last):   File ""/home/lizhe/.local/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py"", line 93, in __init__     RemoteWebDriver.__init__(   File ""/home/lizhe/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 268, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/lizhe/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 359, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/lizhe/.local/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 424, in execute     self.error_handler.check_response(response)   File ""/home/lizhe/.local/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py"", line 211, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message:  python-BaseException Process finished with exit code 1   I try to use firefox instead of Chrome, same error. Thing is there is no error message shows out. So how to fix it?   ### How can we reproduce the issue?  ```shell Follow my setting above. ```   ### Relevant log output  ```shell Already pasted ```   ### Operating System  Manjaro 21  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 97.0.4692.99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71 (adefa7837d02a07a604c1e6eff0b3a09422ab88d-refs/branch-heads/4692@{#1247})  ### Are you using Selenium Grid?  no","closed","I-defect,","woshichuanqilz","2022-02-05T17:05:56Z","2022-06-15T00:13:04Z"
"","10606","[🐛 Bug]: wait.until is not usable","### What happened?  My ""wait.until"" function worked fine yesterday, but all a sudden now is not runnable.  Error message: reason: no instance(s) of type variable(s) V exist so that ExpectedCondition conforms to Function","closed","I-defect,","Clairwai","2022-05-04T06:00:17Z","2022-07-09T00:10:52Z"
"","10261","[🐛 Bug]: move_to_element_with_offset(element, 0, 0) is clicking at the middle of the element.","### What happened?  move_to_element_with_offset(element, 0, 0) is clicking at the middle of the element.  ### How can we reproduce the issue?  ```shell from selenium import webdriver  from selenium.webdriver import ActionChains from selenium.webdriver.common.by import By   def test_click_top_left_selenium():     driver = webdriver.Chrome()     driver.get(""file:///C:/Users/user/Desktop/GitHub/selenium-python-helium/tests/api/data/test_point.html"")     el = driver.find_element(By.XPATH, ""//button[text()='Button 1']"")     action = ActionChains(driver)     action.move_to_element_with_offset(el, 0, 0)     action.click()     action.perform()     assert driver.find_element(By.ID, ""result"").text == ""Button 1 clicked at offset (0, 0)."" ```   ### Relevant log output  ```shell n/a ```   ### Operating System  Windows 10  ### Selenium version  Python 3.9  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 97  ### Are you using Selenium Grid?  Python Selenium 4.1.0","closed","needs-triaging,","petrisorionel","2022-01-18T12:38:35Z","2022-02-19T00:09:43Z"
"","10680","[🐛 Bug]: Capabilities issues with 4.1.5","### What happened?  Main issue for now is that I can't enable VNC with 4.1.5.  Old code working with 4.1.3 was using desired_capabilities, tried to use options but it doesn't work.  **4.1.3 code:** ``` capabilities = DesiredCapabilities.CHROME.copy() capabilities['enableVNC'] = True driver = webdriver.Remote(     command_executor=self.selenium_remote_url,     desired_capabilities=capabilities, ) ```  **4.1.5 code:** ``` options = webdriver.ChromeOptions() options.set_capability(""enableVNC"", True) driver = webdriver.Remote(     command_executor=selenium_remote_url,     options=options, ) ```  **Results:** 4.1.3: session created with VNC 4.1.5: session created without VNC  ### How can we reproduce the issue?  ```shell options = webdriver.ChromeOptions() options.set_capability(""enableVNC"", True) driver = SelenoidRemote(     command_executor=self.selenium_remote_url,     options=options, ) ```   ### Relevant log output  ```shell No vnc ```   ### Operating System  Ubuntu 20  ### Selenium version  4.1.5  ### What are the browser(s) and version(s) where you see this issue?  any Chrome versions  ### What are the browser driver(s) and version(s) where you see this issue?  all chrome versions  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","adigaboy","2022-05-22T14:12:00Z","2022-06-23T00:11:08Z"
"","10551","[🐛 Bug]: Session queue leak","### What happened?  Looks like there's a session queue leak in Selenium 4 causing it to eat up resources in the long run.  When Selenium 4 grid runs out of sessions, incoming session requests go into the session queue.  When a node is freed it takes from the session queue in a FIFO order.  The problem seems to be Selenium is creating two sessions when it takes from the session queue.  The extra session leaves behind temporary resources (scoped_dir_* folders) in the %TMP% folder that are not deleted.  I'm using Windows 10.   ### How can we reproduce the issue?  ```shell 1. Start Selenium 4 stand alone.  It creates 5 chrome nodes. 2. Write a simple script to get a session from the grid          ChromeOptions options = new ChromeOptions();         options.addArguments(""no-sandbox"");         options.addArguments(""--headless"");         options.addArguments(""--disable-component-update"");         options.addArguments(""--disable-extensions"");         options.addArguments(""start-maximized"");          options.setExperimentalOption(""prefs"", chromePref);         WebDriver driver = new RemoteWebDriver(new URL(hub), options);          try {           Thread.sleep(60000);           // do something         } catch (Exception ex) {           ex.printStackTrace();         }  3. Run 7 instances 4. In http://:4444/ui/index.html#/, it shows 5 running, 2 in queue. 5. Watch this page, when one of the session ends, Selenium should take one off the queue and create a new session.  However, observe that it creates two sessions when it takes from the queue. 6. When your normal sessions are done, notice two extra sessions still show on the page. 7. Go to %TMP% folder (c:\Users\\AppData\Local\Temp), you will see scoped_dir_* folders not cleaned up.  NOTE: if you run 5 instances, it will NOT leave behind scoped_dir_* folders.  The scoped_dir_* folders can range from 1 MB to ~ 50MB.  It will slowly eat up the system disk space and eventually Selenium won't be able to create new sessions and throw ""failed to write prefs file"". ```   ### Relevant log output  ```shell none ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4  ### What are the browser(s) and version(s) where you see this issue?  chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  chrome driver 100  ### Are you using Selenium Grid?  Selenium 4 grid or selenium 4 standalone.","closed","I-defect,","tommy0831","2022-04-15T05:20:25Z","2022-06-01T00:13:44Z"
"","10320","[🐛 Bug]: getCssValue is not following the document","### What happened?  Just wonder if the correct behaivor of getCssValue.  1. What's the actual expected return value for getCssValue(shorthand) 2. Any missed description in Java doc   Below is the actual return in code Try to execute on Chrome/Edge/IE 1. As document mentioned, the shorthand CSS properties should be not returned. But got full value on Chrome/Edge, and empty value """" on IE 2. The color is different in background and background-color  As can be seen, the color is different in background and background-color `rgb(78, 110, 242) none repeat scroll 0px 0px / auto padding-box border-box` `rgba(78, 110, 242, 1)`   ![图片](https://user-images.githubusercontent.com/3264250/152402999-928e13ad-805a-4ea8-a4c1-f39b98c39622.png)  3. IE return empty """"  As the doc mentioned [CSS Value reference ](https://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue)  This method returns **null** if the property is a [shorthand](http://www.w3.org/TR/1998/REC-CSS2-19980512/about.html#shorthand) property.     _reference:_  https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/WebElement.html#getCssValue(java.lang.String) `Get the value of a given CSS property. Color values could be returned as rgba or rgb strings. This depends on whether the browser omits the implicit opacity value or not. For example if the ""background-color"" property is set as ""green"" in the HTML source, the returned value could be ""rgba(0, 255, 0, 1)"" if implicit opacity value is preserved or ""rgb(0, 255, 0)"" if it is omitted. Note that shorthand CSS properties (e.g. background, font, border, border-top, margin, margin-top, padding, padding-top, list-style, outline, pause, cue) are not returned, in accordance with the [DOM CSS2 specification](http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration) - you should directly access the longhand properties (e.g. background-color) to access the desired values. See [W3C WebDriver specification](https://w3c.github.io/webdriver/#get-element-css-value) for more details.`    ### How can we reproduce the issue?  ```shell Scenario 1: Chrome ChromeDriver driver = new ChromeDriver(); driver.get(""https://www.baidu.com/""); String background = driver.findElement(By.id(""su"")).getCssValue(""background""); //rgb(78, 110, 242) none repeat scroll 0px 0px / auto padding-box border-box System.out.println(background);  String color = driver.findElement(By.id(""su"")).getCssValue(""background-color""); //rgba(78, 110, 242, 1) System.out.println(color); driver.quit();  Scenario 2: Edge EdgeDriver driver = new EdgeDriver(); driver.get(""https://www.baidu.com/""); String background = driver.findElement(By.id(""su"")).getCssValue(""background""); //rgb(78, 110, 242) none repeat scroll 0px 0px / auto padding-box border-box System.out.println(background);  String color = driver.findElement(By.id(""su"")).getCssValue(""background-color""); //rgba(78, 110, 242, 1) System.out.println(color); driver.quit();   Scenario 3: IE  InternetExplorerDriver driver = new InternetExplorerDriver(); driver.get(""https://www.baidu.com/""); String background = driver.findElement(By.id(""su"")).getCssValue(""background""); // """" System.out.println(background);  String color = driver.findElement(By.id(""su"")).getCssValue(""background-color""); //rgba(78, 110, 242, 1) System.out.println(color); driver.quit(); ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Win10  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Edge 97.0.1072.76 / Chrome 98.0.4758.81/ IE 11.789.19041.0  ### What are the browser driver(s) and version(s) where you see this issue?  MSEdgeDriver 97.0.1072.76 /  ChromeDriver 98.0.4758.48/ InternetExplorerDriver 4.0.0.0  ### Are you using Selenium Grid?  N/A","open","I-defect,","alaahong","2022-02-03T18:20:23Z","2022-02-07T00:02:01Z"
"","10357","[🐛 Bug]: Getting java.lang.NoSuchMethodError exception when initializing a new driver after upgrading Selenium WebDriver to the latest version (4.1.2)","### What happened?  Just after upgrading my Selenium WebDriver to the latest version (**4.1.2**), I get `java.lang.NoSuchMethodError: 'com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)' ` It happens in all situations (Java and TestNG classes. Also when using WebDriverManager library).  ![image](https://user-images.githubusercontent.com/46620378/153484513-b82a227c-6754-4be0-983e-751e9a901784.png)  **Note**: Works fine with Selenium WebDriver version 4.1.1 ![image](https://user-images.githubusercontent.com/46620378/153484770-0fb41428-08de-4d5c-857b-fa1f6b908c30.png)   ### How can we reproduce the issue?  ```shell Sample Class: public class NewTest { 	@Test 	public void test() { 		WebDriverManager.chromedriver().setup(); 		WebDriver driver = new ChromeDriver(); 		driver.manage().window().maximize();  		driver.get(""https://www.google.com/ncr""); 	} }  pom.xml file:  	4.0.0 	com.automation 	Automation 	0.0.1-SNAPSHOT  	 		 			org.seleniumhq.selenium 			selenium-java 			4.1.2 		  		 			io.github.bonigarcia 			webdrivermanager 			5.0.3 		  		 			org.testng 			testng 			7.5 			test 		  	   ```   ### Relevant log output  ```shell [RemoteTestNG] detected TestNG version 7.5.0 SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. FAILED: test java.lang.NoSuchMethodError: 'com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.of(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)' 	at org.openqa.selenium.chrome.AddHasCasting.getAdditionalCommands(AddHasCasting.java:38) 	at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.getExtraCommands(ChromeDriver.java:123) 	at org.openqa.selenium.chrome.ChromeDriver$ChromeDriverCommandExecutor.(ChromeDriver.java:118) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:106) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:93) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:48) 	at practice.NewTest.test(NewTest.java:13) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135) 	at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673) 	at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220) 	at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50) 	at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945) 	at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193) 	at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.testng.TestRunner.privateRun(TestRunner.java:808) 	at org.testng.TestRunner.run(TestRunner.java:603) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:429) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383) 	at org.testng.SuiteRunner.run(SuiteRunner.java:326) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169) 	at org.testng.TestNG.runSuites(TestNG.java:1092) 	at org.testng.TestNG.run(TestNG.java:1060) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)   ===============================================     Default test     Tests run: 1, Failures: 1, Skips: 0 ===============================================   =============================================== Default suite Total tests run: 1, Passes: 0, Failures: 1, Skips: 0 =============================================== ```   ### Operating System  WIndows 10  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 98.0.4758.80  ### Are you using Selenium Grid?  No","closed","needs-triaging,","MahmoudElSharkawy","2022-02-10T19:46:13Z","2022-03-13T00:09:47Z"
"","10167","[🐛 Bug]: Certain JavaScript console messages (Uppy) are not logged by DevTools listeners","### What happened?  JSException listener does not log error messages from Uppy or requests exceptions  1. With browser opened by Selenium - go to https://uppy.io/examples/dashboard/ 2. Open DevTools, Console tab 3. Upload 2 files 4. Move uploaded file to another directory OR just rename them 5. Click 'Upload files' button  In Console tab in browser you can see various error messages logged such as:  - PATCH {URL} net::ERR_FILE_NOT_FOUND  - [Uppy] [%timestamp] Failed to upload %fileName This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.  But Selenium listeners do not log these exceptions, only one that IS logged is f.e. - 19:09:48 [CDP Connection] ERROR DevToolsTest - [console.log] Failed to load resource: net::ERR_FILE_NOT_FOUND but none of ""[Uppy]"" exception are logged ![selenium_chrome_uppy_logs_in_console](https://user-images.githubusercontent.com/24297270/146815382-f7cce0e1-8edc-417e-9985-39316fc0fe4c.png) [test.log](https://github.com/SeleniumHQ/selenium/files/7747285/test.log)    ### How can we reproduce the issue?  ```shell public static DevTools initDevTools(WebDriver driver) {             final Optional devToolsOpt = ((HasDevTools) driver).maybeGetDevTools();             if (devToolsOpt.isPresent()) {                 final DevTools devTools = devToolsOpt.get();                 devTools.createSessionIfThereIsNotOne();                 devTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));                 devTools.send(Log.enable());                  addConsoleLogListener(devTools);                 addJSExceptionsListener(devTools);                 logger.info(""DevTools properly enabled for WebDriver"");                 return devTools;             }         logger.error(""DevTools initialization failed for this WebDriver"");         return null;     }      public static void addConsoleLogListener(DevTools devTools) {         devTools.addListener(Log.entryAdded(),                 logEntry -> {                         final String log = ""[console.log] "" + logEntry.getText();                         logger.error(log);                 });     }       public static void addJSExceptionsListener(DevTools devTools) {         Consumer addEntry = jsException -> logger.error(""JavaScript exception logged: "" + jsException.getMessage());         devTools.getDomains().events().addJavascriptExceptionListener(addEntry);     }       public void testUppyLogs() {         initDevTools(driver);         driver.get(""https://uppy.io/examples/dashboard/"");         final String testFile1Path = FileUtils.getResourceFilePath(""test3.html"");         final String testFile2Path = FileUtils.getResourceFilePath(""test4.html"");         FileUtils.uploadFile(testFile1Path);         driver.findElement(By.className(""uppy-DashboardContent-addMoreCaption"")).click();         FileUtils.uploadFile(testFile2Path);          //Move files to trigger JS Errors         File testFile1 = new File(testFile1Path);         File testFile2 = new File(testFile2Path);         final String movedTestFile1Path = testFile1Path.replace(""test3"", ""moved3"");         final String movedTestFile2Path = testFile2Path.replace(""test4"", ""moved4"");         final File movedTestFile1 = new File(movedTestFile1Path);         final File movedTestFile2 = new File(movedTestFile2Path);         try {             testFile1.renameTo(movedTestFile1);             testFile2.renameTo(movedTestFile2);              //Upload files and await console logging             driver.findElement(By.xpath("".//*[contains(@aria-label,'Upload')]"")).click();             WaitUtils.sleepSeconds(2);         } catch (Exception e) {             e.printStackTrace();         } finally {             movedTestFile1.renameTo(testFile1);             movedTestFile2.renameTo(testFile2);         }     } ```   ### Relevant log output  ```shell See attachment test.log - logs from my own test ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 96.0.4664.45  ### Are you using Selenium Grid?  No Grid is used","closed","I-defect,","Wojciech-Kopec","2021-12-20T18:33:15Z","2022-03-20T00:09:56Z"
"","10374","[🐛 Bug]: Grid Protocol Converter Insufficient","### What happened?  Java Bindings and the Grid are maintaining a lot of extra code in order to be backwards compatible with earlier versions of Selenium. **Except we don't have any tests to show we've been successful with this**. I ran the old Watir-WebDriver tests using the final version of Se2 for the Ruby bindings against the latest Grid, and 40% of them failed.   #### Updated Update  Found several more issues in Java bindings for OSS code; there are 3 categories: 1. Stuff that was broken in Grid 4 with the Locator Conversions (`name`, `id` & `class name` locators) 2. Stuff that was broken in Server 3.7 when translating JWP/early W3C to W3C (`switchToWindow` & `sendKeysToActiveElement`) — broken running Java bindings 2.53.1 3. Stuff that was broken in Server 3.7 when translating pre-W3C JWP to W3C (locators except `id` & `name`, `implicitlyWait`, `setScriptTimeout` and `switchToFrame`) — broken running Java bindings 2.45.0 or other bindings 2.53.1  This is now looking like a lot more work to fix; and less likely that people are making as much use of the protocol translations as we've thought.  #### Update  * ~The two things definitely affecting the Java bindings actually look like they might be simple to fix~ * I've never seen a framework that didn't have a way to check if an element wasn't there, and didn't use id/name/class name to do so, which indicates to me that no one has tried to run their 2.x code on a 4.x server, otherwise they'd have raised an issue. * No one using Selenium 2 could use Selenium 3 server and switch windows since v3.6 (August 2017), which small sample size, but I've never worked anywhere that I didn't need to switch windows for my test suites. * I was surprised that Selenium Server 2.53 was able to run latest Chrome version so well. If all you care about is Chrome and/or *anything* working, there's zero reason to upgrade off of Server 2.53 right now, (which would explain why there are still so many downloads of it). * Whatever we end up doing, I don't think it is unreasonable that running tests on the latest versions of (non-Chrome) browsers should require updating to a version of Selenium > 3.9 when w3c was pretty much finalized, in February 2018.  Uploaded a repo with 13 failing JWP tests with Grid 4 (and 1 failing JWP test with Server v3 for completeness) https://github.com/titusfortner/grid4conversion/tree/main/src/test/java/com/titusfortner/grid4conversion  #### Options  1. File these as bugs and fix/ignore as time allows until we do a non-backward compatible rewrite in Selenium 5 2. Fix these bugs ASAP and then separate out all the protocol conversion code and provide it the same way we do with leg-rc package 3. Consider it a sunk cost, and just delete all of it now so we can simplify the code and make forward progress  Someone suggested to me that we should proceed with option 3 and if any user really wants option 2, they can pay us/someone to do it, and that makes sense to me with limited resources.  #### Supporting Data  Here are the different combinations I tested with old watir-webdriver specs using Selenium 2.53.4 Ruby bindings with the latest versions of the browsers and the latest versions Selenium (toggling OSS mode on/off in Se 3/4 for Chrome)  | Browser  | Local | Se 2 | Se 3 | Se 3 OSS | Se 4 | Se 4 OSS | Total Tests | | ------------- | ------------- | ------------- | ------------- | ------------- | ------------- | ------------- | ------------- | | Chrome  | 3  | 1  | 356  | 3  | 489  | 117 | 1235 | | Firefox  | N/A  | N/A  | 364  | N/A  | 516  | N/A  | 1244 | | Safari  | N/A  | N/A  | 302  | N/A  | 404 | N/A  | 1120 |  Things that are broken when running Bindings 2.53.x  * Return JavaScriptEnabled as part of capabilities (Ruby only — won't even try to execute JS if not in caps) * Ensure Window ""name"" parameter is updated to ""handle"" (Java & Ruby) * Delete null values from Cookie arguments (Ruby only — Java deletes null params before sending) * ~Translate click actions with bodies into correct actions (e.g., `{""button"": 2}`)~ (This was broken for Selenium Server 3.x but fixed in Grid 4) * Translate moveTo commands with x/y offsets (Ruby only — Ruby sends null element for just moveTo, Java omits it) * Using `id` or `name` to locate a missing element will throw the wrong error (Java & Ruby) * Using `class name` to locate an element gives unable to determine locator strategy (Java & Ruby) * Sending Key to Active Element gives UnsupportedCommandException (Java & Ruby)  Things that are broken when running Java Bindings 2.45 (or later for other bindings):  * Using `css selector`, `xpath`, `tag name`, `link text`, or `partial link text` values can't be converted to Web Element * Setting script timeout –> Cannot call non W3C standard command while in W3C mode * Setting implicit wait timeout —> Cannot call non W3C standard command while in W3C mode * Switching to Frame by Name —> invalid argument: 'id' can not be string   (Watir doesn't do a whole lot with actions, so it's ~likely~ possible ~a bunch of~ more things are broken in the translation)  @asolntsev is going to try to help us out by running the same experiment with old Selenide test suite for Java. That might tell us more about how bad the situation is. It's possible that other bindings will have fewer issues.  My guess though is that our assumption that Selenium 2 Bindings users can use Selenium 3 Server or Selenium 4 Grid is misguided, and that people still using Selenium 2 are using Selenium 2 server, and we would be better off removing the translation code rather than fixing it.  ### How can we reproduce the issue?  Ruby can be reproduced by running watir-webdriver 0.9.3 watirspecs with selenium-webdriver 2.53.4 setting REMOTE, and updating the server start code. Java with JUnit 5: ```java     @Test     void getWindow() {         Set windowHandles = driver.getWindowHandles();         String handle = windowHandles.stream().findFirst().get();          Assertions.assertDoesNotThrow(() -> driver.switchTo().window(handle));     }      @Test     void useIDForMissingElement() {         NoSuchElementException thrown = Assertions.assertThrows(NoSuchElementException.class, () -> {             driver.findElement(By.id(""not-there""));         });          String msg = ""no such element: Unable to locate element: {\""method\"":\""id\"",\""selector\"":\""not-there\""}"";         Assertions.assertTrue(thrown.getMessage().contains(msg));     } ```  ### Relevant log output  ``` Caused by: org.openqa.selenium.WebDriverException: Returned value cannot be converted to WebElement: {stacktrace=java.lang.RuntimeException: Unable to execute request for an existing session: An unknown error has occurred ``` and ``` org.opentest4j.AssertionFailedError: Unexpected exception thrown: org.openqa.selenium.WebDriverException: invalid argument: 'handle' must be a string ```  ### Operating System  MacOS Big Sur  ### Selenium version  Ruby 2.53.4 & Java 2.45.0 & Java 2.53.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome, Firefox, Safari  ### What are the browser driver(s) and version(s) where you see this issue?  Latest  ### Are you using Selenium Grid?  4.1.2","open","I-defect,","titusfortner","2022-02-18T22:03:20Z","2022-07-20T14:12:49Z"
"","10277","[🐛 Bug]: Can't get json data from chrome console log.","### What happened?  It's currently impossible to get JSON structure from the console log on chrome. the log is available but it's possible to have the object structure and information.    ### How can we reproduce the issue?  ```shell ChromeOptions options = new ChromeOptions(); List ls = new List(); ls.Add(""enable-automation""); ls.Add(""enable-logging"");  options.SetLoggingPreference(LogType.Browser, LogLevel.Info); options.AddExcludedArguments(ls); options.AddArgument(@""--user-data-dir=C:\Users\user\AppData\Local\Google\Chrome\User Data""); options.AddArgument(""--start-maximized"");  IWebDriver driver = new ChromeDriver(options); driver.Navigate().GoToUrl(""url""); var entries = driver.Manage().Logs.GetLog(LogType.Browser);  foreach (var entry in entries) {    Console.WriteLine(entry.ToString()); } ```   ### Relevant log output  ```shell I get all the log output but not the json data. ```   ### Operating System  Windows 10  ### Selenium version  C# Selenium.WebDriver 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97.0.4692.99  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 97.0.4692.7100  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","benoitriendeau","2022-01-21T18:55:55Z","2022-02-21T00:09:02Z"
"","10316","[🐛 Bug]: 4.1 CDP Browser connection is not being set to a browser connection","### What happened?  It works expected in version 4.0, but when I upgrade to 4.1, I get the error: `{       id: 2,       error: { code: -32601, message: ""'SystemInfo.getProcessInfo' wasn't found"" },       sessionId: 'B0F2F63E41CD226149487BF5A8D1817A'     }`  @pujagani   ### How can we reproduce the issue?  ```shell {   ""name"": ""selenium-4.1-cdp-bug"",   ""version"": ""1.0.0"",   ""main"": ""index.js"",   ""license"": ""MIT"",   ""dependencies"": {     ""@types/selenium-webdriver"": ""^4.0.16"",     ""edgedriver"": ""^4.17134.1"",     ""selenium-webdriver"": ""^4.1.1""   } }   import ""edgedriver""; import edge from ""selenium-webdriver/edge"";  async function example() {   const edgeService = new edge.ServiceBuilder(     ""C:/Program Files (x86)/Microsoft/Edge/Application/msedgedriver.exe""   )     .setPort(55555)     .build();    const options = new edge.Options();   // configure browser options ...    const driver = edge.Driver.createSession(options, edgeService);   //To wait for browser to build and launch properly    await driver.get(""about:blank"");    const browserConnection = await driver.createCDPConnection(""browser"");    browserConnection._wsConnection.on(""message"", (data) => {     /**      * {       id: 2,       error: { code: -32601, message: ""'SystemInfo.getProcessInfo' wasn't found"" },       sessionId: 'B0F2F63E41CD226149487BF5A8D1817A'         }      */     console.log(JSON.parse(data));   });    await browserConnection.execute(""SystemInfo.getProcessInfo"", {});    await driver.sleep(1000);   //It is always a safe practice to quit the browser after execution   await driver.quit(); }  example(); ```   ### Relevant log output  ```shell {   id: 2,   error: { code: -32601, message: ""'SystemInfo.getProcessInfo' wasn't found"" },   sessionId: 'B0F2F63E41CD226149487BF5A8D1817A' } ```   ### Operating System  Windows 11  ### Selenium version  Javascript Selenium Webdriver  ### What are the browser(s) and version(s) where you see this issue?  Edge 97.0.1072.76  ### What are the browser driver(s) and version(s) where you see this issue?  Edge Driver ^4.17134.1  ### Are you using Selenium Grid?  4.1.1","open","C-devtools,","zackasaurus","2022-02-02T15:18:36Z","2022-02-11T12:48:58Z"
"","10791","[🐛 Bug]: OpenQA.Selenium.DevTools.CommandResponseException: 'Fetch.continueRequest: Invalid state for continueInterceptedRequest'","### What happened?  It throws this exception on driver.Navigate().GoToUrl(url). I am using proxies which require authentication and this error happens when I try to go back to the initial url after authenticating which I need to do because it is a form and we are attempting to use this form with the proxy each time and sometimes the proxy will change which is already done with other code.  ### How can we reproduce the issue?  ```shell             Proxy p = new Proxy();             p.Kind = ProxyKind.Manual;             p.IsAutoDetect = false;             p.SslProxy = ""PROXY:PORT"";             p.HttpProxy = ""PROXY:PORT"";             chromeOptions.Proxy = p;                          if (driver.Url != url)             {                 var handler = new NetworkAuthenticationHandler()                 {                     UriMatcher = _ => true,                     Credentials = new PasswordCredentials(proxy.username, proxy.password)                 };                 INetwork networkInterceptor = driver.Manage().Network;                 networkInterceptor.AddAuthenticationHandler(handler);                 networkInterceptor.StartMonitoring().Wait();                 driver.Navigate().GoToUrl(url);                 networkInterceptor.StopMonitoring().Wait();             } ```   ### Relevant log output  ```shell Fetch.continueRequest: Invalid state for continueInterceptedRequest ```   ### Operating System  Windows 10  ### Selenium version  .NET 6.0 and Selenium 4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.61  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 102.0.5005.61  ### Are you using Selenium Grid?  No","closed","I-issue-template,","mtgnoah","2022-06-21T14:13:25Z","2022-08-03T05:30:54Z"
"","10390","[🐛 Bug]: ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools.v98'","### What happened?  It seems that in the event of a new browser update, Selenium doesn't fall back to using the previous version of devtools like it does with other language bindings.  ### How can we reproduce the issue?  ```shell 1. Install Python/Selenium 4.1.0 2. Ensure that browser is on at least version 98 3. Run following snippet: import asyncio  from selenium import webdriver from selenium.webdriver.chrome.service import Service from selenium.webdriver.common.log import Log   async def printConsoleLogs():   service = Service(executable_path=""./driver/chromedriver"")   chrome_options = webdriver.ChromeOptions()   driver = webdriver.Chrome(service=service)   driver.get(""http://www.google.com"")    async with driver.bidi_connection() as session:       log = Log(driver, session)       from selenium.webdriver.common.bidi.console import Console       async with log.add_listener(Console.ALL) as messages:           driver.execute_script(""console.log('I love cheese')"")       print(messages[""message""])    driver.quit()  asyncio.run(printConsoleLogs()) 4. Confirm error of ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools.v98' ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""/Users/gromovoy/PycharmProjects/selenium4/network.py"", line 23, in      asyncio.run(printConsoleLogs())   File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/runners.py"", line 43, in run     return loop.run_until_complete(main)   File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py"", line 616, in run_until_complete     return future.result()   File ""/Users/gromovoy/PycharmProjects/selenium4/network.py"", line 14, in printConsoleLogs     async with driver.bidi_connection() as session:   File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/contextlib.py"", line 171, in __aenter__     return await self.gen.__anext__()   File ""/Users/gromovoy/PycharmProjects/selenium4/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 1573, in bidi_connection     cdp.import_devtools(version)   File ""/Users/gromovoy/PycharmProjects/selenium4/venv/lib/python3.8/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 55, in import_devtools     devtools = importlib.import_module(""selenium.webdriver.common.devtools.v{}"".format(version))   File ""/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 973, in _find_and_load_unlocked ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools.v98'  Process finished with exit code 1 ```   ### Operating System  macOS Catalina  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.102  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","gromovoff","2022-02-23T15:41:06Z","2022-03-26T00:09:52Z"
"","10217","[🐛 Bug]: Shadowroot for geckdriver","### What happened?  Is there a possible implementation of shadowroot method in geckodriver that can be use shadow_root webdriver method like as in Chromium webdriver like chomedriver?  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.options import Options as FirefoxOpt  webdriver = webdriver.Firefox()  webdriver.get('http://localhost:2018/')  element = webdriver.execute_script(""return document.querySelector('wa-combobox')"")  element.shadow_root ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""C:\Program Files\JetBrains\PyCharm Community Edition 2021.3\plugins\python-ce\helpers\pydev\pydevd.py"", line 1483, in _exec     pydev_imports.execfile(file, globals, locals)  # execute the script   File ""C:\Program Files\JetBrains\PyCharm Community Edition 2021.3\plugins\python-ce\helpers\pydev\_pydev_imps\_pydev_execfile.py"", line 18, in execfile     exec(compile(contents+""\n"", file, 'exec'), glob, loc)   File ""C:/TOTVS/workspaces/workspace_scripts/shadow_dow_selenium4/test_selenium_script.py"", line 15, in      element.shadow_root   File ""C:\TOTVS\venv\venv01\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 556, in shadow_root     assert self._parent.caps[""browserName""].lower() not in [""firefox"", ""safari""], ""This only currently works in Chromium based browsers"" AssertionError: This only currently works in Chromium based browsers ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 95.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","G-geckodriver,","renanllisboa","2022-01-04T14:48:32Z","2022-02-06T01:52:59Z"
"","10617","[🐛 Bug]: drag_and_drop_by_offset() cannot work correctly, but follows(displays at) the real location of Mouse in fact","### What happened?  invoke method `drag_and_drop_by_offset(self, source, xoffset, yoffset)` , that it does not work correctly.  ### How can we reproduce the issue?  ```shell i.e. xoffset, yoffset = 500, 500  and the mouse at somewhere, maybe 1000, 300  when invoking the method, confirm the real offset result. ```   ### Relevant log output  ```shell N/A ```   ### Operating System  macOS  ### Selenium version  Python3.9.7 (selenium-3.141.0.dist-info)  ### What are the browser(s) and version(s) where you see this issue?  chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 100.0.4896.60  ### Are you using Selenium Grid?  no","closed","I-defect,","Vchenhailong","2022-05-07T03:23:13Z","2022-06-07T00:10:15Z"
"","10127","[🐛 Bug]: InvalidArgumentException occurs if find element from shadow root using tag name","### What happened?  InvalidArgumentException occurs when I find element from shadow root using tag name with Selenium 4.1.0.  (Looks like only By.cssSelector and By.id works.)  ### How can we reproduce the issue?  ```shell WebElement shadowHost = driver.findElement(By.tagName(""print-preview-app"")); SearchContext shadowRoot = shadowHost.getShadowRoot(); WebElement shadowContent = shadowRoot.findElement(By.tagName(""print-preview-sidebar"")); ```   ### Relevant log output  ```shell org.openqa.selenium.InvalidArgumentException: invalid argument: invalid locator   (Session info: chrome=96.0.4664.93) Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'Jiaweis-MacBook-Pro.local', ip: 'fe80:0:0:0:40e:e02d:e55f:b96a%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.5', java.version: '16.0.1' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [d8b30fee8e8a7f6a1c696dafe0ac9084, findElementFromShadowRoot {shadowId=f92c3eb8-b7b7-410b-9cf5-4cc6147c304d, using=tag name, value=print-preview-sidebar}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46...}, goog:chromeOptions: {debuggerAddress: 127.0.0.1:9222}, javascriptEnabled: true, pageLoadStrategy: normal, platform: ANY, platformName: ANY, proxy: Proxy(), se:cdp: ws://127.0.0.1:9222/devtool..., se:cdpVersion: 96.0.4664.93, setWindowRect: false, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: d8b30fee8e8a7f6a1c696dafe0ac9084  	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383) 	at org.openqa.selenium.remote.ShadowRoot.findElement(ShadowRoot.java:55) ```   ### Operating System  macOS  ### Selenium version  Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.93  ### What are the browser driver(s) and version(s) where you see this issue?  96.0.4664.45  ### Are you using Selenium Grid?  No","closed","needs-triaging,","jiawei-wang-SH","2021-12-10T06:04:43Z","2022-01-10T00:07:36Z"
"","10574","[🐛 Bug]: Intercepting network response produces exception","### What happened?  Intercepting network response crashes the browser.   @titusfortner [said](https://stackoverflow.com/a/71975826/2620206):  the code is assuming responseHeaders will be there, but that's optional according to [chromedevtools.github.io/devtools-protocol/tot/Fetch](https://chromedevtools.github.io/devtools-protocol/tot/Fetch/)  ### How can we reproduce the issue?  ```shell #issue is reproduced by typing `irb` and pasting the code below  require ""watir"" require ""selenium/devtools""  Selenium::WebDriver::Chrome::Service.driver_path = '/chromedriver99.0.4844.51' Selenium::WebDriver::Chrome.path = '/chrome99.0.4844.84/google-chrome' options = Selenium::WebDriver::Chrome::Options.new options.add_option(""args"", [""--no-sandbox""])  browser = Watir::Browser.new :chrome, options: options  log_file = File.open(""/tmp/network.log"", 'w') browser.wd.intercept do |request, &continue|     continue.call(request) do |response|       log_file","closed","C-devtools,","dokisha","2022-04-24T21:37:19Z","2022-06-09T00:11:22Z"
"","10856","[🐛 Bug]: Intercepting network response produces exception","### What happened?  Intercepting network response crashes the browser.  Method `attach_socket_listener` in **websocket_connection.rb** has `Thread.current.abort_on_exception = true` which exits the process and crashes the browser.  Producing many requests/responses or repeated requests produce the exception.  ### How can we reproduce the issue?  ```shell # watir (7.1.0) # selenium-devtools (0.102.0) # selenium-webdriver (4.3.0)  require 'watir' require ""selenium/devtools""  Selenium::WebDriver::Chrome::Service.driver_path = '/chromedriver100.0.4896.60' Selenium::WebDriver::Chrome.path = '/chrome100.0.4896.127/google-chrome'  options = Selenium::WebDriver::Chrome::Options.new options.add_option(""args"", [""--no-sandbox""])  browser = Watir::Browser.new :chrome, options: options  log_name = ""/tmp/network.log"" log_file = File.open(log_name, 'w') browser.wd.intercept do |request, &continue|     continue.call(request) do |response|       log_file","closed","C-devtools,","dokisha","2022-07-07T20:39:51Z","2022-07-13T18:00:00Z"
"","10334","[🐛 Bug]:","### What happened?  Instead of opening Firefox and entering youtube.com, it will only open Firefox  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.service import Service  browser = webdriver.Firefox(service=Service(r'C:\Program Files\Mozilla Firefox\firefox.exe'))  browser.get(""https://youtube.com/"") ```   ### Relevant log output  ```shell File ""c:\Users\HP\Desktop\Python Projects\Nova pasta\bruh.py"", line 4, in      browser = webdriver.Firefox(service= Service(r'C:\Program Files\Mozilla Firefox\firefox.exe'))   File ""C:\Users\HP\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\selenium\webdriver\firefox\webdriver.py"", line 174, in __init__     self.service.start()   File ""C:\Users\HP\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\selenium\webdriver\common\service.py"", line 105, in start           raise WebDriverException(""Can not connect to the Service %s"" % self.path) selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service C:\Program Files\Mozilla Firefox\firefox.exe ```   ### Operating System  Windows 10  ### Selenium version  Python3.9.10  ### What are the browser(s) and version(s) where you see this issue?  Firefox 96.0.3 (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  Geckodriver 0.30.0  ### Are you using Selenium Grid?  Not entirely sure.","closed","needs-triaging,","badolsmito","2022-02-06T21:06:58Z","2022-03-09T00:11:45Z"
"","10062","[🐛 Bug]: Selenium 4.0.0: Can't instantiate chromedriver behind corporate proxy","### What happened?  Instantiating chromedriver behind corporate proxy throws an exception while trying to connect to driver port path /session.   ### How can we reproduce the issue?  ```python # 1. Setup a proxy and HTTP_PROXY and HTTPS_PROXY variables, and ensure corresponding chromedriver in PATH # 2. Create virtualenv # 3. Activate virtualenv # 4. Install with pip selenium 4.0.0 # 5. Run python interpreter:  from selenium import webdriver  driver = webdriver.Chrome() ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""/home/xxxxx/estamos-al-horno/prueba.py"", line 12, in      driver = webdriver.Chrome() # options=chrome_options)   File ""/home/xxxxx/estamos-al-horno/venv/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 69, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/home/xxxxx/estamos-al-horno/venv/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 93, in __init__     RemoteWebDriver.__init__(   File ""/home/xxxxx/estamos-al-horno/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 266, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/xxxxx/estamos-al-horno/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 357, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/xxxxx/estamos-al-horno/venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""/home/xxxxx/estamos-al-horno/venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 207, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Request on loopback from external IP ```   ### Operating System  Windows and Linux  ### Selenium version  Python 3.7, 3.8, 3.9, 3.10  ### What are the browser(s) and version(s) where you see this issue?  chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  Nope","closed","needs-triaging,","miguelius","2021-11-19T14:04:00Z","2021-12-25T00:07:01Z"
"","10580","[🐛 Bug]: In Visual Studio in Visual Basic in Selenium Webdriver In New Edge.EdgeDriver","### What happened?  In Visual Studio, in Visual Basic.Net in NuGet Selenium.Webdriver:  In New Edge.EdgeDriver, correctly getting  Dim driver = New Edge.EdgeDriver(EdgeDriverService, EdgeOptions) locally, and  wrongly getting    Public  driver = New Edge.EdgeDriver(EdgeDriverDirectory, EdgeOptions) if declared globally.  Should be always  driver = New Edge.EdgeDriver(EdgeDriverService, EdgeOptions) and not driver = New Edge.EdgeDriver(EdgeDriverDirectory, EdgeOptions).  Could someone fix this problem.   ### How can we reproduce the issue?  ```shell Declare Public EdgeDriverService2 = Edge.EdgeDriverService.CreateDefaultService(Application.StartupPath)     Public EdgeOptions2 = New Edge.EdgeOptions Public driver = New Edge.EdgeDriver(EdgeDriverService2, EdgeOptions2) in a VB module.  Visual Studio incorrectly made  Public driver = New Edge.EdgeDriver(EdgeDriverDirectory, EdgeOptions2)  Could you fix this.   In a Module in a Sub, following works okay  Dim EdgeDriverService2 = Edge.EdgeDriverService.CreateDefaultService(Application.StartupPath)     Dim EdgeOptions2 = New Edge.EdgeOptions Dim driver = New Edge.EdgeDriver(EdgeDriverService2, EdgeOptions2)  in a VB module. ```   ### Relevant log output  ```shell Severity	Code	Description	Project	File	Line	Suppression State Error	BC30519	Overload resolution failed because no accessible 'New' can be called without a narrowing conversion:     'Public Overloads Sub New(edgeDriverDirectory As String, options As EdgeOptions)': Argument matching parameter 'edgeDriverDirectory' narrows from 'Object' to 'String'.     'Public Overloads Sub New(edgeDriverDirectory As String, options As EdgeOptions)': Argument matching parameter 'options' narrows from 'Object' to 'EdgeOptions'.     'Public Overloads Sub New(service As EdgeDriverService, options As EdgeOptions)': Argument matching parameter 'service' narrows from 'Object' to 'EdgeDriverService'.     'Public Overloads Sub New(service As EdgeDriverService, options As EdgeOptions)': Argument matching parameter 'options' narrows from 'Object' to 'EdgeOptions'.	WindowsApp5	C:\Users\davie\source\repos\WindowsApp1\Module1.vb	25	Active ```   ### Operating System  Windows 10  ### Selenium version  Selenium.Webdriver 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge Version 100.0.1185.50  ### What are the browser driver(s) and version(s) where you see this issue?  I don't know  ### Are you using Selenium Grid?  I don't know","closed","I-issue-template,","Bradley501","2022-04-27T09:55:28Z","2022-06-05T00:14:07Z"
"","10293","[🐛 Bug]: In the manual configuration how can i set the auto detect proxy to no","### What happened?  In the manual configuration how can i set the automatically detect setting to no  ### How can we reproduce the issue?  ```shell In the manual configuration how can i set the automatically detect setting to no ```   ### Relevant log output  ```shell In the manual configuration how can i set the automatically detect setting to no ```   ### Operating System  WIndows10  ### Selenium version  Typescript  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver v96.0.4664  ### Are you using Selenium Grid?  No","closed","I-question,","rohitghy5","2022-01-27T17:11:24Z","2022-02-28T00:10:22Z"
"","10780","[🐛 Bug]: Starting Selenium Hub and Node as Services","### What happened?  In Selenium Server v3.141.59 we were able to start up Hub and Node processes as Windows Services using [prunsrv.exe](https://commons.apache.org/proper/commons-daemon/procrun.html). We would use it to define all sorts of things, most of which I'll show in the below code. However, in Selenium Server v 4.2.2 I can't seem to start these up in the same way. I get an error in the logs stating the below. Can someone point me in the right direction of what the start class for Selenium Hub should be? The organization of the [files on GitHub](https://github.com/SeleniumHQ/selenium/tree/trunk/java/src/org/openqa/selenium) seems totally reworked between versions.   Here is what I am using in v4: ```bat SET SERVICE_PASSWORD=ENTER_PW_HERE SET SERVICE_ACCOUNT=SERVICE_ACCOUNT SET PRUNSRV=C:\Selenium\prunsrv.exe SET SELENIUM_HOME=C:\Selenium SET SELENIUM_VERSION=ENTER_VERSION_HERE SET SERVER_NAME=SERVER_NAME  %PRUNSRV% //IS//SeleniumHub ^ --DisplayName=""SeleniumHub"" ^ --Description=""Selenium Hub"" ^ --Install=%PRUNSRV% ^ --LogLevel=Debug ^ --StdOutput=auto ^ --StdError=auto ^ --LogPath=%SELENIUM_HOME%\Logs ^ --LogJniMessages=1 ^ --Jvm=""%JAVA_HOME%\bin\client\jvm.dll"" ^ --Classpath=%SELENIUM_HOME%\selenium-server-standalone-%SELENIUM_VERSION%.jar ^ --Startup=auto ^ --StartMode=jvm ^ --StartClass=org.openqa.grid.selenium.GridLauncherV3 ^ --StartMethod=main ^ --StartParams=-role#hub ^ --StartImage=%SELENIUM_HOME%\test.ico ^ --StopMode=jvm ^ --StopTimeout=60 ^ --StopImage=%SELENIUM_HOME%\test.ico ^ --JvmMs=256 ^ --JvmMx=1024 ^ --JvmSs=4000 ^ --JvmOptions=-Dprunsrv.port=8080 ^ ++JvmOptions=-Dprunsrv.server=localhost  %PRUNSRV% //US//SeleniumHub --ServiceUser %SERVER_NAME%\%SERVICE_ACCOUNT% --ServicePassword %SERVICE_PASSWORD% ```  Here is what worked in v3:  ```bat SET SERVICE_PASSWORD=ENTER_PW_HERE SET SERVICE_ACCOUNT=s SERVICE_ACCOUNT SET PRUNSRV=C:\Selenium\prunsrv.exe SET SELENIUM_HOME=C:\Selenium  %PRUNSRV% //IS//SeleniumHub ^ --DisplayName=""SeleniumHub"" ^ --Description=""Selenium Hub"" ^ --Install=%PRUNSRV% ^ --LogLevel=Debug ^ --StdOutput=auto ^ --StdError=auto ^ --LogPath=%SELENIUM_HOME%\Logs ^ --LogJniMessages=1 ^ --Jvm=%JAVA_HOME%\bin\server\jvm.dll ^ --Classpath=%SELENIUM_HOME%\selenium-server-standalone-3.141.59.jar ^ --Startup=auto ^ --StartMode=jvm ^ --StartClass=org.openqa.grid.selenium.GridLauncherV3 ^ --StartMethod=main ^ --StartParams=-role#hub ^ --StartImage=%SELENIUM_HOME%\test.ico ^ --StopMode=jvm ^ --StopTimeout=60 ^ --StopImage=%SELENIUM_HOME%\test.ico ^ --JvmMs=256 ^ --JvmMx=1024 ^ --JvmSs=4000 ^ --JvmOptions=-Dprunsrv.port=8080 ^ ++JvmOptions=-Dprunsrv.server=localhost  %PRUNSRV% //US//SeleniumHub --ServiceUser SERVER_NAME\%SERVICE_ACCOUNT% --ServicePassword %SERVICE_PASSWORD% ```  ### How can we reproduce the issue?  ```shell Here are steps I have taken: 1. Using a Win 2019 VM, I install Java 8u331 JRE for both 32 and 64 bit 2. Install Chrome & Chromedriver 3. Open up ports 4444, 5555 for inbound traffic 4. Download procrun/prunsrv.exe and use .bat files to start Selenium Hub and Selenium Node services. Snippets of that are in the above.  5. Run the bat file contents in elevated `cmd` prompt ```   ### Relevant log output  ```shell [2022-06-16 11:48:05] [debug] ( javajni.c:236 ) [ 4548] loading jvm 'C:\Program Files (x86)\Java\jre1.8.0_331\bin\client\jvm.dll' [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[0] -Dprunsrv.port=8080 [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[1] -Dprunsrv.server=localhost [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[2] -Djava.class.path=C:\Selenium\selenium-server-standalone-4.2.2.jar [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[3] vfprintf [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[4] exit [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[5] abort [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[6] -Xms256m [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[7] -Xmx1024m [2022-06-16 11:48:06] [debug] ( javajni.c:753 ) [ 6936] Jvm Option[8] -Xss4000k [2022-06-16 11:48:06] [info]  ( javajni.c:497 ) [ 6936] Exception [2022-06-16 11:48:06] [info]  ( javajni.c:497 ) [ 6936] in thread ""main"" [2022-06-16 11:48:06] [error] ( javajni.c:912 ) [ 6936] FindClass org/openqa/grid/selenium/GridLauncherV4 failed ```   ### Operating System  Windows Server 2019  ### Selenium version  4.2.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 102  ### Are you using Selenium Grid?  4.2.2","closed","I-question,","governmentSponsored","2022-06-16T16:36:31Z","2022-07-18T00:11:45Z"
"","10224","[🐛 Bug]: Grid-Url in TOML node-config file is not passed through","### What happened?  In Selenium GRID 3.x I configured the hub and node with the Json config files. Now I want to configure Selenium GRID 4.x with TOML configuration file for the nodes and need to setup parameters (grid-url, max connections) as specified.  Either the documentation seems to be misleading or the parameter is not correctly passed through: Section ""Node"", parameter ""--grid-url"" https://www.selenium.dev/documentation/grid/configuration/cli_options/   Each node must connect to the grid hub instance, which is located on a different machine within my network.  When I start the node instance with the config-file it does not connect to the given URL and it seems to try to connect to my localhost (see the first part in the log).  When I start the node with CLI and use parameter ""hub"" or use the parameter ""hub"" instead of ""grid-url"" the node connects correctly to the grid hub instance.   ### How can we reproduce the issue?  ```shell (The TOML file is validated) This was assumed to work fine, but does not: [node] grid-url = ""http://mygridserver.com"" max-sessions = 4  I coincidentally found out, that using the works: [node] #the parameter actually should be ""grid-url"" but it works with the CLI parameter ""hub"" hub = ""http://mygridserver.com"" max-sessions = 4  I start the node: java -jar selenium-server-4.1.0.jar node --config node-config.toml ```   ### Relevant log output  ```shell When using ""grid-url"" as parameter in TOML config file: C:\Testen\SeleniumGrid>java -jar selenium-server-4.1.0.jar node --config node-config.toml 18:11:13.869 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 18:11:13.872 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 18:11:13.987 INFO [UnboundZmqEventBus.] - Connecting to tcp://0.0.0.0:4442 and tcp://0.0.0.0:4443 18:11:14.017 INFO [UnboundZmqEventBus.] - Sockets created 18:11:15.029 INFO [UnboundZmqEventBus.] - Event bus ready 18:11:15.314 INFO [NodeServer.createHandlers] - Reporting self as: http://172.20.80.1:5555 18:11:15.541 INFO [NodeOptions.getSessionFactories] - Detected 20 available processors 18:11:15.560 INFO [NodeOptions.discoverDrivers] - Discovered 0 driver(s) 18:11:15.589 INFO [NodeOptions.report] - Adding Firefox for {""browserVersion"": ""95"",""browserName"": ""firefox"",""moz:firefoxOptions"": {""binary"": ""C:\u002fTesten\u002fFirefox\u002f""},""platformName"": ""WIN10""} 8 times 18:11:15.590 INFO [NodeOptions.report] - Adding Chrome for {""goog:chromeOptions"": {""binary"": ""C:\u002fProgram Files\u002fGoogle\u002fChrome\u002fApplication\u002f""},""browserVersion"": ""96"",""browserName"": ""chrome"",""se:webDriverExecutable"": ""C:\\Testen\\Driver\\chromedriver.exe"",""platformName"": ""WIN10""} 8 times 18:11:15.602 INFO [Node.] - Binding additional locator mechanisms: id, relative, name 18:11:15.973 INFO [NodeServer$1.start] - Starting registration process for node id 67a37301-14c8-449c-b2d7-0206c3084152 18:11:15.974 INFO [NodeServer.execute] - Started Selenium node 4.1.0 (revision 87802e897b): http://172.20.80.1:5555  When using ""hub"" as parameter in TOML config file: C:\Testen\SeleniumGrid>java -jar selenium-server-4.1.0.jar node --config node-config.toml 18:12:21.653 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 18:12:21.656 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 18:12:21.765 INFO [UnboundZmqEventBus.] - Connecting to tcp://mygridserver.com:4442 and tcp://mygridserver.com:4443 18:12:21.800 INFO [UnboundZmqEventBus.] - Sockets created 18:12:22.806 INFO [UnboundZmqEventBus.] - Event bus ready 18:12:23.077 INFO [NodeServer.createHandlers] - Reporting self as: http://172.20.80.1:5555 18:12:23.302 INFO [NodeOptions.getSessionFactories] - Detected 20 available processors 18:12:23.319 INFO [NodeOptions.discoverDrivers] - Discovered 0 driver(s) 18:12:23.346 INFO [NodeOptions.report] - Adding Firefox for {""browserVersion"": ""95"",""browserName"": ""firefox"",""moz:firefoxOptions"": {""binary"": ""C:\u002fTesten\u002fFirefox\u002f""},""platformName"": ""WIN10""} 8 times 18:12:23.347 INFO [NodeOptions.report] - Adding Chrome for {""goog:chromeOptions"": {""binary"": ""C:\u002fProgram Files\u002fGoogle\u002fChrome\u002fApplication\u002f""},""browserVersion"": ""96"",""browserName"": ""chrome"",""se:webDriverExecutable"": ""C:\\Testen\\Driver\\chromedriver.exe"",""platformName"": ""WIN10""} 8 times 18:12:23.359 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 18:12:23.734 INFO [NodeServer$1.start] - Starting registration process for node id 3179bdd2-a1c9-448d-895a-ab281abe9e9d 18:12:23.735 INFO [NodeServer.execute] - Started Selenium node 4.1.0 (revision 87802e897b): http://172.20.80.1:5555 ```   ### Operating System  Windows 10  ### Selenium version  .Net - Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96, Firefox 95  ### What are the browser driver(s) and version(s) where you see this issue?  Chromdriver 96.0.4664.45, Geckodriver 0.30.0  ### Are you using Selenium Grid?  4.1.0","closed","","dibagga","2022-01-05T17:48:16Z","2022-02-06T01:52:57Z"
"","10252","[🐛 Bug]: Selenium C#-- Test cannot be executed in the old Browser versions","### What happened?  In Selenium C#, test script execution is failing in the old versions of browsers  Details:  Selenium WebDriver: V 4.1.0 Chrome                   : V 86.0.4240.75 Chrome Driver        : V 86.0.4240.22 (Release note says: Supports Chrome version 86)  Screenshots:  Error Message:  ![Error Message](https://user-images.githubusercontent.com/85741928/149606152-4a4f5a49-8ac1-4131-8fca-440bca4e958b.png)  Chrome Installed Version:  ![Chrome Installed Version](https://user-images.githubusercontent.com/85741928/149606158-f77c53c1-ea0a-4b05-abc9-fec06dcd7a3d.png)  Chrome Driver Details:  ![Chrome Driver Details](https://user-images.githubusercontent.com/85741928/149606166-e87d1574-5ae1-47b7-922b-bb39063d760d.png)  Chrome Driver Release Notes:  ![Chrome Driver Release Notes](https://user-images.githubusercontent.com/85741928/149606172-513f5dc2-673b-45fe-bc3f-9948145f9b47.png)  CodeBase:  ![CodeBase1](https://user-images.githubusercontent.com/85741928/149606181-25cf0e7c-cca9-49f6-9660-c2cbc477a882.png)   ### How can we reproduce the issue?  ```shell Test with old versions of Browsers ```   ### Relevant log output  ```shell Message:  System.InvalidOperationException : session not created: This version of ChromeDriver only supports Chrome version 90 Current browser version is 86.0.4240.75 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe (SessionNotCreated) TearDown : System.NullReferenceException : Object reference not set to an instance of an object.    Stack Trace:  WebDriver.UnpackAndThrowOnError(Response errorResponse) WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) WebDriver.StartSession(ICapabilities desiredCapabilities) WebDriver.ctor(ICommandExecutor executor, ICapabilities capabilities) ChromiumDriver.ctor(ChromiumDriverService service, ChromiumOptions options, TimeSpan commandTimeout) ChromeDriver.ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout) ChromeDriver.ctor(ChromeOptions options) ChromeDriver.ctor() ```   ### Operating System  Windows 10  ### Selenium version  C# v4.0.30319  ### What are the browser(s) and version(s) where you see this issue?  Chrome - 86  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 86.0.4240.22  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","svadivel0006","2022-01-15T03:50:47Z","2022-02-19T00:09:42Z"
"","10149","[🐛 Bug]: Can't cast RemoteWebDriver using EventFiringDecorator with selenium 4","### What happened?  In selenium 4 I have created Listener and use EventFiringDecorator.  WebDriverListener customListener = new WebDriverListeners();  driver = new EventFiringDecorator(customListener).decorate(driver);  Everything works correctly, but if I cast e.g. remotewebdriver,  Capabilities cap = ((RemoteWebDriver) driver).getCapabilities();  I get this error  java.lang.ClassCastException: com.sun.proxy.$Proxy16 cannot be cast to org.openqa.selenium.remote.RemoteWebDriver   ### How can we reproduce the issue?  ```shell //FIRST MAIN CLASS  import org.openqa.selenium.Capabilities; import org.openqa.selenium.PageLoadStrategy; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.remote.RemoteWebDriver; import org.openqa.selenium.support.events.EventFiringDecorator; import org.openqa.selenium.support.events.WebDriverListener; import utilities.micellaneous.Listeners.WebDriverListeners; import variables.GlobalValues;  public class DEV {     public static void main(String[] args) {         System.setProperty(""webdriver.gecko.driver"", ""C:\\geckodriver.exe"");         WebDriver driver = new FirefoxDriver(setFirefoxOptions());         WebDriverListener customListener = new WebDriverListeners();         driver = new EventFiringDecorator(customListener).decorate(driver);         driver.get(""https://www.google.it/?safe=active&ssui=on"");         Capabilities cap = ((RemoteWebDriver) driver).getCapabilities();         String browserName = cap.getBrowserName().toLowerCase();         if (browserName.equalsIgnoreCase(""firefox"")) {             System.out.println(""firefox"");         }         driver.quit();     }      private static FirefoxOptions setFirefoxOptions() {         FirefoxOptions firefoxOptions = new FirefoxOptions();         firefoxOptions.setPageLoadStrategy(PageLoadStrategy.NORMAL);         return firefoxOptions;     } }  //SECOND CLASS TO USE IN MAIN  import org.openqa.selenium.*; import org.openqa.selenium.interactions.Sequence; import org.openqa.selenium.support.events.WebDriverListener; import java.lang.reflect.InvocationTargetException; import java.lang.reflect.Method; import java.net.URL; import java.time.Duration; import java.util.Collection; import java.util.List; import java.util.Set;  public class WebDriverListeners implements WebDriverListener {     @Override     public void beforeAnyCall(Object target, Method method, Object[] args) {         WebDriverListener.super.beforeAnyCall(target, method, args);     }      @Override     public void afterAnyCall(Object target, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyCall(target, method, args, result);     }      @Override     public void onError(Object target, Method method, Object[] args, InvocationTargetException e) {         WebDriverListener.super.onError(target, method, args, e);     }      @Override     public void beforeAnyWebDriverCall(WebDriver driver, Method method, Object[] args) {         WebDriverListener.super.beforeAnyWebDriverCall(driver, method, args);     }      @Override     public void afterAnyWebDriverCall(WebDriver driver, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyWebDriverCall(driver, method, args, result);     }      @Override     public void beforeGet(WebDriver driver, String url) {         WebDriverListener.super.beforeGet(driver, url);     }      @Override     public void afterGet(WebDriver driver, String url) {         WebDriverListener.super.afterGet(driver, url);     }      @Override     public void beforeGetCurrentUrl(WebDriver driver) {         WebDriverListener.super.beforeGetCurrentUrl(driver);     }      @Override     public void afterGetCurrentUrl(String result, WebDriver driver) {         WebDriverListener.super.afterGetCurrentUrl(result, driver);     }      @Override     public void beforeGetTitle(WebDriver driver) {         WebDriverListener.super.beforeGetTitle(driver);     }      @Override     public void afterGetTitle(WebDriver driver, String result) {         WebDriverListener.super.afterGetTitle(driver, result);     }      @Override     public void beforeFindElement(WebDriver driver, By locator) {         WebDriverListener.super.beforeFindElement(driver, locator);     }      @Override     public void afterFindElement(WebDriver driver, By locator, WebElement result) {         WebDriverListener.super.afterFindElement(driver, locator, result);     }      @Override     public void beforeFindElements(WebDriver driver, By locator) {         WebDriverListener.super.beforeFindElements(driver, locator);     }      @Override     public void afterFindElements(WebDriver driver, By locator, List result) {         WebDriverListener.super.afterFindElements(driver, locator, result);     }      @Override     public void beforeGetPageSource(WebDriver driver) {         WebDriverListener.super.beforeGetPageSource(driver);     }      @Override     public void afterGetPageSource(WebDriver driver, String result) {         WebDriverListener.super.afterGetPageSource(driver, result);     }      @Override     public void beforeClose(WebDriver driver) {         WebDriverListener.super.beforeClose(driver);     }      @Override     public void afterClose(WebDriver driver) {         WebDriverListener.super.afterClose(driver);     }      @Override     public void beforeQuit(WebDriver driver) {         WebDriverListener.super.beforeQuit(driver);     }      @Override     public void afterQuit(WebDriver driver) {         WebDriverListener.super.afterQuit(driver);     }      @Override     public void beforeGetWindowHandles(WebDriver driver) {         WebDriverListener.super.beforeGetWindowHandles(driver);     }      @Override     public void afterGetWindowHandles(WebDriver driver, Set result) {         WebDriverListener.super.afterGetWindowHandles(driver, result);     }      @Override     public void beforeGetWindowHandle(WebDriver driver) {         WebDriverListener.super.beforeGetWindowHandle(driver);     }      @Override     public void afterGetWindowHandle(WebDriver driver, String result) {         WebDriverListener.super.afterGetWindowHandle(driver, result);     }      @Override     public void beforeExecuteScript(WebDriver driver, String script, Object[] args) {         WebDriverListener.super.beforeExecuteScript(driver, script, args);     }      @Override     public void afterExecuteScript(WebDriver driver, String script, Object[] args, Object result) {         WebDriverListener.super.afterExecuteScript(driver, script, args, result);     }      @Override     public void beforeExecuteAsyncScript(WebDriver driver, String script, Object[] args) {         WebDriverListener.super.beforeExecuteAsyncScript(driver, script, args);     }      @Override     public void afterExecuteAsyncScript(WebDriver driver, String script, Object[] args, Object result) {         WebDriverListener.super.afterExecuteAsyncScript(driver, script, args, result);     }      @Override     public void beforePerform(WebDriver driver, Collection actions) {         WebDriverListener.super.beforePerform(driver, actions);     }      @Override     public void afterPerform(WebDriver driver, Collection actions) {         WebDriverListener.super.afterPerform(driver, actions);     }      @Override     public void beforeResetInputState(WebDriver driver) {         WebDriverListener.super.beforeResetInputState(driver);     }      @Override     public void afterResetInputState(WebDriver driver) {         WebDriverListener.super.afterResetInputState(driver);     }      @Override     public void beforeAnyWebElementCall(WebElement element, Method method, Object[] args) {         WebDriverListener.super.beforeAnyWebElementCall(element, method, args);     }      @Override     public void afterAnyWebElementCall(WebElement element, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyWebElementCall(element, method, args, result);     }      @Override     public void beforeClick(WebElement element) {         WebDriverListener.super.beforeClick(element);          }      @Override     public void afterClick(WebElement element) {         WebDriverListener.super.afterClick(element);         }      @Override     public void beforeSubmit(WebElement element) {         WebDriverListener.super.beforeSubmit(element);     }      @Override     public void afterSubmit(WebElement element) {         WebDriverListener.super.afterSubmit(element);     }      @Override     public void beforeSendKeys(WebElement element, CharSequence... keysToSend) {         WebDriverListener.super.beforeSendKeys(element, keysToSend);         Log.info(""Write element: "" + element);     }      @Override     public void afterSendKeys(WebElement element, CharSequence... keysToSend) {         WebDriverListener.super.afterSendKeys(element, keysToSend);         Log.info(""Element writed: "" + element);     }      @Override     public void beforeClear(WebElement element) {         WebDriverListener.super.beforeClear(element);     }      @Override     public void afterClear(WebElement element) {         WebDriverListener.super.afterClear(element);     }      @Override     public void beforeGetTagName(WebElement element) {         WebDriverListener.super.beforeGetTagName(element);     }      @Override     public void afterGetTagName(WebElement element, String result) {         WebDriverListener.super.afterGetTagName(element, result);     }      @Override     public void beforeGetAttribute(WebElement element, String name) {         WebDriverListener.super.beforeGetAttribute(element, name);     }      @Override     public void afterGetAttribute(WebElement element, String name, String result) {         WebDriverListener.super.afterGetAttribute(element, name, result);     }      @Override     public void beforeIsSelected(WebElement element) {         WebDriverListener.super.beforeIsSelected(element);     }      @Override     public void afterIsSelected(WebElement element, boolean result) {         WebDriverListener.super.afterIsSelected(element, result);     }      @Override     public void beforeIsEnabled(WebElement element) {         WebDriverListener.super.beforeIsEnabled(element);     }      @Override     public void afterIsEnabled(WebElement element, boolean result) {         WebDriverListener.super.afterIsEnabled(element, result);     }      @Override     public void beforeGetText(WebElement element) {         WebDriverListener.super.beforeGetText(element);     }      @Override     public void afterGetText(WebElement element, String result) {         WebDriverListener.super.afterGetText(element, result);     }      @Override     public void beforeFindElement(WebElement element, By locator) {         WebDriverListener.super.beforeFindElement(element, locator);     }      @Override     public void afterFindElement(WebElement element, By locator, WebElement result) {         WebDriverListener.super.afterFindElement(element, locator, result);     }      @Override     public void beforeFindElements(WebElement element, By locator) {         WebDriverListener.super.beforeFindElements(element, locator);     }      @Override     public void afterFindElements(WebElement element, By locator, List result) {         WebDriverListener.super.afterFindElements(element, locator, result);     }      @Override     public void beforeIsDisplayed(WebElement element) {         WebDriverListener.super.beforeIsDisplayed(element);     }      @Override     public void afterIsDisplayed(WebElement element, boolean result) {         WebDriverListener.super.afterIsDisplayed(element, result);     }      @Override     public void beforeGetLocation(WebElement element) {         WebDriverListener.super.beforeGetLocation(element);     }      @Override     public void afterGetLocation(WebElement element, Point result) {         WebDriverListener.super.afterGetLocation(element, result);     }      @Override     public void beforeGetSize(WebElement element) {         WebDriverListener.super.beforeGetSize(element);     }      @Override     public void afterGetSize(WebElement element, Dimension result) {         WebDriverListener.super.afterGetSize(element, result);     }      @Override     public void beforeGetCssValue(WebElement element, String propertyName) {         WebDriverListener.super.beforeGetCssValue(element, propertyName);     }      @Override     public void afterGetCssValue(WebElement element, String propertyName, String result) {         WebDriverListener.super.afterGetCssValue(element, propertyName, result);     }      @Override     public void beforeAnyNavigationCall(WebDriver.Navigation navigation, Method method, Object[] args) {         WebDriverListener.super.beforeAnyNavigationCall(navigation, method, args);     }      @Override     public void afterAnyNavigationCall(WebDriver.Navigation navigation, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyNavigationCall(navigation, method, args, result);     }      @Override     public void beforeTo(WebDriver.Navigation navigation, String url) {         WebDriverListener.super.beforeTo(navigation, url);     }      @Override     public void afterTo(WebDriver.Navigation navigation, String url) {         WebDriverListener.super.afterTo(navigation, url);     }      @Override     public void beforeTo(WebDriver.Navigation navigation, URL url) {         WebDriverListener.super.beforeTo(navigation, url);     }      @Override     public void afterTo(WebDriver.Navigation navigation, URL url) {         WebDriverListener.super.afterTo(navigation, url);     }      @Override     public void beforeBack(WebDriver.Navigation navigation) {         WebDriverListener.super.beforeBack(navigation);     }      @Override     public void afterBack(WebDriver.Navigation navigation) {         WebDriverListener.super.afterBack(navigation);     }      @Override     public void beforeForward(WebDriver.Navigation navigation) {         WebDriverListener.super.beforeForward(navigation);     }      @Override     public void afterForward(WebDriver.Navigation navigation) {         WebDriverListener.super.afterForward(navigation);     }      @Override     public void beforeRefresh(WebDriver.Navigation navigation) {         WebDriverListener.super.beforeRefresh(navigation);     }      @Override     public void afterRefresh(WebDriver.Navigation navigation) {         WebDriverListener.super.afterRefresh(navigation);     }      @Override     public void beforeAnyAlertCall(Alert alert, Method method, Object[] args) {         WebDriverListener.super.beforeAnyAlertCall(alert, method, args);     }      @Override     public void afterAnyAlertCall(Alert alert, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyAlertCall(alert, method, args, result);     }      @Override     public void beforeAccept(Alert alert) {         WebDriverListener.super.beforeAccept(alert);     }      @Override     public void afterAccept(Alert alert) {         WebDriverListener.super.afterAccept(alert);     }      @Override     public void beforeDismiss(Alert alert) {         WebDriverListener.super.beforeDismiss(alert);     }      @Override     public void afterDismiss(Alert alert) {         WebDriverListener.super.afterDismiss(alert);     }      @Override     public void beforeGetText(Alert alert) {         WebDriverListener.super.beforeGetText(alert);     }      @Override     public void afterGetText(Alert alert, String result) {         WebDriverListener.super.afterGetText(alert, result);     }      @Override     public void beforeSendKeys(Alert alert, String text) {         WebDriverListener.super.beforeSendKeys(alert, text);     }      @Override     public void afterSendKeys(Alert alert, String text) {         WebDriverListener.super.afterSendKeys(alert, text);     }      @Override     public void beforeAnyOptionsCall(WebDriver.Options options, Method method, Object[] args) {         WebDriverListener.super.beforeAnyOptionsCall(options, method, args);     }      @Override     public void afterAnyOptionsCall(WebDriver.Options options, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyOptionsCall(options, method, args, result);     }      @Override     public void beforeAddCookie(WebDriver.Options options, Cookie cookie) {         WebDriverListener.super.beforeAddCookie(options, cookie);     }      @Override     public void afterAddCookie(WebDriver.Options options, Cookie cookie) {         WebDriverListener.super.afterAddCookie(options, cookie);     }      @Override     public void beforeDeleteCookieNamed(WebDriver.Options options, String name) {         WebDriverListener.super.beforeDeleteCookieNamed(options, name);     }      @Override     public void afterDeleteCookieNamed(WebDriver.Options options, String name) {         WebDriverListener.super.afterDeleteCookieNamed(options, name);     }      @Override     public void beforeDeleteCookie(WebDriver.Options options, Cookie cookie) {         WebDriverListener.super.beforeDeleteCookie(options, cookie);     }      @Override     public void afterDeleteCookie(WebDriver.Options options, Cookie cookie) {         WebDriverListener.super.afterDeleteCookie(options, cookie);     }      @Override     public void beforeDeleteAllCookies(WebDriver.Options options) {         WebDriverListener.super.beforeDeleteAllCookies(options);     }      @Override     public void afterDeleteAllCookies(WebDriver.Options options) {         WebDriverListener.super.afterDeleteAllCookies(options);     }      @Override     public void beforeGetCookies(WebDriver.Options options) {         WebDriverListener.super.beforeGetCookies(options);     }      @Override     public void afterGetCookies(WebDriver.Options options, Set result) {         WebDriverListener.super.afterGetCookies(options, result);     }      @Override     public void beforeGetCookieNamed(WebDriver.Options options, String name) {         WebDriverListener.super.beforeGetCookieNamed(options, name);     }      @Override     public void afterGetCookieNamed(WebDriver.Options options, String name, Cookie result) {         WebDriverListener.super.afterGetCookieNamed(options, name, result);     }      @Override     public void beforeAnyTimeoutsCall(WebDriver.Timeouts timeouts, Method method, Object[] args) {         WebDriverListener.super.beforeAnyTimeoutsCall(timeouts, method, args);     }      @Override     public void afterAnyTimeoutsCall(WebDriver.Timeouts timeouts, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyTimeoutsCall(timeouts, method, args, result);     }      @Override     public void beforeImplicitlyWait(WebDriver.Timeouts timeouts, Duration duration) {         WebDriverListener.super.beforeImplicitlyWait(timeouts, duration);     }      @Override     public void afterImplicitlyWait(WebDriver.Timeouts timeouts, Duration duration) {         WebDriverListener.super.afterImplicitlyWait(timeouts, duration);     }      @Override     public void beforeSetScriptTimeout(WebDriver.Timeouts timeouts, Duration duration) {         WebDriverListener.super.beforeSetScriptTimeout(timeouts, duration);     }      @Override     public void afterSetScriptTimeout(WebDriver.Timeouts timeouts, Duration duration) {         WebDriverListener.super.afterSetScriptTimeout(timeouts, duration);     }      @Override     public void beforePageLoadTimeout(WebDriver.Timeouts timeouts, Duration duration) {         WebDriverListener.super.beforePageLoadTimeout(timeouts, duration);     }      @Override     public void afterPageLoadTimeout(WebDriver.Timeouts timeouts, Duration duration) {         WebDriverListener.super.afterPageLoadTimeout(timeouts, duration);     }      @Override     public void beforeAnyWindowCall(WebDriver.Window window, Method method, Object[] args) {         WebDriverListener.super.beforeAnyWindowCall(window, method, args);     }      @Override     public void afterAnyWindowCall(WebDriver.Window window, Method method, Object[] args, Object result) {         WebDriverListener.super.afterAnyWindowCall(window, method, args, result);     }      @Override     public void beforeGetSize(WebDriver.Window window) {         WebDriverListener.super.beforeGetSize(window);     }      @Override     public void afterGetSize(WebDriver.Window window, Dimension result) {         WebDriverListener.super.afterGetSize(window, result);     }      @Override     public void beforeSetSize(WebDriver.Window window, Dimension size) {         WebDriverListener.super.beforeSetSize(window, size);     }      @Override     public void afterSetSize(WebDriver.Window window, Dimension size) {         WebDriverListener.super.afterSetSize(window, size);     }      @Override     public void beforeGetPosition(WebDriver.Window window) {         WebDriverListener.super.beforeGetPosition(window);     }      @Override     public void afterGetPosition(WebDriver.Window window, Point result) {         WebDriverListener.super.afterGetPosition(window, result);     }      @Override     public void beforeSetPosition(WebDriver.Window window, Point position) {         WebDriverListener.super.beforeSetPosition(window, position);     }      @Override     public void afterSetPosition(WebDriver.Window window, Point position) {         WebDriverListener.super.afterSetPosition(window, position);     }      @Override     public void beforeMaximize(WebDriver.Window window) {         WebDriverListener.super.beforeMaximize(window);     }      @Override     public void afterMaximize(WebDriver.Window window) {         WebDriverListener.super.afterMaximize(window);     }      @Override     public void beforeFullscreen(WebDriver.Window window) {         WebDriverListener.super.beforeFullscreen(window);     }      @Override     public void afterFullscreen(WebDriver.Window window) {         WebDriverListener.super.afterFullscreen(window);     }      public WebDriverListeners() {         super();     }      @Override     public int hashCode() {         return super.hashCode();     }      @Override     public boolean equals(Object obj) {         return super.equals(obj);     }      @Override     protected Object clone() throws CloneNotSupportedException {         return super.clone();     }      @Override     public String toString() {         return super.toString();     }      @Override     protected void finalize() throws Throwable {         super.finalize();     } } ```   ### Relevant log output  ```shell Exception in thread ""main"" java.lang.ClassCastException: com.sun.proxy.$Proxy5 cannot be cast to org.openqa.selenium.remote.RemoteWebDriver 	at DEV.main(DEV.java:19)  Process finished with exit code 1 ```   ### Operating System  Windows 10  ### Selenium version  Java 8 with Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 94.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver-v0.30.0-win64  ### Are you using Selenium Grid?  no","closed","I-defect,","Marioemtec","2021-12-14T10:09:48Z","2022-02-03T00:07:05Z"
"","10590","[🐛 Bug]: FirefoxOptions will start Chrome Browser in rare cases using the standalone server","### What happened?  In rare cases the Chrome browser is started when running the example code below. I am not able to reliable reproduce this, but i was able to capture the logs when it happened.  ### How can we reproduce the issue?  ```shell import java.io.File; import java.net.URL; import java.util.logging.Level; import java.util.logging.Logger; import org.openqa.selenium.UnexpectedAlertBehaviour; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.logging.LogType; import org.openqa.selenium.logging.LoggingPreferences; import org.openqa.selenium.remote.CapabilityType; import org.openqa.selenium.remote.RemoteWebDriver;  public class WrongBrowser {          private static final Logger LOG = Logger.getLogger(WrongBrowser.class.getName());          public static void main(String[] args) throws Exception {         Process start = new ProcessBuilder(                 System.getProperty(""java.home"") + ""/bin/java"", ""-jar"",                 ""selenium-server-4.1.3.jar"", ""standalone"",                  ""--log-level"", ""ALL"", //                ""--session-retry-interval"", ""1"",                 ""--port"", ""8888""         ).redirectErrorStream(true)                 .redirectOutput(ProcessBuilder.Redirect.INHERIT)                 .start();          // wait for the server to start         Thread.sleep(16000);                  try {              FirefoxOptions options = new FirefoxOptions();             //options.setCapability(CapabilityType.UNHANDLED_PROMPT_BEHAVIOUR, UnexpectedAlertBehaviour.IGNORE);               LoggingPreferences logPrefs = new LoggingPreferences();             logPrefs.enable(LogType.BROWSER, Level.ALL);             options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);              //options.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);            // options.setCapability(CapabilityType.ACCEPT_INSECURE_CERTS, true);                          LOG.warning(options.asMap().toString());                                       LOG.warning(""\n*\n*\n* start firefox \n*\n*\n*"");              RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://127.0.0.1:8888""), options);              if (driver.getCapabilities().getBrowserName().contains(""chrome"")) {                 throw new IllegalStateException(""hey, i need firefox"");             }              driver.quit();          } finally {             start.destroy();             Thread.sleep(2000);             start.destroyForcibly();         }     }      } ```   ### Relevant log output  ```shell 17:03:55.950 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 17:03:55.987 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 17:03:56.016 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 8 times 17:03:56.017 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox""} 8 times 17:03:56.160 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 17:03:56.185 FEINER [DefaultMBeanServerInterceptor.registerDynamicMBean] - ObjectName = org.seleniumhq.grid:type=Node,name=LocalNode 17:03:56.185 FEINER [Repository.addMBean] - name = org.seleniumhq.grid:type=Node,name=LocalNode 17:03:56.185 FEINER [DefaultMBeanServerInterceptor.registerWithRepository] - Send create notification of object org.seleniumhq.grid:name=LocalNode,type=Node 17:03:56.185 FEINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered org.seleniumhq.grid:type=Node,name=LocalNode 17:03:56.189 DEBUG [GridModel.add] - Adding node with id b4e02fc6-7c83-4c13-aaa1-fb3e713ea976 and URI http://192.168.1.25:8888 17:03:56.189 DEBUG [LocalDistributor.updateNodeAvailability] - Health check result for http://192.168.1.25:8888 was UP 17:03:56.190 INFO [GridModel.setAvailability] - Switching node b4e02fc6-7c83-4c13-aaa1-fb3e713ea976 (uri: http://192.168.1.25:8888) from DOWN to UP 17:03:56.190 INFO [LocalDistributor.add] - Added node b4e02fc6-7c83-4c13-aaa1-fb3e713ea976 at http://192.168.1.25:8888. Health check every 120s 17:03:56.196 FEINER [DefaultMBeanServerInterceptor.registerDynamicMBean] - ObjectName = org.seleniumhq.grid:type=Config,name=BaseServerConfig 17:03:56.196 FEINER [Repository.addMBean] - name = org.seleniumhq.grid:type=Config,name=BaseServerConfig 17:03:56.210 DEBUG [MultithreadEventLoopGroup.] - -Dio.netty.eventLoopThreads: 16 17:03:56.227 DEBUG [InternalThreadLocalMap.] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 17:03:56.227 DEBUG [InternalThreadLocalMap.] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 17:03:56.246 DEBUG [PlatformDependent0.explicitNoUnsafeCause0] - -Dio.netty.noUnsafe: false 17:03:56.246 DEBUG [PlatformDependent0.javaVersion0] - Java version: 17 17:03:56.248 DEBUG [PlatformDependent0.] - sun.misc.Unsafe.theUnsafe: available 17:03:56.249 DEBUG [PlatformDependent0.] - sun.misc.Unsafe.copyMemory: available 17:03:56.250 DEBUG [PlatformDependent0.] - java.nio.Buffer.address: available 17:03:56.251 DEBUG [PlatformDependent0.] - direct buffer constructor: unavailable java.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled 	at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31) 	at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:253) 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:318) 	at io.netty.util.internal.PlatformDependent0.(PlatformDependent0.java:247) 	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294) 	at io.netty.util.internal.PlatformDependent.(PlatformDependent.java:88) 	at io.netty.channel.nio.NioEventLoop.(NioEventLoop.java:83) 	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:182) 	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:38) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:84) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:60) 	at io.netty.channel.MultithreadEventLoopGroup.(MultithreadEventLoopGroup.java:52) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:97) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:92) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:73) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:53) 	at org.openqa.selenium.netty.server.NettyServer.(NettyServer.java:107) 	at org.openqa.selenium.grid.TemplateGridServerCommand.asServer(TemplateGridServerCommand.java:43) 	at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:214) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) 	at org.openqa.selenium.grid.Main.launch(Main.java:83) 	at org.openqa.selenium.grid.Main.go(Main.java:57) 	at org.openqa.selenium.grid.Main.main(Main.java:42) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) 	at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) 17:03:56.252 DEBUG [PlatformDependent0.] - java.nio.Bits.unaligned: available, true 17:03:56.253 DEBUG [PlatformDependent0.] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable java.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @735b478 	at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:392) 	at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:674) 	at java.base/java.lang.reflect.Method.invoke(Method.java:560) 	at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:375) 	at java.base/java.security.AccessController.doPrivileged(AccessController.java:318) 	at io.netty.util.internal.PlatformDependent0.(PlatformDependent0.java:366) 	at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294) 	at io.netty.util.internal.PlatformDependent.(PlatformDependent.java:88) 	at io.netty.channel.nio.NioEventLoop.(NioEventLoop.java:83) 	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:182) 	at io.netty.channel.nio.NioEventLoopGroup.newChild(NioEventLoopGroup.java:38) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:84) 	at io.netty.util.concurrent.MultithreadEventExecutorGroup.(MultithreadEventExecutorGroup.java:60) 	at io.netty.channel.MultithreadEventLoopGroup.(MultithreadEventLoopGroup.java:52) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:97) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:92) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:73) 	at io.netty.channel.nio.NioEventLoopGroup.(NioEventLoopGroup.java:53) 	at org.openqa.selenium.netty.server.NettyServer.(NettyServer.java:107) 	at org.openqa.selenium.grid.TemplateGridServerCommand.asServer(TemplateGridServerCommand.java:43) 	at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:214) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) 	at org.openqa.selenium.grid.Main.launch(Main.java:83) 	at org.openqa.selenium.grid.Main.go(Main.java:57) 	at org.openqa.selenium.grid.Main.main(Main.java:42) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) 	at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) 17:03:56.254 DEBUG [PlatformDependent0.] - java.nio.DirectByteBuffer.(long, int): unavailable 17:03:56.254 DEBUG [PlatformDependent.unsafeUnavailabilityCause0] - sun.misc.Unsafe: available 17:03:56.255 DEBUG [PlatformDependent.estimateMaxDirectMemory] - maxDirectMemory: 8443133952 bytes (maybe) 17:03:56.255 DEBUG [PlatformDependent.tmpdir0] - -Dio.netty.tmpdir: C:\Users\JOESAUT\AppData\Local\Temp (java.io.tmpdir) 17:03:56.255 DEBUG [PlatformDependent.bitMode0] - -Dio.netty.bitMode: 64 (sun.arch.data.model) 17:03:56.256 DEBUG [PlatformDependent.isWindows0] - Platform: Windows 17:03:56.257 DEBUG [PlatformDependent.] - -Dio.netty.maxDirectMemory: -1 bytes 17:03:56.257 DEBUG [PlatformDependent.] - -Dio.netty.uninitializedArrayAllocationThreshold: -1 17:03:56.259 DEBUG [CleanerJava9.] - java.nio.ByteBuffer.cleaner(): available 17:03:56.259 DEBUG [PlatformDependent.] - -Dio.netty.noPreferDirect: false 17:03:56.260 DEBUG [NioEventLoop.] - -Dio.netty.noKeySetOptimization: false 17:03:56.260 DEBUG [NioEventLoop.] - -Dio.netty.selectorAutoRebuildThreshold: 512 17:03:56.266 DEBUG [PlatformDependent$Mpsc.] - org.jctools-core.MpscChunkedArrayQueue: available 17:03:56.315 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@4fe01805 17:03:56.319 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@790132f7 17:03:56.321 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@2228db21 17:03:56.324 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@48b0e701 17:03:56.326 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@241a0c3a 17:03:56.329 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@547c04c4 17:03:56.332 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@30e92cb9 17:03:56.335 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@7fae4d4a 17:03:56.338 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@ba1f559 17:03:56.341 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@3f4f9acd 17:03:56.343 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@46baf579 17:03:56.346 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@4bf324f9 17:03:56.349 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@4f7c0be3 17:03:56.351 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@ca66933 17:03:56.354 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@1d2644e3 17:03:56.356 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@4fa06f52 17:03:56.359 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@602c4656 17:03:57.749 DEBUG [DefaultChannelId.] - -Dio.netty.processId: 15244 (auto-detected) 17:03:57.751 DEBUG [NetUtil.] - -Djava.net.preferIPv4Stack: false 17:03:57.751 DEBUG [NetUtil.] - -Djava.net.preferIPv6Addresses: false 17:03:57.774 DEBUG [NetUtilInitializations.determineLoopback] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1) 17:03:57.774 DEBUG [NetUtil$SoMaxConnAction.run] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200 17:03:57.902 DEBUG [DefaultChannelId.] - -Dio.netty.machineId: c8:5b:76:ff:fe:b4:81:51 (auto-detected) 17:03:57.911 DEBUG [ResourceLeakDetector.] - -Dio.netty.leakDetection.level: simple 17:03:57.911 DEBUG [ResourceLeakDetector.] - -Dio.netty.leakDetection.targetRecords: 4 17:03:57.932 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.numHeapArenas: 16 17:03:57.932 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.numDirectArenas: 16 17:03:57.932 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.pageSize: 8192 17:03:57.932 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxOrder: 9 17:03:57.932 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.chunkSize: 4194304 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.smallCacheSize: 256 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.normalCacheSize: 64 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.cacheTrimInterval: 8192 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.useCacheForAllThreads: false 17:03:57.933 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 17:03:57.946 DEBUG [ByteBufUtil.] - -Dio.netty.allocator.type: pooled 17:03:57.946 DEBUG [ByteBufUtil.] - -Dio.netty.threadLocalDirectBufferSize: 0 17:03:57.947 DEBUG [ByteBufUtil.] - -Dio.netty.maxThreadLocalCharBufferSize: 16384 17:03:57.963 DEBUG [LoggingHandler.channelRegistered] - [id: 0x3de3a694] REGISTERED 17:03:57.966 DEBUG [LoggingHandler.bind] - [id: 0x3de3a694] BIND: /0.0.0.0:8888 17:03:57.968 INFO [Standalone.execute] - Started Selenium Standalone 4.1.3 (revision 7b1ebf28ef): http://192.168.1.25:8888 17:03:57.969 DEBUG [LoggingHandler.channelActive] - [id: 0x3de3a694, L:/[0:0:0:0:0:0:0:0]:8888] ACTIVE Apr. 29, 2022 5:04:04 PM WrongBrowser main WARNUNG: {acceptInsecureCerts=true, acceptSslCerts=true, browserName=firefox, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@88ff2b28, moz:debuggerAddress=true, moz:firefoxOptions={}, unhandledPromptBehavior=ignore} Apr. 29, 2022 5:04:04 PM WrongBrowser main WARNUNG:  * * * start firefox  * * * Apr. 29, 2022 5:04:05 PM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFORMATION: Using OpenTelemetry for tracing SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. 17:04:06.576 DEBUG [LoggingHandler.channelRead] - [id: 0x3de3a694, L:/[0:0:0:0:0:0:0:0]:8888] READ: [id: 0x979cc89e, L:/127.0.0.1:8888 - R:/127.0.0.1:50497] 17:04:06.577 DEBUG [LoggingHandler.channelReadComplete] - [id: 0x3de3a694, L:/[0:0:0:0:0:0:0:0]:8888] READ COMPLETE 17:04:06.596 DEBUG [AbstractByteBuf.] - -Dio.netty.buffer.checkAccessible: true 17:04:06.596 DEBUG [AbstractByteBuf.] - -Dio.netty.buffer.checkBounds: true 17:04:06.597 DEBUG [ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@a04b122 17:04:06.605 DEBUG [ZlibCodecFactory.] - -Dio.netty.noJdkZlibDecoder: false 17:04:06.606 DEBUG [ZlibCodecFactory.] - -Dio.netty.noJdkZlibEncoder: false 17:04:06.616 DEBUG [Recycler.] - -Dio.netty.recycler.maxCapacityPerThread: 4096 17:04:06.616 DEBUG [Recycler.] - -Dio.netty.recycler.ratio: 8 17:04:06.617 DEBUG [Recycler.] - -Dio.netty.recycler.chunkSize: 32 17:04:06.617 DEBUG [Recycler.] - -Dio.netty.recycler.blocking: false 17:04:06.635 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /session HTTP/1.1 User-Agent: selenium/4.1.3 (java windows) traceparent: 00-fec83a047ce54000463af90db935d050-7afa32da709d228e-01 Content-Type: application/json; charset=utf-8 host: 127.0.0.1:8888 accept: */* content-length: 714 17:04:06.636 DEBUG [RequestConverter.channelRead0] - Start of http request: DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /session HTTP/1.1 User-Agent: selenium/4.1.3 (java windows) traceparent: 00-fec83a047ce54000463af90db935d050-7afa32da709d228e-01 Content-Type: application/json; charset=utf-8 host: 127.0.0.1:8888 accept: */* content-length: 714 17:04:06.643 DEBUG [RequestConverter.channelRead0] - Incoming message: DefaultLastHttpContent(data: PooledSlicedByteBuf(ridx: 0, widx: 714, cap: 714/714, unwrapped: PooledUnsafeDirectByteBuf(ridx: 956, widx: 956, cap: 2048)), decoderResult: success) 17:04:06.644 DEBUG [RequestConverter.channelRead0] - Closing input pipe. 17:04:06.693 DEBUG [SpanWrappedHttpHandler.execute] - Wrapping request. Before OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@4be75bcb, context={}, span id=0000000000000000, trace id=00000000000000000000000000000000} and after OpenTelemetryContext{tracer=io.opentelemetry.sdk.trace.SdkTracer@4be75bcb, context={opentelemetry-trace-span-key=SdkSpan{traceId=fec83a047ce54000463af90db935d050, spanId=153bae86bc0560d9, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=7afa32da709d228e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, name=session_queue, kind=INTERNAL, attributes=AttributesMap{data={random.key=bdce79d2-d322-4cbb-a5f5-507e810eaae0}, capacity=128, totalAddedValues=1}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1651244646690000000, endEpochNanos=0}}, span id=153bae86bc0560d9, trace id=fec83a047ce54000463af90db935d050} 17:04:06.696 DEBUG [HttpTracing.inject] - Injecting (POST) /session into OpenTelemetrySpan{traceId=fec83a047ce54000463af90db935d050,spanId=153bae86bc0560d9} at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler:84 17:04:06.761 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, goog:loggingPrefs: {browser: ALL}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserName: firefox, loggingPrefs: org.openqa.selenium.logging..., moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}] 17:04:06.792 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:56813/status] 17:04:06.793 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:56813/status 17:04:06.798 AM FEINSTEN [HttpURLConnection.plainConnect0] - ProxySelector Request for http://localhost:56813/status 17:04:06.813 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:56813/status 17:04:06.813 AM FEINSTEN [HttpURLConnection.plainConnect0] - ProxySelector Request for http://localhost:56813/status 17:04:06.845 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:56813/status 17:04:06.845 AM FEINSTEN [HttpURLConnection.plainConnect0] - ProxySelector Request for http://localhost:56813/status 17:04:06.893 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:56813/status 17:04:06.893 AM FEINSTEN [HttpURLConnection.plainConnect0] - ProxySelector Request for http://localhost:56813/status 17:04:06.987 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:56813/status 17:04:06.987 AM FEINSTEN [HttpURLConnection.plainConnect0] - ProxySelector Request for http://localhost:56813/status Starting ChromeDriver 100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs/branch-heads/4896@{#875}) on port 56813 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 17:04:07.160 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:56813/status 17:04:07.160 AM FEINSTEN [HttpURLConnection.plainConnect0] - ProxySelector Request for http://localhost:56813/status 17:04:07.161 AM FEINSTEN [HttpURLConnection.plainConnect0] - Proxy used: DIRECT 17:04:07.162 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@563b78fc5 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/17.0.3}{Host: localhost:56813}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} 17:04:07.163 AM FEINSTEN [HttpClient.logFinest] - KeepAlive stream used: http://localhost:56813/status 17:04:07.165 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@5190708b4 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 248}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} 17:04:07.191 DEBUG [ResourceLeakDetectorFactory$DefaultResourceLeakDetectorFactory.newResourceLeakDetector] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6211de3 17:04:07.620 DEBUG [JdkSslContext.] - Default protocols (JDK): [TLSv1.3, TLSv1.2]  17:04:07.620 DEBUG [JdkSslContext.] - Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384] 17:04:07.635 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@75066d2 17:04:07.638 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@50b8caef 17:04:07.641 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@4bc8d0ab 17:04:07.643 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@3a1c1fec 17:04:07.646 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@3efe888b 17:04:07.649 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@2887c209 17:04:07.651 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@2547023a 17:04:07.653 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@7f7e8a01 17:04:07.656 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@358eefb5 17:04:07.659 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@230ff487 17:04:07.663 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@3ec4740e 17:04:07.666 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@3561cf55 17:04:07.669 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@77d07d0b 17:04:07.672 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@2b2714ba 17:04:07.674 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@36de71d4 17:04:07.677 AM FEINSTEN [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WEPollSelectorImpl@dfe1b3d 17:04:07.742 AM FEINSTEN [LoggingHandler.channelRegistered] - [id: 0x79e50249] REGISTERED 17:04:07.742 AM FEINSTEN [LoggingHandler.connect] - [id: 0x79e50249] CONNECT: localhost/127.0.0.1:56813 17:04:07.747 DEBUG [NettyConnectListener.writeRequest] - Using new Channel '[id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813]' for 'POST' to '/session' 17:04:07.754 AM FEINSTEN [LoggingHandler.write] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] WRITE: 243B          +-------------------------------------------------+          |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f | +--------+-------------------------------------------------+----------------+ |00000000| 50 4f 53 54 20 2f 73 65 73 73 69 6f 6e 20 48 54 |POST /session HT| |00000010| 54 50 2f 31 2e 31 0d 0a 55 73 65 72 2d 41 67 65 |TP/1.1..User-Age| |00000020| 6e 74 3a 20 73 65 6c 65 6e 69 75 6d 2f 34 2e 31 |nt: selenium/4.1| |00000030| 2e 33 20 28 6a 61 76 61 20 77 69 6e 64 6f 77 73 |.3 (java windows| |00000040| 29 0d 0a 74 72 61 63 65 70 61 72 65 6e 74 3a 20 |)..traceparent: | |00000050| 30 30 2d 66 65 63 38 33 61 30 34 37 63 65 35 34 |00-fec83a047ce54| |00000060| 30 30 30 34 36 33 61 66 39 30 64 62 39 33 35 64 |000463af90db935d| |00000070| 30 35 30 2d 35 63 64 61 61 32 37 33 66 34 31 38 |050-5cdaa273f418| |00000080| 38 61 35 34 2d 30 31 0d 0a 43 6f 6e 74 65 6e 74 |8a54-01..Content| |00000090| 2d 4c 65 6e 67 74 68 3a 20 33 38 31 0d 0a 43 6f |-Length: 381..Co| |000000a0| 6e 74 65 6e 74 2d 54 79 70 65 3a 20 61 70 70 6c |ntent-Type: appl| |000000b0| 69 63 61 74 69 6f 6e 2f 6a 73 6f 6e 3b 20 63 68 |ication/json; ch| |000000c0| 61 72 73 65 74 3d 75 74 66 2d 38 0d 0a 68 6f 73 |arset=utf-8..hos| |000000d0| 74 3a 20 6c 6f 63 61 6c 68 6f 73 74 3a 35 36 38 |t: localhost:568| |000000e0| 31 33 0d 0a 61 63 63 65 70 74 3a 20 2a 2f 2a 0d |13..accept: */*.| |000000f0| 0a 0d 0a                                        |...             | +--------+-------------------------------------------------+----------------+ 17:04:07.760 AM FEINSTEN [LoggingHandler.write] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] WRITE: 381B          +-------------------------------------------------+          |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f | +--------+-------------------------------------------------+----------------+ |00000000| 7b 0a 20 20 22 64 65 73 69 72 65 64 43 61 70 61 |{.  ""desiredCapa| |00000010| 62 69 6c 69 74 69 65 73 22 3a 20 7b 0a 20 20 20 |bilities"": {.   | |00000020| 20 22 75 6e 68 61 6e 64 6c 65 64 50 72 6f 6d 70 | ""unhandledPromp| |00000030| 74 42 65 68 61 76 69 6f 72 22 3a 20 22 69 67 6e |tBehavior"": ""ign| |00000040| 6f 72 65 22 2c 0a 20 20 20 20 22 67 6f 6f 67 3a |ore"",.    ""goog:| |00000050| 6c 6f 67 67 69 6e 67 50 72 65 66 73 22 3a 20 7b |loggingPrefs"": {| |00000060| 0a 20 20 20 20 20 20 22 62 72 6f 77 73 65 72 22 |.      ""browser""| |00000070| 3a 20 22 41 4c 4c 22 0a 20 20 20 20 7d 2c 0a 20 |: ""ALL"".    },. | |00000080| 20 20 20 22 61 63 63 65 70 74 49 6e 73 65 63 75 |   ""acceptInsecu| |00000090| 72 65 43 65 72 74 73 22 3a 20 74 72 75 65 0a 20 |reCerts"": true. | |000000a0| 20 7d 2c 0a 20 20 22 63 61 70 61 62 69 6c 69 74 | },.  ""capabilit| |000000b0| 69 65 73 22 3a 20 7b 0a 20 20 20 20 22 66 69 72 |ies"": {.    ""fir| |000000c0| 73 74 4d 61 74 63 68 22 3a 20 5b 0a 20 20 20 20 |stMatch"": [.    | |000000d0| 20 20 7b 0a 20 20 20 20 20 20 20 20 22 61 63 63 |  {.        ""acc| |000000e0| 65 70 74 49 6e 73 65 63 75 72 65 43 65 72 74 73 |eptInsecureCerts| |000000f0| 22 3a 20 74 72 75 65 2c 0a 20 20 20 20 20 20 20 |"": true,.       | |00000100| 20 22 67 6f 6f 67 3a 6c 6f 67 67 69 6e 67 50 72 | ""goog:loggingPr| |00000110| 65 66 73 22 3a 20 7b 0a 20 20 20 20 20 20 20 20 |efs"": {.        | |00000120| 20 20 22 62 72 6f 77 73 65 72 22 3a 20 22 41 4c |  ""browser"": ""AL| |00000130| 4c 22 0a 20 20 20 20 20 20 20 20 7d 2c 0a 20 20 |L"".        },.  | |00000140| 20 20 20 20 20 20 22 75 6e 68 61 6e 64 6c 65 64 |      ""unhandled| |00000150| 50 72 6f 6d 70 74 42 65 68 61 76 69 6f 72 22 3a |PromptBehavior"":| |00000160| 20 22 69 67 6e 6f 72 65 22 0a 20 20 20 20 20 20 | ""ignore"".      | |00000170| 7d 0a 20 20 20 20 5d 0a 20 20 7d 0a 7d          |}.    ].  }.}   | +--------+-------------------------------------------------+----------------+ 17:04:07.760 AM FEINSTEN [LoggingHandler.flush] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] FLUSH 17:04:07.762 AM FEINSTEN [LoggingHandler.write] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] WRITE: 0B 17:04:07.762 AM FEINSTEN [LoggingHandler.flush] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] FLUSH 17:04:07.763 AM FEINSTEN [LoggingHandler.channelActive] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] ACTIVE 17:04:09.010 AM FEINSTEN [LoggingHandler.channelRead] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] READ: 888B          +-------------------------------------------------+          |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f | +--------+-------------------------------------------------+----------------+ |00000000| 48 54 54 50 2f 31 2e 31 20 32 30 30 20 4f 4b 0d |HTTP/1.1 200 OK.| |00000010| 0a 43 6f 6e 74 65 6e 74 2d 4c 65 6e 67 74 68 3a |.Content-Length:| |00000020| 37 37 39 0d 0a 43 6f 6e 74 65 6e 74 2d 54 79 70 |779..Content-Typ| |00000030| 65 3a 61 70 70 6c 69 63 61 74 69 6f 6e 2f 6a 73 |e:application/js| |00000040| 6f 6e 3b 20 63 68 61 72 73 65 74 3d 75 74 66 2d |on; charset=utf-| |00000050| 38 0d 0a 63 61 63 68 65 2d 63 6f 6e 74 72 6f 6c |8..cache-control| |00000060| 3a 6e 6f 2d 63 61 63 68 65 0d 0a 0d 0a 7b 22 76 |:no-cache....{""v| |00000070| 61 6c 75 65 22 3a 7b 22 63 61 70 61 62 69 6c 69 |alue"":{""capabili| |00000080| 74 69 65 73 22 3a 7b 22 61 63 63 65 70 74 49 6e |ties"":{""acceptIn| |00000090| 73 65 63 75 72 65 43 65 72 74 73 22 3a 74 72 75 |secureCerts"":tru| |000000a0| 65 2c 22 62 72 6f 77 73 65 72 4e 61 6d 65 22 3a |e,""browserName"":| |000000b0| 22 63 68 72 6f 6d 65 22 2c 22 62 72 6f 77 73 65 |""chrome"",""browse| |000000c0| 72 56 65 72 73 69 6f 6e 22 3a 22 31 30 30 2e 30 |rVersion"":""100.0| |000000d0| 2e 34 38 39 36 2e 31 32 37 22 2c 22 63 68 72 6f |.4896.127"",""chro| |000000e0| 6d 65 22 3a 7b 22 63 68 72 6f 6d 65 64 72 69 76 |me"":{""chromedriv| |000000f0| 65 72 56 65 72 73 69 6f 6e 22 3a 22 31 30 30 2e |erVersion"":""100.| |00000100| 30 2e 34 38 39 36 2e 36 30 20 28 36 61 35 64 31 |0.4896.60 (6a5d1| |00000110| 30 38 36 31 63 65 38 64 65 35 66 63 65 32 32 35 |0861ce8de5fce225| |00000120| 36 34 36 35 38 30 33 33 62 34 33 63 62 37 64 65 |64658033b43cb7de| |00000130| 30 34 37 2d 72 65 66 73 2f 62 72 61 6e 63 68 2d |047-refs/branch-| |00000140| 68 65 61 64 73 2f 34 38 39 36 40 7b 23 38 37 35 |heads/4896@{#875| |00000150| 7d 29 22 2c 22 75 73 65 72 44 61 74 61 44 69 72 |})"",""userDataDir| |00000160| 22 3a 22 43 3a 5c 5c 55 73 65 72 73 5c 5c 4a 4f |"":""C:\\Users\\JO| |00000170| 45 53 41 55 54 5c 5c 41 70 70 44 61 74 61 5c 5c |ESAUT\\AppData\\| |00000180| 4c 6f 63 61 6c 5c 5c 54 65 6d 70 5c 5c 73 63 6f |Local\\Temp\\sco| |00000190| 70 65 64 5f 64 69 72 32 34 34 34 38 5f 37 35 38 |ped_dir24448_758| |000001a0| 34 38 39 34 33 36 22 7d 2c 22 67 6f 6f 67 3a 63 |489436""},""goog:c| |000001b0| 68 72 6f 6d 65 4f 70 74 69 6f 6e 73 22 3a 7b 22 |hromeOptions"":{""| |000001c0| 64 65 62 75 67 67 65 72 41 64 64 72 65 73 73 22 |debuggerAddress""| |000001d0| 3a 22 6c 6f 63 61 6c 68 6f 73 74 3a 35 30 35 30 |:""localhost:5050| |000001e0| 36 22 7d 2c 22 6e 65 74 77 6f 72 6b 43 6f 6e 6e |6""},""networkConn| |000001f0| 65 63 74 69 6f 6e 45 6e 61 62 6c 65 64 22 3a 66 |ectionEnabled"":f| |00000200| 61 6c 73 65 2c 22 70 61 67 65 4c 6f 61 64 53 74 |alse,""pageLoadSt| |00000210| 72 61 74 65 67 79 22 3a 22 6e 6f 72 6d 61 6c 22 |rategy"":""normal""| |00000220| 2c 22 70 6c 61 74 66 6f 72 6d 4e 61 6d 65 22 3a |,""platformName"":| |00000230| 22 77 69 6e 64 6f 77 73 22 2c 22 70 72 6f 78 79 |""windows"",""proxy| |00000240| 22 3a 7b 7d 2c 22 73 65 74 57 69 6e 64 6f 77 52 |"":{},""setWindowR| |00000250| 65 63 74 22 3a 74 72 75 65 2c 22 73 74 72 69 63 |ect"":true,""stric| |00000260| 74 46 69 6c 65 49 6e 74 65 72 61 63 74 61 62 69 |tFileInteractabi| |00000270| 6c 69 74 79 22 3a 66 61 6c 73 65 2c 22 74 69 6d |lity"":false,""tim| |00000280| 65 6f 75 74 73 22 3a 7b 22 69 6d 70 6c 69 63 69 |eouts"":{""implici| |00000290| 74 22 3a 30 2c 22 70 61 67 65 4c 6f 61 64 22 3a |t"":0,""pageLoad"":| |000002a0| 33 30 30 30 30 30 2c 22 73 63 72 69 70 74 22 3a |300000,""script"":| |000002b0| 33 30 30 30 30 7d 2c 22 75 6e 68 61 6e 64 6c 65 |30000},""unhandle| |000002c0| 64 50 72 6f 6d 70 74 42 65 68 61 76 69 6f 72 22 |dPromptBehavior""| |000002d0| 3a 22 69 67 6e 6f 72 65 22 2c 22 77 65 62 61 75 |:""ignore"",""webau| |000002e0| 74 68 6e 3a 65 78 74 65 6e 73 69 6f 6e 3a 63 72 |thn:extension:cr| |000002f0| 65 64 42 6c 6f 62 22 3a 74 72 75 65 2c 22 77 65 |edBlob"":true,""we| |00000300| 62 61 75 74 68 6e 3a 65 78 74 65 6e 73 69 6f 6e |bauthn:extension| |00000310| 3a 6c 61 72 67 65 42 6c 6f 62 22 3a 74 72 75 65 |:largeBlob"":true| |00000320| 2c 22 77 65 62 61 75 74 68 6e 3a 76 69 72 74 75 |,""webauthn:virtu| |00000330| 61 6c 41 75 74 68 65 6e 74 69 63 61 74 6f 72 73 |alAuthenticators| |00000340| 22 3a 74 72 75 65 7d 2c 22 73 65 73 73 69 6f 6e |"":true},""session| |00000350| 49 64 22 3a 22 35 31 64 35 63 37 61 62 64 64 32 |Id"":""51d5c7abdd2| |00000360| 62 37 63 37 39 37 65 39 32 37 30 31 35 64 66 37 |b7c797e927015df7| |00000370| 39 31 64 65 66 22 7d 7d                         |91def""}}        | +--------+-------------------------------------------------+----------------+ 17:04:09.012 DEBUG [Brotli.] - brotli4j not in the classpath; Brotli support will be unavailable. 17:04:09.013 DEBUG [HttpHandler.handleHttpResponse] -   Request DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /session HTTP/1.1 User-Agent: selenium/4.1.3 (java windows) traceparent: 00-fec83a047ce54000463af90db935d050-5cdaa273f4188a54-01 Content-Length: 381 Content-Type: application/json; charset=utf-8 host: localhost:56813 accept: */*  Response DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 200 OK Content-Type: application/json; charset=utf-8 cache-control: no-cache content-length: 779  17:04:09.016 DEBUG [ChannelManager.tryToOfferChannelToPool] - Adding key: http://localhost:56813 for channel [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] 17:04:09.018 AM FEINSTEN [LoggingHandler.channelReadComplete] - [id: 0x79e50249, L:/127.0.0.1:50505 - R:localhost/127.0.0.1:56813] READ COMPLETE 17:04:09.023 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=5cdaa273f4188a54, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=7a148635ed074bff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=httpclient.execute, kind=INTERNAL, startEpochNanos=1651244647699196200, endEpochNanos=1651244649020307500, attributes=AttributesMap{data={span.kind=client, http.target=/session, http.status_code=200, http.method=POST}, capacity=128, totalAddedValues=4}, totalAttributeCount=4, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true} 17:04:09.040 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 17:04:09.047 DEBUG [CdpEndpointFinder.getReportedUri] - URI found: http://localhost:50506 17:04:09.054 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=7a148635ed074bff, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=d6e0212b048b9a9b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=driver_service_factory.apply, kind=INTERNAL, startEpochNanos=1651244646769272100, endEpochNanos=1651244649052746200, attributes=AttributesMap{data={session.capabilities={""acceptInsecureCerts"": true,""goog:loggingPrefs"": {""browser"": ""ALL""},""unhandledPromptBehavior"": ""ignore""} }, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[ImmutableEventData{name=Driver service created session, attributes={downstream.dialect=""W3C"", driver.response=""(Response: SessionID: 51d5c7abdd2b7c797e927015df791def, Status: 0, Value: {acceptInsecureCerts=true, browserName=chrome, browserVersion=100.0.4896.127, chrome={chromedriverVersion=100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs/branch-heads/4896@{#875}), userDataDir=C:\Users\JOESAUT\AppData\Local\Temp\scoped_dir24448_758489436}, goog:chromeOptions={debuggerAddress=localhost:50506}, networkConnectionEnabled=false, pageLoadStrategy=normal, platformName=windows, proxy=Proxy(), setWindowRect=true, strictFileInteractability=false, timeouts={implicit=0, pageLoad=300000, script=30000}, unhandledPromptBehavior=ignore, webauthn:extension:credBlob=true, webauthn:extension:largeBlob=true, webauthn:virtualAuthenticators=true})"", driver.url=""http://localhost:56813"", logger=""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"", session.capabilities=""{""acceptInsecureCerts"": true,""goog:loggingPrefs"": {""browser"": ""ALL""},""unhandledPromptBehavior"": ""ignore""} "", upstream.dialect=""W3C""}, epochNanos=1651244649049084100, totalAttributeCount=6}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.057 DEBUG [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""fec83a047ce54000463af90db935d050"",""eventTime"": 1651244649049084100,""eventName"": ""Driver service created session"",""attributes"": {""downstream.dialect"": ""W3C"",""driver.response"": ""(Response: SessionID: 51d5c7abdd2b7c797e927015df791def, Status: 0, Value: {acceptInsecureCerts=true, browserName=chrome, browserVersion=100.0.4896.127, chrome={chromedriverVersion=100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs\u002fbranch-heads\u002f4896@{#875}), userDataDir=C:\\Users\\JOESAUT\\AppData\\Local\\Temp\\scoped_dir24448_758489436}, goog:chromeOptions={debuggerAddress=localhost:50506}, networkConnectionEnabled=false, pageLoadStrategy=normal, platformName=windows, proxy=Proxy(), setWindowRect=true, strictFileInteractability=false, timeouts={implicit=0, pageLoad=300000, script=30000}, unhandledPromptBehavior=ignore, webauthn:extension:credBlob=true, webauthn:extension:largeBlob=true, webauthn:virtualAuthenticators=true})"",""driver.url"": ""http:\u002f\u002flocalhost:56813"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""acceptInsecureCerts\"": true,\""goog:loggingPrefs\"": {\""browser\"": \""ALL\""},\""unhandledPromptBehavior\"": \""ignore\""}\n"",""upstream.dialect"": ""W3C""}}  17:04:09.072 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=d6e0212b048b9a9b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=cde3acc2f4d51c40, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=node.new_session, kind=INTERNAL, startEpochNanos=1651244646768487700, endEpochNanos=1651244649070755700, attributes=AttributesMap{data={current.session.count=0, upstream.dialect=W3C, session.uri=http://localhost:56813, session.id=51d5c7abdd2b7c797e927015df791def, downstream.dialect=W3C, session.capabilities={""acceptInsecureCerts"": true,""browserName"": ""chrome"",""browserVersion"": ""100.0.4896.127"",""chrome"": {""chromedriverVersion"": ""100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs\u002fbranch-heads\u002f4896@{#875})"",""userDataDir"": ""C:\\Users\\JOESAUT\\AppData\\Local\\Temp\\scoped_dir24448_758489436""},""goog:chromeOptions"": {""debuggerAddress"": ""localhost:50506""},""networkConnectionEnabled"": false,""pageLoadStrategy"": ""normal"",""platformName"": ""windows"",""proxy"": {},""se:cdp"": ""http:\u002f\u002flocalhost:50506"",""se:cdpVersion"": ""100.0.4896.127"",""setWindowRect"": true,""strictFileInteractability"": false,""timeouts"": {""implicit"": 0,""pageLoad"": 300000,""script"": 30000},""unhandledPromptBehavior"": ""ignore"",""webauthn:extension:credBlob"": true,""webauthn:extension:largeBlob"": true,""webauthn:virtualAuthenticators"": true} }, capacity=128, totalAddedValues=6}, totalAttributeCount=6, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.072 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=88124d71e9c4b9a3, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=cde3acc2f4d51c40, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=local_sessionmap.add, kind=INTERNAL, startEpochNanos=1651244649071236300, endEpochNanos=1651244649071347600, attributes=AttributesMap{data={session.id=51d5c7abdd2b7c797e927015df791def}, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[ImmutableEventData{name=Added session into local session map, attributes={logger=""org.openqa.selenium.grid.sessionmap.local.LocalSessionMap"", session.id=""51d5c7abdd2b7c797e927015df791def""}, epochNanos=1651244649071339000, totalAttributeCount=2}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.073 DEBUG [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""fec83a047ce54000463af90db935d050"",""eventTime"": 1651244649071339000,""eventName"": ""Added session into local session map"",""attributes"": {""logger"": ""org.openqa.selenium.grid.sessionmap.local.LocalSessionMap"",""session.id"": ""51d5c7abdd2b7c797e927015df791def""}}  17:04:09.078 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 51d5c7abdd2b7c797e927015df791def, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 100.0.4896.127, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\JOESAUT\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50506}, goog:loggingPrefs: {browser: ALL}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://192.168.1.25:8888/sess..., se:cdpVersion: 100.0.4896.127, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 17:04:09.079 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=cde3acc2f4d51c40, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=68508faaa3646e7b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=distributor.new_session, kind=INTERNAL, startEpochNanos=1651244646757774400, endEpochNanos=1651244649078383900, attributes=AttributesMap{data={session.uri=http://192.168.1.25:8888, session.id=51d5c7abdd2b7c797e927015df791def, session.capabilities={""acceptInsecureCerts"": true,""browserName"": ""chrome"",""browserVersion"": ""100.0.4896.127"",""chrome"": {""chromedriverVersion"": ""100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs\u002fbranch-heads\u002f4896@{#875})"",""userDataDir"": ""C:\\Users\\JOESAUT\\AppData\\Local\\Temp\\scoped_dir24448_758489436""},""goog:chromeOptions"": {""debuggerAddress"": ""localhost:50506""},""goog:loggingPrefs"": {""browser"": ""ALL""},""networkConnectionEnabled"": false,""pageLoadStrategy"": ""normal"",""platformName"": ""windows"",""proxy"": {},""se:cdp"": ""ws:\u002f\u002f192.168.1.25:8888\u002fsession\u002f51d5c7abdd2b7c797e927015df791def\u002fse\u002fcdp"",""se:cdpVersion"": ""100.0.4896.127"",""setWindowRect"": true,""strictFileInteractability"": false,""timeouts"": {""implicit"": 0,""pageLoad"": 300000,""script"": 30000},""unhandledPromptBehavior"": ""ignore"",""webauthn:extension:credBlob"": true,""webauthn:extension:largeBlob"": true,""webauthn:virtualAuthenticators"": true} }, capacity=128, totalAddedValues=3}, totalAttributeCount=3, events=[ImmutableEventData{name=Session request received by the distributor, attributes={logger=""org.openqa.selenium.grid.distributor.local.LocalDistributor"", request.payload=""[Capabilities {acceptInsecureCerts: true, goog:loggingPrefs: {browser: ALL}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserName: firefox, loggingPrefs: org.openqa.selenium.logging..., moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}]""}, epochNanos=1651244646759348200, totalAttributeCount=2}, ImmutableEventData{name=Session created by the distributor, attributes={logger=""org.openqa.selenium.grid.distributor.local.LocalDistributor"", request.payload=""[Capabilities {acceptInsecureCerts: true, goog:loggingPrefs: {browser: ALL}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserName: firefox, loggingPrefs: org.openqa.selenium.logging..., moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}]"", session.capabilities=""{""acceptInsecureCerts"": true,""browserName"": ""chrome"",""browserVersion"": ""100.0.4896.127"",""chrome"": {""chromedriverVersion"": ""100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs\u002fbranch-heads\u002f4896@{#875})"",""userDataDir"": ""C:\\Users\\JOESAUT\\AppData\\Local\\Temp\\scoped_dir24448_758489436""},""goog:chromeOptions"": {""debuggerAddress"": ""localhost:50506""},""goog:loggingPrefs"": {""browser"": ""ALL""},""networkConnectionEnabled"": false,""pageLoadStrategy"": ""normal"",""platformName"": ""windows"",""proxy"": {},""se:cdp"": ""ws:\u002f\u002f192.168.1.25:8888\u002fsession\u002f51d5c7abdd2b7c797e927015df791def\u002fse\u002fcdp"",""se:cdpVersion"": ""100.0.4896.127"",""setWindowRect"": true,""strictFileInteractability"": false,""timeouts"": {""implicit"": 0,""pageLoad"": 300000,""script"": 30000},""unhandledPromptBehavior"": ""ignore"",""webauthn:extension:credBlob"": true,""webauthn:extension:largeBlob"": true,""webauthn:virtualAuthenticators"": true} "", session.id=""51d5c7abdd2b7c797e927015df791def"", session.uri=""http://192.168.1.25:8888""}, epochNanos=1651244649076913500, totalAttributeCount=5}], totalRecordedEvents=2, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.080 DEBUG [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""fec83a047ce54000463af90db935d050"",""eventTime"": 1651244646759348200,""eventName"": ""Session request received by the distributor"",""attributes"": {""logger"": ""org.openqa.selenium.grid.distributor.local.LocalDistributor"",""request.payload"": ""[Capabilities {acceptInsecureCerts: true, goog:loggingPrefs: {browser: ALL}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserName: firefox, loggingPrefs: org.openqa.selenium.logging..., moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}]""}}  17:04:09.081 DEBUG [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""fec83a047ce54000463af90db935d050"",""eventTime"": 1651244649076913500,""eventName"": ""Session created by the distributor"",""attributes"": {""logger"": ""org.openqa.selenium.grid.distributor.local.LocalDistributor"",""request.payload"": ""[Capabilities {acceptInsecureCerts: true, goog:loggingPrefs: {browser: ALL}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}, Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserName: firefox, loggingPrefs: org.openqa.selenium.logging..., moz:debuggerAddress: true, moz:firefoxOptions: {}, unhandledPromptBehavior: ignore}]"",""session.capabilities"": ""{\""acceptInsecureCerts\"": true,\""browserName\"": \""chrome\"",\""browserVersion\"": \""100.0.4896.127\"",\""chrome\"": {\""chromedriverVersion\"": \""100.0.4896.60 (6a5d10861ce8de5fce22564658033b43cb7de047-refs\\u002fbranch-heads\\u002f4896@{#875})\"",\""userDataDir\"": \""C:\\\\Users\\\\JOESAUT\\\\AppData\\\\Local\\\\Temp\\\\scoped_dir24448_758489436\""},\""goog:chromeOptions\"": {\""debuggerAddress\"": \""localhost:50506\""},\""goog:loggingPrefs\"": {\""browser\"": \""ALL\""},\""networkConnectionEnabled\"": false,\""pageLoadStrategy\"": \""normal\"",\""platformName\"": \""windows\"",\""proxy\"": {},\""se:cdp\"": \""ws:\\u002f\\u002f192.168.1.25:8888\\u002fsession\\u002f51d5c7abdd2b7c797e927015df791def\\u002fse\\u002fcdp\"",\""se:cdpVersion\"": \""100.0.4896.127\"",\""setWindowRect\"": true,\""strictFileInteractability\"": false,\""timeouts\"": {\""implicit\"": 0,\""pageLoad\"": 300000,\""script\"": 30000},\""unhandledPromptBehavior\"": \""ignore\"",\""webauthn:extension:credBlob\"": true,\""webauthn:extension:largeBlob\"": true,\""webauthn:virtualAuthenticators\"": true}\n"",""session.id"": ""51d5c7abdd2b7c797e927015df791def"",""session.uri"": ""http:\u002f\u002f192.168.1.25:8888""}}  17:04:09.083 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=f0fe4637913ac0d5, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=153bae86bc0560d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=sessionqueue.completed, kind=INTERNAL, startEpochNanos=1651244649082000000, endEpochNanos=1651244649082492900, attributes={}, totalAttributeCount=0, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.083 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=f19a6bc36252b36e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=153bae86bc0560d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=sessionqueue.add_to_queue, kind=INTERNAL, startEpochNanos=1651244646749000000, endEpochNanos=1651244649082452800, attributes={}, totalAttributeCount=0, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.083 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=68508faaa3646e7b, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=153bae86bc0560d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=distributor.poll_queue, kind=INTERNAL, startEpochNanos=1651244646756000000, endEpochNanos=1651244649082407299, attributes=AttributesMap{data={request.id=ce0a6ab5-3580-4ffd-aff6-7e3d59314fea}, capacity=128, totalAddedValues=1}, totalAttributeCount=1, events=[], totalRecordedEvents=0, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=UNSET, description=}, hasEnded=true} 17:04:09.084 DEBUG [SeleniumSpanExporter$1.lambda$export$1] - SpanData{spanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=153bae86bc0560d9, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, parentSpanContext=ImmutableSpanContext{traceId=fec83a047ce54000463af90db935d050, spanId=7afa32da709d228e, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=true, valid=true}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.9.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.12.0""}}, instrumentationLibraryInfo=InstrumentationLibraryInfo{name=default, version=null, schemaUrl=null}, name=session_queue, kind=INTERNAL, startEpochNanos=1651244646690000000, endEpochNanos=1651244649082820200, attributes=AttributesMap{data={span.kind=server, http.target=/session, random.key=bdce79d2-d322-4cbb-a5f5-507e810eaae0, http.status_code=200, http.method=POST}, capacity=128, totalAddedValues=5}, totalAttributeCount=5, events=[ImmutableEventData{name=HTTP request execution complete, attributes={http.flavor=1, http.handler_class=""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"", http.host=""127.0.0.1:8888"", http.method=""POST"", http.request_content_length=""714"", http.scheme=""HTTP"", http.status_code=200, http.target=""/session"", http.user_agent=""selenium/4.1.3 (java windows)""}, epochNanos=1651244649082808300, totalAttributeCount=9}], totalRecordedEvents=1, links=[], totalRecordedLinks=0, status=ImmutableStatusData{statusCode=OK, description=Kind: OK Description:}, hasEnded=true} 17:04:09.085 DEBUG [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""fec83a047ce54000463af90db935d050"",""eventTime"": 1651244649082808300,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"",""http.host"": ""127.0.0.1:8888"",""http.method"": ""POST"",""http.request_content_length"": ""714"",""http.scheme"": ""HTTP"",""http.status_code"": 200,""http.target"": ""\u002fsession"",""http.user_agent"": ""selenium\u002f4.1.3 (java windows)""}}  Apr. 29, 2022 5:04:09 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFORMATION: Detected dialect: W3C Exception in thread ""main"" java.lang.IllegalStateException: hey, i need firefox 	at WrongBrowser.main(WrongBrowser.java:51) ```   ### Operating System  Windows 10 x64  ### Selenium version  Java 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100, Firefox 99  ### What are the browser driver(s) and version(s) where you see this issue?  gecko 0.30.0, chrome 100.0.4896.60  ### Are you using Selenium Grid?  selenium-server-4.1.3.jar","closed","I-defect,","joerg1985","2022-04-29T15:30:07Z","2022-06-23T00:11:06Z"
"","10545","[🐛 Bug]: [c#][dotnet] Navigate does not work when InitialBrowserUrl is set to about:blank in iemode","### What happened?  In iemode, if InitialBrowserUrl of ieoption is set to about:blank, Navigate does not work after moving to about:blank page.  ### How can we reproduce the issue?  ```shell using OpenQA.Selenium.IE; using Selenium; using System; using System.Collections.Generic; using System.Text;  namespace Edge_IE_Mode {     ///      /// Using Selenium.WebDriver v4.1.0     /// Using IEDriverServer.exe v4.0.0.0     ///      class Program     {         static void Main(string[] args)         {              String ieDriverPath = @""C:\webdriver\32bit\"";             String fileName = ""IEDriverServer.exe"";              InternetExplorerDriverService ieds = InternetExplorerDriverService.CreateDefaultService(ieDriverPath, fileName);             InternetExplorerOptions ieOption = new InternetExplorerOptions();             ieOption.AttachToEdgeChrome = true;             ieOption.EdgeExecutablePath = @""C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"";             ieOption.InitialBrowserUrl = ""about:blank""; //","closed","needs-triaging,","thepbnk","2022-04-14T09:22:20Z","2022-05-16T00:14:02Z"
"","10726","[🐛 Bug]:  Unable to open tab when using ie11","### What happened?  in IE11, When I click a link manually, a new tab open, But if use webdriver, a new window will open. Why does it happen？  ### How can we reproduce the issue?  ```shell Use ie11 to find a link to open a new window and open. ```   ### Relevant log output  ```shell nothing ```   ### Operating System  Windows 10  ### Selenium version  selenium 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  IE11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  _No response_","closed","I-question,","accamo","2022-06-02T02:26:42Z","2022-07-03T00:14:10Z"
"","10442","[🐛 Bug]: [py] [firefox] acceptInsecureCerts from deprecated capabilities overwrites options.accept_insecure_certs","### What happened?  In [L136](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/webdriver.py#L136) if the deprecated capabilities option is None the default is set to  ```DesiredCapabilities.FIREFOX``` Then in [L168](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/webdriver.py#L168) The deprecated default from acceptInsecureCerts overwrites the set value from the options object.    I am happy to put the proposed changes in a PR with the changes proposed below (Do not initialize deprecated parameters to a default use empty dict instead):  https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/webdriver.py#L135-L140 ```         if capabilities is None:             capabilities = {}         if not options:             options = Options() ```  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.options import Options  options = Options() options.accept_insecure_certs = False  driver = webdriver.Firefox(options=options) driver.capabilities() ```  yields:  ``` {'acceptInsecureCerts': True,  'browserName': 'firefox', ... ``` ```   ### Relevant log output  ```shell . ```   ### Operating System  Linux  ### Selenium version  python selenium==4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Firefox 98.0  ### What are the browser driver(s) and version(s) where you see this issue?  gecko 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","PhilippSelenium","2022-03-14T13:45:00Z","2022-06-09T00:11:20Z"
"","10083","[🐛 Bug]: importing webdriver: «File """", line 1039, in get_data», getAttribute.js FileNotFoundError","### What happened?  Importing `webdriver` with `from selenium import webdriver` produces this error: ```python   File """", line 1039, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/usr/lib64/python3.9/site-packages/selenium/webdriver/remote/getAttribute.js' ```  ### How can we reproduce the issue?  ```python from selenium import webdriver ```   ### Relevant log output  ```shell >>> from selenium import webdriver Traceback (most recent call last):   File """", line 1, in    File ""/usr/lib64/python3.9/site-packages/selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/usr/lib64/python3.9/site-packages/selenium/webdriver/firefox/webdriver.py"", line 25, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/usr/lib64/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 42, in      from .switch_to import SwitchTo   File ""/usr/lib64/python3.9/site-packages/selenium/webdriver/remote/switch_to.py"", line 25, in      from selenium.webdriver.remote.webelement import WebElement   File ""/usr/lib64/python3.9/site-packages/selenium/webdriver/remote/webelement.py"", line 37, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.9/pkgutil.py"", line 639, in get_data     return loader.get_data(resource_name)   File """", line 1039, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/usr/lib64/python3.9/site-packages/selenium/webdriver/remote/getAttribute.js' ```   ### Operating System  slackware64-current (Linux kernel 5.15.4)  ### Selenium version  Python 3.9.9 with Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 91.3.0esr  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Geremia","2021-11-24T21:35:27Z","2021-12-30T00:07:21Z"
"","10124","[🐛 Bug]: Firefox DevTools - java.lang.NullPointerException: (keyExchange|initialPriority) is required","### What happened?  Im trying to implement DevTools support for my tests, i would like to use Network.requestWillBeSent() and Network.responseReceived()   Using Firefox v94 I'm getting NullPointerExceptions for params: `RequestWillBeSent -> Request -> java.lang.NullPointerException: initialPriority is required` `ResponseReceived -> Response -> SecurityDetails ->  java.lang.NullPointerException: keyExchange is required` Also this below: `ResponseReceived -> Unable to find matching enum value for Img in class org.openqa.selenium.devtools.v94.network.model.ResourceType`  and all these Exceptions are logged to my console in bulk which just pollutes logs to the point you cannot read anything.  All works out properly with Chrome v96 browser, no Exceptions are logged  Stacktraces attached.  P.S Why are dev tools related classes 'multiplied', what is the reason there got to be same classes in packages v85, v94, v95, v96 ?    [selenium4_ResourceType_Unable to find matching enum value for Img.txt](https://github.com/SeleniumHQ/selenium/files/7684609/selenium4_ResourceType_Unable.to.find.matching.enum.value.for.Img.txt) [Selenium4_initialPriority is required.txt](https://github.com/SeleniumHQ/selenium/files/7684610/Selenium4_initialPriority.is.required.txt) [Selenium4_keyExchange is required.txt](https://github.com/SeleniumHQ/selenium/files/7684611/Selenium4_keyExchange.is.required.txt)  ### How can we reproduce the issue?  ```shell I'm getting there Exceptions using https://www.keycloak.org/ , don't know how this can be reproduced outside of this application ```   ### Relevant log output  ```shell Exception in thread ""CDP Connection"" org.openqa.selenium.devtools.DevToolsException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.RequestWillBeSent Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:202) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.RequestWillBeSent Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.Network.lambda$requestWillBeSent$40(Network.java:513) 	at org.openqa.selenium.devtools.Connection.lambda$handle$6(Connection.java:266) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373) 	at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1556) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:257) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:58) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:199) 	... 3 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59) 	... 21 more Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.Request Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.model.RequestWillBeSent.fromJson(RequestWillBeSent.java:149) 	... 25 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59) 	... 29 more Caused by: java.lang.NullPointerException: initialPriority is required 	at java.util.Objects.requireNonNull(Objects.java:228) 	at org.openqa.selenium.devtools.v94.network.model.Request.(Request.java:80) 	at org.openqa.selenium.devtools.v94.network.model.Request.fromJson(Request.java:246) 	... 33 more 	at org.openqa.selenium.devtools.v94.network.Network.lambda$responseReceived$43(Network.java:525) 	at org.openqa.selenium.devtools.Connection.lambda$handle$6(Connection.java:266) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373) 	at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1556) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)     WARNING: Unable to process: {""method"":""Network.responseReceived"",""params"":{""requestId"":""93587337379934"",""loaderId"":""93587337379934"",""timestamp"":1639048121.082,""type"":""Document"",""response"":{""url"":""https://asauthservice.dev.fingo.info/auth/admin/E2E-Testing/console/#/realms/E2E-Testing&state=c16aa57f-f43e-40c7-abd4-0b069b8ccae5&session_state=732233c9-a091-43ca-839d-a491420bab58&code=c3516c8e-ec80-46c0-9d80-20428926c1a8.732233c9-a091-43ca-839d-a491420bab58.742b6c2a-2af4-46e0-9e8b-f328c1e6c9a8"",""status"":200,""statusText"":""OK"",""headers"":{""cache-control"":""no-cache"",""x-xss-protection"":""1; mode=block"",""x-frame-options"":""SAMEORIGIN"",""referrer-policy"":""no-referrer"",""content-security-policy"":""frame-src 'self'; frame-ancestors 'self'; object-src 'none';"",""date"":""Thu, 09 Dec 2021 11:08:41 GMT"",""x-robots-tag"":""none"",""strict-transport-security"":""max-age=31536000; includeSubDomains"",""x-content-type-options"":""nosniff"",""content-type"":""text/html;charset=utf-8"",""content-length"":""7673"",""content-language"":""en""},""mimeType"":""text/html"",""requestHeaders"":{""host"":""asauthservice.dev.fingo.info"",""user-agent"":""Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0"",""accept"":""text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8"",""accept-language"":""pl"",""accept-encoding"":""gzip, deflate, br"",""connection"":""keep-alive"",""cookie"":""1e6ba2f2d871c9ac17b291cb7ad00cda=ca75b31d052dc101b7dec9f224f81006"",""upgrade-insecure-requests"":""1"",""sec-fetch-dest"":""document"",""sec-fetch-mode"":""navigate"",""sec-fetch-site"":""none"",""sec-fetch-user"":""?1""},""remoteIPAddress"":""10.10.74.111"",""remotePort"":443,""fromDiskCache"":false,""protocol"":""http/1.1"",""securityDetails"":{""protocol"":""TLS 1.2"",""subjectName"":""*.dev.fingo.info"",""issuer"":""ESET SSL Filter CA"",""validFrom"":1638944279,""validTo"":1646720278},""securityState"":""unknown""},""frameId"":""19""},""sessionId"":""d4cc82e3-2e6d-445c-8e67-8154e0880de9""} org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.ResponseReceived Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.Network.lambda$responseReceived$43(Network.java:525) 	at org.openqa.selenium.devtools.Connection.lambda$handle$6(Connection.java:266) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373) 	at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1556) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:257) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:58) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:199) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59) 	... 21 more Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.Response Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.model.ResponseReceived.fromJson(ResponseReceived.java:97) 	... 25 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59) 	... 29 more Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.SecurityDetails Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.model.Response.fromJson(Response.java:340) 	... 33 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor13.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59) 	... 37 more Caused by: java.lang.NullPointerException: keyExchange is required 	at java.util.Objects.requireNonNull(Objects.java:228) 	at org.openqa.selenium.devtools.v94.network.model.SecurityDetails.(SecurityDetails.java:39) 	at org.openqa.selenium.devtools.v94.network.model.SecurityDetails.fromJson(SecurityDetails.java:208) 	... 41 more    Exception in thread ""CDP Connection"" org.openqa.selenium.devtools.DevToolsException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.ResponseReceived Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:202) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.devtools.v94.network.model.ResponseReceived Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.Network.lambda$responseReceived$43(Network.java:525) 	at org.openqa.selenium.devtools.Connection.lambda$handle$6(Connection.java:266) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373) 	at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1556) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:257) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:58) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:199) 	... 3 more Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor10.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59) 	... 21 more Caused by: org.openqa.selenium.json.JsonException: Unable to find matching enum value for Img in class org.openqa.selenium.devtools.v94.network.model.ResourceType Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-3U0IJPO', ip: '10.40.0.90', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281' Driver info: driver.version: unknown 	at org.openqa.selenium.json.EnumCoercer.lambda$apply$0(EnumCoercer.java:49) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:296) 	at org.openqa.selenium.devtools.v94.network.model.ResponseReceived.fromJson(ResponseReceived.java:94) 	... 25 more ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 94  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","C-devtools,","Wojciech-Kopec","2021-12-09T11:25:20Z","2022-06-30T00:12:20Z"
"","10107","[🐛 Bug]: Selenium 4, Python: ShadowRoot find_element only works with css_selector","### What happened?  If you use any other By type than CSS_SELECTOR with a find_element on a shadow root object you get an Invalid Locator error. It seems the tests only test this function with By.CSS_SELECTOR so unsure if this is intentional.   Also the find_element on the ShadowRoot object has a different signature to all other find_element functions (it uses `using` rather than `by`), this makes it annoying if you are trying to call find_element with keyword arguments, as the keyword arguments might be different if you happen to be on a shadow root element.  The other find_element functions do a conversion of the different By types into equivalent By.CSS_SELECTORs so i am wondering if this is missing from the shadow root?  ### How can we reproduce the issue?  ```shell Change this test:  @pytest.mark.xfail_safari def test_can_find_element_in_a_shadowroot(driver, pages):     pages.load(""webComponents.html"")     custom_element = driver.find_element(By.CSS_SELECTOR, ""custom-checkbox-element"")     shadow_root = custom_element.shadow_root     element = shadow_root.find_element(By.CSS_SELECTOR, ""input"")      assert isinstance(element, WebElement)  To access the element within the shadow_root by tag name instead.  @pytest.mark.xfail_safari def test_can_find_element_in_a_shadowroot(driver, pages):     pages.load(""webComponents.html"")     custom_element = driver.find_element(By.CSS_SELECTOR, ""custom-checkbox-element"")     shadow_root = custom_element.shadow_root     element = shadow_root.find_element(By.TAG_NAME, ""input"")      assert isinstance(element, WebElement) ```   ### Relevant log output  ```shell return shadow_root.find_element(By.TAG_NAME, 'upload-button')   File ""python3.8/site-packages/selenium/webdriver/remote/shadowroot.py"", line 45, in find_element     return self._execute(Command.FIND_ELEMENT_FROM_SHADOW_ROOT, {""using"": using, ""value"": value})['value']   File ""python3.8/site-packages/selenium/webdriver/remote/shadowroot.py"", line 64, in _execute     return self.session.execute(command, params)   File ""python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 424, in execute     self.error_handler.check_response(response)   File ""python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: invalid locator   (Session info: headless chrome=96.0.4664.45) ```   ### Operating System  Ubuntu  ### Selenium version  Python Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version '96.0.4664.45'  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","NickScottKortical","2021-12-01T12:42:12Z","2022-01-06T00:07:50Z"
"","10906","[🐛 Bug]: dotnet - FindElement By Id Exception says that it is using the CssSelector and it might cause confusion when debugging.","### What happened?  If you execute a WebDriver FindElement ""By Id"" and pass an incorrect value on Chrome using ChromeDriver on Selenium 4.3.0 for dotnet, Selenium will throw an exception that reads like the text below.  `Unable to locate element: {""method"":""css selector"",""selector"":""#PassedValue""}`  This seems to be caused by the way that the By class is used, for example when you search by Id, it seems to use a CssSelectorMechanism and add a # to the argument.   I can provide code to reproduce this issue if needed.  I think this also happens when using FindElement by Name and ClassName.  ### How can we reproduce the issue?  ```shell using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using WebDriverManager; using WebDriverManager.DriverConfigs.Impl;  var url = ""https://www.google.com/"";  new DriverManager().SetUpDriver(new ChromeConfig());  var Browser = new ChromeDriver();  Browser.Navigate().GoToUrl(url); Browser.FindElement(By.Id(""feafefewaf"")); ```   ### Relevant log output  ```shell OpenQA.Selenium.NoSuchElementException: 'no such element: Unable to locate element: {""method"":""css selector"",""selector"":""#Frame_5""}   (Session info: chrome=103.0.5060.134)' ```   ### Operating System  Windows 11  ### Selenium version  .NET - Selenium 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060.134  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53  ### Are you using Selenium Grid?  _No response_","closed","","AlexWFreitas","2022-07-26T18:55:53Z","2022-07-28T23:19:25Z"
"","10351","[🐛 Bug]: CLOSED","### What happened?  If i try to locate the the element  rzrmhxbwuiteam.testinator.com in the below html code i get error: OpenQA.Selenium.StaleElementReferenceException: ""stale element reference: element is not attached to the page document   (Session info: chrome=98.0.4758.82)""  But my code is right with inspector i can locate the element by search with //div[@class='description-block']/div/p[2]/span and how you see there is NO iframe in the code.  So  why i cant get locate the element. I think there is something with that site that block it.   I realy need to get acces to this part of the HTML and need a solution maybe there is something in selenium i dont know to trick it.  I Use Chromedriver as follow:  program.options.AddArguments(""disable-blink-features=AutomationControlled""); program.driver3 = new ChromeDriver(program.options);   This is the full html code of the site                           Mailinator                           a {         color: darkblue;     }                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         Home                                                                                                                               Accessibility                                                                                      Terms                                                                                      Privacy Policy                                                                                                                               Copyright 2022 Manybrain, LLC. All Rights Reserved                                                                                                                                                                                                                                                                   Logoutmail                                                                                        Pricing                                                                                        Documentation                                                                   FAQ                                                                                        1621917affiliate123@it-ce.de                                                                                                                                                                           LOGOUT                                                                                                                                                                                                    Private Team Inbox                                                                                                               Team Settings","closed","needs-triaging,","ChristianErdtmann","2022-02-10T00:21:41Z","2022-03-13T00:09:59Z"
"","10907","[🐛 Bug]: Sessions page is white (TypeError: e is undefined) when browserName is custom value","### What happened?  If a custom value for browserName is used the sessions overview of the grid causes a javascript error and shows a white page.  (We use a custom value for the browserName to specify a specific phone on app tests)  ### How can we reproduce the issue?  relay.toml ```toml [server] port = 5555  [node] detect-drivers = false  [relay] url = ""http://localhost:4723"" status-endpoint = ""/status"" configs = [   ""1"", ""{\""browserName\"": \""Google-sargo-Pixel 3a-9BMAY1KFA3\"", \""platformName\"": \""android\"", \""version\"": \""11\""}"" ] ```  Steps: ``` 1. Start appium on port 4723 2. Wait a bit for the server to come up 3. Run hub: `java -jar selenium-server-4.3.0.jar hub` 4. Run node: `java -jar selenium-server-4.3.0.jar node --config relay.toml` 5. Create session with curl: `curl -H ""Content-Type:application/json; charset=utf-8"" -X POST http://127.0.0.1:4444/wd/hub/session -d '{""capabilities"":{""alwaysMatch"":{""platformName"":""android"",""appium:automationName"":""uautomator2""}}}'` 6. Open http://localhost:4444/ui#/sessions in a browser quickly 7. Reload until the session is shown ```   ### Relevant log output  ```shell TypeError: e is undefined     xf browser-logo.tsx:12     Sf BrowserLogo.tsx:29     React 7     k scheduler.production.min.js:13     R scheduler.production.min.js:14     8886 scheduler.production.min.js:14     Webpack 12 ```   ### Operating System  macOS  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox, Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  uiautomator2  ### Are you using Selenium Grid?  4.3.0","open","I-defect,","mythsunwind","2022-07-27T09:05:19Z","2022-08-03T21:27:04Z"
"","10827","[🐛 Bug]: Using Selenium 3.141.59 Version not able to launch Edge browser by configuring Edge for IE instance in selenium java code","### What happened?  IE mode on Edge browser.  with reference to below doc, tried with selenium version 3.141.59 but fail to call Edge browser.  https://github.com/yasin-codoid/QA-Testing/tree/LaunchEdgeBrowser-IEMode   ### How can we reproduce the issue?  ```shell Code to reproduce the issue   System.setProperty(""webdriver.ie.driver"", );     InternetExplorerOptions edgeIe11Options = new InternetExplorerOptions();     Map ops = (Map) edgeIe11Options.getCapability(""se:ieOptions"");     ops.put(""ie.edgechromium"", true);     ops.put(""ie.edgepath"", ""msedge.exe"");     // Edge Browser directory path      edgeIe11Options.introduceFlakinessByIgnoringSecurityDomains();     edgeIe11Options.ignoreZoomSettings();     edgeIe11Options.enablePersistentHovering();     edgeIe11Options.takeFullPageScreenshot();     edgeIe11Options.disableNativeEvents();     edgeIe11Options.requireWindowFocus();     edgeIe11Options.destructivelyEnsureCleanSession();      edgeIe11Options.setCapability(""ignoreProtectedModeSettings"", true);     edgeIe11Options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.IGNORE);      WebDriver driver;     driver = new InternetExplorerDriver(edgeIe11Options);     wait = new WebDriverWait(driver, 25);     driver.get(""https://github.com/"");     driver.close(); ```   ### Relevant log output  ```shell Using the above code, still IE browser gets invoked.  but when tried calling browser using command prompt edge browser gets invoked.  ""C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"" --new-window --ie-mode-file-url ""www.google.com"" ```   ### Operating System  Windows 10  ### Selenium version  Selenium 3.141.59 Version  ### What are the browser(s) and version(s) where you see this issue?  Ms Edge - Version 102.0.1245.39, IE version - version 21H2(OS Build 19044.1706)  ### What are the browser driver(s) and version(s) where you see this issue?  Browser Driver version: IEDriverServer 3.14.0  ### Are you using Selenium Grid?  No","closed","","sachinj256","2022-06-29T06:23:04Z","2022-07-06T14:11:59Z"
"","10404","[🐛 Bug]: Hub hangs with ""Unable to find session"" after a while","### What happened?  I've set up a Hub and 2 Nodes on three different Ubuntu servers. The Hub is on Ubuntu 16.04.7 LTS and the two nodes on Ubuntu 20.04.4 LTS. Selenium is driven by a Java program using standard libraries.  All works fine for a while (an hour or so), then suddenly the Hub stops responding. The symptoms are:  - when connecting to `http://myhub:4444/ui/index.html` I get the normal ""Selenium Grid"" page but it is stuck on the ""Loading..."" message - the hub output shows many messages containing this:   ``` ""exception.message"": ""Unable to execute request for an existing session: Unable to find session with ID: 98d1a9efa8b787398b29c2d6c5f2ddab Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'controller', ip: 'xx.xx.xx.xx', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-210-generic', java.version: '1.8.0_292' Driver info: driver.version: unknown"" ``` - the java program gets the exception shown in the ""Relevant log output"" box.    If I restart the Hub, all goes back to normal: I don't have to restart either the nodes or the Java program.  Command to start the hub:  ``` java -jar selenium-server-4.1.2.jar hub --config hub.toml ```  Content of hub.toml:  ``` [server] port = 4444 registration-secret = ""xxxxxx"" [sessionqueue] session-request-timeout = 300 ```  Command to start the node:  ``` java -jar selenium-server-4.1.2.jar node --config node.toml ```  Content of node.toml:  ``` [server] port = 5555 registration-secret = ""xxxxxx"" [node] hub = ""xx.xx.xx.xx"" override-max-sessions = true max-sessions = 8 session-timeout = 60 detect-drivers = false [[node.driver-configuration]] display-name = ""Chrome Latest"" stereotype = ""{\""browserName\"": \""chrome\""}"" webdriver-executable = '/mypath/chromedriver' ```  Output of top (last line is the hub):  ``` top - 15:11:10 up 22:00,  3 users,  load average: 0.20, 0.23, 0.19 Tasks: 208 total,   1 running, 207 sleeping,   0 stopped,   0 zombie %Cpu(s): 12.5 us,  1.2 sy,  0.0 ni, 82.3 id,  0.2 wa,  0.0 hi,  1.7 si,  2.2 st KiB Mem :  8175040 total,  1773696 free,  3951596 used,  2449748 buff/cache KiB Swap:  8388604 total,  8348196 free,    40408 used.  3875604 avail Mem    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND   908 tomcat8   20   0 4055844 1.196g  17808 S  21.9 15.3 115:44.34 java  1183 mysql     20   0 1670676 528960  15472 S   2.3  6.5  25:39.78 mysqld 15065 root      20   0 4685516 346108  19128 S   2.0  4.2  11:59.94 java ```  If I restart just the hub, all goes back to normal: nodes register and I see the queue growing in the Selenium Grid web console.      ### How can we reproduce the issue?  ```shell I know you need to reproduce the problem but I can't share my whole application: it's not just a script and it needs a lot of work to be set up (tomcat, mysql, user data etc.) ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'controller', ip: 'xx.xx.xx.xx', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-210-generic', java.version: '1.8.0_292' Driver info: net.yadaframework.selenium.YadaSeleniumUtil$1 Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [user-data-dir=/srv/xxx/..., user-agent=Mozilla/5.0 (Win...], extensions: []}, proxy: {httpProxy: yy.yy.yy.yy:9092, proxyType: manual, sslProxy: yy.yy.yy.yy:9092}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [user-data-dir=/srv/xxx/..., user-agent=Mozilla/5.0 (Win...], extensions: []}, proxy: Proxy(manual, http=yy.yy.yy...}}] Capabilities {}         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:161)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143)         at net...         at com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:131)         at com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:74)         at com.google.common.util.concurrent.TrustedListenableFutureTask.run(TrustedListenableFutureTask.java:82)         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)         at java.lang.Thread.run(Thread.java:748) Caused by: java.io.UncheckedIOException: java.io.IOException: Stream closed         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80)         at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80)         at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48)         at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)         at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)         at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)         at net.jodah.failsafe.Execution.executeSync(Execution.java:128)         at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379)         at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68)         at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80)         at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)         at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51)         at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80)         at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48)         at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)         at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)         at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66)         at net.jodah.failsafe.Execution.executeSync(Execution.java:128)         at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379)         at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68)         at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80)         at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)         at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)         at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:110)         at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)         at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)         at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)         ... 17 common frames omitted Caused by: java.io.IOException: Stream closed         at java.io.BufferedInputStream.getInIfOpen(BufferedInputStream.java:159)         at java.io.BufferedInputStream.available(BufferedInputStream.java:410)         at java.io.FilterInputStream.available(FilterInputStream.java:168)         at java.io.PushbackInputStream.available(PushbackInputStream.java:277)         at io.netty.handler.stream.ChunkedStream.isEndOfInput(ChunkedStream.java:82)         at io.netty.handler.stream.ChunkedStream.readChunk(ChunkedStream.java:109)         at io.netty.handler.stream.ChunkedStream.readChunk(ChunkedStream.java:36)         at io.netty.handler.stream.ChunkedWriteHandler.doFlush(ChunkedWriteHandler.java:229)         at io.netty.handler.stream.ChunkedWriteHandler.flush(ChunkedWriteHandler.java:131)         at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)         at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765)         at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:790)         at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:758)         at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1020)         at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:311)         at org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(NettyInputStreamBody.java:77)         at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:433)         at org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(NettyConnectListener.java:80)         at org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(NettyConnectListener.java:156)         at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onSuccess(NettyChannelConnector.java:92)         at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:26)         at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20)         at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)         at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)         at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)         at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)         at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)         at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)         at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)         at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84)         at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:300)         at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:335)         at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710)         at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658)         at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584)         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496)         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)         at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)         ... 1 common frames omitted ```   ### Operating System  Ubuntu 16.04.7 LTS  ### Selenium version  Java 1.8.0_292, Selenium 4.1.2.  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.102  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.80  ### Are you using Selenium Grid?  4.1.2","closed","I-defect,","xtianus","2022-02-28T14:29:27Z","2022-05-08T00:11:21Z"
"","10757","[🐛 Bug]: Unable to cast object String to Boolean in WebElement.Displayed","### What happened?  I've observed this issue only a few times but gave it a shot with the investigation. I've tracked it to  https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/src/webdriver/WebElement.cs#L188  Not sure what cames here, as it's almost impossible to reproduce, but pretty clearly there could come kind of exception or another kind of unexpected message and cast fails, so I recommend changing this part of the code to something like: var res = bool.TryParse(commandResponse.Value, out bool result); return res ? result : false;  ### How can we reproduce the issue?  ```shell Observed in ~1/100000 cases so there is no simple way to do this. Code used when observed: new WebDriverWait(driver, new TimeSpan(0, 0, 30)).Until(ExpectedConditions.ElementIsVisible(by)); The checked element is a button in the dropdown menu which might be caught in a kind of ""construction"" state so it's possible that called js doesn't exist and returns an 'undefined' result. ```   ### Relevant log output  ```shell System.InvalidCastException : Unable to cast object of type 'System.String' to type 'System.Boolean'.  --InvalidCastException    at OpenQA.Selenium.WebElement.get_Displayed()    at SeleniumExtras.WaitHelpers.ExpectedConditions.c__DisplayClass20_0.b__0(IWebDriver driver)    at OpenQA.Selenium.Support.UI.DefaultWait`1.Until[TResult](Func`2 condition, CancellationToken token)    at OpenQA.Selenium.Support.UI.DefaultWait`1.Until[TResult](Func`2 condition) ```   ### Operating System  Azure devops  ### Selenium version  C# 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.63  ### What are the browser driver(s) and version(s) where you see this issue?  101.0.4951.4100  ### Are you using Selenium Grid?  4.1.4","open","I-defect,","ParanoikCZE","2022-06-10T10:56:22Z","2022-06-10T12:24:03Z"
"","10515","[🐛 Bug]: Node not registering  on Hub for non Dockerised grid 4 on windows 10","### What happened?  I've created a local setup for Grid 4 in my windows 10 machine,  Using Grid 4, I am able to create Grid 4 as Standalone and can see the result as below:  ![image](https://user-images.githubusercontent.com/5030158/161896725-958734ab-28d6-46f0-a8ad-4bb3f56e18eb.png)  I can get the result as below  ![image](https://user-images.githubusercontent.com/5030158/161896917-038ec831-a0b0-4f10-b961-85f3ba27bff0.png)  But when I try to create Grid in classic way i.e. Hub and Nodes, both are in same machine, hub and node are getting created but node are not registering to hub. Below is the command to create Hub: ![image](https://user-images.githubusercontent.com/5030158/161897462-4a569b3c-b7d8-42c4-a1bf-190868c685e0.png) Hub get created successfully and listening on port 4444.  Below is the command to create node: ![image](https://user-images.githubusercontent.com/5030158/161897596-8a440c3f-42ff-4da9-87bd-ae4e56abb24b.png) Node also get created but failing when sending the request to Hub for registration.  And the result on UI is: ![image](https://user-images.githubusercontent.com/5030158/161897772-0ed80bd0-58d9-489c-b9aa-6ff56b88ee76.png)  I tried with various CLI options to create hub and node like --host localhost or --host 127.0.0.1, but no luck.  I tried open ports in my systems but no luck,   ### How can we reproduce the issue?  ```shell In Windows 10 machine, have selenium jar and chrome driver in same folder and run the cli command from command prompt. selenium-server-4.1.2 ChromeDriver 100.0.4896.60 ```   ### Relevant log output  ```shell Node logs with log level FINEST::::  Microsoft Windows [Version 10.0.19044.1586] (c) Microsoft Corporation. All rights reserved.  C:\Users\admin\Desktop\Webomates\Selenium_Upgradation\New folder>java -jar selenium-server-4.1.2.jar node --hub 192.168.29.69 --log-level FINEST 10:37:16.265 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:37:16.270 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:37:16.362 DEBUG [AutoConfiguredOpenTelemetrySdkBuilder.build] - Global OpenTelemetrySdk set to OpenTelemetrySdk{tracerProvider=SdkTracerProvider{clock=SystemClock{}, idGenerator=RandomIdGenerator{}, resource=Resource{schemaUrl=https://opentelemetry.io/schemas/1.8.0, attributes={service.name=""unknown_service:java"", telemetry.sdk.language=""java"", telemetry.sdk.name=""opentelemetry"", telemetry.sdk.version=""1.10.1""}}, spanLimitsSupplier=SpanLimitsValue{maxNumberOfAttributes=128, maxNumberOfEvents=128, maxNumberOfLinks=128, maxNumberOfAttributesPerEvent=128, maxNumberOfAttributesPerLink=128, maxAttributeValueLength=2147483647}, sampler=ParentBased{root:AlwaysOnSampler,remoteParentSampled:AlwaysOnSampler,remoteParentNotSampled:AlwaysOffSampler,localParentSampled:AlwaysOnSampler,localParentNotSampled:AlwaysOffSampler}, spanProcessor=SimpleSpanProcessor{spanExporter=org.openqa.selenium.remote.tracing.opentelemetry.SeleniumSpanExporter$1@5a8806ef}}} by autoconfiguration 10:37:16.759 INFO [UnboundZmqEventBus.] - Connecting to tcp://192.168.29.69:4442 and tcp://192.168.29.69:4443 10:37:16.837 INFO [UnboundZmqEventBus.] - Sockets created 10:37:17.853 INFO [UnboundZmqEventBus.] - Event bus ready 10:37:17.890 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = JMImplementation:type=MBeanServerDelegate 10:37:17.903 FINER [Repository.addMBean] - name = JMImplementation:type=MBeanServerDelegate 10:37:17.904 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object JMImplementation:type=MBeanServerDelegate 10:37:17.906 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered JMImplementation:type=MBeanServerDelegate 10:37:17.917 FINER [Repository.contains] -  name = java.lang:type=ClassLoading 10:37:17.930 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.ClassLoadingImpl 10:37:17.930 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=ClassLoading 10:37:17.931 FINER [Repository.addMBean] - name = java.lang:type=ClassLoading 10:37:17.931 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:type=ClassLoading 10:37:17.932 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=ClassLoading 10:37:17.932 FINER [Repository.contains] -  name = java.lang:type=Compilation 10:37:17.933 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.CompilationImpl 10:37:17.933 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=Compilation 10:37:17.933 FINER [Repository.addMBean] - name = java.lang:type=Compilation 10:37:17.933 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:type=Compilation 10:37:17.934 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=Compilation 10:37:17.934 FINER [Repository.contains] -  name = java.lang:type=Memory 10:37:17.936 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryImpl 10:37:17.936 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=Memory 10:37:17.937 FINER [Repository.addMBean] - name = java.lang:type=Memory 10:37:17.937 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:type=Memory 10:37:17.937 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=Memory 10:37:17.938 FINER [Repository.contains] -  name = java.lang:type=GarbageCollector,name=PS Scavenge 10:37:17.942 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.GarbageCollectorImpl 10:37:17.942 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=GarbageCollector,name=PS Scavenge 10:37:17.942 FINER [Repository.addMBean] - name = java.lang:type=GarbageCollector,name=PS Scavenge 10:37:17.942 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=PS Scavenge,type=GarbageCollector 10:37:17.943 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=GarbageCollector,name=PS Scavenge 10:37:17.943 FINER [Repository.contains] -  name = java.lang:type=GarbageCollector,name=PS MarkSweep 10:37:17.943 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.GarbageCollectorImpl 10:37:17.944 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=GarbageCollector,name=PS MarkSweep 10:37:17.944 FINER [Repository.addMBean] - name = java.lang:type=GarbageCollector,name=PS MarkSweep 10:37:17.945 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=PS MarkSweep,type=GarbageCollector 10:37:17.945 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=GarbageCollector,name=PS MarkSweep 10:37:17.946 FINER [Repository.contains] -  name = java.lang:type=MemoryManager,name=CodeCacheManager 10:37:17.946 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryManagerImpl 10:37:17.950 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryManager,name=CodeCacheManager 10:37:17.953 FINER [Repository.addMBean] - name = java.lang:type=MemoryManager,name=CodeCacheManager 10:37:17.954 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=CodeCacheManager,type=MemoryManager 10:37:17.954 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryManager,name=CodeCacheManager 10:37:17.955 FINER [Repository.contains] -  name = java.lang:type=MemoryManager,name=Metaspace Manager 10:37:17.955 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryManagerImpl 10:37:17.956 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryManager,name=Metaspace Manager 10:37:17.956 FINER [Repository.addMBean] - name = java.lang:type=MemoryManager,name=Metaspace Manager 10:37:17.957 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=Metaspace Manager,type=MemoryManager 10:37:17.957 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryManager,name=Metaspace Manager 10:37:17.958 FINER [Repository.contains] -  name = java.lang:type=GarbageCollector,name=PS Scavenge 10:37:17.958 FINER [Repository.contains] -  name = java.lang:type=GarbageCollector,name=PS MarkSweep 10:37:17.960 FINER [Repository.contains] -  name = java.lang:type=MemoryPool,name=Code Cache 10:37:17.962 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryPoolImpl 10:37:17.962 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryPool,name=Code Cache 10:37:17.962 FINER [Repository.addMBean] - name = java.lang:type=MemoryPool,name=Code Cache 10:37:17.965 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=Code Cache,type=MemoryPool 10:37:17.967 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryPool,name=Code Cache 10:37:17.967 FINER [Repository.contains] -  name = java.lang:type=MemoryPool,name=Metaspace 10:37:17.968 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryPoolImpl 10:37:17.969 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryPool,name=Metaspace 10:37:17.969 FINER [Repository.addMBean] - name = java.lang:type=MemoryPool,name=Metaspace 10:37:17.970 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=Metaspace,type=MemoryPool 10:37:17.970 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryPool,name=Metaspace 10:37:17.971 FINER [Repository.contains] -  name = java.lang:type=MemoryPool,name=Compressed Class Space 10:37:17.972 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryPoolImpl 10:37:17.973 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryPool,name=Compressed Class Space 10:37:17.973 FINER [Repository.addMBean] - name = java.lang:type=MemoryPool,name=Compressed Class Space 10:37:17.974 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=Compressed Class Space,type=MemoryPool 10:37:17.975 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryPool,name=Compressed Class Space 10:37:17.976 FINER [Repository.contains] -  name = java.lang:type=MemoryPool,name=PS Eden Space 10:37:17.976 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryPoolImpl 10:37:17.977 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryPool,name=PS Eden Space 10:37:17.981 FINER [Repository.addMBean] - name = java.lang:type=MemoryPool,name=PS Eden Space 10:37:17.983 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=PS Eden Space,type=MemoryPool 10:37:17.984 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryPool,name=PS Eden Space 10:37:17.985 FINER [Repository.contains] -  name = java.lang:type=MemoryPool,name=PS Survivor Space 10:37:17.986 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryPoolImpl 10:37:17.986 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryPool,name=PS Survivor Space 10:37:17.987 FINER [Repository.addMBean] - name = java.lang:type=MemoryPool,name=PS Survivor Space 10:37:17.987 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=PS Survivor Space,type=MemoryPool 10:37:17.988 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryPool,name=PS Survivor Space 10:37:17.988 FINER [Repository.contains] -  name = java.lang:type=MemoryPool,name=PS Old Gen 10:37:17.989 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.MemoryPoolImpl 10:37:17.989 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=MemoryPool,name=PS Old Gen 10:37:17.990 FINER [Repository.addMBean] - name = java.lang:type=MemoryPool,name=PS Old Gen 10:37:17.990 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:name=PS Old Gen,type=MemoryPool 10:37:17.991 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=MemoryPool,name=PS Old Gen 10:37:17.992 FINER [Repository.contains] -  name = java.lang:type=OperatingSystem 10:37:17.996 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.OperatingSystemImpl 10:37:17.997 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=OperatingSystem 10:37:17.998 FINER [Repository.addMBean] - name = java.lang:type=OperatingSystem 10:37:17.998 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:type=OperatingSystem 10:37:17.999 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=OperatingSystem 10:37:18.000 FINER [Repository.contains] -  name = java.lang:type=Runtime 10:37:18.002 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.RuntimeImpl 10:37:18.003 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=Runtime 10:37:18.003 FINER [Repository.addMBean] - name = java.lang:type=Runtime 10:37:18.004 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:type=Runtime 10:37:18.004 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=Runtime 10:37:18.006 FINER [Repository.contains] -  name = java.lang:type=Threading 10:37:18.013 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.ThreadImpl 10:37:18.013 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.lang:type=Threading 10:37:18.014 FINER [Repository.addMBean] - name = java.lang:type=Threading 10:37:18.014 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.lang:type=Threading 10:37:18.015 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.lang:type=Threading 10:37:18.016 FINER [Repository.contains] -  name = java.util.logging:type=Logging 10:37:18.018 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.ManagementFactoryHelper$PlatformLoggingImpl 10:37:18.019 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.util.logging:type=Logging 10:37:18.019 FINER [Repository.addMBean] - name = java.util.logging:type=Logging 10:37:18.020 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.util.logging:type=Logging 10:37:18.020 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.util.logging:type=Logging 10:37:18.022 FINER [Repository.contains] -  name = java.nio:type=BufferPool,name=direct 10:37:18.023 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.ManagementFactoryHelper$1 10:37:18.023 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.nio:type=BufferPool,name=direct 10:37:18.024 FINER [Repository.addMBean] - name = java.nio:type=BufferPool,name=direct 10:37:18.026 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.nio:name=direct,type=BufferPool 10:37:18.029 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.nio:type=BufferPool,name=direct 10:37:18.029 FINER [Repository.contains] -  name = java.nio:type=BufferPool,name=mapped 10:37:18.030 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.ManagementFactoryHelper$1 10:37:18.031 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = java.nio:type=BufferPool,name=mapped 10:37:18.031 FINER [Repository.addMBean] - name = java.nio:type=BufferPool,name=mapped 10:37:18.032 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object java.nio:name=mapped,type=BufferPool 10:37:18.033 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered java.nio:type=BufferPool,name=mapped 10:37:18.034 FINER [Repository.contains] -  name = java.lang:type=GarbageCollector,name=PS Scavenge 10:37:18.034 FINER [Repository.contains] -  name = java.lang:type=GarbageCollector,name=PS MarkSweep 10:37:18.035 FINER [Repository.contains] -  name = java.lang:type=OperatingSystem 10:37:18.036 FINER [Repository.contains] -  name = com.sun.management:type=HotSpotDiagnostic 10:37:18.038 FINER [MBeanServerFactory.getMBeanInfo] - Building MBeanInfo for sun.management.HotSpotDiagnostic 10:37:18.038 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = com.sun.management:type=HotSpotDiagnostic 10:37:18.038 FINER [Repository.addMBean] - name = com.sun.management:type=HotSpotDiagnostic 10:37:18.039 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object com.sun.management:type=HotSpotDiagnostic 10:37:18.039 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered com.sun.management:type=HotSpotDiagnostic 10:37:18.045 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = com.sun.management:type=DiagnosticCommand 10:37:18.046 FINER [Repository.addMBean] - name = com.sun.management:type=DiagnosticCommand 10:37:18.047 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object com.sun.management:type=DiagnosticCommand 10:37:18.047 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered com.sun.management:type=DiagnosticCommand 10:37:18.065 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:18.065 FINER [Repository.addMBean] - name = org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:18.066 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object org.seleniumhq.grid:name=BaseServerConfig,type=Config 10:37:18.068 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:18.821 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.29.69:5555 10:37:18.826 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:18.826 FINER [Repository.addMBean] - name = org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:19.364 INFO [NodeOptions.getSessionFactories] - Detected 4 available processors 10:37:19.410 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 10:37:19.451 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 4 times 10:37:19.455 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 4 times 10:37:19.475 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 10:37:19.532 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = org.seleniumhq.grid:type=Node,name=LocalNode 10:37:19.532 FINER [Repository.addMBean] - name = org.seleniumhq.grid:type=Node,name=LocalNode 10:37:19.534 FINER [DefaultMBeanServerInterceptor.addObject] - Send create notification of object org.seleniumhq.grid:name=LocalNode,type=Node 10:37:19.537 FINER [DefaultMBeanServerInterceptor.sendNotification] - JMX.mbean.registered org.seleniumhq.grid:type=Node,name=LocalNode 10:37:19.552 FINER [DefaultMBeanServerInterceptor.registerMBean] - ObjectName = org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:19.553 FINER [Repository.addMBean] - name = org.seleniumhq.grid:type=Config,name=BaseServerConfig 10:37:19.572 DEBUG [MultithreadEventLoopGroup.] - -Dio.netty.eventLoopThreads: 8 10:37:19.591 DEBUG [InternalThreadLocalMap.] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 10:37:19.591 DEBUG [InternalThreadLocalMap.] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 10:37:19.614 DEBUG [PlatformDependent0.explicitNoUnsafeCause0] - -Dio.netty.noUnsafe: false 10:37:19.615 DEBUG [PlatformDependent0.javaVersion0] - Java version: 8 10:37:19.618 DEBUG [PlatformDependent0.] - sun.misc.Unsafe.theUnsafe: available 10:37:19.620 DEBUG [PlatformDependent0.] - sun.misc.Unsafe.copyMemory: available 10:37:19.621 DEBUG [PlatformDependent0.] - java.nio.Buffer.address: available 10:37:19.622 DEBUG [PlatformDependent0.] - direct buffer constructor: available 10:37:19.623 DEBUG [PlatformDependent0.] - java.nio.Bits.unaligned: available, true 10:37:19.624 DEBUG [PlatformDependent0.] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9 10:37:19.625 DEBUG [PlatformDependent0.] - java.nio.DirectByteBuffer.(long, int): available 10:37:19.625 DEBUG [PlatformDependent.unsafeUnavailabilityCause0] - sun.misc.Unsafe: available 10:37:19.627 DEBUG [PlatformDependent.tmpdir0] - -Dio.netty.tmpdir: C:\Users\admin\AppData\Local\Temp (java.io.tmpdir) 10:37:19.627 DEBUG [PlatformDependent.bitMode0] - -Dio.netty.bitMode: 64 (sun.arch.data.model) 10:37:19.628 DEBUG [PlatformDependent.isWindows0] - Platform: Windows 10:37:19.633 DEBUG [PlatformDependent.] - -Dio.netty.maxDirectMemory: 3719299072 bytes 10:37:19.633 DEBUG [PlatformDependent.] - -Dio.netty.uninitializedArrayAllocationThreshold: -1 10:37:19.635 DEBUG [CleanerJava6.] - java.nio.ByteBuffer.cleaner(): available 10:37:19.635 DEBUG [PlatformDependent.] - -Dio.netty.noPreferDirect: false 10:37:19.636 DEBUG [NioEventLoop.] - -Dio.netty.noKeySetOptimization: false 10:37:19.637 DEBUG [NioEventLoop.] - -Dio.netty.selectorAutoRebuildThreshold: 512 10:37:19.647 DEBUG [PlatformDependent$Mpsc.] - org.jctools-core.MpscChunkedArrayQueue: available 10:37:19.652 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@6283d8b8 10:37:19.655 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@1a18644 10:37:19.656 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@5acf93bb 10:37:19.658 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@7e7be63f 10:37:19.660 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@6cd28fa7 10:37:19.662 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@614ca7df 10:37:19.664 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@4738a206 10:37:19.666 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@66d3eec0 10:37:19.667 FINEST [NioEventLoop.openSelector] - instrumented a special java.util.Set into: sun.nio.ch.WindowsSelectorImpl@1e04fa0a 10:37:20.225 DEBUG [DefaultChannelId.] - -Dio.netty.processId: 11128 (auto-detected) 10:37:20.228 DEBUG [NetUtil.] - -Djava.net.preferIPv4Stack: false 10:37:20.228 DEBUG [NetUtil.] - -Djava.net.preferIPv6Addresses: false 10:37:20.488 DEBUG [NetUtilInitializations.determineLoopback] - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1) 10:37:20.490 DEBUG [NetUtil$1.run] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200 10:37:20.761 DEBUG [DefaultChannelId.] - -Dio.netty.machineId: 84:3a:4b:ff:fe:18:5a:d2 (auto-detected) 10:37:20.773 DEBUG [ResourceLeakDetector.] - -Dio.netty.leakDetection.level: simple 10:37:20.773 DEBUG [ResourceLeakDetector.] - -Dio.netty.leakDetection.targetRecords: 4 10:37:20.802 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.numHeapArenas: 8 10:37:20.802 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.numDirectArenas: 8 10:37:20.803 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.pageSize: 8192 10:37:20.807 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxOrder: 11 10:37:20.807 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.chunkSize: 16777216 10:37:20.808 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.smallCacheSize: 256 10:37:20.808 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.normalCacheSize: 64 10:37:20.809 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768 10:37:20.810 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.cacheTrimInterval: 8192 10:37:20.810 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.cacheTrimIntervalMillis: 0 10:37:20.811 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.useCacheForAllThreads: true 10:37:20.811 DEBUG [PooledByteBufAllocator.] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 10:37:20.823 DEBUG [ByteBufUtil.] - -Dio.netty.allocator.type: pooled 10:37:20.823 DEBUG [ByteBufUtil.] - -Dio.netty.threadLocalDirectBufferSize: 0 10:37:20.824 DEBUG [ByteBufUtil.] - -Dio.netty.maxThreadLocalCharBufferSize: 16384 10:37:20.849 DEBUG [LoggingHandler.channelRegistered] - [id: 0x8fa20742] REGISTERED 10:37:20.852 DEBUG [LoggingHandler.bind] - [id: 0x8fa20742] BIND: /0.0.0.0:5555 10:37:20.856 DEBUG [LoggingHandler.channelActive] - [id: 0x8fa20742, L:/0:0:0:0:0:0:0:0:5555] ACTIVE 10:37:20.858 INFO [NodeServer$1.start] - Starting registration process for node id 2789b312-8fb9-4bfe-ab91-2b876543cb38 10:37:20.859 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://192.168.29.69:5555 10:37:20.868 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:37:30.886 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:37:40.918 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ### Operating System  Microsoft Windows [Version 10.0.19044.1586]  ### Selenium version  selenium-server-4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 100.xxxx  ### Are you using Selenium Grid?  Grid 4","closed","needs-triaging,","shailsb","2022-04-06T05:10:10Z","2022-05-08T00:11:26Z"
"","10189","[🐛 Bug]: PrintOptions don't work (simply do nothing)","### What happened?  I've been testing printing page in headless mode in Chrome browser. No matter what printing options I set up, the outcome is always the same. The priinting options do nothing.  For example when I set up PrintOptions.Orientation.LANDSCAPE the file still has portait orientation. I have removed the file before another run to make sure it's a new file.  ### How can we reproduce the issue?  ```shell import io.github.bonigarcia.wdm.WebDriverManager; import org.junit.jupiter.api.Test; import org.openqa.selenium.Pdf; import org.openqa.selenium.PrintsPage; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.print.PrintOptions;  import java.io.FileOutputStream; import java.io.IOException; import java.util.Base64;  public class PrintPageExample {      @Test     public void printPageExampleTest() throws IOException {         ChromeOptions options = new ChromeOptions();         options.addArguments(""--headless"");         WebDriverManager.chromedriver().setup();         WebDriver driver = new ChromeDriver(options);         driver.get("""");          PrintsPage printer = (PrintsPage) driver;         PrintOptions printOptions = new PrintOptions();         printOptions.setOrientation(PrintOptions.Orientation.LANDSCAPE);         Pdf pdf = printer.print(printOptions);         String content = pdf.getContent();         byte[] decoded = Base64.getDecoder().decode(content);         FileOutputStream fos = new FileOutputStream(""D:\\test.pdf"");         fos.write(decoded);         fos.flush();         fos.close();          driver.quit();     } } ```   ### Relevant log output  ```shell There is no log ```   ### Operating System  Windows 11 Pro  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45   ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","aphx07","2021-12-27T10:40:48Z","2022-01-27T00:06:50Z"
"","10003","[🐛 Bug]: about check sessions","### What happened?  i'm using macos 10.14.6. when run selenium with hub `java -Dwebdriver.chrome.driver=""chromedriver"" -jar selenium-server.jar -role hub` open http://127.0.0.1:4444/wd/hub/sessions get exception ``` {   ""sessionId"": null,   ""status"": 13,   ""value"": {     ""class"": ""org.openqa.grid.common.exception.GridException"",     ""error"": ""unknown error"",     ""message"": ""Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]"",     ""stackTrace"": [       {         ""className"": ""org.openqa.grid.internal.ActiveTestSessions"",         ""fileName"": ""ActiveTestSessions.java"",         ""lineNumber"": 120,         ""methodName"": ""getExistingSession""       },       {         ""className"": ""org.openqa.grid.internal.DefaultGridRegistry"",         ""fileName"": ""DefaultGridRegistry.java"",         ""lineNumber"": 387,         ""methodName"": ""getExistingSession""       },       {         ""className"": ""org.openqa.grid.web.servlet.handler.RequestHandler"",         ""fileName"": ""RequestHandler.java"",         ""lineNumber"": 241,         ""methodName"": ""getSession""       },       {         ""className"": ""org.openqa.grid.web.servlet.handler.RequestHandler"",         ""fileName"": ""RequestHandler.java"",         ""lineNumber"": 123,         ""methodName"": ""process""       },       {         ""className"": ""org.openqa.grid.web.servlet.DriverServlet"",         ""fileName"": ""DriverServlet.java"",         ""lineNumber"": 85,         ""methodName"": ""process""       },       {         ""className"": ""org.openqa.grid.web.servlet.DriverServlet"",         ""fileName"": ""DriverServlet.java"",         ""lineNumber"": 63,         ""methodName"": ""doGet""       },       {         ""className"": ""javax.servlet.http.HttpServlet"",         ""fileName"": ""HttpServlet.java"",         ""lineNumber"": 687,         ""methodName"": ""service""       },       {         ""className"": ""javax.servlet.http.HttpServlet"",         ""fileName"": ""HttpServlet.java"",         ""lineNumber"": 790,         ""methodName"": ""service""       },       {         ""className"": ""org.seleniumhq.jetty9.servlet.ServletHolder"",         ""fileName"": ""ServletHolder.java"",         ""lineNumber"": 865,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.servlet.ServletHandler"",         ""fileName"": ""ServletHandler.java"",         ""lineNumber"": 535,         ""methodName"": ""doHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 146,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.security.SecurityHandler"",         ""fileName"": ""SecurityHandler.java"",         ""lineNumber"": 548,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.HandlerWrapper"",         ""fileName"": ""HandlerWrapper.java"",         ""lineNumber"": 132,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 257,         ""methodName"": ""nextHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.session.SessionHandler"",         ""fileName"": ""SessionHandler.java"",         ""lineNumber"": 1595,         ""methodName"": ""doHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 255,         ""methodName"": ""nextHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ContextHandler"",         ""fileName"": ""ContextHandler.java"",         ""lineNumber"": 1340,         ""methodName"": ""doHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 203,         ""methodName"": ""nextScope""       },       {         ""className"": ""org.seleniumhq.jetty9.servlet.ServletHandler"",         ""fileName"": ""ServletHandler.java"",         ""lineNumber"": 473,         ""methodName"": ""doScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.session.SessionHandler"",         ""fileName"": ""SessionHandler.java"",         ""lineNumber"": 1564,         ""methodName"": ""doScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 201,         ""methodName"": ""nextScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ContextHandler"",         ""fileName"": ""ContextHandler.java"",         ""lineNumber"": 1242,         ""methodName"": ""doScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 144,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.HandlerWrapper"",         ""fileName"": ""HandlerWrapper.java"",         ""lineNumber"": 132,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.Server"",         ""fileName"": ""Server.java"",         ""lineNumber"": 503,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.HttpChannel"",         ""fileName"": ""HttpChannel.java"",         ""lineNumber"": 364,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.HttpConnection"",         ""fileName"": ""HttpConnection.java"",         ""lineNumber"": 260,         ""methodName"": ""onFillable""       },       {         ""className"": ""org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback"",         ""fileName"": ""AbstractConnection.java"",         ""lineNumber"": 305,         ""methodName"": ""succeeded""       },       {         ""className"": ""org.seleniumhq.jetty9.io.FillInterest"",         ""fileName"": ""FillInterest.java"",         ""lineNumber"": 103,         ""methodName"": ""fillable""       },       {         ""className"": ""org.seleniumhq.jetty9.io.ChannelEndPoint$2"",         ""fileName"": ""ChannelEndPoint.java"",         ""lineNumber"": 118,         ""methodName"": ""run""       },       {         ""className"": ""org.seleniumhq.jetty9.util.thread.QueuedThreadPool"",         ""fileName"": ""QueuedThreadPool.java"",         ""lineNumber"": 765,         ""methodName"": ""runJob""       },       {         ""className"": ""org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2"",         ""fileName"": ""QueuedThreadPool.java"",         ""lineNumber"": 683,         ""methodName"": ""run""       },       {         ""className"": ""java.lang.Thread"",         ""fileName"": ""Thread.java"",         ""lineNumber"": 844,         ""methodName"": ""run""       }     ],     ""stacktrace"": ""org.openqa.grid.common.exception.GridException: Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]\n\tat org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:120)\n\tat org.openqa.grid.internal.DefaultGridRegistry.getExistingSession(DefaultGridRegistry.java:387)\n\tat org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:241)\n\tat org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:123)\n\tat org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)\n\tat org.openqa.grid.web.servlet.DriverServlet.doGet(DriverServlet.java:63)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:687)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\tat org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)\n\tat org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n\tat org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n\tat org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n\tat org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n\tat org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n\tat org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n\tat org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.seleniumhq.jetty9.server.Server.handle(Server.java:503)\n\tat org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)\n\tat org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)\n\tat org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\n\tat org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)\n\tat org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)\n\tat org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:844)\n""   } } ``` when run with  `java -Dwebdriver.chrome.driver=""chromedriver"" -jar selenium-server.jar` it's ok ``` {   ""status"": 0,   ""value"": [   ] } ``` tested with selenium-server-standalone-4.0.0-alpha-2.jar and selenium-server-standalone-3.1.0.jar, get same result.    ### How can we reproduce the issue?  ```shell run `java -Dwebdriver.chrome.driver=""chromedriver"" -jar selenium-server.jar -role hub` open http://127.0.0.1:4444/wd/hub/sessions ```   ### Relevant log output  ```shell {   ""sessionId"": null,   ""status"": 13,   ""value"": {     ""class"": ""org.openqa.grid.common.exception.GridException"",     ""error"": ""unknown error"",     ""message"": ""Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]"",     ""stackTrace"": [       {         ""className"": ""org.openqa.grid.internal.ActiveTestSessions"",         ""fileName"": ""ActiveTestSessions.java"",         ""lineNumber"": 120,         ""methodName"": ""getExistingSession""       },       {         ""className"": ""org.openqa.grid.internal.DefaultGridRegistry"",         ""fileName"": ""DefaultGridRegistry.java"",         ""lineNumber"": 387,         ""methodName"": ""getExistingSession""       },       {         ""className"": ""org.openqa.grid.web.servlet.handler.RequestHandler"",         ""fileName"": ""RequestHandler.java"",         ""lineNumber"": 241,         ""methodName"": ""getSession""       },       {         ""className"": ""org.openqa.grid.web.servlet.handler.RequestHandler"",         ""fileName"": ""RequestHandler.java"",         ""lineNumber"": 123,         ""methodName"": ""process""       },       {         ""className"": ""org.openqa.grid.web.servlet.DriverServlet"",         ""fileName"": ""DriverServlet.java"",         ""lineNumber"": 85,         ""methodName"": ""process""       },       {         ""className"": ""org.openqa.grid.web.servlet.DriverServlet"",         ""fileName"": ""DriverServlet.java"",         ""lineNumber"": 63,         ""methodName"": ""doGet""       },       {         ""className"": ""javax.servlet.http.HttpServlet"",         ""fileName"": ""HttpServlet.java"",         ""lineNumber"": 687,         ""methodName"": ""service""       },       {         ""className"": ""javax.servlet.http.HttpServlet"",         ""fileName"": ""HttpServlet.java"",         ""lineNumber"": 790,         ""methodName"": ""service""       },       {         ""className"": ""org.seleniumhq.jetty9.servlet.ServletHolder"",         ""fileName"": ""ServletHolder.java"",         ""lineNumber"": 865,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.servlet.ServletHandler"",         ""fileName"": ""ServletHandler.java"",         ""lineNumber"": 535,         ""methodName"": ""doHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 146,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.security.SecurityHandler"",         ""fileName"": ""SecurityHandler.java"",         ""lineNumber"": 548,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.HandlerWrapper"",         ""fileName"": ""HandlerWrapper.java"",         ""lineNumber"": 132,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 257,         ""methodName"": ""nextHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.session.SessionHandler"",         ""fileName"": ""SessionHandler.java"",         ""lineNumber"": 1595,         ""methodName"": ""doHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 255,         ""methodName"": ""nextHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ContextHandler"",         ""fileName"": ""ContextHandler.java"",         ""lineNumber"": 1340,         ""methodName"": ""doHandle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 203,         ""methodName"": ""nextScope""       },       {         ""className"": ""org.seleniumhq.jetty9.servlet.ServletHandler"",         ""fileName"": ""ServletHandler.java"",         ""lineNumber"": 473,         ""methodName"": ""doScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.session.SessionHandler"",         ""fileName"": ""SessionHandler.java"",         ""lineNumber"": 1564,         ""methodName"": ""doScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 201,         ""methodName"": ""nextScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ContextHandler"",         ""fileName"": ""ContextHandler.java"",         ""lineNumber"": 1242,         ""methodName"": ""doScope""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",         ""fileName"": ""ScopedHandler.java"",         ""lineNumber"": 144,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.handler.HandlerWrapper"",         ""fileName"": ""HandlerWrapper.java"",         ""lineNumber"": 132,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.Server"",         ""fileName"": ""Server.java"",         ""lineNumber"": 503,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.HttpChannel"",         ""fileName"": ""HttpChannel.java"",         ""lineNumber"": 364,         ""methodName"": ""handle""       },       {         ""className"": ""org.seleniumhq.jetty9.server.HttpConnection"",         ""fileName"": ""HttpConnection.java"",         ""lineNumber"": 260,         ""methodName"": ""onFillable""       },       {         ""className"": ""org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback"",         ""fileName"": ""AbstractConnection.java"",         ""lineNumber"": 305,         ""methodName"": ""succeeded""       },       {         ""className"": ""org.seleniumhq.jetty9.io.FillInterest"",         ""fileName"": ""FillInterest.java"",         ""lineNumber"": 103,         ""methodName"": ""fillable""       },       {         ""className"": ""org.seleniumhq.jetty9.io.ChannelEndPoint$2"",         ""fileName"": ""ChannelEndPoint.java"",         ""lineNumber"": 118,         ""methodName"": ""run""       },       {         ""className"": ""org.seleniumhq.jetty9.util.thread.QueuedThreadPool"",         ""fileName"": ""QueuedThreadPool.java"",         ""lineNumber"": 765,         ""methodName"": ""runJob""       },       {         ""className"": ""org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2"",         ""fileName"": ""QueuedThreadPool.java"",         ""lineNumber"": 683,         ""methodName"": ""run""       },       {         ""className"": ""java.lang.Thread"",         ""fileName"": ""Thread.java"",         ""lineNumber"": 844,         ""methodName"": ""run""       }     ],     ""stacktrace"": ""org.openqa.grid.common.exception.GridException: Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]\n\tat org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:120)\n\tat org.openqa.grid.internal.DefaultGridRegistry.getExistingSession(DefaultGridRegistry.java:387)\n\tat org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:241)\n\tat org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:123)\n\tat org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:85)\n\tat org.openqa.grid.web.servlet.DriverServlet.doGet(DriverServlet.java:63)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:687)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\tat org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865)\n\tat org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n\tat org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n\tat org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n\tat org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n\tat org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n\tat org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n\tat org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.seleniumhq.jetty9.server.Server.handle(Server.java:503)\n\tat org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364)\n\tat org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260)\n\tat org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\n\tat org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103)\n\tat org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)\n\tat org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:844)\n""   } } ``` ```   ### Operating System  macos 10.14.6  ### Selenium version  selenium-server-standalone-3.1.0.jar  ### What are the browser(s) and version(s) where you see this issue?  chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 95.0.4638.17  ### Are you using Selenium Grid?  3","closed","needs-triaging,","kestrelbright","2021-11-01T13:56:39Z","2021-12-03T00:06:55Z"
"","10505","[🐛 Bug]: Headless ignores guest/incognito option","### What happened?  I'm using ASP.NET Core 5 (also tried with 6) with Selenium 4.1. When I run my code regularly, it works fine, but when I set it to headless, I don't think any of the options work including the Guest, inPrivate, or incognito mode because I keep getting 2FA prompts as if it is logging in with my cached credentials.  Here are my options with EdgeDriver:  ``` var options = new EdgeOptions(); options.AddArgument(""-guest""); options.AddArgument(""disable-gpu""); options.AddArgument(""headless"");  using (var driver = new EdgeDriver(DRIVERS_PATH, options)) {    driver.Manage().Window.Maximize();    driver.Manage().Cookies.DeleteAllCookies();     var wait = new WebDriverWait(driver, TimeSpan.FromSeconds(45));     driver.Navigate().GoToUrl(recordUrl);    // get a 2FA prompt here  } ``` Or when using ChromeOptions  ``` var options = new ChromeOptions();             options.AddArguments(""--headless"");             options.AddArguments(""--window-size=1920,1080"");             options.AddArguments(""--disable-gpu"");             options.AddArguments(""--disable-extensions"");             options.AddArguments(""--proxy-server='direct://'"");             options.AddArguments(""--proxy-bypass-list=*"");             options.AddArguments(""--start-maximized"");             options.AddArguments(""--no-first-run"");             options.AddArguments(""--no-default-browser-check"");             options.AddArguments(""--ignore-certificate-errors"");             options.AddArguments(""--test-type"");             options.AddArguments(""--user-agent=\""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36\"""");             //options.AddArguments(""--guest"");             options.AddArguments(""--incognito""); ```  I'm trying to connect to D365. I've test connecting to SharePoint with the same result.   ### How can we reproduce the issue?  ```shell var options = new EdgeOptions(); options.AddArgument(""-guest""); options.AddArgument(""disable-gpu""); options.AddArgument(""headless"");  using (var driver = new EdgeDriver(DRIVERS_PATH, options)) {    driver.Manage().Window.Maximize();    driver.Manage().Cookies.DeleteAllCookies();     var wait = new WebDriverWait(driver, TimeSpan.FromSeconds(45));     driver.Navigate().GoToUrl(recordUrl);    // get a 2FA prompt here  } ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Windows 10 Enterprise  ### Selenium version  C# version 4.1  ### What are the browser(s) and version(s) where you see this issue?  Microsoft Edge Version 99.0.1150.55 (Official build) (64-bit), Google Chrome Version 99.0.4844.84 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver 99.0.1153.0 x64 and x86  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","michael-kubala","2022-04-01T20:41:11Z","2022-05-05T00:11:07Z"
"","10017","[🐛 Bug]: [Ruby][C#] Exception when using wss protocol in se:cdp","### What happened?  I'm using a WebSocket proxy between Selenium Jar and client script for the BiDi connection. When I use `ws` protocol, i.e. `""se:cdp"": ""ws:///session//se/cdp""`, the [example script](https://www.selenium.dev/documentation/webdriver/bidi_apis/#listen-to-consolelog-events) works as expected. However, if I use `wss` protocol, i.e. `""se:cdp"": ""wss:///session//se/cdp""`, I get a runtime exception. This happens with ruby  and C# client only. It works fine Java client.  ### How can we reproduce the issue?  ```shell require 'selenium-webdriver'  def run_session(caps)   driver = Selenium::WebDriver.for(:remote,   :url => """",   :capabilities => caps)   begin     driver.get 'http://www.google.com'     logs = []     driver.on_log_event(:console) do |event|       logs.push(event)       puts logs.length     end     driver.execute_script('console.log(""here"")')   ensure     driver.quit   end end  caps = Selenium::WebDriver::Remote::Capabilities.new caps['browserName'] = 'chrome'  run_session(caps) ```   ### Relevant log output  ```shell Traceback (most recent call last):         9: from cdp_commands.rb:40:in `'         8: from cdp_commands.rb:11:in `run_session'         7: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver_extensions/has_log_events.rb:66:in `on_log_event'         6: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver_extensions/has_devtools.rb:36:in `devtools'         5: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver_extensions/has_devtools.rb:36:in `new'         4: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/devtools.rb:45:in `initialize'         3: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/devtools.rb:124:in `start_session'         2: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-devtools-0.94.0/lib/selenium/devtools/v94/target.rb:109:in `get_targets'         1: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/devtools.rb:68:in `send_cmd' /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/wait.rb:73:in `until': timed out after 30 seconds (Selenium::WebDriver::Error::TimeoutError) ```   ### Operating System  macOS Monterey  ### Selenium version  Ruby 4.0.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  4.0.0-rc-1","closed","I-defect,","shashikdm","2021-11-08T08:14:11Z","2021-12-25T00:06:58Z"
"","10508","Selenium Grid 4, How to match a particular pattern capability in ruby 3.x.x","### What happened?  I'm unable to match the custom capabilities in ruby code for selenium grid 4 nodes.  As per this documentation: https://www.selenium.dev/documentation/grid/configuration/cli_options/#matching-node-a  I've tried to do the same thing in ruby like below:  1) Started the selenium grid with this command:  ``` java -jar ./selenium-server-4.1.2.jar  hub --session-request-timeout 500 --port 4444 --tracing false  ```  2) Started Running nodes with the below commands:  ``` node a) java -jar selenium-server-4.1.2.jar node --max-sessions 74 --log-level ""fine"" --port 5555  --driver-implementation ""chrome"" --override-max-sessions true --max-threads 55 --driver-configuration display-name=""$(hostname)"" stereotype='{""browserName"":""chrome"",""custom_key1"":""custom_value1""}'  node b) java -jar selenium-server-4.1.2.jar node --max-sessions 74 --log-level ""fine"" --port 5556  --driver-implementation ""chrome"" --override-max-sessions true --max-threads 55 --driver-configuration display-name=""$(hostname)"" stereotype='{""browserName"":""chrome"",""custom_key2"":""custom_value2""}'  ```  Then From My Ruby Code, I've tried to connect to the node 'a' which uses custom_key1 and custom_value1 like below:  ```   options = Selenium::WebDriver::Chrome::Options.new(args: ['start-maximized'])  caps = {""custom_key1"":""custom_value1""}  options.add_option(""my_options"",caps)  And finally trying to initialize the browser:  driver = Selenium::WebDriver.for(:remote, :url => ""http://192.168.29.141:4444"", :capabilities => options)  ```  So here Im able to get the driver but its getting randomly from the above nodes. If I pass custom_key1 and custom_value1 then I should get the browser from that node 'a' only. But However browser session is getting created in node 'b' too. Im getting browser from node 'b' even after I pass custom_key1 from my code.  Could someone please help me to match this particular nodes with some pattern  ### How can we reproduce the issue?  ```shell options = Selenium::WebDriver::Chrome::Options.new(args: ['start-maximized'])  caps = {""custom_key1"":""custom_value1""}  options.add_option(""my_options"",caps)  And finally trying to initialize the browser:  driver = Selenium::WebDriver.for(:remote, :url => ""http://192.168.29.141:4444"", :capabilities => options)  ``` ```   ### Relevant log output  ```shell browser getting initialized whatever the args we pass ```   ### Operating System  ubuntu 18.04  ### Selenium version  selenium 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  chrome Version 99.0.4844.82 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  Selenium Grid 4.1.2 (revision 9a5a329c5a)","closed","","user574","2022-04-05T08:48:02Z","2022-05-09T00:11:09Z"
"","10192","[🐛 Bug]: C#-Selenium.WebDriver 4.1.0-AddAdditionalOption& AddAdditionalCapability method are not working properly","### What happened?  I'm trying to upgrade my `Selenium.WebDriver` from `3.141.0` to `4.1.0` version in C# DOTNET 5 With version `3.141.0` I used to create an object of `DesiredCapabilities` to setting up different capabilities   ```sh DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.SetCapability(""browser"", ""chrome""); capabilities.SetCapability(""browserstack.user"", ""MY USER""); capabilities.SetCapability(""browserstack.key"", ""MY KEY""); IWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""), capabilities); ``` and I got something like this received for the Selenium Grid or any other tool like BrowserStack: ```sh {   ""browserName"":""chrome"",   ""browserstack.user"":""MY USER"",   ""browserstack.key"":""MY KEY"" } ``` * NOTE ALL THE ATTRIBUTES ARE IN THE JSON ROOT. This json is read it by BrowserStack without any issue.  I know you changed the visibility of the class `DesiredCapabilities`, that is the reason I can not use it anymore.  I was checking some info about this change https://www.selenium.dev/documentation/webdriver/getting_started/upgrade_to_selenium_4/#addadditionalcapability-is-deprecated and it's recommended to use `AddAdditionalOption`  When I implemented the suggested code ```sh   var opts = new ChromeOptions();   opts.AddAdditionalOption(""browserstack.user"", ""MY USER"");   opts.AddAdditionalOption(""browserstack.key"", ""MY KEY"");   IWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""), opts.ToCapabilities()); ``` I'm not getting those options in the JSON received in the Grid. The additional options appear when I debug the `opts` variable but those values are not sent to the Grid Server.  ```sh {   ""browserName"":""chrome"",   ""goog:chromeOptions"":{        } } ``` The issue I'm having it's because those additional options are required for BrowserStack (for Authentication and specify browsers/devices)  That is the reason my test fails when I use BrowserStack.  I know there is a deprecated method like `AddAdditionalCapability `  ```sh var opts = new ChromeOptions(); opts.AddAdditionalCapability(""browserstack.user"", ""MY USER"", true); opts.AddAdditionalCapability(""browserstack.key"", ""MY KEY"", false);  IWebDriver driver = new RemoteWebDriver( new Uri(""http://localhost:4444/wd/hub""), opts.ToCapabilities()); ``` but the same it's not working properly, I'm getting the next json in the grid server  ```sh {   ""browserName"":""chrome"",   ""goog:chromeOptions"":{     ""browserstack.key"":""MY KEY""   } } ``` NOTE the `browserstack.key` ATTRIBUTE IS NOT IN THE ROOT JSON, WHERE IS EXPECTED FOR THE BS TOOL.  1. Is this an issue? with the new version, are you planning don't allow the users to put additional options in the root? 2. All the cloud tools should have their own specific capabilities as a child in the JSON? 3. `AddAdditionalCapability ` deprecated method, should be working as same as before even with the new version? 4. Should BrowserStack and other tools instead of reading the BS capabilities from the root should read from something like this `bstack:options`  Thank you in advance.   ### How can we reproduce the issue?  ```shell Check the next 2 test cases using the new method `AddAdditionalOption` and the deprecated method `AddAdditionalCapability`   using System; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Remote;  namespace QAAutomationCore.Test {     class SeleniumTest     {         [Test]         public void checkAddAdditionalOption()         {             IWebDriver driver = null;             try             {                 var opts = new ChromeOptions();                 opts.AddAdditionalOption(""browserstack.user"", ""MY USER"");                 opts.AddAdditionalOption(""browserstack.key"", ""MY KEY"");                  driver = new RemoteWebDriver(                     new Uri(""http://localhost:4444/wd/hub""), opts.ToCapabilities()                 );             }             finally {                 if (driver != null) {                     driver.Quit();                 }             }         }           [Test]         public void checkAddAdditionalCapability()         {             IWebDriver driver = null;             try             {                 var opts = new ChromeOptions();                 opts.AddAdditionalCapability(""browserstack.user"", ""MY USER"", true);                 opts.AddAdditionalCapability(""browserstack.key"", ""MY KEY"", false);                  driver = new RemoteWebDriver(                     new Uri(""http://localhost:4444/wd/hub""), opts.ToCapabilities()                 );             }             finally             {                 if (driver != null)                 {                     driver.Quit();                 }             }         }      } } ```   ### Relevant log output  ```shell Logs are shown in the description. ```   ### Operating System  WINDOWS 10 PRO / DOTNET 5  ### Selenium version  C#-Selenium.WebDriver 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  CHROME 96.0  ### What are the browser driver(s) and version(s) where you see this issue?  96  ### Are you using Selenium Grid?  4.1.0 (revision 87802e897b) & BrowserStack","closed","needs-triaging,","fescobar","2021-12-28T15:28:38Z","2022-01-30T00:07:16Z"
"","10539","[🐛 Bug]:  [java-client] Getting HTTP Method for PATCH request return GET","### What happened?  i'm trying to test https://reqres.in/ from UI to try  Network request feature from Selenium 4.  but when i'm clicking on this link  ![image](https://user-images.githubusercontent.com/5022171/163054289-a0fb810b-ee61-4385-8479-f4f4e9fca57e.png) my network interceptor detect GET instead of PATCH  ![image](https://user-images.githubusercontent.com/5022171/163054390-ccd1883d-5725-4386-a058-461687df8e0a.png) this is the sample from the inspect network when i do click manualy ![image](https://user-images.githubusercontent.com/5022171/163055147-1c5fa8e7-7d71-447c-a7ca-8e369a34a4a2.png)  Thank you  ### How can we reproduce the issue?  ```shell please clone from my repository on the branch Serenity https://github.com/argotri/selenium4-framework-sample/tree/serenity  then run test file BugSeleniumIdentification.java on method test() , the console will be print httpMethod , Url , and StatusCode after automation click on PATCH request. ```   ### Relevant log output  ```shell Current output :  GET https://reqres.in/api/users/2 200  Expected Output :  PATCH https://reqres.in/api/users/2 200 ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  No","closed","I-defect,","argotri","2022-04-12T21:14:44Z","2022-05-14T00:15:56Z"
"","10895","[🐛 Bug]:  Failed Connection with Basic Authentication","### What happened?  I'm trying to set up a connection to get DevTools on Selenoid with Basic Authentication. I'm trying to set up a connection to get DevTools on Selenoid with Basic Authentication. I get an exception and a 401 response. Please help me understand what the problem is?  ### How can we reproduce the issue?  ```shell String sessionId = ((RemoteWebDriver) WebDriverRunner.getWebDriver()).getSessionId().toString(); String debuggerUrl = String.format(""https://:@/devtools/%s/page"", sessionId); URI uri = new URI(debuggerUrl); String login = uri.getUserInfo().split("":"", 2)[0]; String pass = uri.getUserInfo().split("":"", 2)[1];  HttpClient.Factory clientFactory = HttpClient.Factory.createDefault(); Capabilities originalCapabilities = driver.getCapabilities(); Optional connection = Optional.of(new Connection( clientFactory.createClient(ClientConfig.defaultConfig().baseUri(uri).authenticateAs(new UsernameAndPassword(user, pass))), uri.toString())); ```   ### Relevant log output  ```shell rg.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Invalid Status code=401 text=Unauthorized java.io.IOException: Invalid Status code=401 text=Unauthorized 	at org.asynchttpclient.netty.handler.WebSocketHandler.abort(WebSocketHandler.java:92) 	at org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(WebSocketHandler.java:118) 	at org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(AsyncHttpClientHandler.java:78) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1372) 	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1235) 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1284) 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748)   Step failed org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to https://:@/devtools/chrome-102-0-2e50c288-06e4-46fe-b5b5-742f612dc014/page Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'WORK356', ip: '172.25.240.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.(NettyWebSocket.java:104) 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.lambda$create$3(NettyWebSocket.java:137) 	at org.openqa.selenium.remote.http.netty.NettyClient.openSocket(NettyClient.java:118) 	at org.openqa.selenium.devtools.Connection.(Connection.java:77) ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 102  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","AlexOsokin007","2022-07-21T08:54:16Z","2022-07-22T12:33:10Z"
"","10366","[🐛 Bug]: Unable to run fireFox driver in headless mode with the extension installation.","### What happened?  I'm trying to run the FireFox driver in headless with firefox extension installation.  Initially it states headless mode started, and then I end up seeing the Socket connection error.   I looked at the port FireFox is using for the test run and It's available/open for the use.  ### How can we reproduce the issue?  ```shell Note : Able to run tests with out headless option.   public void setUp() {  FirefoxOptions firefoxOptions = new FirefoxOptions();  firefoxOptions.setHeadless(true);  webDriver = new FirefoxDriver(firefoxOptions);  ((HasExtensions) webDriver).installExtension(""path for .xpi file); } ```   ### Relevant log output  ```shell 1644885470773	geckodriver	INFO	Listening on 127.0.0.1:44401 1644885470964	mozrunner::runner	INFO	Running command: ""/Applications/Firefox.app/Contents/MacOS/firefox-bin"" ""--marionette"" ""-headless"" ""-foreground"" ""-no-remote"" ""-profile"" ""/var/folders/j1/y271rqmn28bftgrb952g7n8m0000gs/T/rust_mozprofileQePw5f"" *** You are running in headless mode. 1644885471531	Marionette	INFO	Marionette enabled [GFX1-]: RenderCompositorSWGL failed mapping default framebuffer, no dt console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /var/folders/j1/y271rqmn28bftgrb952g7n8m0000gs/T/rust_mozprofileQePw5f/search.json.mozlz4"", (void 0))) console.error: BackgroundUpdate:    _reasonsToNotScheduleUpdates: Failed to check for Maintenance Service Registry Key: [Exception... ""Component returned failure code: 0x80004001 (NS_ERROR_NOT_IMPLEMENTED) [nsIUpdateProcessor.getServiceRegKeyExists]""  nsresult: ""0x80004001 (NS_ERROR_NOT_IMPLEMENTED)""  location: ""JS frame :: resource://gre/modules/BackgroundUpdate.jsm :: _reasonsToNotScheduleUpdates :: line 243""  data: no] 1644885473216	Marionette	INFO	Listening on port 52830 1644885473264	RemoteAgent	WARN	TLS certificate errors will be ignored for this session Feb 14, 2022 4:37:53 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C JavaScript error: moz-extension://4e4bd449-c3fe-fa4b-9a7d-7ab82a4996c6/views/background/background.min.js, line 1: Error: Promised response from onMessage listener went out of scope JavaScript error: moz-extension://4e4bd449-c3fe-fa4b-9a7d-7ab82a4996c6/views/background/background.min.js, line 1: Error: Promised response from onMessage listener went out of scope Exiting due to channel error. Exiting due to channel error. Exiting due to channel error. 1644885495406	geckodriver::marionette	ERROR	Failed to close browser connection: Socket is not connected (os error 57)  org.openqa.selenium.WebDriverException: Failed to decode response from marionette Build info: version: 'unknown', revision: 'unknown', time: 'unknown' ```   ### Operating System  os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.2', java.version: '1.8.0_322'  ### Selenium version  Java 3.14.0 or 4.1.0 or 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  FireFox 91.5.0esr (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  GeckDriver 0.30.0  ### Are you using Selenium Grid?  NA","closed","I-defect,","MaheshkumarPalled","2022-02-15T00:45:53Z","2022-04-07T00:11:45Z"
"","10327","[🐛 Bug]: Actions.moveToElement is not working for FireFox driver, while it works fine with Chrome.","### What happened?  I'm trying to perform mouse hover on a webElement, so that it expands the list and then I continue by choosing the displayed option.  Below code is working fine with Chrome browser.  ### How can we reproduce the issue?  ```shell public void mouseOverOnElement(WebElement targetElement) { Actions builder = new Actions(webDriver); builder.moveToElement(targetElement).perform(); // This didn't work in FireFox builder.moveToElement(targetElement).build().perform(); // This didn't work in FireFox  //Also tried to achieve it with Java script executor.   JavaScriptExecutor js = (JavascriptExecutor) webDriver; js.executeScript(""arguments[0].onmouseover"", targetElement); // Didn't work, js.executeScript(""arguments[0].scrollIntoView(true);"", targetElement); // Didn't work. } ```   ### Relevant log output  ```shell NA ```   ### Operating System  macOSMonterey, version 12.2  ### Selenium version  Java 3.14.0, 4.1.1, 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  FireFox 91.5.0esr (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  GeckDriver 0.30.0  ### Are you using Selenium Grid?  NA","closed","G-geckodriver,","MaheshkumarPalled","2022-02-04T22:54:57Z","2022-03-13T00:09:53Z"
"","10425","No source code tag to match PyPI 4.1.2 release","### What happened?  I'm trying to package the latest release for Guix, but there's no source distribution on PyPI, and the latest release tagged here is 4.1.0.  ### How can we reproduce the issue?  ```shell Compare the version string in PyPI vs what's been tagged. ```   ### Relevant log output  ```shell N/A. ```   ### Operating System  N/A  ### Selenium version  4.1.1 and 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","Apteryks","2022-03-09T02:25:16Z","2022-04-09T00:11:12Z"
"","9992","[🐛 Bug]: Webdriver doesn't accept ""service"" keyword, but executable_path is deprecated","### What happened?  I'm trying to create a webdriver by specifying the executable path like so ``` driver = webdriver.Chrome(                 executable_path=""/home/user/.local/bin/chromedriver"", options=options             ) ``` This results in ""DeprecationWarning: executable_path has been deprecated, please pass in a Service object""  So I tried passing in a service object: ``` chrome_service = Service(executable_path=""/home/user/.local/bin/chromedriver"") driver = webdriver.Chrome(service=chrome_service, options=options)  ``` This resulted in TypeError: __init__() got an unexpected keyword argument 'service'  ### How can we reproduce the issue?  ```shell chrome_service = Service(executable_path=""/home/user/.local/bin/chromedriver"") driver = webdriver.Chrome(service=chrome_service, options=options)  ``` ```   ### Relevant log output  ```shell DeprecationWarning: executable_path has been deprecated, please pass in a Service object TypeError: __init__() got an unexpected keyword argument 'service' ```   ### Operating System  WSL2 Ubuntu 20.04.3 LTS (on Windows 10)  ### Selenium version  Python 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95 (didn't try others)  ### Are you using Selenium Grid?  Not intentionally at least","closed","C-py,","jtommi","2021-10-28T09:39:23Z","2021-11-29T00:06:46Z"
"","10709","[🐛 Bug]: Page property seems undefined","### What happened?  I'm trying to apply scripts by using the addScriptToEvaluateOnNewDocument event. For some reason none of these seem to be executing. I ensure to open a new tab when I test any of my scripts, let it be an alert, or property overriding. I took a look in my browser's and the selenium browser's console as well, and It seems like that the page property is undefined. I haven't found any clue why, I assume I'm doing probably something wrong, and I missed out something? However, all the examples I found seem to be the doing the exact same thing in python I'm doing. Create a ChromeDriver, apply parameters, etc, and then ExecuteCdpCommand to add scripts using Page.addScriptToEvaluateOnNewDocument.  Opening a new tab I'd expect my scripts to run.  ### How can we reproduce the issue?  ```shell What I have tried as tests: `driver.ExecuteCdpCommand(""Page.addScriptToEvaluateOnNewDocument"", new Dictionary() {     {""source"", ""alert(\""test\"")""} });`  I have also tried: ` IDevTools devTool = driver as IDevTools; var session = devTool.GetDevToolsSession(); var domains = session.GetVersionSpecificDomains(); domains.Page.Enable(new EnableCommandSettings()); domains.Page.AddScriptToEvaluateOnNewDocument(new AddScriptToEvaluateOnNewDocumentCommandSettings() {     Source = ""alert(\""test\"")"" });` ```   ### Relevant log output  ```shell Page.addScriptToEvaluateOnNewDocument VM66:1 Uncaught ReferenceError: Page is not defined     at :1:1 (anonymous) @ VM66:1 page().addScriptToEvaluateOnNewDocument VM116:1 Uncaught ReferenceError: page is not defined     at :1:1 ```   ### Operating System  Windows 10  ### Selenium version  C# 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.62  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41   ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","dretax","2022-05-28T11:39:15Z","2022-06-28T00:13:47Z"
"","10755","[🐛 Bug]: [Python] WebDriver constructor must not assume that BaseOptions instance has _ignore_local_proxy property","### What happened?  I'm talking about https://github.com/SeleniumHQ/selenium/blob/27ff5866dc1f50e4a01733fb6b0f3e734a72363b/py/selenium/webdriver/remote/webdriver.py#L256  The typing info says `options: Union[BaseOptions, List[BaseOptions]] = None`, while `_ignore_local_proxy` property is only defined for `ArgOptions` class. This means any code that inherits Options from BaseOptions rather than from ArgOptions would fail with missing attribute error (which is also happening for the Appium Python client)  ### How can we reproduce the issue?  ```shell Pass any custom class inherited from BaseOptions rather than from ArgOptions to the WebDriver constructor ```   ### Relevant log output  ```shell if options:                 capabilities = options.to_capabilities() >               _ignore_local_proxy = options._ignore_local_proxy E               AttributeError: 'UiAutomator2Options' object has no attribute '_ignore_local_proxy' ``` ```   ### Operating System  macOS  ### Selenium version  Python 3.9  ### What are the browser(s) and version(s) where you see this issue?  Appium  ### What are the browser driver(s) and version(s) where you see this issue?  Any  ### Are you using Selenium Grid?  _No response_","open","I-defect,","mykola-mokhnach","2022-06-09T19:11:16Z","2022-06-09T22:17:53Z"
"","10561","[🐛 Bug]: ""Could not start a new session"" SessionNotCreatedException thrown with Selenium 4.1.3/IEDriverServer 4.0.0 without open desktop session (works with Selenium 3.141.0/IEDriverServer 2.53.1)","### What happened?  I'm running Selenium via a Jenkins Maven job. The job is running on a separate Jenkins agent without a remote desktop session open to it. When I run in Selenium **3.141.0** with IEDriverServer **2.53.1.0** it works fine. However, running with Selenium **4.1.3** and IEDriverServer **4.0.0.0** throws a SessionNotCreatedException. Note that if I keep a remote desktop session open it works fine with Selenium **4.1.3** and IEDriverServer **4.0.0.0**. But running without an open RDP session is not desired.  I found similar issue https://github.com/SeleniumHQ/selenium/issues/10497 and reviewed https://www.selenium.dev/documentation/ie_driver_server/ and confirmed the Windows environment and IE Selenium capabilities are setup properly. I also tried with Edge/IE11 compatibility mode and got the same problem.  Thank you in advance for your help towards resolving this issue!  ### How can we reproduce the issue?  ```java InternetExplorerOptions ieOptions = new InternetExplorerOptions(); ieOptions.setPlatformName(Platform.WINDOWS.name()); ieOptions.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); ieOptions.setCapability(InternetExplorerDriver.REQUIRE_WINDOW_FOCUS, false); ieOptions.setCapability(InternetExplorerDriver.ENABLE_ELEMENT_CACHE_CLEANUP, true); ieOptions.setCapability(""ignoreProtectedModeSettings"", true); ieOptions.setCapability(""IntroduceInstabilityByIgnoringProtectedModeSettings"", true); ieOptions.setCapability(""nativeEvents"", true); ieOptions.setCapability(""browserFocus"", true); ieOptions.setCapability(""ignoreZoomSetting"", true); ieOptions.setCapability(""requireWindowFocus"", true); System.setProperty(""webdriver.ie.driver"", System.getProperty(""user.dir"") + File.separator + ""driver\\IEDriverServer_4.0.0.0.exe""); WebDriver driver = new InternetExplorerDriver(ieOptions); ```   ### Relevant log output (DEBUG log level)  ```shell 2022-04-19 16:45:19.937 DEBUGi.n.u.i.l.InternalLoggerFactory:63 - Using SLF4J as the default logging framework 2022-04-19 16:45:19.941 DEBUGi.n.u.ResourceLeakDetector:129 - -Dio.netty.leakDetection.level: simple 2022-04-19 16:45:19.941 DEBUGi.n.u.ResourceLeakDetector:130 - -Dio.netty.leakDetection.targetRecords: 4 2022-04-19 16:45:19.945 DEBUGi.n.u.ResourceLeakDetectorFactory:196 - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@126675fd 2022-04-19 16:45:19.968 DEBUGi.n.u.i.PlatformDependent0:460 - -Dio.netty.noUnsafe: false 2022-04-19 16:45:19.968 DEBUGi.n.u.i.PlatformDependent0:954 - Java version: 8 2022-04-19 16:45:19.969 DEBUGi.n.u.i.PlatformDependent0:135 - sun.misc.Unsafe.theUnsafe: available 2022-04-19 16:45:19.970 DEBUGi.n.u.i.PlatformDependent0:159 - sun.misc.Unsafe.copyMemory: available 2022-04-19 16:45:19.971 DEBUGi.n.u.i.PlatformDependent0:202 - java.nio.Buffer.address: available 2022-04-19 16:45:19.971 DEBUGi.n.u.i.PlatformDependent0:272 - direct buffer constructor: available 2022-04-19 16:45:19.972 DEBUGi.n.u.i.PlatformDependent0:350 - java.nio.Bits.unaligned: available, true 2022-04-19 16:45:19.973 DEBUGi.n.u.i.PlatformDependent0:424 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9 2022-04-19 16:45:19.973 DEBUGi.n.u.i.PlatformDependent0:446 - java.nio.DirectByteBuffer.(long, int): available 2022-04-19 16:45:19.973 DEBUGi.n.u.i.PlatformDependent:1116 - sun.misc.Unsafe: available 2022-04-19 16:45:19.974 DEBUGi.n.u.i.PlatformDependent:1246 - -Dio.netty.tmpdir: C:\Users\IDSREG~1\AppData\Local\Temp\2 (java.io.tmpdir) 2022-04-19 16:45:19.975 DEBUGi.n.u.i.PlatformDependent:1325 - -Dio.netty.bitMode: 64 (sun.arch.data.model) 2022-04-19 16:45:19.975 DEBUGi.n.u.i.PlatformDependent:1076 - Platform: Windows 2022-04-19 16:45:19.976 DEBUGi.n.u.i.PlatformDependent:178 - -Dio.netty.maxDirectMemory: 1908932608 bytes 2022-04-19 16:45:19.977 DEBUGi.n.u.i.PlatformDependent:185 - -Dio.netty.uninitializedArrayAllocationThreshold: -1 2022-04-19 16:45:19.979 DEBUGi.n.u.i.CleanerJava6:92 - java.nio.ByteBuffer.cleaner(): available 2022-04-19 16:45:19.979 DEBUGi.n.u.i.PlatformDependent:205 - -Dio.netty.noPreferDirect: false 2022-04-19 16:45:19.988 DEBUGi.n.u.i.PlatformDependent:967 - org.jctools-core.MpscChunkedArrayQueue: available 2022-04-19 16:45:20.011 DEBUGi.n.u.i.InternalThreadLocalMap:86 - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 2022-04-19 16:45:20.011 DEBUGi.n.u.i.InternalThreadLocalMap:89 - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 2022-04-19 16:45:20.035 DEBUGi.n.h.s.JdkSslContext:97 - Default protocols (JDK): [TLSv1.2]  2022-04-19 16:45:20.036 DEBUGi.n.h.s.JdkSslContext:98 - Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384] 2022-04-19 16:45:20.067 DEBUGi.n.c.MultithreadEventLoopGroup:44 - -Dio.netty.eventLoopThreads: 8 2022-04-19 16:45:20.077 DEBUGi.n.c.n.NioEventLoop:109 - -Dio.netty.noKeySetOptimization: false 2022-04-19 16:45:20.077 DEBUGi.n.c.n.NioEventLoop:110 - -Dio.netty.selectorAutoRebuildThreshold: 512 2022-04-19 16:45:20.114 DEBUGi.n.b.PooledByteBufAllocator:155 - -Dio.netty.allocator.numHeapArenas: 8 2022-04-19 16:45:20.114 DEBUGi.n.b.PooledByteBufAllocator:156 - -Dio.netty.allocator.numDirectArenas: 8 2022-04-19 16:45:20.114 DEBUGi.n.b.PooledByteBufAllocator:158 - -Dio.netty.allocator.pageSize: 8192 2022-04-19 16:45:20.115 DEBUGi.n.b.PooledByteBufAllocator:163 - -Dio.netty.allocator.maxOrder: 9 2022-04-19 16:45:20.115 DEBUGi.n.b.PooledByteBufAllocator:167 - -Dio.netty.allocator.chunkSize: 4194304 2022-04-19 16:45:20.115 DEBUGi.n.b.PooledByteBufAllocator:168 - -Dio.netty.allocator.smallCacheSize: 256 2022-04-19 16:45:20.115 DEBUGi.n.b.PooledByteBufAllocator:169 - -Dio.netty.allocator.normalCacheSize: 64 2022-04-19 16:45:20.116 DEBUGi.n.b.PooledByteBufAllocator:170 - -Dio.netty.allocator.maxCachedBufferCapacity: 32768 2022-04-19 16:45:20.116 DEBUGi.n.b.PooledByteBufAllocator:171 - -Dio.netty.allocator.cacheTrimInterval: 8192 2022-04-19 16:45:20.116 DEBUGi.n.b.PooledByteBufAllocator:172 - -Dio.netty.allocator.cacheTrimIntervalMillis: 0 2022-04-19 16:45:20.116 DEBUGi.n.b.PooledByteBufAllocator:173 - -Dio.netty.allocator.useCacheForAllThreads: false 2022-04-19 16:45:20.117 DEBUGi.n.b.PooledByteBufAllocator:174 - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 2022-04-19 16:45:20.128 DEBUGi.n.b.ByteBufUtil:87 - -Dio.netty.allocator.type: pooled 2022-04-19 16:45:20.128 DEBUGi.n.b.ByteBufUtil:96 - -Dio.netty.threadLocalDirectBufferSize: 0 2022-04-19 16:45:20.128 DEBUGi.n.b.ByteBufUtil:99 - -Dio.netty.maxThreadLocalCharBufferSize: 16384 Started InternetExplorerDriver server (32-bit) 4.0.0.0 Listening on port 51393 Only local connections are allowed 2022-04-19 16:45:20.977 DEBUGi.n.c.DefaultChannelId:79 - -Dio.netty.processId: 7248 (auto-detected) 2022-04-19 16:45:20.980 DEBUGi.n.u.NetUtil:136 - -Djava.net.preferIPv4Stack: false 2022-04-19 16:45:20.980 DEBUGi.n.u.NetUtil:137 - -Djava.net.preferIPv6Addresses: false 2022-04-19 16:45:20.989 DEBUGi.n.u.NetUtilInitializations:129 - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1) 2022-04-19 16:45:20.991 DEBUGi.n.u.NetUtil:191 - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200 2022-04-19 16:45:21.000 DEBUGi.n.c.DefaultChannelId:101 - -Dio.netty.machineId: 00:50:56:ff:fe:ae:19:47 (auto-detected) 2022-04-19 16:45:21.056 DEBUGi.n.b.AbstractByteBuf:63 - -Dio.netty.buffer.checkAccessible: true 2022-04-19 16:45:21.056 DEBUGi.n.b.AbstractByteBuf:64 - -Dio.netty.buffer.checkBounds: true 2022-04-19 16:45:21.056 DEBUGi.n.u.ResourceLeakDetectorFactory:196 - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1ef7a5db 2022-04-19 16:45:21.072 DEBUGo.a.n.c.NettyConnectListener:73 - Using new Channel '[id: 0x45472acc, L:/127.0.0.1:55888 - R:localhost/127.0.0.1:51393]' for 'POST' to '/session' 2022-04-19 16:45:21.091 DEBUGi.n.u.Recycler:85 - -Dio.netty.recycler.maxCapacityPerThread: 4096 2022-04-19 16:45:21.091 DEBUGi.n.u.Recycler:86 - -Dio.netty.recycler.ratio: 8 2022-04-19 16:45:21.092 DEBUGi.n.u.Recycler:87 - -Dio.netty.recycler.chunkSize: 32 2022-04-19 16:45:21.092 DEBUGi.n.u.Recycler:88 - -Dio.netty.recycler.blocking: false 2022-04-19 16:48:21.012 DEBUGo.a.n.t.TimeoutTimerTask:42 - Request timeout to localhost/127.0.0.1:51393 after 180000 ms for NettyResponseFuture{currentRetry=0, 	isDone=0, 	isCancelled=0, 	asyncHandler=org.asynchttpclient.AsyncCompletionHandlerBase@ebca05e, 	nettyRequest=org.asynchttpclient.netty.request.NettyRequest@4bbe3fed, 	future=java.util.concurrent.CompletableFuture@6981800f[Not completed, 1 dependents], 	uri=http://localhost:51393/session, 	keepAlive=true, 	redirectCount=0, 	timeoutsHolder=org.asynchttpclient.netty.timeout.TimeoutsHolder@7a3f356c, 	inAuth=0, 	touch=1650401121106} after 180055 ms 2022-04-19 16:48:21.016 DEBUGo.a.n.c.ChannelManager:315 - Closing Channel [id: 0x45472acc, L:/127.0.0.1:55888 - R:localhost/127.0.0.1:51393]  2022-04-19 16:48:21.018 DEBUGo.a.n.r.NettyRequestSender:485 - Aborting Future NettyResponseFuture{currentRetry=0, 	isDone=0, 	isCancelled=0, 	asyncHandler=org.asynchttpclient.AsyncCompletionHandlerBase@ebca05e, 	nettyRequest=org.asynchttpclient.netty.request.NettyRequest@4bbe3fed, 	future=java.util.concurrent.CompletableFuture@6981800f[Not completed, 1 dependents], 	uri=http://localhost:51393/session, 	keepAlive=true, 	redirectCount=0, 	timeoutsHolder=org.asynchttpclient.netty.timeout.TimeoutsHolder@7a3f356c, 	inAuth=0, 	touch=1650401121106}  2022-04-19 16:48:21.019 DEBUGo.a.n.h.HttpHandler:126 - Channel Closed: [id: 0x45472acc, L:/127.0.0.1:55888 ! R:localhost/127.0.0.1:51393] with attribute DISCARD 2022-04-19 16:48:21.020 DEBUGo.a.n.r.NettyRequestSender:486 - Request timeout to localhost/127.0.0.1:51393 after 180000 ms java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:51393 after 180000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) 	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) 2022-04-19 16:48:21.020 DEBUGo.a.AsyncCompletionHandler:71 - Request timeout to localhost/127.0.0.1:51393 after 180000 ms java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:51393 after 180000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) 	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: 'AGENT', ip: 'x.x.x.x', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_311' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Command: [null, newSession {capabilities=[Capabilities {browserName: internet explorer, platformName: windows, se:ieOptions: {ignoreProtectedModeSettings: true, ignoreZoomSetting: true, nativeEvents: true, requireWindowFocus: false}}], desiredCapabilities=Capabilities {IntroduceInstabilityByIgnoringProtectedModeSettings: true, browserFocus: false, browserName: internet explorer, enableElementCacheCleanup: true, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, nativeEvents: true, platformName: WINDOWS, requireWindowFocus: false, se:ieOptions: {ignoreProtectedModeSettings: true, ignoreZoomSetting: true, nativeEvents: true, requireWindowFocus: false}}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:188) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:180) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:156)         ... 	at net.serenitybdd.core.webdriver.driverproviders.ProvidedDriverProvider.newInstance(ProvidedDriverProvider.java:22) 	at net.thucydides.core.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:157) 	at net.thucydides.core.webdriver.WebDriverFactory.newWebdriverInstance(WebDriverFactory.java:136) 	at net.thucydides.core.webdriver.WebDriverFacade.newDriverInstance(WebDriverFacade.java:143) 	at net.thucydides.core.webdriver.WebDriverFacade.newProxyDriver(WebDriverFacade.java:134) 	at net.thucydides.core.webdriver.WebDriverFacade.getProxiedDriver(WebDriverFacade.java:104) 	at net.thucydides.core.webdriver.WebDriverFacade.get(WebDriverFacade.java:174)         ... 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66) 	at io.cucumber.java.Invoker.invoke(Invoker.java:24) 	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47) 	at io.cucumber.java.JavaHookDefinition.execute(JavaHookDefinition.java:64) 	at io.cucumber.core.runner.CoreHookDefinition.execute(CoreHookDefinition.java:46) 	at io.cucumber.core.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:21) 	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10) 	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86) 	at io.cucumber.core.runner.TestStep.run(TestStep.java:57) 	at io.cucumber.core.runner.TestCase.run(TestCase.java:89) 	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151) 	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:151) 	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23) 	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:151) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137) 	at io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:258) 	at io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:58) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at io.cucumber.junit.CucumberSerenityRunner$RunCucumber.evaluate(CucumberSerenityRunner.java:287) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159) 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:383) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:344) 	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:417) Caused by: java.lang.RuntimeException: NettyHttpHandler request execution error 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:83) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:124) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	... 63 more Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:51393 after 180000 ms 	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357) 	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:66) 	... 76 more Caused by: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:51393 after 180000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) 	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) ```   ### Operating System  Windows 10 / Windows Server 2016  ### Selenium version  Java 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  IE11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0.0  ### Are you using Selenium Grid?  No","closed","D-IE,","ddili","2022-04-19T18:53:33Z","2022-06-12T00:12:08Z"
"","10846","Exception OpenQA.Selenium.WebDriverTimeoutException : timeout: Timed out receiving message from renderer: 60.000 randomly thrown","### What happened?  I'm running Selenium UI tests on a web application from a Windows Server 2019 machine. I'm using Chrome with ChromeDriver.  Most of the time everything works fine. But for some reasons I randomly get the error :  ``` OpenQA.Selenium.WebDriverTimeoutException : timeout: Timed out receiving message from renderer: 60.000   (Session info: headless chrome=101.0.4951.54) ```  I tried to increase the `PageLoad` timeout with a higher value. However, I'm still getting the exact same error message :  `_driver.Manage().Timeouts().PageLoad = 120;`  I'm running many tests. But in general, I'm only getting this issue on a single test. This does not affect the all tests run. One or two in a total of 50 most of the time.  From what I've seen most of people solved this issue by adding the `--disable-gpu` on the driver initialization. However, I'm already using this option, and the problem still remains.  Any help would be much appreciated.   ### How can we reproduce the issue?  ```shell Below are the options I'm using for the ChromeDriver :  options.AddArgument(""--no-sandbox""); options.AddArgument($""--lang=en""); options.AddUserProfilePreference(""download.default_directory"", ""C:\\Users\\temp\\""); options.AddUserProfilePreference(""profile.default_content_setting_values.automatic_downloads"", 1); options.AddArgument(""--headless""); options.AddArgument(""window-size=1920,1080""); options.AddArgument(""--disable-gpu""); options.AddArgument(""--incognito""); ```   ### Relevant log output  ```shell Below is the test output while the problem occurs :  OpenQA.Selenium.WebDriverTimeoutException : timeout: Timed out receiving message from renderer: 60.000   (Session info: headless chrome=101.0.4951.54) ```   ### Operating System  Windows Server 2019  ### Selenium version  .NET 5.0 C# 9.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101.0.4951.54  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  4.1.4","closed","I-defect,","Naweap","2022-07-04T13:16:23Z","2022-07-15T12:51:48Z"
"","10450","[🐛 Bug]: tests for performance metrics show different usage than the code example in documentation","### What happened?  I'm playing with performance metrics and I can see some incosistency.   I have used example code from documentation for C#: https://www.selenium.dev/documentation/webdriver/bidirectional/chrome_devtools/#collect-performance-metrics  This code shows me similar metrics as the one for Java so I assume that probably this code is correct.  But then I also checked tests for this feature: https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/test/common/DevTools/DevToolsPerformanceTest.cs  There you generate metrics in another way so I tried it and I've got different metric results which doesn't seem to be correct.  What is the correct way to use the feature? If it's the one from documentation, then I'm not sure if the tests in DevToolsPerformanceTest.cs are correct.  Below you can see two tests. TaskMetricsTestAsync1 is based on the documentation (and I believe it shows correct results) and TaskMetricsTestAsync2 is created based on tests from DevToolsPerformanceTest.cs.   ### How can we reproduce the issue?  ```shell using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.DevTools; using System; using System.Threading.Tasks; using Performance = OpenQA.Selenium.DevTools.V96.Performance; using DevTools = OpenQA.Selenium.DevTools.V96;  namespace TestowyProjekt.Selenium4 {     class PerformanceMetrics     {         IWebDriver driver;          [SetUp]         public void Setup()         {             driver = new ChromeDriver();         }           [Test]         public async Task TaskMetricsTestAsync1()         {             DevToolsSession session = ((IDevTools)driver).GetDevToolsSession();              await session.SendCommand(new Performance.EnableCommandSettings());             Performance.GetMetricsCommandResponse metricsResponse =                 await session.SendCommand(                     new Performance.GetMetricsCommandSettings());              driver.Navigate().GoToUrl(""http://fakestore.testelka.pl"");                           var metrics = metricsResponse.Metrics;             foreach (Performance.Metric metric in metrics)             {                 Console.WriteLine(""{0} = {1}"", metric.Name, metric.Value);             }         }           [Test]         public async Task TaskMetricsTestAsync2()         {             DevToolsSession session = ((IDevTools)driver).GetDevToolsSession();             DevTools.DevToolsSessionDomains domains = session.GetVersionSpecificDomains();              await domains.Performance.Enable(new Performance.EnableCommandSettings());              driver.Navigate().GoToUrl(""https://fakestore.testelka.pl"");              DevTools.Performance.GetMetricsCommandResponse response = await domains.Performance.GetMetrics();             DevTools.Performance.Metric[] metrics = response.Metrics;             await domains.Performance.Disable();              foreach (var metric in metrics)             {                 Console.WriteLine(metric.Name + "" = "" + metric.Value);             }         }           [TearDown]         public void QuitDriver()         {             driver.Quit();         }     } } ```   ### Relevant log output  ```shell Results for TaskMetricsTestAsync1:  Timestamp = 6002,033808 AudioHandlers = 0 Documents = 2 Frames = 1 JSEventListeners = 0 LayoutObjects = 6 MediaKeySessions = 0 MediaKeys = 0 Nodes = 8 Resources = 0 ContextLifecycleStateObservers = 2 V8PerContextDatas = 1 WorkerGlobalScopes = 0 UACSSResources = 0 RTCPeerConnections = 0 ResourceFetchers = 2 AdSubframes = 0 DetachedScriptStates = 0 ArrayBufferContents = 0 LayoutCount = 0 RecalcStyleCount = 0 LayoutDuration = 0 RecalcStyleDuration = 0 DevToolsCommandDuration = 1,4E-05 ScriptDuration = 0 V8CompileDuration = 0 TaskDuration = 1,9E-05 TaskOtherDuration = 5E-06 ThreadTime = 5,3E-05 ProcessTime = 0,21875 JSHeapUsedSize = 1034060 JSHeapTotalSize = 2080768 FirstMeaningfulPaint = 0 DomContentLoaded = 5997,834006 NavigationStart = 5997,506084  Results for TaskMetricsTestAsync2:  Timestamp = 6037,5065 AudioHandlers = 0 Documents = 3 Frames = 2 JSEventListeners = 95 LayoutObjects = 823 MediaKeySessions = 0 MediaKeys = 0 Nodes = 1673 Resources = 112 ContextLifecycleStateObservers = 5 V8PerContextDatas = 1 WorkerGlobalScopes = 0 UACSSResources = 0 RTCPeerConnections = 0 ResourceFetchers = 3 AdSubframes = 0 DetachedScriptStates = 0 ArrayBufferContents = 0 LayoutCount = 16 RecalcStyleCount = 20 LayoutDuration = 0,059913 RecalcStyleDuration = 0,027851 DevToolsCommandDuration = 0,00104 ScriptDuration = 0,167962 V8CompileDuration = 0,001348 TaskDuration = 0,351894 TaskOtherDuration = 0,09378 ThreadTime = 0,264857 ProcessTime = 0,5625 JSHeapUsedSize = 3160844 JSHeapTotalSize = 4845568 FirstMeaningfulPaint = 0 DomContentLoaded = 6037,381635 NavigationStart = 6036,648397 ```   ### Operating System  Windows 11 Pro  ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  99.0.4844.74  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.5100  ### Are you using Selenium Grid?  _No response_","closed","I-question,","aphx07","2022-03-16T10:41:08Z","2022-04-16T00:10:56Z"
"","10268","[🐛 Bug]: INSTALL_SCHEMES and setuptools 60+","### What happened?  I'm packaging python-selenium in ALTLinux.  https://docs.python.org/3/whatsnew/3.10.html#distutils-deprecated: > The entire distutils package is deprecated, to be removed in Python 3.12. Its functionality for specifying package builds has already been completely replaced by third-party packages setuptools and packaging, and most other commonly used APIs are available elsewhere in the standard library (such as platform, shutil, subprocess or sysconfig). There are no plans to migrate any other functionality from distutils, and applications that are using other functions should plan to make private copies of the code. Refer to PEP 632 for discussion.  setuptools is the new home for distutils and from 60+ setuptools enables its own copy of distutils by default. With this change, the hack in setup.py of selenium no longer works since INSTALL_SCHEMES are no longer considered as scheme source (a scheme is taken from sysconfig). See https://github.com/pypa/distutils/pull/79 for details.  ```python for scheme in INSTALL_SCHEMES.values():                                               scheme['data'] = scheme['purelib'] ```  This led to the wrong installation path for data (depend on selected installation scheme), e.g. ``` /usr/selenium/webdriver/remote/getAttribute.js /usr/selenium/webdriver/remote/isDisplayed.js ``` while the expected path is `/usr/lib64/python3/site-packages/selenium/webdriver/remote/`. Note: even I have too old selenium I see exactly the same code in master.  For my distro I dropped the hack and added cli option `--install-data` for `python setup.py install`.  ### How can we reproduce the issue?  ```shell 1) install setuptools 60+ 2) `/usr/bin/python3 setup.py install --skip-build --root=/usr/src/tmp/python3-module-selenium-buildroot --force` ```   ### Relevant log output  ```shell running install_data creating /usr/src/tmp/python3-module-selenium-buildroot/usr/selenium creating /usr/src/tmp/python3-module-selenium-buildroot/usr/selenium/webdriver creating /usr/src/tmp/python3-module-selenium-buildroot/usr/selenium/webdriver/firefox creating /usr/src/tmp/python3-module-selenium-buildroot/usr/selenium/webdriver/firefox /x86 copying py/selenium/webdriver/firefox/x86/x_ignore_nofocus.so -> /usr/src/tmp/python3- module-selenium-buildroot/usr/selenium/webdriver/firefox/x86 creating /usr/src/tmp/python3-module-selenium-buildroot/usr/selenium/webdriver/firefox /amd64 copying py/selenium/webdriver/firefox/amd64/x_ignore_nofocus.so -> /usr/src/tmp/python 3-module-selenium-buildroot/usr/selenium/webdriver/firefox/amd64 creating /usr/src/tmp/python3-module-selenium-buildroot/usr/selenium/webdriver/remote copying py/selenium/webdriver/remote/getAttribute.js -> /usr/src/tmp/python3-module-se lenium-buildroot/usr/selenium/webdriver/remote copying py/selenium/webdriver/remote/isDisplayed.js -> /usr/src/tmp/python3-module-sel enium-buildroot/usr/selenium/webdriver/remote ```   ### Operating System  ALTLinux  ### Selenium version  3.0.2  ### What are the browser(s) and version(s) where you see this issue?  0  ### What are the browser driver(s) and version(s) where you see this issue?  0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","stanislavlevin","2022-01-20T10:14:50Z","2022-03-10T00:09:34Z"
"","10620","[🐛 Bug]: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.","### What happened?  I'm noticing flaky session not created issue in my personal test framework. I have a Selenium Grid running with the help of docker-compose. I run my tests on gitlab CI.  Mostly it works fine but suddenly starts to fail. Sometime even a small change NOT related to selenium Gird in my code creates this issue.  To demostrate this  - I'm sharing my Gitlab Repo link and under CI - you can see that I tried running the same codebase (without any changes) and it failed first and then successfully ran. If you check the logs you will notice the below error ->    I have tried using selenium grid 4.1.3 and 4.1.4  ``` org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: '5a85d554d8f3', ip: '172.19.0.5', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.109+', java.version: '1.8.0_212' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, name: UI Regression}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at functional.BaseTest.getRemoteDriver(BaseTest.java:113) ```  ![image](https://user-images.githubusercontent.com/8946992/167309586-e290bcc5-0745-4f5f-87f6-65aefe548905.png)     ### How can we reproduce the issue?  ```shell Below is my project link -   https://gitlab.com/suryajit7/my-blog-topics ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: '5a85d554d8f3', ip: '172.19.0.5', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.109+', java.version: '1.8.0_212' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, name: UI Regression}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at functional.BaseTest.getRemoteDriver(BaseTest.java:113) 	at functional.BaseTest.beforeClassSetup(BaseTest.java:88) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135) 	at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65) 	at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381) 	at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319) 	at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178) 	at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:122) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) Caused by: java.io.UncheckedIOException: java.net.ConnectException: Connection refused: hub/172.19.0.2:4444 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:124) 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	... 18 more Caused by: java.net.ConnectException: Connection refused: hub/172.19.0.2:4444 	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	... 1 more Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: hub/172.19.0.2:4444 Caused by: java.net.ConnectException: Connection refused 	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) 	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) 	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) ```   ### Operating System  Windows 10  ### Selenium version  Selenium Grid with nodechrome = 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome latest version 100  ### What are the browser driver(s) and version(s) where you see this issue?  Selenium Grid with nodechrome = 4.1.3  ### Are you using Selenium Grid?  Yes - Selenium Grid  4.1.3 with docker-compose","closed","I-question,","suryajit7","2022-05-08T18:18:58Z","2022-06-09T00:11:24Z"
"","10841","[🐛 Bug]: [Python] [Firefox] install_addon polluting /tmp","### What happened?  I'm not sure if this is a Selenium or a Marionette issue.  After multiple starts with local addon file installs I ran out of disk space and discovered a huge mess in /tmp. A lot of copies of the local addon file (identical file size). Any chance to automatically clean those up when we delete the temporary profile dir?  ### How can we reproduce the issue?  ```shell browser = webdriver.Firefox() browser.install_addon(os.path.join(os.getcwd(), 'NAME.xpi'), True)#addon file is in the cwd browser.quit() ```   ### Relevant log output  ```shell ... 1780499 addon-ffed1201-6e45-4a10-8fa8-5c0a326680f7.xpi 1780499 addon-9b4bde59-a74d-4706-90a2-20ec1a010c80.xpi 1780499 addon-f91bb2ff-b81b-43ea-9b54-3d819ac6406f.xpi ... ```   ### Operating System  Ubuntu 20.04  ### Selenium version  Python 3.8.10 Selenium 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 101  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 101  ### Are you using Selenium Grid?  _No response_","open","I-defect,","Commaster","2022-07-04T06:00:16Z","2022-07-04T14:10:29Z"
"","10038","[🐛 Bug]: Selenium pauses execution of code when using Remote DevTools","### What happened?  I'm launching an instance of ChromeDriver with the remote debugging port option set and I can access the remote dev tools just fine however whenever I do, the script just pauses execution and sits there on the page. There are no errors in the console or in the browser and there are no indicators that anything has gone wrong. One oddity I noticed was that if I repeatedly scroll up and down on the page, the script will continue so long as I continue scrolling.  This issue has already been reported here (#9759) but lacked details so I figured I'd open a new issue. I'm not really sure what to make of all this or even where I should post this issue so I'm just starting here. I'll be happy to file an issue elsewhere if someone can point me in the right direction.  **Steps to reproduce:**  1. Run the example script below 2. Go to http://localhost:9000 3. Click on the `React Image Gallery` link 4. Wait a bit and you should not see the script doing anything 5. Rapidly scroll up and down and the script should continue execution 6. Stop scrolling and the script should pause  **EDIT:** You may not have to _continuously_ scroll. I was just able to get the script going again scrolling once in between action. It seems that all it needs is the remote debugger to send it a command/action? Not sure.  ### How can we reproduce the issue?  ```shell from selenium.webdriver.chrome.options import Options from selenium.webdriver import DesiredCapabilities from selenium.webdriver.common.by import By from selenium import webdriver from time import sleep   def start_driver():     chrome_options = Options()     chrome_options.add_argument(""--remote-debugging-port=9000"")     chrome_options.add_argument(""--no-sandbox"")     chrome_options.add_argument('--disable-dev-shm-usage')     chrome_options.add_argument(""--disable-gpu"")     chrome_options.add_argument(""--headless"")     chrome_options.add_argument(""--disable-translate"")     chrome_options.add_argument(""--disable-extensions"")     chrome_options.add_argument(""--disable-background-networking"")     chrome_options.add_argument(""--safebrowsing-disable-auto-update"")     chrome_options.add_argument(""--disable-sync"")     chrome_options.add_argument(""--metrics-recording-only"")     chrome_options.add_argument(""--disable-default-apps"")     chrome_options.add_argument(""--no-first-run"")     chrome_options.add_argument(""--disable-setuid-sandbox"")     chrome_options.add_argument(""--hide-scrollbars"")     chrome_options.add_argument(""--no-zygote"")     chrome_options.add_argument(""--autoplay-policy=no-user-gesture-required"")     chrome_options.add_argument(""--disable-notifications"")     chrome_options.add_argument(""--disable-logging"")     chrome_options.add_argument(""--disable-permissions-api"")     chrome_options.add_argument(""--ignore-certificate-errors"")     chrome_options.add_argument(""--window-size=1280,720"")     chrome_options.add_experimental_option(""excludeSwitches"", [""enable-automation""])      chrome_options.page_load_strategy = ""eager""      capabilities = DesiredCapabilities.CHROME      return webdriver.Chrome(         executable_path=""SOME_PATH_TO_CHROME"",         options=chrome_options,         desired_capabilities=capabilities     )   driver = start_driver()  for _ in range(50):     driver.get(""https://www.linxtion.com/demo/react-image-gallery/"")      sleep(5)      right_nav = driver.find_element(By.CLASS_NAME, ""image-gallery-right-nav"")      for _ in range(5):         right_nav.click()          sleep(2) ```   ### Relevant log output  ```shell There is none. As far as Selenium is concerned, everything is still operating nominally. ```   ### Operating System  Windows 10  ### Selenium version  Python 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","KasimAhmic","2021-11-14T18:29:40Z","2022-02-05T00:06:09Z"
"","10783","[🐛 Bug]: [Python] [Firefox] Impossible to reach DEVNULL log_file in Service","### What happened?  I'm guessing after https://github.com/SeleniumHQ/selenium/commit/99d4173c64a849e71eaa0a9e4436584573ebe371 it became impossible to reach a `DEVNULL` state for https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/common/service.py#L41 since passing `DEVNULL` as the `log_path` argument is a `-3` and calls open at https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/service.py#L49 which obviously fails.  Specifying `log_path` as `''` does remove the `geckodriver.log` file but dumps all geckodriver output to stdout/stderr.  The current workaround is to `pathlib.Path('geckodriver.log').unlink(True)` after each run, which is suboptimal.  ### How can we reproduce the issue?  ```shell service = selenium.webdriver.firefox.service.Service(log_path=subprocess.DEVNULL) browser = selenium.webdriver.Firefox(service=service) ```   ### Relevant log output  ```shell .../lib/python3.8/site-packages/selenium/webdriver/firefox/service.py"", line 49, in __init__     log_file = open(log_path, ""a+"") if log_path else None ValueError: negative file descriptor ```   ### Operating System  Ubuntu  ### Selenium version  Python 3.8.10  ### What are the browser(s) and version(s) where you see this issue?  Firefox 101  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 101  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Commaster","2022-06-17T10:11:48Z","2022-07-19T00:16:03Z"
"","10053","[🐛 Bug]: Selenium4: Error occurs when page load stratery option is set to eager","### What happened?  I'm currently trying to upgrade from Selenium 3.141.59 to 4.0.0 and I've encountered some issues, one of which is described in the following.  The following error occurs when the value of eager load strategry is set to eager in the chrome driver options.  ```  selenium.common.exceptions.WebDriverException: Message: cannot parse capabilitypageLoadStrategyfrom unknown errorpage load strategy unsupported ```  ### How can we reproduce the issue?  ```shell set up options  def build(options):   options = setup_options():   return webdriver.Chrome(executable_path=""/opt/python/bin/chromedriver"",                           options=options)   def setup_options():   options = webdriver.ChromeOptions()   options.binary_location = ""/opt/python/bin/headless-chromium""   options.add_argument(""--headless"")   options.add_argument(""--disable-gpu"")   options.add_argument(""--window-size=1280x1696"")   options.add_argument(""--disable-application-cache"")   options.add_argument(""--disable-infobars"")   options.add_argument(""--no-sandbox"")   options.add_argument(""--hide-scrollbars"")   options.add_argument(""--enable-logging"")   options.add_argument(""--log-level=0"")   options.add_argument(""--single-process"")   options.add_argument(""--ignore-certificate-errors"")   options.add_argument(""--homedir=/tmp"")   options.add_experimental_option('w3c', True)   options.page_load_strategy = 'eager'    return options ``` ```   ### Relevant log output  ```shell *** selenium.common.exceptions.WebDriverException: Message: cannot parse capabilitypageLoadStrategyfrom unknown errorpage load strategy unsupported Stacktrace: #0 0x000000535c3c  #1 0x0000004c84cf  #2 0x000000477d84  #3 0x00000047a9a5  #4 0x0000004744d3  #5 0x0000004a034a  #6 0x00000049ec13  #7 0x0000004838b3  #8 0x000000484832  #9 0x000000544edd  #10 0x000000542917  #11 0x000000542df7  #12 0x00000054534a  #13 0x0000005580e5  #14 0x00000057564e  #15 0x00000057457d  #16 0x7f4505a00e75 start_thread #17 0x7f450400d8fd __clone ```   ### Operating System  Linux  ### Selenium version  Pyton 4.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 86.0.4240.111  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 86.0  ### Are you using Selenium Grid?  Not using","closed","I-defect,","hirokinakano","2021-11-18T04:58:54Z","2022-01-15T00:07:23Z"
"","9974","[🐛 Bug]: Selenium4: Handled exception stacktraces in log output","### What happened?  I'm currently trying to upgrade from Selenium 3.141.59 to 4.0.0 and I've encountered some issues, one of which is described in the following.  I try to find an element where I know it might not exist depending on the previous steps in the application, so I surrounded it with a try/catch block where I catch _NoSuchElementException_ as well as _TimeoutException_ since I use a _FluentWait_ to poll for a specified amount of time. When the element was found everything is fine. However, if it's not found, the exception handling occurs as intended and the test progresses accordingly, BUT the stacktraces of both aforementioned exceptions are still written to the log, even though I never specifically output any of them myself. In the exception handling I just say catch exception xyz and do nothing.  I've also discovered that stacktraces showing in logs only occurs when using the listener we've implemented that waits for an element to be present etc before .findBy(..) is executed, since the application can be a tad bit slow at times (especially when debugging locally). When I don't use the listener but copy its code to the test code itself, everything works as expected..exception handling occurs and no stacktraces of exceptions that were caught show up on the log.  ### How can we reproduce the issue?  DriverEventListener: ``` public class DriverEventListener implements WebDriverListener {     private void waitForElement(WebDriver driver, By selector) {          Wait wait = new FluentWait(driver).withTimeout(Duration.ofSeconds(4))             .pollingEvery(Duration.ofSeconds(1)).ignoring(NoSuchElementException.class);          if (selector != null) {             wait.until(ExpectedConditions.presenceOfElementLocated(selector));             wait.until(driver1 -> {                 WebElement element = driver1.findElement(selector);                 return (element != null && element.isEnabled() ? element : null);             });         }     }          @Override     public void beforeFindElement(WebDriver driver, By locator) {         waitForElement(driver, locator);     } } ```  The following code works fine (no exception stacktraces, NO listener used): ``` public class ThisWorksFine {     public static void main(String[] args) {         System.setProperty(""webdriver.gecko.driver"", ""D:/Workspaces/selenium/geckodriver-v0.30.0/geckodriver.exe"");         WebDriver driver = new FirefoxDriver();          driver.get(""https://google.com"");          Wait wait = new FluentWait(driver).withTimeout(Duration.ofSeconds(4))             .pollingEvery(Duration.ofSeconds(1)).ignoring(NoSuchElementException.class);          try {             By selector = By.id(""username""); // this ID doesn't exist on given page             wait.until(ExpectedConditions.presenceOfElementLocated(selector));             wait.until(driver1 -> {                 WebElement element = driver1.findElement(selector);                 return (element != null && element.isEnabled() ? element : null);             });         } catch (NoSuchElementException | TimeoutException ex) {             System.out.println(""Some exception handling happens"");         } finally {             driver.quit();         }     } } ```  With output: ``` SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. 1635408507388	geckodriver	INFO	Listening on 127.0.0.1:52355 1635408508273	mozrunner::runner	INFO	Running command: ""C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""--remote-debugging-port"" ""51536"" ""-no-remote"" ""-profile"" ""D:\\Users\\mmg\\AppData\\Local\\Temp\\rust_mozprofilekg9ybW"" 1635408508646	Marionette	INFO	Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at D:\\Users\\removed\\AppData\\Local\\Temp\\rust_mozprofilekg9ybW\\search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:51536/devtools/browser/cf2ed46a-d572-401e-a3c8-c761f24b79ba 1635408510020	Marionette	INFO	Listening on port 54010 1635408510406	RemoteAgent	WARN	TLS certificate errors will be ignored for this session Okt 28, 2021 10:08:30 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Some exception handling happens 1635408516586	Marionette	INFO	Stopped listening on port 54010 JavaScript error: resource:///modules/Interactions.jsm, line 201: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIUserIdleService.removeIdleObserver] ```   This DOESN'T work (but is the code we need to work; listener used): ``` public class ThisDoesntWork {     public static void main(String[] args) {         System.setProperty(""webdriver.gecko.driver"", ""D:/Workspaces/selenium/geckodriver-v0.30.0/geckodriver.exe"");         FirefoxDriver temp = new FirefoxDriver();         WebDriver driver = new EventFiringDecorator(new DriverEventListener()).decorate(temp);          driver.get(""https://google.com"");          try {             By selector = By.id(""username""); // this ID doesn't exist on given page             driver.findElement(selector);         } catch (NoSuchElementException | TimeoutException ex) {             System.out.println(""Some exception handling happens"");         } finally {             driver.quit();         }     } } ```  With output: ``` SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. 1635408622214	geckodriver	INFO	Listening on 127.0.0.1:53561 1635408623658	mozrunner::runner	INFO	Running command: ""C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""--remote-debugging-port"" ""49191"" ""-no-remote"" ""-profile"" ""D:\\Users\\mmg\\AppData\\Local\\Temp\\rust_mozprofile2i2KJm"" 1635408624064	Marionette	INFO	Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at D:\\Users\\mmg\\AppData\\Local\\Temp\\rust_mozprofile2i2KJm\\search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:49191/devtools/browser/36f17087-29a9-4bd9-8225-46520f5a6dd8 1635408625713	Marionette	INFO	Listening on port 54073 1635408625942	RemoteAgent	WARN	TLS certificate errors will be ignored for this session Okt 28, 2021 10:10:26 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Okt 28, 2021 10:10:31 AM org.openqa.selenium.support.events.EventFiringDecorator callListenerMethod WARNUNG: null java.lang.reflect.InvocationTargetException 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) 	at java.lang.reflect.Method.invoke(Method.java:508) 	at org.openqa.selenium.support.events.EventFiringDecorator.callListenerMethod(EventFiringDecorator.java:311) 	at org.openqa.selenium.support.events.EventFiringDecorator.fireBeforeEvents(EventFiringDecorator.java:231) 	at org.openqa.selenium.support.events.EventFiringDecorator.lambda$beforeCall$0(EventFiringDecorator.java:170) 	at org.openqa.selenium.support.events.EventFiringDecorator$$Lambda$304.0000000012238030.accept(Unknown Source) 	at java.util.Arrays$ArrayList.forEach(Arrays.java:4224) 	at org.openqa.selenium.support.events.EventFiringDecorator.beforeCall(EventFiringDecorator.java:170) 	at org.openqa.selenium.support.decorators.DefaultDecorated.beforeCall(DefaultDecorated.java:43) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:293) 	at org.openqa.selenium.support.decorators.WebDriverDecorator$$Lambda$303.0000000012237A50.invoke(Unknown Source) 	at com.sun.proxy.$Proxy12.findElement(Unknown Source) 	at DeleteThisToo.main(ThisDoesntWork.java:20) Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.id: username (tried for 4 second(s) with 1000 milliseconds interval) 	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:263) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231) 	at de.base.DriverEventListener.waitForElement(DriverEventListener.java:54) 	at de.base.DriverEventListener.beforeFindElement(DriverEventListener.java:142) 	... 15 more Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: #username For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'EBA-VM245', ip: '192.168.203.181', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151' Driver info: org.openqa.selenium.firefox.FirefoxDriver Command: [730222db-a063-4dd3-abc6-3711bc68ff76, findElement {using=id, value=username}] Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 93.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210927210923, moz:debuggerAddress: localhost:49191, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 7724, moz:profile: D:\Users\mmg\AppData\Local\..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.3, proxy: Proxy(), se:cdp: ws://localhost:49191/devtoo..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 730222db-a063-4dd3-abc6-3711bc68ff76 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:83) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:57) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:437) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375) 	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:174) 	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:171) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208) 	... 17 more  Some exception handling happens 1635408631281	Marionette	INFO	Stopped listening on port 54073 JavaScript error: resource:///modules/Interactions.jsm, line 201: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIUserIdleService.removeIdleObserver] ```  (Note that the JavaScript error in both cases started occurring upon upgrading from Selenium 3.141.59 to 4.0.0)  As you can see, in the given example above where we use the listener, exception handling occurs as expected, but the stacktraces of the caught exceptions still show up in the logs.   If the behavior described above (stacktraces printed to logs even when exception is handled) is the intended behavior for the setup with the listener indeed, is there any way to suppress log outputs in case the exception is handled (but ofc output it if an unintended TimeoutException etc occured at some other point)? Also, why do stacktraces occur in the setup with the listener whereas everything is as expected when not using the listener but identical code? Anything I'm doing wrong here that I might be missign?  ### What browsers and operating systems are you seeing the problem on?  Browser: Firefox Geckodriver version 0.30.0 OS: Windows 8.1 Selenium 4.0.0 (no grid)","closed","C-java,","leRobbe","2021-10-22T09:59:07Z","2022-06-18T00:12:00Z"
"","10851","[🐛 Bug]: ""socket hang up"" error occurring on Firefox driver.createCDPConnection call","### What happened?  I'm currently trying to capture JS exceptions on Selenium via the [Bidi API](https://www.selenium.dev/documentation/webdriver/bidirectional/bidi_api/#listen-to-js-exceptions) on Chrome and Firefox.  ``` const driver = await new Builder()   .forBrowser(name)   .usingServer(server)   .build();  try {   const cdpConnection = await driver.createCDPConnection('page')   await driver.onLogException(cdpConnection, function (event) {     console.log('print JS exception', event['exceptionDetails']);   })   } catch (error) {   console.error(error) } ```  Chrome works as expected, however when I specify a Firefox browser, I get the following error:  ``` Error: socket hang up     at connResetException (node:internal/errors:692:14)     at Socket.socketOnEnd (node:_http_client:478:23)     at Socket.emit (node:events:539:35)     at Socket.emit (node:domain:475:12)     at endReadableNT (node:internal/streams/readable:1345:12)     at processTicksAndRejections (node:internal/process/task_queues:83:21) {   code: 'ECONNRESET' } ```  I am running a Selenium Grid server on Docker based on the following images: - selenium/node-chrome:4.2.2-20220609 - selenium/node-firefox:4.2.2-20220609 - selenium/hub:4.2.2-20220609  I have also manually set the `SELENIUM_REMOTE_URL` env variable (based on the check in [`createCDPConnection`](https://github.com/SeleniumHQ/selenium/blob/8487998201cbd9f552a2ca4dbb385494813436af/javascript/node/selenium-webdriver/lib/webdriver.js#L1209-L1214)), originally I had not done this and was receiving the following error for both Chrome and Firefox (with different IP addresses):  ``` Error: connect ECONNREFUSED 172.18.0.3:4444     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1187:16) {   errno: -111,   code: 'ECONNREFUSED',   syscall: 'connect',   address: '172.18.0.3',   port: 4444 } ```  ### How can we reproduce the issue?  ```shell import { Builder, By, Browser } from 'selenium-webdriver';  const run = async () => {   const driver = await new Builder()     .forBrowser(Browser.FIREFOX)     .usingServer(""grid server address"")     .build();    try {     const cdpConnection = await driver.createCDPConnection('page')     await driver.onLogException(cdpConnection, function (event) {       console.log('print JS exception', event['exceptionDetails']);     })     } catch (error) {     console.error(error)   } }  run(); ```   ### Relevant log output  ```shell Error: socket hang up     at connResetException (node:internal/errors:692:14)     at Socket.socketOnEnd (node:_http_client:478:23)     at Socket.emit (node:events:539:35)     at Socket.emit (node:domain:475:12)     at endReadableNT (node:internal/streams/readable:1345:12)     at processTicksAndRejections (node:internal/process/task_queues:83:21) {   code: 'ECONNRESET' } ```   ### Operating System  Ubuntu 22.04 LTS  ### Selenium version  JavaScript ^4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 101.0  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  4.2.2","closed","needs-triaging,","dryu99","2022-07-05T17:43:37Z","2022-07-05T21:02:46Z"
"","10368","[🐛 Bug]: fails during the page refresh - ""Unable to route .../refresh""","### What happened?  I'm creating a RemoteWebDriver. I'm doing a page refresh as follows: ``` driver.navigate().refresh() ``` From time to time it fails with the following error message: ``` Unable to route (POST) /session/{someSessionId}/refresh Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'jenkins', ip: '192.168.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.14.248-189.473.amzn2.x86_64', java.version: '11.0.12' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [e86875ad9786ae4d3770a8b387cdd174, refresh {}] Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 97.0.4692.99, chrome: {chromedriverVersion: 97.0.4692.71 (adefa7837d02a..., userDataDir: /tmp/.com.google.Chrome.D6kzvT}, goog:chromeOptions: {debuggerAddress: localhost:42467}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(manual, http=172.17.0..., se:cdp: ws://172.28.0.2:4444/sessio..., se:cdpVersion: 97.0.4692.99, se:vnc: ws://172.28.0.2:4444/sessio..., se:vncEnabled: true, se:vncLocalAddress: ws://172.28.0.2:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: {someSessionId} ``` This issue doesn't happen every time. Instead, it fails occasionally. I'm using the following docker image with the Testcontainers library: `selenium/standalone-chrome:97.0-20220121`  ### How can we reproduce the issue?  ```shell Refresh the page with a remote web driver.  driver.navigate().refresh() ``` ```   ### Relevant log output  ```shell See above ```   ### Operating System  Linux  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97.0.4692.99  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriverVersion: 97.0.4692.71  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","plagov","2022-02-16T15:38:29Z","2022-04-03T00:10:35Z"
"","10875","[🐛 Bug]: Blank Web Page Dialog after a button clicked in IE mode on Edge , but working in manual way.","### What happened?  I'm Automating an Website in my organization using selenium Java in IE Mode on Edge, everything is working fine until I clicked this button it is showing blank webpage dialog pop window but when I tried this flow from beginning by manually clicking on that button it is going to open a new window the redirects to the payment page (_See 3rd image_ ) but that is not happening in automation and I've noticed that when I had start my application it displays login page that is working on **IE 11 mode** compatibility after performing login the home page is opened that is in **IE mode 5** and rest of the flow continuous in IE mode 5 only, till that button that is bringing a new webpage dialog popup window, I've checked that payment window is running on **IE 11 mode** while running the flow manually. So my question is the IE driver not able to switch modes from **IE 5 to IE 11** but at the beginning the mode got changed from **IE 11 to IE 5** .  ![image](https://user-images.githubusercontent.com/109272734/178983064-6783db43-2a51-4f16-980a-69b577307af4.png)   In this page that payment button is present, this page is running on **IE 5 Mode**  ![image](https://user-images.githubusercontent.com/109272734/178984485-1101c14c-c9d6-4333-840c-523993b14cda.png)  when I'm trying to do manually from the beginning and come to this page and click on the payment button then it opens new window that is running on **IE 11 Mode**  ![image](https://user-images.githubusercontent.com/109272734/178985056-0f4f85fc-1d22-443f-9d38-7958cea8dbf3.png)  But in the automation when I try to click on the payment button, then it is showing blank webpage dialog popup window as you can see in the first image. Please help me with this problem has been suffering from two days.  ### How can we reproduce the issue?  ```shell I'm Afraid that you cannot able to reproduce the flow because the application is running in Intranet. ```   ### Relevant log output  ```shell No errors were came, the issue is about the visibility of the window. ```   ### Operating System  Windows 10  ### Selenium version  Java 4.2.0.0  ### What are the browser(s) and version(s) where you see this issue?  Edge - 101.0.1210.39 and IE - 11  ### What are the browser driver(s) and version(s) where you see this issue?  Internet Explorer Driver Server - 32 bit -- 4.2.0.0 version  ### Are you using Selenium Grid?  No Selenium Grid is used","closed","G-msedgedriver,","IronFist000","2022-07-14T12:51:09Z","2022-07-14T14:20:44Z"
"","10553","[🐛 Bug]: Platform.fromString(""windows 11"") throws exception","### What happened?  I'm able to look up ""windows 10"", but not ""windows 11"" with Platform.fromString(""windows 11"").  Also with ""win11"".  Also, using Platform.valueOf(""WIN11"") throws an exception ( Platform.valueOf(""WIN10"") works ok).  This is very unexpected since https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/Platform.java shows the correct info for Windows 11:  ```   WIN11(""windows 11"", ""win11"") {     @Override     public Platform family() {       return WINDOWS;     }     @Override     public String toString() {       return ""Windows 11"";     }   }, ```   ### How can we reproduce the issue?  ```shell Run the static method searching for ""windows 11"" or ""win11"".  Platform.fromString(""windows 11""); or Platform.fromString(""win11"");  also  Platform. ```   ### Relevant log output  ```shell org.openqa.selenium.WebDriverException: Unrecognized platform: windows 11 Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: 'NUC9', ip: '10.10.0.109', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12' Driver info: driver.version: unknown 	at org.openqa.selenium.Platform.fromString(Platform.java:378) 	at tests.PlatformTest.test(PlatformTest.java:12) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725) 	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) 	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) 	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) 	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) 	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) 	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135) 	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) 	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) 	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) 	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) 	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) 	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) 	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95) 	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91) 	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60) 	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210) ```   ### Operating System  checked Java Junit5 test executed on Mac & Windows  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  doesn't apply  ### What are the browser driver(s) and version(s) where you see this issue?  doesn't apply  ### Are you using Selenium Grid?  yes - trying to specify Windows 11 platform :)","closed","","ibodog","2022-04-17T14:49:44Z","2022-05-18T00:12:07Z"
"","10844","selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 11","### What happened?  I was using following versions. But recently getting Webdriver exception error with closed status 11 & sometimes closed status 0. From gecko logs i cannot see anything specific. ``` Firefox version: 91.0 ESR gecko: 0.30.0 selenium: 4.1.0 ``` Selenium Logs: ``` service_log_path=settings.get('firefox.log') File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 183, in init keep_alive=True) File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 268, in init self.start_session(capabilities, browser_profile) File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 359, in start_session response = self.execute(Command.NEW_SESSION, parameters) File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 424, in execute self.error_handler.check_response(response) File ""/usr/local/lib/python3.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 0 ``` Also this ``` selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 11 service_log_path=settings.get('firefox.log') File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/firefox/webdriver.py"", line 183, in init keep_alive=True) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/webdriver.py"", line 268, in init self.start_session(capabilities, browser_profile) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/webdriver.py"", line 359, in start_session response = self.execute(Command.NEW_SESSION, parameters) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/webdriver.py"", line 424, in execute self.error_handler.check_response(response) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 11 ```   Geckodriver log: ``` 1656921737551	geckodriver	INFO	Listening on 127.0.0.1:35889 1656921738080	mozrunner::runner	INFO	Running command: ""/opt/firefox/firefox/firefox"" ""--marionette"" ""-headless"" ""--remote-debugging-port"" ""55057"" ""--remote-allow-hosts"" ""localhost"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileOmslwX"" *** You are running in headless mode. [GFX1-]: glxtest: libEGL missing eglGetDisplayDriverName [GFX1-]: glxtest: libEGL missing eglGetDisplayDriverName 1656921738653	Marionette	INFO	Marionette enabled [GFX1-]: RenderCompositorSWGL failed mapping default framebuffer, no dt console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /tmp/rust_mozprofileOmslwX/search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:55057/devtools/browser/650dec18-4d54-4348-9d10-465eab2c78b9 1656921741691	Marionette	INFO	Listening on port 38843 1656921741731	RemoteAgent	WARN	TLS certificate errors will be ignored for this session 1656922164158	Marionette	INFO	Stopped listening on port 38843 JavaScript error: resource:///modules/Interactions.jsm, line 209: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIUserIdleService.removeIdleObserver] !!! error running onStopped callback: TypeError: callback is not a function 1656922164525	RemoteAgent	ERROR	unable to stop listener: [Exception... ""Component returned failure code: 0x8000ffff (NS_ERROR_UNEXPECTED) [nsIWindowMediator.getEnumerator]""  nsresult: ""0x8000ffff (NS_ERROR_UNEXPECTED)""  location: ""JS frame :: chrome://remote/content/cdp/observers/TargetObserver.jsm :: stop :: line 64""  data: no] Stack trace: stop()@TargetObserver.jsm:64 unwatchForTabs()@TargetList.jsm:70 unwatchForTargets()@TargetList.jsm:37 destructor()@TargetList.jsm:109 stop()@CDP.jsm:104 close()@RemoteAgent.jsm:138 ```   ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary from selenium.webdriver.firefox.options import Options  profile = webdriver.FirefoxProfile() options = Options() options.headless = True drv = FirefoxDriver(         options=options,         firefox_profile=profile,         firefox_binary=FirefoxBinary(settings.get('firefox.binary')),         executable_path=settings.get('firefox.driver'),         service_log_path=settings.get('firefox.log')     ) drv.get(""https://google.com"") ```   ### Relevant log output  ```shell selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 11 service_log_path=settings.get('firefox.log') File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/firefox/webdriver.py"", line 183, in init keep_alive=True) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/webdriver.py"", line 268, in init self.start_session(capabilities, browser_profile) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/webdriver.py"", line 359, in start_session response = self.execute(Command.NEW_SESSION, parameters) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/webdriver.py"", line 424, in execute self.error_handler.check_response(response) File ""/usr/local/lib/python3.7/dist-packages/selenium-4.1.0-py3.7.egg/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 11    Geckodriver log: ``` 1656921737551	geckodriver	INFO	Listening on 127.0.0.1:35889 1656921738080	mozrunner::runner	INFO	Running command: ""/opt/firefox/firefox/firefox"" ""--marionette"" ""-headless"" ""--remote-debugging-port"" ""55057"" ""--remote-allow-hosts"" ""localhost"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileOmslwX"" *** You are running in headless mode. [GFX1-]: glxtest: libEGL missing eglGetDisplayDriverName [GFX1-]: glxtest: libEGL missing eglGetDisplayDriverName 1656921738653	Marionette	INFO	Marionette enabled [GFX1-]: RenderCompositorSWGL failed mapping default framebuffer, no dt console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /tmp/rust_mozprofileOmslwX/search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:55057/devtools/browser/650dec18-4d54-4348-9d10-465eab2c78b9 1656921741691	Marionette	INFO	Listening on port 38843 1656921741731	RemoteAgent	WARN	TLS certificate errors will be ignored for this session 1656922164158	Marionette	INFO	Stopped listening on port 38843 JavaScript error: resource:///modules/Interactions.jsm, line 209: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIUserIdleService.removeIdleObserver] !!! error running onStopped callback: TypeError: callback is not a function 1656922164525	RemoteAgent	ERROR	unable to stop listener: [Exception... ""Component returned failure code: 0x8000ffff (NS_ERROR_UNEXPECTED) [nsIWindowMediator.getEnumerator]""  nsresult: ""0x8000ffff (NS_ERROR_UNEXPECTED)""  location: ""JS frame :: chrome://remote/content/cdp/observers/TargetObserver.jsm :: stop :: line 64""  data: no] Stack trace: stop()@TargetObserver.jsm:64 unwatchForTabs()@TargetList.jsm:70 unwatchForTargets()@TargetList.jsm:37 destructor()@TargetList.jsm:109 stop()@CDP.jsm:104 close()@RemoteAgent.jsm:138 ``` ```   ### Operating System  Debian 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 91.0 ESR  ### What are the browser driver(s) and version(s) where you see this issue?  GeckDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","snehalwagh","2022-07-04T08:57:42Z","2022-07-04T18:16:43Z"
"","9978","[🐛 Bug]: FIND_ELEMENT command return a dict object value","### What happened?  I was updated my selenium version to 4.0.0 from 3.141.0. After that `webdriver.find_element()` returns dict value, but `WebElement` is expected in that case. Bug reproduced with attached code in 4.0.0 and not relevant for 3.141.0 version.  In images you can review the difference in that versions for return of `webdriver.find_element()`       ### How can we reproduce the issue?  ```shell from selenium.webdriver.chrome.webdriver import WebDriver from selenium.webdriver.common.by import By  if __name__ == '__main__':     driver = WebDriver()     driver.get('https://www.selenium.dev/')     element = driver.find_element(by=By.CSS_SELECTOR, value='input[type=search]')     element.click() ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""PycharmProjects/selenium_bug/main.py"", line 8, in      element.click() AttributeError: 'dict' object has no attribute 'click' ```   ### Operating System  MacOS Big Sur  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94.0.4606.81  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  -","closed","I-defect,","VladimirPodolyan","2021-10-22T16:57:46Z","2021-12-25T00:07:00Z"
"","10201","[🐛 Bug]: 'Open new tab' feature doesn't work when browser runs in 'incognito' mode","### What happened?  I was trying to open a new tab with Selenium 4.1.1: driver.switchTo().newWindow(WindowType.TAB); This command doesn't work when the browser starts in Incognito mode  ### How can we reproduce the issue?  ```shell start browser in incognito mode load any url try to open a new tab with above command ```   ### Relevant log output  ```shell org.openqa.selenium.WebDriverException: unknown error: unhandled inspector error: {""code"":-32000,""message"":""Failed to open new tab - no browser is open""} ```   ### Operating System  Windows 10  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  96.0.4664.45  ### Are you using Selenium Grid?  no","closed","G-chromedriver,","sagui14","2021-12-30T16:05:45Z","2022-01-30T00:07:14Z"
"","9969","[🐛 Bug]: Website code tabs are not working","### What happened?  i was trying to copy c# code  for selenium testing, when  I click on csharp tab to copy the code, it throws an error message in the console for jquery   ### How can we reproduce the issue?  ```shell i was trying to copy c# code  for selenium testing, when  I click on csharp tab to copy the code, it throws an error message in the console for jquery ```   ### Relevant log output  ```shell i was trying to copy c# code  for selenium testing, when  I click on csharp tab to copy the code, it throws an error message in the console for jquery ```   ### Operating System  windows 10  ### Selenium version  this bug is related to your website  ### What are the browser(s) and version(s) where you see this issue?  chrome, firefox  ### What are the browser driver(s) and version(s) where you see this issue?  chorime  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","sameertariq","2021-10-21T20:18:16Z","2021-11-25T00:06:42Z"
"","10615","[🐛 Bug]: Edge in IE mode not working for selenium 4","### What happened?  I was testing the usage of Edge in IE mode with Selenium 3.141 and 4.1.4 and on both instance below error got displayed  Setup 1:   ------------ Selenium 4.1.4 IEDriver: 4.0.0  (x64,x86)  Opened Edge driver (localhost ) then got below error Error :  ""Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Unexpected error launching Internet Explorer. Could not find an Internet Explorer window belonging to the process with ID 23304 within 10000 milliseconds.""  Setup2: ------------ Selenium 3.141.59 IEDriver: 4.0.0  (x64,x86)   Opened Edge driver (localhost ) then got below error Error:   ""Unexpected error launching Internet Explorer. Could not find an Internet Explorer window belonging to the process with ID 16072 within 10 milliseconds.""     ### How can we reproduce the issue?  ```shell  in Selenium 4.1.4 public static void main(String[] args)  {         System.setProperty(""webdriver.ie.driver"", ""C:\\TEMP\\Setups\\Drivers\\IEDriverServer_Win32_4.0.0\\IEDriverServer.exe"");         InternetExplorerOptions ieOptions = new InternetExplorerOptions();         ieOptions.attachToEdgeChrome();         ieOptions.withAttachTimeout(Duration.ofSeconds(10));         ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");     // Edge Browser directory path         WebDriver driver = new InternetExplorerDriver(ieOptions);         driver.get(""https://github.com/"");         driver.close();      }   in selenium 3.141  public static void main(String[] args)  {         System.setProperty(""webdriver.ie.driver"", ""C:\\TEMP\\Setups\\Drivers\\IEDriverServer_x64_4.0.0\\IEDriverServer.exe"");         InternetExplorerOptions edgeIe11Options = new InternetExplorerOptions();         Map ops = (Map) edgeIe11Options.getCapability(""se:ieOptions"");         ops.put(""ie.edgechromium"", true);         ops.put(""browserAttachTimeout"",10);          ops.put(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");     // Edge Browser directory path          edgeIe11Options.introduceFlakinessByIgnoringSecurityDomains();         edgeIe11Options.ignoreZoomSettings();         edgeIe11Options.enablePersistentHovering();         edgeIe11Options.takeFullPageScreenshot();         edgeIe11Options.disableNativeEvents();         edgeIe11Options.requireWindowFocus();         edgeIe11Options.destructivelyEnsureCleanSession();          edgeIe11Options.setCapability(""ignoreProtectedModeSettings"", true);         edgeIe11Options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.IGNORE);         WebDriver driver;         try {              driver = new InternetExplorerDriver(edgeIe11Options);             System.out.println(""==="" + driver.getWindowHandles().size());             wait = new WebDriverWait(driver, 25);             driver.get(""https://github.com/"");             driver.close();         }catch(Exception ex){             System.out.println(ex.getMessage());         }         System.out.println(""test"");      }   output selenium 3.141: Started InternetExplorerDriver server (64-bit) 4.0.0.0 Listening on port 29571 Only local connections are allowed Unexpected error launching Internet Explorer. Could not find an Internet Explorer window belonging to the process with ID 16072 within 10 milliseconds. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'XPE1-D36660', ip: '10.174.0.238', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301' Driver info: driver.version: InternetExplorerDriver remote stacktrace:  test ```   ### Relevant log output  ```shell Console output for selenium 4.1.4  Started InternetExplorerDriver server (64-bit) 4.0.0.0 Listening on port 50805 Only local connections are allowed Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Unexpected error launching Internet Explorer. Could not find an Internet Explorer window belonging to the process with ID 23304 within 10000 milliseconds. Build info: version: '4.1.4', revision: '535d840ee2' System info: host: 'XPE1-D36660', ip: '10.174.0.238', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_301' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Command: [null, newSession {capabilities=[Capabilities {browserName: internet explorer, se:ieOptions: {browserAttachTimeout: 10000, ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr...}}], desiredCapabilities=Capabilities {browserAttachTimeout: 10000, browserName: internet explorer, ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr..., se:ieOptions: {browserAttachTimeout: 10000, ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr...}}}] Capabilities {} 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:188) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:180) 	at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:156) 	at com.testing.testhooks.Setup.main(Setup.java:71)  Process finished with exit code 1 ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.4  ### What are the browser(s) and version(s) where you see this issue?  Edge  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver 4.0.0.0  ### Are you using Selenium Grid?  No","closed","I-defect,","shinojnmp","2022-05-06T06:07:45Z","2022-06-07T00:10:14Z"
"","10507","[🐛 Bug]: Exceptions talk about CDP 100 with selenium 4 and devtool v85","### What happened?  I was running my scripts in Chrome 99 and Edge 99 using Selenium 4 and dev tool V85, it worked fine. but after the update of Chrome and Edge to its higher version(100), I am getting exceptions that talk about CDP  ![image](https://user-images.githubusercontent.com/94300883/161509224-cfd1eaf2-2991-47bc-84f3-c51e8f2bbeca.png)  How can I overcome this issue with CDP, since we have other dependency with selenium 4, so it is not possible us to upgrade selenium version, also let us know why devtool v85 is not compatible with CDP100?  ### How can we reproduce the issue?  ```shell By using Selenium 4 and devtools v85 for launching edge and chrome browsers ```   ### Relevant log output  ```shell Apr 04, 2022 8:28:42 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch WARNING: Unable to find an exact match for CDP version 100, so returning the closest version found: a no-op implementation  Apr 04, 2022 8:28:42 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Unable to find CDP implementation matching 100.  Apr 04, 2022 8:28:42 AM org.openqa.selenium.chromium.ChromiumDriver lambda$new$3 WARNING: Unable to find version of CDP to use for . You may need to include a dependency on a specific version of the CDP using something similar to `org.seleniumhq.selenium:selenium-devtools-v86:4.0.0` where the version (""v86"") matches the version of the chromium-based browser you're using and the version number of the artifact is the same as Selenium's. org.openqa.selenium.devtools.DevToolsException: You are using a no-op implementation of the CDP. The most likely reason for this is that Selenium was unable to find an implementation of the CDP protocol that matches your browser. Please be sure to include an implementation on the classpath, possibly by adding a new (maven) dependency of `org.seleniumhq.selenium:selenium-devtools-vNN:4.0.0` where `NN` matches the major version of the browser you're using. Build info: version: '4.0.0', revision: '3a21814679' ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100, Edge 100  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 100.0.4896.60 , Edge 100.0.1185.29   ### Are you using Selenium Grid?  No","closed","needs-triaging,","kavyaks0422","2022-04-04T08:57:25Z","2022-05-05T00:11:08Z"
"","10354","[🐛 Bug]: When adding Selenium.WebDriver to C# project using VSCode, the project doesn't compile","### What happened?  I was following the steps here:  https://www.fleekitsolutions.com/use-selenium-c-visual-studio-code/  To use Selenium 4 with vs code. I installed .NET 5 and .NET 6 SDK.   I created the sample Hello World Project using `dotnet new console` and tried to import the Selenium.WebDriver package using NuGet, and run `dotnet restore`, I get the following error:  `error NU1100: Unable to resolve 'Selenium.WebDriver (>= 4.1.0)' for 'net6.0'.` ![vscode CS Selenium error](https://user-images.githubusercontent.com/20842027/153446555-60f02daf-6a29-4cde-9f49-fba6898bfa1e.png)    ### How can we reproduce the issue?  ```shell - Open vscode - Switch to .NET 5 to verify or use .NET 6 (the default and latest one installed) `dotnet new globaljson --sdk-version 5.0.405 --force` - Create sample dotnet project using `dotnet new console` - Run the project ==> is is good - Import Selnium.WebDriver using NuGet Add Package (Ctrl-Shift-P) - Run `dotnet restore` you will get this error: `error NU1100: Unable to resolve 'Selenium.WebDriver (>= 4.1.0)' for 'net6.0'` ```   ### Relevant log output - The OmniSharp server output will display the following: ```shell [warn]: OmniSharp.MSBuild.ProjectManager         Failed to load project file 'c:\Projects\Selenium\demoProject\FirsProj\FirsProj.csproj'. c:\Projects\Selenium\demoProject\FirsProj\FirsProj.csproj c:\Projects\Selenium\demoProject\FirsProj\FirsProj.csproj(0,0): Error: Unable to resolve 'Selenium.WebDriver (>= 4.1.0)' for '.NETFramework,Version=v4.8'. c:\Projects\Selenium\demoProject\FirsProj\FirsProj.csproj(0,0): Error: Unable to resolve 'Selenium.WebDriver (>= 4.1.0)' for '.NETFramework,Version=v4.8/win7-x86'.  [info]: OmniSharp.MSBuild.ProjectManager         Update project: FirsProj [warn]: OmniSharp.MSBuild.PackageDependencyChecker         FirsProj: Did not find 'Selenium.WebDriver' in lock file. ```   ### Operating System  Windows 10 Enterprise  ### Selenium version  C# with .NET 6 and VSCode  ### What are the browser(s) and version(s) where you see this issue?  98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.82  ### Are you using Selenium Grid?  N/A","closed","needs-triaging,","tarekahf","2022-02-10T16:07:26Z","2022-03-15T00:09:43Z"
"","10386","[🐛 Bug]: JS firefox driver crashes on setting a profile.","### What happened?  I want to use a custom firefox profile, so I set it according the [documentation](https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/firefox.html).  However then my code crashes with the provided error.  When I investigated why it is unable to serialize the object to JSON, I found `httpRequest.data` contains content of the specified firefox profile which is about 200MB in size and it reaches the maximum length of the string. However, the profile should be used for the browser, not be attached to the request body. Is it a bug, or I'm doing something wrong ? In python, using the custom profile works without problems.  ### How can we reproduce the issue?  ```shell const {By,Key,Builder} = require(""selenium-webdriver""); const firefox = require('selenium-webdriver/firefox');  async function example(){         let profile = '/home/kabell/.mozilla/firefox/4rmepnvo.default-release';        let options = new firefox.Options().setProfile(profile);         //To wait for browser to build and launch properly        let driver = await new Builder().forBrowser(""firefox"").setFirefoxOptions(options).build();          //To fetch http://google.com from the browser with our code.         await driver.get(""http://google.com"");          //It is always a safe practice to quit the browser after execution         await driver.quit();  }  example() ```   ### Relevant log output  ```shell /home/kabell/selenium/node_modules/selenium-webdriver/http/index.js:132       data = JSON.stringify(httpRequest.data)                   ^  RangeError: Invalid string length     at JSON.stringify ()     at HttpClient.send (/home/kabell/selenium/node_modules/selenium-webdriver/http/index.js:132:19)     at Executor.execute (/home/kabell/selenium/node_modules/selenium-webdriver/lib/http.js:470:33) ``` ```   ### Operating System  Ubuntu  ### Selenium version  Javascript 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97  ### What are the browser driver(s) and version(s) where you see this issue?  Geckodriver 0.30.0  ### Are you using Selenium Grid?  _No response_","open","I-defect,","kabell","2022-02-23T07:49:28Z","2022-07-08T12:24:28Z"
"","10649","[🐛 Bug]: Can not connect existing firefox process via RDP?","### What happened?  I want to attach selenium with existing firefox process via opened remote debugging port, but it failed.  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver import Firefox from selenium.webdriver.firefox.options import Options options = Options() options.add_experimental_option(""debuggerAddress"", ""127.0.0.1:6000"") # drivePath = r'C:\\geckodriver.exe' driver = webdriver.Firefox(options= options, executable_path = drivePath) ```   ### Relevant log output  ```shell AttributeError: 'Options' object has no attribute 'add_experimental_option' ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 101  ### What are the browser driver(s) and version(s) where you see this issue?  GeckDriver  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","hkfsc","2022-05-14T13:15:35Z","2022-06-14T00:13:00Z"
"","10914","[🐛 Bug]: Switching parent frames on a web page with more than 100 iframes takes 7.5 seconds","### What happened?  I used selenium to crawl data from a web page. The source code of this web page used more than 100 iframes. It is normal to switch subframes, but when switch back to the parent frame, sometimes it is normal while sometimes it takes too long, even 7.5 seconds. Is it because there are too many iframes on this page? Is there any solution.  ### How can we reproduce the issue?  ```shell driver.switch_to.parent_iframe(Element) driver.switch_to.default_contents ```   ### Relevant log output  ```shell switch to parent iframe costs 7.5s ```   ### Operating System  windows7  ### Selenium version  python  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chrome driver  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","dzl94","2022-07-29T23:01:38Z","2022-08-01T17:19:22Z"
"","10774","[🐛 Bug]:  Exception is thrown when using the getShadowHost function","### What happened?  I used selenium grid 4.2.2 Java + TestNG project Selenium client version 4.2.2  Tried to implement the shadow dom example from here   https://titusfortner.com/2021/11/22/shadow-dom-selenium.html  WebElement class has built in throw exception in the code   RemoteWebElement  org.openqa.selenium.UnsupportedCommandException: getElementShadowRoot throws this exception    MyProject also contains the appium 7.3.0 but I am using RemoteWebElement class which is not related to appium   ### How can we reproduce the issue?  ```shell just try to implement this solution for selenium 4   https://titusfortner.com/2021/11/22/shadow-dom-selenium.html ```   ### Relevant log output  ```shell org.openqa.selenium.UnsupportedCommandException: getElementShadowRoot Build info: version: '4.2.2', revision: '683ccb65d6' System info: host: 'NG-KFIR-B', ip: 'fe80:0:0:0:102c:a238:5dd7:48fc%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.7' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [1e4a75052f8190660f042b73d2b0971d, getElementShadowRoot {id=0.8449315288979184-1}] Capabilities {acceptInsecureCerts: true, acceptSslCerts: true, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 102.0.5005.61 (0e59bcc00cc4..., userDataDir: /tmp/.com.google.Chrome.JwyuJB}, cssSelectorsEnabled: true, databaseEnabled: false, enableLog: true, enableVNC: true, enableVideo: true, env: [ROOT_CA_DIGI=LS0tLS1CRUdJTi...], goog:chromeOptions: {debuggerAddress: localhost:37791}, handlesAlerts: true, hasTouchScreen: false, hostsEntries: [auth.digi.service:10.70.220.58, test-application.digi.servi..., sws-test-simulator.digi.ser..., sws-api.digi.service:10.70....], javascriptEnabled: true, locationContextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: Linux, platformName: ANY, proxy: Proxy(), rotatable: false, se:cdp: ws://172.20.0.4:4444/sessio..., se:cdpVersion: 102.0.5005.61, se:vnc: ws://172.20.0.4:4444/sessio..., se:vncEnabled: true, se:vncLocalAddress: ws://172.20.0.4:7900, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 102.0.5005.61, videoScreenSize: 1024x768, webStorageEnabled: true, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Element: [[RemoteWebDriver: chrome on ANY (1e4a75052f8190660f042b73d2b0971d)] -> css selector: #shadow_host] Session ID: 1e4a75052f8190660f042b73d2b0971d  	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:250) 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:588) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:257) 	at org.openqa.selenium.remote.RemoteWebElement.getShadowRoot(RemoteWebElement.java:251) ```   ### Operating System  client mac grid on ubuntu  ### Selenium version  4.2.2  ### What are the browser(s) and version(s) where you see this issue?  chrome > 96  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 102.  ### Are you using Selenium Grid?  4.2.2","closed","I-defect,","kfirbenhamou","2022-06-15T10:37:17Z","2022-07-23T00:13:06Z"
"","10805","[🐛 Bug]: RemoteWebDriver doesn't properly handle response from the external resource","### What happened?  I use some 3rd-party provided hub, for instance, BrowserStack. When I want to start a remote session, then I expect the session is started. I know that I forgot to put api key for my BrowserStack account, and status code of http response from BrowserStack is 401 (or 403).  ```csharp var driver = new RemoteWebDriver(uri, options); // where uri is the link to /wd/hub ```  This line of code was successfully executed without exceptions, but my browser session was not started.  ### How can we reproduce the issue?  ```shell Try to start a remote session with incorrect driver options. ```   ### Relevant log output  ```shell No output. ```   ### Operating System  any  ### Selenium version  any dotnet, selenium 4.0+  ### What are the browser(s) and version(s) where you see this issue?  any  ### What are the browser driver(s) and version(s) where you see this issue?  Remote  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","nvborisenko","2022-06-24T11:18:18Z","2022-07-13T18:18:26Z"
"","10888","[🐛 Bug]: Build RemoteWebDriver with ip Proxy get error","### What happened?  I use selenium grid to get a chrome driver with ip proxy，get error，i watch the code from error code，It is found that there is one more hcode parameter，resulting in a NullPointerException，You can see the log below，code location is in org.openqa.selenium.Proxy 107，I would like to know how to solve this problem, thank you     ### How can we reproduce the issue?  ```shell private WebDriver initChrome() throws MalformedURLException {         URL hubUrl = new URL(""http://127.0.0.1:4444"");         DesiredCapabilities capabilities = new DesiredCapabilities(DesiredCapabilities.chrome());         capabilities.setCapability(""pageLoadStrategy"", ""eager"");          ProxyPool proxyPool = BeanUtil.getBean(ProxyPool.class);         ProxyPool.ProxyWrapper proxyWrapper = proxyPool.getProxy();         InetSocketAddress address = (InetSocketAddress) proxyWrapper.getProxy().address();          String ipProxy = address.getHostName() + "":"" + address.getPort();          Proxy proxy = new Proxy();         proxy.setSslProxy(ipProxy);         capabilities.setCapability(CapabilityType.PROXY, proxy);           long start = System.currentTimeMillis();         WebDriver driver = new RemoteWebDriver(hubUrl, capabilities);         long end = System.currentTimeMillis();         log.info(""get_WebDriver_cost：{}"", end - start);         return driver;     } ```   ### Relevant log output  ```shell 09:39:59.303 WARN [SeleniumSpanExporter$1.lambda$export$1] - Error while creating session with the driver service. Stopping driver service: null 09:39:59.304 WARN [SeleniumSpanExporter$1.lambda$export$1] - java.lang.NullPointerException 	at org.openqa.selenium.Proxy.lambda$new$11(Proxy.java:107) 	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:684) 	at org.openqa.selenium.Proxy.(Proxy.java:105) 	at org.openqa.selenium.remote.ProtocolHandshake$Result.lambda$static$0(ProtocolHandshake.java:179) 	at org.openqa.selenium.remote.ProtocolHandshake$Result.(ProtocolHandshake.java:194) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$successHandler$1(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$3(ProtocolHandshake.java:151) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:153) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67) 	at org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:141) 	at org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:67) 	at org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:145) 	at org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:362) 	at org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52) 	at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64) 	at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.node.Node.execute(Node.java:240) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:829)  09:39:59.304 WARN [SeleniumSpanExporter$1.lambda$export$3] - {""traceId"": ""75d36aff28e74c0b776bfa618634ada9"",""eventTime"": 1658223599226860486,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:41331"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: null"",""exception.stacktrace"": ""java.lang.NullPointerException\n\tat org.openqa.selenium.Proxy.lambda$new$11(Proxy.java:107)\n\tat java.base\u002fjava.util.LinkedHashMap.forEach(LinkedHashMap.java:684)\n\tat org.openqa.selenium.Proxy.\u003cinit>(Proxy.java:105)\n\tat org.openqa.selenium.remote.ProtocolHandshake$Result.lambda$static$0(ProtocolHandshake.java:179)\n\tat org.openqa.selenium.remote.ProtocolHandshake$Result.\u003cinit>(ProtocolHandshake.java:194)\n\tat org.openqa.selenium.remote.W3CHandshakeResponse.lambda$successHandler$1(W3CHandshakeResponse.java:104)\n\tat org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)\n\tat org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$3(ProtocolHandshake.java:151)\n\tat java.base\u002fjava.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)\n\tat java.base\u002fjava.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)\n\tat java.base\u002fjava.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127)\n\tat java.base\u002fjava.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)\n\tat java.base\u002fjava.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)\n\tat java.base\u002fjava.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\n\tat java.base\u002fjava.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\n\tat java.base\u002fjava.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base\u002fjava.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:153)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:141)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:67)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:145)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:362)\n\tat org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52)\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""java.lang.NullPointerException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""proxy\"": {\""proxyAutoconfigUrl\"": null,\""socksUsername\"": null,\""socksPassword\"": null,\""autodetect\"": false,\""httpProxy\"": null,\""proxyType\"": \""MANUAL\"",\""noProxy\"": null,\""ftpProxy\"": null,\""socksProxy\"": null,\""hCode\"": 1049605579,\""class\"": \""org.openqa.selenium.Proxy\"",\""sslProxy\"": \""175.175.92.196:4261\""},\""se:noVncPort\"": 7900,\""browserName\"": \""chrome\"",\""pageLoadStrategy\"": \""eager\"",\""platformName\"": \""ANY\"",\""version\"": \""\"",\""platform\"": \""ANY\"",\""se:vncEnabled\"": true}\n""}} ```   ### Operating System  docker   ### Selenium version  4.4.2  ### What are the browser(s) and version(s) where you see this issue?  selenium/node-chrome:4.2.2  ### What are the browser driver(s) and version(s) where you see this issue?  selenium/node-chrome:4.2.2  ### Are you using Selenium Grid?  yes","open","I-defect,","wew25","2022-07-19T09:59:46Z","2022-08-03T21:31:25Z"
"","10883","[🐛 Bug]: Can't compile wait.until(ExpectedCondition) method","### What happened?  I use explicit wait for waiting in order to element to be clickable , but I get compile error when I write         Wait wait = new WebDriverWait(driver,Duration.ofSeconds(15);                wait.until(ExpectedConditions.elementToBeClickable(target));     ### How can we reproduce the issue?  ```shell I don't know ```   ### Relevant log output  ```shell /Users/dav/IdeaProjects/WikipediaTest/src/main/java/helpers/WaitHelper.java:26:21 java: method until in interface org.openqa.selenium.support.ui.Wait cannot be applied to given types;   required: java.util.function.Function","open","I-issue-template,","davbalabekyan","2022-07-17T14:44:12Z","2022-08-03T21:42:45Z"
"","10260","[🐛 Bug]: element.click() does not work when scaling is used","### What happened?  I use docker-selenium-novnc as a web browser for my phone, so that I can access some website like a computer. Everything works fine when using when the scaling is set to 100%.  When I read comics, some picture are slightly too big, so most of the time I set scaling at 90%.  ### How can we reproduce the issue?  ```shell set scale to 90% then click. ```   ### Relevant log output  ```shell the "".click()"" waits forever until I scale chrome back to default. ```   ### Operating System  docker for win  ### Selenium version  selenium/hub:4.1.0-20211123  ### What are the browser(s) and version(s) where you see this issue?  selenium/node-chrome:4.1.0-20211123  ### What are the browser driver(s) and version(s) where you see this issue?  selenium/node-chrome:4.1.0-20211123  ### Are you using Selenium Grid?  selenium/hub:4.1.0-20211123","closed","G-chromedriver,","TomXRX","2022-01-18T07:12:09Z","2022-02-19T00:09:39Z"
"","9962","[🐛 Bug]: I use ChromeDriver to getScreenshot, but it gets stuck after running for a while","### What happened?  I use ChromeDriver to getScreenshot, but it gets stuck after running for a while. I need to use tasks to loop screenshots. There is no problem at the beginning, but it will get stuck later  ### How can we reproduce the issue?  ```shell     public void takeScreenshot(Input input) {         driver.get(input.processLink());          TimeUnit.SECONDS.sleep(1);          File file = driver.getScreenshotAs(OutputType.FILE);         String path = StrUtil.format(""{}/{}"", DirectoryUtil.home(), V2raySEConst.SHARE_PNG);         log.info(""path = {}"", path);         FileUtil.copy(file, new File (path), true);         FileUtil.del(file); //        driver.close();     } ```   ### Relevant log output  ```shell System info: host: 'iZj6c2e1aik19scpt0a22tZ', ip: '172.31.216.142', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-86-generic', java.version: '11.0.11' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.81 (5a03c5f103317..., userDataDir: /tmp/.org.chromium.Chromium...}, goog:chromeOptions: {debuggerAddress: localhost:43241}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 2b5ddc486f7b4935c74e111686d4f0b4 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:na] 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:na] 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:na] 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[na:na] 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) ~[selenium-remote-driver-3.141.59.jar!/:na] 	at com.v2rayse.share.utils.HtmlUtil.takeScreenshot(HtmlUtil.java:37) ~[classes!/:na] 	at com.v2rayse.share.utils.ShareUtil.share(ShareUtil.java:19) ~[classes!/:na] 	at com.v2rayse.share.task.ShareTask.updateShareCode(ShareTask.java:31) ~[classes!/:na] 	at jdk.internal.reflect.GeneratedMethodAccessor53.invoke(Unknown Source) ~[na:na] 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na] 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) ~[na:na] 	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84) ~[spring-context-5.3.10.jar!/:5.3.10] 	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54) ~[spring-context-5.3.10.jar!/:5.3.10] 	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:95) ~[spring-context-5.3.10.jar!/:5.3.10] 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) ~[na:na] 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na] 	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na] 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na] 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na] 	at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na] ```   ### Operating System  ubuntu 20.04  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 94.0.4606.81  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.81  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","changfeng2021","2021-10-21T02:15:57Z","2021-11-21T00:06:56Z"
"","10318","[🐛 Bug]: Send_keys does not accept underscore when I use chromedriver 98","### What happened?  I use a python binding of selenium. After updating the version of chromedriver from 97 to 98, I found that `send_keys` raised the following exception when I include underscore into the input value.  `selenium.common.exceptions.WebDriverException: Message: unknown error: Cannot construct KeyEvent from non-typeable key`  Could anyone take a look at the problem? Thank you  Note: it may be reproducible only on macOS.  ### How can we reproduce the issue?  ```shell driver = webdriver.Chrome() driver.get('https://www.google.com/') search_box = driver.find_element_by_name(""q"") search_box.send_keys('foo') search_box.send_keys('foo_boo') ```   ### Relevant log output  ```shell --------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last)  in        3 search_box = driver.find_element_by_name(""q"")       4 search_box.send_keys('foo') ----> 5 search_box.send_keys('foo_boo')  ~/opt/anaconda3/envs/py37/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py in send_keys(self, *value)     477         self._execute(Command.SEND_KEYS_TO_ELEMENT,     478                       {'text': """".join(keys_to_typing(value)), --> 479                        'value': keys_to_typing(value)})     480      481     # RenderedWebElement Items  ~/opt/anaconda3/envs/py37/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py in _execute(self, command, params)     626             params = {}     627         params['id'] = self._id --> 628         return self._parent.execute(command, params)     629      630     def find_element(self, by=By.ID, value=None):  ~/opt/anaconda3/envs/py37/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)     318         response = self.command_executor.execute(driver_command, params)     319         if response: --> 320             self.error_handler.check_response(response)     321             response['value'] = self._unwrap_value(     322                 response.get('value', None))  ~/opt/anaconda3/envs/py37/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)     240                 alert_text = value['alert'].get('text')     241             raise exception_class(message, screen, stacktrace, alert_text) --> 242         raise exception_class(message, screen, stacktrace)     243      244     def _value_or_default(self, obj, key, default):  WebDriverException: Message: unknown error: Cannot construct KeyEvent from non-typeable key   (Session info: chrome=98.0.4758.80) ```   ### Operating System  macOS  ### Selenium version  Python 3.13.0  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 98.0.4758.80  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.48  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","JackAllTrades-MoN","2022-02-03T05:25:17Z","2022-02-03T23:03:37Z"
"","10142","[🐛 Bug]: Unable to switch back to default window","### What happened?  I upgraded to selenium 4.1.0 binding. When executing a test case which has steps: To Switch to iframe  Enter some value Switch back to defaultWindow  Click a button  Passes on local machine but when executing on selenium grid 4.1.0, it fails with error ""Error communicating with the remote browser. It may have died.""  Test case fails at ""Switch back to defaultWindow"" step.   ### How can we reproduce the issue?  ```shell Go to site with Iframe Switch to iframe  Enter some value (e.g. work in iframe) Switch back to defaultWindow (This is the step test case fails) Click a button ```   ### Relevant log output  ```shell org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'MMODI-CHI', ip: '192.168.1.62', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.5' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [05340cc11c0d83ffe3bd398767a23dc4af5601a0, switchToFrame {id=null}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 96.0.4664.35 (8df3babf8da8f..., userDataDir: /var/folders/yj/h3bj394n2tn...}, goog:chromeOptions: {debuggerAddress: localhost:53048}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), se:cdpVersion: 96.0.4664.45, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 05340cc11c0d83ffe3bd398767a23dc4af5601a0 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:583) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.defaultContent(RemoteWebDriver.java:1042) ```   ### Operating System  Mac BigSur  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  4.1.0","closed","needs-triaging,","MihirModiAC","2021-12-13T19:56:16Z","2022-01-20T00:07:19Z"
"","9933","[🐛 Bug]: Python Selenium 4.0.0 - send_keys method is throwing an error on an input [type=file] element","### What happened?  I upgraded to selenium 4.0.0 and when the tests is executing the `send_keys` method on a input [type=file] element selenium is throwing an error.         ### How can we reproduce the issue?  ```shell On an input[type=file] element set value using `send_keys` method and passing a valid file path. I am using Pytest and POM approach.  ` my_page.my_file_input.send_keys('/my-files-directory/file.csv') `  Code above works in selenium 3.141.0. ```   ### Relevant log output  ```shell my_page.file_input.send_keys_to_input_file(file_path)  tests/smoke/test_pom_smoke.py:2023:  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  page_objects/base_element.py:89: in send_keys_to_input_file     self._element.send_keys(input) /home/vagrant/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:536: in send_keys     remote_files.append(self._upload(file)) /home/vagrant/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:768: in _upload     raise e /home/vagrant/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:759: in _upload     return self._execute(Command.UPLOAD_FILE, {'file': content})['value'] /home/vagrant/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:693: in _execute     return self._parent.execute(command, params) /home/vagrant/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:418: in execute     self.error_handler.check_response(response) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   self =  response = {'status': 404, 'value': '{""value"":{""error"":""unknown command"",""message"":""unknown command: unknown command: session/184...n#10 0x564dc12f52ab \\u003Cunknown>\\n#11 0x564dc0d8d300 \\u003Cunknown>\\n#12 0x7fcf6ae6d0b3 __libc_start_main\\n""}}'}      def check_response(self, response: Dict[str, Any]) -> None:         """"""         Checks that a JSON response from the WebDriver does not have an error.              :Args:          - response - The JSON response from the WebDriver server as a dictionary            object.              :Raises: If the response contains an error message.         """"""         status = response.get('status', None)         if not status or status == ErrorCode.SUCCESS:             return         value = None         message = response.get(""message"", """")         screen: str = response.get(""screen"", """")         stacktrace = None         if isinstance(status, int):             value_json = response.get('value', None)             if value_json and isinstance(value_json, str):                 import json                 try:                     value = json.loads(value_json)                     if len(value.keys()) == 1:                         value = value['value']                     status = value.get('error', None)                     if not status:                         status = value.get(""status"", ErrorCode.UNKNOWN_ERROR)                         message = value.get(""value"") or value.get(""message"")                         if not isinstance(message, str):                             value = message                             message = message.get('message')                     else:                         message = value.get('message', None)                 except ValueError:                     pass              exception_class: Type[WebDriverException]         if status in ErrorCode.NO_SUCH_ELEMENT:             exception_class = NoSuchElementException         elif status in ErrorCode.NO_SUCH_FRAME:             exception_class = NoSuchFrameException         elif status in ErrorCode.NO_SUCH_WINDOW:             exception_class = NoSuchWindowException         elif status in ErrorCode.STALE_ELEMENT_REFERENCE:             exception_class = StaleElementReferenceException         elif status in ErrorCode.ELEMENT_NOT_VISIBLE:             exception_class = ElementNotVisibleException         elif status in ErrorCode.INVALID_ELEMENT_STATE:             exception_class = InvalidElementStateException         elif status in ErrorCode.INVALID_SELECTOR \                 or status in ErrorCode.INVALID_XPATH_SELECTOR \                 or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:             exception_class = InvalidSelectorException         elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:             exception_class = ElementNotSelectableException         elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:             exception_class = ElementNotInteractableException         elif status in ErrorCode.INVALID_COOKIE_DOMAIN:             exception_class = InvalidCookieDomainException         elif status in ErrorCode.UNABLE_TO_SET_COOKIE:             exception_class = UnableToSetCookieException         elif status in ErrorCode.TIMEOUT:             exception_class = TimeoutException         elif status in ErrorCode.SCRIPT_TIMEOUT:             exception_class = TimeoutException         elif status in ErrorCode.UNKNOWN_ERROR:             exception_class = WebDriverException         elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:             exception_class = UnexpectedAlertPresentException         elif status in ErrorCode.NO_ALERT_OPEN:             exception_class = NoAlertPresentException         elif status in ErrorCode.IME_NOT_AVAILABLE:             exception_class = ImeNotAvailableException         elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:             exception_class = ImeActivationFailedException         elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:             exception_class = MoveTargetOutOfBoundsException         elif status in ErrorCode.JAVASCRIPT_ERROR:             exception_class = JavascriptException         elif status in ErrorCode.SESSION_NOT_CREATED:             exception_class = SessionNotCreatedException         elif status in ErrorCode.INVALID_ARGUMENT:             exception_class = InvalidArgumentException         elif status in ErrorCode.NO_SUCH_COOKIE:             exception_class = NoSuchCookieException         elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:             exception_class = ScreenshotException         elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:             exception_class = ElementClickInterceptedException         elif status in ErrorCode.INSECURE_CERTIFICATE:             exception_class = InsecureCertificateException         elif status in ErrorCode.INVALID_COORDINATES:             exception_class = InvalidCoordinatesException         elif status in ErrorCode.INVALID_SESSION_ID:             exception_class = InvalidSessionIdException         elif status in ErrorCode.UNKNOWN_METHOD:             exception_class = UnknownMethodException         else:             exception_class = WebDriverException         if not value:             value = response['value']         if isinstance(value, str):             raise exception_class(value)         if message == """" and 'message' in value:             message = value['message']              screen = None  # type: ignore[assignment]         if 'screen' in value:             screen = value['screen']              stacktrace = None         st_value = value.get('stackTrace') or value.get('stacktrace')         if st_value:             if isinstance(st_value, str):                 stacktrace = st_value.split('\n')             else:                 stacktrace = []                 try:                     for frame in st_value:                         line = self._value_or_default(frame, 'lineNumber', '')                         file = self._value_or_default(frame, 'fileName', '')                         if line:                             file = ""%s:%s"" % (file, line)                         meth = self._value_or_default(frame, 'methodName', '')                         if 'className' in frame:                             meth = ""%s.%s"" % (frame['className'], meth)                         msg = ""    at %s (%s)""                         msg = msg % (meth, file)                         stacktrace.append(msg)                 except TypeError:                     pass         if exception_class == UnexpectedAlertPresentException:             alert_text = None             if 'data' in value:                 alert_text = value['data'].get('text')             elif 'alert' in value:                 alert_text = value['alert'].get('text')             raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here >       raise exception_class(message, screen, stacktrace) E       selenium.common.exceptions.WebDriverException: Message: unknown command: unknown command: session/1847307651b337155c2084443139148d/se/file E       Stacktrace: E       #0 0x564dc12d08f3  E       #1 0x564dc0db5ba8  E       #2 0x564dc0e065e4  E       #3 0x564dc0e06347  E       #4 0x564dc0d8d774  E       #5 0x564dc0d8e5a0  E       #6 0x564dc12ffc3e  E       #7 0x564dc13156b7  E       #8 0x564dc1300b95  E       #9 0x564dc1316b05  E       #10 0x564dc12f52ab  E       #11 0x564dc0d8d300  E       #12 0x7fcf6ae6d0b3 __libc_start_main  /home/vagrant/.local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py:243: WebDriverException =============================== warnings summary =============================== DeprecationWarning: desired_capabilities has been deprecated, please pass in an Options object with options kwarg     driver = webdriver.remote.webdriver.WebDriver(  -- Docs: https://docs.pytest.org/en/stable/warnings.html vagrant@linux:/testing$ ```   ### Operating System  Ubuntu 20.04.2 LTS  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  It's an electron application that uses Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  _No response_","closed","R-awaiting answer,","jjvsevilla","2021-10-15T01:31:26Z","2021-11-20T00:06:34Z"
"","10599","[🐛 Bug]: IEDriver.WindowHandles does not return all handles","### What happened?  I updated Selenium to 4. I test legacy app that runs only on IE. Now IE will be closed down and I need to switch to MS Egde in capability mode. My tests during execution need to switch to new browser windows and uses function IWebDriver.WindowHandles to do it (code below).  COmparing to Selenium 3 I had to add new options for a driver to run test on Edge like this:  ``` var options = new InternetExplorerOptions(); options.AttachToEdgeChrome = true; options.EdgeExecutablePath = @""\msedge.exe"";  ``` Then I use code like this to switch between browser windows when user open new browser window in tested application:  ``` public Context SwitchToNewIEWindow(string windowTitle, bool isEqual = true) { for (int i = 0; i < context.GetTimeout().Seconds; i++) { try { var ieWindowHandlers = context.GetDriver().WindowHandles; foreach(var handler in ieWindowHandlers) { var window = context.GetDriver().SwitchTo().Window(handler); bool condition = isEqual ? window.Title == windowTitle : window.Title.Contains(windowTitle); if (condition) { context.SetDriver(window); context.SetCurrentWindow(windowTitle); return context; } } } catch (Exception) { context.Wait(1); } } throw new Exception($""No window found with title: {windowTitle}"");      }  ``` In Selenium 3 everything works fine and WindowHandles function returns 2 handles. In Selenium 4 and IEDriver in Edge mode this function returns only 1 handle of main browser window. In my case waiting a few seconds ( as it is recommended in guidelines) does not change anything. Even after a minute I still get only handle of first window. Any suggestions how to make it work properly again in Selenium 4.  I am aware of issue #8868 but this one was closed. In my opinion the error still exists and should be fixed somehow.  ### How can we reproduce the issue?  ```shell public Context SwitchToNewIEWindow(string windowTitle, bool isEqual = true) { for (int i = 0; i < context.GetTimeout().Seconds; i++) { try { var ieWindowHandlers = context.GetDriver().WindowHandles; foreach(var handler in ieWindowHandlers) { var window = context.GetDriver().SwitchTo().Window(handler); bool condition = isEqual ? window.Title == windowTitle : window.Title.Contains(windowTitle); if (condition) { context.SetDriver(window); context.SetCurrentWindow(windowTitle); return context; } } } catch (Exception) { context.Wait(1); } } throw new Exception($""No window found with title: {windowTitle}"");      } ```   ### Relevant log output  ```shell var ieWindowHandlers = context.GetDriver().WindowHandles; return 1 handle of first browser window and ignore any other browser window that is open within application. ``` I have also tried to use NewWindow function to open new window within my test but unfortunately this function open IE browser instead of new Edge window whitch I think is another error :   context.GetDriver().SwitchTo().NewWindow(WindowType.Window);   ### Operating System  Windows 10  ### Selenium version  Selenium.WebDriver 4.1,1  ### What are the browser(s) and version(s) where you see this issue?  Wersja 101.0.1210.32 - 64bit  ### What are the browser driver(s) and version(s) where you see this issue?  Selenium.WebDriver.IEDriver 4.0.0.1  ### Are you using Selenium Grid?  No","closed","G-msedgedriver,","p-system","2022-05-02T08:33:17Z","2022-06-02T00:13:20Z"
"","10042","[🐛 Bug]: Chrome and Proxy authentication seems not to work?","### What happened?  I try to access a url that needs a corporate proxy with authentication in order to be accessed. Chrome seems to go through proxy, but I get the authentication prompt to input the credentials, that I would expect to be automatically set programmatically via my Proxy object:  ![image](https://user-images.githubusercontent.com/329338/141801262-6a3fbb42-6b08-4213-852d-cf7f4f0b968a.png)  See more on the simple example below. Code obviously fails on line 27 as it tries to find an element but actually what I have is the prompt on the sceen above.  ### How can we reproduce the issue?  ```shell import org.openqa.selenium.By; import org.openqa.selenium.Proxy; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions;  public class accessingAurlViaCorporateProxy {  	public static void main(String[] args) {      	System.setProperty(""webdriver.chrome.driver"", ""/pathTo/chromedriver"");     	         ChromeOptions options = new ChromeOptions(); 		Proxy proxy = new Proxy(); 		proxy.setSocksUsername(""myProxyUsername""); 		proxy.setSocksPassword(""myProxyPassword""); 		proxy.setSslProxy(""corporateProxy:port""); 		options.setCapability(""proxy"", proxy); 		options.setAcceptInsecureCerts(true); 		 		WebDriver driver = new ChromeDriver(options);  		try { 			driver.get(""https://urlIamTryingToAccess""); 			driver.findElement(By.name(""username"")).sendKeys(""aUsername""); 		} catch (Exception e) { 			e.printStackTrace(); 		} finally { 			driver.quit(); 		} 	} } ```   ### Relevant log output  ```shell Starting ChromeDriver 95.0.4638.69 (6a1600ed572fedecd573b6c2b90a22fe6392a410-refs/branch-heads/4638@{#984}) on port 38327 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Nov 15, 2021 4:48:50 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Nov 15, 2021 4:48:50 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 95 org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""*[name='username']""}   (Session info: chrome=95.0.4638.69) For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'lbmw3573-ath', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.10-051010-generic', java.version: '1.8.0_292' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [5be7cbc793417e049d7849b3fc05836f, findElement {using=name, value=username}] Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 95.0.4638.69 (6a1600ed572fe..., userDataDir: /tmp/.com.google.Chrome.B2llvb}, goog:chromeOptions: {debuggerAddress: localhost:38317}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(manual, ssl=custproxy..., se:cdp: ws://localhost:38317/devtoo..., se:cdpVersion: 95.0.4638.69, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 5be7cbc793417e049d7849b3fc05836f 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375) 	at com.gt.experiment.accessingAurlViaCorporateProxy.main(accessingAurlViaCorporateProxy.java:27) ```   ### Operating System  Ubuntu 18  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.69  ### Are you using Selenium Grid?  nope","closed","C-java,","gogonutsss","2021-11-15T14:51:53Z","2022-01-07T00:07:35Z"
"","10226","[🐛 Bug]: Chrome WebDriver service argument unexpected","### What happened?  i try  ``` chrome_service: Service = Service(executable_path=chrome_driver_path) chrome_driver: WebDriver = WebDriver(service=chrome_service, options=chrome_opt) ```  pycharm warning apper : Unexpected argument on service parameter    ### How can we reproduce the issue?  ```shell import chromedriver_autoinstaller from selenium.webdriver.chrome.webdriver import WebDriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.chrome.service import Service   chrome_driver_path = chromedriver_autoinstaller.install()  chrome_opt: Options = Options() chrome_opt.add_argument(""--incognito"")  chrome_service: Service = Service(executable_path=chrome_driver_path)  chrome_driver: WebDriver = WebDriver(service=chrome_service, options=chrome_opt) chrome_driver.get('https://www.python.org/') chrome_driver.close() ```   ### Relevant log output  ```shell Unexpected argument ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  _No response_ ![error](https://user-images.githubusercontent.com/44334543/148430320-af6c4e70-446f-443d-ba2f-04da9621d9ed.png)","closed","needs-triaging,","whwotjd9090","2022-01-06T18:10:36Z","2022-02-07T00:07:17Z"
"","10089","[🐛 Bug]: (dotnet) Selenium can't handle with default field value","### What happened?  I trigged the bug using filter textbox - elemnt on  the web. In our company, we developer the ronusing react. With  react there is dependence with a field call : default value.  In any advanced framework or libary has this feature  When I filtering the table with the filter textbox elemnt, the test fails.  First I clear the text in th filterring text box elemnt, because I dont want to use the defult value , to filter. Then I send keys - the filterring value that I want. Whereupon, the text in the text box value is chaining.  For example : the default value in the text box elemt is : `Shahar`. I clear that value and send key with the value : `AutomationDeveloper`. But, react using the default value with the value I sent using the SendKeys() method.So, in the filtering box the value is : `ShaharAutomationDeveloper`  ### How can we reproduce the issue?  ```shell You can support the default field attribute and enusre the send keys method or clear method (I think the problem  is in the sendKeysmethod) works with new frameworks or libaries ablilities.  The solution I found his to send the keys : ctrl + a. and then the key : delete ```   ### Relevant log output  ```shell The log output is because I filltering wrong data because selenium chains strings ```   ### Operating System  Windows 10  ### Selenium version  dotnet core 3.1 and dotnet 5  ### What are the browser(s) and version(s) where you see this issue?  All chrome versions  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome driver 80 until present version  ### Are you using Selenium Grid?  Also using seleium gird 4","closed","I-defect,","ShaharM7","2021-11-26T13:20:05Z","2022-01-03T00:07:40Z"
"","10249","[🐛 Bug]: Grid Documentation issue, missing quotationsmarks and backslashes","### What happened?  I tried to set up my own grid with the help of documentation and command-line help. Some of the examples are not in the correct syntax of a toml file (checked with the linked validator)  ### How can we reproduce the issue?  ```shell Check the generated output in the toml validator ```   ### Relevant log output  ```shell Unable to parse... ```   ### Operating System  Ubuntu  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  not relevant  ### What are the browser driver(s) and version(s) where you see this issue?  not relevant  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","boris779","2022-01-14T09:41:21Z","2022-02-20T00:10:26Z"
"","10394","[🐛 Bug]: Can't change height/width with ""Save as PDF""","### What happened?  I tried to save a page by ""print - Save as PDF"". I want to save it with 'legal' page size format, so I tried with ""hegith_microns"" as 355600, ""width_microns"" as 215900. And it turns out, no matter how much I changed it, it just save as default size.     ### How can we reproduce the issue?  ```shell I tried this code:       chrome_options = webdriver.ChromeOptions()      settings = {         ""recentDestinations"": [{             ""id"": ""Save as PDF"",             ""origin"": ""local"",             ""account"": """"         }],         ""selectedDestinationId"": ""Save as PDF"",         ""version"": 2,         ""mediaSize"": {             ""height_microns"": 355600,             ""width_microns"": 215900,             ""name"": ""NA_legal"",             ""custom_display_name"": ""legal""         },         ""isCssBackgroundEnabled"": True,         ""isHeaderFooterEnabled"": True,     }       prefs = {'printing.print_preview_sticky_settings.appState' : json.dumps(settings)}      chrome_options = webdriver.ChromeOptions()     chrome_options.add_argument('--kiosk-printing')     chrome_options.add_experimental_option('prefs', prefs)      driver = webdriver.Chrome(""chromedriver.exe"", options=chrome_options)     driver.get('page')     driver.execute_script('window.print();')  I've tried several other pages with enough height to tell diffrence. ```   ### Relevant log output  ```shell None have occured. Seems to it just get a height/width value as ""unavailable value"" and try with default size. ```   ### Operating System  Windows 10  ### Selenium version  Python 3.9 - selenium 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.102  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","knightas7","2022-02-24T05:00:38Z","2022-03-29T00:11:29Z"
"","10728","[🐛 Bug]: loading 2 or more UNPACKED chrome extensions using Selenium and python loads only last one","### What happened?  I tried to load 2 (or more) UNPACKED chrome extensions using Selenium and python 3.10. Selenium loaded only the last one instead of 2.  ### How can we reproduce the issue?  ```shell Below code adds only the last extension so one extension is added instead of two. SO this line is executed only:   options.add_argument(""load-extension=/Users/path/Downloads/python/proj/folder/ext_2_folder"") ```   Full code to reproduce the issue:  ```  from selenium.webdriver.chrome.service import Service from selenium import webdriver  options = webdriver.ChromeOptions()  options.add_argument(""load-extension=/Users/path/Downloads/python/proj/folder/ext_1_folder"") options.add_argument(""load-extension=/Users/path/Downloads/python/proj/folder/ext_2_folder"") s = Service('/Users/path/Downloads/python/proj/folder/chromedriver')  driver = webdriver.Chrome(service=s, options=options) driver.get(""chrome://extensions"")  ``` ```   ### Relevant log output  ```shell no output ```   ### Operating System  macos monterey  ### Selenium version  4.1.5  ### What are the browser(s) and version(s) where you see this issue?  I tested on Chrome 102 (newest one)  ### What are the browser driver(s) and version(s) where you see this issue?  102.0.5005.61  ### Are you using Selenium Grid?  no","closed","I-defect,","meeffe","2022-06-02T09:30:19Z","2022-07-17T00:12:20Z"
"","10813","[🐛 Bug]: Trying to launch Firefox webdriver","### What happened?  I tried to launch Firefox webdriver with python API, to retrieve information on a web page. Previously I was using this code snippet on a Mac and everything was working fine. When switching to Linux I changed the geckodriver binary to be the one for Linux. But I got this issue where it says it doesn't find the marionette port. I saw this thread on stackoverflow: [https://stackoverflow.com/questions/72374955/failed-to-read-marionette-port-when-running-selenium-geckodriver-firefox-a](url) which I thought might be related to my problem. So I tried to run the script in super user mode. It didn't change anything  [EDIT] I installed Ubuntu about 10 days ago from an iso image from ubuntu.com: [https://ubuntu.com/download/desktop/thank-you?version=22.04&architecture=amd64](url) and Firefox was already installed with it. I downloaded geckodriver from [https://github.com/mozilla/geckodriver/releases](url) and copied it in some directory in my project. I also tried to put it at some moment in /usr/bin but it didn't change anything. I tried right now by changing geckodriver path to be absolute: ""/home/clement/Desktop/mobilite-electrique.tech/bin"". It did the same result.  The code snippet is the following:  `from selenium import webdriver 	from selenium.webdriver.firefox.service import Service 	from selenium.webdriver.common.by import By 	from selenium.webdriver.firefox.options import Options as FirefoxOptions 	 	from selenium.webdriver.support.ui import WebDriverWait 	from selenium.webdriver.support import expected_conditions as EC  	import time   	s = Service('../../../bin/geckodriver') 	firefox_options = FirefoxOptions() 	firefox_options.add_argument(""--headless"") 	driver = webdriver.Firefox(service=s, options = firefox_options)  	driver.implicitly_wait(5) 	URL = input_url  	driver.get(URL)  	# wait for the first element matching the passed locator presence. 	# We use dot here because we want a class 	wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, '.' + vehicle_base_locator)))  	# add a short delay to make all the elements loaded 	time.sleep(0.6)`   ### How can we reproduce the issue?  ```shell from selenium import webdriver 	from selenium.webdriver.firefox.service import Service 	from selenium.webdriver.common.by import By 	from selenium.webdriver.firefox.options import Options as FirefoxOptions 	 	from selenium.webdriver.support.ui import WebDriverWait 	from selenium.webdriver.support import expected_conditions as EC  	import time   	s = Service('../../../bin/geckodriver') 	firefox_options = FirefoxOptions() 	firefox_options.add_argument(""--headless"") 	driver = webdriver.Firefox(service=s, options = firefox_options)  	driver.implicitly_wait(5) 	URL = input_url  	driver.get(URL)  	# wait for the first element matching the passed locator presence. 	# We use dot here because we want a class 	wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, '.' + vehicle_base_locator)))  	# add a short delay to make all the elements loaded 	time.sleep(0.6) ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""/home/clement/Desktop/mobilite-electrique.tech/Project related information/web_scrapping/web_scraping_scripts/scrap_web.py"", line 344, in      scrap_web_global(*sys.argv[1:])   File ""/home/clement/Desktop/mobilite-electrique.tech/Project related information/web_scrapping/web_scraping_scripts/scrap_web.py"", line 247, in scrap_web_global     driver = webdriver.Firefox(service=s, options = firefox_options)   File ""/home/clement/Desktop/mobilite-electrique.tech/lib/python3.10/site-packages/selenium/webdriver/firefox/webdriver.py"", line 177, in __init__     super().__init__(   File ""/home/clement/Desktop/mobilite-electrique.tech/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 277, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/clement/Desktop/mobilite-electrique.tech/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 370, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/clement/Desktop/mobilite-electrique.tech/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py"", line 435, in execute     self.error_handler.check_response(response)   File ""/home/clement/Desktop/mobilite-electrique.tech/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message: Failed to read marionette port   debug logging is:  `DEBUG:selenium.webdriver.remote.remote_connection:POST http://localhost:45393/session {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {""browserName"": ""firefox"", ""acceptInsecureCerts"": true, ""moz:debuggerAddress"": true, ""pageLoadStrategy"": ""normal"", ""moz:firefoxOptions"": {""args"": [""--headless""]}}}} DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): localhost:45393 DEBUG:urllib3.connectionpool:http://localhost:45393 ""POST /session HTTP/1.1"" 500 88 DEBUG:selenium.webdriver.remote.remote_connection:Remote response: status=500 | data={""value"":{""error"":""timeout"",""message"":""Failed to read marionette port"",""stacktrace"":""""}} | headers=HTTPHeaderDict({'content-type': 'application/json; charset=utf-8', 'cache-control': 'no-cache', 'content-length': '88', 'date': 'Mon, 27 Jun 2022 07:45:58 GMT'}) DEBUG:selenium.webdriver.remote.remote_connection:Finished Request` ```   ### Operating System  Ubuntu 22.04  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 101.0.1 (64 bits)  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver v0.31.0 linux 64  ### Are you using Selenium Grid?  _No response_","open","I-defect,","cleconte987","2022-06-25T21:19:26Z","2022-06-28T08:51:28Z"
"","10066","[🐛 Bug]: Selenium tests sometimes randomly fail because of port already in use","### What happened?  I submitted [another PR](https://github.com/SeleniumHQ/selenium/pull/10063) to Selenium, and [the build failed](https://github.com/SeleniumHQ/selenium/runs/4270614439?check_suite_focus=true) because of a flaky test.  In fact, my own integration tests also fail time-to-time, see [issue 9972](https://github.com/SeleniumHQ/selenium/issues/9972).   # Proposed solution I want to retry starting netty server several times if it fails due to ""port already in use"" exception.  ### How can we reproduce the issue?  ```shell It's hard to reproduce. ```   ### Relevant log output  ```shell There was 1 failure: 1) testToggleAirplaneMode(org.openqa.selenium.mobile.NetworkConnectionTest) java.lang.RuntimeException: java.io.UncheckedIOException: java.io.IOException: Port 41538 already in use 	at org.openqa.selenium.environment.GlobalTestEnvironment.getOrCreate(GlobalTestEnvironment.java:44) 	at org.openqa.selenium.testing.JUnit4TestBase.prepareEnvironment(JUnit4TestBase.java:54) 	... 32 trimmed Caused by: java.io.UncheckedIOException: java.io.IOException: Port 41538 already in use 	at org.openqa.selenium.netty.server.NettyServer.start(NettyServer.java:159) 	at org.openqa.selenium.netty.server.NettyServer.start(NettyServer.java:52) 	at org.openqa.selenium.environment.webserver.NettyAppServer.start(NettyAppServer.java:104) 	at org.openqa.selenium.environment.InProcessTestEnvironment.(InProcessTestEnvironment.java:29) 	at org.openqa.selenium.environment.GlobalTestEnvironment.getOrCreate(GlobalTestEnvironment.java:41) 	... 34 more Caused by: java.io.IOException: Port 41538 already in use 	... 39 more Caused by: java.net.BindException: Address already in use 	at java.base/sun.nio.ch.Net.bind0(Native Method) 	at java.base/sun.nio.ch.Net.bind(Net.java:455) 	at java.base/sun.nio.ch.Net.bind(Net.java:447) 	at java.base/sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:227) 	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:134) ```   ### Operating System  no matter  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  no matter  ### What are the browser driver(s) and version(s) where you see this issue?  no matter  ### Are you using Selenium Grid?  no matter","closed","I-defect,","asolntsev","2021-11-20T16:15:14Z","2022-02-03T00:07:06Z"
"","10218","[🐛 Bug]: edge in SELENIUM_BROWSER environment variable leads to web driver not building due to error","### What happened?  I set up the environment variable `SELENIUM_BROWSER`, which includes the names of the browsers I want to run tests against. The values I use are the Browser names enumerated [here](https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Browser.html). As far as I was experiencing, adding multiple browser names and seperating them by comma works fine. So, if I run tests against Firefox, Chrome and Opera, the value of the environment variable `SELENIUM_BROWSER` is `firefox,chrome,opera`. That works fine. However, as soon as I add `edge` to the environment variable, an error occurs as the web driver wasn't successfully built when trying to run the tests in Microsoft Edge. I also tried entering different names, such as `MicrosoftEdge` or `msedge`, but with no success.  However, when using an older selenium-webdriver version (`4.0.0−beta.3`), all tests run through.  Thank you in advance for looking into this. I couldn't figure out the source of the problem myself.  ### How can we reproduce the issue?  // I modified file google_search_test.js to this:  ```js const { Browser, By, Key, until } = require('..') const { ignore, suite } = require('../testing')  suite(function (env) {   describe('Google Search', function () {     let driver      before(async function () {       // env.builder() returns a Builder instance preconfigured for the       // envrionment's target browser (you may still define browser specific       // options if necessary (i.e. firefox.Options or chrome.Options)).       driver = await env.builder()          // When you call Builder#build(), all options irrelevant to the selected browser are dropped         .setChromeOptions({acceptInsecureCerts: true})         .setOperaOptions({acceptInsecureCerts: true})         .setFirefoxOptions({acceptInsecureCerts: true})         .setEdgeOptions({acceptInsecureCerts: true})         .build()              await driver.getCapabilities().then((caps) => console.log('caps', caps));       })       it('demo', async function () {       await driver.get('https://www.google.com/ncr')     })      after(() => driver && driver.quit())   }) }) ```   ### Relevant log output  ```shell > node node_modules/mocha/bin/mocha -t 10000 node_modules/selenium-webdriver/example/google_search_test.js [INFO] Running tests against [firefox, chrome, opera, MicrosoftEdge]    [firefox]     Google Search       √ demo (1520ms)    [chrome]     Google Search       √ demo (1405ms)    [opera]     Google Search       √ demo (585ms)    [MicrosoftEdge]     Google Search       1) ""before all"" hook for ""demo""     3 passing (10s)   1 failing    1) [MicrosoftEdge]        Google Search          ""before all"" hook for ""demo"":      TypeError: Cannot read properties of undefined (reading 'apply')       at Builder.builder.build (node_modules\selenium-webdriver\testing\index.js:291:59)       at Context. (node_modules\selenium-webdriver\example\google_search_test.js:18:10)       at processImmediate (node:internal/timers:464:21) ```   ### Operating System  Windows 10  Some more information about node, npm and mocha: >node -v v16.13.1  >npm -v 8.1.2  mocha (version 9.1.3)  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Microsoft Edge Version 96.0.1054.62 (Offizielles Build) (64-Bit)  ### What are the browser driver(s) and version(s) where you see this issue?  Version: 96.0.1054.62  ### Are you using Selenium Grid?  No","closed","I-defect,","itsHusky","2022-01-04T20:55:55Z","2022-02-09T00:09:25Z"
"","9949","[🐛 Bug]: Setting profile by set_preference not work in firefox remote webdriver","### What happened?  I set profile by Option in Firefox before and it works, but in last update it says that: DeprecationWarning: Setting a profile has been deprecated. Please use the set_preference and install_addons methods. and when i use set_preference for setting up profile, raise an error contains below message: Message: Failed to set preferences: Unable to write Firefox profile: No such file or directory (os error 2)   ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.options import Options  firefox_options = Options() firefox_options.set_preference('profile', path_to_firefox_user_data) driver = webdriver.Remote(command_executor='http://selenium-hub:4444/wd/hub',                                            options=firefox_options) ```   ### Relevant log output  ```shell 14:56:28.055 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""5375704719ffef737b54ecb93c8e3984"",""eventTime"": 1634568988002534751,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:49495"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: Failed to set preferences: Unable to write Firefox profile: No such file or directory (os error 2)\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: '9ca87f366177', ip: '172.22.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.11.0-37-generic', java.version: '11.0.11'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Failed to set preferences: Unable to write Firefox profile: No such file or directory (os error 2)\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: '9ca87f366177', ip: '172.22.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.11.0-37-generic', java.version: '11.0.11'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:131)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:65)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:315)\n\tat org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52)\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""org.openqa.selenium.SessionNotCreatedException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""moz:debuggerAddress\"": true,\""acceptInsecureCerts\"": true,\""browserName\"": \""firefox\"",\""pageLoadStrategy\"": \""normal\"",\""moz:firefoxOptions\"": {\""prefs\"": {\""browser.link.open_newwindow\"": 3,\""browser.link.open_newwindow.restriction\"": 2,\""permissions.default.image\"": 2,\""xpinstall.signatures.required\"": false},\""args\"": [  \""-profile\"",  \""browser_user_data\""  ]  },  \""se:vncEnabled\"": true  }\n""}} ```   ### Operating System  Ubuntu 20.04  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  selenium/node-firefox 93 (latest)  ### What are the browser driver(s) and version(s) where you see this issue?  Gecko Driver 0.30.0 (it's not necessary for remote webdriver)  ### Are you using Selenium Grid?  selenium/hub 4 (latest)","closed","needs-triaging,","Farshidsadr","2021-10-18T15:28:07Z","2021-11-20T00:06:36Z"
"","10905","[🐛 Bug]: java.lang.UnsupportedOperationException: getDomAttribute while using select in Selenium 4","### What happened?  I recently updated my project from 3.141.59 to Selenium 4.0.0.  Most of it went pretty well, however whenever my script uses the Select class constructor, it throws an error java.lang.UnsupportedOperationException: getDomAttribute.  I read the various stacks that it might be compatibility issue or W3C protocol is not being followed.  I checked all of these and didn't found any problem with those.  Maven dependency version: ![image](https://user-images.githubusercontent.com/38955635/180921885-7fd047ea-4f0a-4cf5-8677-08a4bd51ce4c.png)   Code snip: ![image](https://user-images.githubusercontent.com/38955635/180920992-ee94c60c-b7cf-470b-b639-64f5d2ad4d4a.png)  It follows W3C ![image](https://user-images.githubusercontent.com/38955635/180920275-0a0a6df6-6674-444c-9dc7-398a26075930.png)  Actual error: ![image](https://user-images.githubusercontent.com/38955635/180920557-9989456d-68ca-4cae-9eea-dace089a5420.png)    ### How can we reproduce the issue?  ```shell i have attached snip in 'what happened' section ```   ### Relevant log output  ```shell [RemoteTestNG] detected TestNG version 6.14.3 [TestNGContentHandler] [WARN] It is strongly recommended to add """" at the top of your file, otherwise TestNG may fail or not work as expected.  . . .. .  00:00:25.840 [EnvironmentUtil.setSystemProperty()] INFO : Set property: rfa.backup.config = accounts-dev.xml 00:00:25.842 [DeviceUtil.getDevice()] INFO : System property: device = null 00:00:25.845 [DeviceUtil.getDevice()] INFO : Device: DESKTOP 00:00:25.859 [BrowserUtil.getBrowser()] INFO : System property: portal.browser = null 00:00:25.860 [BrowserUtil.getBrowser()] INFO : System property: browser = null 00:00:25.860 [BrowserUtil.getBrowser()] INFO : Browser: CHROME SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Starting ChromeDriver 103.0.5060.134 (8ec6fce403b3feb0869b0732eda8bd95011d333c-refs/branch-heads/5060@{#1262}) on port 51132 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Jul 26, 2022 12:00:28 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Jul 26, 2022 12:00:28 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch WARNING: Unable to find an exact match for CDP version 103, so returning the closest version found: a no-op implementation Jul 26, 2022 12:00:28 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Unable to find CDP implementation matching 103. Jul 26, 2022 12:00:28 AM org.openqa.selenium.chromium.ChromiumDriver lambda$new$3 WARNING: Unable to find version of CDP to use for . You may need to include a dependency on a specific version of the CDP using something similar to `org.seleniumhq.selenium:selenium-devtools-v86:4.0.0` where the version (""v86"") matches the version of the chromium-based browser you're using and the version number of the artifact is the same as Selenium's. .. . . . . . .   When User select macOS from the drop down menu on the webroot secure anywhere protection dialog                               # com.carbonite.step.definitions.WebrootSecureAnywhereProtectionDialogSteps.user_select_mac_os_from_the_drop_down_menu_on_the_webroot_secure_anywhere_protection_dialog(java.lang.String)       java.lang.UnsupportedOperationException: getDomAttribute 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) 	at com.carbonite.browser.ProxyDriver.selectDropdownOption(ProxyDriver.java:1013) 	at com.carbonite.browser.ProxyDriver.selectDropdownOption(ProxyDriver.java:953) 	at com.carbonite.browser.ProxyDriver.selectDropdownOption(ProxyDriver.java:936) 	at com.carbonite.customerportal.flows.dialogs.WebrootSecureAnywhereProtectionDialog.selectOSFromDropDown(WebrootSecureAnywhereProtectionDialog.java:104) 	at com.carbonite.step.definitions.WebrootSecureAnywhereProtectionDialogSteps.user_select_mac_os_from_the_drop_down_menu_on_the_webroot_secure_anywhere_protection_dialog(WebrootSecureAnywhereProtectionDialogSteps.java:142) 	at ✽.User select macOS from the drop down menu on the webroot secure anywhere protection dialog(file:///C:/Users/manvirs/git/Redbull-Automation/Portals/VueDawnPortal/features/Download%20Page/Download.feature:112)    And user clicks on download button on the webroot secure anywhere protection dialog                                           # com.carbonite.step.definitions.WebrootSecureAnywhereProtectionDialogSteps.user_clicks_on_download_button_on_the_webroot_secure_anywhere_protection_dialog()   Then verify webroot client is downloaded successfully                                                                         # com.carbonite.step.definitions.WebrootSecureAnywhereProtectionDialogSteps.verify_webroot_secure_anywhere_protection_file_is_downloaded_with_filename()      Embedding Screenshot [image/png 150796 bytes]  00:02:17.557 [Hooks.after()] INFO : Closing Webdriver !! FAILED: runScenario(""Validate that OS is detected and displayed as first option on downloading WSA App from My available Downloads"", ""Optional[Downloads Page]"")         Runs Cucumber Scenarios java.lang.UnsupportedOperationException: getDomAttribute 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) 	at com.carbonite.browser.ProxyDriver.selectDropdownOption(ProxyDriver.java:1013) 	at com.carbonite.browser.ProxyDriver.selectDropdownOption(ProxyDriver.java:953) 	at com.carbonite.browser.ProxyDriver.selectDropdownOption(ProxyDriver.java:936) 	at com.carbonite.customerportal.flows.dialogs.WebrootSecureAnywhereProtectionDialog.selectOSFromDropDown(WebrootSecureAnywhereProtectionDialog.java:104) 	at com.carbonite.step.definitions.WebrootSecureAnywhereProtectionDialogSteps.user_select_mac_os_from_the_drop_down_menu_on_the_webroot_secure_anywhere_protection_dialog(WebrootSecureAnywhereProtectionDialogSteps.java:142) 	at ✽.User select macOS from the drop down menu on the webroot secure anywhere protection dialog(file:///C:/Users/manvirs/git/Redbull-Automation/Portals/VueDawnPortal/features/Download%20Page/Download.feature:112)   ===============================================     Default test     Tests run: 1, Failures: 1, Skips: 0 ===============================================   =============================================== Default suite Total tests run: 1, Failures: 1, Skips: 0 =============================================== ```   ### Operating System  Window 10  ### Selenium version  Selenium 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Browser Chrome , Version :103.0.5060.134  ### What are the browser driver(s) and version(s) where you see this issue?  I am using Webdriver manager api  ### Are you using Selenium Grid?  no","closed","I-issue-template,","manvirsinghparmar","2022-07-26T04:10:42Z","2022-08-01T17:22:01Z"
"","9946","[🐛 Bug]: Selenium-DevTools Ruby execute_cdp with argument failed on macOS, but fine on Windows","### What happened?  I ran the DevTool Emulate GEO example on the documentation: [https://www.selenium.dev/documentation/support_packages/chrome_devtools/](https://www.selenium.dev/documentation/support_packages/chrome_devtools/)  The script worked fine on Windows but failed on macOS (the same version Selenium and DevTools) with ""**Wrong number of arguments**"" error.   ### How can we reproduce the issue?  ```shell coordinates = { latitude: 35.689487, longitude: 139.691706, accuracy: 100 } driver.execute_cdp(""Emulation.setGeolocationOverride"", coordinates) driver.get(""https://my-location.org"") ```   ### Relevant log output  ```shell Failure/Error: driver.devtools.send_cmd(""Emulation.setGeolocationOverride"", coordinates)  ArgumentError:    wrong number of arguments (given 2, expected 1) ```   ### Operating System  macOS Big Sur  ### Selenium version  4.0.0, selenium-devtools 0.94  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  No","closed","needs-triaging,","courtneyzhan","2021-10-18T06:03:30Z","2021-11-20T00:06:37Z"
"","10668","[🐛 Bug]: selenium-leg-rc 4.1.4 not found on maven","### What happened?  I need to implement the server api for W3C Web Driver, to use it on a new web driver using JavaFX WebView as browser. I found it on source code and seraching for jar it was on selelnium-leg-rc 4.1.2. Version 4.1.4 is missing from central. I have isolated the classes needed to run a simple server embedded using Javalin as server implementation.  I'm basically looking for those classes and its required dependencies: org.openqa.selenium.remote.server.JsonHttpCommandHandler org.openqa.selenium.remote.server.handler.*  Considering its on selenium-leg-rc are there plans to keep some kind of server side implementation for W3C web driver? And will it have further releases?  Those are all classes I'm keeping:  ``` org\openqa\selenium\grid\log\FlushingHandler.java org\openqa\selenium\grid\log\JsonFormatter.java org\openqa\selenium\grid\log\LoggingFlags.java org\openqa\selenium\grid\log\LoggingOptions.java org\openqa\selenium\grid\log\TerseFormatter.java org\openqa\selenium\io\CircularOutputStream.java org\openqa\selenium\io\FileHandler.java org\openqa\selenium\io\MultiOutputStream.java org\openqa\selenium\io\TemporaryFilesystem.java org\openqa\selenium\io\Zip.java org\openqa\selenium\remote\codec\AbstractHttpCommandCodec.java org\openqa\selenium\remote\codec\AbstractHttpResponseCodec.java org\openqa\selenium\remote\codec\jwp\JsonHttpCommandCodec.java org\openqa\selenium\remote\codec\jwp\JsonHttpResponseCodec.java org\openqa\selenium\remote\codec\w3c\W3CHttpCommandCodec.java org\openqa\selenium\remote\codec\w3c\W3CHttpResponseCodec.java org\openqa\selenium\remote\server\DriverProvider.java org\openqa\selenium\remote\server\DriverSessions.java org\openqa\selenium\remote\server\JsonHttpCommandHandler.java org\openqa\selenium\remote\server\KnownElements.java org\openqa\selenium\remote\server\RequiresAllSessions.java org\openqa\selenium\remote\server\RequiresSession.java org\openqa\selenium\remote\server\Session.java org\openqa\selenium\remote\server\handler\AcceptAlert.java org\openqa\selenium\remote\server\handler\AddCookie.java org\openqa\selenium\remote\server\handler\BySelector.java org\openqa\selenium\remote\server\handler\CaptureScreenshot.java org\openqa\selenium\remote\server\handler\ChangeUrl.java org\openqa\selenium\remote\server\handler\ClearElement.java org\openqa\selenium\remote\server\handler\ClickElement.java org\openqa\selenium\remote\server\handler\CloseWindow.java org\openqa\selenium\remote\server\handler\ConfigureTimeout.java org\openqa\selenium\remote\server\handler\DeleteCookie.java org\openqa\selenium\remote\server\handler\DeleteNamedCookie.java org\openqa\selenium\remote\server\handler\DeleteSession.java org\openqa\selenium\remote\server\handler\DescribeElement.java org\openqa\selenium\remote\server\handler\DismissAlert.java org\openqa\selenium\remote\server\handler\ElementEquality.java org\openqa\selenium\remote\server\handler\ExecuteAsyncScript.java org\openqa\selenium\remote\server\handler\ExecuteScript.java org\openqa\selenium\remote\server\handler\FindActiveElement.java org\openqa\selenium\remote\server\handler\FindChildElement.java org\openqa\selenium\remote\server\handler\FindChildElements.java org\openqa\selenium\remote\server\handler\FindElement.java org\openqa\selenium\remote\server\handler\FindElements.java org\openqa\selenium\remote\server\handler\FullscreenWindow.java org\openqa\selenium\remote\server\handler\GetAlertText.java org\openqa\selenium\remote\server\handler\GetAllCookies.java org\openqa\selenium\remote\server\handler\GetAllSessions.java org\openqa\selenium\remote\server\handler\GetAllWindowHandles.java org\openqa\selenium\remote\server\handler\GetAvailableLogTypesHandler.java org\openqa\selenium\remote\server\handler\GetCookie.java org\openqa\selenium\remote\server\handler\GetCssProperty.java org\openqa\selenium\remote\server\handler\GetCurrentUrl.java org\openqa\selenium\remote\server\handler\GetCurrentWindowHandle.java org\openqa\selenium\remote\server\handler\GetElementAttribute.java org\openqa\selenium\remote\server\handler\GetElementDisplayed.java org\openqa\selenium\remote\server\handler\GetElementEnabled.java org\openqa\selenium\remote\server\handler\GetElementLocation.java org\openqa\selenium\remote\server\handler\GetElementLocationInView.java org\openqa\selenium\remote\server\handler\GetElementRect.java org\openqa\selenium\remote\server\handler\GetElementSelected.java org\openqa\selenium\remote\server\handler\GetElementSize.java org\openqa\selenium\remote\server\handler\GetElementText.java org\openqa\selenium\remote\server\handler\GetLogHandler.java org\openqa\selenium\remote\server\handler\GetPageSource.java org\openqa\selenium\remote\server\handler\GetScreenOrientation.java org\openqa\selenium\remote\server\handler\GetSessionCapabilities.java org\openqa\selenium\remote\server\handler\GetSessionLogsHandler.java org\openqa\selenium\remote\server\handler\GetTagName.java org\openqa\selenium\remote\server\handler\GetTitle.java org\openqa\selenium\remote\server\handler\GetWindowPosition.java org\openqa\selenium\remote\server\handler\GetWindowSize.java org\openqa\selenium\remote\server\handler\GoBack.java org\openqa\selenium\remote\server\handler\GoForward.java org\openqa\selenium\remote\server\handler\ImeActivateEngine.java org\openqa\selenium\remote\server\handler\ImeDeactivate.java org\openqa\selenium\remote\server\handler\ImeGetActiveEngine.java org\openqa\selenium\remote\server\handler\ImeGetAvailableEngines.java org\openqa\selenium\remote\server\handler\ImeIsActivated.java org\openqa\selenium\remote\server\handler\ImplicitlyWait.java org\openqa\selenium\remote\server\handler\MaximizeWindow.java org\openqa\selenium\remote\server\handler\RefreshPage.java org\openqa\selenium\remote\server\handler\Rotate.java org\openqa\selenium\remote\server\handler\SendKeys.java org\openqa\selenium\remote\server\handler\SetAlertText.java org\openqa\selenium\remote\server\handler\SetScriptTimeout.java org\openqa\selenium\remote\server\handler\SetWindowPosition.java org\openqa\selenium\remote\server\handler\SetWindowSize.java org\openqa\selenium\remote\server\handler\Status.java org\openqa\selenium\remote\server\handler\SubmitElement.java org\openqa\selenium\remote\server\handler\SwitchToFrame.java org\openqa\selenium\remote\server\handler\SwitchToParentFrame.java org\openqa\selenium\remote\server\handler\SwitchToWindow.java org\openqa\selenium\remote\server\handler\UploadFile.java org\openqa\selenium\remote\server\handler\W3CActions.java org\openqa\selenium\remote\server\handler\WebDriverHandler.java org\openqa\selenium\remote\server\handler\WebElementHandler.java org\openqa\selenium\remote\server\handler\html5\ClearLocalStorage.java org\openqa\selenium\remote\server\handler\html5\ClearSessionStorage.java org\openqa\selenium\remote\server\handler\html5\GetAppCacheStatus.java org\openqa\selenium\remote\server\handler\html5\GetLocalStorageItem.java org\openqa\selenium\remote\server\handler\html5\GetLocalStorageKeys.java org\openqa\selenium\remote\server\handler\html5\GetLocalStorageSize.java org\openqa\selenium\remote\server\handler\html5\GetLocationContext.java org\openqa\selenium\remote\server\handler\html5\GetSessionStorageItem.java org\openqa\selenium\remote\server\handler\html5\GetSessionStorageKeys.java org\openqa\selenium\remote\server\handler\html5\GetSessionStorageSize.java org\openqa\selenium\remote\server\handler\html5\RemoveLocalStorageItem.java org\openqa\selenium\remote\server\handler\html5\RemoveSessionStorageItem.java org\openqa\selenium\remote\server\handler\html5\SetLocalStorageItem.java org\openqa\selenium\remote\server\handler\html5\SetLocationContext.java org\openqa\selenium\remote\server\handler\html5\SetSessionStorageItem.java org\openqa\selenium\remote\server\handler\html5\Utils.java org\openqa\selenium\remote\server\handler\interactions\ClickInSession.java org\openqa\selenium\remote\server\handler\interactions\DoubleClickInSession.java org\openqa\selenium\remote\server\handler\interactions\MouseDown.java org\openqa\selenium\remote\server\handler\interactions\MouseMoveToLocation.java org\openqa\selenium\remote\server\handler\interactions\MouseUp.java org\openqa\selenium\remote\server\handler\interactions\SendKeyToActiveElement.java org\openqa\selenium\remote\server\handler\interactions\touch\DoubleTapOnElement.java org\openqa\selenium\remote\server\handler\interactions\touch\Down.java org\openqa\selenium\remote\server\handler\interactions\touch\Flick.java org\openqa\selenium\remote\server\handler\interactions\touch\LongPressOnElement.java org\openqa\selenium\remote\server\handler\interactions\touch\Move.java org\openqa\selenium\remote\server\handler\interactions\touch\Scroll.java org\openqa\selenium\remote\server\handler\interactions\touch\SingleTapOnElement.java org\openqa\selenium\remote\server\handler\interactions\touch\Up.java org\openqa\selenium\remote\server\handler\internal\ArgumentConverter.java org\openqa\selenium\remote\server\handler\internal\ResultConverter.java org\openqa\selenium\remote\server\handler\mobile\GetNetworkConnection.java org\openqa\selenium\remote\server\handler\mobile\SetNetworkConnection.java org\openqa\selenium\remote\server\log\LoggingManager.java org\openqa\selenium\remote\server\log\LoggingOptions.java org\openqa\selenium\remote\server\log\MaxLevelFilter.java org\openqa\selenium\remote\server\log\PerSessionLogHandler.java org\openqa\selenium\remote\server\log\SessionLogsToFileRepository.java org\openqa\selenium\remote\server\log\ShortTermMemoryHandler.java org\openqa\selenium\remote\server\log\StdOutHandler.java org\openqa\selenium\remote\server\rest\Responses.java org\openqa\selenium\remote\server\rest\RestishHandler.java org\openqa\selenium\remote\server\rest\ResultConfig.java ```  ### How can we reproduce the issue?  ```shell Search selenium-leg-rc on maven central or access https://repo1.maven.org/maven2/org/seleniumhq/selenium/selenium-leg-rc/4.1.4/selenium-leg-rc-4.1.4.pom ```   ### Relevant log output  ```shell [INFO] ------------------------------------------------------------------------ [INFO] BUILD FAILURE [INFO] ------------------------------------------------------------------------ [INFO] Total time:  19.268 s [INFO] Finished at: 2022-05-18T18:52:18-03:00 [INFO] ------------------------------------------------------------------------ [ERROR] Failed to execute goal on project fx-webdriver-impl: Could not resolve dependencies for project org.example:fx-webdriver-impl:jar:1.0-SNAPSHOT: Could not find artifact org.seleniumhq.selenium:selenium-leg-rc:jar:4.1.4 in cen tral (https://repo.maven.apache.org/maven2) -> [Help 1] ```   ### Operating System  Windows  ### Selenium version  4.1.4  ### What are the browser(s) and version(s) where you see this issue?  Custom browser using Java FX WebView 18.0.1  ### What are the browser driver(s) and version(s) where you see this issue?  Custom driver for Java FX WebView 18.0.1  ### Are you using Selenium Grid?  4.1.4","closed","needs-triaging,","giflw","2022-05-18T21:53:03Z","2022-06-19T00:12:06Z"
"","10133","[🐛 Bug]: 4.1.0 regression: driver.switchTo().defaultContext() causes connection to drop","### What happened?  I just upgraded `org.seleniumhq.selenium:selenium-java:4.0.0` to `org.seleniumhq.selenium:selenium-java:4.1.0` and a handful of my tests reliably fail now on my local and teamcity due to:  ``` org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '4.1.0', revision: '87802e897b' System info: host: '8047a03e41c1', ip: '172.18.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-77-generic', java.version: '11.0.11' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [3fc45f3d5ac035225b03bc0b897d575e, switchToFrame {id=null}] Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 95.0.4638.54, chrome: {chromedriverVersion: 95.0.4638.17 (a9d0719444d4b..., userDataDir: /tmp/.com.google.Chrome.OOxXgg}, goog:chromeOptions: {debuggerAddress: localhost:40969}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://172.24.0.12:4444/sessi..., se:cdpVersion: 95.0.4638.54, se:vnc: ws://172.24.0.12:4444/sessi..., se:vncEnabled: true, se:vncLocalAddress: ws://172.24.0.12:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 3fc45f3d5ac035225b03bc0b897d575e ```  I reverted back to `org.seleniumhq.selenium:selenium-java:4.0.0` and tests work fine in both places now.  ### How can we reproduce the issue?  ```shell driver.switchTo().defaultContext() ```   ### Relevant log output  ```shell Nothing on the container running selenium standalone driver ```   ### Operating System  BigSur (local) and Ubuntu docker container on Ubuntu (teamcity)  ### Selenium version  Java 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.54  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.17  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","idontusenumbers","2021-12-10T19:49:30Z","2022-01-13T00:07:43Z"
"","9999","[🐛 Bug]: AttributeError: 'dict' object has no attribute 'send_keys'","### What happened?  I just start the browser and find en element using Python:  ```python driver = webdriver.Chrome() driver.implicitly_wait(10) driver.get('https://account.xiaomi.com/fe/service/login/password') el = driver.find_element(By.NAME, 'account') el.send_keys('demo') ```  el should be an webelement object or NoSuchElementException， but I got this: `AttributeError: 'dict' object has no attribute 'send_keys'`  ![image](https://user-images.githubusercontent.com/17780176/139525034-313b80c7-3a84-4ea3-b34d-ae0eddd45a60.png)     ### How can we reproduce the issue?  ```shell above ```   ### Relevant log output  ```shell FAILED                                    [100%] test_selenum.py:12 (test_selenium) def test_selenium():         """"""测试selenium是否可用""""""         driver = webdriver.Chrome()         driver.implicitly_wait(10)         # 访问被测试网址         driver.get('https://account.xiaomi.com/fe/service/login/password')         el = driver.find_element(By.NAME, 'account') >       el.send_keys('aaa') E       AttributeError: 'dict' object has no attribute 'send_keys'  test_selenum.py:20: AttributeError ```   ### Operating System  Windows10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome90  ### What are the browser driver(s) and version(s) where you see this issue?  90  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","looker53","2021-10-30T07:53:40Z","2021-12-10T00:06:47Z"
"","10706","[🐛 Bug]: rubyzip usage not compatible with rubyzip 3.x","### What happened?  I haven't actually verified this bug myself, but a recent `bundle install` gave the following warning: ``` Post-install message from rubyzip: RubyZip 3.0 is coming! **********************  The public API of some Rubyzip classes has been modernized to use named parameters for optional arguments. Please check your usage of the following classes:   * `Zip::File`   * `Zip::Entry`   * `Zip::InputStream`   * `Zip::OutputStream`  Please ensure that your Gemfiles and .gemspecs are suitably restrictive to avoid an unexpected breakage when 3.0 is released (e.g. ~> 2.3.0). See https://github.com/rubyzip/rubyzip for details. The Changelog also lists other enhancements and bugfixes that have been implemented since version 2.3.0. ```  I checked my **Gemfile.lock** and saw that `selenium-webdriver` was pulling in `rubyzip` as a dependency and was not locking the version of `rubyzip` as suggested by the message. The root definition of this dependency is here: https://github.com/SeleniumHQ/selenium/blob/bb3b82e7891cdbe8bf75680fdc3c2a73a4d58f21/rb/selenium-webdriver.gemspec#L50  I took the liberty at the code in this repo, and I _think_ the only place that needs to be changed to handle `rubyzip` 3.x is for this line https://github.com/SeleniumHQ/selenium/blob/bb3b82e7891cdbe8bf75680fdc3c2a73a4d58f21/rb/lib/selenium/webdriver/common/zipper.rb#L78 to be changed to  ```ruby Zip::File.open(zip_path, create: true, &blk) ```  However I think this would break compatibility with `rubyzip` 1.x and 2.x. I'll leave it to you to decide whether to temporarily lock to the older version, drop support for older versions of `rubyzip` in some future release, or try to come up with a nice way to handle both!  ### How can we reproduce the issue?  ```shell I've not tested this because our Gemfile.lock already has rubyzip locked to 2.3.0, but I think you could reproduce this right now as follows:  1. Create a fresh ruby project 2. Add `selenium-webdriver` to a Gemfile 3. Run `bundle install` which will pull in the latest versions of `selenium-webdriver` and `rubyzip` 4. Use some functionality that utilises the `zip` or `zip_file` methods of `Selenium::WebDriver::Zipper` ```   ### Relevant log output  ```shell N/A ```   ### Operating System  macOS  ### Selenium version  Ruby 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  No","closed","needs-triaging,","robotfelix","2022-05-27T11:27:29Z","2022-06-27T00:12:18Z"
"","9976","[🐛 Bug]: RemoteWebDriver.builder()  Unable to establish websocket connection","### What happened?  I have upgraded to Selenium 4 but i am unable to establish a connection to my website using the code  ```java WebDriver remoteWebDriver = RemoteWebDriver.builder().oneOf(options).address(new URL(grid)).build(); ```  The browser window opens but thats as far as it gets. My original code works fine `RemoteWebDriver  remoteWebDriver = new RemoteWebDriver(new URL(grid), options);` but i want to be able to use DevTools so my driver needs augmenting. I have tried using edge and chrome (latest versions) but i continue to get the same error.  Im using Java 8, Grid 4 Node and Hub and selenium-java version 4.0.0  ![Browser window](https://user-images.githubusercontent.com/57394145/138453537-79d27b13-f7ec-4053-bb7f-02a0904d11c1.PNG)  The process seems to fail at this method -   ```java public WebSocket openSocket(HttpRequest request, Listener listener) {         Require.nonNull(""Request to send"", request);         Require.nonNull(""WebSocket listener"", listener);         return **(WebSocket)this.toWebSocket.apply(request, listener);**     } ```  ### How can we reproduce the issue?  ```shell ChromeOptions options =new ChromeOptions(); options.setCapability(""platformName"",""windows""); WebDriver remoteWebDriver = RemoteWebDriver.builder().oneOf(options).address(new URL(grid)).build(); ```   ### Relevant log output  ```shell STACKTRACE  Oct 22, 2021 1:04:42 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 95 Oct 22, 2021 1:04:54 PM org.openqa.selenium.remote.http.netty.NettyWebSocket lambda$new$0 WARNING: Connection refused: no further information: /0.0.0.0:4444 java.net.ConnectException: Connection refused: no further information: /0.0.0.0:4444 	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:707) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /0.0.0.0:4444 Caused by: java.net.ConnectException: Connection refused: no further information 	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) 	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) 	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:707) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748)  Oct 22, 2021 1:04:54 PM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Connection refused: no further information: /0.0.0.0:4444 java.net.ConnectException: Connection refused: no further information: /0.0.0.0:4444 	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:321) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:337) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:707) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: no further information: /0.0.0.0:4444 Caused by: java.net.ConnectException: Connection refused: no further information 	at sun.nio.ch.SocketChannelImpl.checkConnect(Native Method) 	at sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:717) 	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:707) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748)  SESSION INFORMATION  Oct 22, 2021 1:18:41 PM org.openqa.selenium.remote.http.DumpHttpExchangeFilter lambda$apply$2 INFO: HTTP Request: (POST) /session   Cache-Control: no-cache   Content-Length: 431   Content-Type: application/json; charset=utf-8  {   ""desiredCapabilities"": {     ""browserName"": ""chrome"",     ""platformName"": ""windows"",     ""goog:chromeOptions"": {       ""args"": [       ],       ""extensions"": [       ]     }   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""chrome"",         ""goog:chromeOptions"": {           ""args"": [           ],           ""extensions"": [           ]         },         ""platformName"": ""windows""       }     ]   } } Oct 22, 2021 1:18:41 PM org.openqa.selenium.remote.http.DumpHttpExchangeFilter lambda$apply$2 INFO: HTTP Request: (POST) /session   User-Agent: selenium/4.0.0 (java windows)   Cache-Control: no-cache   Content-Length: 431   Content-Type: application/json; charset=utf-8  {   ""desiredCapabilities"": {     ""browserName"": ""chrome"",     ""platformName"": ""windows"",     ""goog:chromeOptions"": {       ""args"": [       ],       ""extensions"": [       ]     }   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""chrome"",         ""goog:chromeOptions"": {           ""args"": [           ],           ""extensions"": [           ]         },         ""platformName"": ""windows""       }     ]   } } Oct 22, 2021 1:18:48 PM org.openqa.selenium.remote.http.DumpHttpExchangeFilter lambda$apply$2 INFO: HTTP Response: Status code: 200   content-length: 1195   Cache-Control: no-cache   Content-Type: application/json; charset=utf-8  {   ""value"": {     ""sessionId"": ""fce3322c6495286afaf9d3b3c375066c"",     ""capabilities"": {       ""acceptInsecureCerts"": false,       ""browserName"": ""chrome"",       ""browserVersion"": ""95.0.4638.54"",       ""chrome"": {         ""chromedriverVersion"": ""95.0.4638.17 (a9d0719444d4b035e284ed1fce73bf6ccd789df2-refs\u002fbranch-heads\u002f4638@{#178})"",         ""userDataDir"": ""C:\\Users\\a609923\\AppData\\Local\\Temp\\5\\scoped_dir532_974048133""       },       ""goog:chromeOptions"": {         ""debuggerAddress"": ""localhost:52905""       },       ""networkConnectionEnabled"": false,       ""pageLoadStrategy"": ""normal"",       ""platformName"": ""WINDOWS"",       ""proxy"": {       },       ""se:cdp"": ""ws:\u002f\u002f0.0.0.0:4444\u002fsession\u002ffce3322c6495286afaf9d3b3c375066c\u002fse\u002fcdp"",       ""se:cdpVersion"": ""95.0.4638.54"",       ""setWindowRect"": true,       ""strictFileInteractability"": false,       ""timeouts"": {         ""implicit"": 0,         ""pageLoad"": 300000,         ""script"": 30000       },       ""unhandledPromptBehavior"": ""dismiss and notify"",       ""webauthn:extension:credBlob"": true,       ""webauthn:extension:largeBlob"": true,       ""webauthn:virtualAuthenticators"": true     }   } } Oct 22, 2021 1:18:48 PM org.openqa.selenium.remote.http.DumpHttpExchangeFilter lambda$apply$2 INFO: HTTP Response: Status code: 200   content-length: 1195   Cache-Control: no-cache   Content-Type: application/json; charset=utf-8  {   ""value"": {     ""sessionId"": ""fce3322c6495286afaf9d3b3c375066c"",     ""capabilities"": {       ""acceptInsecureCerts"": false,       ""browserName"": ""chrome"",       ""browserVersion"": ""95.0.4638.54"",       ""chrome"": {         ""chromedriverVersion"": ""95.0.4638.17 (a9d0719444d4b035e284ed1fce73bf6ccd789df2-refs\u002fbranch-heads\u002f4638@{#178})"",         ""userDataDir"": ""C:\\Users\\a609923\\AppData\\Local\\Temp\\5\\scoped_dir532_974048133""       },       ""goog:chromeOptions"": {         ""debuggerAddress"": ""localhost:52905""       },       ""networkConnectionEnabled"": false,       ""pageLoadStrategy"": ""normal"",       ""platformName"": ""WINDOWS"",       ""proxy"": {       },       ""se:cdp"": ""ws:\u002f\u002f0.0.0.0:4444\u002fsession\u002ffce3322c6495286afaf9d3b3c375066c\u002fse\u002fcdp"",       ""se:cdpVersion"": ""95.0.4638.54"",       ""setWindowRect"": true,       ""strictFileInteractability"": false,       ""timeouts"": {         ""implicit"": 0,         ""pageLoad"": 300000,         ""script"": 30000       },       ""unhandledPromptBehavior"": ""dismiss and notify"",       ""webauthn:extension:credBlob"": true,       ""webauthn:extension:largeBlob"": true,       ""webauthn:virtualAuthenticators"": true     }   } } Oct 22, 2021 1:18:49 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 95 ```   ### Operating System  Windows 10 and my Grid is hosted on a VM using Windows Server 2019  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 94 and 95  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 95  ### Are you using Selenium Grid?  Grid 4.0.0 Node and Hub","closed","I-defect,","gog27771","2021-10-22T12:27:59Z","2021-12-06T00:07:05Z"
"","10287","[🐛 Bug]: - In Linux OS - getShadowRoot() method is not accessible for Selenium4","### What happened?  I have upgraded selenium version to 4.0.0. Now we have a method getShadowRoot(). I have used the below code.       @Test       public void recommendedCode() {       WebDriverManager.chromedriver().setup();       driver = new ChromeDriver();       driver.get(""http://watir.com/examples/shadow_dom.html"");        WebElement shadowHost = driver.findElement(By.cssSelector(""#shadow_host""));       SearchContext shadowRoot = shadowHost.getShadowRoot();       WebElement shadowContent = shadowRoot.findElement(By.cssSelector(""#shadow_content""));        Assertions.assertEquals(""some text"", shadowContent.getText());     }  This was working fine in Windows OS.  For the same code, I am getting error at getShadowRoot() for linux OS. Under Webelement, we have getShadowRoot(), still getting the error ![ShadowRoot issue in Linux OS](https://user-images.githubusercontent.com/17266028/151034672-bbcb9a7d-c6e6-4af3-9eb1-e1ce54565d91.png)   ### How can we reproduce the issue?  ```shell @Test public void recommendedCode() {     WebDriverManager.chromedriver().setup();     driver = new ChromeDriver();      driver.get(""http://watir.com/examples/shadow_dom.html"");      WebElement shadowHost = driver.findElement(By.cssSelector(""#shadow_host""));     SearchContext shadowRoot = shadowHost.getShadowRoot();     WebElement shadowContent = shadowRoot.findElement(By.cssSelector(""#shadow_content""));      Assertions.assertEquals(""some text"", shadowContent.getText()); }  use linux OS. in eclipse - selenium maven project, use this code in any class file and check ```   ### Relevant log output  ```shell Getting compilation error ```   ### Operating System  Linux OS  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  97.0.4692.99  ### Are you using Selenium Grid?   No","closed","I-defect,","anushareddyqa","2022-01-25T18:17:51Z","2022-02-28T00:10:18Z"
"","10174","[🐛 Bug]: Selenium 4.1.1, Grid: java.lang.Exception: org.openqa.selenium.SessionNotCreatedException: Response code 500. Message: Could not start a new session, Chrome failed to start: crashed.(chrome not reachable)","### What happened?  I have tried on all the version 4.1.0 and 4.1.1 but getting same issue on chrome and Firefox both browser, also on selenium grid dashboard session occupied appear but test cases get fail   ### How can we reproduce the issue?  ```shell driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), new ChromeOptions());  Using $ docker run -d -p 4444:4444 --shm-size=""2g"" selenium/standalone-chrome:4.1.1-20211217  $ docker run -d -p 4444:4444 --shm-size=""2g"" selenium/standalone-chrome:4.1.0   even tried on selenium hub with docker compose ```   ### Relevant log output  ```shell //selenium logs java.lang.Exception: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Could not start a new session. Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.   (chrome not reachable)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: '6185f59a1b96', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.76-linuxkit', java.version: '11.0.13' Driver info: driver.version: unknown Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: '6185f59a1b96', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.76-linuxkit', java.version: '11.0.13' Driver info: driver.version: unknown Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'LTB0224786-MAC.local', ip: 'fe80:0:0:0:10bf:c19d:6d54:d09a%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.11' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}}] Capabilities {}   //Docker standalone image logs Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 53512  Only local connections are allowed.  Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.  [1640165562.253][SEVERE]: bind() failed: Cannot assign requested address (99)  ChromeDriver was started successfully.  09:32:49.132 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""dce2f831feb42c46a27d41403b12a0a4"",""eventTime"": 1640165568961186586,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:53512"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.\n  (chrome not reachable)\n  (The process started from chrome location \u002fusr\u002fbin\u002fgoogle-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: '6185f59a1b96', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.76-linuxkit', java.version: '11.0.13'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.\n  (chrome not reachable)\n  (The process started from chrome location \u002fusr\u002fbin\u002fgoogle-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: '6185f59a1b96', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.76-linuxkit', java.version: '11.0.13'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:131)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:65)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:314)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.startSession(LocalDistributor.java:513)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.newSession(LocalDistributor.java:440)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.handleNewSessionRequest(LocalDistributor.java:648)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.lambda$run$1(LocalDistributor.java:612)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""org.openqa.selenium.SessionNotCreatedException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""goog:chromeOptions\"": {\""args\"": [  ],  \""extensions\"": [    ]    },    \""browserName\"": \""chrome\"",    \""se:vncEnabled\"": true    }\n""}} ```   ### Operating System  Mac BigSur 11  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  96  ### What are the browser driver(s) and version(s) where you see this issue?  96.0  ### Are you using Selenium Grid?  4.1.1","closed","","Vipin20th","2021-12-22T09:39:31Z","2022-01-24T00:07:35Z"
"","10639","c# selenium cloudflare bypass","### What happened?  i have some error cloudflare; how to bypass cloudflare with selenium in c#?   ### How can we reproduce the issue?  ```shell ples help how do it ```   ### Relevant log output  ```shell One more step Please complete the security check to acces ```   ### Operating System  windows 10  ### Selenium version  last version 4.1  ### What are the browser(s) and version(s) where you see this issue?  chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  chrome drive 100  ### Are you using Selenium Grid?  _No response_","closed","I-question,","mahdisky","2022-05-12T07:22:11Z","2022-06-12T00:12:10Z"
"","10058","[🐛 Bug]: Does Selenium Grid remote webdriver support actions?","### What happened?  I have set up a selenium grid using remote webdriver. My test code works fine on webdriver Action class to click on a point on the web. But when I port it remote webdriver and selenium grid 2 node, action doesn't take place.  ### How can we reproduce the issue?  ```shell Here is my code for remote webdriver.       String Node = ""http://xx.xx.xxx.28:5555/wd/hub"";     DesiredCapabilities caps = new DesiredCapabilities();     caps.setBrowserName(""chrome"");     driver = new RemoteWebDriver(new URL(Node), caps);      Map offsets = new HashMap();     offsets.put(""xOffsetInches"", labelWidthInches);     offsets.put(""yOffsetInches"", labelHeightInches);     WebElement wholeCanvas = driver.findElement(canvas);     WebElement scaleFactorWE = driver.findElement(divScale);     String strScaleFactor = scaleFactorWE.getText();     double scaleFactor = Float.parseFloat(strScaleFactor.substring(0, strScaleFactor.indexOf(""%""))) / 100;      double xOffset = (ConvertInchesToPixels(labelWidthInches) * scaleFactor);     double yOffset = (ConvertInchesToPixels(labelHeightInches) * scaleFactor);      Actions actions = new Actions(driver);     actions.moveToElement(wholeCanvas, (int)xOffset, (int)yOffset).click().perform(); ``` ```   ### Relevant log output  ```shell ""C:\Program Files\Java\jdk-11.0.10\bin\java.exe"" -ea -Didea.test.cyclic.buffer.size=1048576 ""-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2\lib\idea_rt.jar=53410:C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2\bin"" -Dfile.encoding=UTF-8 -classpath ""C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2\plugins\testng\lib\testng-rt.jar;C:\Users\Enrico Yang\Documents\repos\webportal_sanity_test\target\test-classes;C:\Users\Enrico Yang\Documents\repos\webportal_sanity_test\target\classes;C:\Users\Enrico Yang\.m2\repository\io\cucumber\cucumber-java\4.2.3\cucumber-java-4.2.3.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\cucumber-core\4.2.3\cucumber-core-4.2.3.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\cucumber-html\0.2.7\cucumber-html-0.2.7.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\gherkin\5.1.0\gherkin-5.1.0.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\tag-expressions\1.1.1\tag-expressions-1.1.1.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\cucumber-expressions\6.2.0\cucumber-expressions-6.2.0.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\datatable\1.1.12\datatable-1.1.12.jar;C:\Users\Enrico Yang\.m2\repository\io\cucumber\datatable-dependencies\1.1.12\datatable-dependencies-1.1.12.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\maven\surefire\surefire-testng\3.0.0-M4\surefire-testng-3.0.0-M4.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\maven\surefire\common-java5\3.0.0-M4\common-java5-3.0.0-M4.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\maven\surefire\surefire-testng-utils\3.0.0-M4\surefire-testng-utils-3.0.0-M4.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\maven\surefire\surefire-grouper\3.0.0-M4\surefire-grouper-3.0.0-M4.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\maven\surefire\surefire-api\3.0.0-M4\surefire-api-3.0.0-M4.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\maven\surefire\surefire-logger-api\3.0.0-M4\surefire-logger-api-3.0.0-M4.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\4.0.0\selenium-chrome-driver-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\com\google\auto\service\auto-service-annotations\1.0\auto-service-annotations-1.0.jar;C:\Users\Enrico Yang\.m2\repository\com\google\auto\service\auto-service\1.0\auto-service-1.0.jar;C:\Users\Enrico Yang\.m2\repository\com\google\auto\auto-common\1.0\auto-common-1.0.jar;C:\Users\Enrico Yang\.m2\repository\com\google\guava\guava\31.0.1-jre\guava-31.0.1-jre.jar;C:\Users\Enrico Yang\.m2\repository\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\Enrico Yang\.m2\repository\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\Enrico Yang\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\Enrico Yang\.m2\repository\org\checkerframework\checker-qual\3.12.0\checker-qual-3.12.0.jar;C:\Users\Enrico Yang\.m2\repository\com\google\errorprone\error_prone_annotations\2.7.1\error_prone_annotations-2.7.1.jar;C:\Users\Enrico Yang\.m2\repository\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-api\4.0.0\selenium-api-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-chromium-driver\4.0.0\selenium-chromium-driver-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-json\4.0.0\selenium-json-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\4.0.0\selenium-remote-driver-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-buffer\4.1.68.Final\netty-buffer-4.1.68.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-codec-http\4.1.67.Final\netty-codec-http-4.1.67.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-codec\4.1.67.Final\netty-codec-4.1.67.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-handler\4.1.67.Final\netty-handler-4.1.67.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-common\4.1.68.Final\netty-common-4.1.68.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-transport-native-epoll\4.1.67.Final\netty-transport-native-epoll-4.1.67.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.67.Final\netty-transport-native-kqueue-4.1.67.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.67.Final\netty-transport-native-unix-common-4.1.67.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-transport\4.1.68.Final\netty-transport-4.1.68.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-resolver\4.1.68.Final\netty-resolver-4.1.68.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-api\1.6.0\opentelemetry-api-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-context\1.6.0\opentelemetry-context-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-exporter-logging\1.6.0\opentelemetry-exporter-logging-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-sdk-metrics\1.6.0-alpha\opentelemetry-sdk-metrics-1.6.0-alpha.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-sdk-common\1.6.0\opentelemetry-sdk-common-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure-spi\1.6.0\opentelemetry-sdk-extension-autoconfigure-spi-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-sdk-extension-autoconfigure\1.6.0-alpha\opentelemetry-sdk-extension-autoconfigure-1.6.0-alpha.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-sdk-trace\1.6.0\opentelemetry-sdk-trace-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-api-metrics\1.6.0-alpha\opentelemetry-api-metrics-1.6.0-alpha.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-sdk\1.6.0\opentelemetry-sdk-1.6.0.jar;C:\Users\Enrico Yang\.m2\repository\io\opentelemetry\opentelemetry-semconv\1.6.0-alpha\opentelemetry-semconv-1.6.0-alpha.jar;C:\Users\Enrico Yang\.m2\repository\io\ous\jtoml\2.0.0\jtoml-2.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\asynchttpclient\async-http-client\2.12.3\async-http-client-2.12.3.jar;C:\Users\Enrico Yang\.m2\repository\org\asynchttpclient\async-http-client-netty-utils\2.12.3\async-http-client-netty-utils-2.12.3.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-codec-socks\4.1.60.Final\netty-codec-socks-4.1.60.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-handler-proxy\4.1.60.Final\netty-handler-proxy-4.1.60.Final.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-transport-native-epoll\4.1.60.Final\netty-transport-native-epoll-4.1.60.Final-linux-x86_64.jar;C:\Users\Enrico Yang\.m2\repository\io\netty\netty-transport-native-kqueue\4.1.60.Final\netty-transport-native-kqueue-4.1.60.Final-osx-x86_64.jar;C:\Users\Enrico Yang\.m2\repository\org\reactivestreams\reactive-streams\1.0.3\reactive-streams-1.0.3.jar;C:\Users\Enrico Yang\.m2\repository\com\typesafe\netty\netty-reactive-streams\2.0.4\netty-reactive-streams-2.0.4.jar;C:\Users\Enrico Yang\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-http\4.0.0\selenium-http-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\4.0.0\selenium-edge-driver-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\4.0.0\selenium-firefox-driver-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-devtools-v85\4.0.0\selenium-devtools-v85-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-support\4.0.0\selenium-support-4.0.0.jar;C:\Users\Enrico Yang\.m2\repository\org\testng\testng\7.4.0\testng-7.4.0.jar;C:\Users\Enrico Yang\.m2\repository\com\beust\jcommander\1.78\jcommander-1.78.jar;C:\Users\Enrico Yang\.m2\repository\org\webjars\jquery\3.5.1\jquery-3.5.1.jar;C:\Users\Enrico Yang\.m2\repository\commons-io\commons-io\1.4\commons-io-1.4.jar;C:\Users\Enrico Yang\.m2\repository\javax\mail\mail\1.4.7\mail-1.4.7.jar;C:\Users\Enrico Yang\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\velocity\velocity\1.7\velocity-1.7.jar;C:\Users\Enrico Yang\.m2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;C:\Users\Enrico Yang\.m2\repository\commons-lang\commons-lang\2.4\commons-lang-2.4.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\poi\poi\4.0.1\poi-4.0.1.jar;C:\Users\Enrico Yang\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\commons\commons-collections4\4.2\commons-collections4-4.2.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\commons\commons-math3\3.6.1\commons-math3-3.6.1.jar;C:\Users\Enrico Yang\.m2\repository\postgresql\postgresql\9.1-901-1.jdbc4\postgresql-9.1-901-1.jdbc4.jar;C:\Users\Enrico Yang\.m2\repository\net\java\dev\jna\jna-platform\5.6.0\jna-platform-5.6.0.jar;C:\Users\Enrico Yang\.m2\repository\net\java\dev\jna\jna\5.6.0\jna-5.6.0.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-java\3.141.59\selenium-java-3.141.59.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\Enrico Yang\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\Enrico Yang\.m2\repository\net\bytebuddy\byte-buddy\1.8.15\byte-buddy-1.8.15.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\Enrico Yang\.m2\repository\com\squareup\okhttp3\okhttp\3.11.0\okhttp-3.11.0.jar;C:\Users\Enrico Yang\.m2\repository\com\squareup\okio\okio\1.14.0\okio-1.14.0.jar;C:\Users\Enrico Yang\.m2\repository\ru\yandex\qatools\ashot\ashot\1.5.4\ashot-1.5.4.jar;C:\Users\Enrico Yang\.m2\repository\com\google\code\gson\gson\2.6.2\gson-2.6.2.jar;C:\Users\Enrico Yang\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Enrico Yang\.m2\repository\net\sourceforge\tess4j\tess4j\4.1.1\tess4j-4.1.1.jar;C:\Users\Enrico Yang\.m2\repository\com\github\jai-imageio\jai-imageio-core\1.4.0\jai-imageio-core-1.4.0.jar;C:\Users\Enrico Yang\.m2\repository\org\ghost4j\ghost4j\1.0.1\ghost4j-1.0.1.jar;C:\Users\Enrico Yang\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Enrico Yang\.m2\repository\commons-beanutils\commons-beanutils\1.9.2\commons-beanutils-1.9.2.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\xmlgraphics\xmlgraphics-commons\1.4\xmlgraphics-commons-1.4.jar;C:\Users\Enrico Yang\.m2\repository\com\lowagie\itext\2.1.7\itext-2.1.7.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\pdfbox\pdfbox\2.0.11\pdfbox-2.0.11.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\pdfbox\fontbox\2.0.11\fontbox-2.0.11.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\pdfbox\pdfbox-tools\2.0.11\pdfbox-tools-2.0.11.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\pdfbox\pdfbox-debugger\2.0.11\pdfbox-debugger-2.0.11.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\pdfbox\jbig2-imageio\3.0.1\jbig2-imageio-3.0.1.jar;C:\Users\Enrico Yang\.m2\repository\net\sourceforge\lept4j\lept4j\1.10.0\lept4j-1.10.0.jar;C:\Users\Enrico Yang\.m2\repository\org\jboss\jboss-vfs\3.2.12.Final\jboss-vfs-3.2.12.Final.jar;C:\Users\Enrico Yang\.m2\repository\org\jboss\logging\jboss-logging\3.1.4.GA\jboss-logging-3.1.4.GA.jar;C:\Users\Enrico Yang\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\Enrico Yang\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\Enrico Yang\.m2\repository\org\slf4j\jul-to-slf4j\1.7.25\jul-to-slf4j-1.7.25.jar;C:\Users\Enrico Yang\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.25\jcl-over-slf4j-1.7.25.jar;C:\Users\Enrico Yang\.m2\repository\org\slf4j\log4j-over-slf4j\1.7.25\log4j-over-slf4j-1.7.25.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\camel\camel-barcode\2.21.1\camel-barcode-2.21.1.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\camel\camel-core\2.21.1\camel-core-2.21.1.jar;C:\Users\Enrico Yang\.m2\repository\com\sun\xml\bind\jaxb-core\2.3.0\jaxb-core-2.3.0.jar;C:\Users\Enrico Yang\.m2\repository\com\sun\xml\bind\jaxb-impl\2.3.0\jaxb-impl-2.3.0.jar;C:\Users\Enrico Yang\.m2\repository\com\google\zxing\core\3.4.1\core-3.4.1.jar;C:\Users\Enrico Yang\.m2\repository\com\google\zxing\javase\3.4.1\javase-3.4.1.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\Enrico Yang\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Enrico Yang\.m2\repository\org\json\json\20210307\json-20210307.jar;C:\Users\Enrico Yang\.m2\repository\com\jayway\restassured\json-schema-validator\2.9.0\json-schema-validator-2.9.0.jar;C:\Users\Enrico Yang\.m2\repository\com\github\fge\json-schema-validator\2.2.6\json-schema-validator-2.2.6.jar;C:\Users\Enrico Yang\.m2\repository\joda-time\joda-time\2.3\joda-time-2.3.jar;C:\Users\Enrico Yang\.m2\repository\com\googlecode\libphonenumber\libphonenumber\6.2\libphonenumber-6.2.jar;C:\Users\Enrico Yang\.m2\repository\com\github\fge\json-schema-core\1.2.5\json-schema-core-1.2.5.jar;C:\Users\Enrico Yang\.m2\repository\com\github\fge\uri-template\0.9\uri-template-0.9.jar;C:\Users\Enrico Yang\.m2\repository\com\github\fge\msg-simple\1.1\msg-simple-1.1.jar;C:\Users\Enrico Yang\.m2\repository\com\github\fge\btf\1.2\btf-1.2.jar;C:\Users\Enrico Yang\.m2\repository\com\github\fge\jackson-coreutils\1.8\jackson-coreutils-1.8.jar;C:\Users\Enrico Yang\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.2.3\jackson-databind-2.2.3.jar;C:\Users\Enrico Yang\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.2.3\jackson-annotations-2.2.3.jar;C:\Users\Enrico Yang\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.2.3\jackson-core-2.2.3.jar;C:\Users\Enrico Yang\.m2\repository\org\mozilla\rhino\1.7R4\rhino-1.7R4.jar;C:\Users\Enrico Yang\.m2\repository\javax\mail\mailapi\1.4.3\mailapi-1.4.3.jar;C:\Users\Enrico Yang\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\Enrico Yang\.m2\repository\io\rest-assured\rest-assured\3.1.0\rest-assured-3.1.0.jar;C:\Users\Enrico Yang\.m2\repository\org\codehaus\groovy\groovy\2.4.12\groovy-2.4.12.jar;C:\Users\Enrico Yang\.m2\repository\org\codehaus\groovy\groovy-xml\2.4.12\groovy-xml-2.4.12.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\httpcomponents\httpmime\4.5.1\httpmime-4.5.1.jar;C:\Users\Enrico Yang\.m2\repository\org\hamcrest\hamcrest-library\1.3\hamcrest-library-1.3.jar;C:\Users\Enrico Yang\.m2\repository\org\ccil\cowan\tagsoup\tagsoup\1.2.1\tagsoup-1.2.1.jar;C:\Users\Enrico Yang\.m2\repository\io\rest-assured\json-path\3.1.0\json-path-3.1.0.jar;C:\Users\Enrico Yang\.m2\repository\org\codehaus\groovy\groovy-json\2.4.12\groovy-json-2.4.12.jar;C:\Users\Enrico Yang\.m2\repository\io\rest-assured\rest-assured-common\3.1.0\rest-assured-common-3.1.0.jar;C:\Users\Enrico Yang\.m2\repository\io\rest-assured\xml-path\3.1.0\xml-path-3.1.0.jar;C:\Users\Enrico Yang\.m2\repository\org\apache\commons\commons-lang3\3.4\commons-lang3-3.4.jar;C:\Users\Enrico Yang\.m2\repository\javax\xml\bind\jaxb-api\2.2.12\jaxb-api-2.2.12.jar;C:\Users\Enrico Yang\.m2\repository\org\samba\jcifs\jcifs\1.2.19\jcifs-1.2.19.jar;C:\Users\Enrico Yang\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\Enrico Yang\.m2\repository\com\github\stephenc\monte\monte-screen-recorder\0.7.7.0\monte-screen-recorder-0.7.7.0.jar"" com.intellij.rt.testng.RemoteTestNGStarter -usedefaultlisteners false -socket53409 ""@w@C:\Users\ENRICO~1\AppData\Local\Temp\idea_working_dirs_testng.tmp"" -temp ""C:\Users\ENRICO~1\AppData\Local\Temp\idea_testng.tmp"" Nov 19, 2021 11:01:03 AM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFO: Using OpenTelemetry for tracing 11:01:03.747 [TestNG-tests-1] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework 11:01:03.762 [TestNG-tests-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple 11:01:03.762 [TestNG-tests-1] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4 11:01:03.762 [TestNG-tests-1] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@390d0481 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @22d5766a 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.(long, int): unavailable 11:01:03.778 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 4236247040 bytes (maybe) 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: C:\Users\ENRICO~1\AppData\Local\Temp (java.io.tmpdir) 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model) 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - Platform: Windows 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false 11:01:03.794 [TestNG-tests-1] DEBUG io.netty.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available 11:01:03.809 [TestNG-tests-1] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024 11:01:03.809 [TestNG-tests-1] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096 11:01:03.934 [TestNG-tests-1] DEBUG io.netty.handler.ssl.JdkSslContext - Default protocols (JDK): [TLSv1.3, TLSv1.2, TLSv1.1, TLSv1]  11:01:03.934 [TestNG-tests-1] DEBUG io.netty.handler.ssl.JdkSslContext - Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384] 11:01:03.950 [TestNG-tests-1] DEBUG io.netty.channel.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 12 11:01:03.950 [TestNG-tests-1] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false 11:01:03.950 [TestNG-tests-1] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numHeapArenas: 12 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.numDirectArenas: 12 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.pageSize: 8192 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxOrder: 11 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.chunkSize: 16777216 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.smallCacheSize: 256 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.normalCacheSize: 64 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedBufferCapacity: 32768 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimInterval: 8192 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.cacheTrimIntervalMillis: 0 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.useCacheForAllThreads: true 11:01:03.981 [TestNG-tests-1] DEBUG io.netty.buffer.PooledByteBufAllocator - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023 11:01:03.997 [TestNG-tests-1] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.allocator.type: pooled 11:01:03.997 [TestNG-tests-1] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.threadLocalDirectBufferSize: 0 11:01:03.997 [TestNG-tests-1] DEBUG io.netty.buffer.ByteBufUtil - -Dio.netty.maxThreadLocalCharBufferSize: 16384 11:01:04.216 [Forwarding newSession on session null to remote] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 11200 (auto-detected) 11:01:04.216 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false 11:01:04.216 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false 11:01:04.263 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtilInitializations - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1) 11:01:04.263 [Forwarding newSession on session null to remote] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200 11:01:04.309 [Forwarding newSession on session null to remote] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: e8:d8:d1:ff:fe:c4:c5:30 (auto-detected) 11:01:04.341 [AsyncHttpClient-1-2] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true 11:01:04.341 [AsyncHttpClient-1-2] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true 11:01:04.341 [AsyncHttpClient-1-2] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@29beff94 11:01:04.356 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.channel.NettyConnectListener - Using new Channel '[id: 0xdcb343ec, L:/10.48.212.91:53440 - R:/10.48.212.35:5555]' for 'POST' to '/wd/hub/session' 11:01:04.372 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096 11:01:04.372 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2 11:01:04.372 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16 11:01:04.372 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8 11:01:04.372 [AsyncHttpClient-1-2] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.delayedQueue.ratio: 8 11:01:06.106 [AsyncHttpClient-1-2] DEBUG io.netty.handler.codec.compression.Brotli - brotli4j not in the classpath; Brotli support will be unavailable. 11:01:06.106 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.handler.HttpHandler -   Request DefaultHttpRequest(decodeResult: success, version: HTTP/1.1) POST /wd/hub/session HTTP/1.1 User-Agent: selenium/4.0.0 (java windows) traceparent: 00-269642521d010b615ffe9424776ba0d1-6e268322d8b43c8a-01 Content-Length: 486 Content-Type: application/json; charset=utf-8 host: 10.48.212.35:5555 accept: */*  Response DefaultHttpResponse(decodeResult: success, version: HTTP/1.1) HTTP/1.1 200 OK Date: Fri, 19 Nov 2021 02:52:29 GMT Server: Jetty/5.1.x (Windows 10/10.0 amd64 java/11.0.10 Expires: Thu, 01 Jan 1970 00:00:00 GMT Cache-Control: no-cache Cache-Control: no-cache Expires: Thu, 01 Jan 1970 00:00:00 GMT Content-Type: application/json; charset=utf-8 content-length: 1285  11:01:06.122 [AsyncHttpClient-1-2] DEBUG org.asynchttpclient.netty.channel.ChannelManager - Adding key: http://10.48.212.35:5555 for channel [id: 0xdcb343ec, L:/10.48.212.91:53440 - R:/10.48.212.35:5555] Nov 19, 2021 11:01:06 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.codehaus.groovy.reflection.CachedClass (file:/C:/Users/Enrico%20Yang/.m2/repository/org/codehaus/groovy/groovy/2.4.12/groovy-2.4.12.jar) to method java.lang.Object.finalize() WARNING: Please consider reporting this to the maintainers of org.codehaus.groovy.reflection.CachedClass WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release 11:01:06.841 [TestNG-tests-1] DEBUG org.apache.http.impl.conn.BasicClientConnectionManager - Get connection for route {}->http://10.48.213.53:8090 11:01:06.841 [TestNG-tests-1] DEBUG org.apache.http.impl.conn.DefaultClientConnectionOperator - Connecting to 10.48.213.53:8090 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.client.protocol.RequestAddCookies - CookieSpec selected: ignoreCookies 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.client.protocol.RequestAuthCache - Auth cache not set in the context 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.client.protocol.RequestTargetAuthentication - Target auth state: UNCHALLENGED 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.client.protocol.RequestProxyAuthentication - Proxy auth state: UNCHALLENGED 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.impl.client.DefaultHttpClient - Attempt 1 to execute request 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.impl.conn.DefaultClientConnection - Sending request: POST /emulator/start HTTP/1.1 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""POST /emulator/start HTTP/1.1[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""Accept: */*[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""Content-Type: application/json; charset=UTF-8[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""Content-Length: 449[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""Host: 10.48.213.53:8090[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""Connection: Keep-Alive[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""User-Agent: Apache-HttpClient/4.5.13 (Java/11.0.10)[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""[\r][\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> POST /emulator/start HTTP/1.1 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> Accept: */* 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> Content-Type: application/json; charset=UTF-8 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> Content-Length: 449 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> Host: 10.48.213.53:8090 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> Connection: Keep-Alive 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> User-Agent: Apache-HttpClient/4.5.13 (Java/11.0.10) 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.headers - >> Accept-Encoding: gzip,deflate 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""{[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""  ""wait-for-connected"": true,[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""  ""server"": {[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""  ""url"": ""https://zsbp-device.zpc-stage.zebra.com/weblink/zsbp/connect/""[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""  },  ""devices"": {[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""prefix"":""Node3"",[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""count"": 1,[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""max-start-delay"": ""1"",[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""min-start-delay"": ""1"",[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""ttl"": -1,[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""ssl"": true,[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""customer-id"": ""2fbe7d7e-e9ca-4a0e-bf72-40178e475b2c"",[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    ""personality"": {[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""      ""model"": ""ZSB-DP12"",[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""      ""dpi"": 300,[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""      ""weblink-protocol"": ""v3.weblink.zebra.com""[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""    }[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""  }[\n]"" 11:01:06.856 [TestNG-tests-1] DEBUG org.apache.http.wire -  >> ""}"" 11:01:06.872 [TestNG-tests-1] DEBUG org.apache.http.wire -","closed","I-question,","enrico-j-yang","2021-11-19T03:12:59Z","2021-12-20T00:07:28Z"
"","10896","[🐛 Bug]: Clicking on button do nothing in chrome browser, the same button opens up a child window when I click it manually","### What happened?  I have problem with clicking on a button using selenium in **Chrome** browser only.  **Scenario:** In our web application there is a scenario where logged in user can choose the products, add it to cart, select payment methods and Click on **Proceed to Payment**. On clicking **Proceed to Payment** to secure payment, it should open a new child window with option to login to the payment method and process payments.   In the above scenario, I have issue with Click():  After selecting Google pay radio, when I click on _Proceed to Payment_ Nothing happens, no errors thrown. I can't see the child window to Sign in to _**Google pay**_. (Tried all the possible ways - Selenium Click() & JS click, Keyboard inputs & Actions). Surprisingly in the same automation session if I click that button manually it is opening sign in to Google  child window. I have checked if there frames nothing is there. Don't understand why the button press doesn't open child window using automation methods. click doesn't work, though the button returns true for isDisplayed(), is Enabled & clickable .   This issue happens only in chrome browser. Other browsers open the Google sign in child window when I click on Proceed To Payment. `   ### How can we reproduce the issue?  ```shell I cant share my application flow. It happens specific to ecommerce payment method Google and Chrome browser. I have tried below methods to click on the element.   String payMethod = ""GooglePay ""; if(clickPayMethodV2(payMethod)) { 	clickElement(agreeCheckBox, ""Agree Terms Check box""); 	Assert.assertTrue(isElemenEnbaledClickable(ProceedToSecurePay, 4), ""ProceedToSecurePay button is disabled for PayPal""); 	boolean status =	isElemenEnbaledClickable(ProceedToSecurePay, 5); 		JavascriptExecutor js = (JavascriptExecutor) driver;	 		//js.executeScript(""arguments[0].scrollIntoView();"", element);	 		//Thread.sleep(1000);	 //				js.executeScript(""arguments[0].click();"", element); 		driver.findElement(By.cssSelector(""srgc2-secure-payment > form"")).click(); 		ProceedToSecurePay = driver.findElement(By.xpath(""//button[contains(.,'Proceed to secure payment')]"")); 		js.executeScript(""arguments[0].focus;"", ProceedToSecurePay); 		js.executeScript(""arguments[0].click();"", ProceedToSecurePay); 		clickElement(ProceedToSecurePay, ""ProceedToSecurePay""); 		 		js.executeScript(""var ele = arguments[0];ele.addEventListener('click', function() {ele.setAttribute('automationTrack','true');});"",ProceedToSecurePay); 		ProceedToSecurePay.click(); 		System.out.println(ProceedToSecurePay.getAttribute(""automationTrack""));	 		//System.out.println(ProceedToSecurePay.getShadowRoot().toString()); 		click(ProceedToSecurePay, ""Proceed To SecurePay button""); 	 	 	clickElementJS(ProceedToSecurePay, ""ProceedToSecurePay""); 	} else { 	logInfoExtent(""Failed to click on Payment method: ""+payMethod +""in checkout Step 3. PAYMENT""); 	throw new TestException(""Failed to select Payment method: ""+payMethod +""in checkout Step 3. PAYMENT""); }   Actions action=new Actions(driver); action.moveToElement(ProceedToSecurePay).perform(); action.moveToElement(ProceedToSecurePay).click().perform();  ProceedToSecurePay.submit(); ProceedToSecurePay.sendKeys(Keys.ENTER); ```   ### Relevant log output  ```shell There were no errors thrown after Click() method.   But there is an error in console.  ""Cannot show PaymentRequest UI in a preview page or a background tab."" PaymentRequest.show() requires either transient user activation or delegated payment request capability ```   ### Operating System  Windows 10  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 104 or any other 102 103  ### What are the browser driver(s) and version(s) where you see this issue?   104.0.5112.29   ### Are you using Selenium Grid?  No","closed","G-chromedriver,","KiranTest","2022-07-21T11:00:06Z","2022-07-22T12:40:26Z"
"","10175","[🐛 Bug]: Custom capability not working properly in Selenium 4","### What happened?  I have one hub with two nodes. First node is having custom capability (""gsg:customcap"", true) & the second node is the regular one. When I'm passing (""gsg:customcap"", true) capability in my code, then It gets executed in Node1. But when I'm NOT PASSING the custom capability, then also it gets executed in First node which is not expected.  I want Node1 to take only those session requests which have the custom capability (""gsg:customcap"", true). Please check & suggest.  ### How can we reproduce the issue?  ```shell Start the hub and 2 nodes: java -jar selenium-server-4.1.1.jar hub   A special node(Node1) that supports a custom capability java -jar selenium-server-4.1.1.jar node --detect-drivers false --driver-configuration display-name=""Chrome (custom capability true)"" max-sessions=1 stereotype={\""browserName\"":\""chrome\"",\""gsg:customcap\"":true} --port 6161   A regular node(Node2) that doesn't define any custom capabilities java -jar selenium-server-4.1.1.jar node --detect-drivers false --driver-configuration display-name=""Chrome"" max-sessions=1 stereotype={\""browserName\"":\""chrome\""} --port 6262 ```   ### Relevant log output  ```shell I expect that when I run the below code, it will be executed only on the second node, but it runs on all 2 of them.  DesiredCapabilities capabilities = new DesiredCapabilities(); capabilities.setCapability(""browserName"",""chrome"");  WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444""), capabilities); driver.get(""http://example.com""); Thread.sleep(1000); driver.quit(); ```   ### Operating System  Linux(RHEL7)  ### Selenium version  selenium-server-4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Browser: Chrome , Browser version: 95  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","kartick-s","2021-12-23T06:23:27Z","2022-02-20T00:10:25Z"
"","10128","[🐛 Bug]: Custom capability not working with Selenium 4","### What happened?  I have one hub with two nodes. First node is having custom capability (""goog:customcap"", true) & second node is the regular one. I'm passing (""goog:customcap"", true) capability in my code so that it gets executed in Node1. However observed that it's randomly routed to node1 & node2 for execution. Which is not expected.  Kindly suggest how to implement custom capability in Selenium 4.  ### How can we reproduce the issue?  ```shell Start the hub and 2 nodes: java -jar selenium-server-4.0.0.jar hub   A special node that supports a custom capability java -jar selenium-server-4.0.0.jar node --detect-drivers false --driver-configuration display-name=""Chrome (custom capability true)"" max-sessions=1 stereotype={\""browserName\"":\""chrome\"",\""goog:customcap\"":true} --port 6161   A regular node that doesn't define any custom capabilities java -jar selenium-server-4.0.0.jar node --detect-drivers false --driver-configuration display-name=""Chrome"" max-sessions=1 stereotype={\""browserName\"":\""chrome\""} --port 6262 ```   ### Relevant log output  ```shell I expect that when I run the below code, it will be executed only on the first node, but it runs on all 2 of them.  DesiredCapabilities capabilities = new DesiredCapabilities();  capabilities.setCapability(""browserName"",""chrome""); capabilities.setCapability(""goog:customcap"", true);    WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444""), capabilities); driver.get(""http://example.com""); Thread.sleep(1000); driver.quit(); ```   ### Operating System  Hub--> Linux(RHEL7), Node --> Windows server 2016  ### Selenium version  selenium-server-4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Browser: Chrome , Browser version: 95  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95  ### Are you using Selenium Grid?  4.0.0","closed","","kartick-s","2021-12-10T10:38:38Z","2022-02-11T00:07:51Z"
"","10559","[🐛 Bug]: unable to connect to node to hub when using sdf port forwarding via haproxy server","### What happened?  I have installed selenium version 4 hub on a debian 11 machine which is running fine and a node is installed on another debian 11 machine. Node joins the hub when using the public IP address of the hub as shown in the below command and everything is working fine  java -jar selenium-server-4.1.2.jar node --hub http://public_ipaddress:4444 --detect-drivers false --log-level ""fine"" --port 5555 --override-max-sessions true --max-sessions 74 --max-threads 55 --driver-configuration display-name=""$(hostname)"" max-sessions=74  stereotype='{""browserName"":""chrome"",""cluster:pcgeo"":""us}'  We  have made a second setup wherein the hub is behind a haproxy service and local port forwarding is used and following is the command used to start the node  java -jar selenium-server-4.1.2.jar node --hub http://127.0.0.1:35577/wd/hub --detect-drivers false --log-level ""fine"" --port 5555 --override-max-sessions true --max-sessions 74 --max-threads 55 --driver-configuration display-name=""$(hostname)"" max-sessions=74  stereotype='{""browserName"":""chrome"",""cluster:pcgeo"":""us""}'  Here port forwarding is used on the selenium node, where the port number 35577 is sending the request to haproxy server on bind port 35555 and then it will be  forwarded to the backend selenium hub server public_ipaddress:4444. However, the node is not connecting to the hub when using the above command and it says   15:40:55.925 INFO [NodeServer$1.start] - Starting registration process for node id 95e7aa7d-d8fa-4ef2-b800-7a915562e6e4 15:40:55.926 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://public_IP_address_of_node:5555 15:40:55.937 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:05.949 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:15.963 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:25.974 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:35.985 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:45.996 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:56.003 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:06.011 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:16.025 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:26.033 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:36.041 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:46.047 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:55.932 INFO [NodeServer$1.lambda$start$1] - Sending registration event...  ### How can we reproduce the issue?  ```shell java -jar selenium-server-4.1.2.jar node --hub http://127.0.0.1:35577/wd/hub --detect-drivers false --log-level ""fine"" --port 5555 --override-max-sessions true --max-sessions 74 --max-threads 55 --driver-configuration display-name=""$(hostname)"" max-sessions=74  stereotype='{""browserName"":""chrome"",""cluster:pcgeo"":""us""}' ```   ### Relevant log output  ```shell 15:40:55.925 INFO [NodeServer$1.start] - Starting registration process for node id 95e7aa7d-d8fa-4ef2-b800-7a915562e6e4 15:40:55.926 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://public_IP_address_of_node:5555 15:40:55.937 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:05.949 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:15.963 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:25.974 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:35.985 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:45.996 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:41:56.003 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:06.011 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:16.025 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:26.033 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:36.041 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:46.047 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 15:42:55.932 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ### Operating System  debian 11  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  chrome browser and  version 99  ### What are the browser driver(s) and version(s) where you see this issue?  chromdriver 99  ### Are you using Selenium Grid?  yes","closed","C-grid,","shettypriy","2022-04-19T16:34:55Z","2022-05-22T00:11:34Z"
"","10245","[🐛 Bug]: Selenium crash due to JS heap memory full issue in Edge Browser Python","### What happened?  I have been downloading some files using selenium and after a certain number of files downloaded from the website, the Edge driver crashes with the error of FATAL Javascript OOM in GC  during deserialization.   How do I fix this?     ### How can we reproduce the issue?  ```shell Download a large number of files that will keep on storing in a cache of JS Heap ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""C:\Program Files\JetBrains\PyCharm Community Edition 2021.2\plugins\python-ce\helpers\pydev\pydevd.py"", line 1483, in _exec     pydev_imports.execfile(file, globals, locals)  # execute the script   File ""C:\Program Files\JetBrains\PyCharm Community Edition 2021.2\plugins\python-ce\helpers\pydev\_pydev_imps\_pydev_execfile.py"", line 18, in execfile     exec(compile(contents+""\n"", file, 'exec'), glob, loc)   File ""C:/Users/aftab.ahsan/Desktop/Bot/main.py"", line 229, in      lock_tbody = locktable.find_element_by_tag_name('tbody')   File ""C:\Users\aftab.ahsan\Anaconda3\envs\resume1\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 305, in find_element_by_tag_name     return self.find_element(by=By.TAG_NAME, value=name)   File ""C:\Users\aftab.ahsan\Anaconda3\envs\resume1\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 659, in find_element     {""using"": by, ""value"": value})['value']   File ""C:\Users\aftab.ahsan\Anaconda3\envs\resume1\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 633, in _execute     return self._parent.execute(command, params)   File ""C:\Users\aftab.ahsan\Anaconda3\envs\resume1\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\aftab.ahsan\Anaconda3\envs\resume1\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidSessionIdException: Message: invalid session id ```   ### Operating System  Windows 10  ### Selenium version  Selenium = 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Microsoft Edge  ### What are the browser driver(s) and version(s) where you see this issue?  Web Driver  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","ahsantfw","2022-01-12T08:38:35Z","2022-02-26T00:08:51Z"
"","10270","How to bypass azure AD authentication using selenium C# / Specflow","### What happened?  I have a web application where it is asking for a login, after login I can enter into the application. But I want to bypass the Azure AD authentication using selenium C#, how can I do that. Is there any possibility to retrieve the token from backend and use it in the automation code before entering in to the application .  ### How can we reproduce the issue?  ```shell I'm doing research but I didn't get any relevant solution. ```   ### Relevant log output  ```shell Can u suggest some solution for this issue ```   ### Operating System  Windows10  ### Selenium version  C#  ### What are the browser(s) and version(s) where you see this issue?  chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 97.0.4697.7100  ### Are you using Selenium Grid?  3.141.0","closed","I-question,","NikithaPaishetty","2022-01-21T04:55:27Z","2022-02-21T00:09:08Z"
"","10345","[🐛 Bug]: Critical issue: Cannot close a tab in latest FireFox 97.0","### What happened?  I have a test that opens and closes several tabs. After upgrading to Firefox 97.0, closing a tab fails with `ConnectionFailedException`.   Apparently, Selenium 4.1.2 doesn't support the CDP version of Firefox. But I don't even want to use CDP! I just want to close the tab. :(   ``` org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to http://localhost:61974/devtools/browser/afce1689-e3ad-4cae-89c5-c1c0e38b65d8 Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'Andreis-MacBook-Pro-2.local', ip: 'fe80:0:0:0:1c27:9d18:3512:9320%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_322' Driver info: driver.version: RemoteWebDriver  	at org.openqa.selenium.remote.http.netty.NettyWebSocket.(NettyWebSocket.java:104) 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.lambda$create$3(NettyWebSocket.java:137) 	at org.openqa.selenium.remote.http.netty.NettyClient.openSocket(NettyClient.java:118) 	at org.openqa.selenium.devtools.Connection.(Connection.java:77) 	at org.openqa.selenium.firefox.FirefoxDriver.maybeGetDevTools(FirefoxDriver.java:310) 	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:440) 	at integration.WebDriverConditionsTest.checkNumberOfOpenWindows(WebDriverConditionsTest.java:151) ```  ### How can we reproduce the issue?  ```shell public class FirefoxCdpTest {   public static void main(String[] args) {     WebDriverManager.firefoxdriver().setup();     FirefoxDriver driver = new FirefoxDriver();     driver.close();   } } ```   ### Relevant log output  ```shell [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Reading https://api.github.com/repos/mozilla/geckodriver/releases to seek geckodriver [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Exporting webdriver.gecko.driver as /Users/andrei/.cache/selenium/geckodriver/mac64/0.30.0/geckodriver 1644423218239	geckodriver	INFO	Listening on 127.0.0.1:57610 1644423218513	mozrunner::runner	INFO	Running command: ""/Applications/Firefox.app/Contents/MacOS/firefox-bin"" ""--marionette"" ""--remote-debugging-port"" ""59686"" ""-foreground"" ""-no-remote"" ""-profile"" ""/var/folders/dn/94xhn6fx70557vs13_5v0y8r0000gn/T/rust_mozprofileN99smV"" 1644423219007	Marionette	INFO	Marionette enabled 2022-02-09 18:13:39.670 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-02-09 18:13:39.671 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-02-09 18:13:39.671 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-02-09 18:13:39.672 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-02-09 18:13:39.673 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-02-09 18:13:39.674 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. 2022-02-09 18:13:39.674 firefox-bin[95306:1849189] Warning: Expected min height of view: () to be less than or equal to 30 but got a height of 32.000000. This error will be logged once per view in violation. console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /var/folders/dn/94xhn6fx70557vs13_5v0y8r0000gn/T/rust_mozprofileN99smV/search.json.mozlz4"", (void 0))) console.error: BackgroundUpdate:    _reasonsToNotScheduleUpdates: Failed to check for Maintenance Service Registry Key: [Exception... ""Component returned failure code: 0x80004001 (NS_ERROR_NOT_IMPLEMENTED) [nsIUpdateProcessor.getServiceRegKeyExists]""  nsresult: ""0x80004001 (NS_ERROR_NOT_IMPLEMENTED)""  location: ""JS frame :: resource://gre/modules/BackgroundUpdate.jsm :: _reasonsToNotScheduleUpdates :: line 241""  data: no] DevTools listening on ws://localhost:59686/devtools/browser/12ee7271-550c-4ea0-a3cd-e2a9f4d9bf4a 1644423220856	Marionette	INFO	Listening on port 54788 1644423220889	RemoteAgent	WARN	TLS certificate errors will be ignored for this session Feb 09, 2022 6:13:40 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C JavaScript error: chrome://remote/content/server/WebSocketHandshake.jsm, line 117: Error: The handshake request has incorrect Origin header http://localhost:59686 Feb 09, 2022 6:13:41 PM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Invalid Status code=400 text=Bad Request java.io.IOException: Invalid Status code=400 text=Bad Request 	at org.asynchttpclient.netty.handler.WebSocketHandler.abort(WebSocketHandler.java:92) 	at org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(WebSocketHandler.java:118) 	at org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(AsyncHttpClientHandler.java:78) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:314) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:435) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:750)  Exception in thread ""main"" org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to http://localhost:59686/devtools/browser/12ee7271-550c-4ea0-a3cd-e2a9f4d9bf4a Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'Andreis-MacBook-Pro-2.local', ip: 'fe80:0:0:0:1c27:9d18:3512:9320%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_322' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.(NettyWebSocket.java:104) 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.lambda$create$3(NettyWebSocket.java:137) 	at org.openqa.selenium.remote.http.netty.NettyClient.openSocket(NettyClient.java:118) 	at org.openqa.selenium.devtools.Connection.(Connection.java:77) 	at org.openqa.selenium.firefox.FirefoxDriver.maybeGetDevTools(FirefoxDriver.java:310) 	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:440) 	at integration.FirefoxCdpTest.main(FirefoxCdpTest.java:16)  Process finished with exit code 1 ```   ### Operating System  MacOS Monterey  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  FireFox 97.0  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 0.30.0  ### Are you using Selenium Grid?  no","closed","I-defect,","asolntsev","2022-02-09T16:16:39Z","2022-03-14T00:09:48Z"
"","10239","[🐛 Bug]: Unable to run tests with Serenity","### What happened?  I have a Serenity BDD framework. Whenever I'm trying to run tests, I'm getting errors: Caused by: net.thucydides.core.webdriver.DriverConfigurationError: Could not instantiate new WebDriver instance of type class org.openqa.selenium.remote.RemoteWebDriver (Unable to establish websocket connection to http://172.26.0.5:4444/session/70b3d1363b937ab928b90399eaa8ee13/se/cdp Build info: version: '4.1.1', revision: 'e8fcc2cecf'  None of the tests works. BEfore, with Selenium Grid 3 everything was working fine.      ### How can we reproduce the issue?  ```shell Use 3.1.15 ```   ### Relevant log output  ```shell WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by net.thucydides.core.steps.StepInterceptor (file:/C:/Users/user/.m2/repository/net/serenity-bdd/serenity-core/3.1.15/serenity-core-3.1.15.jar) to field java.lang.reflect.Method.root WARNING: Please consider reporting this to the maintainers of net.thucydides.core.steps.StepInterceptor WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release Jan 10, 2022 10:36:31 AM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFO: Using OpenTelemetry for tracing Jan 10, 2022 10:36:36 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Jan 10, 2022 10:36:36 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 96 Jan 10, 2022 10:36:46 AM org.openqa.selenium.remote.http.netty.NettyWebSocket lambda$new$0 WARNING: connection timed out: /172.26.0.5:4444 java.net.ConnectException: connection timed out: /172.26.0.5:4444 	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262) 	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) 	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:829) Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /172.26.0.5:4444 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261) 	... 9 more  Jan 10, 2022 10:36:46 AM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: connection timed out: /172.26.0.5:4444 java.net.ConnectException: connection timed out: /172.26.0.5:4444 	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262) 	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) 	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:829) Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /172.26.0.5:4444 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261) 	... 9 more   net.thucydides.core.webdriver.DriverConfigurationError: Could not instantiate class org.openqa.selenium.remote.RemoteWebDriver  	at net.thucydides.core.webdriver.WebDriverFacade.newDriverInstance(WebDriverFacade.java:144) 	at net.thucydides.core.webdriver.WebDriverFacade.newProxyDriver(WebDriverFacade.java:132) 	at net.thucydides.core.webdriver.WebDriverFacade.getProxiedDriver(WebDriverFacade.java:102) 	at net.thucydides.core.webdriver.WebDriverFacade.get(WebDriverFacade.java:172) 	at platform.steps.ui.LoginSteps.openLoginPage(LoginSteps.java:10) 	at platform.steps.ui.LoginSteps$ByteBuddy$5nZTaF5E.openLoginPage$accessor$ktbdc3V6(Unknown Source) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:504) 	at net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:484) 	at net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:458) 	at net.thucydides.core.steps.StepInterceptor.runOrSkipMethod(StepInterceptor.java:210) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:197) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:85) 	at net.thucydides.core.steps.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:51) 	at platform.steps.ui.LoginSteps$ByteBuddy$5nZTaF5E.openLoginPage(Unknown Source) 	at platform.step_definitions.ContentsStepDefinitions.is_on_the_page(ContentsStepDefinitions.java:44) 	at ✽.""moderator"" is on the ""Courses"" page(file:///C:/Users/user/Documents/GitHub/platfrom-automated-tests/src/test/resources/features/ui/admin/courses/CourseActions.feature:6) Caused by: net.thucydides.core.webdriver.DriverConfigurationError: Could not instantiate new WebDriver instance of type class org.openqa.selenium.remote.RemoteWebDriver (Unable to establish websocket connection to http://172.26.0.5:4444/session/70b3d1363b937ab928b90399eaa8ee13/se/cdp Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-A8NQN2A', ip: '172.20.160.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13' Driver info: driver.version: unknown). See below for more details. 	at net.thucydides.core.webdriver.WebDriverFactory.newWebdriverInstance(WebDriverFactory.java:146) 	at net.thucydides.core.webdriver.WebDriverFacade.newDriverInstance(WebDriverFacade.java:141) 	at net.thucydides.core.webdriver.WebDriverFacade.newProxyDriver(WebDriverFacade.java:132) 	at net.thucydides.core.webdriver.WebDriverFacade.getProxiedDriver(WebDriverFacade.java:102) 	at net.thucydides.core.webdriver.WebDriverFacade.get(WebDriverFacade.java:172) 	at platform.steps.ui.LoginSteps.openLoginPage(LoginSteps.java:10) 	at platform.steps.ui.LoginSteps$ByteBuddy$5nZTaF5E.openLoginPage$accessor$ktbdc3V6(Unknown Source) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:504) 	at net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:484) 	at net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:458) 	at net.thucydides.core.steps.StepInterceptor.runOrSkipMethod(StepInterceptor.java:210) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:197) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:85) 	at net.thucydides.core.steps.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:51) 	at platform.steps.ui.LoginSteps$ByteBuddy$5nZTaF5E.openLoginPage(Unknown Source) 	at platform.step_definitions.ContentsStepDefinitions.is_on_the_page(ContentsStepDefinitions.java:44) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at io.cucumber.java.Invoker.doInvoke(Invoker.java:66) 	at io.cucumber.java.Invoker.invoke(Invoker.java:24) 	at io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47) 	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29) 	at io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66) 	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63) 	at io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10) 	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:86) 	at io.cucumber.core.runner.TestStep.run(TestStep.java:57) 	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51) 	at io.cucumber.core.runner.TestCase.run(TestCase.java:95) 	at io.cucumber.core.runner.Runner.runPickle(Runner.java:75) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151) 	at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:110) 	at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23) 	at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:110) 	at io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137) 	at io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:259) 	at io.cucumber.junit.CucumberSerenityRunner.runChild(CucumberSerenityRunner.java:58) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at io.cucumber.junit.CucumberSerenityRunner$RunCucumber.evaluate(CucumberSerenityRunner.java:287) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) Caused by: org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to http://172.26.0.5:4444/session/70b3d1363b937ab928b90399eaa8ee13/se/cdp Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-A8NQN2A', ip: '172.20.160.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.13' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.(NettyWebSocket.java:104) 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.lambda$create$3(NettyWebSocket.java:137) 	at org.openqa.selenium.remote.http.netty.NettyClient.openSocket(NettyClient.java:118) 	at org.openqa.selenium.devtools.Connection.(Connection.java:77) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.(SeleniumCdpConnection.java:34) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.lambda$create$0(SeleniumCdpConnection.java:56) 	at java.base/java.util.Optional.map(Optional.java:265) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.create(SeleniumCdpConnection.java:54) 	at org.openqa.selenium.devtools.SeleniumCdpConnection.create(SeleniumCdpConnection.java:47) 	at org.openqa.selenium.devtools.DevToolsProvider.getImplementation(DevToolsProvider.java:48) 	at org.openqa.selenium.devtools.DevToolsProvider.getImplementation(DevToolsProvider.java:29) 	at org.openqa.selenium.remote.Augmenter.augment(Augmenter.java:186) 	at net.serenitybdd.core.webdriver.driverproviders.RemoteDriverProvider.newInstance(RemoteDriverProvider.java:33) 	at net.thucydides.core.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:157) 	at net.thucydides.core.webdriver.WebDriverFactory.newWebdriverInstance(WebDriverFactory.java:136) ```   ### Operating System  Windows 10  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 96, chromedriver 96  ### Are you using Selenium Grid?  4.1.1","closed","","vasyafomiuk","2022-01-10T16:05:23Z","2022-02-10T00:07:27Z"
"","10436","[🐛 Bug]: When running test in Edge IEmode in Selenium Grid, browser cannot close","### What happened?  I have a Selenium Grid with IE on Edge node. When I run the test via this Selenium Grid, the test is running well except driver.quit(). The test is stuck at driver.quit() and failed with timeout.   I have tried with driver.close() and it happens the same.  If I remove driver.quit(), the test will run successfully.                                                                                                                                                                                                                                                      ### How can we reproduce the issue?  ```shell Client code: ` InternetExplorerOptions ieOptions = new InternetExplorerOptions(); ieOptions.attachToEdgeChrome(); ieOptions.setBrowserVersion(""11""); ieOptions.setPlatformName(""Windows"");  WebDriver driver = new RemoteWebDriver(url, ieOptions); driver.manage().window().maximize(); driver.get(""https://www.selenium.dev/""); driver.findElement(By.cssSelector("".nav-item:nth-child(4) span"")).click(); driver.findElement(By.cssSelector("".nav-item:nth-child(3) span"")).click(); driver.quit(); `` ```   ### Relevant log output  ```shell D 2022-03-11 09:33:04:483 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1082) Command handler requested wait. This will cause a minimal wait of at least 50 milliseconds.                                                                                            D 2022-03-11 09:33:04:483 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1141) Creating wait thread with deferred response of `{                                                                                                                                              ""value"" : null                                                                                                                                                                                                                                                         }`                                                                                                                                                                                                                                                                             T 2022-03-11 09:33:04:483 C:\Projects\selenium\cpp\iedriver\Browser.cpp(57) Entering Browser::BeforeNavigate2                                                                                                                                                                  D 2022-03-11 09:33:04:483 C:\Projects\selenium\cpp\iedriver\Browser.cpp(60) BeforeNavigate2: Url: https://www.selenium.dev/downloads, TargetFrame: 00000000                                                                                                                    T 2022-03-11 09:33:04:484 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(853) Entering IECommandExecutor::WaitThreadProc                                                                                                                                              T 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(218) Entering IECommandExecutor::OnWait                                                                                                                                                      D 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(224) Starting wait cycle.                                                                                                                                                                    T 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser                                                                                                                                          T 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          D 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(248) Beginning wait.                                                                                                                                                                         T 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\Browser.cpp(584) Entering Browser::Wait                                                                                                                                                                            D 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\Browser.cpp(598) Navigate Events Completed.                                                                                                                                                                        T 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle                                                                                                                                                     T 2022-03-11 09:33:04:545 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle                                                                                                                                                          D 2022-03-11 09:33:04:559 C:\Projects\selenium\cpp\iedriver\Browser.cpp(614) Browser busy property is true.                                                                                                                                                                    D 2022-03-11 09:33:04:559 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(257) Wait not complete. Scheduling another wait cycle.                                                                                                                                       D 2022-03-11 09:33:04:559 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1141) Creating wait thread with deferred response of `{                                                                                                                                              ""value"" : null                                                                                                                                                                                                                                                         }`                                                                                                                                                                                                                                                                             T 2022-03-11 09:33:04:579 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(853) Entering IECommandExecutor::WaitThreadProc                                                                                                                                              T 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(218) Entering IECommandExecutor::OnWait                                                                                                                                                      D 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(224) Starting wait cycle.                                                                                                                                                                    T 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser                                                                                                                                          T 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          D 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(248) Beginning wait.                                                                                                                                                                         T 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\Browser.cpp(584) Entering Browser::Wait                                                                                                                                                                            D 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\Browser.cpp(598) Navigate Events Completed.                                                                                                                                                                        T 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle                                                                                                                                                     T 2022-03-11 09:33:04:630 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle                                                                                                                                                          D 2022-03-11 09:33:04:672 C:\Projects\selenium\cpp\iedriver\Browser.cpp(614) Browser busy property is true.                                                                                                                                                                    D 2022-03-11 09:33:04:672 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(257) Wait not complete. Scheduling another wait cycle.                                                                                                                                       D 2022-03-11 09:33:04:672 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1141) Creating wait thread with deferred response of `{                                                                                                                                              ""value"" : null                                                                                                                                                                                                                                                         }`                                                                                                                                                                                                                                                                             T 2022-03-11 09:33:04:672 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(853) Entering IECommandExecutor::WaitThreadProc                                                                                                                                              T 2022-03-11 09:33:04:724 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(218) Entering IECommandExecutor::OnWait                                                                                                                                                      D 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(224) Starting wait cycle.                                                                                                                                                                    T 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser                                                                                                                                          T 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          D 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(248) Beginning wait.                                                                                                                                                                         T 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\Browser.cpp(584) Entering Browser::Wait                                                                                                                                                                            D 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\Browser.cpp(598) Navigate Events Completed.                                                                                                                                                                        T 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle                                                                                                                                                     T 2022-03-11 09:33:04:725 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle                                                                                                                                                          D 2022-03-11 09:33:04:943 C:\Projects\selenium\cpp\iedriver\Browser.cpp(614) Browser busy property is true.                                                                                                                                                                    D 2022-03-11 09:33:04:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(257) Wait not complete. Scheduling another wait cycle.                                                                                                                                       D 2022-03-11 09:33:04:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1141) Creating wait thread with deferred response of `{                                                                                                                                              ""value"" : null                                                                                                                                                                                                                                                         }`                                                                                                                                                                                                                                                                             T 2022-03-11 09:33:04:943 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(853) Entering IECommandExecutor::WaitThreadProc                                                                                                                                              T 2022-03-11 09:33:04:952 C:\Projects\selenium\cpp\iedriver\Browser.cpp(188) Entering Browser::DocumentComplete                                                                                                                                                                T 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(218) Entering IECommandExecutor::OnWait                                                                                                                                                      D 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(224) Starting wait cycle.                                                                                                                                                                    T 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser                                                                                                                                          T 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          D 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(248) Beginning wait.                                                                                                                                                                         T 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\Browser.cpp(584) Entering Browser::Wait                                                                                                                                                                            D 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\Browser.cpp(598) Navigate Events Completed.                                                                                                                                                                        T 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle                                                                                                                                                     T 2022-03-11 09:33:04:997 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle                                                                                                                                                          D 2022-03-11 09:33:05:045 C:\Projects\selenium\cpp\iedriver\Browser.cpp(658) Waiting for document to complete...                                                                                                                                                               T 2022-03-11 09:33:05:045 C:\Projects\selenium\cpp\iedriver\Browser.cpp(672) Entering Browser::IsDocumentNavigating                                                                                                                                                            D 2022-03-11 09:33:05:052 C:\Projects\selenium\cpp\iedriver\Browser.cpp(663) Not in navigating state                                                                                                                                                                           D 2022-03-11 09:33:05:052 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(265) Wait complete. Setting serialized response to deferred value {                                                                                                                                  ""value"" : null                                                                                                                                                                                                                                                         }                                                                                                                                                                                                                                                                              T 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\iedriver\IESession.cpp(235) Found non-zero response length                                                                                                                                                                  T 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(201) Entering IECommandExecutor::OnGetResponse                                                                                                                                               T 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(621) Entering IECommandExecutor::OnIsSessionValid                                                                                                                                            D 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\webdriver-server\server.cc(426) Response: {                                                                                                                                                                                         ""value"" : null                                                                                                                                                                                                                                                         }                                                                                                                                                                                                                                                                              T 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\webdriver-server\server.cc(479) Entering Server::SendResponseToClient                                                                                                                                                       T 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize                                                                                                                                                             T 2022-03-11 09:33:05:060 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk                                                                                                                                                                 T 2022-03-11 09:33:05:377 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest                                                                                                                                                             T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /session/e2b663d8-1894-4057-b66e-720054e7d029 HTTP verb: DELETE                                                                                                  body: {}                                                                                                                                                                                                                                                                       T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\server.cc(334) Entering Server::DispatchCommand                                                                                                                                                            T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\server.cc(687) Entering Server::LookupCommand                                                                                                                                                              D 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\server.cc(343) Command: DELETE /session/e2b663d8-1894-4057-b66e-720054e7d029 {}                                                                                                                            T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\server.cc(466) Entering Server::LookupSession                                                                                                                                                              T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IESession.cpp(198) Entering IESession::ExecuteCommand                                                                                                                                                              T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(156) Entering IECommandExecutor::OnSetCommand                                                                                                                                                T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize                                                                                                                                                               D 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""quit"", ""locator"" : { ""sessionid"" : ""e2b663d8-1894-4057-b66e-720054e7d029"" }, ""parameters"" : {} }                                                              T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize                                                                                                                                                               D 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""quit"", ""locator"" : { ""sessionid"" : ""e2b663d8-1894-4057-b66e-720054e7d029"" }, ""parameters"" : {} }                                                              T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(178) Entering IECommandExecutor::OnExecCommand                                                                                                                                               T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IESession.cpp(226) Beginning wait for response length to be not zero                                                                                                                                               T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(974) Entering IECommandExecutor::DispatchCommand                                                                                                                                             T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser                                                                                                                                          T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          D 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(992) Checking for alert before executing quit command                                                                                                                                        T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive                                                                                                                                              T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle                                                                                                                                                     T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle                                                                                                                                                          D 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1207) No alert handle is found                                                                                                                                                               D 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1039) Executing command: quit                                                                                                                                                                T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1325) Entering IECommandExecutor::GetManagedBrowserHandles                                                                                                                                   T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(571) Entering Browser::IsValidWindow                                                                                                                                                                   T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(868) Entering Browser::GetActiveDialogWindowHandle                                                                                                                                                     T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(315) Entering Browser::GetContentWindowHandle                                                                                                                                                          T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(428) Entering Browser::Close                                                                                                                                                                           T 2022-03-11 09:33:05:378 C:\Projects\selenium\cpp\iedriver\Browser.cpp(559) Entering Browser::GetTopLevelWindowHandle                                                                                                                                                         T 2022-03-11 09:33:05:381 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(149) Entering DocumentHost::SetFocusedFrameByElement                                                                                                                                              T 2022-03-11 09:33:05:384 C:\Projects\selenium\cpp\webdriver-server\response.cc(81) Entering Response::SetSuccessResponse                                                                                                                                                      T 2022-03-11 09:33:05:384 C:\Projects\selenium\cpp\webdriver-server\response.cc(87) Entering Response::SetResponse                                                                                                                                                             D 2022-03-11 09:33:05:384 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1042) Command execution for quit complete                                                                                                                                                    T 2022-03-11 09:33:05:384 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1295) Entering IECommandExecutor::GetCurrentBrowser                                                                                                                                          T 2022-03-11 09:33:05:384 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1301) Entering IECommandExecutor::GetManagedBrowser                                                                                                                                          T 2022-03-11 09:33:05:384 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1304) Current command executor is not valid                                                                                                                                                  T 2022-03-11 09:33:05:436 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(463) Entering IECommandExecutor::OnAllBrowserCloseWait                                                                                                                                       T 2022-03-11 09:33:05:436 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(465) Still have 1 browsers                                                                                                                                                                   T 2022-03-11 09:33:05:436 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(468) Still awaiting close of browser with ID 896932eb-42b7-4371-8524-1aacaed8ad50                                                                                                            T 2022-03-11 09:33:05:436 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1190) Entering IECommandExecutor::IsAlertActive ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  IE mode on Edge  ### What are the browser driver(s) and version(s) where you see this issue?  IE Driver Server  ### Are you using Selenium Grid?  4.1.0","closed","I-defect,","tylerle","2022-03-11T09:41:13Z","2022-06-04T00:12:02Z"
"","10417","[🐛 Bug]: Getting ConnectionFailedException while trying to use driver.close() for firefox browser.","### What happened?  I have a sample code written to test normal firefox browser launch then launching web page then closing the browser using Selenium 4.1.2 with Java. It is failing with ConnectionFailedException in line driver.close() **I am using Firefox Browser** whereas the **Exception starts with chrome**, not sure why.  ### How can we reproduce the issue?  ```shell public class CaptureScreenshotExample  { 	public static void main(String[] args) throws IOException  	{ 		Format f = new SimpleDateFormat(""dd_MM_yy hh_mm""); 		String strDate = f.format(new Date()); 		System.out.println(""Current Date = ""+strDate); 		 		System.setProperty(""webdriver.gecko.driver"", ""./drivers/geckodriver.exe""); 		WebDriver driver = new FirefoxDriver(); 		 		//Launch the web page 		driver.get(""https://demo.actitime.com/login.do""); 		 		//To take screen shot 		TakesScreenshot ts = (TakesScreenshot)driver; 		File screenshot = ts.getScreenshotAs(OutputType.FILE); 		 		//Creating an external file 		File output_ss = new File(""./screenshots/"" + driver.getTitle() + ""_"" + strDate + "".jpg""); 		 		//Copying the captured screen shot from source file to destination file 		FileHandler.copy(screenshot, output_ss); 		 		driver.close();		 	}  } ```   ### Relevant log output  ```shell JavaScript error: **chrome://remote/content/server/WebSocketHandshake.jsm**, line 117: Error: The handshake request has incorrect Origin header http://localhost:52540 Mar 07, 2022 5:36:38 PM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Invalid Status code=400 text=Bad Request java.io.IOException: Invalid Status code=400 text=Bad Request 	at org.asynchttpclient.netty.handler.WebSocketHandler.abort(WebSocketHandler.java:92) 	at org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(WebSocketHandler.java:118) 	at org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(AsyncHttpClientHandler.java:78) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:327) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:314) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:435) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748)  Exception in thread ""main"" org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to http://localhost:52540/devtools/browser/25f0debb-b795-4375-9ba6-83c9dcd9c461 Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: '', ip: '', os.name: 'Windows 10', os.arch: '', os.version: '10.0', java.version: '1.8.0_201' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.(NettyWebSocket.java:104) 	at org.openqa.selenium.remote.http.netty.NettyWebSocket.lambda$create$3(NettyWebSocket.java:137) 	at org.openqa.selenium.remote.http.netty.NettyClient.openSocket(NettyClient.java:118) 	at org.openqa.selenium.devtools.Connection.(Connection.java:77) 	at org.openqa.selenium.firefox.FirefoxDriver.maybeGetDevTools(FirefoxDriver.java:310) 	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:440) 	at com.practice.tests.CaptureScreenshotExample.main(CaptureScreenshotExample.java:45) ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Firefox V97.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  gecko driver v0.30.0  ### Are you using Selenium Grid?  No","closed","needs-triaging,","EswariKarthik","2022-03-07T12:15:57Z","2022-04-07T00:11:49Z"
"","10547","[🐛 Bug]: ClassNotFoundException org.openqa.selenium.internal.Require","### What happened?  I have a Java Spring Boot application that uses Maven to manage its dependencies.  Since I don't want to download the Selenium driver, I use Selenium Grid as a Docker container. I am using the dynamic grid.  I connect to Selenium using RemoteWebDriver(). On the error, it doesn't matter what option I use.  Now we come to my error. As soon as I call `new RemoteWebDriver()` I get an error that a class was not found. (See relevant log output).  > This is the first time I am working with Selenium.  ### How can we reproduce the issue?  ```shell I made a repository in which my whole setup is mapped. The same error message appears there. You can also find a more detailed description of the application setup. [Repo](https://github.com/21r8390/asdf)  Everything is related to the [docker-compose](https://github.com/21r8390/asdf/blob/master/docker-compose.yml) file. Only that needs to be executed and everything else should build automatically. ```   ### Relevant log output  ```shell ## Spring Boot   .   ____          _            __ _ _  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \ ( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \  \\/  ___)| |_)| | | | | || (_| |  ) ) ) )   '  |____| .__|_| |_|_| |_\__, | / / / /  =========|_|==============|___/=/_/_/_/  :: Spring Boot ::                (v2.6.6)  2022-04-14 13:53:05.373  INFO 61 --- [           main] asdf.asdf.AsdfApplication                : Starting AsdfApplication using Java 17.0.2 on 1ea3f3fd804e with PID 61 (/target/classes started by root in /)  2022-04-14 13:53:05.376  INFO 61 --- [           main] asdf.asdf.AsdfApplication                : No active profile set, falling back to 1 default profile: ""default""  2022-04-14 13:53:06.121  INFO 61 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 9080 (http)  2022-04-14 13:53:06.129  INFO 61 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]  2022-04-14 13:53:06.130  INFO 61 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.60]  2022-04-14 13:53:06.212  INFO 61 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext  2022-04-14 13:53:06.212  INFO 61 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 771 ms  2022-04-14 13:53:06.469  INFO 61 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 9080 (http) with context path ''  2022-04-14 13:53:06.478  INFO 61 --- [           main] asdf.asdf.AsdfApplication                : Started AsdfApplication in 1.444 seconds (JVM running for 1.755)  2022-04-14 13:53:23.149  INFO 61 --- [nio-9080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'  2022-04-14 13:53:23.149  INFO 61 --- [nio-9080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'  2022-04-14 13:53:23.150  INFO 61 --- [nio-9080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms  2022-04-14 13:53:23.302 ERROR 61 --- [nio-9080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/openqa/selenium/internal/Require] with root cause   java.lang.ClassNotFoundException: org.openqa.selenium.internal.Require  at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]  at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]  at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) ~[na:na]  at org.openqa.selenium.json.NumberCoercer.(NumberCoercer.java:49) ~[selenium-json-4.1.3.jar:na]  at org.openqa.selenium.json.JsonTypeCoercer.(JsonTypeCoercer.java:71) ~[selenium-json-4.1.3.jar:na]  at org.openqa.selenium.json.JsonTypeCoercer.(JsonTypeCoercer.java:53) ~[selenium-json-4.1.3.jar:na]  at org.openqa.selenium.json.Json.(Json.java:37) ~[selenium-json-4.1.3.jar:na]  at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:100) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:94) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) ~[selenium-remote-driver-3.141.59.jar:na]  at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) ~[selenium-remote-driver-3.141.59.jar:na]  at asdf.asdf.AsdfApplication.getUser(AsdfApplication.java:30) ~[classes/:na]  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]  at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]  at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]  at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]  at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-5.3.18.jar:5.3.18]  at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150) ~[spring-web-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.3.18.jar:5.3.18]  at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.3.18.jar:5.3.18]  at javax.servlet.http.HttpServlet.service(HttpServlet.java:655) ~[tomcat-embed-core-9.0.60.jar:4.0.FR]  at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.3.18.jar:5.3.18]  at javax.servlet.http.HttpServlet.service(HttpServlet.java:764) ~[tomcat-embed-core-9.0.60.jar:4.0.FR]  at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.60.jar:9.0.60]  at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.18.jar:5.3.18]  at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.18.jar:5.3.18]  at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.18.jar:5.3.18]  at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.18.jar:5.3.18]  at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.18.jar:5.3.18]  at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117) ~[spring-web-5.3.18.jar:5.3.18]  at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:889) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.60.jar:9.0.60]  at java.base/java.lang.Thread.run(Thread.java:833) ~[na:na] ```  # Selenium Node: ``` 2022-04-14 13:50:39,359 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-docker.conf"" during parsing  2022-04-14 13:50:39,361 INFO supervisord started with pid 8  2022-04-14 13:50:40,362 INFO spawned: 'socat' with pid 10  2022-04-14 13:50:40,365 INFO spawned: 'selenium-grid-docker' with pid 11  2022-04-14 13:50:40,369 INFO success: socat entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  2022-04-14 13:50:40,369 INFO success: selenium-grid-docker entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  Starting Selenium Grid Node Docker...  13:50:41.087 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding  13:50:41.096 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing  13:50:41.253 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-hub:4442 and tcp://selenium-hub:4443  13:50:41.323 INFO [UnboundZmqEventBus.] - Sockets created  13:50:42.325 INFO [UnboundZmqEventBus.] - Event bus ready  13:50:42.450 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.0.3:5555  13:50:42.485 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors  13:50:43.182 INFO [V141Docker.isContainerPresent] - Checking if container is present: 60d813c025ab  13:50:43.279 INFO [Docker.getImage] - Obtaining image: selenium/standalone-firefox:4.1.3-20220405  13:50:43.279 INFO [Docker.getImage] - Obtaining image: selenium/standalone-edge:4.1.3-20220405  13:50:43.279 INFO [Docker.getImage] - Obtaining image: selenium/standalone-chrome:4.1.3-20220405  13:50:43.294 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-firefox', tag='4.1.3-20220405', digest='null'}  13:50:43.294 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-chrome', tag='4.1.3-20220405', digest='null'}  13:50:43.294 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-edge', tag='4.1.3-20220405', digest='null'}  13:50:43.400 INFO [Docker.getImage] - Obtaining image: selenium/video:latest  13:50:43.400 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/video', tag='latest', digest='null'}  13:50:43.436 INFO [Docker.getImage] - Obtaining image: selenium/video:latest  13:50:43.439 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/video', tag='latest', digest='null'}  13:50:43.480 INFO [Docker.getImage] - Obtaining image: selenium/standalone-firefox:4.1.3-20220405  13:50:43.484 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-firefox', tag='4.1.3-20220405', digest='null'}  13:50:43.525 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: firefox} to docker image selenium/standalone-firefox:4.1.3-20220405 8 times  13:50:43.525 INFO [Docker.getImage] - Obtaining image: selenium/standalone-chrome:4.1.3-20220405  13:50:43.525 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-chrome', tag='4.1.3-20220405', digest='null'}  13:50:43.604 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: chrome} to docker image selenium/standalone-chrome:4.1.3-20220405 8 times  13:50:43.604 INFO [Docker.getImage] - Obtaining image: selenium/standalone-edge:4.1.3-20220405  13:50:43.605 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-edge', tag='4.1.3-20220405', digest='null'}  13:50:43.633 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: MicrosoftEdge} to docker image selenium/standalone-edge:4.1.3-20220405 8 times  13:50:43.685 INFO [Node.] - Binding additional locator mechanisms: id, name, relative  13:50:43.826 INFO [NodeServer$1.start] - Starting registration process for Node http://192.168.0.3:5555  13:50:43.827 INFO [NodeServer.execute] - Started Selenium node 4.1.3 (revision 7b1ebf28ef): http://192.168.0.3:5555  13:50:43.859 INFO [NodeServer$1.lambda$start$1] - Sending registration event...  13:50:44.403 INFO [NodeServer.lambda$createHandlers$2] - Node has been added  Trapped SIGTERM/SIGINT/x so shutting down supervisord...  2022-04-14 13:51:55,515 WARN received SIGTERM indicating exit request  2022-04-14 13:51:55,515 INFO waiting for socat, selenium-grid-docker to die  2022-04-14 13:51:56,517 INFO stopped: selenium-grid-docker (terminated by SIGTERM)  2022-04-14 13:51:57,519 INFO stopped: socat (terminated by SIGTERM)  Shutdown complete  2022-04-14 13:52:59,325 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-docker.conf"" during parsing  2022-04-14 13:52:59,327 INFO supervisord started with pid 9  2022-04-14 13:53:00,329 INFO spawned: 'socat' with pid 11  2022-04-14 13:53:00,330 INFO spawned: 'selenium-grid-docker' with pid 12  2022-04-14 13:53:00,335 INFO success: socat entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  2022-04-14 13:53:00,335 INFO success: selenium-grid-docker entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  Starting Selenium Grid Node Docker...  13:53:00.842 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding  13:53:00.847 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing  13:53:00.985 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-hub:4442 and tcp://selenium-hub:4443  13:53:01.049 INFO [UnboundZmqEventBus.] - Sockets created  13:53:02.052 INFO [UnboundZmqEventBus.] - Event bus ready  13:53:02.269 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.0.3:5555  13:53:02.342 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors  13:53:03.154 INFO [V141Docker.isContainerPresent] - Checking if container is present: 60d813c025ab  13:53:03.238 INFO [Docker.getImage] - Obtaining image: selenium/standalone-firefox:4.1.3-20220405  13:53:03.239 INFO [Docker.getImage] - Obtaining image: selenium/standalone-chrome:4.1.3-20220405  13:53:03.239 INFO [Docker.getImage] - Obtaining image: selenium/standalone-edge:4.1.3-20220405  13:53:03.241 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-chrome', tag='4.1.3-20220405', digest='null'}  13:53:03.241 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-edge', tag='4.1.3-20220405', digest='null'}  13:53:03.261 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-firefox', tag='4.1.3-20220405', digest='null'}  13:53:03.377 INFO [Docker.getImage] - Obtaining image: selenium/video:latest  13:53:03.377 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/video', tag='latest', digest='null'}  13:53:03.409 INFO [Docker.getImage] - Obtaining image: selenium/video:latest  13:53:03.410 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/video', tag='latest', digest='null'}  13:53:03.453 INFO [Docker.getImage] - Obtaining image: selenium/standalone-firefox:4.1.3-20220405  13:53:03.454 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-firefox', tag='4.1.3-20220405', digest='null'}  13:53:03.507 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: firefox} to docker image selenium/standalone-firefox:4.1.3-20220405 8 times  13:53:03.507 INFO [Docker.getImage] - Obtaining image: selenium/standalone-chrome:4.1.3-20220405  13:53:03.507 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-chrome', tag='4.1.3-20220405', digest='null'}  13:53:03.570 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: chrome} to docker image selenium/standalone-chrome:4.1.3-20220405 8 times  13:53:03.571 INFO [Docker.getImage] - Obtaining image: selenium/standalone-edge:4.1.3-20220405  13:53:03.573 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-edge', tag='4.1.3-20220405', digest='null'}  13:53:03.611 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: MicrosoftEdge} to docker image selenium/standalone-edge:4.1.3-20220405 8 times  13:53:03.672 INFO [Node.] - Binding additional locator mechanisms: id, name, relative  13:53:03.883 INFO [NodeServer$1.start] - Starting registration process for Node http://192.168.0.3:5555  13:53:03.887 INFO [NodeServer.execute] - Started Selenium node 4.1.3 (revision 7b1ebf28ef): http://192.168.0.3:5555  13:53:03.949 INFO [NodeServer$1.lambda$start$1] - Sending registration event...  13:53:04.687 INFO [NodeServer.lambda$createHandlers$2] - Node has been added ``` ## Selenium Hub ```shell 2022-04-14 13:50:38,729 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing  2022-04-14 13:50:38,731 INFO supervisord started with pid 8  2022-04-14 13:50:39,733 INFO spawned: 'selenium-grid-hub' with pid 10  13:50:40.075 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding  2022-04-14 13:50:40,078 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  13:50:40.082 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing  13:50:40.211 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://192.168.0.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://192.168.0.2:4443]  13:50:40.307 INFO [UnboundZmqEventBus.] - Connecting to tcp://192.168.0.2:4442 and tcp://192.168.0.2:4443  13:50:40.383 INFO [UnboundZmqEventBus.] - Sockets created  13:50:41.400 INFO [UnboundZmqEventBus.] - Event bus ready  13:50:42.297 INFO [Hub.execute] - Started Selenium Hub 4.1.3 (revision 7b1ebf28ef): http://192.168.0.2:4444  13:50:43.988 INFO [Node.] - Binding additional locator mechanisms: relative, id, name  13:50:44.387 INFO [GridModel.setAvailability] - Switching node 58ac6c35-2896-4077-b686-8263885d6d34 (uri: http://192.168.0.3:5555) from DOWN to UP  13:50:44.389 INFO [LocalDistributor.add] - Added node 58ac6c35-2896-4077-b686-8263885d6d34 at http://192.168.0.3:5555. Health check every 120s  Trapped SIGTERM/SIGINT/x so shutting down supervisord...  2022-04-14 13:51:58,512 WARN received SIGTERM indicating exit request  2022-04-14 13:51:58,513 INFO waiting for selenium-grid-hub to die  2022-04-14 13:51:59,514 INFO stopped: selenium-grid-hub (terminated by SIGTERM)  Shutdown complete  2022-04-14 13:52:58,667 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing  2022-04-14 13:52:58,668 INFO supervisord started with pid 8  2022-04-14 13:52:59,671 INFO spawned: 'selenium-grid-hub' with pid 10  13:53:00.010 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding  2022-04-14 13:53:00,013 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  13:53:00.016 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing  13:53:00.144 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://192.168.0.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://192.168.0.2:4443]  13:53:00.210 INFO [UnboundZmqEventBus.] - Connecting to tcp://192.168.0.2:4442 and tcp://192.168.0.2:4443  13:53:00.234 INFO [UnboundZmqEventBus.] - Sockets created  13:53:01.236 INFO [UnboundZmqEventBus.] - Event bus ready  13:53:02.234 INFO [Hub.execute] - Started Selenium Hub 4.1.3 (revision 7b1ebf28ef): http://192.168.0.2:4444  13:53:04.093 INFO [Node.] - Binding additional locator mechanisms: name, id, relative  13:53:04.669 INFO [GridModel.setAvailability] - Switching node 7b6ca41e-bce9-4d7a-9402-f51d44e47b39 (uri: http://192.168.0.3:5555) from DOWN to UP  13:53:04.670 INFO [LocalDistributor.add] - Added node 7b6ca41e-bce9-4d7a-9402-f51d44e47b39 at http://192.168.0.3:5555. Health check every 120s ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome: 100.0.4896.75  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver: 100.0.4896.60  ### Are you using Selenium Grid?  Dynamic [grid](https://github.com/SeleniumHQ/docker-selenium/releases/tag/4.1.3-20220405) with docker 4.1.3-20220405","closed","I-defect,","21r8390","2022-04-14T14:25:10Z","2022-06-09T00:11:15Z"
"","10000","[🐛 Bug]: Unable to locate xpath element in --headless mode","### What happened?  I have a code that pastes a text inside a text box such as:  ``` driver.get(""https://quillbot.com/"") text_box = driver.find_element(By.XPATH,""//*[@id=\""inputText\""]"") ```  but in --headless mode for some reason it returns   ``` selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@id=""inputText""]""}   (Session info: headless chrome=95.0.4638.54) ```  Everything works great in non-headless mode  ### How can we reproduce the issue?  ```shell service = Service('C:\\Users\\nicoc\\PycharmProjects\\WriteAI\\chromedriver.exe') chrome_options = Options() chrome_options.add_argument(""--headless --window-size=900,1000"") driver = webdriver.Chrome(service=service, options=chrome_options)  driver.get(""https://quillbot.com/"") text_box = driver.find_element(By.XPATH,""//*[@id=\""inputText\""]"") ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""C:/Users/nicoc/PycharmProjects/WriteAI/main.py"", line 173, in      text_box = driver.find_element(By.XPATH,""//*[@id=\""inputText\""]"")   File ""C:\Users\nicoc\PycharmProjects\WriteAI\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 1238, in find_element     return self.execute(Command.FIND_ELEMENT, {   File ""C:\Users\nicoc\PycharmProjects\WriteAI\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""C:\Users\nicoc\PycharmProjects\WriteAI\venv\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//*[@id=""inputText""]""}   (Session info: headless chrome=95.0.4638.54) Stacktrace: Backtrace: 	Ordinal0 [0x0094B9D3+2472403] 	Ordinal0 [0x008E6961+2058593] 	Ordinal0 [0x007F22B8+1057464] 	Ordinal0 [0x0081C68B+1230475] 	Ordinal0 [0x008465B2+1402290] 	Ordinal0 [0x008355CA+1332682] 	Ordinal0 [0x0084495F+1395039] 	Ordinal0 [0x0083545B+1332315] 	Ordinal0 [0x00811FB4+1187764] 	Ordinal0 [0x00812E09+1191433] 	GetHandleVerifier [0x00AD3396+1551078] 	GetHandleVerifier [0x00B7D53A+2247818] 	GetHandleVerifier [0x009D7FBB+521995] 	GetHandleVerifier [0x009D7079+518089] 	Ordinal0 [0x008EBD4D+2080077] 	Ordinal0 [0x008EFC18+2096152] 	Ordinal0 [0x008EFD52+2096466] 	Ordinal0 [0x008F94B1+2135217] 	BaseThreadInitThunk [0x75E9FA29+25] 	RtlGetAppContainerNamedObjectPath [0x77BC7A9E+286] 	RtlGetAppContainerNamedObjectPath [0x77BC7A6E+238] ```   ### Operating System  Windows 10  ### Selenium version  Phyton 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.54  ### What are the browser driver(s) and version(s) where you see this issue?  95.0.4638.54  ### Are you using Selenium Grid?  No","closed","needs-triaging,","NicoCaldo","2021-10-30T07:58:03Z","2021-12-05T00:07:32Z"
"","10810","[🐛 Bug]: DevTools.createSession() picks a wrong window","### What happened?  I have a browser with 2+ open windows (tabs). When I execute `driver.getDevTools().createSession()` it connects to a wrong tab. See the code sample below.  The problematic code is https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/devtools/DevTools.java#L99:  ```java     // Grab the first ""page"" type, and glom on to that.     // TODO: Find out which one might be the current one     TargetID targetId = infos.stream()       .filter(info -> ""page"".equals(info.getType()))       .map(TargetInfo::getTargetId)       .findAny()       .orElseThrow(() -> new DevToolsException(""Unable to find target id of a page"")); ```  Actually, we can easily pick the right `TargetID` by matching it with `WebDriver.getWindowHandle()`.  ### How can we reproduce the issue?  ```shell @Test   void useDevToolsInWrongWindow() {     WebDriverManager.chromedriver().setup();     ChromeDriver driver = new ChromeDriver();     driver.navigate().to(""https://duckduckgo.com"");     driver.executeScript(""window.open()"");      DevTools devTools = driver.getDevTools();     devTools.createSessionIfThereIsNotOne();     devTools.send(Emulation.setAutoDarkModeOverride(Optional.of(true)));      // Expected: the first window (duckduckgo.com) becomes dark     // Actual: the second window (empty) becomes dark     driver.quit();   } ```   ### The fix  Here is my pull request: https://github.com/SeleniumHQ/selenium/pull/10811   ### Operating System  MacOS (no matter)  ### Selenium version  4.3.0 Java  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102 (no matter)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102 (no matter)  ### Are you using Selenium Grid?  no matter","closed","I-defect,","asolntsev","2022-06-25T11:54:33Z","2022-07-30T00:11:56Z"
"","10542","[🐛 Bug]: Getting connection timed out while connecting to remote webdriver through proxy configuration","### What happened?  I had set up a selenium grid using docker container in ec2 linux instance. please find my docker-compose.yml file as below. ############################################################################### services:   chrome:     image: selenium/node-chrome:4.1.3-20220405     ports:       - ""5900""       - ""7900""     shm_size: 2gb     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443       - SE_NODE_MAX_SESSIONS=6       - VNC_NO_PASSWORD=1       - SE_SESSION_REQUEST_TIMEOUT=500       - JAVA_OPTS=-Dwebdriver.chrome.whitelistedIps=       - SE_NODE_OVERRIDE_MAX_SESSIONS=true   selenium-hub:     image: selenium/hub:4.1.3-20220405     container_name: selenium-hub     ports:       - ""2000:4442""       - ""2001:4443""       - ""2002:4444""     environment:       - GRID_MAX_SESSION=6       - GRID_BROWSER_TIMEOUT=6000       - GRID_TIMEOUT=6000       - JAVA_OPTS=-Dwebdriver.chrome.whitelistedIps= ############################################################################### once selenium grid is ready, I am trying to run my automation suite from another machine(windows 10 from intellij) and connecting to this selenium grid by proxy configuration(the solution mentioned in https://github.com/SeleniumHQ/selenium/issues/10231)                     ChromeOptions options = new ChromeOptions();                     options.addArguments(""--incognito"");                     options.addArguments(""--disable-gpu"");                     options.addArguments(""--no-sandbox"");                     options.addArguments(""--disable-browser-side-navigation"");                     options.setAcceptInsecureCerts(true);                     options.setPageLoadStrategy(PageLoadStrategy.EAGER);                     Map prefs = new HashMap();                     prefs.put(""download.default_directory"", config.getProperty(""path.remote.download""));                     options.setExperimentalOption(""prefs"", prefs);                     options.setExperimentalOption(""excludeSwitches"", new String[]{""enable-automation""});                     capability = new DesiredCapabilities();                     capability.setCapability(ChromeOptions.CAPABILITY, options);                     capability.setBrowserName(CHROME);                     capability.setPlatform(Platform.ANY);                     capability.setCapability(""ignoreZoomSetting"", true);                     options.merge(capability);                     Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(""XXXX"", 8012));                     ClientConfig config = ClientConfig.defaultConfig()                             .baseUrl(new URL(""YYY""))                             .authenticateAs(new UsernameAndPassword(""username"", ""password""))                             .proxy(proxy);                     driver = RemoteWebDriver.builder()                             .oneOf(options)                             .config(config)                             .build(); But i am getting error as below  2022-04-13 15:07:14 DEBUG NetUtilInitializations:129 - Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1) 2022-04-13 15:07:14 DEBUG NetUtil:191 - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200 2022-04-13 15:07:15 DEBUG DefaultChannelId:101 - -Dio.netty.machineId: 38:68:93:ff:fe:bb:04:31 (auto-detected) 2022-04-13 15:07:15 DEBUG AbstractByteBuf:63 - -Dio.netty.buffer.checkAccessible: true 2022-04-13 15:07:15 DEBUG AbstractByteBuf:64 - -Dio.netty.buffer.checkBounds: true 2022-04-13 15:07:15 DEBUG ResourceLeakDetectorFactory:196 - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@372d56fc 2022-04-13 15:07:15 TRACE LoggingHandler:142 - [id: 0x934f42f4] REGISTERED 2022-04-13 15:07:15 TRACE LoggingHandler:142 - [id: 0x934f42f4] CONNECT: /10.178.50.179:2002 2022-04-13 15:07:25 DEBUG NettyConnectListener:166 - Trying to recover from failing to connect channel [id: 0x934f42f4] with a retry value of true  2022-04-13 15:07:25 DEBUG NettyConnectListener:176 - Failed to recover from connect exception: io.netty.channel.ConnectTimeoutException: connection timed out: /23.178.67.179:2002 with channel [id: 0x934f42f4] 2022-04-13 15:07:25 DEBUG AsyncCompletionHandler:71 - connection timed out: /23.178.67.179:2002 java.net.ConnectException: connection timed out: /23.178.67.179:2002 	at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262) 	at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) 	at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:503) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: /23.178.67.179:2002 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261) 	... 9 more 2022-04-13 15:07:25 TRACE LoggingHandler:142 - [id: 0x934f42f4] CLOSE 2022-04-13 15:07:26 TRACE LoggingHandler:142 - [id: 0x934f42f4] UNREGISTERED       org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: java.net.ConnectException: connection timed out: /10.178.50.179:2002 Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: '02DI20212070173', ip: '10.153.202.119', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.RemoteWebDriverBuilder.getRemoteDriver(RemoteWebDriverBuilder.java:395) 	at org.openqa.selenium.remote.RemoteWebDriverBuilder.build(RemoteWebDriverBuilder.java:368) 	at europa.edit.util.WebDriverFactory.remoteDriver(WebDriverFactory.java:171) 	at europa.edit.util.WebDriverFactory.setWebDriver(WebDriverFactory.java:73)  ### How can we reproduce the issue? by using my code mentioned above  ### Operating System  Windows 10, Linux  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  v.100.0  ### What are the browser driver(s) and version(s) where you see this issue?  selenium grid using docker service  ### Are you using Selenium Grid?  4.1.3","closed","I-defect,","satya081","2022-04-13T13:26:16Z","2022-05-14T00:15:53Z"
"","10413","[🐛 Bug]: RemoteWebDriver cannot be cast to HasDevTools when using RemoteWebDriver to authenticate","### What happened?  I get this error when using RemoteWebDriver to authenticate:  org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$p5bjR6n0 cannot be cast to org.openqa.selenium.devtools.HasDevTools  I'm aware of  #9934 but the suggested pom solution does not resolve the problem.  See my code and pom below.  ### How can we reproduce the issue?  ```shell import java.io.File; import java.io.IOException; import java.net.MalformedURLException; import org.openqa.selenium.By; import org.openqa.selenium.HasAuthentication; import org.openqa.selenium.UsernameAndPassword; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriverService; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.devtools.DevTools; import org.openqa.selenium.devtools.HasDevTools; import org.openqa.selenium.remote.Augmenter; import org.openqa.selenium.remote.RemoteWebDriver;  /*  * To change this license header, choose License Headers in Project Properties.  * To change this template file, choose Tools | Templates  * and open the template in the editor.  */ /**  *  * @author   */ public class ChromeDevToolsAugmenterAuthentication {      public static void main(String[] args) throws MalformedURLException, InterruptedException, IOException {          ChromeDriverService service;         //starts the selenium service          service = new ChromeDriverService.Builder()                 .usingDriverExecutable(new File(""/Users/Test/chromedriver""))                 .usingAnyFreePort()                 .build();         service.start();          ChromeOptions chromeOptions = new ChromeOptions();         WebDriver driver = new RemoteWebDriver(service.getUrl(), chromeOptions);          Augmenter augmenter = new Augmenter();          driver = augmenter.augment(driver);          DevTools devTools = ((HasDevTools) driver).getDevTools();         devTools.createSession();          driver = augmenter.                 addDriverAugmentation(""chrome"", HasAuthentication.class, (caps, exec) -> (whenThisMatches, useTheseCredentials) -> devTools.getDomains().network().addAuthHandler(whenThisMatches, useTheseCredentials)).augment(driver);          ((HasAuthentication) driver).register(UsernameAndPassword.of(""admin"", ""admin""));         driver.get(""https://the-internet.herokuapp.com/basic_auth"");         System.out.println(driver.findElement(By.tagName(""p"")).getText());         driver.quit();          service.stop();     }  }             4.0.0     com.mycompany     Tester     1.0-SNAPSHOT     jar              UTF-8         1.8         1.8                                central             Central Repository             https://repo.maven.apache.org/maven2             default                              false                                           never                                                      central             Central Repository             https://repo.maven.apache.org/maven2             default                              false                                                      org.seleniumhq.selenium             selenium-java             4.1.2                                                          org.apache.maven.plugins                 maven-shade-plugin                 3.2.4                                                               package                                                      shade                                                                                                                                                     ChromeDevToolsAugmenterAuthentication                                                                                                                                                                                           ```   ### Relevant log output  ```shell Starting ChromeDriver 99.0.4844.51 (d537ec02474b5afe23684e7963d538896c63ac77-refs/branch-heads/4844@{#875}) on port 60265 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Mar 06, 2022 11:31:03 AM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFO: Using OpenTelemetry for tracing SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Mar 06, 2022 11:31:05 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" java.lang.ClassCastException: org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$sgG5HxQ9 cannot be cast to org.openqa.selenium.devtools.HasDevTools 	at ChromeDevToolsAugmenterAuthentication.main(ChromeDevToolsAugmenterAuthentication.java:45) [ERROR] Command execution failed. org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1)     at org.apache.commons.exec.DefaultExecutor.executeInternal (DefaultExecutor.java:404)     at org.apache.commons.exec.DefaultExecutor.execute (DefaultExecutor.java:166)     at org.codehaus.mojo.exec.ExecMojo.executeCommandLine (ExecMojo.java:982)     at org.codehaus.mojo.exec.ExecMojo.executeCommandLine (ExecMojo.java:929)     at org.codehaus.mojo.exec.ExecMojo.execute (ExecMojo.java:457)     at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)     at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)     at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)     at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)     at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)     at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)     at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)     at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)     at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)     at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)     at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke (Method.java:498)     at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)     at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)     at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)     at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347) ```   ### Operating System  macOS BigSur  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  No","closed","C-devtools,","dj1357","2022-03-06T11:35:32Z","2022-04-09T00:11:15Z"
"","10416","[🐛 Bug]: OpenTelemetry tracing fails to start with NoSuchMethodError","### What happened?  I followed the instructions from `java -jar selenium-server-4.1.2.jar info tracing` to start selenium with OpenTelemetry and Jaeger but I got an exception at startup.  ``` About Tracing =============  Selenium Grid ships with support for distributed tracing, backed by the OpenTelemetry APIs. This allows admins and devops engineers to trace the flow of control through the Grid for each and every command.  To enable this support, you must first provide a ""Tracer"" implementation that should be used. We use OpenTelemtry's own mechanisms for selecting the implementations, so if your chosen tracing library supports this you should be good to go. If you are using the standalone selenium jar, updating the classpath to contain your tracer can be done using the `--ext` flag to selenium.  As a worked example, using Jaeger as the tracing library and running on macOS:     java -Dotel.traces.exporter=jaeger \        -Dotel.exporter.jaeger.endpoint=http://localhost:14250 \        -Dotel.resource.attributes=service.name=selenium-standalone \        -jar selenium.jar \        --ext $(coursier fetch -p \           io.opentelemetry:opentelemetry-exporter-jaeger:1.9.1 \           io.grpc:grpc-netty:1.41.0) \        standalone   This example uses a tool called ""coursier"" to generate a full classpath, but you can also write this manually. When started this way, the selenium server will inform you that it has found a tracer on stdout.   ```  Maybe some dependency is missing?  ### How can we reproduce the issue?  ```shell java -Dotel.traces.exporter=jaeger -Dotel.exporter.jaeger.endpoint=http://localhost:14250 -Dotel.resource.attributes=service.name=selenium-standalone -jar selenium-server-4.1.2.jar --ext $(coursier fetch -p io.opentelemetry:opentelemetry-exporter-jaeger:1.9.1 io.grpc:grpc-netty:1.41.0) standalone ```   ### Relevant log output  ```shell 11:35:19.866 INFO [LogManager$RootLogger.log] - Using the system default encoding 11:35:19.884 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing java.lang.reflect.InvocationTargetException         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77)         at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: java.lang.NoSuchMethodError: io.opentelemetry.api.metrics.LongCounter.bind(Lio/opentelemetry/api/common/Attributes;)Lio/opentelemetry/api/metrics/BoundLongCounter;         at io.opentelemetry.exporter.otlp.internal.grpc.OkHttpGrpcExporter.(OkHttpGrpcExporter.java:87)         at io.opentelemetry.exporter.otlp.internal.grpc.OkHttpGrpcExporterBuilder.build(OkHttpGrpcExporterBuilder.java:142)         at io.opentelemetry.exporter.jaeger.JaegerGrpcSpanExporterBuilder.build(JaegerGrpcSpanExporterBuilder.java:92)         at io.opentelemetry.sdk.autoconfigure.SpanExporterConfiguration.configureJaeger(SpanExporterConfiguration.java:179)         at io.opentelemetry.sdk.autoconfigure.SpanExporterConfiguration.configureExporter(SpanExporterConfiguration.java:94)         at io.opentelemetry.sdk.autoconfigure.SpanExporterConfiguration.lambda$configureSpanExporters$0(SpanExporterConfiguration.java:80)         at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1321)         at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169)         at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1556)         at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)         at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)         at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)         at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)         at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)         at io.opentelemetry.sdk.autoconfigure.SpanExporterConfiguration.configureSpanExporters(SpanExporterConfiguration.java:75)         at io.opentelemetry.sdk.autoconfigure.TracerProviderConfiguration.configureTracerProvider(TracerProviderConfiguration.java:63)         at io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdkBuilder.build(AutoConfiguredOpenTelemetrySdkBuilder.java:192)         at io.opentelemetry.sdk.autoconfigure.AutoConfiguredOpenTelemetrySdk.initialize(AutoConfiguredOpenTelemetrySdk.java:29)         at org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer.createTracer(OpenTelemetryTracer.java:77)         at org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer.getInstance(OpenTelemetryTracer.java:59)         at org.openqa.selenium.grid.log.LoggingOptions.getTracer(LoggingOptions.java:94)         at org.openqa.selenium.grid.commands.Standalone.createHandlers(Standalone.java:117)         at org.openqa.selenium.grid.TemplateGridServerCommand.asServer(TemplateGridServerCommand.java:41)         at org.openqa.selenium.grid.commands.Standalone.execute(Standalone.java:214)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129)         at org.openqa.selenium.grid.Main.launch(Main.java:83)         at org.openqa.selenium.grid.Main.go(Main.java:57)         at org.openqa.selenium.grid.Main.main(Main.java:42)         ... 6 more ```   ### Operating System  Ubuntu 16.04.7 LTS  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  4.1.2","closed","needs-triaging,","xtianus","2022-03-07T10:42:18Z","2022-04-09T00:11:14Z"
"","10877","[🐛 Bug]: release selenium-java-4.3.0.zip contains duplicate files","### What happened?  I downloaded selenium-java-4.3.0.zip from below URL.  https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.3.0/selenium-java-4.3.0.zip MD5 sum: acc0dd39d95b184d0bc2bc3c8e329ffe  When uncompressed with unzip under MacOS 12.13.1, the files ""lib/netty-transport-native-epoll-4.1.78.Final.jar"" and ""lib/netty-transport-native-kqueue-4.1.78.Final.jar"" exist multiple times and unzip ask if I want to overwrite files. A file should be unique and only exist once.  ### How can we reproduce the issue?  ```shell Download the release file and check with unzip and zipinfo commands available in the OS. Se output log below. ```   ### Relevant log output  ```shell bash-3.2$ curl -L ""https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.3.0/selenium-java-4.3.0.zip"" --output selenium-java-4.3.0.zip    % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                  Dload  Upload   Total   Spent    Left  Speed   0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 100 21.1M  100 21.1M    0     0  11.8M      0  0:00:01  0:00:01 --:--:-- 21.7M  bash-3.2$ md5 selenium-java-4.3.0.zip  MD5 (selenium-java-4.3.0.zip) = acc0dd39d95b184d0bc2bc3c8e329ffe  bash-3.2$ unzip -v -l selenium-java-4.3.0.zip ""*native*"" Archive:  selenium-java-4.3.0.zip  Length   Method    Size  Cmpr    Date    Time   CRC-32   Name --------  ------  ------- ---- ---------- ----- --------  ----    37668  Stored    37668   0% 01-01-2010 00:00 0e0d741d  lib/netty-transport-native-epoll-4.1.78.Final.jar     5594  Stored     5594   0% 01-01-2010 00:00 ce54b85b  lib/netty-transport-native-epoll-4.1.78.Final.jar    24656  Stored    24656   0% 01-01-2010 00:00 26fa2ae5  lib/netty-transport-native-kqueue-4.1.78.Final.jar    25740  Stored    25740   0% 01-01-2010 00:00 adb94c88  lib/netty-transport-native-kqueue-4.1.78.Final.jar     5510  Stored     5510   0% 01-01-2010 00:00 6424f8fc  lib/netty-transport-native-kqueue-4.1.78.Final.jar    43215  Stored    43215   0% 01-01-2010 00:00 43db1b3c  lib/netty-transport-native-unix-common-4.1.78.Final.jar --------          -------  ---                            -------   142383           142383   0%                            6 files  bash-3.2$ zipinfo -v selenium-java-4.3.0.zip lib/netty-transport-native-epoll-4.1.78.Final.jar Archive:  selenium-java-4.3.0.zip There is no zipfile comment.  End-of-central-directory record: -------------------------------    Zip archive file size:                  22162804 (0000000001522D74h)   Actual end-cent-dir record offset:      22162782 (0000000001522D5Eh)   Expected end-cent-dir record offset:    22162782 (0000000001522D5Eh)   (based on the length of the central directory and its expected offset)    This zipfile constitutes the sole disk of a single-part archive; its   central directory contains 86 entries.   The central directory is 6928 (0000000000001B10h) bytes long,   and its (expected) offset in bytes from the beginning of the zipfile   is 22155854 (000000000152124Eh).   Central directory entry #68: ---------------------------    lib/netty-transport-native-epoll-4.1.78.Final.jar    offset of local header from start of archive:   21212780                                                   (000000000143AE6Ch) bytes   file system or operating system of origin:      Unix   version of encoding software:                   0.0   minimum file system compatibility required:     MS-DOS, OS/2 or NT FAT   minimum software version required to extract:   1.0   compression method:                             none (stored)   file security status:                           not encrypted   extended local header:                          no   file last modified on (DOS date/time):          2010 Jan 1 00:00:00   32-bit CRC value (hex):                         0e0d741d   compressed size:                                37668 bytes   uncompressed size:                              37668 bytes   length of filename:                             49 characters   length of extra field:                          0 bytes   length of file comment:                         0 characters   disk number on which file begins:               disk 1   apparent file type:                             binary   Unix file attributes (100555 octal):            -r-xr-xr-x   MS-DOS file attributes (00 hex):                none    There is no file comment.  Central directory entry #69: ---------------------------    lib/netty-transport-native-epoll-4.1.78.Final.jar    offset of local header from start of archive:   21250527                                                   (00000000014441DFh) bytes   file system or operating system of origin:      Unix   version of encoding software:                   0.0   minimum file system compatibility required:     MS-DOS, OS/2 or NT FAT   minimum software version required to extract:   1.0   compression method:                             none (stored)   file security status:                           not encrypted   extended local header:                          no   file last modified on (DOS date/time):          2010 Jan 1 00:00:00   32-bit CRC value (hex):                         ce54b85b   compressed size:                                5594 bytes   uncompressed size:                              5594 bytes   length of filename:                             49 characters   length of extra field:                          0 bytes   length of file comment:                         0 characters   disk number on which file begins:               disk 1   apparent file type:                             binary   Unix file attributes (100555 octal):            -r-xr-xr-x   MS-DOS file attributes (00 hex):                none    There is no file comment.  bash-3.2$ ```   ### Operating System  MacOS 12.13.1  ### Selenium version  Java 4.3.1  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  N/A","open","I-defect,","martin-juhlin","2022-07-14T14:18:45Z","2022-08-03T21:45:03Z"
"","9959","[🐛 Bug]: Session still active after driver.quit() is called","### What happened?  I deployed Selenium 4.0.0 GRID (commit hash: 50fecc4c098b3f80b64b9cb3129ace6bbf07065e) into a Kubernetes cluster by applying k8s-deployment-full-grid.yaml.  I created a test in a NodeJS/Typescript/Cucumber environment. It navigates to a site, performs a login procedure and gets forwarded to an another page.  The driver is built as follows:  `    this.driver = new Builder()       .usingServer(env.SELENIUM_REMOTE_URL)       .forBrowser('chrome')       .setChromeOptions(new Options().headless().windowSize({ width: 1920, height: 1080}).addArguments('--no-sandbox'))       .build(); `  The test executes perfectly, all elements are found, the sequence completes. At the end of the test suite the session is closed by: `     await this.driver.close();     await this.driver.quit();`` ` The test ends, but when I query the /status endpoint on the Selenium Router I see the chrome's session slot still being used with the same session ID I just terminated.  This session remains there  indefinitely until / I redeploy the services.  I have attached wireshark logs from the chrome and the router nodes, also application logs: [hanging_session_wireshark.zip](https://github.com/SeleniumHQ/selenium/files/7382491/hanging_session_wireshark.zip [hanging_session_app_log.zip](https://github.com/SeleniumHQ/selenium/files/7382515/hanging_session_app_log.zip) )   ### How can we reproduce the issue?  ```shell 1) Use the aforementioned k8s deployment yaml to deploy the solution into a k8s cluster. 2) Create a chrome session by building a driver described in the previous section 3) You do not have to perform any browser action 4) Quit the session either with close()/quit() or simply quit(). 5) Check the router/session page to see the session being stuck. ```   ### Relevant log output  ```shell Relevant logs are attached in the first block (app logs / wireshark logs) ```   ### Operating System  Linux  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome / firefox  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","attiladobos","2021-10-20T15:50:16Z","2021-11-25T00:06:44Z"
"","10214","[🐛 Bug]: Could not start a new session. Unable to parse remote response","### What happened?  I created a new Maven project in Eclipse. Created 1 simple test ""open browser with 'google.com' url"". When I have add to pom file dependency for Selenium 4.0.0, I have issue ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response: "" selenium version used: Selenium 4.0.0. Browser version 95.0   ### How can we reproduce the issue?  ```shell FirefoxOptions options = new FirefoxOptions(); options.setAcceptInsecureCerts(true); options.setCapability(""build"", ""Testing Firefox Options [Selenium 4]""); options.setCapability(""name"", ""Testing Firefox Options [Selenium 4]""); options.setCapability(""platformName"", ""Windows 10""); options.setCapability(""browserName"", ""Firefox""); options.setCapability(""browserVersion"", ""95.0""); try { driver = new RemoteWebDriver(new URL(""http://"" + username + "":"" + access_key + ""@google.com""), ((Capabilities) options)); } catch (MalformedURLException e) { System.out.println(""Invalid grid URL""); } ```   ### Relevant log output  ```shell org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Unable to parse remote response:     500 Internal Error.    Internal Error   The server encountered an internal error that prevented it from fulfilling this request.      	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:112) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:168) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at utility.WebDriverManagedef.getRemoteWebDriver(WebDriverManagedef.java:184) 	at stepdefs.HomePageStepDefinition.websiteWHISTLESUrlIsLaunchedIn(HomePageStepDefinition.java:76) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at io.cucumber.java.Invoker.invoke(Invoker.java:27) 	at io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:27) 	at io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63) 	at io.cucumber.core.runner.TestStep.executeStep(TestStep.java:64) 	at io.cucumber.core.runner.TestStep.run(TestStep.java:49) 	at io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:46) 	at io.cucumber.core.runner.TestCase.run(TestCase.java:51) 	at io.cucumber.core.runner.Runner.runPickle(Runner.java:67) 	at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:124) 	at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:29) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.util.ArrayList.forEach(Unknown Source) 	at org.testng.TestRunner.privateRun(TestRunner.java:766) 	at org.testng.TestRunner.run(TestRunner.java:587) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337) 	at org.testng.SuiteRunner.run(SuiteRunner.java:286) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1109) 	at org.testng.TestNG.runSuites(TestNG.java:1039) 	at org.testng.TestNG.run(TestNG.java:1007) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) Caused by: org.openqa.selenium.json.JsonException: Unable to parse:     500 Internal Error.    Internal Error   The server encountered an internal error that prevented it from fulfilling this request.      	at org.openqa.selenium.json.Json.toType(Json.java:57) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:109) 	... 52 more Caused by: org.openqa.selenium.json.JsonException: Unable to determine type from:","closed","needs-triaging,","ghost","2022-01-03T10:04:35Z","2022-02-03T00:07:07Z"
"","10118","[🐛 Bug]: Selenium 4.1.0 - org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.","### What happened?  I created a new Maven project in Eclipse. Created 1 simple test ""open browser with 'google.com' url"". When I add to pom file dependency for 'browserup-proxy-core' I have issue ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure."" Test run with JUnit or Maven - the result is the same. Browser Chrome/Firefox started window, but do open URL. The issue started from selenium-java 4.0.0-rc-1, and was reproduced for version 4.1.0. The test works WITHOUT any issues for selenium-java 4.0.0-beta-4!   ### How can we reproduce the issue?  ```shell pom.xml    4.0.0    Selenium4Maven   selenium4   0.0.1-SNAPSHOT   jar    selenium4   http://maven.apache.org                junit       junit       4.13.2                 org.seleniumhq.selenium       selenium-java       4.1.0                 io.github.bonigarcia       webdrivermanager       5.0.3                 com.browserup       browserup-proxy-core       2.1.2            test public void testApp()     {     	WebDriverManager.chromedriver().setup();     	WebDriver driver = new ChromeDriver();     	     	//WebDriverManager.firefoxdriver().setup();     	//WebDriver driver = new FirefoxDriver();     	     	driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(5));     	driver.manage().timeouts().scriptTimeout(Duration.ofSeconds(10));     	//driver.manage().timeouts().setScriptTimeout(Duration.ofSeconds(10)); - for 4.0.0-beta-4     	driver.manage().timeouts().pageLoadTimeout(Duration.ofSeconds(15));     	     	driver.get(""https://google.com"");         assertTrue( true );     } ```   ### Relevant log output  ```shell Log for Firefox 95 with selenium 4.1.0  [INFO] Scanning for projects... [INFO]  [INFO] ----------------------< Selenium4Maven:selenium4 >---------------------- [INFO] Building selenium4 0.0.1-SNAPSHOT [INFO] --------------------------------[ jar ]--------------------------------- [INFO]  [INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ selenium4 --- [INFO] Deleting E:\eclipse-workspace\selenium4\target [INFO]  [INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ selenium4 --- [WARNING] Using platform encoding (Cp1251 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory E:\eclipse-workspace\selenium4\src\main\resources [INFO]  [INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ selenium4 --- [INFO] Changes detected - recompiling the module! [WARNING] File encoding has not been set, using platform encoding Cp1251, i.e. build is platform dependent! [INFO] Compiling 1 source file to E:\eclipse-workspace\selenium4\target\classes [INFO]  [INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ selenium4 --- [WARNING] Using platform encoding (Cp1251 actually) to copy filtered resources, i.e. build is platform dependent! [INFO] skip non existing resourceDirectory E:\eclipse-workspace\selenium4\src\test\resources [INFO]  [INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ selenium4 --- [INFO] Changes detected - recompiling the module! [WARNING] File encoding has not been set, using platform encoding Cp1251, i.e. build is platform dependent! [INFO] Compiling 1 source file to E:\eclipse-workspace\selenium4\target\test-classes [INFO]  [INFO] --- maven-surefire-plugin:2.12.4:test (default-test) @ selenium4 --- [INFO] Surefire report directory: E:\eclipse-workspace\selenium4\target\surefire-reports  -------------------------------------------------------  T E S T S ------------------------------------------------------- Running Selenium4Maven.selenium4.AppTest SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. 1638958748189	geckodriver	INFO	Listening on 127.0.0.1:57764 1638958749584	mozrunner::runner	INFO	Running command: ""C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""--remote-debugging-port"" ""49976"" ""-no-remote"" ""-profile"" ""C:\\Users\\admin\\AppData\\Local\\Temp\\rust_mozprofileROOcg4"" 1638958749899	Marionette	INFO	Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at C:\\Users\\admin\\AppData\\Local\\Temp\\rust_mozprofileROOcg4\\search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:49976/devtools/browser/e61948e2-ab27-4711-a8b8-f2cfd31eb702 1638958751777	Marionette	INFO	Listening on port 55810 1638958752206	RemoteAgent	WARN	TLS certificate errors will be ignored for this session дек 08, 2021 12:19:21 PM org.openqa.selenium.os.OsProcess destroy INFO: Unable to drain process streams. Ignoring but the exception being swallowed follows. org.apache.commons.exec.ExecuteException: The stop timeout of 2000 ms was exceeded (Exit value: -559038737) 	at org.apache.commons.exec.PumpStreamHandler.stopThread(PumpStreamHandler.java:295) 	at org.apache.commons.exec.PumpStreamHandler.stop(PumpStreamHandler.java:181) 	at org.openqa.selenium.os.OsProcess.destroy(OsProcess.java:135) 	at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:152) 	at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:278) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:151) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:168) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:198) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:164) 	at Selenium4Maven.selenium4.AppTest.testApp(AppTest.java:46) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at junit.framework.TestCase.runTest(TestCase.java:177) 	at junit.framework.TestCase.runBare(TestCase.java:142) 	at junit.framework.TestResult$1.protect(TestResult.java:122) 	at junit.framework.TestResult.runProtected(TestResult.java:142) 	at junit.framework.TestResult.run(TestResult.java:125) 	at junit.framework.TestCase.run(TestCase.java:130) 	at junit.framework.TestSuite.runTest(TestSuite.java:241) 	at junit.framework.TestSuite.run(TestSuite.java:236) 	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:90) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:242) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:137) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189) 	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165) 	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)  дек 08, 2021 12:19:21 PM org.openqa.selenium.os.OsProcess destroy SEVERE: Unable to kill process java.lang.ProcessImpl@5f4d427e Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 16.325 sec","closed","I-defect,","elyalyuk-x","2021-12-08T10:49:22Z","2022-01-09T00:08:03Z"
"","9994","[🐛 Bug]: WebDriver doesn't have local or session storage","### What happened?  I created a Firefox WebDriver in Python and loaded a number of different web pages.  I looked in my browser and saw a number of local and session storage variables in the Developer Tools.  When I call ""driver.execute_script(""return localStorage.key(0)"")"" it usually returns a localStorage value.  But this command returns nothing for any other index than 0, and it returns nothing for sessionStorage.  It seems very likely that Selenium doesn't have the local or session storage variables.  Why is this, and how can we obtain them like a normal browser?  ### How can we reproduce the issue?  ```shell driver.execute_script(""return localStorage.key(1)"") ```   ### Relevant log output  ```shell >>> driver.execute_script(""return localStorage.key(0)"") 'algoliasearch-client-js' >>> driver.execute_script(""return localStorage.key(1)"") >>> ```   ### Operating System  Ubuntu Server 21.04  ### Selenium version  Python 3  ### What are the browser(s) and version(s) where you see this issue?  Firefox (latest)  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver (latest)  ### Are you using Selenium Grid?  No","closed","I-question,","julkhami","2021-10-28T13:25:03Z","2021-11-28T00:07:47Z"
"","10721","[🐛 Bug]: Commands with waiting fail on the last Chrome version","### What happened?  I click on 'Sign in'-button in my register form. After that I need to check, that element appears on the page (e.g. User Name) I set the [wait for element present]-command after the command [click]:[sign-in-button]. Next step is page refresh. After that the [wait for...] command fails  ### How can we reproduce the issue?  ```shell Create a test-case using [wait for element present]-command after page update. ```   ### Relevant log output  ```shell - ```   ### Operating System  MAC OS Monterey 12.4  ### Selenium version  3.17.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 102.0.5005.61 (Official Build) (x86_64)  ### What are the browser driver(s) and version(s) where you see this issue?  Version 102.0.5005.61 (Official Build) (x86_64)  ### Are you using Selenium Grid?  No","closed","I-issue-template,","SergeyKhmel11","2022-06-01T13:12:10Z","2022-07-08T00:14:11Z"
"","10048","[🐛 Bug]: Cannot use Selenium 4 BiDi to listen to console.log - Stuck on monitor.StartEventMonitoring()","### What happened?  I cannot get past the monitor.StartEventMonitoring() in the below code:  ======================================  `` `IJavaScriptEngine monitor = new JavaScriptEngine(driver);` `List consoleMessages = new List();` `monitor.JavaScriptConsoleApiCalled += (sender, e) =>` `{` `    consoleMessages.Add(e.MessageContent);` `};` `await monitor.StartEventMonitoring();`  `` `someButton.Click(); //","closed","I-defect,","fractalocity","2021-11-16T16:33:11Z","2022-06-13T00:13:37Z"
"","10412","[🐛 Bug]: Server terminated early with status 126; chrome and chromedriver appear to be compatible","### What happened?  I cannot be sure at exactly what point my containerized Node.js program fails.   I am using what look to be the latest versions of the Google chrome browser binary and an apparently compatible version of the chromedriver.  chrome: Google Chrome 99.0.4844.51 unknown  chromedriver: ChromeDriver 99.0.4844.51 (d537ec02474b5afe23684e7963d538896c63ac77-refs/branch-heads/4844@{#875})  ### How can we reproduce the issue?  ```shell I'm not sure how best to reproduce it. The code I'm running is part of a considerably larger system and cannot readily be extracted and condensed. ```   ### Relevant log output  ```shell Error: Server terminated early with status 126 /../node_modules/selenium-webdriver/remote/index.js:248                 reject(Error(e.message))                        ^ Error: Server terminated early with status 126     at /data/hermes/node_modules/selenium-webdriver/remote/index.js:248:24     at processTicksAndRejections (node:internal/process/task_queues:96:5) ```   ### Operating System  Containerized CentOS 7 running atop Ubuntu 18.04.1  ### Selenium version  Node.js 16.4.0  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 99.0.4844.51  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51 (d537ec02474b5afe23684e7963d538896c63ac77-refs/branch-heads/4844@{#875})  ### Are you using Selenium Grid?  I don't think so","closed","I-defect,","paul-bell","2022-03-04T21:07:38Z","2022-05-12T00:12:37Z"
"","10088","[🐛 Bug]: Geckodriver on Centos not starting","### What happened?  I am writing in regard to the issue #10014  I did some extensive testing over the past few days. My code: ``` def get_firefox_driver(is_proxy, proxy_params):     global_var.DEFAULT_LOAD_TIME     options = FirefoxOptions()      try:         driver = webdriver.Firefox(options=options)         time.sleep(10)     except TimeoutException:         print(""Firefox took more than 60 seconds start!"")         print(""FFEx:""+repr(e))     except Exception as e:         print(""FFEx:""+repr(e))              try:         driver.implicitly_wait(1)         driver.set_window_size(1920, 1080)         driver.set_page_load_timeout(global_var.DEFAULT_LOAD_TIME)         driver.set_script_timeout(20)     except Exception as e:         print(""Unable to start driver {}."".format(repr(e)))              driver.get(""https://www.bing.com/"")          return driver ``` ERROR ``` CEx:SessionNotCreatedException('session not created: No matching capabilities found', None, ['#0 0x558bba045ee3 ', '#1 0x558bb9b13608 ', '#2 0x558bb9b6c2a5 ', '#3 0x558bb9b6b6c6 ', '#4 0x558bb9b6cd4d ', '#5 0x558bb9b67163 ', '#6 0x558bb9b3cbfc ', '#7 0x558bb9b3dc05 ', '#8 0x558bba077baa ', '#9 0x558bba08d651 ', '#10 0x558bba078b05 ', '#11 0x558bba08ea68 ', '#12 0x558bba06d05f ', '#13 0x558bba0a9818 ', '#14 0x558bba0a9998 ', '#15 0x558bba0c4eed ', '#16 0x7f46598adea5 ', '']) Unable to start driver UnboundLocalError(""local variable 'driver' referenced before assignment""). ``` gekodriver.log ``` console.log: WebExtensions: reset-default-search: starting. console.log: WebExtensions: reset-default-search: No addons in our list are installed. 1637925795164   geckodriver     INFO    Listening on 127.0.0.1:44759 1637925795168   mozrunner::runner       INFO    Running command: ""/bin/firefox"" ""--marionette"" ""--remote-debugging-port"" ""40606"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileFWvysu"" Running without a11y support! 1637925795517   Marionette      INFO    Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /tmp/rust_mozprofileFWvysu/search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:40606/devtools/browser/a56408aa-1343-4f12-93ac-802bb2c7c728 1637925798414   Marionette      INFO    Listening on port 45437 1637925798496   RemoteAgent     WARN    TLS certificate errors will be ignored for this session 1637925810193   Marionette      INFO    Stopped listening on port 45437 JavaScript error: chrome://global/content/elements/browser-custom-element.js, line 1671: NotFoundError: No such JSWindowActor 'MarionetteEvents' JavaScript error: resource:///modules/Interactions.jsm, line 209: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIUserIdleService.removeIdleObserver] !!! error running onStopped callback: TypeError: callback is not a function 1637925810920   RemoteAgent     ERROR   unable to stop listener: [Exception... ""Component returned failure code: 0x8000ffff (NS_ERROR_UNEXPECTED) [nsIWindowMediator.getEnumerator]""  nsresult: ""0x8000ffff (NS_ERROR_UNEXPECTED)""  location: ""JS frame :: chrome://remote/content/cdp/observers/TargetObserver.jsm :: stop :: line 64""  data: no] Stack trace: stop()@TargetObserver.jsm:64 unwatchForTabs()@TargetList.jsm:70 unwatchForTargets()@TargetList.jsm:37 destructor()@TargetList.jsm:109 stop()@CDP.jsm:104 close()@RemoteAgent.jsm:138 1637926224227   geckodriver     INFO    Listening on 127.0.0.1:59093 1637926224231   mozrunner::runner       INFO    Running command: ""/bin/firefox"" ""--marionette"" ""--remote-debugging-port"" ""47588"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile0dbwCJ"" Running without a11y support! 1637926224615   Marionette      INFO    Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /tmp/rust_mozprofile0dbwCJ/search.json.mozlz4"", (void 0))) DevTools listening on ws://localhost:47588/devtools/browser/55789d37-fad9-4600-92d4-582adfe86781 1637926227215   Marionette      INFO    Listening on port 33191 1637926227505   RemoteAgent     WARN    TLS certificate errors will be ignored for this session 1637926238888   Marionette      INFO    Stopped listening on port 33191 JavaScript error: chrome://global/content/elements/browser-custom-element.js, line 1671: NotFoundError: No such JSWindowActor 'MarionetteEvents' JavaScript error: resource:///modules/Interactions.jsm, line 209: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIUserIdleService.removeIdleObserver] !!! error running onStopped callback: TypeError: callback is not a function 1637926239699   RemoteAgent     ERROR   unable to stop listener: [Exception... ""Component returned failure code: 0x8000ffff (NS_ERROR_UNEXPECTED) [nsIWindowMediator.getEnumerator]""  nsresult: ""0x8000ffff (NS_ERROR_UNEXPECTED)""  location: ""JS frame :: chrome://remote/content/cdp/observers/TargetObserver.jsm :: stop :: line 64""  data: no] Stack trace: stop()@TargetObserver.jsm:64 unwatchForTabs()@TargetList.jsm:70 unwatchForTargets()@TargetList.jsm:37 destructor()@TargetList.jsm:109 stop()@CDP.jsm:104 close()@RemoteAgent.jsm:138  ```   I tried this only on Centos 7 and 8. One on a physical machine, the other on an AWS machine.  I created a clean venv with the following packages: ``` async-generator==1.10 attrs==21.2.0 certifi==2021.10.8 cffi==1.15.0 chardet==4.0.0 charset-normalizer==2.0.7 click==8.0.3 cryptography==36.0.0 decorator==5.1.0 fake-useragent==0.1.11 Flask==2.0.2 h11==0.12.0 idna==3.3 itsdangerous==2.0.1 Jinja2==3.0.3 MarkupSafe==2.0.1 outcome==1.1.0 pdfminer.six==20200517 pdfplumber==0.5.28 Pillow==8.4.0 pycparser==2.21 pycryptodome==3.11.0 pyOpenSSL==21.0.0 requests==2.26.0 selenium==4.1.0 six==1.16.0 sniffio==1.2.0 sortedcontainers==2.4.0 trio==0.19.0 trio-websocket==0.9.2 urllib3==1.26.7 validators==0.18.2 Wand==0.6.7 Werkzeug==2.0.2 wsproto==1.0.0 ```  Using latest geckodriver copied in venv/bin firefox.x86_64                                                                 91.3.0-1.el7.centos  Python 3.8.12   ### How can we reproduce the issue?  ```shell I think I provided all the details above for creating a test environment. ```   ### Relevant log output  ```shell See above ```   ### Operating System  Centos 7 / Centos 8  ### Selenium version  4.0.0r2 and above - works on 4.0.0r1  ### What are the browser(s) and version(s) where you see this issue?  Firefox 90 and above  ### What are the browser driver(s) and version(s) where you see this issue?  0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Bllacky","2021-11-26T11:35:15Z","2022-01-03T00:07:37Z"
"","10121","[🐛 Bug]: Relative Locator in Selenium 4. 'Below' direction seems to be working incorrectly","### What happened?  I am using Selenium 4.0.0 and using relative loctors to locate my elements in web app. But when using 'below' direction, it seems to be inputting the value in wrong textbox. This issue happens only for few controls. Kindly help  ### How can we reproduce the issue?  ```shell couldnt share the steps ```   ### Relevant log output  ```shell Couldnt share the project. ```   ### Operating System  windows 10  ### Selenium version  selenium 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 96 +  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 96+  ### Are you using Selenium Grid?  no","closed","I-issue-template,","saranmani","2021-12-09T07:21:41Z","2022-01-26T00:10:10Z"
"","10718","[🐛 Bug]: ruby 2.7.5 got status code 500 (Selenium::WebDriver::Error::ServerError)","### What happened?  I am using ruby 2.7.3 and watir 7.1.0, trying to run the ui test on the selenium grid 4 (4.0.0-beta-3-prerelease-20210402);  I started the selenium grid 4 with all the docker containers, including selenium hub and chrome & edge nodes. they are setup very well;  with my ruby, I am trying to open a new browser: $browser = Watir::Browser.new :""chrome"", :url => ""http://localhost:4444/wd/hub""  then got the error: **status code 500 (Selenium::WebDriver::Error::ServerError)**  ### How can we reproduce the issue?  ```shell Run the commands below to spin up selenium grid 4: docker network create nut  docker run -d -p 4442-4444:4442-4444 --network nut --name selenium-hub selenium/hub:4.0.0-beta-3-prerelease-20210402  docker run -d -p 5901:5900 --network nut --name selenium-chrome -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-chrome:4.0.0-beta-3-prerelease-20210402   docker run -d -p 5902:5900 --network nut --name selenium-edge -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-edge:4.0.0-beta-3-prerelease-20210402  then with ruby: $browser = Watir::Browser.new :""chrome"", :url => ""http://localhost:4444/wd/hub"" ```   ### Relevant log output  ```shell status code 500 (Selenium::WebDriver::Error::ServerError) ```   ### Operating System  Windows10  ### Selenium version  ruby 2.7.5  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101.0.4951.6  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 101.0.4951.6  ### Are you using Selenium Grid?  selenium grid 4.0.0-beta-3-prerelease-20210402","closed","I-defect,","RayChenLDL","2022-06-01T07:26:01Z","2022-07-03T00:14:12Z"
"","10028","[🐛 Bug]: console.log listener doesn't seem to work","### What happened?  I am using Java code from here: https://www.selenium.dev/documentation/webdriver/bidi_apis/#listen-to-consolelog-events  The example works but when I change the webpage to my testing page it simply doesn't work. I have plenty of console log events here: https://fakestore.testelka.pl/console-log-events ![console-log-events](https://user-images.githubusercontent.com/4591858/141452715-e6bbd5cb-e149-4a73-a27f-e894bfa70310.png) /  I'm expecting to see these events logged but they are not.  ### How can we reproduce the issue?  ```shell import io.github.bonigarcia.wdm.WebDriverManager; import org.junit.jupiter.api.AfterEach; import org.junit.jupiter.api.BeforeEach; import org.junit.jupiter.api.Test; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.devtools.DevTools; import org.openqa.selenium.devtools.HasDevTools; import org.openqa.selenium.devtools.v95.log.Log;  public class consoleLogEventsExample {     WebDriver driver;     @BeforeEach     public void setupDriver(){         //WebDriver Manager 5.0.3         WebDriverManager.chromedriver().setup();         driver = new ChromeDriver();         DevTools devTools = ((HasDevTools)driver).getDevTools();         devTools.createSession();         devTools.send(Log.enable());         devTools.addListener(Log.entryAdded(),                 logEntry -> {                     System.out.println(""log: ""+logEntry.getText());                     System.out.println(""level: ""+logEntry.getLevel());                 });      }     @AfterEach     public void closeDriver(){         driver.quit();     }      @Test     public void consoleLogEventsTest(){         //No events logged         driver.get(""https://fakestore.testelka.pl/console-log-events"");     } } ```   ### Relevant log output  ```shell SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Starting ChromeDriver 95.0.4638.69 (6a1600ed572fedecd573b6c2b90a22fe6392a410-refs/branch-heads/4638@{#984}) on port 58265 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. lis 12, 2021 11:36:08 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C lis 12, 2021 11:36:08 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found exact CDP implementation for version 95  Process finished with exit code 0 ```   ### Operating System  Windows 11 Pro  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  Downloaded with WebDriver Manager  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","aphx07","2021-11-12T10:37:15Z","2021-12-24T00:07:20Z"
"","10246","[🐛 Bug]: Getting Nullpointer execption when I am trying to use devtools with selenium4 java","### What happened?  I am trying to use dev tools with the help of the remote driver. I am facing a Nullpointer exception.  ### How can we reproduce the issue?  ```shell Please go through the below repo to find a reproducible example. https://github.com/bachhavdipak/devtoolSelenium4 ```   ### Relevant log output  ```shell java.lang.NullPointerException 	at org.google.pageObjects.HomePage.navigateTo(HomePage.java:28) 	at org.google.pageDefinitions.HomePageSteps.navigateToPage(HomePageSteps.java:14) 	at org.google.pageDefinitions.HomePageSteps$ByteBuddy$oppLuclh.navigateToPage$accessor$slrDMVOm(Unknown Source) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:504) 	at net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:484) 	at net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:458) 	at net.thucydides.core.steps.StepInterceptor.runOrSkipMethod(StepInterceptor.java:210) 	at net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:197) 	at net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:85) 	at net.thucydides.core.steps.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:51) 	at org.google.pageDefinitions.HomePageSteps$ByteBuddy$oppLuclh.navigateToPage(Unknown Source) 	at org.google.stepDefinitions.StepDefinitions.theGuestUserIsOnContactPage(StepDefinitions.java:25) 	at ✽.the Guest user is on the google page(file:///C:/Users/username/serenityDevtools/src/test/resources/features/Google.feature:5) ```   ### Operating System  Windows10  ### Selenium version  Java  ### What are the browser(s) and version(s) where you see this issue?   ChromeDriver 97  ### What are the browser driver(s) and version(s) where you see this issue?   ChromeDriver 97.0.4692.71   ### Are you using Selenium Grid?  4","closed","C-devtools,","bachhavdipak","2022-01-12T13:15:39Z","2022-03-10T00:09:36Z"
"","10177","[🐛 Bug]: selenium-server standalone crash on MacOS","### What happened?  I am trying to upgrade to selenium-server 4 but I am experiencing crashes whenever I try to connect to the selenium server. It doesn't seem to matter which driver I use (I have tried with both Chrome and Safari).  selenium-server 3 works on my system without issues.  ### How can we reproduce the issue?   Start selenium-server standalone:  ```shell java -jar selenium-server-4.1.1.jar standalone ```  Run the following code:  ``` from selenium import webdriver  driver = webdriver.Remote(command_executor=""http://localhost:4444"") ```  This makes the selenium-server crash:  ``` 17:09:30.215 INFO [LogManager$RootLogger.log] - Using the system default encoding 17:09:30.218 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 17:09:30.768 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors 17:09:30.812 INFO [NodeOptions.report] - Adding Chrome for {""goog:chromeOptions"": {""binary"": ""\u002fApplications\u002fGoogle Chrome.app\u002fContents\u002fMacOS\u002fGoogle Chrome""},""browserVersion"": ""96"",""browserName"": ""chrome"",""se:webDriverExecutable"": "".\u002fchromedriver"",""platformName"": ""MAC""} 12 times 17:09:30.840 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 17:09:30.858 INFO [LocalDistributor.add] - Added node 12fb0b38-7e83-42be-a754-c636f76b53ef at http://localhost:4445. Health check every 120s 17:09:30.868 INFO [GridModel.setAvailability] - Switching node 12fb0b38-7e83-42be-a754-c636f76b53ef (uri: http://localhost:4445) from DOWN to UP 17:09:31.270 INFO [Standalone.execute] - Started Selenium Standalone 4.1.1 (revision e8fcc2cecf): http://localhost:4445 17:09:45.428 INFO [LocalDistributor.newSession] - Session request received by the distributor:  [Capabilities {}] Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 55873 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. # # A fatal error has been detected by the Java Runtime Environment: # #  SIGSEGV (0xb) at pc=0x000000010f5fdfaa, pid=13230, tid=0x0000000000007203 # # JRE version: OpenJDK Runtime Environment (8.0_302) (build 1.8.0_302-bre_2021_07_21_23_11-b00) # Java VM: OpenJDK 64-Bit Server VM (25.302-b00 mixed mode bsd-amd64 compressed oops) # Problematic frame: # V  [libjvm.dylib+0x545faa] # # Core dump written. Default location: /cores/core or core.13230 # # An error report file with more information is saved as: # /Users/anze/selenium_test/hs_err_pid13230.log # # If you would like to submit a bug report, please visit: #   http://bugreport.java.com/bugreport/crash.jsp # [1]    13230 abort      java -jar selenium-server-4.1.1.jar standalone ```  I also get the same crash if I start the selenium-server hub and then manually connect the selenium-server node:  ``` java -jar selenium-server-4.1.1.jar hub ``` ``` java -jar selenium-server-4.1.1.jar node ``` Node crashes with: ``` 17:15:44.252 INFO [LogManager$RootLogger.log] - Using the system default encoding 17:15:44.254 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 17:15:44.330 INFO [UnboundZmqEventBus.] - Connecting to tcp://0.0.0.0:4442 and tcp://0.0.0.0:4443 17:15:44.363 INFO [UnboundZmqEventBus.] - Sockets created 17:15:45.367 INFO [UnboundZmqEventBus.] - Event bus ready 17:15:45.439 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.86.25:5555 17:15:45.467 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors 17:15:45.495 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 17:15:45.522 INFO [NodeOptions.report] - Adding Safari for {""browserName"": ""safari""} 1 times 17:15:45.523 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 12 times 17:15:45.535 INFO [Node.] - Binding additional locator mechanisms: id, name, relative java.lang.reflect.InvocationTargetException 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) 	at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: java.io.UncheckedIOException: java.io.IOException: Could not bind to address or port is already in use. Host 0.0.0.0, Port 5555 	at org.openqa.selenium.netty.server.NettyServer.start(NettyServer.java:169) 	at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:191) 	at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:188) 	at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:230) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) 	at org.openqa.selenium.grid.Main.launch(Main.java:83) 	at org.openqa.selenium.grid.Main.go(Main.java:57) 	at org.openqa.selenium.grid.Main.main(Main.java:42) 	... 6 more Caused by: java.io.IOException: Could not bind to address or port is already in use. Host 0.0.0.0, Port 5555 	... 14 more Caused by: java.net.BindException: Address already in use 	at sun.nio.ch.Net.bind0(Native Method) 	at sun.nio.ch.Net.bind(Net.java:461) 	at sun.nio.ch.Net.bind(Net.java:453) 	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222) 	at io.netty.channel.socket.nio.NioServerSocketChannel.doBind(NioServerSocketChannel.java:134) 	at io.netty.channel.AbstractChannel$AbstractUnsafe.bind(AbstractChannel.java:562) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.bind(DefaultChannelPipeline.java:1334) 	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:506) 	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:491) 	at io.netty.handler.logging.LoggingHandler.bind(LoggingHandler.java:230) 	at io.netty.channel.AbstractChannelHandlerContext.invokeBind(AbstractChannelHandlerContext.java:506) 	at io.netty.channel.AbstractChannelHandlerContext.bind(AbstractChannelHandlerContext.java:491) 	at io.netty.channel.DefaultChannelPipeline.bind(DefaultChannelPipeline.java:973) 	at io.netty.channel.AbstractChannel.bind(AbstractChannel.java:260) 	at io.netty.bootstrap.AbstractBootstrap$2.run(AbstractBootstrap.java:356) 	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) ``` Hub crashes with: ``` 17:15:19.096 INFO [LogManager$RootLogger.log] - Using the system default encoding 17:15:19.099 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 17:15:19.215 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://[fe80:0:0:0:c5b:572d:c92e:65a0%en0]:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://[fe80:0:0:0:c5b:572d:c92e:65a0%en0]:4443] 17:15:19.281 INFO [UnboundZmqEventBus.] - Connecting to tcp://[fe80:0:0:0:c5b:572d:c92e:65a0%en0]:4442 and tcp://[fe80:0:0:0:c5b:572d:c92e:65a0%en0]:4443 17:15:19.308 INFO [UnboundZmqEventBus.] - Sockets created 17:15:20.310 INFO [UnboundZmqEventBus.] - Event bus ready 17:15:20.945 INFO [Hub.execute] - Started Selenium Hub 4.1.1 (revision e8fcc2cecf): http://192.168.86.25:4444 17:15:45.626 INFO [Node.] - Binding additional locator mechanisms: id, relative, name # # A fatal error has been detected by the Java Runtime Environment: # #  SIGSEGV (0xb) at pc=0x0000000110c31faa, pid=14501, tid=0x0000000000006a03 # # JRE version: OpenJDK Runtime Environment (8.0_302) (build 1.8.0_302-bre_2021_07_21_23_11-b00) # Java VM: OpenJDK 64-Bit Server VM (25.302-b00 mixed mode bsd-amd64 compressed oops) # Problematic frame: # V  [libjvm.dylib+0x545faa] # # Core dump written. Default location: /cores/core or core.14501 # # An error report file with more information is saved as: # /Users/anze/selenium_test/hs_err_pid14501.log # # If you would like to submit a bug report, please visit: #   http://bugreport.java.com/bugreport/crash.jsp # [1]    14501 abort      java -jar selenium-server-4.1.1.jar hub ``` ```   ### Relevant log output  ```shell cat /Users/anze/selenium_test/hs_err_pid13230.log # # A fatal error has been detected by the Java Runtime Environment: # #  SIGSEGV (0xb) at pc=0x000000010f5fdfaa, pid=13230, tid=0x0000000000007203 # # JRE version: OpenJDK Runtime Environment (8.0_302) (build 1.8.0_302-bre_2021_07_21_23_11-b00) # Java VM: OpenJDK 64-Bit Server VM (25.302-b00 mixed mode bsd-amd64 compressed oops) # Problematic frame: # V  [libjvm.dylib+0x545faa] # # Core dump written. Default location: /cores/core or core.13230 # # If you would like to submit a bug report, please visit: #   http://bugreport.java.com/bugreport/crash.jsp #  ---------------  T H R E A D  ---------------  Current thread (0x00007f889503b000):  JavaThread ""AsyncHttpClient-4-2"" daemon [_thread_in_vm, id=29187, stack(0x0000700006cd9000,0x0000700006dd9000)]  siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x0000000000000000  Registers: RAX=0x000000010f793f50, RBX=0x00007f889503b000, RCX=0x00007f889f000005, RDX=0x0000000000000000 RSP=0x0000700006dd7260, RBP=0x0000700006dd7290, RSI=0x0000000000000006, RDI=0x0000700006dd7260 R8 =0x000000000000002f, R9 =0x00000000ffffffe0, R10=0x000000010fa4c3db, R11=0x000000010f57e907 R12=0x0000000000000000, R13=0x0000000127807e68, R14=0x000000000000002f, R15=0x00007f889f000005 RIP=0x000000010f5fdfaa, EFLAGS=0x0000000000010246, ERR=0x0000000000000004   TRAPNO=0x000000000000000e  Top of Stack: (sp=0x0000700006dd7260) 0x0000700006dd7260:   00007f889503b000 00007f889503b000 0x0000700006dd7270:   0000000127807e68 0000000000000000 0x0000700006dd7280:   0000700006dd7350 00007f889503b000 0x0000700006dd7290:   0000700006dd7310 000000010fa4c407 0x0000700006dd72a0:   0000000127807e68 0000700006dd7350 0x0000700006dd72b0:   0000700006dd7310 000000010fa4c159 0x0000700006dd72c0:   000000012a766cd0 000000010fa4c122 0x0000700006dd72d0:   0000700006dd72d0 0000000127807e68 0x0000700006dd72e0:   0000700006dd7350 0000000127837b10 0x0000700006dd72f0:   0000000000000000 0000000127807e68 0x0000700006dd7300:   0000000000000000 0000700006dd7330 0x0000700006dd7310:   0000700006dd7398 000000010fa3bffd 0x0000700006dd7320:   0000000000000000 000000010fa45a58 0x0000700006dd7330:   000000000000002f 00007f889f000005 0x0000700006dd7340:   0000700006dd7398 0000000000000000 0x0000700006dd7350:   00000006c0015760 0000700006dd7358 0x0000700006dd7360:   000000012a76a5a6 0000700006dd73c0 0x0000700006dd7370:   000000012a76d1c0 0000000000000000 0x0000700006dd7380:   000000012a76a5d8 0000700006dd7330 0x0000700006dd7390:   0000700006dd73a8 0000700006dd7408 0x0000700006dd73a0:   000000010fa3bffd 000000000000002f 0x0000700006dd73b0:   00007f889f000005 000000010fa47507 0x0000700006dd73c0:   0000000000000000 0000700006dd73c8 0x0000700006dd73d0:   000000012a72ee3b 0000700006dd7430 0x0000700006dd73e0:   000000012a764a00 0000000000000000 0x0000700006dd73f0:   000000012a72ee70 0000700006dd73a8 0x0000700006dd7400:   0000700006dd7418 0000700006dd7478 0x0000700006dd7410:   000000010fa3bffd 000000000000002f 0x0000700006dd7420:   00007f889f000005 0000000000000000 0x0000700006dd7430:   0000000000000000 0000700006dd7438 0x0000700006dd7440:   000000012a851d31 0000700006dd74f8 0x0000700006dd7450:   000000012a883fe0 0000000000000000  Instructions: (pc=0x000000010f5fdfaa) 0x000000010f5fdf8a:   81 fe ff 31 db 48 8d 7d d0 48 89 1f be 06 00 00 0x000000010f5fdf9a:   00 e8 e0 25 df ff 48 89 5d d8 41 f6 c4 01 75 06 0x000000010f5fdfaa:   49 8b 04 24 eb 08 4c 89 e7 e8 2c 11 de ff 46 88 0x000000010f5fdfba:   34 38 48 8d 7d d8 e8 23 10 be ff 48 8d 7d d0 be  Register to memory mapping:  RAX=0x000000010f793f50: _ZN20SafepointSynchronize6_stateE+0 in /usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/server/libjvm.dylib at 0x000000010f0b8000 RBX=0x00007f889503b000 is a thread RCX=0x00007f889f000005 is an unknown value RDX=0x0000000000000000 is an unknown value RSP=0x0000700006dd7260 is pointing into the stack for thread: 0x00007f889503b000 RBP=0x0000700006dd7290 is pointing into the stack for thread: 0x00007f889503b000 RSI=0x0000000000000006 is an unknown value RDI=0x0000700006dd7260 is pointing into the stack for thread: 0x00007f889503b000 R8 =0x000000000000002f is an unknown value R9 =0x00000000ffffffe0 is an unknown value R10=0x000000010fa4c3db is at code_begin+859 in an Interpreter codelet method entry point (kind = native)  [0x000000010fa4c080, 0x000000010fa4ca00]  2432 bytes R11=0x000000010f57e907: throw_unsatisfied_link_error+0 in /usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/server/libjvm.dylib at 0x000000010f0b8000 R12=0x0000000000000000 is an unknown value R13={method} {0x0000000127807e68} 'putByte' '(Ljava/lang/Object;JB)V' in 'sun/misc/Unsafe' R14=0x000000000000002f is an unknown value R15=0x00007f889f000005 is an unknown value   Stack: [0x0000700006cd9000,0x0000700006dd9000],  sp=0x0000700006dd7260,  free space=1016k Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code) V  [libjvm.dylib+0x545faa] j  sun.misc.Unsafe.putByte(Ljava/lang/Object;JB)V+0 j  io.netty.util.internal.PlatformDependent0.putByte(Ljava/lang/Object;JB)V+6 j  io.netty.util.internal.PlatformDependent.putByte(Ljava/lang/Object;JB)V+3 j  io.netty.buffer.ByteBufUtil.unsafeWriteUtf8([BJILjava/lang/CharSequence;II)I+73 j  io.netty.buffer.ByteBufUtil.writeUtf8(Lio/netty/buffer/AbstractByteBuf;IILjava/lang/CharSequence;II)I+79 j  io.netty.buffer.ByteBufUtil.writeUtf8(Lio/netty/buffer/AbstractByteBuf;IILjava/lang/CharSequence;I)I+7 j  io.netty.buffer.AbstractByteBuf.setCharSequence0(ILjava/lang/CharSequence;Ljava/nio/charset/Charset;Z)I+55 j  io.netty.buffer.AbstractByteBuf.writeCharSequence(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I+8 j  io.netty.handler.codec.http.HttpRequestEncoder.encodeInitialLine(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpRequest;)V+144 j  io.netty.handler.codec.http.HttpRequestEncoder.encodeInitialLine(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpMessage;)V+6 j  io.netty.handler.codec.http.HttpObjectEncoder.encode(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V+88 j  io.netty.handler.codec.http.HttpClientCodec$Encoder.encode(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V+52 j  io.netty.handler.codec.MessageToMessageEncoder.write(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+25 j  io.netty.channel.CombinedChannelDuplexHandler.write(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+45 j  io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+10 j  io.netty.channel.AbstractChannelHandlerContext.invokeWrite(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+10 j  io.netty.channel.AbstractChannelHandlerContext.write(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V+101 j  io.netty.channel.AbstractChannelHandlerContext.write(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+4 j  io.netty.handler.stream.ChunkedWriteHandler.doFlush(Lio/netty/channel/ChannelHandlerContext;)V+369 j  io.netty.handler.stream.ChunkedWriteHandler.flush(Lio/netty/channel/ChannelHandlerContext;)V+2 j  io.netty.channel.AbstractChannelHandlerContext.invokeFlush0()V+8 j  io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+14 j  io.netty.channel.AbstractChannelHandlerContext.write(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V+90 j  io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+4 j  io.netty.channel.DefaultChannelPipeline.writeAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+6 j  io.netty.channel.AbstractChannel.writeAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+6 j  org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;)V+93 j  org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;)V+209 j  org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(Lio/netty/channel/Channel;)V+101 j  org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(Lio/netty/channel/Channel;Ljava/net/InetSocketAddress;)V+232 j  org.asynchttpclient.netty.channel.NettyChannelConnector$1.onSuccess(Lio/netty/channel/Channel;)V+51 j  org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(Lio/netty/channel/ChannelFuture;)V+18 j  org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(Lio/netty/util/concurrent/Future;)V+5 j  io.netty.util.concurrent.DefaultPromise.notifyListener0(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)V+2 j  io.netty.util.concurrent.DefaultPromise.notifyListeners0(Lio/netty/util/concurrent/DefaultFutureListeners;)V+24 j  io.netty.util.concurrent.DefaultPromise.notifyListenersNow()V+58 j  io.netty.util.concurrent.DefaultPromise.notifyListeners()V+38 j  io.netty.util.concurrent.DefaultPromise.setValue0(Ljava/lang/Object;)Z+34 j  io.netty.util.concurrent.DefaultPromise.setSuccess0(Ljava/lang/Object;)Z+12 j  io.netty.util.concurrent.DefaultPromise.trySuccess(Ljava/lang/Object;)Z+2 j  io.netty.channel.DefaultChannelPromise.trySuccess()Z+2 j  io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(Lio/netty/channel/ChannelPromise;Z)V+14 j  io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect()V+51 j  io.netty.channel.nio.NioEventLoop.processSelectedKey(Ljava/nio/channels/SelectionKey;Lio/netty/channel/nio/AbstractNioChannel;)V+78 j  io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized()V+51 j  io.netty.channel.nio.NioEventLoop.processSelectedKeys()V+8 j  io.netty.channel.nio.NioEventLoop.run()V+263 j  io.netty.util.concurrent.SingleThreadEventExecutor$4.run()V+44 j  io.netty.util.internal.ThreadExecutorMap$2.run()V+11 j  io.netty.util.concurrent.FastThreadLocalRunnable.run()V+4 j  java.lang.Thread.run()V+11 v  ~StubRoutines::call_stub V  [libjvm.dylib+0x2c5464] V  [libjvm.dylib+0x2c42f5] V  [libjvm.dylib+0x2c44e1] V  [libjvm.dylib+0x3336c6] V  [libjvm.dylib+0x52e6c6] V  [libjvm.dylib+0x52e58b] V  [libjvm.dylib+0x4668aa] C  [libsystem_pthread.dylib+0x64f4]  _pthread_start+0x7d C  [libsystem_pthread.dylib+0x200f]  thread_start+0xf C  0x0000000000000000  Java frames: (J=compiled Java code, j=interpreted, Vv=VM code) j  sun.misc.Unsafe.putByte(Ljava/lang/Object;JB)V+0 j  io.netty.util.internal.PlatformDependent0.putByte(Ljava/lang/Object;JB)V+6 j  io.netty.util.internal.PlatformDependent.putByte(Ljava/lang/Object;JB)V+3 j  io.netty.buffer.ByteBufUtil.unsafeWriteUtf8([BJILjava/lang/CharSequence;II)I+73 j  io.netty.buffer.ByteBufUtil.writeUtf8(Lio/netty/buffer/AbstractByteBuf;IILjava/lang/CharSequence;II)I+79 j  io.netty.buffer.ByteBufUtil.writeUtf8(Lio/netty/buffer/AbstractByteBuf;IILjava/lang/CharSequence;I)I+7 j  io.netty.buffer.AbstractByteBuf.setCharSequence0(ILjava/lang/CharSequence;Ljava/nio/charset/Charset;Z)I+55 j  io.netty.buffer.AbstractByteBuf.writeCharSequence(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I+8 j  io.netty.handler.codec.http.HttpRequestEncoder.encodeInitialLine(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpRequest;)V+144 j  io.netty.handler.codec.http.HttpRequestEncoder.encodeInitialLine(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpMessage;)V+6 j  io.netty.handler.codec.http.HttpObjectEncoder.encode(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V+88 j  io.netty.handler.codec.http.HttpClientCodec$Encoder.encode(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V+52 j  io.netty.handler.codec.MessageToMessageEncoder.write(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+25 j  io.netty.channel.CombinedChannelDuplexHandler.write(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+45 j  io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+10 j  io.netty.channel.AbstractChannelHandlerContext.invokeWrite(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+10 j  io.netty.channel.AbstractChannelHandlerContext.write(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V+101 j  io.netty.channel.AbstractChannelHandlerContext.write(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+4 j  io.netty.handler.stream.ChunkedWriteHandler.doFlush(Lio/netty/channel/ChannelHandlerContext;)V+369 j  io.netty.handler.stream.ChunkedWriteHandler.flush(Lio/netty/channel/ChannelHandlerContext;)V+2 j  io.netty.channel.AbstractChannelHandlerContext.invokeFlush0()V+8 j  io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V+14 j  io.netty.channel.AbstractChannelHandlerContext.write(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V+90 j  io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+4 j  io.netty.channel.DefaultChannelPipeline.writeAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+6 j  io.netty.channel.AbstractChannel.writeAndFlush(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;+6 j  org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(Lio/netty/channel/Channel;Lorg/asynchttpclient/netty/NettyResponseFuture;)V+93 j  org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(Lorg/asynchttpclient/netty/NettyResponseFuture;Lio/netty/channel/Channel;)V+209 j  org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(Lio/netty/channel/Channel;)V+101 j  org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(Lio/netty/channel/Channel;Ljava/net/InetSocketAddress;)V+232 j  org.asynchttpclient.netty.channel.NettyChannelConnector$1.onSuccess(Lio/netty/channel/Channel;)V+51 j  org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(Lio/netty/channel/ChannelFuture;)V+18 j  org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(Lio/netty/util/concurrent/Future;)V+5 j  io.netty.util.concurrent.DefaultPromise.notifyListener0(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/GenericFutureListener;)V+2 j  io.netty.util.concurrent.DefaultPromise.notifyListeners0(Lio/netty/util/concurrent/DefaultFutureListeners;)V+24 j  io.netty.util.concurrent.DefaultPromise.notifyListenersNow()V+58 j  io.netty.util.concurrent.DefaultPromise.notifyListeners()V+38 j  io.netty.util.concurrent.DefaultPromise.setValue0(Ljava/lang/Object;)Z+34 j  io.netty.util.concurrent.DefaultPromise.setSuccess0(Ljava/lang/Object;)Z+12 j  io.netty.util.concurrent.DefaultPromise.trySuccess(Ljava/lang/Object;)Z+2 j  io.netty.channel.DefaultChannelPromise.trySuccess()Z+2 j  io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(Lio/netty/channel/ChannelPromise;Z)V+14 j  io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect()V+51 j  io.netty.channel.nio.NioEventLoop.processSelectedKey(Ljava/nio/channels/SelectionKey;Lio/netty/channel/nio/AbstractNioChannel;)V+78 j  io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized()V+51 j  io.netty.channel.nio.NioEventLoop.processSelectedKeys()V+8 j  io.netty.channel.nio.NioEventLoop.run()V+263 j  io.netty.util.concurrent.SingleThreadEventExecutor$4.run()V+44 j  io.netty.util.internal.ThreadExecutorMap$2.run()V+11 j  io.netty.util.concurrent.FastThreadLocalRunnable.run()V+4 j  java.lang.Thread.run()V+11 v  ~StubRoutines::call_stub  ---------------  P R O C E S S  ---------------  Java Threads: ( => current thread ) =>0x00007f889503b000 JavaThread ""AsyncHttpClient-4-2"" daemon [_thread_in_vm, id=29187, stack(0x0000700006cd9000,0x0000700006dd9000)]   0x00007f889a00a800 JavaThread ""AsyncHttpClient-4-1"" daemon [_thread_blocked, id=33795, stack(0x0000700006bd6000,0x0000700006cd6000)]   0x00007f8894810800 JavaThread ""Keep-Alive-Timer"" daemon [_thread_blocked, id=34307, stack(0x0000700006ad3000,0x0000700006bd3000)]   0x00007f88940c5800 JavaThread ""Exec Stream Pumper"" daemon [_thread_in_native, id=34819, stack(0x00007000069d0000,0x0000700006ad0000)]   0x00007f8895047800 JavaThread ""Exec Stream Pumper"" daemon [_thread_in_native, id=28931, stack(0x00007000068cd000,0x00007000069cd000)]   0x00007f8894105800 JavaThread ""process reaper"" daemon [_thread_in_native, id=35331, stack(0x00007000045e4000,0x000070000460c000)]   0x00007f8892858800 JavaThread ""UrlChecker-2"" daemon [_thread_blocked, id=35843, stack(0x00007000067ca000,0x00007000068ca000)]   0x00007f8895046800 JavaThread ""Driver Service Executor"" daemon [_thread_blocked, id=36099, stack(0x00007000066c7000,0x00007000067c7000)]   0x00007f8893862000 JavaThread ""Driver Service Executor"" daemon [_thread_blocked, id=36355, stack(0x00007000065c4000,0x00007000066c4000)]   0x00007f88938d5000 JavaThread ""Exec Default Executor"" daemon [_thread_blocked, id=27907, stack(0x00007000064c1000,0x00007000065c1000)]   0x00007f8893861800 JavaThread ""Local Distributor session creation"" daemon [_thread_blocked, id=27651, stack(0x00007000063be000,0x00007000064be000)]   0x00007f88939ad800 JavaThread ""nioEventLoopGroup-3-3"" [_thread_in_native, id=24071, stack(0x0000700005491000,0x0000700005591000)]   0x00007f889800e000 JavaThread ""pool-1-thread-1"" [_thread_blocked, id=27139, stack(0x00007000062bb000,0x00007000063bb000)]   0x00007f889511b800 JavaThread ""pool-2-thread-1"" [_thread_blocked, id=37379, stack(0x00007000061b8000,0x00007000062b8000)]   0x00007f8894264000 JavaThread ""pool-2-thread-2"" [_thread_blocked, id=37635, stack(0x00007000060b5000,0x00007000061b5000)]   0x00007f88939a7800 JavaThread ""nioEventLoopGroup-3-2"" [_thread_in_native, id=38147, stack(0x0000700005fb2000,0x00007000060b2000)]   0x00007f8894859800 JavaThread ""nioEventLoopGroup-3-1"" [_thread_in_native, id=14859, stack(0x0000700005eaf000,0x0000700005faf000)]   0x00007f8894857800 JavaThread ""DestroyJavaVM"" [_thread_blocked, id=10499, stack(0x0000700003737000,0x0000700003837000)]   0x00007f8898043800 JavaThread ""nioEventLoopGroup-2-1"" [_thread_in_native, id=26371, stack(0x0000700005dac000,0x0000700005eac000)]   0x00007f88950dc000 JavaThread ""distributor host checker"" daemon [_thread_blocked, id=38659, stack(0x0000700005ca9000,0x0000700005da9000)]   0x00007f8898030800 JavaThread ""Heartbeat Node: http://localhost:4445"" daemon [_thread_blocked, id=39171, stack(0x0000700005ba6000,0x0000700005ca6000)]   0x00007f88950e1000 JavaThread ""TempFile Cleanup Node: http://localhost:4445"" daemon [_thread_blocked, id=25859, stack(0x0000700005aa3000,0x0000700005ba3000)]   0x00007f88950e0000 JavaThread ""Session Cleanup Node: http://localhost:4445"" daemon [_thread_blocked, id=39683, stack(0x00007000059a0000,0x0000700005aa0000)]   0x00007f88948b1000 JavaThread ""Clean up http clients cache"" daemon [_thread_blocked, id=25347, stack(0x000070000589d000,0x000070000599d000)]   0x00007f88950c1800 JavaThread ""Local Distributor new session queue"" daemon [_thread_blocked, id=24835, stack(0x000070000579a000,0x000070000589a000)]   0x00007f88950c0800 JavaThread ""Purge deadNodes"" daemon [_thread_blocked, id=40451, stack(0x0000700005697000,0x0000700005797000)]   0x00007f8894133000 JavaThread ""Local New Session Queue"" daemon [_thread_blocked, id=40707, stack(0x0000700005594000,0x0000700005694000)]   0x00007f8894886800 JavaThread ""ForkJoinPool.commonPool-worker-15"" daemon [_thread_blocked, id=23555, stack(0x000070000538e000,0x000070000548e000)]   0x00007f8898016800 JavaThread ""ForkJoinPool.commonPool-worker-6"" daemon [_thread_blocked, id=41219, stack(0x000070000528b000,0x000070000538b000)]   0x00007f8894886000 JavaThread ""ForkJoinPool.commonPool-worker-13"" daemon [_thread_blocked, id=23299, stack(0x0000700005188000,0x0000700005288000)]   0x00007f88940eb000 JavaThread ""ForkJoinPool.commonPool-worker-4"" daemon [_thread_blocked, id=22787, stack(0x0000700005085000,0x0000700005185000)]   0x00007f8894885000 JavaThread ""ForkJoinPool.commonPool-worker-11"" daemon [_thread_blocked, id=41987, stack(0x0000700004f82000,0x0000700005082000)]   0x00007f88940ea000 JavaThread ""ForkJoinPool.commonPool-worker-2"" daemon [_thread_blocked, id=22531, stack(0x0000700004e7f000,0x0000700004f7f000)]   0x00007f88940b1800 JavaThread ""ForkJoinPool.commonPool-worker-9"" daemon [_thread_blocked, id=42755, stack(0x0000700004d7c000,0x0000700004e7c000)]   0x00007f8895008800 JavaThread ""Service Thread"" daemon [_thread_blocked, id=22019, stack(0x0000700004b76000,0x0000700004c76000)]   0x00007f8893811000 JavaThread ""C1 CompilerThread3"" daemon [_thread_blocked, id=16387, stack(0x0000700004a73000,0x0000700004b73000)]   0x00007f8899008800 JavaThread ""C2 CompilerThread2"" daemon [_thread_blocked, id=16899, stack(0x0000700004970000,0x0000700004a70000)]   0x00007f8894815800 JavaThread ""C2 CompilerThread1"" daemon [_thread_blocked, id=17155, stack(0x000070000486d000,0x000070000496d000)]   0x00007f889480e800 JavaThread ""C2 CompilerThread0"" daemon [_thread_blocked, id=15875, stack(0x000070000476a000,0x000070000486a000)]   0x00007f8894059000 JavaThread ""Signal Dispatcher"" daemon [_thread_blocked, id=17923, stack(0x0000700004667000,0x0000700004767000)]   0x00007f889403e800 JavaThread ""Finalizer"" daemon [_thread_blocked, id=18691, stack(0x000070000445e000,0x000070000455e000)]   0x00007f889480d000 JavaThread ""Reference Handler"" daemon [_thread_blocked, id=19203, stack(0x000070000435b000,0x000070000445b000)]  Other Threads:   0x00007f8894032000 VMThread [stack: 0x0000700004258000,0x0000700004358000] [id=13059]   0x00007f889504a800 WatcherThread [stack: 0x0000700004c79000,0x0000700004d79000] [id=43267]  VM state:not at safepoint (normal execution)  VM Mutex/Monitor currently owned by a thread: None  heap address: 0x00000006c0000000, size: 4096 MB, Compressed Oops mode: Zero based, Oop shift amount: 3 Narrow klass base: 0x0000000000000000, Narrow klass shift: 3 Compressed class space size: 1073741824 Address: 0x00000007c0000000  Heap:  PSYoungGen      total 76288K, used 49982K [0x000000076ab00000, 0x0000000774000000, 0x00000007c0000000)   eden space 65536K, 76% used [0x000000076ab00000,0x000000076dbcf9a0,0x000000076eb00000)   from space 10752K, 0% used [0x000000076f580000,0x000000076f580000,0x0000000770000000)   to   space 10752K, 0% used [0x000000076eb00000,0x000000076eb00000,0x000000076f580000)  ParOldGen       total 92160K, used 4984K [0x00000006c0000000, 0x00000006c5a00000, 0x000000076ab00000)   object space 92160K, 5% used [0x00000006c0000000,0x00000006c04de340,0x00000006c5a00000)  Metaspace       used 29660K, capacity 32646K, committed 32896K, reserved 1077248K   class space    used 4087K, capacity 4667K, committed 4736K, reserved 1048576K  Card table byte_map: [0x000000010e554000,0x000000010ed55000] byte_map_base: 0x000000010af54000  Marking Bits: (ParMarkBitMap*) 0x000000010f7939f8  Begin Bits: [0x000000011ef8a000, 0x0000000122f8a000)  End Bits:   [0x0000000122f8a000, 0x0000000126f8a000)  Polling page: 0x000000010e0d0000  CodeCache: size=245760Kb used=6734Kb max_used=6749Kb free=239025Kb  bounds [0x000000010fa34000, 0x00000001100d4000, 0x000000011ea34000]  total_blobs=2718 nmethods=2213 adapters=418  compilation: enabled  Compilation events (10 events): Event: 15.912 Thread 0x00007f8893811000 nmethod 2387 0x00000001100ad910 code [0x00000001100ada60, 0x00000001100adb50] Event: 15.913 Thread 0x00007f8899008800 2388       4       java.util.zip.ZipFile::ensureOpen (37 bytes) Event: 15.914 Thread 0x00007f8899008800 nmethod 2388 0x00000001100c2b90 code [0x00000001100c2ce0, 0x00000001100c2d98] Event: 15.915 Thread 0x00007f889480e800 2389   !   4       java.util.concurrent.ConcurrentHashMap::putVal (362 bytes) Event: 15.916 Thread 0x00007f8893811000 2390       3       io.netty.util.internal.MathUtil::safeFindNextPositivePowerOfTwo (24 bytes) Event: 15.916 Thread 0x00007f8899008800 2393       4       java.lang.Integer::numberOfLeadingZeros (76 bytes) Event: 15.916 Thread 0x00007f8893811000 nmethod 2390 0x00000001100c5b10 code [0x00000001100c5c80, 0x00000001100c5e88] Event: 15.916 Thread 0x00007f8893811000 2394       3       io.netty.util.internal.shaded.org.jctools.util.UnsafeRefArrayAccess::allocateRefArray (8 bytes) Event: 15.916 Thread 0x00007f8893811000 nmethod 2394 0x00000001100cb810 code [0x00000001100cb980, 0x00000001100cbb30] Event: 15.916 Thread 0x00007f8893811000 2391       3       io.netty.buffer.PoolThreadCache$MemoryRegionCache:: (29 bytes)  GC Heap History (6 events): Event: 1.064 GC heap before {Heap before GC invocations=1 (full 0):  PSYoungGen      total 76288K, used 65536K [0x000000076ab00000, 0x0000000770000000, 0x00000007c0000000)   eden space 65536K, 100% used [0x000000076ab00000,0x000000076eb00000,0x000000076eb00000)   from space 10752K, 0% used [0x000000076f580000,0x000000076f580000,0x0000000770000000)   to   space 10752K, 0% used [0x000000076eb00000,0x000000076eb00000,0x000000076f580000)  ParOldGen       total 175104K, used 0K [0x00000006c0000000, 0x00000006cab00000, 0x000000076ab00000)   object space 175104K, 0% used [0x00000006c0000000,0x00000006c0000000,0x00000006cab00000)  Metaspace       used 18009K, capacity 19934K, committed 19968K, reserved 1067008K   class space    used 2450K, capacity 2805K, committed 2816K, reserved 1048576K Event: 1.072 GC heap after Heap after GC invocations=1 (full 0):  PSYoungGen      total 76288K, used 10745K [0x000000076ab00000, 0x0000000770000000, 0x00000007c0000000)   eden space 65536K, 0% used [0x000000076ab00000,0x000000076ab00000,0x000000076eb00000)   from space 10752K, 99% used [0x000000076eb00000,0x000000076f57e408,0x000000076f580000)   to   space 10752K, 0% used [0x000000076f580000,0x000000076f580000,0x0000000770000000)  ParOldGen       total 175104K, used 713K [0x00000006c0000000, 0x00000006cab00000, 0x000000076ab00000)   object space 175104K, 0% used [0x00000006c0000000,0x00000006c00b24c8,0x00000006cab00000)  Metaspace       used 18009K, capacity 19934K, committed 19968K, reserved 1067008K   class space    used 2450K, capacity 2805K, committed 2816K, reserved 1048576K } Event: 1.133 GC heap before {Heap before GC invocations=2 (full 0):  PSYoungGen      total 76288K, used 18017K [0x000000076ab00000, 0x0000000770000000, 0x00000007c0000000)   eden space 65536K, 11% used [0x000000076ab00000,0x000000076b21a3c0,0x000000076eb00000)   from space 10752K, 99% used [0x000000076eb00000,0x000000076f57e408,0x000000076f580000)   to   space 10752K, 0% used [0x000000076f580000,0x000000076f580000,0x0000000770000000)  ParOldGen       total 175104K, used 713K [0x00000006c0000000, 0x00000006cab00000, 0x000000076ab00000)   object space 175104K, 0% used [0x00000006c0000000,0x00000006c00b24c8,0x00000006cab00000)  Metaspace       used 19215K, capacity 21160K, committed 21248K, reserved 1067008K   class space    used 2609K, capacity 3014K, committed 3072K, reserved 1048576K Event: 1.137 GC heap after Heap after GC invocations=2 (full 0):  PSYoungGen      total 76288K, used 5198K [0x000000076ab00000, 0x0000000774000000, 0x00000007c0000000)   eden space 65536K, 0% used [0x000000076ab00000,0x000000076ab00000,0x000000076eb00000)   from space 10752K, 48% used [0x000000076f580000,0x000000076fa93950,0x0000000770000000)   to   space 10752K, 0% used [0x000000076eb00000,0x000000076eb00000,0x000000076f580000)  ParOldGen       total 175104K, used 721K [0x00000006c0000000, 0x00000006cab00000, 0x000000076ab00000)   object space 175104K, 0% used [0x00000006c0000000,0x00000006c00b44c8,0x00000006cab00000)  Metaspace       used 19215K, capacity 21160K, committed 21248K, reserved 1067008K   class space    used 2609K, capacity 3014K, committed 3072K, reserved 1048576K } Event: 1.137 GC heap before {Heap before GC invocations=3 (full 1):  PSYoungGen      total 76288K, used 5198K [0x000000076ab00000, 0x0000000774000000, 0x00000007c0000000)   eden space 65536K, 0% used [0x000000076ab00000,0x000000076ab00000,0x000000076eb00000)   from space 10752K, 48% used [0x000000076f580000,0x000000076fa93950,0x0000000770000000)   to   space 10752K, 0% used [0x000000076eb00000,0x000000076eb00000,0x000000076f580000)  ParOldGen       total 175104K, used 721K [0x00000006c0000000, 0x00000006cab00000, 0x000000076ab00000)   object space 175104K, 0% used [0x00000006c0000000,0x00000006c00b44c8,0x00000006cab00000)  Metaspace       used 19215K, capacity 21160K, committed 21248K, reserved 1067008K   class space    used 2609K, capacity 3014K, committed 3072K, reserved 1048576K Event: 1.155 GC heap after Heap after GC invocations=3 (full 1):  PSYoungGen      total 76288K, used 0K [0x000000076ab00000, 0x0000000774000000, 0x00000007c0000000)   eden space 65536K, 0% used [0x000000076ab00000,0x000000076ab00000,0x000000076eb00000)   from space 10752K, 0% used [0x000000076f580000,0x000000076f580000,0x0000000770000000)   to   space 10752K, 0% used [0x000000076eb00000,0x000000076eb00000,0x000000076f580000)  ParOldGen       total 92160K, used 4984K [0x00000006c0000000, 0x00000006c5a00000, 0x000000076ab00000)   object space 92160K, 5% used [0x00000006c0000000,0x00000006c04de340,0x00000006c5a00000)  Metaspace       used 19215K, capacity 21160K, committed 21248K, reserved 1067008K   class space    used 2609K, capacity 3014K, committed 3072K, reserved 1048576K }  Deoptimization events (10 events): Event: 11.721 Thread 0x00007f8894264000 Uncommon trap: reason=class_check action=maybe_recompile pc=0x000000010ff7ff24 method=org.openqa.selenium.json.Input.fill()Z @ 85 Event: 11.721 Thread 0x00007f8894264000 Uncommon trap: reason=class_check action=maybe_recompile pc=0x000000010ff7ff24 method=org.openqa.selenium.json.Input.fill()Z @ 85 Event: 11.721 Thread 0x00007f8894264000 Uncommon trap: reason=class_check action=maybe_recompile pc=0x000000010ff7ff24 method=org.openqa.selenium.json.Input.fill()Z @ 85 Event: 11.721 Thread 0x00007f8894264000 Uncommon trap: reason=class_check action=maybe_recompile pc=0x000000010ff7ff24 method=org.openqa.selenium.json.Input.fill()Z @ 85 Event: 15.657 Thread 0x00007f8892858800 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000000010fd6d3e4 method=sun.misc.MetaIndex.mayContain(Ljava/lang/String;)Z @ 38 Event: 15.665 Thread 0x00007f8892858800 Uncommon trap: reason=predicate action=maybe_recompile pc=0x000000010fdc2684 method=sun.net.www.ParseUtil.encodePath(Ljava/lang/String;Z)Ljava/lang/String; @ 36 Event: 15.736 Thread 0x00007f8893861800 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000000010ffb1390 method=java.util.jar.JarFile.maybeInstantiateVerifier()V @ 12 Event: 15.753 Thread 0x00007f8893861800 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000000010fffe378 method=java.util.HashMap.putVal(ILjava/lang/Object;Ljava/lang/Object;ZZ)Ljava/lang/Object; @ 236 Event: 15.882 Thread 0x00007f8893861800 Uncommon trap: reason=unstable_if action=reinterpret pc=0x00000001100abbc0 method=java.io.ByteArrayInputStream.read([BII)I @ 63 Event: 15.890 Thread 0x00007f8893861800 Uncommon trap: reason=unstable_if action=reinterpret pc=0x000000010fc8f364 method=java.util.regex.Pattern$BmpCharProperty.match(Ljava/util/regex/Matcher;ILjava/lang/CharSequence;)Z @ 34  Classes redefined (0 events): No events  Internal exceptions (10 events): Event: 7.490 Thread 0x00007f8894264000 Implicit null exception at 0x000000010fc4b836 to 0x000000010fc4bbf5 Event: 7.490 Thread 0x00007f889511b800 Implicit null exception at 0x000000010fc4b836 to 0x000000010fc4bbf5 Event: 11.718 Thread 0x00007f8894264000 Exception  (0x000000076c95d610) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u302-ga/hotspot/src/share/vm/interpreter/linkResolver.cpp, l Event: 11.719 Thread 0x00007f8894264000 Exception  (0x000000076c964390) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u302-ga/hotspot/src/share/vm/interpreter/linkRes Event: 11.724 Thread 0x00007f8894264000 Exception  (0x000000076c9dcd90) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u302-ga/hotspot/src/share/vm/interpreter/linkResolver.cpp, line 620] Event: 15.634 Thread 0x00007f8893861800 Exception  (0x000000076cb1f3f8) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u302- Event: 15.634 Thread 0x00007f8893861800 Exception  (0x000000076cb26548) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u Event: 15.635 Thread 0x00007f8893861800 Exception  (0x000000076cb2e750) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u302-ga/hotspot/sr Event: 15.666 Thread 0x00007f8892858800 Exception  (0x000000076cc888f8) thrown at [/private/tmp/openjdkA8-20210721-70182-1pmfmjl/jdk8u302-ga/hotspot/src/share/vm/prims/jni.cpp, line 711] Event: 15.696 Thread 0x00007f8893861800 Exception  (0x000000076cd777c8) thrown at [/private/tmp/openjdkA  Events (10 events): Event: 15.914 loading class io/netty/channel/ChannelProgressiveFutureListener Event: 15.914 loading class io/netty/channel/ChannelProgressiveFutureListener done Event: 15.914 loading class org/asynchttpclient/netty/request/WriteListener Event: 15.914 loading class org/asynchttpclient/netty/request/WriteListener done Event: 15.915 loading class io/netty/handler/stream/ChunkedStream Event: 15.915 loading class io/netty/handler/stream/ChunkedStream done Event: 15.915 loading class java/io/PushbackInputStream Event: 15.915 loading class java/io/PushbackInputStream done Event: 15.916 loading class org/asynchttpclient/netty/request/body/NettyInputStreamBody$1 Event: 15.916 loading class org/asynchttpclient/netty/request/body/NettyInputStreamBody$1 done   Dynamic libraries: 0x00007ff82fedd000 	/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa 0x00007ff81bd62000 	/System/Library/Frameworks/AppKit.framework/Versions/C/AppKit 0x00007ff81f258000 	/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData 0x00007ff81a179000 	/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation 0x00007ff824018000 	/usr/lib/libSystem.B.dylib 0x00007ff81cbf1000 	/System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation 0x00007ff829e8e000 	/System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices 0x00007ff82227e000 	/System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap 0x00007ff825e28000 	/System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport 0x00007ff825eb2000 	/System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity 0x00007ff825208000 	/usr/lib/libspindump.dylib 0x00007ff81ce7f000 	/System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers 0x00007ff8209bb000 	/usr/lib/libapp_launch_measurement.dylib 0x00007ff81fc24000 	/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics 0x00007ff8209be000 	/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout 0x00007ff821bde000 	/System/Library/Frameworks/Metal.framework/Versions/A/Metal 0x00007ff8228f4000 	/usr/lib/liblangid.dylib 0x00007ff822282000 	/System/Library/PrivateFrameworks/CoreSVG.framework/Versions/A/CoreSVG 0x00007ff81e246000 	/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight 0x00007ff81e5d9000 	/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics 0x00007ff82a4fd000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate 0x00007ff824c83000 	/System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices 0x00007ff821bc3000 	/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface 0x00007ff81fc52000 	/usr/lib/libDiagnosticMessagesClient.dylib 0x00007ff823f38000 	/usr/lib/libz.1.dylib 0x00007ff82db6c000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices 0x00007ff82226a000 	/System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation 0x00007ff81b653000 	/usr/lib/libicucore.A.dylib 0x00007ff826b4d000 	/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox 0x00007ff825e34000 	/System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore 0x00007ff921793000 	/System/Library/PrivateFrameworks/TextInput.framework/Versions/A/TextInput 0x00007ff81e1ca000 	/usr/lib/libMobileGestalt.dylib 0x00007ff821f72000 	/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox 0x00007ff8203e8000 	/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore 0x00007ff81b2f3000 	/System/Library/Frameworks/Security.framework/Versions/A/Security 0x00007ff829ec6000 	/System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition 0x00007ff82071b000 	/System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI 0x00007ff81abcb000 	/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio 0x00007ff81fd40000 	/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration 0x00007ff8255ef000 	/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport 0x00007ff81e1c9000 	/usr/lib/libenergytrace.dylib 0x00007ff81bc4e000 	/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit 0x00007ff82a2b2000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices 0x00007ff820955000 	/System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis 0x00007ffa30f5e000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL 0x00007ff823569000 	/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag 0x00007ff81913a000 	/usr/lib/libobjc.A.dylib 0x00007ff81eca5000 	/System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync 0x00007ff8192f3000 	/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation 0x00007ff8224fb000 	/System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage 0x00007ff81a9e1000 	/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText 0x00007ff8222b1000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO 0x00007ff82401e000 	/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking 0x00007ff820a06000 	/usr/lib/libxml2.2.dylib 0x00007ff819200000 	/usr/lib/libc++.1.dylib 0x00007ff8242a2000 	/usr/lib/libcompression.dylib 0x00007ff825d5e000 	/System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO 0x00007ff824995000 	/usr/lib/libate.dylib 0x00007ff824013000 	/usr/lib/system/libcache.dylib 0x00007ff823fcf000 	/usr/lib/system/libcommonCrypto.dylib 0x00007ff823ff8000 	/usr/lib/system/libcompiler_rt.dylib 0x00007ff823fee000 	/usr/lib/system/libcopyfile.dylib 0x00007ff819034000 	/usr/lib/system/libcorecrypto.dylib 0x00007ff8190f3000 	/usr/lib/system/libdispatch.dylib 0x00007ff8192b2000 	/usr/lib/system/libdyld.dylib 0x00007ff82400a000 	/usr/lib/system/libkeymgr.dylib 0x00007ff823fad000 	/usr/lib/system/libmacho.dylib 0x00007ff82363d000 	/usr/lib/system/libquarantine.dylib 0x00007ff824008000 	/usr/lib/system/libremovefile.dylib 0x00007ff81e216000 	/usr/lib/system/libsystem_asl.dylib 0x00007ff818fe2000 	/usr/lib/system/libsystem_blocks.dylib 0x00007ff819177000 	/usr/lib/system/libsystem_c.dylib 0x00007ff824000000 	/usr/lib/system/libsystem_collections.dylib 0x00007ff8228e5000 	/usr/lib/system/libsystem_configuration.dylib 0x00007ff821ba6000 	/usr/lib/system/libsystem_containermanager.dylib 0x00007ff823cea000 	/usr/lib/system/libsystem_coreservices.dylib 0x00007ff81b8dc000 	/usr/lib/system/libsystem_darwin.dylib 0x00007ff82400b000 	/usr/lib/system/libsystem_dnssd.dylib 0x00007ff819174000 	/usr/lib/system/libsystem_featureflags.dylib 0x00007ff8192c8000 	/usr/lib/system/libsystem_info.dylib 0x00007ff823f4b000 	/usr/lib/system/libsystem_m.dylib 0x00007ff8190c7000 	/usr/lib/system/libsystem_malloc.dylib 0x00007ff81e1b3000 	/usr/lib/system/libsystem_networkextension.dylib 0x00007ff81bd04000 	/usr/lib/system/libsystem_notify.dylib 0x00007ff82a187000 	/usr/lib/system/libsystem_product_info_filter.dylib 0x00007ff8228e9000 	/usr/lib/system/libsystem_sandbox.dylib 0x00007ff824005000 	/usr/lib/system/libsystem_secinit.dylib 0x00007ff81926f000 	/usr/lib/system/libsystem_kernel.dylib 0x00007ff8192be000 	/usr/lib/system/libsystem_platform.dylib 0x00007ff8192a6000 	/usr/lib/system/libsystem_pthread.dylib 0x00007ff81fa6b000 	/usr/lib/system/libsystem_symptoms.dylib 0x00007ff81901b000 	/usr/lib/system/libsystem_trace.dylib 0x00007ff823fdb000 	/usr/lib/system/libunwind.dylib 0x00007ff818fe4000 	/usr/lib/system/libxpc.dylib 0x00007ff819259000 	/usr/lib/libc++abi.dylib 0x00007ff823fe6000 	/usr/lib/liboah.dylib 0x00007ff824773000 	/usr/lib/liblzma.5.dylib 0x00007ff819e8a000 	/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration 0x00007ff82401a000 	/usr/lib/libfakelink.dylib 0x00007ff81dd1c000 	/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork 0x00007ff824159000 	/usr/lib/libarchive.2.dylib 0x00007ff8228f0000 	/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo 0x00007ff823664000 	/usr/lib/libbsm.0.dylib 0x00007ff81d352000 	/usr/lib/libnetwork.dylib 0x00007ff823fb3000 	/usr/lib/system/libkxld.dylib 0x00007ff823292000 	/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer 0x00007ffb2ed0c000 	/usr/lib/libCoreEntitlements.dylib 0x00007ff823ccc000 	/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression 0x00007ff82364c000 	/usr/lib/libcoretls.dylib 0x00007ff82478d000 	/usr/lib/libcoretls_cfhelpers.dylib 0x00007ff82429d000 	/usr/lib/libpam.2.dylib 0x00007ff81f68d000 	/usr/lib/libsqlite3.dylib 0x00007ff8247fc000 	/usr/lib/libxar.1.dylib 0x00007ff823cdc000 	/usr/lib/libbz2.1.0.dylib 0x00007ff82401f000 	/usr/lib/libpcap.A.dylib 0x00007ff81fa62000 	/usr/lib/libdns_services.dylib 0x00007ff82426c000 	/usr/lib/libapple_nghttp2.dylib 0x00007ff824056000 	/usr/lib/libiconv.2.dylib 0x00007ff823fac000 	/usr/lib/libcharset.1.dylib 0x00007ff820989000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents 0x00007ff81b8e6000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore 0x00007ff81fca5000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata 0x00007ff823cef000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices 0x00007ff8241e0000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit 0x00007ff81f9f4000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE 0x00007ff8197f6000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices 0x00007ff824724000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices 0x00007ff820996000 	/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList 0x00007ff823640000 	/usr/lib/libCheckFix.dylib 0x00007ff81e22d000 	/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC 0x00007ff8228f6000 	/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP 0x00007ff81fc55000 	/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities 0x00007ff819f3a000 	/usr/lib/libmecabra.dylib 0x00007ff823674000 	/usr/lib/libmecab.dylib 0x00007ff819f05000 	/usr/lib/libCRFSuite.dylib 0x00007ff8236d1000 	/usr/lib/libgermantok.dylib 0x00007ff824247000 	/usr/lib/libThaiTokenizer.dylib 0x00007ff81fd47000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage 0x00007ff82a289000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib 0x00007ff82483d000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib 0x00007ff8230b0000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib 0x00007ff819b6e000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib 0x00007ff82437e000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib 0x00007ff8236d4000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib 0x00007ff824285000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib 0x00007ff824378000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib 0x00007ff8229e0000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib 0x00007ff819e1b000 	/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib 0x00007ff8229d9000 	/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData 0x00007ff819dd0000 	/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon 0x00007ff824836000 	/usr/lib/libChineseTokenizer.dylib 0x00007ff81a534000 	/System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling 0x00007ff824249000 	/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce 0x00007ff823280000 	/System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji 0x00007ff824148000 	/usr/lib/libcmph.dylib 0x00007ff82096d000 	/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory 0x00007ff820961000 	/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory 0x00007ff82478f000 	/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS 0x00007ff8235a1000 	/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation 0x00007ff82480a000 	/usr/lib/libutil.dylib 0x00007ff81bc11000 	/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore 0x00007ff82480e000 	/usr/lib/libxslt.1.dylib 0x00007ff82362e000 	/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement 0x00007ff825c7e000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib 0x00007ff825c87000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib 0x00007ff825bd7000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib 0x00007ff825bf8000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib 0x00007ff825ce7000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib 0x00007ff825508000 	/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib 0x00007ff824c4a000 	/usr/lib/libexpat.1.dylib 0x00007ff8254bd000 	/System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG 0x00007ff821e39000 	/System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib 0x00007ff81f99e000 	/System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices 0x00007ff830457000 	/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework/Versions/A/IOSurfaceAccelerator 0x00007ff8255eb000 	/System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient 0x00007ff81a623000 	/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay 0x00007ff821d38000 	/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia 0x00007ff821bd5000 	/System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator 0x00007ff820ae9000 	/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo 0x00007ff82429b000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders 0x00007ff825626000 	/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox 0x00007ff81f8e6000 	/System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard 0x00007ff81f673000 	/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer 0x00007ff825c77000 	/System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler 0x00007ff825c5a000 	/System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment 0x00007ff825c81000 	/System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay 0x00007ffa30f52000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib 0x00007ffb1cff6000 	/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/31001/Libraries/libGPUCompilerUtils.dylib 0x00007ff825cec000 	/System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore 0x00007ff8251f6000 	/System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport 0x00007ff8273d3000 	/System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata 0x00007ff81a74f000 	/System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore 0x00007ff821d15000 	/System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk 0x00007ff826cf7000 	/usr/lib/libAudioStatistics.dylib 0x00007ff91e024000 	/System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy 0x00007ff826f4c000 	/usr/lib/libSMC.dylib 0x00007ff82fd90000 	/System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI 0x00007ff825ba7000 	/usr/lib/libAudioToolboxUtility.dylib 0x00007ff91a436000 	/System/Library/PrivateFrameworks/OSAServicesClient.framework/Versions/A/OSAServicesClient 0x00007ff8273e0000 	/usr/lib/libperfcheck.dylib 0x00007ff91eab6000 	/usr/lib/libmis.dylib 0x00007ffa30fae000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib 0x00007ffa30f71000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib 0x00007ffa3117f000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib 0x00007ffa30f7a000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib 0x00007ffa30f6e000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib 0x00007ffa30f59000 	/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib 0x00007ff822874000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore 0x00007ff823c37000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage 0x00007ff8236ea000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork 0x00007ff823b5f000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix 0x00007ff82391b000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector 0x00007ff823b98000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray 0x00007ffa35b70000 	/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework/Versions/A/MPSFunctions 0x00007ff819a51000 	/System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools 0x00007ff8228ee000 	/System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary 0x00007ff824a2c000 	/usr/lib/libIOReport.dylib 0x00007ffa3258e000 	/System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL 0x00007ff824d90000 	/System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore 0x00007ff824d81000 	/System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer 0x00007ffb1cf01000 	/System/Library/PrivateFrameworks/FontServices.framework/Versions/A/FontServices 0x00007ff8251ad000 	/System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG 0x00007ff8206d1000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib 0x00007ff8251fe000 	/System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib 0x00007ffb1cf02000 	/System/Library/PrivateFrameworks/FontServices.framework/libXTFontStaticRegistryData.dylib 0x00007ff824bfa000 	/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA 0x00007ff826d1b000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS 0x00007ff81eda1000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices 0x00007ff825cf6000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore 0x00007ff82709f000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD 0x00007ff827097000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy 0x00007ff826d0b000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis 0x00007ff825cb7000 	/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework/Versions/A/ATSUI 0x00007ff82702c000 	/usr/lib/libcups.2.dylib 0x00007ff8273ef000 	/System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos 0x00007ff8273fe000 	/System/Library/Frameworks/GSS.framework/Versions/A/GSS 0x00007ff826d87000 	/usr/lib/libresolv.9.dylib 0x00007ff82520d000 	/System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal 0x00007ff82dee7000 	/System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib 0x00007ff81fa73000 	/System/Library/Frameworks/Network.framework/Versions/A/Network 0x00007ff824c64000 	/usr/lib/libheimdal-asn1.dylib 0x00007ff82744a000 	/System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth 0x00007ff826c88000 	/System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession 0x00007ff824cf4000 	/System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience 0x00007ff826b1c000 	/System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib 0x00007ff8270ab000 	/System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration 0x00007ff82b09c000 	/System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog 0x00007ff824c6d000 	/System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation 0x00007ff829eb6000 	/System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore 0x000000010f0b8000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/server/libjvm.dylib 0x000000010e0e2000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libverify.dylib 0x000000010e124000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libjava.dylib 0x000000010e104000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libzip.dylib 0x000000010ef98000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libnio.dylib 0x000000010efca000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libnet.dylib 0x000000010efb0000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libmanagement.dylib 0x000000012afda000 	/usr/local/Cellar/openjdk@8/1.8.0+302/libexec/openjdk.jdk/Contents/Home/jre/lib/libsunec.dylib  VM Arguments: java_command: selenium-server-4.1.1.jar standalone --config conf.toml java_class_path (initial): selenium-server-4.1.1.jar Launcher Type: SUN_STANDARD  Environment Variables: JAVA_HOME=/usr/local/opt/openjdk@8 PATH=/Users/anze/selenium_test/venv/bin:/Users/anze/.pyenv/shims:/usr/local/opt/ruby/bin:/Users/anze/coding/banks:/usr/local/opt/node@10/bin:/usr/local/opt/python@3.8/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/MacGPG2/bin:/Library/Frameworks/Python.framework/Versions/3.8/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/usr/local/MacGPG2/bin:/usr/local/munki:/opt/X11/bin:/Library/Apple/usr/bin:/Users/anze/android-sdk/platform-tool SHELL=/bin/zsh DISPLAY=/private/tmp/com.apple.launchd.TnupGLzDaj/org.xquartz:0  Signal Handlers: SIGSEGV: [libjvm.dylib+0x568c37], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_ONSTACK|SA_RESTART|SA_SIGINFO SIGBUS: [libjvm.dylib+0x568c37], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGFPE: [libjvm.dylib+0x468cf3], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGPIPE: [libjvm.dylib+0x468cf3], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGXFSZ: [libjvm.dylib+0x468cf3], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGILL: [libjvm.dylib+0x468cf3], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGUSR1: SIG_DFL, sa_mask[0]=00000000000000000000000000000000, sa_flags=SA_RESTART SIGUSR2: [libjvm.dylib+0x4695d2], sa_mask[0]=00000000000000000000000000000000, sa_flags=SA_RESTART|SA_SIGINFO SIGHUP: [libjvm.dylib+0x4677ef], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGINT: [libjvm.dylib+0x4677ef], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGTERM: [libjvm.dylib+0x4677ef], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO SIGQUIT: [libjvm.dylib+0x4677ef], sa_mask[0]=11111111011111110111111111111111, sa_flags=SA_RESTART|SA_SIGINFO   ---------------  S Y S T E M  ---------------  OS:Bsduname:Darwin 21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:28:54 PST 2021; root:xnu-8019.61.5~1/RELEASE_X86_64 x86_64 rlimit: STACK 8192k, CORE infinity, NPROC 2784, NOFILE 10240, AS infinity load average:6.65 5.83 5.34  CPU:total 12 (initial active 12) (6 cores per cpu, 2 threads per core) family 6 model 158 stepping 10, cmov, cx8, fxsr, mmx, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, avx, avx2, aes, clmul, erms, 3dnowpref, lzcnt, ht, tsc, tscinvbit, bmi1, bmi2, adx  Memory: 4k page, physical 16777216k(72384k free)  /proc/meminfo:   vm_info: OpenJDK 64-Bit Server VM (25.302-b00) for bsd-amd64 JRE (1.8.0_302-bre_2021_07_21_23_11-b00), built on Jul 21 2021 23:16:53 by ""brew"" with gcc Apple LLVM 12.0.5 (clang-1205.0.22.9)  time: Thu Dec 23 17:09:45 2021 timezone: WET elapsed time: 15.950798 seconds (0d 0h 0m 15s) ```   ### Operating System  MacOS Monterey but I had the same issue with MacOS Big Sur  ### Selenium version  Selenium 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96, but had the same issue with Safari  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947})  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","anze3db","2021-12-23T17:20:32Z","2022-01-27T00:06:49Z"
"","10538","[🐛 Bug]: ElementNotVisibleException class is not found in selenium 4.1.3. Getting compilation issues saying ElementNotVisibleException not found","### What happened?  I am trying to upgrade my framework with the latest selenium 4.1.3 in my project and when I am trying to run the existing tests in my local by upgrading the framework with the latest selenium framework(4.1.3) then I am facing compilation issues for the older tests saying ElementNotVisibleException class is not found in selenium 4.1.3. Getting compilation issues saying ElementNotVisibleException not found. If it is deprecated, please let us know which appropriate exception to use.? if not why am I getting compilation issues.  ### How can we reproduce the issue?  ```shell Try to use the latest selenium 4.1.3 version in the frameowork and try to run the tests by adding ElementNotVisibleException class in your code and then finally run the tests. ```   ### Relevant log output  ```shell I am trying to upgrade my framework with the latest selenium 4.1.3 in my project and when I am trying to run the existing tests in my local by upgrading the framework with the latest selenium framework(4.1.3) then I am facing compilation issues for the older tests saying ElementNotVisibleException class is not found in selenium 4.1.3. Getting compilation issues saying ElementNotVisibleException not found. If it is deprecated, please let us know which appropriate exception to use.? if not why am I getting compilation issues. ```   ### Operating System  macOS  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chrome  ### Are you using Selenium Grid?  _No response_","closed","","Tejareddy1","2022-04-11T18:28:49Z","2022-05-13T00:14:34Z"
"","10350","[🐛 Bug]: Wrong screenshot is generated for elements within iframes","### What happened?  I am trying to take a screenshot of an element within an iframe using both TakesScreenshot and AShot classes upon switching to that certain iframe and I receive a wrong screenshot which is not of that element.  ### How can we reproduce the issue?  ```shell 1. Have either Chrome 98.0.4758.82 or Microsoft Edge 98.0.1108.43 installed 2. Execute the following code on any website that has elements within an iframe (used http://demo.automationtesting.in/Frames.html for this test):  TakesScreenshot: String currentUserDirectory = System.getProperty(""user.home"");     File screenshot = ((TakesScreenshot) getWebDriver()).getScreenshotAs(OutputType.FILE);     BufferedImage fullImg = ImageIO.read(screenshot);          Point point = element.getLocation();          setElementWidth(element.getSize().getWidth());     setElementHeight(element.getSize().getHeight());          BufferedImage elementScreenshot = fullImg.getSubimage(point.getX(), point.getY(), elementWidth, elementHeight);     ImageIO.write(elementScreenshot, ""png"", screenshot);          File screenshotPath = new File(currentUserDirectory + ""\\Desktop\\"" + "" "" + screenshotName);     FileUtils.copyFile(screenshot, screenshotPath);  Test class method:  TakeScreenshot takeScreenshot = new TakeScreenshot(getWebDriver());          TakeScreenshot takeScreenshot = new TakeScreenshot(getWebDriver());      Thread.sleep(2000);     getWebDriver().switchTo().frame(singleFrame);     testElement.sendKeys(""test"");     takeScreenshot.elementScreenshot(testElement, ""TestElementTakesScreenshot.png""); // TakesScreenshot method ```   ### Relevant log output  ```shell No issues are received in the console. ```   ### Operating System  Windows 11  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.82 & Microsoft Edge 98.0.1108.43  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.80 & EdgeDriver 98.0.1108.43  ### Are you using Selenium Grid?  N/A","closed","I-issue-template,","gadragomir","2022-02-09T22:35:58Z","2022-03-13T00:09:49Z"
"","10389","[🐛 Bug]: Unable to setup Firefox Browser Privacy using non-deprecated methods options and set_preference","### What happened?  I am trying to setup the profile information in the option object and this is not working.  The environment: Version: geckodriver version 0.30 Platform: Ubuntu 20.04.3 Firefox: 97.0 Selenium: 4.1.0  I run the following code, and i am checking the FireFox > Settings >Privacy & Security > Browser Privacy  The value of Browser Privacy remains at 'custom' instead of being changed to 'standard' (same behavior if i try other options)  ### How can we reproduce the issue?  ```shell Version: geckodriver version 0.30 Platform: Ubuntu 20.04.3 Firefox: 97.0 Selenium: 4.1.0  from selenium import webdriver from webdriver_manager.firefox import GeckoDriverManager from selenium.webdriver.firefox.service import Service from selenium.webdriver.firefox.options import Options  import time import os  # Create proxy from browsermobproxy import Server server = Server(path=""/home/administrator/browsermob-proxy-2.1.4-bin/browsermob-proxy-2.1.4/bin/browsermob-proxy"") server.start() proxy = server.create_proxy()  #Create Options and add proxy options=Options() options.use_firefox = True  # commenting the line below does not remove the issue # options.proxy= proxy.selenium_proxy()  set preferences - options.set_preference('moz:browser.contentblocking.category', 'standard')  #options.set_preference('browser.contentblocking.category', 'standard') - not working as well  driver = webdriver.Firefox(service=Service(GeckoDriverManager().install()),options=options)  driver.get(""https://www.google.com/"")  print (""Options"") print(options) print (""---------------------------------------------------------------------------------------------------------"") print (""Driver Capability"") print(driver.capabilities) print (""---------------------------------------------------------------------------------------------------------"")  server.stop()  #following line is commented to check the profile of the Firefox Browser that is open by webDriver #driver.quit() ```   ### Relevant log output  ```shell ===== WebDriver manager ====== Current firefox version is 97.0 Get LATEST geckodriver version for 97.0 firefox Driver [/home/administrator/.wdm/drivers/geckodriver/linux64/v0.30.0/geckodriver] found in cache Options  Driver Capability {'acceptInsecureCerts': True, 'browserName': 'firefox', 'browserVersion': '97.0', 'moz:accessibilityChecks': False, 'moz:buildID': '20220202182137', 'moz:debuggerAddress': 'localhost:53623', 'moz:geckodriverVersion': '0.30.0', 'moz:headless': False, 'moz:processID': 8585, 'moz:profile': '/tmp/rust_mozprofileeOwGS7', 'moz:shutdownTimeout': 60000, 'moz:useNonSpecCompliantPointerOrigin': False, 'moz:webdriverClick': True, 'pageLoadStrategy': 'normal', 'platformName': 'linux', 'platformVersion': '5.13.0-30-generic', 'proxy': {'httpProxy': 'localhost:8097', 'proxyType': 'manual', 'sslProxy': 'localhost:8097'}, 'setWindowRect': True, 'strictFileInteractability': False, 'timeouts': {'implicit': 0, 'pageLoad': 300000, 'script': 30000}, 'unhandledPromptBehavior': 'dismiss and notify'} ```   ### Operating System  UBUNTU  ### Selenium version  Python Selenium 4.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox: 97.0 Selenium: 4.1.0  I run the follow  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver version 0.30  ### Are you using Selenium Grid?  no","closed","needs-triaging,","dlarocheRolle","2022-02-23T13:32:20Z","2022-04-07T00:11:46Z"
"","10340","Unable to run chrome headless - java.lang.NoSuchMethodError: org.openqa.selenium.chrome.ChromeOptions.addArguments([Ljava/lang/String;)Lorg/openqa/selenium/chrome/ChromeOptions;","### What happened?  I am trying to run my tests in chrome headless mode, Using Chrome-Selenium-EclipseIDE- MacOS     ### How can we reproduce the issue?  ```shell I don't see the issue while I run my individual cucumber feature files, but when I am running the test runner or through maven when the browser is set as headless it fails.  My POM.XML   			io.cucumber 			cucumber-java 			${cucumber.version} 			test 		  		 			io.cucumber 			cucumber-junit 			${cucumber.version} 			test 		  		 			junit 			junit 			${junit.version} 			test 		  		 			org.seleniumhq.selenium 			selenium-java 			4.0.0 		  		 			io.github.bonigarcia 			webdrivermanager 			4.4.3 		  		 			tech.grasshopper 			extentreports-cucumber6-adapter 			2.8.4 			test 		   				org.apache.maven.plugins 				maven-compiler-plugin 				${maven.compiler.version} 				 					UTF-8 					${java.version} 					${java.version} 				 			  			 				org.apache.maven.plugins 				maven-surefire-plugin 				${maven.surefire.version} 				 					 						*Runner.java 					 				 			 ```   ### Relevant log output  ```shell org.opentest4j.MultipleFailuresError: Multiple Failures (3 failures) 	org.openqa.selenium.chrome.ChromeOptions.addArguments([Ljava/lang/String;)Lorg/openqa/selenium/chrome/ChromeOptions; 	 in java.lang.NullPointerException 	 in java.lang.NullPointerException 	at org.junit.vintage.engine.execution.TestRun.getStoredResultOrSuccessful(TestRun.java:166) 	at org.junit.vintage.engine.execution.RunListenerAdapter.fireExecutionFinished(RunListenerAdapter.java:202) 	at org.junit.vintage.engine.execution.RunListenerAdapter.testFinished(RunListenerAdapter.java:160) 	at org.junit.vintage.engine.execution.RunListenerAdapter.testFinished(RunListenerAdapter.java:76) 	at org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:87) 	at org.junit.runner.notification.RunNotifier$9.notifyListener(RunNotifier.java:225) 	at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72) 	at org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:222) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:140) 	at io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:199) 	at io.cucumber.junit.Cucumber.runChild(Cucumber.java:90) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:234) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:115) 	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:39) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Iterator.forEachRemaining(Iterator.java:116) 	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472) 	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485) 	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:79) 	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:70) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) 	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) 	at org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:100) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210) ```   ### Operating System  macOS Catalina 10.15.7 (19H2)  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome - headless   ### What are the browser driver(s) and version(s) where you see this issue?  I am using WebdriverManager   ### Are you using Selenium Grid?  No","closed","I-defect,","namrathaPhenoTips","2022-02-08T17:15:33Z","2022-03-21T00:09:57Z"
"","10760","[🐛 Bug]: NoSuchElementException in --headless mode","### What happened?  I am trying to run my selenium code in headless mode and it crashes with NoSuchElementException  without headless mode it runs great.  ### How can we reproduce the issue?  ```shell service = Service(executable_path=binary_path)         prefs = {             ""download.default_directory"": str(self.data_dir),             ""download.prompt_for_download"": False,             ""download.directory_upgrade"": True,             ""profile.default_content_settings"": 2,             ""profile.default_content_settings.popups"": False,         }         options = webdriver.ChromeOptions()         options.add_experimental_option('prefs', prefs)          options.add_argument('--headless')         options.add_argument(""--window-size=1920,1080"")         options.add_argument(""--start-maximized"")          options.add_argument('--no-sandbox')         options.add_argument('--disable-dev-shm-usage')          if os.environ.get('RUNNING_IN_CONTAINER'):             url = 'http://selenium:4444/wd/hub'             browser = webdriver.Remote(url, options=options)             logger.info('Running in container...')         else:             browser = webdriver.Chrome(service=service, options=options)          return browser ```  ``` self.browser.get(FinvizScreener.LOGIN_URL) email = self.browser.find_element(by='xpath', value=FinvizScreener.EMAIL) password = self.browser.find_element(by='xpath', value=FinvizScreener.PASSWORD) submit = self.browser.find_element(by='xpath', value=FinvizScreener.SUBMIT) email.send_keys(FinvizScreener.FINVIZ_EMAIL) password.send_keys(FinvizScreener.FINVIZ_PASSWORD) submit.click() ``` ```   ### Relevant log output  ```shell self =  response = {'status': 404, 'value': '{""value"":{""error"":""no such element"",""message"":""no such element: Unable to locate element: {\...ff80310a4f4 _pthread_start + 125\\n20  libsystem_pthread.dylib             0x00007ff80310600f thread_start + 15\\n""}}'}      def check_response(self, response: Dict[str, Any]) -> None:         """"""         Checks that a JSON response from the WebDriver does not have an error.              :Args:          - response - The JSON response from the WebDriver server as a dictionary            object.              :Raises: If the response contains an error message.         """"""         status = response.get('status', None)         if not status or status == ErrorCode.SUCCESS:             return         value = None         message = response.get(""message"", """")         screen: str = response.get(""screen"", """")         stacktrace = None         if isinstance(status, int):             value_json = response.get('value', None)             if value_json and isinstance(value_json, str):                 import json                 try:                     value = json.loads(value_json)                     if len(value.keys()) == 1:                         value = value['value']                     status = value.get('error', None)                     if not status:                         status = value.get(""status"", ErrorCode.UNKNOWN_ERROR)                         message = value.get(""value"") or value.get(""message"")                         if not isinstance(message, str):                             value = message                             message = message.get('message')                     else:                         message = value.get('message', None)                 except ValueError:                     pass              exception_class: Type[WebDriverException]         if status in ErrorCode.NO_SUCH_ELEMENT:             exception_class = NoSuchElementException         elif status in ErrorCode.NO_SUCH_FRAME:             exception_class = NoSuchFrameException         elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:             exception_class = NoSuchShadowRootException         elif status in ErrorCode.NO_SUCH_WINDOW:             exception_class = NoSuchWindowException         elif status in ErrorCode.STALE_ELEMENT_REFERENCE:             exception_class = StaleElementReferenceException         elif status in ErrorCode.ELEMENT_NOT_VISIBLE:             exception_class = ElementNotVisibleException         elif status in ErrorCode.INVALID_ELEMENT_STATE:             exception_class = InvalidElementStateException         elif status in ErrorCode.INVALID_SELECTOR \                 or status in ErrorCode.INVALID_XPATH_SELECTOR \                 or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:             exception_class = InvalidSelectorException         elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:             exception_class = ElementNotSelectableException         elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:             exception_class = ElementNotInteractableException         elif status in ErrorCode.INVALID_COOKIE_DOMAIN:             exception_class = InvalidCookieDomainException         elif status in ErrorCode.UNABLE_TO_SET_COOKIE:             exception_class = UnableToSetCookieException         elif status in ErrorCode.TIMEOUT:             exception_class = TimeoutException         elif status in ErrorCode.SCRIPT_TIMEOUT:             exception_class = TimeoutException         elif status in ErrorCode.UNKNOWN_ERROR:             exception_class = WebDriverException         elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:             exception_class = UnexpectedAlertPresentException         elif status in ErrorCode.NO_ALERT_OPEN:             exception_class = NoAlertPresentException         elif status in ErrorCode.IME_NOT_AVAILABLE:             exception_class = ImeNotAvailableException         elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:             exception_class = ImeActivationFailedException         elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:             exception_class = MoveTargetOutOfBoundsException         elif status in ErrorCode.JAVASCRIPT_ERROR:             exception_class = JavascriptException         elif status in ErrorCode.SESSION_NOT_CREATED:             exception_class = SessionNotCreatedException         elif status in ErrorCode.INVALID_ARGUMENT:             exception_class = InvalidArgumentException         elif status in ErrorCode.NO_SUCH_COOKIE:             exception_class = NoSuchCookieException         elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:             exception_class = ScreenshotException         elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:             exception_class = ElementClickInterceptedException         elif status in ErrorCode.INSECURE_CERTIFICATE:             exception_class = InsecureCertificateException         elif status in ErrorCode.INVALID_COORDINATES:             exception_class = InvalidCoordinatesException         elif status in ErrorCode.INVALID_SESSION_ID:             exception_class = InvalidSessionIdException         elif status in ErrorCode.UNKNOWN_METHOD:             exception_class = UnknownMethodException         else:             exception_class = WebDriverException         if not value:             value = response['value']         if isinstance(value, str):             raise exception_class(value)         if message == """" and 'message' in value:             message = value['message']              screen = None  # type: ignore[assignment]         if 'screen' in value:             screen = value['screen']              stacktrace = None         st_value = value.get('stackTrace') or value.get('stacktrace')         if st_value:             if isinstance(st_value, str):                 stacktrace = st_value.split('\n')             else:                 stacktrace = []                 try:                     for frame in st_value:                         line = self._value_or_default(frame, 'lineNumber', '')                         file = self._value_or_default(frame, 'fileName', '')                         if line:                             file = ""%s:%s"" % (file, line)                         meth = self._value_or_default(frame, 'methodName', '')                         if 'className' in frame:                             meth = ""%s.%s"" % (frame['className'], meth)                         msg = ""    at %s (%s)""                         msg = msg % (meth, file)                         stacktrace.append(msg)                 except TypeError:                     pass         if exception_class == UnexpectedAlertPresentException:             alert_text = None             if 'data' in value:                 alert_text = value['data'].get('text')             elif 'alert' in value:                 alert_text = value['alert'].get('text')             raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here >       raise exception_class(message, screen, stacktrace) E       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""/html/body/div[2]/div/div/form/label[1]/input""} E         (Session info: headless chrome=102.0.5005.61) E       Stacktrace: E       0   chromedriver_mac64                  0x0000000101238d19 chromedriver_mac64 + 5197081 E       1   chromedriver_mac64                  0x00000001011c6b23 chromedriver_mac64 + 4729635 E       2   chromedriver_mac64                  0x0000000100da42b8 chromedriver_mac64 + 393912 E       3   chromedriver_mac64                  0x0000000100dd92fd chromedriver_mac64 + 611069 E       4   chromedriver_mac64                  0x0000000100dd9581 chromedriver_mac64 + 611713 E       5   chromedriver_mac64                  0x0000000100e0b5a4 chromedriver_mac64 + 816548 E       6   chromedriver_mac64                  0x0000000100df682d chromedriver_mac64 + 731181 E       7   chromedriver_mac64                  0x0000000100e092a1 chromedriver_mac64 + 807585 E       8   chromedriver_mac64                  0x0000000100df66f3 chromedriver_mac64 + 730867 E       9   chromedriver_mac64                  0x0000000100dcca49 chromedriver_mac64 + 559689 E       10  chromedriver_mac64                  0x0000000100dcda75 chromedriver_mac64 + 563829 E       11  chromedriver_mac64                  0x000000010120abdd chromedriver_mac64 + 5008349 E       12  chromedriver_mac64                  0x000000010120fb64 chromedriver_mac64 + 5028708 E       13  chromedriver_mac64                  0x0000000101214bcf chromedriver_mac64 + 5049295 E       14  chromedriver_mac64                  0x00000001012107ca chromedriver_mac64 + 5031882 E       15  chromedriver_mac64                  0x00000001011ea59f chromedriver_mac64 + 4875679 E       16  chromedriver_mac64                  0x000000010122a388 chromedriver_mac64 + 5137288 E       17  chromedriver_mac64                  0x000000010122a50f chromedriver_mac64 + 5137679 E       18  chromedriver_mac64                  0x0000000101240085 chromedriver_mac64 + 5226629 E       19  libsystem_pthread.dylib             0x00007ff80310a4f4 _pthread_start + 125 E       20  libsystem_pthread.dylib             0x00007ff80310600f thread_start + 15  ../../../Library/Caches/pypoetry/virtualenvs/screener-_BNrBjro-py3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:247: NoSuchElementException ----------------------------------------------------------------------------------------------------------------- Captured stderr call ------------------------------------------------------------------------------------------------------------------ 2022-06-11 01:43:13.391 | INFO     | screener.screeners.finviz.screener:create_browser:39 - Launching browser 2022-06-11 01:43:14.627 | INFO     | screener.screeners.finviz.screener:_login:129 - Logging in to Finviz ================================================================================================================ short test summary info ================================================================================================================ FAILED tests/test_api.py::test_screeners - selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""/html/body/div[2]/div/div/form/label[1]/input""} ============================================================================================================ 1 failed, 2 deselected in 3.77s ============================================================================================================ ``` ```   ### Operating System  macOS Monterey  ### Selenium version  Python 4.1.5  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.61  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.61  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","orshemtov","2022-06-10T22:46:14Z","2022-07-21T00:12:33Z"
"","10734","[🐛 Bug]: Not able to add response headers using Fetch.fulfillRequest()","### What happened?  I am trying to modify the response body for one of the request using selenium 4. I am able to reach upto some extent where modifying the request is breaking my application as it required 2 response headers. I am adding these mandatory response headers while modifying the response body, however, they does not seems to be added on the Network tab of chrome devtools.   Because the application is breaking that mean the code is working but it is just not adding the response header.   ### How can we reproduce the issue?  ```shell WebDriver webDriver = new ChromeDriver(chromeOptions);                 DevTools devTools = ((ChromeDriver) webDriver).getDevTools();                 devTools.createSession();        			devTools.send(Fetch.enable(Optional.empty(), Optional.empty()));        			String response = ""{\""status\"": \""SUCCESS\""}"";          devTools.addListener(Fetch.requestPaused(), req -> {             String url = req.getRequest().getUrl();             if (url.equals(""https://***** Hidden ******"")) {                 List corsHeaders = new ArrayList();                 corsHeaders.add(new HeaderEntry(""Access-Control-Allow-Origin"", ""https://*** Hidden ****""));                 corsHeaders.add(new HeaderEntry(""Access-Control-Allow-Credentials"", ""true""));                  devTools.send(Fetch.fulfillRequest                         (                                 req.getRequestId(),                                 200,                                 Optional.of(corsHeaders),                                 Optional.empty(),                                 Optional.of(Base64.getEncoder().encodeToString(response.getBytes())),                                 Optional.of(""OK"")                         )                 );             } else {                 devTools.send(Fetch.continueRequest(                         req.getRequestId(),                         Optional.of(url),                         Optional.of(req.getRequest().getMethod()),                         req.getRequest().getPostData(),                         req.getResponseHeaders(),                         Optional.empty()));             }         }); ```   ### Relevant log output  ```shell Chrome screenshot where not a single response header is added and the application is breaking ![image](https://user-images.githubusercontent.com/28785545/172136414-907aaa57-4d9f-48e3-883b-d1ce569d00cd.png)  ```   ### Operating System  Windows 10  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome Version 97.0.4692.71 - Organization managed  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Version 97.0.4692.71 - Organization managed  ### Are you using Selenium Grid?  No","closed","","arvinder06","2022-06-06T09:38:23Z","2022-07-08T00:14:13Z"
"","10399","[🐛 Bug]: Error in making the API request POST /session/:sessionId/se/log","### What happened?  I am trying to get the logs from  `POST /session/:sessionId/se/log` API, but facing errors in it. Following are the steps I followed:  ### How can we reproduce the issue?  1. Start Selenium 4 session with the following command ```shell java -Dwebdriver.chrome.driver=""/Users/ankur/chromedriver"" -jar selenium-server-4.1.1.jar standalone  --driver-configuration display-name=""Chrome""   stereotype='{""browserName"": ""chrome"", ""browserVersion"": ""95"", ""goog:chromeOptions"":{""binary"":""/Applications/Google Chrome.app/Contents/MacOS/Google Chrome""}}'  ``` 2. Start a session with the following request:  ```jsx curl --location --request POST 'localhost:4444/wd/hub/session' \ --header 'Content-Type: application/json; charset=utf-8' \ --data-raw '{     ""desiredCapabilities"": {         ""browserName"": ""chrome"",         ""goog:chromeOptions"": {             ""args"": [                 ""--remote-debugging-port=9225""             ]         },         ""goog:loggingPrefs"": {             ""browser"": ""ALL"",             ""driver"": ""ALL"",             ""server"": ""ALL""         }     },     ""capabilities"": {         ""browserName"": ""chrome""     } }' ```  3. Get logs with the following request:  ```jsx curl --location --request GET 'localhost:4444/session/30b9b9b2b29ff8bfeedfd5c27a418c23/se/log' \ --header 'Content-Type: application/json; charset=utf-8' \ --data-raw '' ```  Getting the error:  ```jsx {     ""value"": {         ""error"": ""script timeout"",         ""message"": ""Unable to execute request for an existing session: GET /session/30b9b9b2b29ff8bfeedfd5c27a418c23/se/log\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'MacBook-Pro.local', ip: 'fe80:0:0:0:18df:a1f9:77fb:d522%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_311'\nDriver info: driver.version: unknown"",         ""stacktrace"": ""java.lang.RuntimeException: Unable to execute request for an existing session: GET /session/30b9b9b2b29ff8bfeedfd5c27a418c23/se/log\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'MacBook-Pro.local', ip: 'fe80:0:0:0:18df:a1f9:77fb:d522%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_311'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:139)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\n\tat org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n""     } } ```  How can I get the logs here? ```   ### Relevant log output  ```shell {     ""value"": {         ""error"": ""script timeout"",         ""message"": ""Unable to execute request for an existing session: GET /session/30b9b9b2b29ff8bfeedfd5c27a418c23/se/log\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'MacBook-Pro.local', ip: 'fe80:0:0:0:18df:a1f9:77fb:d522%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_311'\nDriver info: driver.version: unknown"",         ""stacktrace"": ""java.lang.RuntimeException: Unable to execute request for an existing session: GET /session/30b9b9b2b29ff8bfeedfd5c27a418c23/se/log\nBuild info: version: '4.1.1', revision: 'e8fcc2cecf'\nSystem info: host: 'MacBook-Pro.local', ip: 'fe80:0:0:0:18df:a1f9:77fb:d522%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_311'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:139)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\n\tat org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n""     } } ```   ### Operating System  MacOS Monterey  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome latest  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver  ### Are you using Selenium Grid?  4.1.1","closed","needs-triaging,","ankur-lt","2022-02-25T12:04:42Z","2022-04-03T00:10:34Z"
"","10890","[🐛 Bug]: Cannot register node to hub Selenium Grid 4.3.0","### What happened?  I am trying to connect a node from an outside network to a hub. I get the hub started and I can run the command to connect to it from the computer I am trying to run the hub on and it registers fine.  Whenever I try to use the outside node I cannot seem to connect and I get this output from the terminal.  HUB Output ![Screenshot 2022-07-20 104639](https://user-images.githubusercontent.com/45299186/180027330-21717277-8fa5-445e-836f-3bce3ccbffac.png)  NODE Output ![Screenshot 2022-07-20 104621](https://user-images.githubusercontent.com/45299186/180028003-18222ff2-0dcc-4296-b91e-9e472ed26a93.png)  All three blanked out ip's are the public IP I am trying to connect to.  -From the computer I am running the node I can pull up the hubs web gui from a browser -I have port forwarded 4442-4444 and 5555 on both routers for this as well as inbound and outbound on Windows Firewall  Am I just missing something simple in the config?    ### How can we reproduce the issue?  ```shell First I run on the host computer: '''java -jar selenium-server-4.3.0.jar hub ''' Then on the I guess you would say 'client' computer I run:  ''' java -jar selenium-server-4.3.0.jar node --detect-drivers true --hub https://""MyPublicIP"":4444  ''' ```   ### Relevant log output  ```shell HUB OUTPUT  C:\Users\drgul\Downloads>java -jar selenium-server-4.3.0.jar hub 10:43:31.102 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:43:31.105 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:43:32.028 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://192.168.1.41:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://192.168.1.41:4443] 10:43:32.086 INFO [UnboundZmqEventBus.] - Connecting to tcp://192.168.1.41:4442 and tcp://192.168.1.41:4443 10:43:32.118 INFO [UnboundZmqEventBus.] - Sockets created 10:43:33.126 INFO [UnboundZmqEventBus.] - Event bus ready 10:43:35.815 INFO [Hub.execute] - Started Selenium Hub 4.3.0 (revision a4995e2c09*): http://192.168.1.41:4444 10:45:40.022 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 10:45:50.626 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 10:46:00.642 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:46:10.674 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 10:46:20.683 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 10:46:30.693 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 10:46:40.701 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 10:46:50.710 INFO [Node.] - Binding additional locator mechanisms: relative, name, id 10:47:00.724 INFO [Node.] - Binding additional locator mechanisms: id, relative, name 10:47:10.745 INFO [Node.] - Binding additional locator mechanisms: relative, name, id 10:47:20.756 INFO [Node.] - Binding additional locator mechanisms: relative, name, id 10:47:30.764 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 10:47:40.786 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:47:50.798 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:48:00.814 INFO [Node.] - Binding additional locator mechanisms: id, relative, name 10:48:37.795 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:49:37.798 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:50:37.796 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 10:51:37.802 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:52:37.801 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 10:53:37.812 INFO [Node.] - Binding additional locator mechanisms: relative, name, id 10:54:37.810 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 10:55:37.808 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:56:37.809 INFO [Node.] - Binding additional locator mechanisms: relative, name, id 10:57:37.807 INFO [Node.] - Binding additional locator mechanisms: id, relative, name   NODE OUTPUT  C:\>java -jar selenium-server-4.3.0.jar node --detect-drivers true --hub https://""MyPublicIP"":4444 10:45:31.632 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:45:31.637 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:45:32.383 INFO [UnboundZmqEventBus.] - Connecting to tcp://""MyPublicIP"":4442 and tcp://""MyPublicIP"":4443 10:45:32.454 INFO [UnboundZmqEventBus.] - Sockets created 10:45:33.459 INFO [UnboundZmqEventBus.] - Event bus ready 10:45:34.526 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.3.2:5555 10:45:35.534 INFO [NodeOptions.getSessionFactories] - Detected 32 available processors 10:45:35.574 INFO [NodeOptions.discoverDrivers] - Discovered 1 driver(s) 10:45:35.622 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 32 times 10:45:35.646 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 10:45:37.857 INFO [NodeServer$1.start] - Starting registration process for Node http://192.168.3.2:5555 10:45:37.859 INFO [NodeServer.execute] - Started Selenium node 4.3.0 (revision a4995e2c09*): http://192.168.3.2:5555 10:45:37.900 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:45:47.920 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:45:57.949 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:46:07.972 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:46:17.987 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:46:27.994 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:46:38.010 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:46:48.015 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:46:58.016 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:47:08.037 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:47:18.056 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:47:28.064 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 10:47:37.868 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 103  ### What are the browser driver(s) and version(s) where you see this issue?  Edge 103  ### Are you using Selenium Grid?  selenium-server-4.3.0","closed","I-defect,","MaxxRK","2022-07-20T16:03:16Z","2022-08-01T10:23:32Z"
"","10132","[🐛 Bug]:  org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$RwtMl7Wf cannot be cast to org.openqa.selenium.devtools.HasDevTools","### What happened?  I am running latest selenium-docker image:      sudo docker run -d -p 4444:4444 --shm-size=""2g"" -e SCREEN_WIDTH=1280 -e SCREEN_HEIGHT=720 selenium/standalone-chrome:4.1.0-20211209  In my Java application I have the following code snippet that throws ClassCastException:  ``` ChromeOptions options = new ChromeOptions(); String driverUrl = ""http://127.0.0.1:4444/wd/hub""; WebDriver driver = new RemoteWebDriver(new URL(driverUrl), options); driver = new Augmenter().augment(driver); DevTools devTools = ((HasDevTools) driver).getDevTools(); devTools.createSession(); ```  As soon as the `HasDevTools` cast is attempted, I am getting:  `org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$RwtMl7Wf cannot be cast to org.openqa.selenium.devtools.HasDevTools: java.lang.ClassCastException: org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$RwtMl7Wf cannot be cast to org.openqa.selenium.devtools.HasDevTools `  I have carefully reviewed all the similar issues, but none of them seems to have concluded on this particular bug.  My relevant grade dependency is:      implementation 'org.seleniumhq.selenium:selenium-java:4.1.0'     implementation 'org.seleniumhq.selenium:selenium-devtools-v94:4.1.0'   My JDK is:  OS Version: 4.14.252-195.483.amzn2.x86_64 Java Name: OpenJDK 64-Bit Server VM Java Vendor: Oracle Corporation Java Version: 9.0.4 Java VM Version: 9.0.4+11  ### How can we reproduce the issue?  ```shell ChromeOptions options = new ChromeOptions(); String driverUrl = ""http://127.0.0.1:4444/wd/hub""; WebDriver driver = new RemoteWebDriver(new URL(driverUrl), options); driver = new Augmenter().augment(driver); DevTools devTools = ((HasDevTools) driver).getDevTools(); devTools.createSession(); ```   ### Relevant log output  ```shell 2021-12-10      17:04:26        UTC     comment server  INFO    200     -       Tricky cast     _defaultVHost_  -       -       30.728  -       -       -       -       -       -       -       -       -       -       -       -       -        -       -       -       -       -       -       -       -       -       -       -       - 2021-12-10      17:04:26        UTC     comment server  ERROR   500     -       Error initializing stack: org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$RwtMl7Wf cannot be cast to org.openqa.selenium.devtools.HasDevTools: java.lang.ClassCastException: org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$RwtMl7Wf cannot be cast to org.openqa.selenium.devtools.HasDevTools|at com.mycompany.blah.Foo.lambda$new$3(Foo.java:291)|at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)|at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)|at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)|at java.base/java.lang.Thread.run(Unknown Source)|    _defaultVHost_  -       -       30.73   - ```   ### Operating System  Amazon Linux  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  the one in your docker image  ### Are you using Selenium Grid?  4.1.0","closed","I-defect,","jantekb","2021-12-10T17:13:43Z","2022-03-13T00:09:54Z"
"","10388","[🐛 Bug]: message from JS exception is incomplete","### What happened?  I am playing with listening to JS exceptions feature both in Java and C#. While in Java I am able to get the full exception message, in C# all I get is a word ""Undifined"".  Here you have how it looks in Java (for my example page): org.openqa.selenium.JavascriptException: Error: Kliknięto Przycisk 1!     at HTMLDivElement.showButton1 (https://fakestore.testelka.pl/javascript-exceptions/:714:7) Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'XXX', ip: 'XXX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1' Driver info: driver.version: unknown  And this is C#:  Uncaught  ### How can we reproduce the issue?  ```shell using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using System; using System.Collections.Generic; using System.Text; using System.Threading.Tasks;  namespace TestowyProjekt.Selenium4 {     class ListeningToJSExceptionsExample     {         IWebDriver driver;         IJavaScriptEngine monitor;          [SetUp]         public async Task SetupAsync()         {             driver = new ChromeDriver();             monitor = new JavaScriptEngine(driver);             monitor.JavaScriptExceptionThrown += (sender, e) =>             {                 Console.WriteLine(e.Message);             };              await monitor.StartEventMonitoring();         }           [Test]         public void ListeningToJSExceptionsTest()         {                                     driver.Navigate().GoToUrl(""https://fakestore.testelka.pl/javascript-exceptions/"");             IWebElement button1 = driver.FindElement(By.Id(""button-1""));             button1.Click();                       }          [TearDown]         public void QuitDriver()         {             monitor.StopEventMonitoring();             driver.Quit();         }     } } ```   ### Relevant log output  ```shell Uncaught ```   ### Operating System  Windows 11 Pro  ### Selenium version  .NET Core 3.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.102   ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.10200  ### Are you using Selenium Grid?  _No response_","open","C-devtools,","aphx07","2022-02-23T12:58:56Z","2022-04-12T07:45:26Z"
"","10307","[🐛 Bug]: not able to start new session in  dynamic grid","### What happened?  I am not able to start new chrome session in docker dynamic grid and getting below error. I saw the message ""No slot matched the requested capabilities"" not sure how to fix it.  `selenium-hub       | 22:16:35.215 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:40.201 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:40.214 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581000212802372,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} `  ![image](https://user-images.githubusercontent.com/515828/151720775-5d053c5c-fea1-4aa9-93ae-7e8117a43704.png) ![image](https://user-images.githubusercontent.com/515828/151721032-6d22a7ac-533d-469b-b4e7-cc7c5a335632.png)   ### How can we reproduce the issue?  ```shell used below mentioned docker compose file to generate grid.  https://github.com/SeleniumHQ/docker-selenium/blob/trunk/docker-compose-v3-dynamic-grid.yml ```   ### Relevant log output  ```shell Attaching to hub-node-docker-1, selenium-hub selenium-hub       | 2022-01-30 22:14:22,012 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing selenium-hub       | 2022-01-30 22:14:22,016 INFO supervisord started with pid 10 hub-node-docker-1  | 2022-01-30 22:14:22,822 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-node-docker.conf"" during parsing hub-node-docker-1  | 2022-01-30 22:14:22,825 INFO supervisord started with pid 9 selenium-hub       | 2022-01-30 22:14:23,019 INFO spawned: 'selenium-grid-hub' with pid 12 selenium-hub       | 22:14:23.547 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding selenium-hub       | 2022-01-30 22:14:23,550 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) selenium-hub       | 22:14:23.553 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing selenium-hub       | 22:14:23.651 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://192.168.32.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://192.168.32.2:4443] selenium-hub       | 22:14:23.748 INFO [UnboundZmqEventBus.] - Connecting to tcp://192.168.32.2:4442 and tcp://192.168.32.2:4443 selenium-hub       | 22:14:23.784 INFO [UnboundZmqEventBus.] - Sockets created hub-node-docker-1  | 2022-01-30 22:14:23,827 INFO spawned: 'selenium-grid-node-docker' with pid 11 hub-node-docker-1  | Starting Selenium Grid Node Docker... hub-node-docker-1  | 2022-01-30 22:14:23,835 INFO success: selenium-grid-node-docker entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) hub-node-docker-1  | 22:14:24.410 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding hub-node-docker-1  | 22:14:24.421 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing hub-node-docker-1  | 22:14:24.672 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-hub:4442 and tcp://selenium-hub:4443 selenium-hub       | 22:14:24.786 INFO [UnboundZmqEventBus.] - Event bus ready hub-node-docker-1  | 22:14:24.791 INFO [UnboundZmqEventBus.] - Sockets created selenium-hub       | 22:14:25.617 INFO [Hub.execute] - Started Selenium Hub 4.1.1 (revision e8fcc2cecf): http://192.168.32.2:4444 hub-node-docker-1  | 22:14:25.793 INFO [UnboundZmqEventBus.] - Event bus ready hub-node-docker-1  | 22:14:25.956 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.32.3:5555 hub-node-docker-1  | 22:14:25.981 INFO [NodeOptions.getSessionFactories] - Detected 4 available processors hub-node-docker-1  | 22:14:26.588 INFO [V141Docker.isContainerPresent] - Checking if container is present: b92c9d3c24bc hub-node-docker-1  | 22:14:26.643 INFO [Docker.getImage] - Obtaining image: selenium/standalone-firefox:4.1.1-20220121 hub-node-docker-1  | 22:14:26.643 INFO [Docker.getImage] - Obtaining image: selenium/standalone-edge:4.1.1-20220121 hub-node-docker-1  | 22:14:26.643 INFO [Docker.getImage] - Obtaining image: selenium/standalone-chrome:4.1.1-20220121 hub-node-docker-1  | 22:14:26.650 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-firefox', tag='4.1.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.650 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-edge', tag='4.1.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.650 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-chrome', tag='4.1.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.727 INFO [Docker.getImage] - Obtaining image: selenium/video:ffmpeg-4.3.1-20220121 hub-node-docker-1  | 22:14:26.728 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/video', tag='ffmpeg-4.3.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.747 INFO [Docker.getImage] - Obtaining image: selenium/video:ffmpeg-4.3.1-20220121 hub-node-docker-1  | 22:14:26.748 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/video', tag='ffmpeg-4.3.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.779 INFO [Docker.getImage] - Obtaining image: selenium/standalone-chrome:4.1.1-20220121 hub-node-docker-1  | 22:14:26.780 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-chrome', tag='4.1.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.815 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: chrome, platformName: linux} to docker image selenium/standalone-chrome:4.1.1-20220121 4 times hub-node-docker-1  | 22:14:26.816 INFO [Docker.getImage] - Obtaining image: selenium/standalone-firefox:4.1.1-20220121 hub-node-docker-1  | 22:14:26.816 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-firefox', tag='4.1.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.848 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: firefox, platformName: linux} to docker image selenium/standalone-firefox:4.1.1-20220121 4 times hub-node-docker-1  | 22:14:26.849 INFO [Docker.getImage] - Obtaining image: selenium/standalone-edge:4.1.1-20220121 hub-node-docker-1  | 22:14:26.849 INFO [V141Docker.getImage] - Listing local images: Reference{domain='docker.io', name='selenium/standalone-edge', tag='4.1.1-20220121', digest='null'} hub-node-docker-1  | 22:14:26.877 INFO [DockerOptions.lambda$getDockerSessionFactories$1] - Mapping Capabilities {browserName: MicrosoftEdge, platformName: linux} to docker image selenium/standalone-edge:4.1.1-20220121 4 times hub-node-docker-1  | 22:14:26.926 INFO [Node.] - Binding additional locator mechanisms: id, relative, name hub-node-docker-1  | 22:14:27.037 INFO [NodeServer$1.start] - Starting registration process for node id 66939a4e-0bf0-475a-bc19-dde4e0ce66d6 hub-node-docker-1  | 22:14:27.045 INFO [NodeServer.execute] - Started Selenium node 4.1.1 (revision e8fcc2cecf): http://192.168.32.3:5555 hub-node-docker-1  | 22:14:27.063 INFO [NodeServer$1.lambda$start$1] - Sending registration event... selenium-hub       | 22:14:27.138 INFO [Node.] - Binding additional locator mechanisms: id, name, relative selenium-hub       | 22:14:27.570 INFO [LocalDistributor.add] - Added node 66939a4e-0bf0-475a-bc19-dde4e0ce66d6 at http://192.168.32.3:5555. Health check every 120s hub-node-docker-1  | 22:14:27.578 INFO [NodeServer.lambda$createHandlers$2] - Node has been added selenium-hub       | 22:14:27.598 INFO [GridModel.setAvailability] - Switching node 66939a4e-0bf0-475a-bc19-dde4e0ce66d6 (uri: http://192.168.32.3:5555) from DOWN to UP selenium-hub       | 22:16:15.218 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:15.305 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643580975302532564,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:15.332 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:20.197 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:20.204 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643580980204086508,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:20.210 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:25.198 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:25.207 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643580985206871196,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:25.214 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:30.200 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:30.208 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643580990207757871,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:30.217 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:35.201 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:35.208 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643580995207698508,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:35.215 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:40.201 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:40.214 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581000212802372,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:40.220 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:45.203 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:45.214 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581005213341861,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:45.219 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:50.182 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:50.191 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581010189761590,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:50.196 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:16:55.186 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:16:55.194 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581015193243201,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:16:55.201 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:00.187 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:00.194 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581020193187910,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:00.201 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:05.190 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:05.202 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581025200856164,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:05.209 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:10.190 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:10.197 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581030196834956,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:10.204 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:15.191 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:15.201 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581035200436839,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:15.210 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:20.172 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:20.185 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581040184056915,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:20.191 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:25.173 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:25.182 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581045181282030,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:25.191 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:30.175 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:30.182 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581050181980144,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:30.194 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:35.175 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:35.181 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581055180760669,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:35.186 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:40.176 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:40.186 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581060185545461,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:40.192 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:45.176 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:45.185 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581065184735503,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:45.190 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:50.156 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:50.164 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581070163686478,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:50.170 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:17:55.157 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:17:55.164 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581075163150337,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:17:55.169 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:00.158 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:00.165 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581080164295291,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:00.170 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:05.158 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:05.171 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581085170375587,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:05.178 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:10.159 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:10.167 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581090166709682,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:10.172 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:15.160 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:15.168 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581095167268540,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:15.175 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:20.140 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:20.151 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581100150172758,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:20.156 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:25.141 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:25.150 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581105148949254,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:25.162 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:30.142 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:30.151 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581110150013712,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:30.156 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:35.143 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:35.150 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581115149495827,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:35.156 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:40.144 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:40.151 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581120151148445,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:40.157 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:45.146 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:45.155 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581125154353935,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:45.161 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:50.126 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:50.132 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581130131291916,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:50.137 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:18:55.127 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:18:55.134 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581135133388445,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:18:55.140 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:00.128 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:00.136 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581140135292601,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:00.141 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:05.129 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:05.136 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581145136333546,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:05.141 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:10.130 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:10.138 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581150136760231,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:10.143 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:15.134 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:15.144 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581155143060899,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:15.149 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:20.114 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:20.122 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581160121245211,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:20.126 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:25.114 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:25.123 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581165122867275,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:25.144 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:30.115 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:30.123 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581170122897953,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:30.128 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:35.116 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:35.123 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581175122608946,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:35.127 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:40.117 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:40.125 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581180123396411,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:40.131 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:45.118 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:45.127 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581185126914277,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:45.136 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:50.098 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:50.105 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581190104880818,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:50.109 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:19:55.100 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:19:55.115 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581195112876258,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:19:55.120 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:00.101 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:00.113 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581200111493301,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:00.117 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:05.103 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:05.110 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581205109711900,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:05.114 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:10.105 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:10.114 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581210113107061,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:10.119 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:15.106 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:15.118 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581215116521815,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:15.121 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:20.087 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:20.094 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581220093674868,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:20.100 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:25.088 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:25.097 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581225096917695,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:25.104 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:30.090 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:30.099 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581230098814412,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:30.105 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:35.090 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:35.097 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581235096412660,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:35.101 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:40.091 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:40.096 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581240095653285,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:40.101 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:45.093 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:45.098 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581245098248475,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:45.102 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:50.073 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:50.081 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581250080515861,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:50.085 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:20:55.073 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:20:55.078 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581255076978959,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:20:55.082 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:21:00.074 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:21:00.079 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581260078105793,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:21:00.083 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:21:05.074 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:21:05.081 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581265080674159,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:21:05.086 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:21:10.076 INFO [LocalDistributor.newSession] - Session request received by the distributor:  selenium-hub       |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}] hub-node-docker-1  | 22:21:10.083 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581270082856814,""eventName"": ""No slot matched the requested capabilities. "",""attributes"": {""current.session.count"": 0,""logger"": ""org.openqa.selenium.grid.node.local.LocalNode"",""session.request.capabilities"": ""Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}, se:recordVideo: true}"",""session.request.downstreamdialect"": ""[OSS, W3C]""}} hub-node-docker-1  |  selenium-hub       | 22:21:10.087 INFO [LocalDistributor$NewSessionRunnable.handleNewSessionRequest] - Retrying selenium-hub       | 22:21:11.506 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""79444fcaafe79172f5dd2108c5042023"",""eventTime"": 1643581271710799300,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"",""http.host"": ""localhost:4444"",""http.method"": ""POST"",""http.request_content_length"": ""425"",""http.scheme"": ""HTTP"",""http.status_code"": 500,""http.target"": ""\u002fsession"",""http.user_agent"": ""selenium\u002f4.1.1 (java mac)""}} ```   ### Operating System  MAC  ### Selenium version  selenium 4  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chrome  ### Are you using Selenium Grid?  Grid 4","closed","needs-triaging,","woodsongem","2022-01-30T22:27:55Z","2022-03-03T00:10:08Z"
"","10337","[🐛 Bug]: Python Chrome Options Detach: true not working","### What happened?  I am looking to keep a driver instance indefinitely, using the `detach: true` chrome option. The window keeps open for a few seconds after the Python script completes, then it closes.  I've also tried `browser = webdriver.Chrome(settings.SELENIUM_DRIVER, options=chrome_options)`  to no avail.  Appreciate any & all help!  ### How can we reproduce the issue?  ```shell if __name__ == '__main__':     from selenium.webdriver.chrome.options import Options     from selenium import webdriver     chrome_options = Options()     chrome_options.add_experimental_option(""detach"", True)     browser = webdriver.Chrome(settings.SELENIUM_DRIVER, chrome_options=chrome_options)     browser.get('https://www.google.com/')     browser.maximize_window() ```   ### Relevant log output  ```shell $ winpty python robot.py D:\Youtube\youtube\robot.py:187: DeprecationWarning: executable_path has been deprecated, please pass in a Service object   browser = webdriver.Chrome(settings.SELENIUM_DRIVER, chrome_options=chrome_options) D:\Youtube\youtube\robot.py:187: DeprecationWarning: use options instead of chrome_options   browser = webdriver.Chrome(settings.SELENIUM_DRIVER, chrome_options=chrome_options)  DevTools listening on ws://127.0.0.1:51710/devtools/browser/4c1fe583-427c-4097-9777-522958188ec5 (venv)  useme@DESKTOP MINGW64 /d/Youtube/youtube (master) ```   ### Operating System  Windows 10  ### Selenium version  Python selenium==4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97.0.4692.99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","lestrato","2022-02-08T02:49:20Z","2022-03-14T00:09:47Z"
"","10839","[🐛 Bug]:","### What happened?  I am having an issue in launching the chrome driver using selenium.  ### How can we reproduce the issue?  ```shell package newproject;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class newclass {  	public static void main(String[] args) { 		// TODO Auto-generated method stub       System.setProperty(""webdriver.chrome.driver"",""C:\\Users\\bilal\\Downloads\\chromedriver_win32.exe""); 	    WebDriver driver = new ChromeDriver(); 	    driver.get(""https://www.google.com/""); 	}  }    Problems Exception in thread ""main"" java.lang.IllegalStateException: The driver executable must exist: C:\Users\bilal\Downloads\chromedriver_win32.exe 	at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:342) 	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:147) 	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:142) 	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:39) 	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:233) 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:437) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:128) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:49) 	at newproject.newclass.main(newclass.java:11) ```   ### Relevant log output  ```shell Chromepage ```   ### Operating System  Window10  ### Selenium version  Java  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome   ### What are the browser driver(s) and version(s) where you see this issue?  Chrome  103.0.5060.66  ### Are you using Selenium Grid?  No","closed","needs-triaging,","Bilal209","2022-07-03T10:56:10Z","2022-07-04T14:18:36Z"
"","10489","[🐛 Bug]: I am getting ""WebDriverException: Unable to parse:"" when using Selenium Select.selectByVisualText","### What happened?  I am having a test suite with a parallel setup to run test classes in parallel. The parallel setup is not an issue and it's 100% working fine. After upgrading from selenium `4.0.0-beta-3` to `4.1.2`, I often get a `WebDriverException: Unable to parse:` exception. Every time the exception triggers, the stack trace points to the same line of code that uses Selenium [Select.selectByVisualText](https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/support/ui/Select.html#selectByVisibleText(java.lang.String)).  I even tried to run the suite in the serial execution setup and it triggers the same exception with a different test class but referring to the same utility we have that uses the Selenium `Select.selectByVisualText`  ### How can we reproduce the issue?  Use the Selenium [Select.selectByVisualText](https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/support/ui/Select.html#selectByVisibleText(java.lang.String)) to select an option from a drop-down select. I would suggest having a test suite of 10 or so doing the same actions so that you have a higher probability to trigger this exception. Or, maybe one class with a for loop that calls the `Select.selectByVisualText` method would be easier.  I am not sure if this bug can be resolved without this Feature Proposal being implemented  - #9792  ### Relevant log output  ```shell WebDriverException: Unable to parse:  Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: '511b4cdd4521', ip: '172.18.0.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.11.0-1028-azure', java.version: '1.8.0_282' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [eaaeb6cce0ca5a14e5bfdb86fc271b11, findElement {using=xpath, value=//select[@id='edit-moderation-state-0-state']}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: /tmp/.com.google.Chrome.3ghYqB}, goog:chromeOptions: {debuggerAddress: localhost:40463}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://172.18.0.6:4444/sessio..., se:cdpVersion: 99.0.4844.74, se:vnc: ws://172.18.0.6:4444/sessio..., se:vncEnabled: true, se:vncLocalAddress: ws://172.18.0.6:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: eaaeb6cce0ca5a14e5bfdb86fc271b11 org.openqa.selenium.WebDriverException: Unable to parse:  Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: '511b4cdd4521', ip: '172.18.0.11', os.name: 'Linux', os.arch: 'amd64', os.version: '5.11.0-1028-azure', java.version: '1.8.0_282' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [eaaeb6cce0ca5a14e5bfdb86fc271b11, findElement {using=xpath, value=//select[@id='edit-moderation-state-0-state']}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 99.0.4844.74, chrome: {chromedriverVersion: 99.0.4844.51 (d537ec02474b5..., userDataDir: /tmp/.com.google.Chrome.3ghYqB}, goog:chromeOptions: {debuggerAddress: localhost:40463}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://172.18.0.6:4444/sessio..., se:cdpVersion: 99.0.4844.74, se:vnc: ws://172.18.0.6:4444/sessio..., se:vncEnabled: true, se:vncLocalAddress: ws://172.18.0.6:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: eaaeb6cce0ca5a14e5bfdb86fc271b11 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:382) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:374) 	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39) 	at com.sun.proxy.$Proxy14.getDomAttribute(Unknown Source) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) 	at dxpr.testautomation.utility.CommonMethods.selectFromDropDownMenu(CommonMethods.java:163) 	at dxpr.testautomation.pages.DragDropPageCreate.addPage(DragDropPageCreate.java:65) 	at dxpr.testautomation.chrome.ChromeTestBase.createDragDropPage(ChromeTestBase.java:86) 	at dxpr.testautomation.chrome.CarouselOutsideNavigationPositionTopLeftOptionTest.beforeClass(CarouselOutsideNavigationPositionTopLeftOptionTest.java:68) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62) 	at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385) 	at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321) 	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122) 	at java.util.ArrayList.forEach(ArrayList.java:1259) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28) 	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418) 	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) ```   ### Operating System  Linux runner on GitHub Action.  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome headless mode  ### What are the browser driver(s) and version(s) where you see this issue?  selenium/node-chrome:4.1.2-20220317  ### Are you using Selenium Grid?  selenium/hub:4.1.2-20220317","closed","G-chromedriver,","mhmelshaaerdxpr","2022-03-29T09:03:06Z","2022-04-29T00:11:13Z"
"","10269","[🐛 Bug]: Getting Shadow Root throws UnsupportedOperationException","### What happened?  I am getting error when script is executing 2 line.  1.WebElement shadowHost = driver.findElement(By.cssSelector(""#shadow_host"")); 2.SearchContext shadowRoot = shadowHost.getShadowRoot();  Error:java.lang.UnsupportedOperationException: getShadowRoot  Serinity 3.1.15(Selenium version 4.1.1) Chrome browser:97 Windows 10 Java:8 update 251  @titusfortner   ### How can we reproduce the issue?  ```shell Steps to reproduce:  1.Create an account with uipath cloud community application from this link https://cloud.uipath.com and login into application. 2.There you will find left side panel in that left side panel have shadow element. 3.Getting an error when I am trying to click one of the option which is present at left side panel. ```   ### Relevant log output  ```shell Error:java.lang.UnsupportedOperationException: getShadowRoot ```   ### Operating System  Windows 10  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 97.0.4692.99  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","PraveenHudgi1","2022-01-21T04:26:29Z","2022-02-22T00:08:50Z"
"","9988","[🐛 Bug]: Error while loading the running and queued Sessions from the Grid","### What happened?  I am getting an error when running webdriver.io based regression test suite. In this case, we have selenium grid and the browser nodes' instances set up in the Kubernetes cluster, there are 3 browser types consisting of chrome, edge and firefox. I set the test up to run against 2 instances of chrome and each time the test is fired it spins up 2 instances of chrome and runs about 4 tests before it crashes with the error message as:  ""There has been an error while loading the running and queued Sessions from the Grid. Unexpected token < in JSON at position 0""  Before this, I was getting spurious session queues with the session not cleaning up after the test might have stopped and eventual crashes. I managed this by including the following in my hook file:  afterSession: async function() {         // workaround to make sure the chromedriver shuts down         await browser.end().pause(1000);     },      after: async function() {         // workaround to make sure the chromedriver shuts down         await browser.pause(1000);     }, Then, I started getting the crashes as described above  ### How can we reproduce the issue?  ```shell This can be reproduced by setting up the selenium grid with the browsers' nodes in the Kubernetes cluster (in my case, I was testing against a remote selenium grid setup) and attempt to run a suite of webdriver.io cucumber scenarios based tests (12 or more tests) against it. ```   ### Relevant log output  ```shell There has been an error while loading the running and queued Sessions from the Grid. Unexpected token < in JSON at position 0 ```   ### Operating System  macOS BigSur  ### Selenium version  Selenium grid: 4.0.0-20211013, WebDriver.io, Nodejs vs 14.17.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94.0.4606.81  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.81  ### Are you using Selenium Grid?  Selenium grid: 4.0.0","closed","I-defect,","lawajs","2021-10-26T16:42:01Z","2022-02-10T00:07:24Z"
"","10419","[🐛 Bug]:","### What happened?  I am following an example on microsofts website for selenium 4. I am using the msEdgeDriver.exe for 99.0. I am using edge 99.0. it is a simple basic script. I am running in VsTools. The browser will launch, and it goes to the site. In the debugger though I am getting an error. ""Exception has occurred: NoSuchElementException Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""[id=""sb_form_q""]""}   (Session info: MicrosoftEdge=99.0.1150.30)""  Any help would be appreciated Here is the example I followed https://docs.microsoft.com/en-us/microsoft-edge/webdriver-chromium/?tabs=c-sharp.   ### How can we reproduce the issue?  ```shell Should not be hard. VSCODE, MS Edge, are both default installs.   #Testing new webdriver from selenium import webdriver from selenium.webdriver.common.by import By import time from selenium.webdriver.edge.service import Service  dPath = '.\msedgedriver99.exe' driver = webdriver.Edge(dPath) service = Service(executable_path=dPath) driver.get('https://www.google.com') element = driver.find_element(By.ID, 'sb_form_q') element.send_keys('WebDriver') element.submit()  time.sleep(5) driver.quit() ```   ### Relevant log output  ```shell Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""[id=""sb_form_q""]""}   (Session info: MicrosoftEdge=99.0.1150.30) Stacktrace: Backtrace: 	Microsoft::Applications::Events::EventProperties::unpack [0x005A4E63+58211] 	Microsoft::Applications::Events::ISemanticContext::SetCommonField [0x004837C1+1400481] 	Microsoft::Applications::Events::ILogConfiguration::operator* [0x0027406E+3470] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x0029DC30+100304] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x0029DDB0+100688] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x002C1252+245234] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x002B1D34+182484] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x002BFAD3+239219] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x002B1A66+181766] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x00294C66+63494] 	Microsoft::Applications::Events::GUID_t::GUID_t [0x002959F6+66966] 	Microsoft::Applications::Events::ISemanticContext::SetCommonField [0x0049D895+1507189] 	Microsoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x007212E2+115298] 	Microsoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00721046+114630] 	Microsoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00724D60+130272] 	Microsoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x0072197C+116988] 	Microsoft::Applications::Events::ISemanticContext::SetCommonField [0x00495237+1472791] 	Microsoft::Applications::Events::ISemanticContext::SetCommonField [0x004A0078+1517400] 	Microsoft::Applications::Events::ISemanticContext::SetCommonField [0x004A0202+1517794] 	Microsoft::Applications::Events::ISemanticContext::SetCommonField [0x004B1EB2+1590674] 	BaseThreadInitThunk [0x75A5FA29+25] 	RtlGetAppContainerNamedObjectPath [0x77177A9E+286] 	RtlGetAppContainerNamedObjectPath [0x77177A6E+238]   File ""C:\Users\TJ423JZ\OneDrive - EY\Documents\VSCode\Workspaces\Selenium 4 Test\seleniumTest.py"", line 11, in      element = driver.find_element(By.ID, 'sb_form_q') ```   ### Operating System  Windows 10  ### Selenium version  Python 3.10.2 VScode v1.64.2  ### What are the browser(s) and version(s) where you see this issue?  Edge 99.0  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver99  ### Are you using Selenium Grid?  4.0","closed","I-question,","quarinteen","2022-03-07T20:37:58Z","2022-04-08T00:10:39Z"
"","10581","[🐛 Bug]: Multiple sessions are not initializing using testng with selenium 4","### What happened?  I am facing tear down/Null pointer issues (org.openqa.selenium.SessionNotCreatedException) when running an entire class or a test suit which holds many methods on different browsers and devices. Tests are ran on saucelabs.  when a single method is run, it works absolutely fine but while running the entire class or a suite, it is not working. Also, few methods are passing (say like 3 methods) while the others are getting skipped or failed (going in tear down/Null Pointer or session not created). This is the same even if I am using maven plugin to run. Looks like the driver is not closing the session before starting a new one. What could be the possibilities ? am i missing anything?   [maven surefire plugin pom.txt](https://github.com/SeleniumHQ/selenium/files/8571086/maven.surefire.plugin.pom.txt) [testng.txt](https://github.com/SeleniumHQ/selenium/files/8571087/testng.txt)  `private ThreadLocal webDriver = new ThreadLocal();  	public WebDriver getWebDriver() { 		// Starts the ThreadLocal for checking the evidon banner as false 		hasEvidonBeenChecked.set(false); 		if (!BaseTest.isLocal) { 			return webDriver.get(); 		} else { 			return localWebDriver; 		} 	}  	@org.testng.annotations.Test(dataProvider = ""remoteBrowsers"", priority = 1) 	public void TestPractive(String browser, String version, String os, String platformversion, String devicename, 			Method method) throws InterruptedException, OfferNotFoundException, IOException, NullPointerException, 			IndexOutOfBoundsException, ArrayIndexOutOfBoundsException { 		this.createDriver(browser, version, os, platformversion, devicename, method.getName()); 		WebDriver driver = this.getWebDriver(); 		this.setupImplicitWait(driver, 20); 	}`  ### How can we reproduce the issue?  ```shell Try to run multiple methods using the config mentioned. ```   ### Relevant log output  ```shell FAILED: AT__Desktop_Test(""MicrosoftEdge"", ""latest-1"", ""Windows 10"", """", """", public void com.dell.tnt.tests.SoTest.Automation_Test.AT_30133_Desktop_Test(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.InterruptedException,com.dell.tnt.exceptions.OfferNotFoundException,java.io.IOException,java.lang.NullPointerException,java.lang.IndexOutOfBoundsException,java.lang.ArrayIndexOutOfBoundsException) org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.3', revision: '7b1ebf28ef' System info: host: 'W105482ZY2', ip: '192.168.29.171', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: MicrosoftEdge, browserVersion: latest-1, sauce:options: {name: AT_Premier_D..., platformName: Windows 10, resolution: 1920x1080}}], desiredCapabilities=Capabilities {browserName: MicrosoftEdge, browserVersion: latest-1, sauce:options: {name: AT_Premier_D..., platformName: Windows 10, resolution: 1920x1080}, seleniumVersion: 4.1.3}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at com.dell.tnt.tests.BaseTestNew.createDriver(BaseTestNew.java:619) 	at com.dell.tnt.tests.SoTest.Automation_Test.AT_Desktop_Test(Automation_Test.java:97) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:568) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77) 	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) 	at java.base/java.lang.Thread.run(Thread.java:833) Caused by: java.io.UncheckedIOException: java.io.IOException: Stream closed 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:124) 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	... 20 more Caused by: java.io.IOException: Stream closed 	at java.base/java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:168) 	at java.base/java.io.BufferedInputStream.reset(BufferedInputStream.java:444) 	at org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(NettyInputStreamBody.java:61) 	at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:433) 	at org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithOpenChannel(NettyRequestSender.java:260) 	at org.asynchttpclient.netty.request.NettyRequestSender.sendRequestWithCertainForceConnect(NettyRequestSender.java:142) 	at org.asynchttpclient.netty.request.NettyRequestSender.sendRequest(NettyRequestSender.java:114) 	at org.asynchttpclient.netty.request.NettyRequestSender.sendNextRequest(NettyRequestSender.java:562) 	at org.asynchttpclient.netty.request.NettyRequestSender$3.lambda$call$0(NettyRequestSender.java:643) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605) 	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104) 	at io.netty.handler.ssl.SslHandler.setHandshakeSuccess(SslHandler.java:1828) 	at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1359) 	at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1235) 	at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1284) 	at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:510) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:449) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:279) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:722) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	... 1 more ```   ### Operating System  Windows 10  ### Selenium version  Java 17.0.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100, Firefox 91.7  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 100.0, geckodriver 0.30  ### Are you using Selenium Grid?  4.1.3","closed","I-defect,","sonali9293","2022-04-27T10:23:26Z","2022-06-06T00:10:15Z"
"","10411","[🐛 Bug]: SessionNotCreatedException for Edge in IE Mode","### What happened?  I am facing issue while automating the application using Selenium 4 in IE mode in Microsoft Edge with Internet Explorer Driver.  I have followed the steps given in the [Microsoft Blog](https://blogs.windows.com/msedgedev/2022/02/01/test-ie-mode-in-microsoft-edge-internet-explorer-driver/)  but still not able to get the results. Language Used- JAVA Browser- IE Compatibility Mode   Code Snippet-   public static void main(String[] args) {                 InternetExplorerOptions ieOptions = new InternetExplorerOptions();         ieOptions.attachToEdgeChrome();         ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");                  WebDriver driver = new InternetExplorerDriver(ieOptions);         driver.get(""http://www.bing.com"");         WebElement elem = driver.findElement(By.id(""sb_form_q""));         elem.sendKeys(""IE mode"", Keys.RETURN);         driver.close();     } Issue: I am able to launch the browser in ""Edge compatibility mode"" but not able to move further. The screen is stuck on the page with following error:   ""This is the initial start page for the WebDriver server"".  ![image](https://user-images.githubusercontent.com/63354414/156769485-5c7d2c43-4816-43e6-a0d9-e277f3165e7b.png)   ### How can we reproduce the issue?  ```shell import org.openqa.selenium.By; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerOptions; public class IEDriverSample {     public static void main(String[] args) {                 InternetExplorerOptions ieOptions = new InternetExplorerOptions();         ieOptions.attachToEdgeChrome();         ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");                  WebDriver driver = new InternetExplorerDriver(ieOptions);         driver.get(""http://www.bing.com"");         WebElement elem = driver.findElement(By.id(""sb_form_q""));         elem.sendKeys(""IE mode"", Keys.RETURN);         driver.close();     } } ```   ### Relevant log output  ```shell NA ```   ### Operating System  Windows 10  ### Selenium version               org.seleniumhq.selenium             selenium-java             4.1.2           ### What are the browser(s) and version(s) where you see this issue?  IE Mode in Edge  ### What are the browser driver(s) and version(s) where you see this issue?  IE Driver 4.0.0.0   ### Are you using Selenium Grid?  No","closed","D-edge,","AradhanaJamwal","2022-03-04T13:25:22Z","2022-04-29T00:11:12Z"
"","9986","[🐛 Bug]:","### What happened?  I am executing a script in Selenium Remotedriver and getting an error:    ### How can we reproduce the issue?  ```shell self.driver.execute_script(""Object.defineProperty(navigator, 'webdriver', {get: () => undefined})"") ```   ### Relevant log output  ```shell selenium.common.exceptions.JavascriptException: Message: javascript error: Cannot redefine property: webdriver   (Session info: chrome=89.0.4389.90) ```   ### Operating System  Ubuntu 20.04  ### Selenium version  selenium==4.0.0b4  ### What are the browser(s) and version(s) where you see this issue?  chrome=89.0.4389.90  ### What are the browser driver(s) and version(s) where you see this issue?  chrome=89.0.4389.90  ### Are you using Selenium Grid?  selenium_grid_url = ""http://198.0.0.1:4444/wd/hub""","closed","needs-triaging,","dalvarezdc","2021-10-26T15:30:01Z","2021-11-26T00:06:36Z"
"","9934","[🐛 Bug]: HasAuthentication is not working for Chromium browsers when they are executed in Selenium Grid","### What happened?  I am able to use register method from HasAuthentication interface using chromium drivers running on local machine. But when i try to use chromium browser (edge/chrome) which is part of selenium grid I am getting the following error when I try to use HasAuthentication interface.  Code where the test fails: `((HasAuthentication) webDriver).register(() -> new UsernameAndPassword(""admin"", ""admin""));`  Error:  `java.lang.ClassCastException: class org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$gPlLDnEY cannot be cast to class org.openqa.selenium.HasAuthentication (org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$gPlLDnEY is in unnamed module of loader net.bytebuddy.dynamic.loading.ByteArrayClassLoader @77681ce4; org.openqa.selenium.HasAuthentication is in unnamed module of loader 'app')`  ### How can we reproduce the issue?  ```shell How to reproduce the problem: * Run a selenium grid (standalone / hub&node mode - does not matter) `java -jar selenium-server.jar standalone --detect-drivers true` * Execute the code below using selenium-java 4  Code Example `WebDriver webDriver = RemoteWebDriver                  .builder()                  .augmentUsing(new Augmenter())                  .oneOf(new ChromeOptions())                  .address(new URL(""http://localhost:4444""))                  .build(); ((HasAuthentication) webDriver).register(() -> new UsernameAndPassword(""admin"", ""admin"")); webDriver.get(""https://the-internet.herokuapp.com/basic_auth"");` ```   ### Relevant log output  ```shell java.lang.ClassCastException: class org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$E2NldVid cannot be cast to class org.openqa.selenium.HasAuthentication (org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$E2NldVid is in unnamed module of loader net.bytebuddy.dynamic.loading.ByteArrayClassLoader @2d38edfd; org.openqa.selenium.HasAuthentication is in unnamed module of loader 'app')  	at com.isobar.commerce.selenium.tests.FeaturesTests.test(FeaturesTests.java:175) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541) 	at org.testng.TestRunner.privateRun(TestRunner.java:764) 	at org.testng.TestRunner.run(TestRunner.java:585) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337) 	at org.testng.SuiteRunner.run(SuiteRunner.java:286) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140) 	at org.testng.TestNG.runSuites(TestNG.java:1069) 	at org.testng.TestNG.run(TestNG.java:1037) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) ```   ### Operating System  Windows 10 / MacOS BigSur 11.3.1   ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 94.0.4606.61  ### Are you using Selenium Grid?  Yes - 4.0.0","closed","C-java,","NikolayStanoev","2021-10-15T07:11:42Z","2022-01-02T00:07:53Z"
"","10915","[🐛 Bug]: Memory leak when clicking an element (NodeJS)","### What happened?  I added a simple piece of code to my NodeJS app, and for some reason, the line that clicks on an element triggers some kind of memory leak in my application. The image below describes the amount of free/used memory in my application, before and after commenting item.click(); (full snippet below) Enabling the item.click() method to download an item by clicking drains up to 2 GB of memory!!  ![image](https://user-images.githubusercontent.com/6171883/181904955-e48c49cd-b87b-4d70-ac31-48f6c9a6d485.png)  ``` const scanItems = async () => {     onDownloadStart();     const items = await global.driver.findElements(By.css('.webgrid tbody tr a'));     console.log(`Found ${items.length} items`);     for (const item of items) {         try {             await item.click(); // The graph above shows the memory usage when comment / not commenting this line             await sleep(300);             increaseDownloadedCount();         } catch (e) {             console.log('Bad item found, skip', e);         }     } } ```  ### How can we reproduce the issue?  Navigate with selenium to `http://prices.shufersal.co.il/`, then try clicking the links in the table: ```shell    const scanItems = async () => {     onDownloadStart();     const items = await global.driver.findElements(By.css('.webgrid tbody tr a'));     console.log(`Found ${items.length} items`);     for (const item of items) {         try {             // await item.click();             await sleep(300);             increaseDownloadedCount();         } catch (e) {             console.log('Bad item found, skip', e);         }     } }  '--no-sandbox', '--disable-dev-shm-usage', 'log-path=chromedriver.log',         '--window-size=1920,1080',         '--ignore-certificate-errors',         'safebrowsing-disable-extension-blacklist',         'safebrowsing-disable-download-protection',         '--disable-logging',         '--disable-gpu',         '--disable-extensions',         '--log-level=2',         '--no-sandbox',         '--headless'];   Uncommenting `await item.click();` triggers a memory leak. `item.click()` performs a file download on a specific web page. ```   ### Relevant log output (log level was set to 3) ```Starting Selenium Grid Standalone... 09:59:53.915 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 09:59:53.921 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 09:59:54.772 INFO [NodeOptions.getSessionFactories] - Detected 4 available processors 09:59:54.844 INFO [NodeOptions.report] - Adding chrome for {""browserVersion"": ""103.0"",""se:noVncPort"": 7900,""browserName"": ""chrome"",""platformName"": ""LINUX"",""se:vncEnabled"": true} 1 times 09:59:54.867 INFO [Node.] - Binding additional locator mechanisms: relative, name, id 09:59:54.894 INFO [GridModel.setAvailability] - Switching Node 6d373c28-d167-4df3-bcb9-fb276f332a64 (uri: http://172.18.0.5:4444) from DOWN to UP 09:59:54.895 INFO [LocalDistributor.add] - Added node 6d373c28-d167-4df3-bcb9-fb276f332a64 at http://172.18.0.5:4444. Health check every 120s 09:59:55.076 INFO [Standalone.execute] - Started Selenium Standalone 4.3.0 (revision a4995e2c09*): http://172.18.0.5:4444 10:00:36.689 INFO [LocalDistributor.newSession] - Session request received by the Distributor:  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-sandbox, --disable-dev-shm-usage, log-path=chromedriver.log, --window-size=1920,1080, --ignore-certificate-errors, safebrowsing-disable-extens..., safebrowsing-disable-downlo..., --disable-logging, --disable-gpu, --disable-extensions, --log-level=3, --no-sandbox, --headless], prefs: {download.default_directory: /home/seluser/Downloads, download.prompt_for_download: false, profile.default_content_settings.popups: 0, safebrowsing.enabled: true}}}] Starting ChromeDriver 103.0.5060.53 (a1711811edd74ff1cf2150f36ffa3b0dae40b17f-refs/branch-heads/5060@{#853}) on port 44468 Only local connections are allowed. Please[ s1e6e5 9h1t7t5p236s.:7/2/8c]h[rSoEmVeEdRrEi]v:e rb.icnhdr(o)m ifuami.loerdg:/ sCeacnunroitty -acsosnisgind erreaqtuieosnted address (99) s for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 10:00:37.233 INFO [ProtocolHandshake.createSession] - Detected upstream dialect: W3C 10:00:37.253 INFO [LocalNode.newSession] - Session created by the Node. Id: 86004dcb57ef8139e22a086407c15191, Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.53, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: /tmp/.com.google.Chrome.YSa5c9}, goog:chromeOptions: {debuggerAddress: localhost:38692}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: http://localhost:38692, se:cdpVersion: 103.0.5060.53, se:vncEnabled: true, se:vncLocalAddress: ws://172.18.0.5:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 10:00:37.261 INFO [LocalDistributor.newSession] - Session created by the Distributor. Id: 86004dcb57ef8139e22a086407c15191  Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 103.0.5060.53, chrome: {chromedriverVersion: 103.0.5060.53 (a1711811edd7..., userDataDir: /tmp/.com.google.Chrome.YSa5c9}, goog:chromeOptions: {debuggerAddress: localhost:38692}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: LINUX, proxy: Proxy(), se:cdp: ws://172.18.0.5:4444/sessio..., se:cdpVersion: 103.0.5060.53, se:vnc: ws://172.18.0.5:4444/sessio..., se:vncEnabled: true, se:vncLocalAddress: ws://172.18.0.5:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} ```  ### Operating System  CentOS 7  ### Selenium version   ""selenium-webdriver"": ""4.3.1"", selenium/standalone-chrome:4.3.0-20220624  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103  ### What are the browser driver(s) and version(s) where you see this issue?  chrome diver 103  ### Are you using Selenium Grid?  selenium/standalone-chrome:4.3.0-20220624 (not sure if that what you mean)","closed","G-chromedriver,","theunreal","2022-07-30T09:56:42Z","2022-08-03T03:54:20Z"
"","10753","[🐛 Bug]: Seleniun nodejs move action documentation or implementation is incorrect","### What happened?  https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html  this.move( options ) → Actions  **The move options. Defaults to moving the mouse to the top-left corner of the viewport over 100ms.**  The documentation says the default implementation of move is to , move to top left of the view port. But the implemenation is :  https://github.com/SeleniumHQ/selenium/blob/be408c02a10b7ae36578306f4d78ccd78d5fb690/javascript/node/selenium-webdriver/lib/input.js#L878    ``` move({ x = 0, y = 0, duration = 100, origin = Origin.VIEWPORT } = {}) {     return this.insert(       this.mouse_,       this.mouse_.move({ x, y, duration, origin })     )   } ``` its moving 0,0 relative pixel relative to view port . So its not moving to top left corner but remains at the center of the viewport  ### How can we reproduce the issue?  ```shell N/A ```   ### Relevant log output  ```shell N/A ```   ### Operating System  MacOS  ### Selenium version  Selenium 4 , Nodejs  ### What are the browser(s) and version(s) where you see this issue?  All browsers  ### What are the browser driver(s) and version(s) where you see this issue?  Latest chromedriver  ### Are you using Selenium Grid?  No","closed","","praveendvd","2022-06-09T11:17:23Z","2022-07-14T00:15:05Z"
"","10059","How to make window.navigator.webdriver=false","### What happened?  How to make window.navigator.webdriver=false  ### How can we reproduce the issue?  ```shell How to make window.navigator.webdriver=false ```   ### Relevant log output  ```shell How to make window.navigator.webdriver=false ```   ### Operating System  win10  ### Selenium version  selenium-java 3.141.59  ### What are the browser(s) and version(s) where you see this issue?  chrome 90  firfox88  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 94  ### Are you using Selenium Grid? selenium-java 3.141.59","closed","I-question,","RoeGross","2021-11-19T05:30:31Z","2021-12-20T00:07:30Z"
"","10437","[🐛 Bug]: RetryRequest -> unlimited retries?","### What happened?  Hi.  I configured RemoteWebDriver with: 1) socks5 proxy server 2) pageLoadTimeout = 180s.  Everything is ok, but one of my driver->get() request ""stalled"" due to ""problems"" with proxy server. And it seems selenium tries to execute that request indefinitely. ( RetryRequest class ) This is not what i wanted after setting pageLoadTimeout to 180s. I expected to get TimeoutException from webdriver after 180s.  Question: how to avoid that unexpected behaviour?  Logs attached.  ### How can we reproduce the issue?  ```shell Not possible to reproduce due to problems related to specific proxy server. ```   ### Relevant log output  ```shell 2022-03-11 11:24:07,360	org.openqa.selenium.remote.http.RetryRequest	Failure due to server error #1. Retrying. 2022-03-11 11:27:09,366	org.openqa.selenium.remote.http.RetryRequest	Failure due to server error #2. Retrying. 2022-03-11 11:30:11,367	org.openqa.selenium.remote.http.RetryRequest	Read timeout #3. Retrying. 2022-03-11 11:33:15,368	org.openqa.selenium.remote.http.RetryRequest	Read timeout #4. Retrying. 2022-03-11 11:36:19,369	org.openqa.selenium.remote.http.RetryRequest	Read timeout #5. Retrying. 2022-03-11 11:39:20,371	org.openqa.selenium.remote.http.RetryRequest	Failure due to server error #1. Retrying. 2022-03-11 11:42:21,372	org.openqa.selenium.remote.http.RetryRequest	Failure due to server error #1. Retrying. 2022-03-11 11:45:23,372	org.openqa.selenium.remote.http.RetryRequest	Failure due to server error #2. Retrying. 2022-03-11 11:48:25,373	org.openqa.selenium.remote.http.RetryRequest	Read timeout #3. Retrying. 2022-03-11 11:51:29,374	org.openqa.selenium.remote.http.RetryRequest	Read timeout #4. Retrying. 2022-03-11 11:54:33,374	org.openqa.selenium.remote.http.RetryRequest	Read timeout #5. Retrying. 2022-03-11 11:57:35,375	org.openqa.selenium.remote.http.RetryRequest	Failure due to server error #2. Retrying. ```   ### Operating System  Ubuntu  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.102  ### Are you using Selenium Grid?  4.1.2","closed","I-defect,","ogolovanov","2022-03-11T17:56:50Z","2022-04-24T00:12:00Z"
"","10452","[🐛 Bug]: DevTools -> Network.ResponseReceived -> Headers -> Where ""Set-cookie"" headers?","### What happened?  Hi.  I am experimenting with devtools + network.  Simple network listener like: ``` devTools.addListener(Network.responseReceived(), responseReceieved -> {     System.out.println(""Response Url: "" + responseReceieved.getResponse().getUrl());     System.out.println(""Response Headers: "" + responseReceieved.getResponse().getHeaders().toString());     System.out.println(""-------------------------------------------------""); }); ```  Problem: ""set-cookie"" headers missed in response headers. Lets take ""https://github.com/"" url as example. ( you can take any other ).  Expected response headers ( manually taken from chrome devtools ): ``` accept-ranges: bytes cache-control: max-age=0, private, must-revalidate content-encoding: gzip content-language: en-US content-security-policy: default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src github.com/assets-cdn/worker/ gist.github.com/assets-cdn/worker/; connect-src 'self' uploads.github.com objects-origin.githubusercontent.com www.githubstatus.com collector.githubapp.com collector.github.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events translator.github.com wss://alive.github.com github.githubassets.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com objects-origin.githubusercontent.com; frame-ancestors 'none'; frame-src render.githubusercontent.com viewscreen.githubusercontent.com notebooks.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com collector.github.com github-cloud.s3.amazonaws.com secured-user-images.githubusercontent.com/ *.githubusercontent.com customer-stories-feed.github.com spotlights-feed.github.com; manifest-src 'self'; media-src github.com user-images.githubusercontent.com/ github.githubassets.com; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/assets-cdn/worker/ gist.github.com/assets-cdn/worker/ content-type: text/html; charset=utf-8 date: Wed, 16 Mar 2022 16:49:29 GMT etag: W/""ca18a265c1c3bbb76c8b41b09f58ad23"" expect-ct: max-age=2592000, report-uri=""https://api.github.com/_private/browser/errors"" permissions-policy: interest-cohort=() referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin server: GitHub.com set-cookie: _gh_sess=gkhtvcMb1G2V6SshHnVIXQEVt0qn7Az2ngl46Pq4Wme4hOy39%2BBK4FI4%2BB6%2B%2F6a7dfi77ZL2mBwg3ONdHCtSuFNJhJqt6sltWTMcjlhLnBZT%2F85FV10uUzqCqsIK0EouNh1fHYDPqsbc%2B4ImAPK23r%2FZbdQcJvHW3ulvhx6Wu3s9FSR6rcRdyUYJSutpgrotnYIjOqRg5CoFbk5wXyUczoSRQSm49H5WuW01mz7EjwXEPzSbJaUUgdVPQb%2FPLVTW2XZs5HixrL5WKXFSQgzv%2BQ%3D%3D--FFkr3kb3E%2B6reUtZ--xnB9I9R%2BE7%2FJ%2BbUMKwzhsA%3D%3D; Path=/; HttpOnly; Secure; SameSite=Lax set-cookie: _octo=GH1.1.2113641044.1647449369; Path=/; Domain=github.com; Expires=Thu, 16 Mar 2023 16:49:29 GMT; Secure; SameSite=Lax set-cookie: logged_in=no; Path=/; Domain=github.com; Expires=Thu, 16 Mar 2023 16:49:29 GMT; HttpOnly; Secure; SameSite=Lax strict-transport-security: max-age=31536000; includeSubdomains; preload vary: X-PJAX, X-PJAX-Container, Accept-Language, Accept-Encoding, Accept, X-Requested-With x-content-type-options: nosniff x-frame-options: deny x-github-request-id: 0E1F:544B:177A4B0:18A681A:62321519 x-xss-protection: 0 ```  Webdriver returns headers like this: ``` server: GitHub.com date: Wed, 16 Mar 2022 16:57:41 GMT content-type: text/html; charset=utf-8 vary: X-PJAX, X-PJAX-Container, Accept-Language, Accept-Encoding, Accept, X-Requested-With permissions-policy: interest-cohort=() content-language: en-US etag: W/""8151f04e985e9edaabe192ea43fa66e4"" cache-control: max-age=0, private, must-revalidate strict-transport-security: max-age=31536000; includeSubdomains; preload x-frame-options: deny x-content-type-options: nosniff x-xss-protection: 0 referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin expect-ct: max-age=2592000, report-uri=""https://api.github.com/_private/browser/errors"" content-security-policy: default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src github.com/assets-cdn/worker/ gist.github.com/assets-cdn/worker/; connect-src 'self' uploads.github.com objects-origin.githubusercontent.com www.githubstatus.com collector.githubapp.com collector.github.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events translator.github.com wss://alive.github.com github.githubassets.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com objects-origin.githubusercontent.com; frame-ancestors 'none'; frame-src render.githubusercontent.com viewscreen.githubusercontent.com notebooks.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com collector.github.com github-cloud.s3.amazonaws.com secured-user-images.githubusercontent.com/ *.githubusercontent.com customer-stories-feed.github.com spotlights-feed.github.com; manifest-src 'self'; media-src github.com user-images.githubusercontent.com/ github.githubassets.com; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/assets-cdn/worker/ gist.github.com/assets-cdn/worker/ content-encoding: gzip accept-ranges: bytes x-github-request-id: B4F2:7FD2:EE7AE8:FCBBA4:6232170A ````  So, there are 2 question: 1) why set-cookie headers missed 2) how can i get headers in fully raw form? So without missing headers and with correct headers order.  Thanks.  ### How can we reproduce the issue?  ```shell all info in main description ```   ### Relevant log output  ```shell all info in main description ```   ### Operating System  Ubuntu  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.102  ### Are you using Selenium Grid?  4.1.2","closed","C-devtools,","ogolovanov","2022-03-16T17:09:14Z","2022-04-24T00:11:57Z"
"","10803","[🐛 Bug]: artifact version 4.3.0 not committed to org.seleniumhq.selenium yet","### What happened?  Hi, my chrome upgraded to Version 103.0.5060.53, and I also upgraded my local Chrome driver to the same version, https://chromedriver.storage.googleapis.com/index.html?path=103.0.5060.53/   I noticed that only v4.3.0 support 103, (https://github.com/SeleniumHQ/selenium/blob/trunk/java/CHANGELOG ), v 4.3.0 only got checked in a few hours ago. I can't pull out this version from maven artifact yet.   Please check in.    Thank you      ### How can we reproduce the issue?  ```shell  		    org.seleniumhq.selenium 		    selenium-api 		    4.3.0  [{ 	""resource"": ""/Users/../Projects/apimportalautotest/portaltest"", 	""owner"": ""_generated_diagnostic_collection_name_#2"", 	""code"": ""964"", 	""severity"": 8, 	""message"": ""The container 'Maven Dependencies' references non existing library '/Users/...m2/repository/org/seleniumhq/selenium/selenium-api/4.3.0/selenium-api-4.3.0.jar'"", 	""source"": ""Java"", 	""startLineNumber"": 1, 	""startColumn"": 1, 	""endLineNumber"": 1, 	""endColumn"": 1 }] ```   ### Relevant log output  ```shell  		    org.seleniumhq.selenium 		    selenium-api 		    4.3.0  [{ 	""resource"": ""/Users/..Projects/apimportalautotest/portaltest"", 	""owner"": ""_generated_diagnostic_collection_name_#2"", 	""code"": ""964"", 	""severity"": 8, 	""message"": ""The container 'Maven Dependencies' references non existing library '/Users/../.m2/repository/org/seleniumhq/selenium/selenium-api/4.3.0/selenium-api-4.3.0.jar'"", 	""source"": ""Java"", 	""startLineNumber"": 1, 	""startColumn"": 1, 	""endLineNumber"": 1, 	""endColumn"": 1 }] ```   ### Operating System  MAC  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  Version 103.0.5060.53  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome  Version 103.0.5060.53  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","hollyhw15","2022-06-23T16:49:18Z","2022-07-25T00:12:33Z"
"","10859","[🐛 Bug]: Selenium 4 integration with Sauce Labs","### What happened?  Hi, I am trying to run the test scripts developed using Selenium 4 in sauce labs but getting ""Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.""  I took the sample scripts from official documentation from sauce labs and passed userid, accesskey and proxy but still getting error  Pls help me to get resolve this issue. Thanks  ### How can we reproduce the issue?  ```shell public class RunMethod { 	  	public static void main(String[] args) throws MalformedURLException { 	 		String sauce_userid =""TestUser""; 		String sauce_accesskey=""TestPassword"";   //    	String URL = ""http://"" + sauce_userid + "":"" + sauce_accesskey+""@ondemand.saucelabs.com:80/wd/hub""; 		 		Proxy proxy = new Proxy(); 		ChromeOptions options = new ChromeOptions();         options.setPlatformName(""Windows 10"");         options.setBrowserVersion(""latest"");         proxy.setHttpProxy(""TestProxy:8080"");         options.setCapability(""proxy"", proxy);          Map sauceOptions = new HashMap();                  sauceOptions.put(""username"", sauce_userid);         sauceOptions.put(""accessKey"", sauce_accesskey);                sauceOptions.put(""Test name"", ""Selenium 4 Integration with sauce labs"");         options.setCapability(""sauce:options"", sauceOptions);                  URL url = new URL(""http://ondemand.saucelabs.com:80/wd/hub"");         WebDriver      driver = new RemoteWebDriver(url, options);              driver.get(""https://www.google.com"");         System.out.println(driver.getTitle());     }  	 } ```   ### Relevant log output  ```shell Jul 08, 2022 12:51:18 PM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer INFO: Using OpenTelemetry for tracing SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.4', revision: '535d840ee2' java.version: '1.8.0_172' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [], extensions: []}, platformName: windows 10, proxy: {httpProxy: .root.corp..., proxyType: manual}, sauce:options: {Test name: Selenium 4 Integration with..., accessKey: ..., username: sso-accounts-...}}], desiredCapabilities=Capabilities {browserName: chrome, browserVersion: latest, goog:chromeOptions: {args: [], extensions: []}, platformName: Windows 10, proxy: Proxy(manual, http=cproxy..., sauce:options: {Test name: Selenium 4 Integration with..., accessKey: ..., username: sso-accounts-...}}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:585) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:248) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:146) 	at SampleSauceLabsCode.SampleSauceLabsCode.RunMethod.main(RunMethod.java:43) Caused by: java.io.UncheckedIOException: java.io.IOException: Stream closed 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:73) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:97) 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	... 4 more Caused by: java.io.IOException: Stream closed 	at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170) 	at java.io.BufferedInputStream.reset(BufferedInputStream.java:446) 	at org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(NettyInputStreamBody.java:61) 	at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:433) 	at org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(NettyConnectListener.java:80) 	at org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(NettyConnectListener.java:156) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onSuccess(NettyChannelConnector.java:92) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:26) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605) 	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104) 	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:300) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:335) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748) Picked up JAVA_TOOL_OPTIONS: -Djava.vendor=""Sun Microsystems Inc"" ```   ### Operating System  Windows 10  ### Selenium version  latest  ### What are the browser(s) and version(s) where you see this issue?  latest  ### What are the browser driver(s) and version(s) where you see this issue?  RemoteWebDriver  ### Are you using Selenium Grid?  _No response_","closed","I-question,","KiranRCChavan","2022-07-08T17:01:08Z","2022-07-13T12:49:39Z"
"","10222","[🐛 Bug]: If LoggingPrefs is set, the profile gets lost [Java, Firefox]","### What happened?  Hi,  i think i found a bug in the latest 4.1.1 Java Version:  I have following piece of code working with v3.x:  ``` FirefoxOptions options = new FirefoxOptions(); FirefoxProfile profile = new FirefoxProfile(); String downloadDir = ""/path/to/my/dir/""; profile.setPreference(""browser.download.dir"", downloadDir); options.addPreference(""browser.download.dir"", downloadDir); options.setLogLevel(FirefoxDriverLogLevel.TRACE); LoggingPreferences logs = new LoggingPreferences(); Level level = Level.ALL; logs.enable(LogType.DRIVER, level); logs.enable(LogType.CLIENT, level); logs.enable(LogType.BROWSER, level); logs.enable(LogType.SERVER, level); logs.enable(LogType.PERFORMANCE, level); logs.enable(LogType.PROFILER, level); options.setCapability(CapabilityType.LOGGING_PREFS, logs); options.setProfile(profile); new FirefoxDriver(options); ```  as said, this works with v3.x, but in v4.x the profile is not transferred to firefox, the configuration entry `browser.download.dir` remains unset. and if i remove the line ``` options.setCapability(CapabilityType.LOGGING_PREFS,  logs); ``` then it works fine again.  how can it be that this breaks the profile?  am i doing something wrong here?  i see also the same behaviour using a grid.  many thanks Michael  ### How can we reproduce the issue?  ```shell FirefoxOptions options = new FirefoxOptions(); FirefoxProfile profile = new FirefoxProfile(); String downloadDir = ""/path/to/my/dir/""; profile.setPreference(""browser.download.dir"", downloadDir); options.addPreference(""browser.download.dir"", downloadDir); options.setLogLevel(FirefoxDriverLogLevel.TRACE); LoggingPreferences logs = new LoggingPreferences(); Level level = Level.ALL; logs.enable(LogType.DRIVER, level); logs.enable(LogType.CLIENT, level); logs.enable(LogType.BROWSER, level); logs.enable(LogType.SERVER, level); logs.enable(LogType.PERFORMANCE, level); logs.enable(LogType.PROFILER, level); options.setCapability(CapabilityType.LOGGING_PREFS, logs); options.setProfile(profile); new FirefoxDriver(options); ```   ### Relevant log output  ```shell 1641376474543	geckodriver	INFO	Listening on 127.0.0.1:51609 1641376480277	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""-no-remote"" ""-profile"" ""C:\\Users\\moossenm\\AppData\\Local\\Temp\\rust_mozprofileJd5B9U"" 1641376480749	Marionette	INFO	Marionette enabled console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at C:\\Users\\moossenm\\AppData\\Local\\Temp\\rust_mozprofileJd5B9U\\search.json.mozlz4"", (void 0))) 1641376483121	Marionette	INFO	Listening on port 50851 1641376483410	RemoteAgent	WARN	TLS certificate errors will be ignored for this session ```   ### Operating System  Windows 10, RedHat7  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox 95.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  4.1.0","closed","D-firefox,","moossenm","2022-01-05T09:57:13Z","2022-06-30T00:12:22Z"
"","10370","[🐛 Bug]:","### What happened?  Hi,   I'm getting currently the error when i start Selenium Grid in multithreading environment:   ``` Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.1.2', revision: '9a5a329c5a' System info: host: 'LAPTOP-RPMS0778', ip: '10.0.0.19', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.14' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}], desiredCapabilities=Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}, platformName: ANY}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:576) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:161) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143) 	at MainApp$1.run(MainApp.java:39) 	... 1 more Caused by: java.io.UncheckedIOException: java.io.IOException: Stream closed 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:80) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80) 	at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.Execution.executeSync(Execution.java:128) 	at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379) 	at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:80) 	at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.Execution.executeSync(Execution.java:128) 	at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379) 	at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:80) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:110) 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558) 	... 5 more Caused by: java.io.IOException: Stream closed 	at java.base/java.io.BufferedInputStream.getInIfOpen(BufferedInputStream.java:165) 	at java.base/java.io.BufferedInputStream.available(BufferedInputStream.java:416) 	at java.base/java.io.FilterInputStream.available(FilterInputStream.java:167) 	at java.base/java.io.PushbackInputStream.available(PushbackInputStream.java:274) 	at io.netty.handler.stream.ChunkedStream.isEndOfInput(ChunkedStream.java:82) 	at io.netty.handler.stream.ChunkedStream.readChunk(ChunkedStream.java:109) 	at io.netty.handler.stream.ChunkedStream.readChunk(ChunkedStream.java:36) 	at io.netty.handler.stream.ChunkedWriteHandler.doFlush(ChunkedWriteHandler.java:229) 	at io.netty.handler.stream.ChunkedWriteHandler.flush(ChunkedWriteHandler.java:131) 	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750) 	at io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765) 	at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:790) 	at io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:758) 	at io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1020) 	at io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:311) 	at org.asynchttpclient.netty.request.body.NettyInputStreamBody.write(NettyInputStreamBody.java:77) 	at org.asynchttpclient.netty.request.NettyRequestSender.writeRequest(NettyRequestSender.java:433) 	at org.asynchttpclient.netty.channel.NettyConnectListener.writeRequest(NettyConnectListener.java:80) 	at org.asynchttpclient.netty.channel.NettyConnectListener.onSuccess(NettyConnectListener.java:156) 	at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onSuccess(NettyChannelConnector.java:92) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:26) 	at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	at io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605) 	at io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104) 	at io.netty.channel.DefaultChannelPromise.trySuccess(DefaultChannelPromise.java:84) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:300) 	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:335) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:710) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:658) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:584) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:496) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	... 1 more ```  - Any idea why is happening ?   Currently i used the  YAML file from official docker/SeleniumHQ  ""k8s-deployment-full-grid.yaml (https://github.com/SeleniumHQ/docker-selenium).   My java code lokk like:   ``` import java.net.URL; import java.time.Duration;  import org.openqa.selenium.Platform; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.remote.HttpSessionId; import org.openqa.selenium.remote.RemoteWebDriver; import org.openqa.selenium.remote.RemoteWebDriverBuilder; import org.openqa.selenium.remote.http.ClientConfig;  public class MainApp {  	public static void main(String[] args) { 		 		for(int i=0;i","closed","R-awaiting answer,","Doko2022","2022-02-17T08:58:31Z","2022-03-24T00:09:23Z"
"","10344","[🐛 Bug]: MoveToElement - RemoteWebDriver threw an exception of type 'System.InvalidOperationException'","### What happened?  Hi, I'm using code below for move to element, but actionExecutor returns an exception. Chromedriver version: 98.0.4758.48 win32 Can you help me, please? ![actionExecutor_exception](https://user-images.githubusercontent.com/3882110/153233507-716c3b95-ac6e-4748-8000-074b9fdf0a0c.png)    ### How can we reproduce the issue?  ```shell IWebElement element = driver.FindElement(By.LinkText(link_text)); Actions ac = new Actions(driver); ac.MoveToElement(element); ac.Build().Perform(); ``` ```   ### Relevant log output  ```shell ac > actionExecutor  ApplicationCache = '((OpenQA.Selenium.Remote.RemoteWebDriver)ac.actionExecutor).ApplicationCache' threw an exception of type 'System.InvalidOperationException' LocationContext = '((OpenQA.Selenium.Remote.RemoteWebDriver)ac.actionExecutor).LocationContext' threw an exception of type 'System.InvalidOperationException' ```   ### Operating System  Windows 10  ### Selenium version  3.14  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.48  ### Are you using Selenium Grid?  No","closed","I-defect,","mariankral","2022-02-09T15:30:20Z","2022-04-07T00:11:48Z"
"","10283","[🐛 Bug]: firefox flapak does not go to page","### What happened?  Hi, I would like to use selenium against firefox installed using flatpak. Using the scripts below, firefox is opened but it does not continue, seems stuck waiting for firefox to be opened.   ### How can we reproduce the issue?  ```shell python -m venv /tmp/env source /tmp/env/bin/activate pip install --no-cache selenium webdriver-manager  python firefox.py ```  `firefox.py`: ```python from selenium import webdriver from selenium.webdriver.firefox.options import Options from selenium.webdriver.firefox.service import Service from webdriver_manager.firefox import GeckoDriverManager  options = Options() options.binary_location = ""/var/lib/flatpak/exports/bin/org.mozilla.firefox"" options.add_argument(""-profile /home/vasco/.mozilla"") options.add_argument(""-private"")  service = Service(GeckoDriverManager().install())  with webdriver.Firefox(options=options, service=service) as driver:     driver.maximize_window()     driver.get(""http://google.com/ncr"")     driver.quit() ```   ### Relevant log output  ```shell ====== WebDriver manager ====== Could not get version for firefox with the any command: firefox --version Current firefox version is UNKNOWN Get LATEST geckodriver version for UNKNOWN firefox Driver [/home/vasco/.wdm/drivers/geckodriver/linux64/v0.30.0/geckodriver] found in cache ```   ### Operating System  Gentoo  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 96.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","yellowhat","2022-01-24T20:04:02Z","2022-03-15T00:09:45Z"
"","10223","[🐛 Bug]: getShadowRoot() on Firefox throws UnsupportedCommandException","### What happened?  Hi,  I'm testing out getShadowDom() method. On Chrome below code works but on Firefox it throws an exception on getShadowDom() .  ### How can we reproduce the issue?  ```shell @Test     public void shadowDomExampleTest1(){         WebDriverManager.firefoxdriver().setup();         WebDriver driver = new FirefoxDriver();         driver.get(""https://fakestore.testelka.pl/shadow-dom-w-selenium/"");         WebElement shadowHost = driver.findElement(By.cssSelector(""#host""));         SearchContext shadowRoot = shadowHost.getShadowRoot();         shadowRoot.findElement(By.cssSelector(""input"")).sendKeys(""Test"");         shadowRoot.findElement(By.cssSelector(""button"")).click();     } ```   ### Relevant log output  ```shell org.openqa.selenium.UnsupportedCommandException: HTTP method not allowed Command duration or timeout: 4 milliseconds Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-XXXXXXX', ip: 'XXX.XX.XX.X', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1' Driver info: org.openqa.selenium.firefox.FirefoxDriver Command: [09f79f3e-8522-4b14-82e2-19aefeecb866, getElementShadowRoot {id=3a437faf-83b8-4623-bb7c-8332e9d993ca}] Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 95.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20211218203254, moz:debuggerAddress: localhost:55494, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 26876, moz:profile: C:\Users\XXXXX\AppData\Local\..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, proxy: Proxy(), se:cdp: ws://localhost:55494/devtoo..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Element: [[FirefoxDriver: firefox on WINDOWS (09f79f3e-8522-4b14-82e2-19aefeecb866)] -> css selector: #host] ```   ### Operating System  Windows 11 Pro  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox  95.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","aphx07","2022-01-05T13:26:01Z","2022-02-05T00:06:10Z"
"","10211","[🐛 Bug]: Unable to pre-load cookies with execute_cdp_cmd('Network.setCookie') in AWS Lambda/ECS","### What happened?  Hi,  I'm running Selenium in AWS Lambda on an ECS container image. I have a use-case where I have to initialise a dummy website first (example google.com) to be able to add custom cookies then open another website where I preload these cookies. When loading the cookies for the second website I change the domain of the cookies from google.com to my desired website's domain. This way I can open my desired website with the right cookies. I'm having an issue where I'm getting a `chrome not reachable` error message.   By the look of it it seems when I want to preload the cookies with the `driver.execute_cdp_cmd('Network.setCookie')` method the driver doesn't want to initialise the second website. Here are my arguments for the driver:  ```     chrome_options = webdriver.ChromeOptions()     chrome_options.add_argument('--no-sandbox')     chrome_options.add_argument('--headless')     chrome_options.add_argument('--disable-gpu')     chrome_options.add_argument('--disable-dev-shm-usage')     chrome_options.add_argument('--disable-dev-tools')     chrome_options.add_argument('--remote-debugging-port=9222')     chrome_options.add_argument('--window-size=1280x1696')     chrome_options.add_argument('--user-data-dir=/tmp/chrome-user-data')     chrome_options.add_argument('--single-process')     chrome_options.add_argument(""--no-zygote"")     chrome_options.add_argument('--ignore-certificate-errors')     chrome_options.binary_location = ""/opt/chrome/chrome"" ``` Here's how I initialise the first dummy website and set the custom cookies, then save it to an S3 bucket:  ```     driver.get('https://www.google.com/')     driver.add_cookie({'name':'Per_UniqueID', 'value': '12312321312u3i12u31'})     driver.add_cookie({'name':'VISITED_LANG', 'value': 'en'})     driver.add_cookie({'name':'jwtToken', 'value': 'asasd'})     save_cookies_s3() ```  Here's how I open the second website and the load_cookies function that I call before opening the website. During the load of the cookies I change the domain from my example website google.com to my desiredwebsite.com.  ```     def load_cookies_s3():         .         .. loading cookies from S3 bucket         pickle_cookies = pickle.loads(S3)          driver.execute_cdp_cmd('Network.enable', {})              for cookie in pickle_cookies:             cookie['domain'] = cookie['domain'].replace('www.google.com', 'desiredwebsite.com')                          # Set the actual cookie             driver.execute_cdp_cmd('Network.setCookie', cookie)              # Disable network tracking         driver.execute_cdp_cmd('Network.disable', {})         return 1      load_cookies_s3()     driver.get('https://desiredwebsite.com')     pretty_print(driver.get_cookies())  ```  Strange thing is that the above method of preloading the cookies before initializing the driver works on my Mac locally but not on AWS and I dont see what's going on further besides the `Chrome not reachable` error message. Sometimes (occasionally)  I'm getting the `Unknown error: unable to discover open window in chrome` error message too.  ### How can we reproduce the issue?  ```shell Code snippets have been shared in the main description. If more needed I can happily share. ```   ### Relevant log output  ```shell {     ""errorMessage"": ""Message: chrome not reachable\n  (Session info: headless chrome=96.0.4664.0)\nStacktrace:\n#0 0x557ee53b2ee3 \n#1 0x557ee4e8049f \n#2 0x557ee4e6f244 \n#3 0x557ee4e6fc49 \n#4 0x557ee4e719d2 \n#5 0x557ee4e6a0c6 \n#6 0x557ee4e81a02 \n#7 0x557ee4ee6ac8 \n#8 0x557ee4ed4163 \n#9 0x557ee4ea9bfc \n#10 0x557ee4eaac05 \n#11 0x557ee53e4baa \n#12 0x557ee53fa651 \n#13 0x557ee53e5b05 \n#14 0x557ee53fba68 \n#15 0x557ee53da05f \n#16 0x557ee5416818 \n#17 0x557ee5416998 \n#18 0x557ee5431eed \n#19 0x7fd6e944740b \n"",     ""errorType"": ""WebDriverException"",     ""requestId"": ""3d27b04e-41e4-45d1-abf2-0febe2d42126"",     ""stackTrace"": [         ""  File \""/var/task/test.py\"", line 162, in handler\n    driver.get('https://desiredwebsite.com')\n"",         ""  File \""/var/lang/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\"", line 436, in get\n    self.execute(Command.GET, {'url': url})\n"",         ""  File \""/var/lang/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py\"", line 424, in execute\n    self.error_handler.check_response(response)\n"",         ""  File \""/var/lang/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py\"", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n""     ] } ```   ### Operating System  AWS ECS container image  ### Selenium version  Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chromium 96.0.4664.0  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 96.0.4664.45  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","rebelnn","2022-01-01T12:34:11Z","2022-02-02T00:07:44Z"
"","10329","[🐛 Bug]: Selenium Python - SendKeys does not work when computer is locked","### What happened?  Hi,  I use python 3.9.5 and selenium 4.1.0 with microsoft Edge 98.0.1108.43 on Windows 10 to fill a date in a text box with the code below:  ``` #element is the web element I want to fill element = ""element_name"" date = driver.find_element(By.ID, element)  date.click() date.clear()  #Positionate cursor at text box beginning for i in range(1,10):     date.send_keys(Keys.ARROW_LEFT)      #Fill the date date.send_keys(""11022022"") ```  I use windows task scheduler to run a python script when the computer is locked.  This code uses to work when I am logged in and using the computer, but when it's locked the send keys fails, it used to work with edge version 95, but in recent vesions stopped.   I also have tried to force windows to always focus on browser windows, so the webpage always has the keyboard focus, but it also does not works.    ### How can we reproduce the issue?  ```shell Try to fill a text box with a python script when computer is locked. ```   ### Relevant log output  ```shell I does not have a log. ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 98.0.1108.43  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver 98.0.1108.43  ### Are you using Selenium Grid?  No","closed","I-defect,","allanbides","2022-02-05T14:19:45Z","2022-03-10T00:09:33Z"
"","10330","[🐛 Bug]: Click does not work out","### What happened?  Hi,  I use python 3.9.5 and selenium 4.1.0 with microsoft Edge 98.0.1108.43 on Windows 10  and operations like below when I have to click in something at the page does not work in any case.  ``` #element is the web element I want to fill element = ""element_name"" date = driver.find_element(By.ID, element)  date.click() ```  I figure out to solve this with below code but it is not the ideal and genarates some other problems.  ``` webelement.WebElement.click = lambda self : driver.execute_script(""arguments[0].click();"", self) ```  Is it a Known Bug?  Thanks.   ### How can we reproduce the issue?  ```shell Any code the needs to click in buttons or links. ```   ### Relevant log output  ```shell No log to provide. ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 98.0.1108.43  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver 98.0.1108.43  ### Are you using Selenium Grid?  No","closed","needs-triaging,","allanbides","2022-02-05T14:27:04Z","2022-03-09T00:11:44Z"
"","10326","[🐛 Bug]: Regression (worked in 3.14) - javascript error: this.each is not a function - Failing to parse elements in text editors","### What happened?  Hi,  I upgraded from Selenium 3.14 to 4 and almost everything is going smoothly except when i attempt to check in any elements exist or are clickable inside a mce toolbar(wysiwyg editor) I get the following error:   OpenQA.Selenium.JavaScriptException : javascript error: this.each is not a function       (Session info: chrome=97.0.4692.99)  These tests passed before upgrading.   I noticed a similar error in Chromedriver 81 and was wondering if anyone knew any workarounds for this or know if this is a known issue?  I filed a bug with Chromedriver which I linked below, but they said this is a Selenium issue.  Thanks, Joe Malmsten  https://bugs.chromium.org/p/chromedriver/issues/detail?id=4017#c1  ### How can we reproduce the issue?  ```shell 1. Have a webpage with a MCE toolbar (the one I'm using is from Blackboard classic) 2. Attempt to check if any element in the toolbar is displayed or clickable.   Expected: The WebElements are retrieved properly. Actual: We get the this.each javascript error. ```   ### Relevant log output  ```shell Message:      OpenQA.Selenium.JavaScriptException : javascript error: this.each is not a function       (Session info: chrome=98.0.4758.82)    Stack Trace:      WebDriver.UnpackAndThrowOnError(Response errorResponse)     WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)     WebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters)     WebElement.Execute(String commandToExecute, Dictionary`2 parameters)     WebElement.get_Displayed()     EventFiringWebElement.get_Displayed()     WebDriverExtension.ElementIsDisplayed(IWebDriver driver, Func`2 elementFunction) line 55     CourseForumPage.OpenSessionPicker(Boolean usingSaasEditor, CoursePage coursePage) line 195     BlackboardTests.BBVerifyEmbed(InstanceName instance) line 457 ```   ### Operating System  Windows 10  ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 97.0.4692.99  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","jmalmsten-panopto","2022-02-04T18:48:42Z","2022-03-11T00:10:53Z"
"","10850","[🐛 Bug]: [C#] [Chrome] Cannot allow Chrome to know Location","### What happened?  Hi,  I can't allow Chrome to know Location when appears the popup asking if i want to allow.  I try a lot of solutions that i found on internet (Stackoverflow, medium, this Issue list, etc..) but nothing work and i don't know if i'm doing somenthing wrong or there are some bug in the new versión of selenium (i tried to downgraded to 4.0.0 and still the problem)  I Use the following ChromeOptions:  ```   chromiumOptions.AddArgument(""--disable-infobars"");   chromiumOptions.AddArgument(""--ignore-certificate-errors"");   chromiumOptions.AddArgument(""--allow-running-insecure-content"");   chromiumOptions.AddArgument(""--disable-blink-features=AutomationControlled"");   chromiumOptions.AddArgument(""--disable-dev-shm-usage"");   chromiumOptions.AddArguments(""headless"");   chromiumOptions.AddAdditionalChromeOption(""useAutomationExtension"", false);   chromiumOptions.AddExcludedArgument(""enable-automation"");   chromiumOptions.AddArguments(""--disable-gpu"");   chromiumOptions.AddArgument(""--no-sandbox""); ```  And i tried the following options whithout results:  ``` chromiumOptions.AddUserProfilePreference(""profile.default_content_settings.geolocation"", 1); chromiumOptions.AddUserProfilePreference(""profile.managed_default_content_settings.geolocation"", 1); ```  Also i tried with cdp command  ``` Dictionary commandParameters = new Dictionary(); commandParameters = new Dictionary(); commandParameters.Add(""origin"", ""https://www.openstreetmap.org""); commandParameters.Add(""permissions"", new List() { ""geolocation"" }); seleniumBrowser.ExecuteCdpCommand(""Browser.grantPermissions"", commandParameters); ```  But nothing works and still appear the Chrome Location Popup asking if i want to allow.  Thanks in advance!   ### How can we reproduce the issue?  ```shell Navigate to https://www.openstreetmap.org and click in this button //span[@class='icon geolocate'] ```   ### Relevant log output  ```shell See above ```   ### Operating System  Windows 10  ### Selenium version  DotNet 4.3.0   ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060.66  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53  ### Are you using Selenium Grid?  No","closed","needs-triaging,","MarioMartinPlaza","2022-07-05T17:15:04Z","2022-07-05T19:53:32Z"
"","10341","[🐛 Bug]: Selenium WebDriverException","### What happened?  Hi,  I can not start a session on Ubuntu 20.04 with Chrome, I get an exception : `WebDriverException: Message: unknown error: DevToolsActivePort file doesn't exist`.  I am using Python 3.8.10, I work inside a virtualenv : `.venv`  The chrome driver is installed in `.venv/bin` which comes first in the `$PATH`.  I saw https://stackoverflow.com/a/50642913/481719, but I tried several options without success.  Chrome binaries are installed by apt / snap  in `/snap/bin` and belong to root. This is not a problem for Firefox, I admit I am confused by this thread. I did not found how to ""run Chrome as a regular user"", I may be missing something.  Any advice would be welcome.  Regards   ### How can we reproduce the issue?  ```shell import os  import selenium import selenium.webdriver from selenium.webdriver.chrome.service import Service as ChromeService  chromepath = f""{os.getcwd()}/.venv/bin/chromedriver""  service = ChromeService(executable_path=chromepath) options = selenium.webdriver.ChromeOptions() options.add_argument('--no-sandbox') options.add_argument(""--disable-dev-shm-usage"") options.add_argument('--headless') driver = selenium.webdriver.Chrome(service=service, options=options) ```   ### Relevant log output  ```shell $ python selenium-chrome.py Traceback (most recent call last):   File ""selenium-chrome.py"", line 57, in      driver = selenium.webdriver.Chrome(service=service, options=options)   File ""/.../openfoodfacts/.venv/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 70, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/.../openfoodfacts/.venv/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 93, in __init__     RemoteWebDriver.__init__(   File ""/.../openfoodfacts/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 268, in __init__     self.start_session(capabilities, browser_profile)   File ""/.../openfoodfacts/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 359, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/.../openfoodfacts/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 424, in execute     self.error_handler.check_response(response)   File ""/.../openfoodfacts/.venv/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: DevToolsActivePort file doesn't exist Stacktrace: #0 0x562e39f79113  #1 0x562e39a416d8  #2 0x562e39a67632  #3 0x562e39a63bb9  #4 0x562e39a6019a  #5 0x562e39a9ae0a  #6 0x562e39a94f53  #7 0x562e39a6abda  #8 0x562e39a6bca5  #9 0x562e39faa8dd  #10 0x562e39fc3a9b  #11 0x562e39fac6b5  #12 0x562e39fc4725  #13 0x562e39fa008f  #14 0x562e39fe1188  #15 0x562e39fe1308  #16 0x562e39ffba6d  #17 0x7f77b6cf8609  ```   ### Operating System  Ubuntu 20.04.3  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chromium 98.0.4758.80 snap  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 98.0.4758.80  ### Are you using Selenium Grid?  I do not think I am using Selenium Grid","closed","I-defect,","fconil","2022-02-08T20:52:45Z","2022-03-13T00:09:51Z"
"","10476","[🐛 Bug]: Shadow Element are not working with latest version of chrome.","### What happened?  Hi,  I am using  99.0.4844.82 Windows Chrome version using Python BDD framework. We have test cases scenarios using Shadow element. It was working with 98 version chrome.  test cases have started failing with latest version.   Could you please advise. ![image](https://user-images.githubusercontent.com/93395588/160108682-4efca880-2b9e-4816-9300-45986460b3ed.png)   ### How can we reproduce the issue?  ```shell Shadow element test case with 99 version chrome ```   ### Relevant log output  ```shell Assertion Error ```   ### Operating System  Windows 10  ### Selenium version  4.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  99.0.4844.82  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","kunalbehl12","2022-03-25T11:10:49Z","2022-04-25T00:10:20Z"
"","10074","[🐛 Bug]: TimeoutException while working with alert with ChromeDriver v96","### What happened?  Hi!  I updated Chrome Browser and ChromeDriver to v96 and code worked before throwed the TimeoutException.  Would you kindly solve this problem, or explain how to do it myself?  ### How can we reproduce the issue?  ```shell alert = ExpectedConditions.AlertIsPresent().Invoke(driver); alert.Accept(); ```   ### Relevant log output  ```shell Message:      OpenQA.Selenium.WebDriverTimeoutException : timeout: Timed out receiving message from renderer: 60.000       (Session info: chrome=96.0.4664.45) ```   ### Operating System  Windows 10  ### Selenium version  C# 3.141.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.4500  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","AvallaSD","2021-11-23T17:47:15Z","2021-12-24T00:07:17Z"
"","10004","[🐛 Bug]: Network Interception doesn't work in JavaScript example.","### What happened?  Hi there, I try the [Network interception JavaScript example](https://www.selenium.dev/documentation/webdriver/bidi_apis/#network-interception) but it fails to intercept the response.  The first Collect Performance Metrics example works good, but the second onIntercept function example doesn't work.  After sending the request (await driver.url()), the page still returns the original response and nothing is changed.  **Note: The first line of the example maybe wrong**. It causes an error because of the lack of argument in createCDPConnection function in the example code. I check the source code and add an argument ‘page’ to fix it. Now there is no errors but still interception doesn’t work and always returns a 404 error.  Is it a bug in JavaScript or do I miss anything? Thanks!   ### How can we reproduce the issue?  ```shell const webdriver = require('selenium-webdriver'); const { HttpResponse } = require('selenium-webdriver/devtools/networkinterceptor');  (async function selenium4Test () {   let driver = new webdriver.Builder().forBrowser('chrome').build();     const connection = await driver.createCDPConnection('page');     let url = 'http://localhost:1000/test.html';     let httpResponse = new HttpResponse(url);     httpResponse.addHeaders(""Content-Type"", ""UTF-8"");     httpResponse.body = ""sausages"";     await driver.onIntercept(connection, httpResponse, async function () {       let body = await driver.getPageSource();       console.log(body, httpResponse);     })     await driver.get(url); })(); ```   ### Relevant log output  ```shell The output of httpResponse: HttpResponse {   returnBody: 'sausages',   returnHeaders: [ { name: 'Content-Type', value: 'UTF-8' } ],   returnMethod: 'GET',   returnStatus: 200,   urlToIntercept: 'http://localhost:1000/test.html' } The actual page body is the same as the original one. E.g. ...  ```   ### Operating System  macOS BigSur 11.2.3  ### Selenium version  JavaScript 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.54  ### Are you using Selenium Grid?  _No response_","open","I-defect,","yaoyao0821","2021-11-01T17:01:45Z","2022-04-01T12:43:58Z"
"","10119","[🐛 Html Javascript Drag and Drop is not working Selenium 4.1.0]:","### What happened?  Hi Team,  I am trying to test drag and drop functionality with selenium but drag and drop is not working. I tried chrome & Firefox web driver latest version both are not working.  **The drop is not happening because, my mouse position is outside of browser**   ### How can we reproduce the issue?  ```shell **selenium code** `const {Builder, By} = require('selenium-webdriver');  (async function dragAndDrop() {   let driver = await new Builder().forBrowser('chrome').build();   try {     // Navigate to Url     await driver.get('saved URL'); -- Please save the below html in your local & provide the same URL here     // Store 'box A' as source element     let sourceEle = driver.findElement(By.id(""drag1""));     // Store 'box B' as source element     let targetEle = driver.findElement(By.id(""div1""));     const actions = driver.actions({async: true});     // Performs drag and drop action of sourceEle onto the targetEle     await actions.dragAndDrop(sourceEle, targetEle).perform();   }   finally {     await driver.quit();   } })();` **Html Javscript code** `    #div1 {   width: 350px;   height: 70px;   padding: 10px;   border: 1px solid #aaaaaa; }   function allowDrop(ev) {   ev.preventDefault(); }  function drag(ev) {   ev.dataTransfer.setData(""text"", ev.target.id); }  function drop(ev) {   ev.preventDefault();   var data = ev.dataTransfer.getData(""text"");   ev.target.appendChild(document.getElementById(data)); }     Drag the W3Schools image into the rectangle:       ` ```   ### Relevant log output  ```shell **While drag & drop Selenium web drivers is taking my system cursor - Might be the issue** ```   ### Operating System  Mac  ### Selenium version  Node 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 90  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 94   ### Are you using Selenium Grid?  _No response_","closed","C-nodejs,","kalidas3","2021-12-08T15:20:31Z","2022-01-26T00:10:09Z"
"","10039","[🐛 Bug]: Safari nested iFrame 500 error","### What happened?  Hi Selenium team,  I'm having difficulty testing a piece of code that uses Selenium and SafariDriver through the NightwatchJS library. The code is working fine for Chrome and FF. I'm not 100% sure if it's a problem with nightwatch or something deeper, so am reaching out here. If this is not correct place, or somewhere better can ask, please let me know!   So far I have tried:  - [open issue on nightwatch repo](https://github.com/nightwatchjs/nightwatch/issues/2943)  - [open question on StackOverflow](https://stackoverflow.com/questions/69959327/nightwatchjs-safari-cant-find-nested-iframe)  After debugging more am starting to think this could be an issue with either Selenium or SafariDriver. Or perhaps some misunderstanding or misconfiguration on my part.  ### Environment  ``` safaridriver - Included with Safari 14.1.1 (16611.2.7.1.4) ""selenium-server"": ""3.141.59"", ""selenium-webdriver"": ""4.0.0"", ```  ### What is the problem test?  The test needs to access an iframe within an iframe from top level document. The setup looks something like this:  ### HTML  ```html         #document                                                                                     ```  Where `#nested-frame` will need to be accessed from the top level document for inspection of content.  The test code is using [NightwatchJS](https://nightwatchjs.org/), more details about config, setup and code are in the [GitHub issue](https://github.com/nightwatchjs/nightwatch/issues/2943).  ### Problem Summary  The problem is that to access the nested iFrame, it needs to first find `#top-frame` web element, use the returned web element and pass it to `frame` which makes the WebDriver call to change context of test session to that frame. This is all good with Chrome, FF, and Safari as they can all find this frame web element and make the switch into the frame context. My test for Safari was switching into first iFrame context. And now here is where I think there is maybe a bug or I am not understanding something:  After switching into first frame in Safari, I do an element lookup for a regular tag `` which is returned as a web element. I then try a couple different things using the web element ID:  ```html      ```  - I look for an element that I know does not exist underneath.   `  → Running command: elementIdElements ('node-3AC0121F-9C54-4BC5-B548-532E7E615BDE', 'tag name', 'span', [Function])    Request POST  /session/DD2A827C-5D8E-4C0F-A783-1991E528B25A/element/node-3AC0121F-9C54-4BC5-B548-532E7E615BDE/elements      { using: 'tag name', value: 'span' }    Response 200 POST /session/DD2A827C-5D8E-4C0F-A783-1991E528B25A/element/node-3AC0121F-9C54-4BC5-B548-532E7E615BDE/elements (37ms)    { value: [] } `  - I look for the iframe I know is there.   `  → Running command: elementIdElements ('node-700E05B9-1C42-4289-A06F-B4BF9A8A0867', 'tag name', 'iframe', [Function])    Request POST  /session/0A778850-DDC6-42EE-9F8C-60A0998962D2/element/node-700E05B9-1C42-4289-A06F-B4BF9A8A0867/elements      { using: 'tag name', value: 'iframe' }    Response 500 POST /session/0A778850-DDC6-42EE-9F8C-60A0998962D2/element/node-700E05B9-1C42-4289-A06F-B4BF9A8A0867/elements (27ms)    { value: { error: 'unknown error', message: '', stacktrace: '' } }  Error while running .locateMultipleElementsByElementId() protocol action: An unknown server-side error occurred while processing the command. `  It is very puzzling, my latest thinking was maybe it was a cross origin issue. But then I read on WebDriver [switch to frame](https://www.w3.org/TR/webdriver/#switch-to-frame):  `NOTE WebDriver is not bound by the same origin policy, so it is always possible to switch into child browsing contexts, even if they are different origin to the current browsing context. `  And I also tried checking `Disable Cross Origin Restrictions` from Safari Developer menu.  I'm not sure how to further debug. Maybe someone else with a fresh perspective could have a suggestion or if someone has run into a similar situation as this. Has anyone run into a similar issue like this? TIA!  ### How can we reproduce the issue?  ```shell The code is written with NightwatchJS. I have an open issue on their repo [here](https://github.com/nightwatchjs/nightwatch/issues/2943) that has more info.  Here is some pseudo code:           #document                                                                                       ```js let webIdA = findElement('#top-iframe'); await frame(webID); // switch into first frame  let webIdB = findElement('container'); // find container web ID in first frame  // returns web element for container // now try to find the iframe underneath this web element using the ID just returned let frameId = findElementsById(webIdB, 'iframe')  // return 500 server error Safari ``` ```   ### Relevant log output  ```shell I look for an element that I know does not exist underneath.  ` → Running command: elementIdElements ('node-3AC0121F-9C54-4BC5-B548-532E7E615BDE', 'tag name', 'span', [Function]) Request POST /session/DD2A827C-5D8E-4C0F-A783-1991E528B25A/element/node-3AC0121F-9C54-4BC5-B548-532E7E615BDE/elements { using: 'tag name', value: 'span' } Response 200 POST /session/DD2A827C-5D8E-4C0F-A783-1991E528B25A/element/node-3AC0121F-9C54-4BC5-B548-532E7E615BDE/elements (37ms) { value: [] } `  I look for the iframe I know is there.  ` → Running command: elementIdElements ('node-700E05B9-1C42-4289-A06F-B4BF9A8A0867', 'tag name', 'iframe', [Function]) Request POST /session/0A778850-DDC6-42EE-9F8C-60A0998962D2/element/node-700E05B9-1C42-4289-A06F-B4BF9A8A0867/elements { using: 'tag name', value: 'iframe' } Response 500 POST /session/0A778850-DDC6-42EE-9F8C-60A0998962D2/element/node-700E05B9-1C42-4289-A06F-B4BF9A8A0867/elements (27ms) { value: { error: 'unknown error', message: '', stacktrace: '' } } Error while running .locateMultipleElementsByElementId() protocol action: An unknown server-side error occurred while processing the command. ` ```   ### Operating System  macOS Big Sur  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Safari  ### What are the browser driver(s) and version(s) where you see this issue?  safaridriver - Included with Safari 14.1.1 (16611.2.7.1.4)  ### Are you using Selenium Grid?  i don't think so","closed","I-defect,","mwilc0x","2021-11-14T20:17:53Z","2021-12-16T00:06:52Z"
"","10669","[🐛 Bug]:","### What happened?  hi i have a issue about the webdriver i have a project need to be navigate to (https://webtrader.justforex.com/) to get scrap data and etc but i not sure why the webdriver show's page keep loading it  loop i have check the inspect some cookie is does not load i try everything thru online but still get the solution ![image](https://user-images.githubusercontent.com/101032724/169243967-8d6bd334-f3c5-46af-a870-c168e016f87b.png)   ### How can we reproduce the issue?  ```shell var driver = GetEdgeDriver();             Proxy p = new Proxy();               driver.Navigate().GoToUrl(""https://webtrader.justforex.com""); ```   ### Relevant log output  ```shell log output is normal no error at all ```   ### Operating System  windows10  ### Selenium version  C#  ### What are the browser(s) and version(s) where you see this issue?  Edge  ### What are the browser driver(s) and version(s) where you see this issue?  EdgeDriver-101.0.1210.47  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","jun0100","2022-05-19T08:05:50Z","2022-06-20T00:11:19Z"
"","10221","[🐛 Bug]: In Edge(IE mode), I'm not able to enable pop-ups","### What happened?  Hi Folks, I've tried couple ways to enable pop ups via ieOptions/edgeOptions but still it's getting blocked. Appreicate any help on this. Thanks for your time.  Please refer to below snippet:  ```         InternetExplorerOptions ieOptions = new InternetExplorerOptions();         ieOptions.ignoreZoomSettings();         ieOptions.setCapability(""ignoreProtectedModeSettings"", true);         ieOptions.attachToEdgeChrome();         ieOptions.setCapability(""disable-popup-blocking"", true);  // doesn't work         ieOptions.setCapability(""--disable-popup-blocking"", true);  // doesn't work                  EdgeOptions edgeOptions = new EdgeOptions();         HashMap edgePref = new HashMap();         edgePref.put ( ""profile.default_content_setting_values.popups"" , true); // doesn't work with 0,1,false,true         edgeOptions.setExperimentalOption(""prefs"" , edgePref);         edgeOptions.addArguments(""disable-popup-blocking""); // doesn't work          ieOptions.merge(edgeOptions);         ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");         driver = new InternetExplorerDriver(ieOptions); ```  ### How can we reproduce the issue?  ```shell Execute the snippet code, Edge Browser with IE mode will spin up and access any site with pop ups. All pops up will get blocked , unless I manually allow it. ```   ### Relevant log output  ```shell N/A . No logs, however below is sample print out from `ieOptions.getCapabilities()`  [--disable-popup-blocking, browserName, disable-popup-blocking, ie.edgechromium, ie.edgepath, ignoreProtectedModeSettings, ignoreZoomSetting, se:ieOptions] ```   ### Operating System  Windows 10  ### Selenium version  4.1.1 selenium-java  ### What are the browser(s) and version(s) where you see this issue?  IEDriver 4.0.0 , Edge 95 , IE 11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver 4.0.0 , Edge 95 , IE 11  ### Are you using Selenium Grid?  No","closed","needs-triaging,","hendryang","2022-01-05T07:49:47Z","2022-02-05T00:06:08Z"
"","10830","[🐛 Bug]: Deprecated functionality removed in a minor version","### What happened?  Hi folks,  First of all, big thanks to all the active maintainers on this project. Selenium is an awesome tool and the amount of complexity you all are dealing with on a daily basis is mind-boggling. With that in mind, I hate to even be filing this issue, but I wanted to try to do my part to help out the community.  Based on my understanding of SemVer, it calls for a major version bump when backwards-incompatible changes are introduced (e.g. removing deprecated features, or possibly even the change to `move_to` behavior). Maybe I'm misunderstanding something but it seems like the 4.3 release isn't respecting that rule.  We were certainly surprised to find that those changes had been made in a minor version update, and while I imagine there may be some good reasons for the Selenium team choosing to do this it also has some potential downsides for users of the package.  Just wanted to put this out there to see if either I'm missing something here, or maybe there is some room for improvement in the way releases are handled going forward?  Thanks!  ### How can we reproduce the issue?  ```shell The changelogs for 4.3 detail the removed functionality: https://github.com/SeleniumHQ/selenium/releases/tag/selenium-4.3.0 ```   ### Relevant log output  ```shell no relevant log output ```   ### Operating System  MacOS  ### Selenium version  4.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","chrisbutler","2022-06-29T14:52:21Z","2022-07-13T17:21:54Z"
"","10325","[🐛 Bug]: Redirection browserName to ""Chrome"" from all other browsers","### What happened?  Hi every one,  I'm using Selenium Grid v4.1.0 having **only one** Node with **Chrome** capabilities,  with Test Framework **Protractor v5.4.2**  Currently I m getting a dysfunction that when I launch a test with browserName=Firefox or (=MicrosoftEdge),  normally Grid refuse the request because there is no node that match those capabilities,  but it does not,  the request will be changed by Distributor by putting browserName=Chrome and run a Chrome browser.   What I think that influence this redirection is the **LoggingPrefs** config in **protractor-conf.js**, an extension **goog**: will be added by selenium (instead a firefox extension ""moz"" or ""ms"" in case of MicrosoftEge) , and maybe this config that cause this redirection that we can not tolerant it   ### How can we reproduce the issue?  ```shell Here you find Capabilities configuration which are in ""protractor-conf.js"" :      capabilities: {         acceptInsecureCerts: browserName === 'firefox',         browserName: browserName,         platform: environment_1.Environment.getParam('platform', ''),         chromeOptions: browserName === 'chrome' ? {             args: ['--test-type --disable-infobars --start-maximized'],         } : undefined,         ignoreProtectedModeSettings: true,         ensureCleanSession: true,         ignoreUncaughtExceptions: true,         loggingPrefs: {             browser: 'ALL',             driver: 'INFO',         },     },  The Selenium server running as standalone in local:  java -jar selenium-server-4.1.0.jar standalone    The Test was launched by running this cmd npm:  npm run test -- --params.seleniumAddress=http://IP:4444 '--params.browserName=firefox' --tags=@MY_TAG ```   ### Relevant log output  ```shell Here you find Selenium Grid logs, you can see that Distributor receive a request with browserName: firefox and goog:loggingPrefs, after that Distributor will creates a session as browserName: chrome.   17:09:59.368 INFO [LocalDistributor.newSession] - Session request received by the distributor:  [Capabilities {acceptInsecureCerts: true, browserName: firefox, platformName: }, Capabilities {acceptInsecureCerts: true, browserName: firefox, count: 1, ensureCleanSession: true, ignoreProtectedModeSettings: true, ignoreUncaughtExceptions: true, loggingPrefs: org.openqa.selenium.logging..., platform: WINDOWS, tags: @test_62159}, Capabilities {acceptInsecureCerts: true, goog:loggingPrefs: {browser: ALL, driver: INFO}, platformName: }] Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 50356  Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping  ChromeDriver safe. ChromeDriver was started successfully. [1643991001.942][WARNING]: This version of ChromeDriver has not been tested with Chrome version 97.  17:10:02.411 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C  17:10:02.479 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: d909232460858181e81a42686b741de5, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 97.0.4692.99, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: C:\Users\223039~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:53127}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://192.168.10.16:4444/sess..., se:cdpVersion: 97.0.4692.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} ```   ### Operating System  Windows 10  ### Selenium version  Javascript 4.0.0-rc-1  ### What are the browser(s) and version(s) where you see this issue?  All  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  4.1.0","closed","I-defect,","redouane07","2022-02-04T16:18:26Z","2022-03-25T00:09:46Z"
"","10020","[🐛 Bug]: Selenium webdriver not working in docker container","### What happened?  Hi all, I have an issue with the selenium webdriver with .net need your help.  I am using .net 5 and trying to run Selenium Webdriver on a Linux Docker Container and getting the ""System.ComponentModel.Win32Exception No such file or directory"" error. I thought chromedriver file doesn't exist. But I have checked the path is correct, even I put chromeriver in usr/local/bin, app/ folder.  It's working when I run without docker.  My code ``` ... using OpenQA.Selenium; using OpenQA.Selenium.Chrome; .... var chromeOptions = new ChromeOptions(); chromeOptions.AddArgument(""headless""); chromeOptions.AddArgument(""no-sandbox""); chromeOptions.PageLoadStrategy = PageLoadStrategy.Eager;  var driver = new ChromeDriver(AppDomain.CurrentDomain.BaseDirectory, chromeOptions); ```  I also tried  ``` ... using OpenQA.Selenium; using OpenQA.Selenium.Chrome; .... var chromeOptions = new ChromeOptions(); chromeOptions.AddArgument(""headless""); chromeOptions.AddArgument(""no-sandbox""); chromeOptions.PageLoadStrategy = PageLoadStrategy.Eager;  var driver = new ChromeDriver( chromeOptions); ```  both with the chromedriver file in app folder or usr/local/bin folder.    ### How can we reproduce the issue?  ```shell Using Net 5 create a project with Selenium.WebDriver --version 4.0.1 Run the project in the docker container make sure chomedriver file is always in the build folder. => System will throw the error message ""System.ComponentModel.Win32Exception No such file or directory"" when go this line of codes ""var driver = new ChromeDriver(chromeOptions);"" ```   ### Relevant log output  ```shell An unhandled exception has occurred while executing the request.       System.ComponentModel.Win32Exception (2): No such file or directory          at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)          at System.Diagnostics.Process.StartCore(ProcessStartInfo startInfo)          at System.Diagnostics.Process.Start()          at OpenQA.Selenium.DriverService.Start()          at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)          at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)          at OpenQA.Selenium.WebDriver.StartSession(ICapabilities desiredCapabilities)          at OpenQA.Selenium.WebDriver..ctor(ICommandExecutor executor, ICapabilities capabilities)          at OpenQA.Selenium.Chromium.ChromiumDriver..ctor(ChromiumDriverService service, ChromiumOptions options, TimeSpan commandTimeout)          at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)          at OpenQA.Selenium.Chrome.ChromeDriver..ctor(String chromeDriverDirectory, ChromeOptions options, TimeSpan commandTimeout)          at OpenQA.Selenium.Chrome.ChromeDriver..ctor(String chromeDriverDirectory, ChromeOptions options) ``` ```   ### Operating System  Ubuntu  ### Selenium version  .Net 5, Selenium.WebDriver --version 4.0.1  ### What are the browser(s) and version(s) where you see this issue?  ChromeDriver version 94.0.4606.41   ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver version 94.0.4606.41   ### Are you using Selenium Grid?  Nope","closed","I-question,","azlogs","2021-11-09T19:20:22Z","2021-12-10T00:06:46Z"
"","10263","[🐛 Bug]: imposible getting devtools from a seleniumGrid driver instance (remoteWebDriver)","### What happened?  Hi all! I have the following code for controller creation via a selenium grid instance:  `Controller WebDriver=new RemoteWebDriver(getGridUrl(), options);`  Then I need to get the performance metrics from devTools. but the getDevTools() method is not available for a RemoteDriver instance. Downcasting is not possible.  ``` ((ChromeDriver)driver).getDevTools(); ((ChromiumDriver)driver).getDevTools(); ``` Both throw a ClassCastException error.  the local case is not a problem because it is treated as a ChromeDriver and does not need a cast. `driver=new ChromeDriver(options);`  Would it be possible to add the interface (HasDevTools) as part of RemoteWebDriver? Thanks  ### How can we reproduce the issue?  ```shell just creating a driver through a seleniumGridInstances, and then trying to get the devTools. ```   ### Relevant log output  ```shell 13:54:04 java.lang.ClassCastException: class org.openqa.selenium.remote.RemoteWebDriver cannot be cast to class org.openqa.selenium.chromium.ChromiumDriver (org.openqa.selenium.remote.RemoteWebDriver and org.openqa.selenium.chromium.ChromiumDriver are in unnamed module of loader 'app') ```   ### Operating System  kubuntu 20.04  ### Selenium version  selenium-java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  chrome 95  ### What are the browser driver(s) and version(s) where you see this issue?  selenium-java 4.1.1  ### Are you using Selenium Grid?  yes, v.3.141.59","closed","needs-triaging,","JuanManuelCarames","2022-01-19T15:02:36Z","2022-02-21T00:09:07Z"
"","10347","[🐛 Bug]: Not possible to locate Element that is a child of","### What happened?  Hey iam trying to select elements in a form iam now allready on the secound website where i got this problem. Here ist the HTML Code:                                                                 Get Started with your Mailinator Trial!                 Set Your Password                                                                                                          affiliate96@it-ce.de                                                                                                                                                                                                                              Submit                                                                                          Already have an account?                              Log in                                                                                                                                    Copyright 2022 Manybrain, LLC. All Rights Reserved                   Terms & Conditions     Privacy Policy     Accessibility     Security                                                                                          I want to enter the passwort in the input if i check my elementpath in webbrowser inspector it find the element but selenium dont find it. Its not in an iframe but its in a form. I allready tried to switch with:  driver3.SwitchTo().Frame(driver3.FindElement(By.XPath(""//section[@class='login_content']/form"")));  But then it said the Element is not a frame. Thats right :D its a form but i cant find a way in web to get elements inside a form.  Is this a bug or what should i do to get it to work?  ### How can we reproduce the issue?  ```shell Try to locate an element inside a  Children. ```   ### Relevant log output  ```shell Element is not a frame ```   ### Operating System  Windows 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 98.0.4758.82   ### Are you using Selenium Grid?  No","closed","needs-triaging,","ChristianErdtmann","2022-02-09T18:46:51Z","2022-03-12T00:08:52Z"
"","10377","[🐛 Bug]: Multiple Tor Browser instances","### What happened?  Hey iam trying to run multiple tor browser at the same time. But that is not working. I found solutions in the net for using multiple tor browsers - but for this solution i need a new dictionary for each browser with own configurations.  I think that is with selenium much easyer to do.  Pleas help i have the following code:  String torPath = @""C:\AUTOMATION_SCRIPTS\Tor Browser\Browser\firefox.exe"";             String profilePath = @""C:\AUTOMATION_SCRIPTS\Tor Browser\Browser\TorBrowser\Data\Browser\profile.default"";             String geckoDriverDirectory = @""C:\AUTOMATION_SCRIPTS"";              int socksPort = program.rnd.Next(9153, 9300);              FirefoxProfile profile = new FirefoxProfile(profilePath);             profile.SetPreference(""network.proxy.type"", 1);             profile.SetPreference(""network.proxy.socks"", ""127.0.0.1"");             profile.SetPreference(""network.proxy.socks_port"", socksPort);             profile.SetPreference(""network.proxy.socks_remote_dns"", false);              FirefoxDriverService firefoxDriverService = FirefoxDriverService.CreateDefaultService(geckoDriverDirectory);             firefoxDriverService.FirefoxBinaryPath = torPath;             firefoxDriverService.BrowserCommunicationPort = 2828;             var firefoxOptions = new FirefoxOptions             {                 Profile = null,                 LogLevel = FirefoxDriverLogLevel.Trace             };             firefoxOptions.AddArguments(""-profile"", profilePath);             FirefoxDriver driver3 = new FirefoxDriver(firefoxDriverService, firefoxOptions);  This works fine for 1 Tor browser. But when i try to start a secound one it said me i nedd to close my tor browser. Is there a way for selenium to do this, i realy need multiply instances with differnet ips on the same time.  ### How can we reproduce the issue?  ```shell See code above ```   ### Relevant log output  ```shell No ```   ### Operating System  Windows 10  ### Selenium version  4.0.1  ### What are the browser(s) and version(s) where you see this issue?  Tor 11.0.6 based on Mozilla Firefox 91.6.0esr 64-Bit  ### What are the browser driver(s) and version(s) where you see this issue?  Tor 11.0.6 based on Mozilla Firefox 91.6.0esr 64-Bit and Geckodriver 0.30.0  ### Are you using Selenium Grid?  No","closed","I-question,","ChristianErdtmann","2022-02-19T11:27:45Z","2022-03-22T00:11:05Z"
"","10392","[🐛 Bug]:","### What happened?  Hey iam trying to add a Chrome extension. And i think it works sucessfull but when it try to open the index.html of this extension i got an error:   bihmplhobchoageeokmgbdihknkjbknd ist gesperrt Diese Seite wurde von Chrome blockiert ERR_BLOCKED_BY_CLIENT  How can i see that the extension was successfull installed to chrome?  Here is my code: ``` static void Main(string[] args)   {       Program self = new Program();        Random rnd = new Random();        ChromeOptions options = new ChromeOptions();       options.AddArguments(""disable-blink-features=AutomationControlled"");       self.driver = new ChromeDriver(options);       string path = System.Reflection.Assembly.GetExecutingAssembly().Location;       path = removeExeFromPathChar(path);       path = path + ""Config/"";       path = path.Replace(@""\"", ""/"");       string extensionPath = path + ""extension_4_1_0_0.crx"";       options.AddExtension(extensionPath);        self.driver.Navigate().GoToUrl(""chrome-extension://bihmplhobchoageeokmgbdihknkjbknd/panel/index.html"");       Thread.Sleep(2000);       self.driver.FindElement(By.XPath(""/html/body/div/div/div[2]/div[3]/div[3]"")).Click(); }          public static String removeExeFromPathChar(String s)         {             string exe = ""NAMETOYOUREXE.exe"";              return (s == null || s.Length == 0)               ? null               : (s.Substring(0, s.Length - exe.Length));         } ```  ### How can we reproduce the issue?  ```shell Wiht the code above, but change NAMETOYOUREXE ```   ### Relevant log output  ```shell ERR_BLOCKED_BY_CLIENT ```   ### Operating System  Windows 10  ### Selenium version  4.0.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 98.0.4758.82  ### Are you using Selenium Grid?  No","closed","needs-triaging,","ChristianErdtmann","2022-02-23T22:12:47Z","2022-03-26T00:09:50Z"
"","10362","[🐛 Bug]: The HTTP request to the remote WebDriver server for URL http://localhost:57871/session/9ee0614f78d6247023cd56f0b84f1575/url timed out after 60 seconds.","### What happened?  Hey i try to open a URL with ChromeDriver and get the error ""The HTTP request to the remote WebDriver server for URL http://localhost:57871/session/9ee0614f78d6247023cd56f0b84f1575/url timed out after 60 seconds.""  I allready tried to set timeout up to 180 but this dont worked.  The same driver open 2 Websites bevore the error occurs. If it try to open the 3. Website with this driver it alltimes crash.  Is there a solution for this?  It does not crash everytime but in 90% of the runs it crash.  I have 2 drivers running and i allready tried to sleep between the stat of the drivers. But that dont worked.  I have allready added this 2 lines: options.AddArgument(""no-sandbox""); options.AddArgument(""--remote-debugging-port=0""); But that dont worked.  Here is the code (is skipped it a little bit to the relevant lines because its a big program):   ChromeDriver driver = null; ChromeDriver driver3 = null; ChromeOptions options = new ChromeOptions();  options.AddArguments(""disable-blink-features=AutomationControlled""); options.AddArgument(""no-sandbox""); options.AddArgument(""--remote-debugging-port=0"");  driver3 = new ChromeDriver(options); Thread.Sleep(3000); driver = new ChromeDriver(options);  driver.Navigate().GoToUrl(""https://www.behindthename.com/random/random.php?number=1&sets=1&gender=m&surname=&randomsurname=yes&usage_ger=1"");  Thread.Sleep(10000);  driver.Navigate().GoToUrl(""https://all-inkl.com/login/"");  Thred.Sleeop(10000);  driver.Navigate().GoToUrl(""https://all-inkl.com/login/"");   I dont know why but alltime it tries to open the secound time https://all-inkl.com/login/ i got a crash.            ### How can we reproduce the issue?  ```shell Dont know see code above. ```   ### Relevant log output  ```shell No ```   ### Operating System  Windows 10  ### Selenium version  4.0.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.82  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome Driver 98.0.4758.82  ### Are you using Selenium Grid?  No","closed","R-awaiting answer,","ChristianErdtmann","2022-02-13T04:27:10Z","2022-04-07T00:11:44Z"
"","10456","[🐛 Bug]: Selenium Server Duplicated Class in Blank Android Studio Projekt","### What happened?  Hey i have created a blank Android Studio Projekt. - Java Projekt - I just added the selenium-server-4.1.2.jar to my lib and added it as libary.  After that i try to build and get the error seen below in the log output.  How to solve this?  If i look at my Project Stukture the is no module listenablefuture-1.0 so i cant remoe it so solve this.  this is my build.grandle  ``` plugins {     id 'com.android.application' }  android {     compileSdk 32      defaultConfig {         applicationId ""com.example.testseleniumserver""         minSdk 21         targetSdk 32         versionCode 1         versionName ""1.0""          testInstrumentationRunner ""androidx.test.runner.AndroidJUnitRunner""     }      buildTypes {         release {             minifyEnabled false             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'         }     }     compileOptions {         sourceCompatibility JavaVersion.VERSION_1_8         targetCompatibility JavaVersion.VERSION_1_8     } }  dependencies {      implementation 'androidx.appcompat:appcompat:1.4.1'     implementation 'com.google.android.material:material:1.5.0'     implementation files('libs\\selenium-server-4.1.2.jar')     testImplementation 'junit:junit:4.13.2'     androidTestImplementation 'androidx.test.ext:junit:1.1.3'     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0' } ```  ### How can we reproduce the issue?  ```shell See steps above. ```   ### Relevant log output  ```shell > Task :app:checkDebugDuplicateClasses FAILED Execution failed for task ':app:checkDebugDuplicateClasses'. > A failure occurred while executing com.android.build.gradle.internal.tasks.CheckDuplicatesRunnable    > Duplicate class com.google.common.util.concurrent.ListenableFuture found in modules listenablefuture-1.0 (com.google.guava:listenablefuture:1.0) and selenium-server-4.1.2 (selenium-server-4.1.2.jar)  * Try: Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights. ```   ### Operating System  Windows 10  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Nothing  ### What are the browser driver(s) and version(s) where you see this issue?  Nothing  ### Are you using Selenium Grid?  4.1.2","closed","needs-triaging,","ChristianErdtmann","2022-03-18T00:24:57Z","2022-04-18T00:12:05Z"
"","10543","[🐛 Bug]: ChromeDriver Version 100 not found by Selenium.WebDriver.ChromeDriver","### What happened?  Hey i had an update of chrome, now i get alltimes error with the chrome driver version 98, because of this i allready manuel downloaded the chrome driver and changed it in the directory of my project, but after deploying, the chromedriver file get overriden. Because of this i changed the version in my packages.config to the 100 version here is my package.config file. But i get alltemes the error below.  ```             ```   ``` Severity	Code	Description	Project	File	Line	Suppression State Error		NuGet Package restore failed for project CreateWebsiteAnzeigeEbay: Unable to find version '100.0.4896.60' of package 'Selenium.WebDriver.ChromeDriver'.   C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\: Package 'Selenium.WebDriver.ChromeDriver.100.0.4896.60' is not found on source 'C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\'.   https://api.nuget.org/v3/index.json: Package 'Selenium.WebDriver.ChromeDriver.100.0.4896.60' is not found on source 'https://api.nuget.org/v3/index.json'. . Please see Error List window for detailed warnings and errors.				  ```  ### How can we reproduce the issue?  ```shell C# Project with an the above package.config ```   ### Relevant log output  ```shell Severity	Code	Description	Project	File	Line	Suppression State Error		NuGet Package restore failed for project CreateWebsiteAnzeigeEbay: Unable to find version '100.0.4896.60' of package 'Selenium.WebDriver.ChromeDriver'.   C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\: Package 'Selenium.WebDriver.ChromeDriver.100.0.4896.60' is not found on source 'C:\Program Files (x86)\Microsoft SDKs\NuGetPackages\'.   https://api.nuget.org/v3/index.json: Package 'Selenium.WebDriver.ChromeDriver.100.0.4896.60' is not found on source 'https://api.nuget.org/v3/index.json'. . Please see Error List window for detailed warnings and errors. ```   ### Operating System  Windows Server 2019  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  i need 100 but have 98   ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 100.xx  ### Are you using Selenium Grid?  no","closed","needs-triaging,","ChristianErdtmann","2022-04-13T15:02:03Z","2022-05-14T00:15:52Z"
"","10864","[🐛 Bug]: Setting profile with set_preference doesn't work with webdriver","### What happened?  Hey guys! I'm only getting started with my first intent to build a web scraper with Python, Selenium, BeautifulSoup and Firefox. I've been searching the whole afternoon trying to get my head around which methods are deprecated or not and have seen many things (desiredCapabilities, profile classes, etc.) that are all deprecated. Also saw how they did it in Java or other languages but I couldn't find a solution to my specific problem.  I want to load my usual firefox (release-default) profile to be able to use the Widevine Content Decryption Module Plugin to load the amazon music page where I want to get data from.  The problem is I can't make the firefox window start with the desired add-on or profile.   Someone else has had a similiar issue but with a remote webdriver  #9949, but I'm not sure if it's the same problem because I don't do anything with remote webdrivers.  Also mentioned was the use of prefs or zipping the profile but honestly I don't know how or if that would work.    ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.service import Service from selenium.webdriver.firefox.options import Options  options = Options() profile_path = r'D:\Omnia\Privat\Sonstiges\jj0zhvr9.Scraper Profile'  options.set_preference('profile', profile_path) service = Service(r'./driver/geckodriver.exe')  driver = webdriver.Firefox(options=options, service=service) driver.get(""https://music.amazon.com"") ```   ### Relevant log output  ```shell . ```   ### Operating System  Windows 11  ### Selenium version  Python 3.8.5  ### What are the browser(s) and version(s) where you see this issue?  Firefox 102.0.1  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.31.0  ### Are you using Selenium Grid?  _No response_","closed","I-question,","theCarefulIcarus","2022-07-11T18:36:13Z","2022-07-20T18:23:43Z"
"","10161","[🐛 Bug]: RequestWillBeSent doesn't work when the link opens another tab","### What happened?  Hello. I am using selenium to check submitted Requests from a page. I use the Network.RequestWillBeSent event for this. Everything works well until I come across a link that opens a new tab. Such links usually have a target = ""_blank"" attribute. When a new tab opens, I do not receive requests from it. I can only get requests from the initial tab.  How can I get all the requests from the new tab? If I need to initialize a new RequestWillBeSent event for a new tab, then I will miss the first requests from the page, which are very important to me.  I was trying to switch to another tab using driver.SwitchTo().Window(window), but that doesn't work.  ### How can we reproduce the issue?  ```shell static async Task Main(string[] args)         {             var options = new ChromeOptions();              var driver = new ChromeDriver(ChromeDriverService.CreateDefaultService(), options, TimeSpan.FromMinutes(2));              var devTools = (IDevTools)driver;             var session = devTools.GetDevToolsSession();             var domains = session.GetVersionSpecificDomains();              void RequestWillBeSentHandler(object sender, RequestWillBeSentEventArgs e)             {                 Console.WriteLine(e.Request.Url);             }              domains.Network.RequestWillBeSent += RequestWillBeSentHandler;             await domains.Network.Enable(new EnableCommandSettings());              driver.Navigate().GoToUrl(""https://www.selenium.dev/"");             driver.FindElement(By.XPath(""//a[@aria-label='GitHub']"")).Click();             Console.WriteLine(""------------------------------------------------"");             driver.Navigate().Refresh();              driver.Quit();         } ```   ### Relevant log output  ```shell Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 50285 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully.  DevTools listening on ws://127.0.0.1:50288/devtools/browser/fc80388a-ede6-4be6-8b6a-36242934acee [37120:3384:1217/105342.756:ERROR:chrome_browser_main_extra_parts_metrics.cc(226)] crbug.com/1216328: Checking Bluetooth availability started. Please report if there is no report that this ends. [37120:3384:1217/105342.757:ERROR:chrome_browser_main_extra_parts_metrics.cc(229)] crbug.com/1216328: Checking Bluetooth availability ended. [37120:3384:1217/105342.757:ERROR:chrome_browser_main_extra_parts_metrics.cc(232)] crbug.com/1216328: Checking default browser status started. Please report if there is no report that this ends. [37120:3384:1217/105342.762:ERROR:chrome_browser_main_extra_parts_metrics.cc(236)] crbug.com/1216328: Checking default browser status ended. https://www.selenium.dev/ https://www.selenium.dev/scss/main.min.9dfeff3fd02d7e6770041efaeaa2d7e9ecd602e820f926eb6921691c1f253d02.css https://code.jquery.com/jquery-3.5.1.min.js https://www.selenium.dev/css/prism.css https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css https://plausible.io/js/plausible.js https://www.selenium.dev/images/sponsors/browserstack.png https://www.selenium.dev/images/sponsors/saucelabs.png https://www.selenium.dev/images/sponsors/experitest.png https://www.selenium.dev/images/sponsors/applitools.png https://www.selenium.dev/images/sponsors/perfecto-perforce.jpg https://www.selenium.dev/images/sponsors/lambda-test.png https://www.selenium.dev/images/sponsors/subject7_logo.png https://www.selenium.dev/images/sponsors/Avo_logo.png https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif https://www.paypal.com/en_US/i/scr/pixel.gif https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js https://www.selenium.dev/js/tabpane-persist.js https://www.selenium.dev/js/main.min.5c74b870c6953931a705f390a49c7e4c0a842ec5c83b24354758dd674343ed0d.js https://www.selenium.dev/js/prism.js https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js https://fonts.googleapis.com/css?family=Encode+Sans:300,300i,400,400i,700,700i&display=swap https://cdn.jsdelivr.net/gh/rastikerdar/vazir-font@v27.0.1/dist/font-face.css https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;500;600;700&display=swap https://fonts.googleapis.com/css2?family=Tajawal:wght@300;400;500;700&display=swap data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%2375c563' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%2370c25c' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%236ac056' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%2365bd4f' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%235fbb49' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%2359b943' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%2354b73d' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%234eb436' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%2349b230' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%2343b02a' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%2385d8ee' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%2380d7ed' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%237bd5ed' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%2376d4ec' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%2371d2eb' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%236dd1ea' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%2368cfea' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%2363cee9' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%235ecce9' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%2359cbe8' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%234669b9' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%233f63b6' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%23385db4' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%232f57b1' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%232651ae' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%23214bab' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%231c45a8' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%23153fa6' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%230c39a3' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%230033a0' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E https://fonts.gstatic.com/s/encodesans/v8/LDIhapOFNxEwR-Bd1O9uYNmnUQomAgE25imKSbHLSMA6.woff2 https://www.selenium.dev/webfonts/fa-solid-900.woff2 https://www.selenium.dev/webfonts/fa-brands-400.woff2 https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif https://www.paypalobjects.com/en_US/i/scr/pixel.gif https://www.selenium.dev/favicons/favicon.ico ------------------------------------------------ https://www.selenium.dev/favicons/favicon-32x32.png https://www.selenium.dev/ https://www.selenium.dev/scss/main.min.9dfeff3fd02d7e6770041efaeaa2d7e9ecd602e820f926eb6921691c1f253d02.css https://code.jquery.com/jquery-3.5.1.min.js https://www.selenium.dev/css/prism.css https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.css https://plausible.io/js/plausible.js https://www.selenium.dev/images/sponsors/browserstack.png https://www.selenium.dev/images/sponsors/saucelabs.png https://www.selenium.dev/images/sponsors/experitest.png https://www.selenium.dev/images/sponsors/applitools.png https://www.selenium.dev/images/sponsors/perfecto-perforce.jpg https://www.selenium.dev/images/sponsors/lambda-test.png https://www.selenium.dev/images/sponsors/subject7_logo.png https://www.selenium.dev/images/sponsors/Avo_logo.png https://www.paypal.com/en_US/i/btn/btn_donateCC_LG.gif https://www.paypal.com/en_US/i/scr/pixel.gif https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.min.js https://www.selenium.dev/js/tabpane-persist.js https://www.selenium.dev/js/main.min.5c74b870c6953931a705f390a49c7e4c0a842ec5c83b24354758dd674343ed0d.js https://www.selenium.dev/js/prism.js https://cdn.jsdelivr.net/npm/docsearch.js@2/dist/cdn/docsearch.min.js https://fonts.googleapis.com/css?family=Encode+Sans:300,300i,400,400i,700,700i&display=swap https://cdn.jsdelivr.net/gh/rastikerdar/vazir-font@v27.0.1/dist/font-face.css https://fonts.googleapis.com/css2?family=Rubik:wght@300;400;500;600;700&display=swap https://fonts.googleapis.com/css2?family=Tajawal:wght@300;400;500;700&display=swap https://fonts.gstatic.com/s/encodesans/v8/LDIhapOFNxEwR-Bd1O9uYNmnUQomAgE25imKSbHLSMA6.woff2 https://www.selenium.dev/webfonts/fa-solid-900.woff2 https://www.selenium.dev/webfonts/fa-brands-400.woff2 data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%2375c563' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%2370c25c' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%236ac056' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%2365bd4f' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%235fbb49' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%2359b943' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%2354b73d' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%234eb436' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%2349b230' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%2343b02a' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%2385d8ee' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%2380d7ed' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%237bd5ed' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%2376d4ec' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%2371d2eb' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%236dd1ea' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%2368cfea' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%2363cee9' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%235ecce9' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%2359cbe8' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpath fill='%234669b9' d='M486 705.8c-109.3-21.8-223.4-32.2-335.3-19.4C99.5 692.1 49 703 0 719.8V800h843.8c-115.9-33.2-230.8-68.1-347.6-92.2C492.8 707.1 489.4 706.5 486 705.8z'/%3E%3Cpath fill='%233f63b6' d='M1600 0H0v719.8c49-16.8 99.5-27.8 150.7-33.5c111.9-12.7 226-2.4 335.3 19.4c3.4 0.7 6.8 1.4 10.2 2c116.8 24 231.7 59 347.6 92.2H1600V0z'/%3E%3Cpath fill='%23385db4' d='M478.4 581c3.2 0.8 6.4 1.7 9.5 2.5c196.2 52.5 388.7 133.5 593.5 176.6c174.2 36.6 349.5 29.2 518.6-10.2V0H0v574.9c52.3-17.6 106.5-27.7 161.1-30.9C268.4 537.4 375.7 554.2 478.4 581z'/%3E%3Cpath fill='%232f57b1' d='M0 0v429.4c55.6-18.4 113.5-27.3 171.4-27.7c102.8-0.8 203.2 22.7 299.3 54.5c3 1 5.9 2 8.9 3c183.6 62 365.7 146.1 562.4 192.1c186.7 43.7 376.3 34.4 557.9-12.6V0H0z'/%3E%3Cpath fill='%232651ae' d='M181.8 259.4c98.2 6 191.9 35.2 281.3 72.1c2.8 1.1 5.5 2.3 8.3 3.4c171 71.6 342.7 158.5 531.3 207.7c198.8 51.8 403.4 40.8 597.3-14.8V0H0v283.2C59 263.6 120.6 255.7 181.8 259.4z'/%3E%3Cpath fill='%23214bab' d='M1600 0H0v136.3c62.3-20.9 127.7-27.5 192.2-19.2c93.6 12.1 180.5 47.7 263.3 89.6c2.6 1.3 5.1 2.6 7.7 3.9c158.4 81.1 319.7 170.9 500.3 223.2c210.5 61 430.8 49 636.6-16.6V0z'/%3E%3Cpath fill='%231c45a8' d='M454.9 86.3C600.7 177 751.6 269.3 924.1 325c208.6 67.4 431.3 60.8 637.9-5.3c12.8-4.1 25.4-8.4 38.1-12.9V0H288.1c56 21.3 108.7 50.6 159.7 82C450.2 83.4 452.5 84.9 454.9 86.3z'/%3E%3Cpath fill='%23153fa6' d='M1600 0H498c118.1 85.8 243.5 164.5 386.8 216.2c191.8 69.2 400 74.7 595 21.1c40.8-11.2 81.1-25.2 120.3-41.7V0z'/%3E%3Cpath fill='%230c39a3' d='M1397.5 154.8c47.2-10.6 93.6-25.3 138.6-43.8c21.7-8.9 43-18.8 63.9-29.5V0H643.4c62.9 41.7 129.7 78.2 202.1 107.4C1020.4 178.1 1214.2 196.1 1397.5 154.8z'/%3E%3Cpath fill='%230033a0' d='M1315.3 72.4c75.3-12.6 148.9-37.1 216.8-72.4h-723C966.8 71 1144.7 101 1315.3 72.4z'/%3E%3C/g%3E%3C/svg%3E https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif https://www.paypalobjects.com/en_US/i/scr/pixel.gif https://www.selenium.dev/favicons/favicon.ico  C:\Users\ABC\source\repos\ConsoleApp3\ConsoleApp3\bin\Debug\net5.0\ConsoleApp3.exe (process 32436) exited with code 0. To automatically close the console when debugging stops, enable Tools->Options->Debugging->Automatically close the console when debugging stops. Press any key to close this window . . . ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.1, .Net Core 5 or .NET Framework 4.7.2(C# 8)  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96  ### Are you using Selenium Grid?  no","open","I-defect,","lopukhDA","2021-12-17T07:54:20Z","2022-05-03T10:21:12Z"
"","10231","[🐛 Bug]: Selenium 4 Java does not support authenticated proxy to connect to remote webdriver","### What happened?  Hello, using Selenium 4.1.1 from Java - our setup has a corporate authenticated proxy needed to get to a Selenium grid connection  ### How can we reproduce the issue?  ```shell The documented ways to do authentication with Proxy, e.g. setting system properties or Authenticator handler like below, works in the sense that it tries to use the proxy, but does not perform the authentication. Doing the same for an http connection works so must be specific to http connection implementation. netty has ProxyHandler and an authentication scheme (https://netty.io/4.1/api/io/netty/handler/proxy/ProxyHandler.html) but not sure how to apply it when setting up the remote driver          System.getProperties().put(""http.proxyHost"", proxyHost);         System.getProperties().put(""http.proxyPort"", proxyPort);         System.getProperties().put(""http.proxyUser"", proxyUser);         System.getProperties().put(""http.proxyPassword"", proxyPassword);          System.getProperties().put(""https.proxyHost"", proxyHost);         System.getProperties().put(""https.proxyPort"", proxyPort);         System.getProperties().put(""https.proxyUser"", proxyUser);         System.getProperties().put(""https.proxyPassword"", proxyPassword);          Authenticator.setDefault(new Authenticator() {             public PasswordAuthentication getPasswordAuthentication() {                 return new PasswordAuthentication(proxyUser, proxyPassword.toCharArray());             }         } );          WebDriver driver = new RemoteWebDriver(new URL(""http://10.0.0.1/wd/hub""), options); ```   ### Relevant log output  ```shell no log output ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  Remote  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","girtsn","2022-01-07T12:46:32Z","2022-04-09T22:56:03Z"
"","10381","[🐛 Bug]: Very important time difference when executing driver.page_source","### What happened?  Hello, this is my first report on Github I hope that it is the appropriate way to do it. I found this issue with selenium and beautiful soup with python 3.8  While I try to recover in a while 1 the content of a page using selenium and beautiful soup, I saw that time time do the exact same action driver.page_source can take up to 2 time for the exact same page with for obtaining the same ""size"" value  My CPU and memory are always under 50%  thank you regards  ### How can we reproduce the issue?  ```shell from datetime import datetime from bs4 import BeautifulSoup from sys import getsizeof import time from selenium import webdriver  from selenium.webdriver.common.desired_capabilities import DesiredCapabilities   from selenium.webdriver.chrome.options import Options    caps = DesiredCapabilities().CHROME caps[""pageLoadStrategy""] = ""normal""         chrome_options = Options() chrome_options.add_argument(""--headless"") driver = webdriver.Chrome(desired_capabilities=caps, options=chrome_options) driver.get(""https://www.baidu.com/"")    time.sleep(10)   #wait in a bad way that it is properly loaded                     timetablecontent , sizecontent , sizesoup, timetablesoup=[],[],[],[] for i in range(0,500):      start = datetime.now()     content = driver.page_source         stop=datetime.now()     timetablecontent.append(stop-start)          start = datetime.now()     soup = BeautifulSoup(content,features=""lxml"")      stop=datetime.now()     timetablesoup.append(stop-start)             sizecontent.append(getsizeof(content))     sizesoup.append(getsizeof(soup))      print(""Temps max"",max(timetablecontent)) print(""Temps min"",min(timetablecontent)) print(""Temps max"",max(timetablesoup)) print(""Temps min"",min(timetablesoup)) print(""Content max"",max(sizecontent)) print(""Content min"",min(sizecontent)) print(""Soup max"",max(sizesoup)) print(""Soup min"",min(sizesoup)) ```   ### Relevant log output  ```shell Temps max 0:00:00.187500 Temps min 0:00:00.099914 Temps max 0:00:00.140625 Temps min 0:00:00.031243 Content max 786244 Content min 786244 Soup max 48 Soup min 48 ```   ### Operating System  Windows 10 and Ubuntu  ### Selenium version  Python 3.9  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?   Chrome Driver 97.0.4692.71  ### Are you using Selenium Grid?  _No response_","closed","I-question,","tianjinexpats","2022-02-20T06:20:00Z","2022-03-24T00:09:22Z"
"","10788","[🐛 Bug]: windows 10pro, python 3.9.13, selenium 4, chrome 102.0.5005.115, chromedriver 102.0.5005.61. my script doesn't work","### What happened?  Hello, my following script just stopped to working, i don't understand why, because i used it every day, many times per day. My s.o. is windows 10pro, my idle is python 3.9.13, i've just installed selenium 4 (but neither selenium 3 works).  I tried many combinations between Chrome's and  chromedriver's versions, but nothin happened. p.s. maybe is important that chromedriver doesn't start because it has no sessionID assigned. thanks  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options() chrome_options.add_argument('--headless') chrome_options.add_argument('--no-sandbox') chrome_options.add_argument('--disable-dev-shm-usage') chrome_options.binary_location='C:\Program_Files\Google\Chrome\Application' d = webdriver.Chrome(options=chrome_options) d.get('https://www.google.nl/') ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""C:\marche\PROGRAMMA\lab.PYW"", line 9, in      d = webdriver.Chrome(options=chrome_options)   File ""C:\Users\Utente\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 70, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""C:\Users\Utente\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\chromium\webdriver.py"", line 92, in __init__     RemoteWebDriver.__init__(   File ""C:\Users\Utente\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 275, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Users\Utente\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 365, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Users\Utente\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 430, in execute     self.error_handler.check_response(response)   File ""C:\Users\Utente\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: no chrome binary at C:\Program_Files\Google\Chrome\Application Stacktrace: Backtrace: 	Ordinal0 [0x0042D953+2414931] 	Ordinal0 [0x003BF5E1+1963489] 	Ordinal0 [0x002AC6B8+837304] 	Ordinal0 [0x002C7A23+948771] 	Ordinal0 [0x002C5FB1+942001] 	Ordinal0 [0x002F9100+1151232] 	Ordinal0 [0x002F8D5A+1150298] 	Ordinal0 [0x002F42B6+1131190] 	Ordinal0 [0x002CE860+976992] 	Ordinal0 [0x002CF756+980822] 	GetHandleVerifier [0x0069CC62+2510274] 	GetHandleVerifier [0x0068F760+2455744] 	GetHandleVerifier [0x004BEABA+551962] 	GetHandleVerifier [0x004BD916+547446] 	Ordinal0 [0x003C5F3B+1990459] 	Ordinal0 [0x003CA898+2009240] 	Ordinal0 [0x003CA985+2009477] 	Ordinal0 [0x003D3AD1+2046673] 	BaseThreadInitThunk [0x7744FA29+25] 	RtlGetAppContainerNamedObjectPath [0x77D67A9E+286] 	RtlGetAppContainerNamedObjectPath [0x77D67A6E+238] ```   ### Operating System  windows 10 pro  ### Selenium version  selenium 4  ### What are the browser(s) and version(s) where you see this issue?  chrome 102.0.5005.115  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver 102.0.5005.61  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","PyyTom","2022-06-21T10:19:09Z","2022-07-08T12:27:14Z"
"","10406","[🐛 Bug]: SafariDriver throws WebDriverException without any message","### What happened?  Hello, I wrote tests using ChromeDriver and GeckoDriver and i don't have any issues with them inside of Windows, today i started working on implementing these tests on macOS with Safari and am having a weird issue that I haven't seen before and I also couldn't find any resources online to help me.   Almost all of my code runs without any issue, but some one off lines are affected and when i call .click() they throw me the WebDriverException with an empty Message.   When using except to pass the thrown exception all tests keep running without a problem like nothing has happened, which is my temporary fix for now.  Does anybody have any idea what could be the cause of this?   ### How can we reproduce the issue?  ```shell profile_selector = 'app-dating-match > div > div:nth-child('+ str(profile_to_click_nth_child) +') > div.card-content > div.details > div.details-container > p'  profile = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, profile_selector)))  profile.click() # Exception gets thrown here ```   ### Relevant log output  ```shell Exception has occurred: WebDriverException Message:    File ""/Users/romanjuszczyk/Documents/GitHub/MSD-Community-Tests/community_tests.py"", line 866, in test_opening_profiles_limit_basic     profile.click()   File ""/Users/romanjuszczyk/Documents/GitHub/MSD-Community-Tests/community_tests.py"", line 929, in test_basic_member_limits     test_opening_profiles_limit_basic()   File ""/Users/romanjuszczyk/Documents/GitHub/MSD-Community-Tests/community_tests.py"", line 3209, in run_tests     test_basic_member_limits() # Webdriverexception   File ""/Users/romanjuszczyk/Documents/GitHub/MSD-Community-Tests/community_tests.py"", line 3250, in      run_tests() ```   ### Operating System  macOS  ### Selenium version  Python 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Safari 15.2 (17612.3.6.1.6)  ### What are the browser driver(s) and version(s) where you see this issue?  Included with Safari 15.2 (17612.3.6.1.6)  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","RomanJus","2022-03-01T16:00:07Z","2022-04-02T00:09:41Z"
"","10534","[🐛 Bug]: Meta Mask extiension automation","### What happened?  Hello, i want to do daily processes with metamask. For that i need to approve transactions etc.  Its easy to automate the metamask setup and create my wallet add network etc. But if i want to connect me over web3 to metamask it open a new windows.  How do i get access to this new window to approve transactions and so on?  ### How can we reproduce the issue?  ```shell Create MetaMask account Add the Polygon Network to metamask and try to connect web 3 at https://polygonscan.com/address/0x4ab071c42c28c4858c4bac171f06b13586b20f30#writeContract  => New window will open and is not interactable ```   ### Relevant log output  ```shell - ```   ### Operating System  Windows 10  ### Selenium version  actual  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver  ### Are you using Selenium Grid?  no","closed","I-question,","ChristianErdtmann","2022-04-09T22:45:22Z","2022-05-10T00:11:53Z"
"","10455","[🐛 Bug]: Duplicated classes in java files for 4.1.2","### What happened?  Hello, i followed a toturial to write an android app. The toturial use older versions of the .jar files i using the newest.  I have inserted the following .jar files to my projekt: selenium-server-4.1.2.jar and all libs from the  selenium-java-4.1.2.zip  the libs in Selenium-java-4.1.2 contains netty-codec-http-4.1.73.Final.jar and it seems that bring up a Eroor in combination with the selenium-server-4.1.2.jar because there are much classes duplicated.  And the netty-codec-http-4.1.73.Final.jar is not the only class wich cause this duplication error.  More infos in the Error log, i have only inserted a part of the errors there are much more files that cause this duplication error. But I cant insert so much characters here, because of this in inserted a file. [Error.txt](https://github.com/SeleniumHQ/selenium/files/8292871/Error.txt)     ### How can we reproduce the issue?  ```shell See steps above. ```   ### Relevant log output  ```shell -codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker00 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker07 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker08 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerHandshakerFactory found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$HandshakeComplete found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$2 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$3 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketUtil found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketUtil$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketUtil$2 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.WebSocketVersion found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter$2 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$1 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$2 found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateEncoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameClientExtensionHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameClientExtensionHandshaker$DeflateFrameClientExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameServerExtensionHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateFrameServerExtensionHandshaker$DeflateFrameServerExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateEncoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateClientExtensionHandshaker$PermessageDeflateExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateEncoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker$PermessageDeflateExtension found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketClientCompressionHandler found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.json.JsonObjectDecoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.ChannelBufferByteInput found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.ChannelBufferByteOutput found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.ContextBoundUnmarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.DefaultMarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.DefaultUnmarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.LimitingByteInput found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.MarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.MarshallingDecoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.MarshallingEncoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.ThreadLocalMarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.ThreadLocalUnmarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.marshalling.UnmarshallerProvider found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.protobuf.ProtobufDecoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.protobuf.ProtobufDecoderNano found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.protobuf.ProtobufEncoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.protobuf.ProtobufEncoderNano found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.protobuf.ProtobufVarint32FrameDecoder found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.protobuf.ProtobufVarint32LengthFieldPrepender found in modules netty-codec-4.1.73.Final (netty-codec-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.rtsp.RtspDecoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) Duplicate class io.netty.handler.codec.rtsp.RtspEncoder found in modules netty-codec-http-4.1.73.Final (netty-codec-http-4.1.73.Final.jar) and selenium-server-4.1.2 (selenium-server-4.1.2.jar) ```   ### Operating System  Windows 10  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  No Browser - Android app  ### What are the browser driver(s) and version(s) where you see this issue?  Android App  ### Are you using Selenium Grid?  Yes","closed","I-question,","ChristianErdtmann","2022-03-17T22:13:11Z","2022-04-17T00:12:08Z"
"","10147","[🐛 Bug]:  A command response was not received: Network.getResponseBody C#","### What happened?  Hello, I am constantly getting an error when I try to get the response body.  `One or more errors occurred. (A command response was not received: Network.getResponseBody)`  StackTrace: ```   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)    at System.Threading.Tasks.Task`1.get_Result()    at ConsoleApp3.Program.c__DisplayClass0_0.g__RequestWillBeSentHandler|0(Object sender, RequestWillBeSentEventArgs e) in C:\Users\ABC\source\repos\ConsoleApp3\ConsoleApp3\Program.cs:line 34 ```  ### How can we reproduce the issue?  ```shell static async Task Main(string[] args)         {             var options = new ChromeOptions();              var driver = new ChromeDriver(ChromeDriverService.CreateDefaultService(), options, TimeSpan.FromMinutes(2));              var devTools = (IDevTools)driver;             var session = devTools.GetDevToolsSession();             var domains = session.GetVersionSpecificDomains();              void RequestWillBeSentHandler(object sender, RequestWillBeSentEventArgs e)             {                 if (e.Request.Url.Contains(""google.com""))                 {                     try                     {                         var getResponseBody = domains.Network.GetResponseBody(new GetResponseBodyCommandSettings()                         {                             RequestId = e.RequestId                         });                          var body = getResponseBody.Result.Body;                     }                     catch (Exception ex)                     {                         Console.WriteLine(ex);                     }                 }             }              domains.Network.RequestWillBeSent += RequestWillBeSentHandler;             await domains.Network.Enable(new EnableCommandSettings());              driver.Navigate().GoToUrl(""https://www.google.com/"");              driver.Quit();         } ```   ### Relevant log output  ```shell Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 55559 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully.  DevTools listening on ws://127.0.0.1:55562/devtools/browser/7a626fcd-3684-445b-9b6f-ebdb992b3712 [29984:27600:1214/114346.774:ERROR:chrome_browser_main_extra_parts_metrics.cc(226)] crbug.com/1216328: Checking Bluetooth availability started. Please report if there is no report that this ends. [29984:27600:1214/114346.774:ERROR:chrome_browser_main_extra_parts_metrics.cc(229)] crbug.com/1216328: Checking Bluetooth availability ended. [29984:27600:1214/114346.774:ERROR:chrome_browser_main_extra_parts_metrics.cc(232)] crbug.com/1216328: Checking default browser status started. Please report if there is no report that this ends. [29984:27600:1214/114346.780:ERROR:chrome_browser_main_extra_parts_metrics.cc(236)] crbug.com/1216328: Checking default browser status ended. System.AggregateException: One or more errors occurred. (A command response was not received: Network.getResponseBody)  ---> System.InvalidOperationException: A command response was not received: Network.getResponseBody    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken commandParameters, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V96.Network.NetworkAdapter.GetResponseBody(GetResponseBodyCommandSettings command, CancellationToken cancellationToken, Nullable`1 millisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    --- End of inner exception stack trace ---    at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)    at System.Threading.Tasks.Task`1.get_Result()    at ConsoleApp3.Program.c__DisplayClass0_0.g__RequestWillBeSentHandler|0(Object sender, RequestWillBeSentEventArgs e) in C:\Users\ABC\source\repos\ConsoleApp3\ConsoleApp3\Program.cs:line 34  C:\Users\ABC\source\repos\ConsoleApp3\ConsoleApp3\bin\Debug\net5.0\ConsoleApp3.exe (process 14516) exited with code 0. To automatically close the console when debugging stops, enable Tools->Options->Debugging->Automatically close the console when debugging stops. Press any key to close this window . . . ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.1, .Net Core 5 or .NET Framework 4.7.2(C# 8)  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96  ### Are you using Selenium Grid?  no","open","C-devtools,","lopukhDA","2021-12-14T08:40:08Z","2022-07-12T14:03:22Z"
"","10675","[🐛 Bug]: The ""Unexpected error creating WebSocket DevTools session."" error is thrown after attempt to get the DevTools Session","### What happened?  Hello, Currently we are working on additional logging using the DevTools protocol Unfortunately, after Google Chrome updated to the 101.0.4951.67 version, there is no way to initialize the devTools session because of the following error: ``` Unexpected error creating WebSocket DevTools session Inner Exception 1: NullReferenceException: Object reference not set to an instance of an object. ```  The initialized driver has the following properties: ``` {{   ""acceptInsecureCerts"": false,   ""browserName"": ""chrome"",   ""browserVersion"": ""101.0.4951.67"",   ""chrome"": {     ""chromedriverVersion"": ""101.0.4951.41 (93c720db8323b3ec10d056025ab95c23a31997c9-refs/branch-heads/4951@{#904})"",     ""userDataDir"": ""C:\\Users\\Office\\AppData\\Local\\Temp\\scoped_dir14936_1859885920""   },   ""goog:chromeOptions"": {     ""debuggerAddress"": ""localhost:58932""   },   ""networkConnectionEnabled"": false,   ""pageLoadStrategy"": ""normal"",   ""platformName"": ""windows"",   ""proxy"": {},   ""setWindowRect"": true,   ""strictFileInteractability"": false,   ""timeouts"": {     ""implicit"": 0,     ""pageLoad"": 300000,     ""script"": 30000   },   ""unhandledPromptBehavior"": ""dismiss and notify"",   ""webauthn:extension:credBlob"": true,   ""webauthn:extension:largeBlob"": true,   ""webauthn:virtualAuthenticators"": true }}  ```  ### How can we reproduce the issue?  ```shell var devTools = (IDevTools)driver; var session = devTools.GetDevToolsSession();   // The error will be thrown here _domains = session.GetVersionSpecificDomains(); _domains.Network.Enable(new EnableCommandSettings()).GetAwaiter().GetResult(); ``` ```   ### Relevant log output  ```shell OpenQA.Selenium.WebDriverException   HResult=0x80131500   Message=Unexpected error creating WebSocket DevTools session.   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Chromium.ChromiumDriver.GetDevToolsSession(Int32 devToolsProtocolVersion)    at OpenQA.Selenium.Chromium.ChromiumDriver.GetDevToolsSession()    at DashworksTestAutomationCore.Utils.Diagnostics.ApiRequest.ApiRequestRecordingService..ctor(WebDriver driver) in C:\Users\Office\Source\Repos\dashworksTesting\dashworks\SpecFlow\DashworksTestAutomationCore\Utils\Diagnostics\ApiRequest\ApiRequestRecordingService.cs:line 23    at DashworksTestAutomation.Base.BeforeAfterActions.OnStartUp() in C:\Users\Office\Source\Repos\dashworksTesting\dashworks\SpecFlow\DashworksTestAutomationCore\Base\BeforeAfterActions.cs:line 114    This exception was originally thrown at this call stack:     [External Code]  Inner Exception 1: NullReferenceException: Object reference not set to an instance of an object. ```   ### Operating System  Windows 10   ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 101.0.4951.67  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","YevheniiKel","2022-05-20T10:20:50Z","2022-06-20T00:11:17Z"
"","10054","[🐛 Bug]: Selenium 4 WebSocket exception during performing basic authorization C#","### What happened?  Hello, currently we are under investigation of the possibility to use Selenium 4 on our project and we are faced with the next issue: During performing the basic authorization, authorization is passing successfully but at the same time we have the next exception  `There is already one outstanding 'SendAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.`  Could you please take a look at this issue?    ### How can we reproduce the issue?  ```shell static void Main(string[] args)         {             var options = new ChromeOptions();              var driver = new ChromeDriver(ChromeDriverService.CreateDefaultService(), options, TimeSpan.FromMinutes(2));               NetworkAuthenticationHandler handler = new NetworkAuthenticationHandler()             {                 UriMatcher = d => d.Host.Contains(""jigsaw.w3.org""),                 Credentials = new PasswordCredentials(""guest"", ""guest"")             };              var networkInterceptor = driver.Manage().Network;             networkInterceptor.AddAuthenticationHandler(handler);             networkInterceptor.StartMonitoring();              driver.Navigate().GoToUrl(""https://jigsaw.w3.org/HTTP/Basic/"");              networkInterceptor.StopMonitoring();             driver.Quit();         } ```   ### Relevant log output  ```shell Starting ChromeDriver 95.0.4638.69 (6a1600ed572fedecd573b6c2b90a22fe6392a410-refs/branch-heads/4638@{#984}) on port 61026 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully.  DevTools listening on ws://127.0.0.1:61029/devtools/browser/046fbea2-493a-4b0e-89a4-e0390b253469 [15732:36144:1118/170820.587:ERROR:chrome_browser_main_extra_parts_metrics.cc(230)] crbug.com/1216328: Checking Bluetooth availability started. Please report if there is no report that this ends. [15732:37544:1118/170820.587:ERROR:device_event_log_impl.cc(214)] [17:08:20.587] USB: usb_device_handle_win.cc:1048 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [15732:36144:1118/170820.587:ERROR:chrome_browser_main_extra_parts_metrics.cc(233)] crbug.com/1216328: Checking Bluetooth availability ended. [15732:36144:1118/170820.588:ERROR:chrome_browser_main_extra_parts_metrics.cc(236)] crbug.com/1216328: Checking default browser status started. Please report if there is no report that this ends. [15732:36144:1118/170820.596:ERROR:chrome_browser_main_extra_parts_metrics.cc(240)] crbug.com/1216328: Checking default browser status ended.  Unhandled Exception: Unhandled Exception: System.InvalidOperationException: There is already one outstanding 'SendAsync' call for this WebSocket instance. ReceiveAsync and SendAsync can be called simultaneously, but at most one outstanding operation for each of them is allowed at the same time.    at System.Net.WebSockets.WebSocketBase.d__47.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__35.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__34`2.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V95.Fetch.FetchAdapter.d__16.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V95.V95Network.d__16.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at OpenQA.Selenium.NetworkManager.d__21.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.AsyncMethodBuilderCore.c.b__6_1(Object state)    at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)    at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() System.Net.WebSockets.WebSocketException: The 'System.Net.WebSockets.InternalClientWebSocket' instance cannot be used for communication because it has been transitioned into the 'Aborted' state. ---> System.Net.WebSockets.WebSocketException: The 'System.Net.WebSockets.InternalClientWebSocket' instance cannot be used for communication because it has been transitioned into the 'Aborted' state.    at System.Net.WebSockets.WebSocketProtocolComponent.ThrowIfSessionHandleClosed(WebSocketBase webSocket)    at System.Net.WebSockets.WebSocketProtocolComponent.WebSocketGetAction(WebSocketBase webSocket, ActionQueue actionQueue, Buffer[] dataBuffers, UInt32& dataBufferCount, Action& action, BufferType& bufferType, IntPtr& actionContext)    at System.Net.WebSockets.WebSocketBase.WebSocketOperation.d__19.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Net.WebSockets.WebSocketBase.d__47.MoveNext()    --- End of inner exception stack trace ---    at System.Net.WebSockets.WebSocketBase.ThrowIfAborted(Boolean aborted, Exception innerException)    at System.Net.WebSockets.WebSocketBase.ThrowIfConvertibleException(String methodName, Exception exception, CancellationToken cancellationToken, Boolean aborted)    at System.Net.WebSockets.WebSocketBase.d__47.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__35.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__34`2.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V95.Fetch.FetchAdapter.d__16.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V95.V95Network.d__16.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at OpenQA.Selenium.NetworkManager.d__21.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.AsyncMethodBuilderCore.c.b__6_1(Object state)    at System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(Object state)    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)    at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)    at System.Threading.QueueUserWorkItemCallback.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.0.0, .Net Framework 4.7.2 (C# 8)  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.69  ### Are you using Selenium Grid?  no","open","I-defect,","lopukhDA","2021-11-18T14:19:26Z","2021-12-10T14:14:58Z"
"","10184","[🐛 Bug]:Open browser doesn't work with Edge + Selenium==4.1.0('Options' object has no attribute 'use_chromium') but OK with Edge + selenium==4.0.0.rc2","### What happened?  Hello, after upgrading Selenium to 4.1.0, when I launch a simple test case RobotFramework on Edge(Version 96.0.1054.62)  I have this error: **'Options' object has no attribute 'use_chromium'** and no browser is open but it works well with selenium==4.0.0.rc2  Is this an evolution ?  **Fail** with packages: Python 3.9.4, robotframework==4.1.3, robotframework-seleniumlibrary==5.1.3, selenium==4.1.0  **Pass** with packages: Python 3.9.4, robotframework==4.1.3, robotframework-seleniumlibrary==5.1.3, selenium==4.0.0.rc2   ### How can we reproduce the issue?  ```shell SeleniumLibrary.Open Browser   ${url}    edge    options=use_chromium=True ```   ### Relevant log output  ```shell FAIL AttributeError: 'Options' object has no attribute 'use_chromium' ```   ### Operating System  Windows 10  ### Selenium version  selenium==4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Edge Version 96.0.1054.62  ### What are the browser driver(s) and version(s) where you see this issue?  MSEdgeDriver 96.0.1054.62  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","jgdevrennes","2021-12-25T19:08:23Z","2022-01-26T00:09:52Z"
"","10116","[🐛 Bug]: Selenium 4.1.0 does not work with Server Grid","### What happened?  Hello, after updating to v 4.1.0 our Grid Server stoped working.  We have Docker network with Grid Server. Hub has own container. Nodes have own containers. We tried Server Grid 3 and Server Grid 4.1.0 with Selenium 4.1.1 (If we run Selenium 4.0.0 with Selenium Server 4.1.0 it woks without issues.) Error is the same for all browsers  ``` org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.     Build info: version: '4.1.0', revision: '87802e897b'     System info: host: '2ecd9dd8e87a', ip: '172.70.160.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.0-18-amd64', java.version: '11.0.9'     Driver info: org.openqa.selenium.remote.RemoteWebDriver     Command: [2b8f20f44b9e83851989e56a2c833977, switchToFrame {id=null}]     Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:39371}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.uU...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://172.70.160.5:4444/sess..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}    Session ID: 2b8f20f44b9e83851989e56a2c833977     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:583) ~[selenium-remote-driver-4.1.0.jar:?]     at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.defaultContent(RemoteWebDriver.java:1042) ~[selenium-remote-driver-4.1.0.jar:?]    at jdk.internal.reflect.GeneratedMethodAccessor6.invoke(Unknown Source) ~[?:?]     at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) ~[?:?]     at java.lang.reflect.Method.invoke(Unknown Source) ~[?:?]     at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:232) ~[selenium-support-4.1.0.jar:?]     at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48) ~[selenium-support-4.1.0.jar:?]     at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:294) ~[selenium-support-4.1.0.jar:?]     at com.sun.proxy.$Proxy35.defaultContent(Unknown Source) ~[?:?]     at com.polarion.selenium.framework.PolarionWatcherTestRule.switchableToDefaultContent(PolarionWatcherTestRule.java:143) [selenium-framework-1.1-SNAPSHOT.jar:?]     at com.polarion.selenium.framework.PolarionWatcherTestRule.failed(PolarionWatcherTestRule.java:81) [selenium-framework-1.1-SNAPSHOT.jar:?]     at com.polarion.selenium.framework.RetryTestRule.failedQuietly(RetryTestRule.java:103) [selenium-framework-1.1-SNAPSHOT.jar:?]     at com.polarion.selenium.framework.RetryTestRule.executeTest(RetryTestRule.java:93) [selenium-framework-1.1-SNAPSHOT.jar:?]     at com.polarion.selenium.framework.RetryTestRule$1.evaluate(RetryTestRule.java:39) [selenium-framework-1.1-SNAPSHOT.jar:?]     at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner.run(ParentRunner.java:413) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.Suite.runChild(Suite.java:128) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.Suite.runChild(Suite.java:27) [junit-4.13.2.jar:4.13.2]     at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) [junit-4.13.2.jar:4.13.2]     at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) [?:?]     at java.util.concurrent.FutureTask.run(Unknown Source) [?:?]     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) [?:?]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [?:?]     at java.lang.Thread.run(Unknown Source) [?:?]     Caused by: java.lang.NullPointerException     at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:47) ~[selenium-remote-driver-4.1.0.jar:?]      at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) ~[selenium-remote-driver-4.1.0.jar:?]     [junit] 	... 32 more ```  ### How can we reproduce the issue?  ```shell Server Version 4.1.0 Hub settings java -jar /root/selenium4/selenium-server.jar hub --session-request-timeout 600 --session-retry-interval 5 --relax-checks true --port 4444  Node Chrome settings java -jar /root/selenium4/selenium-server.jar node --config /root/config.toml  Content of /root/config.toml file: [events] publish = ""tcp://selenium:4442"" subscribe = ""tcp://selenium:4443""  [server] host = ""chrome"" port = 5555  [node] detect-drivers = false register-period = 300 session-timeout = 600 max-sessions = 2 hub-address = ""http://selenium:4444"" [[node.driver-configuration]] display-name = ""chrome"" stereotype = '{""browserName"": ""chrome"", ""browserVersion"": ""96.0"", ""platformName"": ""Linux""}' max-sessions = 2  ======================== Server version 3.141.59 Hub java -jar /root/selenium3/selenium-server.jar -timeout 1200 -browserTimeout 3600 -role hub -port 4444  Node java -jar /root/selenium3/selenium-server.jar -role node -hub http://selenium:4444/grid/register -jettyThreads 300 -maxSession 5 -port 5555 -browser ""browserName=chrome,maxInstances=10,platform=LINUX"" ```   ### Relevant log output  ```shell Hub log for 4.1.0 13:04:07.137 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 13:04:07.141 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 13:04:07.238 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.170.233.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.170.233.2:4443] 13:04:07.306 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.170.233.2:4442 and tcp://172.170.233.2:4443 13:04:07.330 INFO [UnboundZmqEventBus.] - Sockets created 13:04:08.331 INFO [UnboundZmqEventBus.] - Event bus ready 13:04:09.056 INFO [Hub.execute] - Started Selenium Hub 4.1.0 (revision 87802e897b): http://172.170.233.2:4444 13:06:17.004 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 13:06:17.506 INFO [LocalDistributor.add] - Added node fce3d102-203c-42ff-86b7-47fa949536a9 at http://edge:5555. Health check every 120s 13:06:17.511 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 13:06:18.537 WARN [RetryRequest.lambda$static$5] - Failure due to server error #1. Retrying. 13:06:18.645 INFO [LocalDistributor.add] - Added node bdb15ebc-d26c-4285-b7d5-5116ac4866d5 at http://firefox:5555. Health check every 120s 13:06:18.647 INFO [GridModel.setAvailability] - Switching node fce3d102-203c-42ff-86b7-47fa949536a9 (uri: http://edge:5555) from DOWN to UP 13:06:18.651 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 13:06:18.773 INFO [LocalDistributor.add] - Added node 430f9927-2e64-4959-a506-cf9aaf7ca8ac at http://chrome:5555. Health check every 120s 13:06:18.774 INFO [GridModel.setAvailability] - Switching node bdb15ebc-d26c-4285-b7d5-5116ac4866d5 (uri: http://firefox:5555) from DOWN to UP 13:06:18.787 INFO [GridModel.setAvailability] - Switching node 430f9927-2e64-4959-a506-cf9aaf7ca8ac (uri: http://chrome:5555) from DOWN to UP 13:06:33.540 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:33.540 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:33.540 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:34.229 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: a7d5ceeac4c04cdb80e1b5b98061f4a0, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.gkC5sv}, goog:chromeOptions: {debuggerAddress: localhost:45947}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:34.319 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: ecf269ac34d6f8dbc23aa50076f854c4, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:44951}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.Rr...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:34.995 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: a7d5ceeac4c04cdb80e1b5b98061f4a0 13:06:35.059 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: ecf269ac34d6f8dbc23aa50076f854c4 13:06:36.097 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 702e0f4d-bee6-459a-a93c-067ea3d99289, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:49210, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 263, moz:profile: /tmp/rust_mozprofilebs8mGX, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:06:37.079 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 702e0f4d-bee6-459a-a93c-067ea3d99289 13:06:38.541 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:38.542 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:38.542 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:38.833 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 4eab3a3cca287902844c69e23b599fbc, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:33273}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.gH...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:38.848 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: a49ada9806f10ff4b6835fbd53803b68, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.LvZOcB}, goog:chromeOptions: {debuggerAddress: localhost:35071}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:39.270 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: a49ada9806f10ff4b6835fbd53803b68 13:06:39.288 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 4eab3a3cca287902844c69e23b599fbc 13:06:40.567 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 6200141b-9c77-47ec-9193-eaff72890fd1, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:54768, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 501, moz:profile: /tmp/rust_mozprofileBNsskO, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:06:41.399 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 6200141b-9c77-47ec-9193-eaff72890fd1 13:06:43.544 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:43.545 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:43.545 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:43.816 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 99cce64948529dd382fde143a97b67c8, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.fNjICt}, goog:chromeOptions: {debuggerAddress: localhost:39557}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:43.840 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 75eb4fd79e57676fff9a870852e4020d, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:38571}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.fU...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:44.294 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 99cce64948529dd382fde143a97b67c8 13:06:44.360 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 75eb4fd79e57676fff9a870852e4020d 13:06:45.517 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: c70574e7-5ac3-40f7-8e9c-29b137f7ab66, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:38405, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 715, moz:profile: /tmp/rust_mozprofileB4ZQ09, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:06:46.367 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: c70574e7-5ac3-40f7-8e9c-29b137f7ab66 13:06:48.546 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:48.546 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:48.548 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:48.806 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 6e185e9dc8e71cf54102a25ecce11ab2, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.8bGCkY}, goog:chromeOptions: {debuggerAddress: localhost:34145}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:48.846 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 5fc48ce4eb5147546e6719293328a9ef, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:46339}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.Kg...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:49.124 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 6e185e9dc8e71cf54102a25ecce11ab2 13:06:49.211 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 5fc48ce4eb5147546e6719293328a9ef 13:06:50.505 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 786cf083-87af-42f0-bd55-54308100d294, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:55179, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 932, moz:profile: /tmp/rust_mozprofileI0XFzU, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:06:51.217 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 786cf083-87af-42f0-bd55-54308100d294 13:06:53.549 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:53.550 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:53.550 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:53.773 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 2de3cbc01d1f22006e25c9364d8cc23b, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.O7Ev1q}, goog:chromeOptions: {debuggerAddress: localhost:46031}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:53.803 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 0f5fe10e5b3084c2e7ade72fee762a10, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:36727}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.EC...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:54.109 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 2de3cbc01d1f22006e25c9364d8cc23b 13:06:54.213 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 0f5fe10e5b3084c2e7ade72fee762a10 13:06:55.437 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 259efaa8-23d1-4b58-904a-356d72b77cea, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:58502, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 1147, moz:profile: /tmp/rust_mozprofile5xM3ZK, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:06:56.229 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 259efaa8-23d1-4b58-904a-356d72b77cea 13:06:58.552 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:58.552 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:58.552 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:06:58.777 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: e66eddeaf1238e84021340f47d220803, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.fnwvAH}, goog:chromeOptions: {debuggerAddress: localhost:35131}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:58.830 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: b6dc1500208b1d0431ffb34cdb318342, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:43493}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.0H...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:06:59.082 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: e66eddeaf1238e84021340f47d220803 13:06:59.181 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: b6dc1500208b1d0431ffb34cdb318342 13:07:00.663 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 41fc56ba-1218-4cda-b968-e1512d84b07a, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:35428, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 1361, moz:profile: /tmp/rust_mozprofilejIYj99, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:01.354 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 41fc56ba-1218-4cda-b968-e1512d84b07a 13:07:03.553 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:03.553 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:03.553 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:03.796 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: d0fa81b091b429b1e86468fc508d1066, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.9oTC6U}, goog:chromeOptions: {debuggerAddress: localhost:39171}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:03.815 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 8c0c9d20183ce79a9c41070b7575d538, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:46661}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.JO...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:04.116 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: d0fa81b091b429b1e86468fc508d1066 13:07:04.196 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 8c0c9d20183ce79a9c41070b7575d538 13:07:05.659 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: ba58d4e5-d34d-4f2f-be1d-e813366992f6, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:47454, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 1587, moz:profile: /tmp/rust_mozprofileNHONkJ, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:06.499 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: ba58d4e5-d34d-4f2f-be1d-e813366992f6 13:07:08.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:08.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:08.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:08.854 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 08c862f0352f00317aae3b1edfa90c43, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:41545}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.Fg...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:08.928 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: e5c330ff19fc3b7b11ffa95f4a7fbdda, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.p17Vbp}, goog:chromeOptions: {debuggerAddress: localhost:36459}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:09.194 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 08c862f0352f00317aae3b1edfa90c43 13:07:09.213 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: e5c330ff19fc3b7b11ffa95f4a7fbdda 13:07:10.829 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: de6f716e-03f3-49b6-b24e-4057a960ac6e, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:49860, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 1807, moz:profile: /tmp/rust_mozprofileOa2m7h, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:11.483 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: de6f716e-03f3-49b6-b24e-4057a960ac6e 13:07:13.555 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:13.555 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:13.555 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:13.771 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: a1e56133e8ca8268d15996baca5fbd68, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:39859}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.UP...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:13.814 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 91bc99e78ee0173b588ac0455905ef0d, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.zgbt6Q}, goog:chromeOptions: {debuggerAddress: localhost:33653}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:14.127 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 91bc99e78ee0173b588ac0455905ef0d 13:07:14.134 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: a1e56133e8ca8268d15996baca5fbd68 13:07:15.644 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: b42b1d69-f593-44ec-b1e4-fd8e2b2d1d17, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:53519, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 2066, moz:profile: /tmp/rust_mozprofileQoQux0, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:16.419 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: b42b1d69-f593-44ec-b1e4-fd8e2b2d1d17 13:07:18.556 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:18.557 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:18.557 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:18.754 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: de8172e20f15dc2e061abab720c73d18, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.2bbOf3}, goog:chromeOptions: {debuggerAddress: localhost:36919}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:18.794 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: e47ed1d921f202ae8dd6217e98a01a8d, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:45253}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.Ue...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:19.030 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: de8172e20f15dc2e061abab720c73d18 13:07:19.114 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: e47ed1d921f202ae8dd6217e98a01a8d 13:07:20.541 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 4a485861-5da6-4c0f-9afc-f5ec5c9dbbd2, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:46349, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 2268, moz:profile: /tmp/rust_mozprofileXjrcfx, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:21.307 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 4a485861-5da6-4c0f-9afc-f5ec5c9dbbd2 13:07:23.556 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:23.557 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:23.556 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:23.800 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 6f734fcbb9a997b4a831b8430708d6fc, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:45553}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.DG...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:23.801 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 5bb85ec0e433ccd5819d9f2edcea7534, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.9eqw44}, goog:chromeOptions: {debuggerAddress: localhost:42585}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:24.124 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 5bb85ec0e433ccd5819d9f2edcea7534 13:07:24.182 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 6f734fcbb9a997b4a831b8430708d6fc 13:07:25.748 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 27cdecd4-859c-4765-a3b6-a15be5161ed9, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:42773, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 2473, moz:profile: /tmp/rust_mozprofileaZya4g, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:26.527 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 27cdecd4-859c-4765-a3b6-a15be5161ed9 13:07:28.558 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:28.558 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:28.558 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:28.807 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 0ca2d969fc1f375525084de9b555a735, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.NdVSqp}, goog:chromeOptions: {debuggerAddress: localhost:45559}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:28.813 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: ae21e01b8953798498bdcdc052fcdc24, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:45555}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.sB...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:29.090 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 0ca2d969fc1f375525084de9b555a735 13:07:29.144 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: ae21e01b8953798498bdcdc052fcdc24 13:07:30.664 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 085bb2dc-9550-4dd1-9113-e800b1a7f352, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:49759, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 2688, moz:profile: /tmp/rust_mozprofileUSFkLO, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:31.328 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 085bb2dc-9550-4dd1-9113-e800b1a7f352 13:07:33.559 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:33.559 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:33.559 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:33.781 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 5dc9cb2c1e515782b6cc20e9677bed12, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.FMHai6}, goog:chromeOptions: {debuggerAddress: localhost:41073}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:33.843 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 0f21d9a6d523d7c50a972f35966e99dd, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:43059}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.r6...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:34.074 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 5dc9cb2c1e515782b6cc20e9677bed12 13:07:34.198 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 0f21d9a6d523d7c50a972f35966e99dd 13:07:35.348 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 3e322240-49f0-4baa-88ff-bf6d734a2f2f, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:53282, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 2896, moz:profile: /tmp/rust_mozprofile9ZK3ku, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:36.175 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 3e322240-49f0-4baa-88ff-bf6d734a2f2f 13:07:38.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:38.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:38.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:38.815 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 9de15d75a888bed98d0a676a8e40bb7b, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.pB4eVn}, goog:chromeOptions: {debuggerAddress: localhost:35057}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:38.849 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: f76ebbc917714c1d8b5df6a21e1bd54e, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:39803}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.hV...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:39.089 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 9de15d75a888bed98d0a676a8e40bb7b 13:07:39.172 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: f76ebbc917714c1d8b5df6a21e1bd54e 13:07:40.661 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 7f521087-380c-4277-b2a9-0f7e7e978179, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:39091, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 3096, moz:profile: /tmp/rust_mozprofileUgltcN, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:41.412 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 7f521087-380c-4277-b2a9-0f7e7e978179 13:07:43.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:43.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:43.560 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:43.798 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: c44b6ea297fa3bddff491f2bf4e9c230, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:35137}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.j7...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:43.823 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 10a0633ceb831e1c617e108db4bfa151, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.M20aFT}, goog:chromeOptions: {debuggerAddress: localhost:38047}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:44.117 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 10a0633ceb831e1c617e108db4bfa151 13:07:44.153 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: c44b6ea297fa3bddff491f2bf4e9c230 13:07:45.671 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 5a2d4f2b-483d-4b75-bb7c-e29ce9de71ac, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:50133, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 3302, moz:profile: /tmp/rust_mozprofile0BhHWI, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:46.429 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 5a2d4f2b-483d-4b75-bb7c-e29ce9de71ac 13:07:48.561 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:48.561 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:48.561 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:48.779 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: b590af03693c0c2560b737130ae1e870, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.MAMSbf}, goog:chromeOptions: {debuggerAddress: localhost:36521}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:48.822 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: ef8250e61bc5396ec311328504123627, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:33203}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.fG...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:49.066 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: b590af03693c0c2560b737130ae1e870 13:07:49.137 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: ef8250e61bc5396ec311328504123627 13:07:50.644 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 2b463291-89b2-479f-a15f-137207e23bfb, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:33436, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 3515, moz:profile: /tmp/rust_mozprofilet0dxOB, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:51.373 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 2b463291-89b2-479f-a15f-137207e23bfb 13:07:53.562 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:53.562 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:53.562 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:53.787 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 739b755bfea0d2f710e062bf6c1bdcec, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.kbpLLr}, goog:chromeOptions: {debuggerAddress: localhost:46155}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:53.826 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 60302674c50721057590cee1ed9e0bdc, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:33201}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.kB...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:54.077 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 739b755bfea0d2f710e062bf6c1bdcec 13:07:54.166 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 60302674c50721057590cee1ed9e0bdc 13:07:55.555 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 2cd86236-9626-439a-898e-c7ceb92d783e, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:41052, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 3722, moz:profile: /tmp/rust_mozprofileVJwpC3, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:07:56.212 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 2cd86236-9626-439a-898e-c7ceb92d783e 13:07:58.563 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:58.563 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:58.563 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:07:58.788 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: b80bd84a35d752a3f3c55d506e017891, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.V27uqx}, goog:chromeOptions: {debuggerAddress: localhost:42935}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:58.819 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 52ef79a6c8c382e1457ca287342bd180, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:36875}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.9n...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:07:59.068 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: b80bd84a35d752a3f3c55d506e017891 13:07:59.126 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 52ef79a6c8c382e1457ca287342bd180 13:08:00.649 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 58467d6c-a684-4429-bf6f-7f30cc9e1a47, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:60428, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 3932, moz:profile: /tmp/rust_mozprofile6ukLw7, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:01.398 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 58467d6c-a684-4429-bf6f-7f30cc9e1a47 13:08:03.564 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:03.564 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:03.564 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:03.794 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 713a4a2d334846a5a50cd8e35357f349, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.Q7IhKO}, goog:chromeOptions: {debuggerAddress: localhost:33089}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:03.822 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 9f35bc626e6fe7a4007f3a3328323e83, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:43529}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.Xr...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:04.065 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 713a4a2d334846a5a50cd8e35357f349 13:08:04.160 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 9f35bc626e6fe7a4007f3a3328323e83 13:08:05.649 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 0f51975b-4f36-4769-bd20-4c55eb9412dd, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:37646, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 4137, moz:profile: /tmp/rust_mozprofilefg3ord, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:06.404 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 0f51975b-4f36-4769-bd20-4c55eb9412dd 13:08:08.565 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:08.565 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:08.565 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:08.779 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: fa5f82633df63135e489c918f47ced1c, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.xFCyK4}, goog:chromeOptions: {debuggerAddress: localhost:45179}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:08.798 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 4083183da3f49fb752d4f783f7865302, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:40793}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.nx...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:09.043 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: fa5f82633df63135e489c918f47ced1c 13:08:09.108 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 4083183da3f49fb752d4f783f7865302 13:08:10.465 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: aa41d6b9-f8d8-4bdd-b42d-6154d2a98c68, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:46278, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 4348, moz:profile: /tmp/rust_mozprofiley47VX8, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:11.111 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: aa41d6b9-f8d8-4bdd-b42d-6154d2a98c68 13:08:13.566 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:13.566 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:13.566 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:13.779 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: be6534cbf8556a1b427845c6d9ae7207, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.nV10ls}, goog:chromeOptions: {debuggerAddress: localhost:37417}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:13.794 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 64252ea4ed895f0e54d0222c3706f6e1, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:38731}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.fg...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:14.058 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: be6534cbf8556a1b427845c6d9ae7207 13:08:14.119 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 64252ea4ed895f0e54d0222c3706f6e1 13:08:15.665 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 69db9410-928e-4086-86cd-f9b0c0c1d929, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:35573, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 4565, moz:profile: /tmp/rust_mozprofileH05D02, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:16.426 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 69db9410-928e-4086-86cd-f9b0c0c1d929 13:08:18.567 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:18.567 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:18.567 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:18.804 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 83a452188556413c2f4a9c0a72cf1756, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.x6mQSJ}, goog:chromeOptions: {debuggerAddress: localhost:38219}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:18.817 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: e4a876c59988d71d7ce9d916a8ff76f5, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:39141}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.oJ...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:19.081 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 83a452188556413c2f4a9c0a72cf1756 13:08:19.128 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: e4a876c59988d71d7ce9d916a8ff76f5 13:08:20.750 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: e7a1fd41-81ee-46c8-9e9a-8f39c46cdbf5, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:45540, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 4772, moz:profile: /tmp/rust_mozprofileYUT0Y6, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:21.467 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: e7a1fd41-81ee-46c8-9e9a-8f39c46cdbf5 13:08:23.568 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:23.569 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:23.568 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:23.810 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: c60649bce49f5d2f3c55401416e47ef4, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.gQUNYa}, goog:chromeOptions: {debuggerAddress: localhost:42229}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:23.815 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 66ede9a14ce490130e6d7ed0ae53d187, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:39027}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.H3...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:24.087 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: c60649bce49f5d2f3c55401416e47ef4 13:08:24.153 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 66ede9a14ce490130e6d7ed0ae53d187 13:08:25.552 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: d7bd7e94-5997-4bd4-9c98-d3678d3f6c93, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:47975, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 4985, moz:profile: /tmp/rust_mozprofilehkKE8a, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:26.319 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: d7bd7e94-5997-4bd4-9c98-d3678d3f6c93 13:08:28.569 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:28.569 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:28.569 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:28.764 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: ad75e3d64c018e1ba0e71e4ecc7a75f3, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.obCZGU}, goog:chromeOptions: {debuggerAddress: localhost:36081}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:28.804 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: c2b9d6522abe709cc115444f94a4c672, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:42853}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.sT...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:29.020 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: ad75e3d64c018e1ba0e71e4ecc7a75f3 13:08:29.111 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: c2b9d6522abe709cc115444f94a4c672 13:08:30.255 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: bedac6fb-65c0-4986-ba16-e3cb4bf0dc7e, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:46178, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 5193, moz:profile: /tmp/rust_mozprofile9sEQvS, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:31.044 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: bedac6fb-65c0-4986-ba16-e3cb4bf0dc7e 13:08:33.570 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:33.571 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:33.570 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:33.813 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 9146e5a9a169cf8f87a3ca34f2feb709, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.L5FS71}, goog:chromeOptions: {debuggerAddress: localhost:32903}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:33.826 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 8c05f2a9aa5003c3c74ba9b49f90ece4, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:34605}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.ZH...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:34.108 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 9146e5a9a169cf8f87a3ca34f2feb709 13:08:34.180 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 8c05f2a9aa5003c3c74ba9b49f90ece4 13:08:35.482 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: f6c655d2-2643-492d-a54d-a869539f275a, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:38750, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 5392, moz:profile: /tmp/rust_mozprofileBHN4la, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:36.127 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: f6c655d2-2643-492d-a54d-a869539f275a 13:08:38.571 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:38.571 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:38.571 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore}] 13:08:38.758 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: f8186ceed8296965a07f08d8e136d601, Caps: Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 96.0.4664.93, chrome: {chromedriverVersion: 96.0.4664.45 (76e4c1bb2ab46..., userDataDir: /tmp/.com.google.Chrome.YSXYDj}, goog:chromeOptions: {debuggerAddress: localhost:37553}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.4:4444/ses..., se:cdpVersion: 96.0.4664.93, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:38.815 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: f566407d14f7bcc58bcda1cc999d5847, Caps: Capabilities {acceptInsecureCerts: true, browserName: msedge, browserVersion: 96.0.1054.43, ms:edgeOptions: {debuggerAddress: localhost:36971}, msedge: {msedgedriverVersion: 96.0.1054.43 (dca8292d0a7a9..., userDataDir: /tmp/.com.microsoft.Edge.JA...}, networkConnectionEnabled: false, pageLoadStrategy: eager, platformName: linux, proxy: {}, se:cdp: ws://172.170.233.5:4444/ses..., se:cdpVersion: 96.0.1054.43, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 13:08:39.013 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: f8186ceed8296965a07f08d8e136d601 13:08:39.113 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: f566407d14f7bcc58bcda1cc999d5847 13:08:40.651 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: 1d88d09e-a9e5-4191-8b73-50cbe22ddfde, Caps: Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 94.0.2, moz:accessibilityChecks: false, moz:buildID: 20211119140621, moz:debuggerAddress: localhost:55362, moz:geckodriverVersion: 0.30.0, moz:headless: true, moz:processID: 5589, moz:profile: /tmp/rust_mozprofile6DOq7C, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: eager, platformName: linux, platformVersion: 4.19.0-18-amd64, proxy: {}, se:cdp: ws://172.170.233.3:4444/ses..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: ignore} 13:08:41.386 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: 1d88d09e-a9e5-4191-8b73-50cbe22ddfde  Chrome Node for  4.1.0 13:06:16.272 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 13:06:16.276 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 13:06:16.363 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium:4442 and tcp://selenium:4443 13:06:16.407 INFO [UnboundZmqEventBus.] - Sockets created 13:06:17.409 INFO [UnboundZmqEventBus.] - Event bus ready 13:06:17.554 INFO [NodeServer.createHandlers] - Reporting self as: http://chrome:5555 13:06:17.581 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors 13:06:17.614 INFO [NodeOptions.report] - Adding chrome for {""browserName"": ""chrome"",""browserVersion"": ""96.0"",""platformName"": ""Linux""} 2 times 13:06:17.624 INFO [Node.] - Binding additional locator mechanisms: name, relative, id 13:06:17.841 INFO [NodeServer$1.start] - Starting registration process for node id 430f9927-2e64-4959-a506-cf9aaf7ca8ac 13:06:17.842 INFO [NodeServer.execute] - Started Selenium node 4.1.0 (revision 87802e897b): http://chrome:5555 13:06:17.844 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 13:06:18.776 INFO [NodeServer.lambda$createHandlers$2] - Node has been added Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 58299 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1638878793.637][SEVERE]: bind() failed: Cannot assign requested address (99) ChromeDriver was started successfully. 13:06:34.199 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 53998 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1638878798.562][SEVERE]: bind() failed: Cannot assign requested address (99) ChromeDriver was started successfully. 13:06:38.833 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 58746 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878803.568][SEVERE]: bind() failed: Cannot assign requested address (99) 13:06:43.801 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 49415 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1638878808.569][SEVERE]: bind() failed: Cannot assign requested address (99) ChromeDriver was started successfully. 13:06:48.796 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 35180 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878813.569][SEVERE]: bind() failed: Cannot assign requested address (99) 13:06:53.765 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 51870 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878818.575][SEVERE]: bind() failed: Cannot assign requested address (99) 13:06:58.768 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 56799 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878823.579][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:03.784 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 50672 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878828.588][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:08.920 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 41587 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878833.573][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:13.801 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 52864 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878838.577][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:18.745 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 41848 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878843.579][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:23.793 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 55415 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878848.580][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:28.797 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 52935 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878853.585][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:33.773 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 45452 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1638878858.581][SEVERE]: bind() failed: Cannot aChromesDsriginv ererq uweasst esdt aardtderde sssu c(c9e9s)s fully. 13:07:38.806 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 34289 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1638878863.595][SEVERE]: bind() failed: Cannot assign requested address (99) ChromeDriver was started successfully. 13:07:43.814 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 56647 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDri[1638878868.ver was start5e78][SEVERE]: bind() failed: Cannotd successfully.  assign requested address (99) 13:07:48.767 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 57893 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878873.578][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:53.778 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 41576 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878878.580][SEVERE]: bind() failed: Cannot assign requested address (99) 13:07:58.780 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 51886 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878883.583][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:03.784 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 49952 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878888.583][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:08.772 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 57420 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878893.589][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:13.770 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 48993 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggesti[ons on keeping C1h6romeDriver sa3f8e8.7 8898.585][SEVERE]: bind() failed: Cannot assChromeiDgrni rveeqru ewsatse ds taadrdtreeds ss u(c9c9e)s sfully. 13:08:18.794 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 58309 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878903.588][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:23.803 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 33034 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878908.591][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:28.757 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 53357 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878913.591][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:33.805 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 54424 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638878918.594][SEVERE]: bind() failed: Cannot assign requested address (99) 13:08:38.752 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C  Hub log for 3.141.59 13:10:59.409 INFO [Hub.start] - Selenium Grid hub is up and running 13:10:59.412 INFO [Hub.start] - Nodes should register to http://172.10.155.2:4444/grid/register/ 13:10:59.413 INFO [Hub.start] - Clients should connect to http://172.10.155.2:4444/wd/hub 13:13:13.173 INFO [DefaultGridRegistry.add] - Registered a node http://172.10.155.5:5555 13:13:13.593 INFO [DefaultGridRegistry.add] - Registered a node http://172.10.155.4:5555 13:13:13.938 INFO [DefaultGridRegistry.add] - Registered a node http://172.10.155.3:5555 13:13:28.977 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:28.980 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:28.980 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:28.982 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:28.987 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:28.990 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:30.334 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:30.335 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:30.367 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:30.369 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:32.574 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:32.576 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:36.415 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:36.417 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:36.424 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:36.470 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:36.474 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:36.485 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:37.306 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:37.307 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:37.309 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:37.310 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:38.029 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:38.030 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:38.105 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:38.109 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:38.815 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:38.816 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:38.861 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:38.862 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:39.802 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:39.803 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:42.730 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:42.732 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:45.580 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:45.581 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:48.494 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:48.494 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:48.494 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:48.495 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:48.497 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:48.498 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:49.237 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:49.237 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:49.249 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:49.250 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:51.544 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:51.545 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:54.677 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:54.677 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:54.677 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:54.678 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:54.679 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:54.680 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:55.587 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:55.589 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:55.594 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:55.595 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:13:58.028 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:13:58.029 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:00.958 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:00.959 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:00.961 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:00.962 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:00.966 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:00.966 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:01.668 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:01.672 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:01.750 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:01.751 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:03.890 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:03.891 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:06.580 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:06.580 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:06.582 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:06.583 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:06.587 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:06.588 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:07.239 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:07.240 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:07.266 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:07.267 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:09.550 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:09.552 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:12.515 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:12.515 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:12.516 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:12.518 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:12.546 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:12.547 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:13.201 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:13.202 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:13.210 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:13.211 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:15.736 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:15.737 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:18.301 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:18.302 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:18.302 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:18.304 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:18.304 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:18.305 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:19.006 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:19.012 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:19.022 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:19.023 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:21.147 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:21.148 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:23.780 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:23.780 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:23.781 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:23.782 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:23.783 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:23.783 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:24.453 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: chrome, goog:chromeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-infobars, --disable-component-extensi..., --disable-extensions, --start-maximized, --disable-password-generation, --window-size=1920,1080, --headless], binary: /usr/bin/google-chrome, extensions: [], prefs: {credentials_enable_service: false, profile.password_manager_enabled: false}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:24.454 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=6cb08d9c-a2a8-4171-bd6d-9105a707c8ff, seleniumProtocol=WebDriver, browserName=chrome, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:24.490 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: MicrosoftEdge, ms:edgeOptions: {args: [--no-default-browser-check, --enable-automation, --disable-component-extensi..., --disable-extensions, --start-maximized, --window-size=1920,1080, --headless], extensions: []}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:24.491 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=1e93d769-e0bb-471e-b860-76f7ca63c2d0, seleniumProtocol=WebDriver, browserName=MicrosoftEdge, maxInstances=10, platformName=LINUX, platform=LINUX} 13:14:26.661 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [-headless], log: {level: info}, prefs: {dom.file.createInChild: true}}, pageLoadStrategy: eager, unhandledPromptBehavior: ignore} 13:14:26.662 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=9606dff5-c92b-4f1a-9365-fda8c8c1c941, seleniumProtocol=WebDriver, browserName=firefox, maxInstances=10, platformName=LINUX, platform=LINUX}  NodeChrome Log for 3.141.59 13:13:12.304 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358 13:13:12.424 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Launching a Selenium Grid node on port 5555 2021-12-07 13:13:12.572:INFO::main: Logging initialized @663ms to org.seleniumhq.jetty9.util.log.StdErrLog 13:13:12.939 INFO [WebDriverServlet.] - Initialising WebDriverServlet 13:13:13.080 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 5555 13:13:13.081 INFO [GridLauncherV3.lambda$buildLaunchers$7] - Selenium Grid node is up and ready to register to the hub 13:13:13.163 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 13:13:13.568 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://selenium:4444/grid/register 13:13:13.593 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 13:13:29.096 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:29.099 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 10626 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879209.146][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:29.577 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:29.600 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 3f0489663c045bada37838dff2ae0c71 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:30.293 INFO [ActiveSessions$1.onStop] - Removing session 3f0489663c045bada37838dff2ae0c71 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:30.356 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:30.356 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 24062 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879210.372][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:30.700 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:30.702 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session d6813b12abcb52d79d73577c3799ab5b (org.openqa.selenium.chrome.ChromeDriverService) 13:13:31.104 INFO [ActiveSessions$1.onStop] - Removing session d6813b12abcb52d79d73577c3799ab5b (org.openqa.selenium.chrome.ChromeDriverService) 13:13:36.505 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:36.505 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 17019 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879216.521][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:36.855 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:36.857 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session b4cee64d51abbd5fd9c2af8482a1e4a5 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:37.269 INFO [ActiveSessions$1.onStop] - Removing session b4cee64d51abbd5fd9c2af8482a1e4a5 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:37.327 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:37.328 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 4113 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879217.339][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:37.655 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:37.656 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 98f71ca94778a9086614687890b2de78 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:37.993 INFO [ActiveSessions$1.onStop] - Removing session 98f71ca94778a9086614687890b2de78 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:38.050 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:38.051 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 18594 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879218.062][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:38.397 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:38.399 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session f0b1ce3f732eb8c8584a42222bb0a5de (org.openqa.selenium.chrome.ChromeDriverService) 13:13:38.786 INFO [ActiveSessions$1.onStop] - Removing session f0b1ce3f732eb8c8584a42222bb0a5de (org.openqa.selenium.chrome.ChromeDriverService) 13:13:38.833 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:38.834 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 2630 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879218.845][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:39.176 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:39.178 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session b754e417c09db0fe0dd49b6a65068ba7 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:39.527 INFO [ActiveSessions$1.onStop] - Removing session b754e417c09db0fe0dd49b6a65068ba7 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:48.517 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:48.517 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 24908 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879228.528][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:48.888 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:48.890 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session f82152e6a983fdc22ec5e08d959cd0bc (org.openqa.selenium.chrome.ChromeDriverService) 13:13:49.222 INFO [ActiveSessions$1.onStop] - Removing session f82152e6a983fdc22ec5e08d959cd0bc (org.openqa.selenium.chrome.ChromeDriverService) 13:13:49.268 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:49.269 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 2275 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879229.289][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:49.649 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:49.651 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 9a1987d83d63d34310bccbf2bbe7d1fd (org.openqa.selenium.chrome.ChromeDriverService) 13:13:49.945 INFO [ActiveSessions$1.onStop] - Removing session 9a1987d83d63d34310bccbf2bbe7d1fd (org.openqa.selenium.chrome.ChromeDriverService) 13:13:54.736 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:54.736 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 13625 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [C1638879234.749][SEVERE]: binhd(r)o mfeDriver was started successfully. ailed: Cannot assign requested address (99) 13:13:55.209 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:55.211 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 396593bfc10b7d67d054f08b8324ea86 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:55.576 INFO [ActiveSessions$1.onStop] - Removing session 396593bfc10b7d67d054f08b8324ea86 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:55.617 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:13:55.618 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 12477 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879235.628][SEVERE]: bind() failed: Cannot assign requested address (99) 13:13:55.969 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:13:55.971 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 1f0368229fc35d487cb3f51e57d7a768 (org.openqa.selenium.chrome.ChromeDriverService) 13:13:56.245 INFO [ActiveSessions$1.onStop] - Removing session 1f0368229fc35d487cb3f51e57d7a768 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:00.975 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:00.975 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 30228 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879240.993][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:01.355 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:01.358 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 50efffd6a2d67d665db9ebef88a6c3dc (org.openqa.selenium.chrome.ChromeDriverService) 13:14:01.681 INFO [ActiveSessions$1.onStop] - Removing session 50efffd6a2d67d665db9ebef88a6c3dc (org.openqa.selenium.chrome.ChromeDriverService) 13:14:01.767 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:01.768 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 11770 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879241.778][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:02.070 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:02.073 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 1db3bc15fbe2dfc012c7358cbb1bae64 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:02.338 INFO [ActiveSessions$1.onStop] - Removing session 1db3bc15fbe2dfc012c7358cbb1bae64 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:06.606 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:06.607 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 1858 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was sta[rted suc1c6essfully. 38879246.618][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:06.935 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:06.937 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 670a05d8ac8cd77e6527aee624df140e (org.openqa.selenium.chrome.ChromeDriverService) 13:14:07.218 INFO [ActiveSessions$1.onStop] - Removing session 670a05d8ac8cd77e6527aee624df140e (org.openqa.selenium.chrome.ChromeDriverService) 13:14:07.262 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:07.263 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 13621 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879247.274][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:07.618 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:07.620 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 0d7f2a1cffd3371e0031b17f467096d5 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:07.877 INFO [ActiveSessions$1.onStop] - Removing session 0d7f2a1cffd3371e0031b17f467096d5 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:12.531 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:12.531 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 31979 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. [1638879252.548][SEVERE]: bind() failed: Cannot assign requested address (99) ChromeDriver was started successfully. 13:14:12.883 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:12.885 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 13712ae5186dc44bc9ce0492988fb0c2 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:13.181 INFO [ActiveSessions$1.onStop] - Removing session 13712ae5186dc44bc9ce0492988fb0c2 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:13.226 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:13.227 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 19087 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879253.244][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:13.600 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:13.602 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 57b906bd6b6217c1420437983eedb577 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:13.854 INFO [ActiveSessions$1.onStop] - Removing session 57b906bd6b6217c1420437983eedb577 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:18.325 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:18.325 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 12011 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879258.348][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:18.694 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:18.698 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session cfc22f73d5e1d98ad00746912cdcccf1 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:18.984 INFO [ActiveSessions$1.onStop] - Removing session cfc22f73d5e1d98ad00746912cdcccf1 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:19.026 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:19.027 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 22478 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879259.041][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:19.397 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:19.399 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session a44253890498face1508a93e50eb332a (org.openqa.selenium.chrome.ChromeDriverService) 13:14:19.665 INFO [ActiveSessions$1.onStop] - Removing session a44253890498face1508a93e50eb332a (org.openqa.selenium.chrome.ChromeDriverService) 13:14:23.798 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:23.798 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 10849 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879263.818][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:24.160 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:24.161 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session fd0ae78d87a14b43224c751c768a84d5 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:24.432 INFO [ActiveSessions$1.onStop] - Removing session fd0ae78d87a14b43224c751c768a84d5 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:24.466 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""acceptInsecureCerts"": true,   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""--no-default-browser-check"",       ""--enable-automation"",       ""--disable-infobars"",       ""--disable-component-extensions-with-background-pages"",       ""--disable-extensions"",       ""--start-maximized"",       ""--disable-password-generation"",       ""--window-size=1920,1080"",       ""--headless""     ],     ""extensions"": [     ],     ""binary"": ""\u002fusr\u002fbin\u002fgoogle-chrome"",     ""prefs"": {       ""credentials_enable_service"": false,       ""profile.password_manager_enabled"": false     }   },   ""pageLoadStrategy"": ""eager"",   ""unhandledPromptBehavior"": ""ignore"" } 13:14:24.467 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 19760 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1638879264.482][SEVERE]: bind() failed: Cannot assign requested address (99) 13:14:24.849 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 13:14:24.850 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 85a6df356759957ac82dac1238a80be6 (org.openqa.selenium.chrome.ChromeDriverService) 13:14:25.096 INFO [ActiveSessions$1.onStop] - Removing session 85a6df356759957ac82dac1238a80be6 (org.openqa.selenium.chrome.ChromeDriverService) ```   ### Operating System  Ubuntu  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.93, FF 94.0.2 and Edge 96.0.1054.43   ### What are the browser driver(s) and version(s) where you see this issue?  Chrome WebDriver 96.0.4664.45, FF WebDriver 0.30.0 and Edge WebDriver 96.0.1054.43  ### Are you using Selenium Grid?  4.1.1 and 3.141.59","closed","I-defect,","eugenedani","2021-12-07T13:12:26Z","2022-01-13T00:07:45Z"
"","10424","[🐛 Bug]: Unable to open new tab on iOS device with AddAdditioalOptions- Selenium 4.0","### What happened?  Hello,  I am using selenim 4.0 to click on button to open new tab. As Desired capabilities has been deprecated , I am using browser specific option - safariOptions to add additional capabilities for iOS device test scenarios. To allow **popup and Alert with safari** browser in iOS devices, I am trying to refactor below code with safariOptions .  Old Code   DesiredCapabilities caps = new DesiredCapabilities(); caps.setCapability(""safariAllowPopups"", ""true""); caps.setCapability(""autoAcceptAlerts"", ""true"");  New Code   SnippetSafariOptions options = new SafariOptions();  SnippetDictionary browserstackOptions = new Dictionary();  Snippetoptions.AddAdditionalOption(""bstack:options.safari.enablePopups"", ""true"");     With new code, Safari browser doen't open new tab clicking on button while it was working fine with Old code using DesiredCapablities.  How can I allow new tab opening for iOS devices ?    I tried with safari.enablePopups (https://www.browserstack.com/automate/capabilities?tag=selenium-4), safariAllowPopups and safari.autoAcceptAlerts but no luck.    ### How can we reproduce the issue?  ```shell Open new tab clicking on button Sample website steps 1) Go to http://the-internet.herokuapp.com/windows 2) Click on ""Click here"" 3) Interact with opened new tab  Device : iPad Air  Selenium Version and language : 4.0.0 (.net windows) Browser name: Safari  Environment : Browserstack ```   ### Relevant log output  ```shell Raw Appium Logs   2022-03-02 23:20:00:927 - [debug] [RemoteDebugger] Executing atom 'find_element' 2022-03-02 23:20:00:928 - [debug] [RemoteDebugger] Executing 'find_element' atom in default context 2022-03-02 23:20:00:928 - [debug] [RemoteDebugger] Sending javascript command: '(function(){return function(){var k=this;functi...' 2022-03-02 23:20:00:928 - [debug] [RemoteDebugger] Sending '_rpc_forwardSocketData:' message to app 'PID:12308', page '1', target 'page-13' (id: 82): 'Runtime.evaluate' 2022-03-02 23:20:00:943 - [debug] [RemoteDebugger] Received data response from send (id: 82): '""{\""status\"":0,\""value\"":{\""ELEMENT\"":\"":wdc:1646263198811\""}}""' 2022-03-02 23:20:00:943 - [debug] [RemoteDebugger] Sending to Web Inspector took 15ms 2022-03-02 23:20:00:943 - [debug] [RemoteDebugger] Received result for atom 'find_element' execution: {""ELEMENT"":"":wdc:1646263198811""} 2022-03-02 23:20:00:945 - [debug] [W3C (42ab4b03)] Responding to client with driver.findElement() result: {""element-6066-11e4-a52e-4f735466cecf"":""5002"",""ELEMENT"":""5002""} 2022-03-02 23:20:00:946 - [HTTP]  GET /wd/hub/session/42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79/element/5002/enabled 2022-03-02 23:20:01:000 - [HTTP] {} 2022-03-02 23:20:01:001 - [debug] [W3C (42ab4b03)] Calling AppiumDriver.elementEnabled() with args: [""5002"",""42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79""] 2022-03-02 23:20:01:001 - [debug] [XCUITest] Executing command 'elementEnabled' 2022-03-02 23:20:01:001 - [debug] [RemoteDebugger] Executing atom 'is_enabled' 2022-03-02 23:20:01:001 - [debug] [RemoteDebugger] Executing 'is_enabled' atom in default context 2022-03-02 23:20:01:001 - [debug] [RemoteDebugger] Sending javascript command: '(function(){return function(){var g=this;functi...' 2022-03-02 23:20:01:002 - [debug] [RemoteDebugger] Sending '_rpc_forwardSocketData:' message to app 'PID:12308', page '1', target 'page-13' (id: 84): 'Runtime.evaluate' 2022-03-02 23:20:01:013 - [debug] [RemoteDebugger] Received data response from send (id: 84): '""{\""status\"":0,\""value\"":true}""' 2022-03-02 23:20:01:014 - [debug] [RemoteDebugger] Sending to Web Inspector took 12ms 2022-03-02 23:20:01:014 - [debug] [RemoteDebugger] Received result for atom 'is_enabled' execution: true 2022-03-02 23:20:01:014 - [debug] [W3C (42ab4b03)] Responding to client with driver.elementEnabled() result: true 2022-03-02 23:20:01:015 - [HTTP]  POST /wd/hub/session/42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79/execute/sync 2022-03-02 23:20:01:148 - [HTTP] {""script"":""return document.readyState"",""args"":[]} 2022-03-02 23:20:01:149 - [debug] [W3C (42ab4b03)] Calling AppiumDriver.execute() with args: [""return document.readyState"",[],""42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79""] 2022-03-02 23:20:01:149 - [debug] [XCUITest] Executing command 'execute' 2022-03-02 23:20:01:149 - [debug] [RemoteDebugger] Executing atom 'execute_script' 2022-03-02 23:20:01:149 - [debug] [RemoteDebugger] Executing 'execute_script' atom in default context 2022-03-02 23:20:01:149 - [debug] [RemoteDebugger] Sending javascript command: '(function(){return function(){var f=this; 2022-03-02 23:20:01:149 - [debug] [RemoteDebugger] funct...' 2022-03-02 23:20:01:149 - [debug] [RemoteDebugger] Sending '_rpc_forwardSocketData:' message to app 'PID:12308', page '1', target 'page-13' (id: 86): 'Runtime.evaluate' 2022-03-02 23:20:01:160 - [debug] [RemoteDebugger] Received data response from send (id: 86): '{""status"":0,""value"":""complete""}' 2022-03-02 23:20:01:160 - [debug] [RemoteDebugger] Sending to Web Inspector took 11ms 2022-03-02 23:20:01:160 - [debug] [RemoteDebugger] Received result for atom 'execute_script' execution: ""complete"" 2022-03-02 23:20:01:162 - [debug] [W3C (42ab4b03)] Responding to client with driver.execute() result: ""complete"" 2022-03-02 23:20:01:163 - [HTTP]  POST /wd/hub/session/42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79/element/5002/click 2022-03-02 23:20:01:171 - [HTTP] {} 2022-03-02 23:20:01:171 - [debug] [W3C (42ab4b03)] Calling AppiumDriver.click() with args: [""5002"",""42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79""] 2022-03-02 23:20:01:171 - [debug] [XCUITest] Executing command 'click' 2022-03-02 23:20:01:171 - [debug] [RemoteDebugger] Executing atom 'click' 2022-03-02 23:20:01:172 - [debug] [RemoteDebugger] Executing 'click' atom in default context 2022-03-02 23:20:01:172 - [debug] [RemoteDebugger] Sending javascript command: '(function(){return function(){var h,aa=this;fun...' 2022-03-02 23:20:01:173 - [debug] [RemoteDebugger] Sending '_rpc_forwardSocketData:' message to app 'PID:12308', page '1', target 'page-13' (id: 88): 'Runtime.evaluate' 2022-03-02 23:20:01:226 - [debug] [RemoteDebugger] Received data response from send (id: 88): '""{\""status\"":0,\""value\"":null}""' 2022-03-02 23:20:01:226 - [debug] [RemoteDebugger] Sending to Web Inspector took 54ms 2022-03-02 23:20:01:226 - [debug] [RemoteDebugger] Received result for atom 'click' execution: null 2022-03-02 23:20:01:228 - [debug] [W3C (42ab4b03)] Responding to client with driver.click() result: null 2022-03-02 23:20:01:228 - [HTTP]  POST /wd/hub/session/42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79/execute/sync 2022-03-02 23:20:01:324 - [HTTP] {""script"":""return document.readyState"",""args"":[]} 2022-03-02 23:20:01:324 - [debug] [W3C (42ab4b03)] Calling AppiumDriver.execute() with args: [""return document.readyState"",[],""42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79""] 2022-03-02 23:20:01:324 - [debug] [XCUITest] Executing command 'execute' 2022-03-02 23:20:01:324 - [debug] [RemoteDebugger] Executing atom 'execute_script' 2022-03-02 23:20:01:325 - [debug] [RemoteDebugger] Executing 'execute_script' atom in default context 2022-03-02 23:20:01:325 - [debug] [RemoteDebugger] Sending javascript command: '(function(){return function(){var f=this; 2022-03-02 23:20:01:325 - [debug] [RemoteDebugger] funct...' 2022-03-02 23:20:01:325 - [debug] [RemoteDebugger] Sending '_rpc_forwardSocketData:' message to app 'PID:12308', page '1', target 'page-13' (id: 90): 'Runtime.evaluate' 2022-03-02 23:20:01:332 - [debug] [RemoteDebugger] Received data response from send (id: 90): '{""status"":0,""value"":""complete""}' 2022-03-02 23:20:01:332 - [debug] [RemoteDebugger] Sending to Web Inspector took 8ms 2022-03-02 23:20:01:333 - [debug] [RemoteDebugger] Received result for atom 'execute_script' execution: ""complete"" 2022-03-02 23:20:01:335 - [debug] [W3C (42ab4b03)] Responding to client with driver.execute() result: ""complete"" 2022-03-02 23:20:01:336 - [HTTP]  GET /wd/hub/session/42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79/window/handles 2022-03-02 23:20:01:388 - [HTTP] {} 2022-03-02 23:20:01:388 - [debug] [W3C (42ab4b03)] Calling AppiumDriver.getWindowHandles() with args: [""42ab4b03-f0c1-4fae-bd63-3fdfe2ad1b79""] 2022-03-02 23:20:01:388 - [debug] [XCUITest] Executing command 'getWindowHandles' ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  safari  ### What are the browser driver(s) and version(s) where you see this issue?  SafariOptions  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","maulikcoderoom","2022-03-08T19:44:01Z","2022-04-09T00:11:11Z"
"","10073","[🐛 Bug]: Unable to Create Grid Node","### What happened?  Hello, I'm trying to get the grid up and running with Selenium 4.0. I get an error when I try to connect the Node after I stand up the hub. I don't have this problem when I start it as standalone. https://gist.github.com/Metonya/506fd064b6f724a1f47144c01cfad986  ### How can we reproduce the issue?  ```shell java -jar selenium-server-4.0.0.jar hub java -jar selenium-server-4.0.0.jar node --detect-drivers true ```   ### Relevant log output  ```shell Node; INFO [NodeServer$1.lambda$start$1] - Sending registration event...  Hub; Caused by: org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.grid.data.NodeStatus ... Caused by: java.lang.IllegalArgumentException: Slot ID must be set         at org.openqa.selenium.internal.Require.nonNull(Require.java:56)         at org.openqa.selenium.grid.data.Slot.(Slot.java:38)         at org.openqa.selenium.grid.data.Slot.fromJson(Slot.java:116)         ... 40 more  Status; 6:27 {   ""value"": {     ""ready"": false,     ""message"": ""Selenium Grid not ready."",     ""nodes"": [     ]   } } ```   ### Operating System  Windows 10  ### Selenium version  Java Selenium 4.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  96.0.4664.45   ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","Metonya","2021-11-22T15:32:38Z","2022-01-13T00:07:48Z"
"","10720","[🐛 Bug]: Deprecation warning","### What happened?  Hello, i was parsing some html with PYTHON. Ive encountered some warning. Actually my parser is working good, bu in terminal, suggests to change them to newers. And it is same on documentation. First ive done it by documentation but, tried some code of older posts in web. So    What browsers and operating systems are you seeing the problem on?  windows 10, chrome browser 102.0.5005.63.  ### How can we reproduce the issue?  ```shell (Altough im not sure if im doing sth wrong but...) When i follow the instructions on the terminal, it DOES NOT work. I am using selenium 4.2.0. using webdriver as chromedriver. ```   ### Relevant log output  ```shell these are the lines on terminal  ...in.py:11: DeprecationWarning: find_element_by_* commands are deprecated. Please use find_element() instead username = driver.find_element_by_id('username')  ...in.py:13: DeprecationWarning: find_element_by_* commands are deprecated. Please use find_element() instead password = driver.find_element_by_id('password')  ...in.py:15: DeprecationWarning: find_element_by_class_name is deprecated. Please use find_element(by=By.CLASS_NAME, value=name) instead ```   ### Operating System  Windows 10  ### Selenium version  4.2.0  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chrome browser 102.0.5005.63.  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","erdoganb","2022-06-01T09:09:42Z","2022-07-04T00:14:11Z"
"","9966","[🐛 Bug]: EventFiringDecorator - Application doesn't fail upon NoSuchElementException / TimeoutException","### What happened?  Hello,  We are upgrading the rougly 10 years old Selenium tests in an existing project. Since we noticed that Selenium4 was released last week we wanted to give it a try, since the version we initially started upgrading with (3.141.59) has been around for quite a while already.  With version 3.141.59 we had an _EventFiringWebDriver_ and a _Listener_ with a custom method with a _FluentWait_ that waits for JQuery etc to be finished, as well as for the element in question to be present (the application is a dinosaur and can be a tad bit slow at times, which would make tests fail every time when simply using _.findElement(By. ...)_ without the wait(s). With aforementioned version this worked great, however, with Selenium4 the EventFiringWebDriver is marked as deprecated and usage of _EventFiringDecorator_ is recommended.  So we wrote a new Listener since the API seems to have changed entirely (methods & parameters) and employed the EventFiringDecorator as instructed.  The tests seem to work at first glance, BUT: Tests don't fail anymore upon _NoSuchElementException_ or _TimoutException_ thrown by the FluentWait in the implemented listener - we can see stacktraces of elements that caused these errors to be thrown, but the application progresses until at some point an element is not clickable, which does ultimately cause the test to fail. (On a side note, tests failing at the respective points in the application is ""intentional"" since we are still in progress of upgrading - the old selenium just continued when an element wasn't found). Test code itself hasn't changed when we went from 3.141.59 to 4.0.0, only the usage of EventFiringDecorator and new implementation of the listener as mentioned above were altered.  **Stacktraces look like the following:** ``` Okt 21, 2021 10:39:03 AM org.openqa.selenium.support.events.EventFiringDecorator callListenerMethod WARNING: null java.lang.reflect.InvocationTargetException 	at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) 	at java.lang.reflect.Method.invoke(Method.java:508) 	at org.openqa.selenium.support.events.EventFiringDecorator.callListenerMethod(EventFiringDecorator.java:311) 	at org.openqa.selenium.support.events.EventFiringDecorator.fireBeforeEvents(EventFiringDecorator.java:231) 	at org.openqa.selenium.support.events.EventFiringDecorator.lambda$beforeCall$0(EventFiringDecorator.java:170) 	at org.openqa.selenium.support.events.EventFiringDecorator$$Lambda$305.000000001203FC80.accept(Unknown Source) 	at java.util.Arrays$ArrayList.forEach(Arrays.java:4224) 	at org.openqa.selenium.support.events.EventFiringDecorator.beforeCall(EventFiringDecorator.java:170) 	at org.openqa.selenium.support.decorators.DefaultDecorated.beforeCall(DefaultDecorated.java:43) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:293) 	at org.openqa.selenium.support.decorators.WebDriverDecorator$$Lambda$304.000000001203D690.invoke(Unknown Source) 	at com.sun.proxy.$Proxy15.findElement(Unknown Source) 	... Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for de.base.DriverEventListener$$Lambda$318/0000000012A415D0@77ab27fb (tried for 4 second(s) with 1000 milliseconds interval) 	at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:263) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231) 	at de.base.DriverEventListener.waitForElement(DriverEventListener.java:58) 	at de.base.DriverEventListener.beforeFindElement(DriverEventListener.java:142) 	... 28 more Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: (//.[somexpath])[1] For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'removed', ip: 'removed', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151' Driver info: org.openqa.selenium.firefox.FirefoxDriver Command: [d1d54a7b-1543-4bcb-8c40-e10686f91d91, findElement {using=xpath, value=(//.somexpath)[1]}] Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 92.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210922161155, moz:debuggerAddress: localhost:57008, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 7128, moz:profile: D:\Users\removed\..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.3, proxy: Proxy(), se:cdp: ws://localhost:57008/devtoo..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: d1d54a7b-1543-4bcb-8c40-e10686f91d91 	at sun.reflect.GeneratedConstructorAccessor25.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:57) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:437) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:383) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:375) 	at de.base.DriverEventListener.lambda$1(DriverEventListener.java:59) 	at de.base.DriverEventListener$$Lambda$318.0000000012A415D0.apply(Unknown Source) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208) 	... 30 more ```  **The code snippet for the wait method in the listener:** ``` private void waitForElement(WebDriver driver, By selector) {          Wait wait = new FluentWait(driver).withTimeout(Duration.ofSeconds(4))             .pollingEvery(Duration.ofSeconds(1)).ignoring(NoSuchElementException.class);          JSWaiter.waitForJS();          if (selector != null) {             wait.until(ExpectedConditions.presenceOfElementLocated(selector));             wait.until(driver1 -> {                 WebElement element = driver1.findElement(selector);                 return (element != null && element.isEnabled() ? element : null);             });         }     } ```  **Using wait method in listener:** ``` @Override     public void beforeFindElement(WebDriver driver, By locator) {         waitForElement(driver, locator);     } ```  **Initializing the driver:** ``` FirefoxDriver temp = new FirefoxDriver(); WebDriver browser = new EventFiringDecorator(new DriverEventListener()).decorate(temp); ```  Since Selenium4 is so new I couldn't find any solutions to this issue, so I figured I'd open one here.  My question is, what changed that we might be missing that causes tests to not fail at mentioned exceptions anymore? (Also, the _WARNING: null_ in the stacktrace provided above looks weird to me)  ### What browsers and operating systems are you seeing the problem on?  Browser: Firefox Gedockeriver version 0.30.0 OS: Win8.1","closed","C-java,","leRobbe","2021-10-21T09:30:43Z","2022-01-09T00:08:01Z"
"","10258","[🐛 Bug]:  ProtocolError: ('Connection aborted' with Function Get Element Count","### What happened?  Hello,  Sometime, this function  Get Element Count      xpath=//*[@id='consent_prompt_submit']  on this URL https://espaceclient.orange-business.com/  fail with this error ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))  when trying to do the screenshot capture.  In parallel, we are testing the same website with Selenium 2.53 (on 20 scenarios) and the function Get Matching Xpath Count is running perfectly.  Thanks for your help.   ### How can we reproduce the issue?  ```shell I cannot reproduce it. I have 2 tests running 24/7 every 10 minutes. I have the issue 10/15 time by day. ```   ### Relevant log output  ```shell RobotFramework debug trace :    20220117 12:28:28.614 - INFO - +--- START KEYWORD: SeleniumLibrary.Get Element Count [ xpath=//*[@id='consent_prompt_submit'] ] 20220117 12:28:28.615 - INFO - +---- START KEYWORD: SeleniumLibrary.Capture Page Screenshot [ ] 20220117 12:28:29.011 - INFO -  20220117 12:28:29.011 - INFO - +---- END KEYWORD: SeleniumLibrary.Capture Page Screenshot (396) 20220117 12:28:29.015 - FAIL - ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response')) 20220117 12:28:29.015 - DEBUG - Traceback (most recent call last):   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/SeleniumLibrary/__init__.py"", line 467, in run_keyword     return DynamicCore.run_keyword(self, name, args, kwargs)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/SeleniumLibrary/base/robotlibcore.py"", line 102, in run_keyword     return self.keywords[name](*args, **kwargs)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/SeleniumLibrary/keywords/element.py"", line 1020, in get_element_count     return len(self.find_elements(locator))   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/SeleniumLibrary/base/context.py"", line 90, in find_elements     return self.element_finder.find(locator, tag, False, False, parent)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/SeleniumLibrary/locators/elementfinder.py"", line 72, in find     elements = strategy(criteria, tag, constraints,   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/SeleniumLibrary/locators/elementfinder.py"", line 125, in _find_by_xpath     return self._filter_elements(parent.find_elements_by_xpath(criteria),   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 537, in find_elements_by_xpath     return self.find_elements(by=By.XPATH, value=xpath)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 1273, in find_elements     return self.execute(Command.FIND_ELEMENTS, {   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 416, in execute     response = self.command_executor.execute(driver_command, params)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py"", line 398, in execute     return self._request(command_info[0], url, body=data)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py"", line 420, in _request     resp = self._conn.request(method, url, body=body, headers=headers)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/request.py"", line 78, in request     return self.request_encode_body(   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/request.py"", line 170, in request_encode_body     return self.urlopen(method, url, **extra_kw)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/poolmanager.py"", line 375, in urlopen     response = conn.urlopen(method, u.request_uri, **kw)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 755, in urlopen     retries = retries.increment(   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/util/retry.py"", line 532, in increment     raise six.reraise(type(error), error, _stacktrace)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/packages/six.py"", line 769, in reraise     raise value.with_traceback(tb)   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 699, in urlopen     httplib_response = self._make_request(   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 445, in _make_request     six.raise_from(e, None)   File """", line 3, in raise_from   File ""/opt/rh/rh-python38/root/usr/local/lib/python3.8/site-packages/urllib3/connectionpool.py"", line 440, in _make_request     httplib_response = conn.getresponse()   File ""/opt/rh/rh-python38/root/usr/lib64/python3.8/http/client.py"", line 1322, in getresponse     response.begin()   File ""/opt/rh/rh-python38/root/usr/lib64/python3.8/http/client.py"", line 303, in begin     version, status, reason = self._read_status()   File ""/opt/rh/rh-python38/root/usr/lib64/python3.8/http/client.py"", line 272, in _read_status     raise RemoteDisconnected(""Remote end closed connection without"" 20220117 12:28:29.015 - INFO - +--- END KEYWORD: SeleniumLibrary.Get Element Count (401) ```   ### Operating System  Official Docker running on Debian 11 host   ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  firefox in docker 4.1.1  ### What are the browser driver(s) and version(s) where you see this issue?  driver included on docker 4.1.1  ### Are you using Selenium Grid?  grid 4.1.1","closed","I-defect,","eravion","2022-01-17T13:30:17Z","2022-02-26T00:08:53Z"
"","10592","[🐛 Bug]:","### What happened?  Hello,  I'm using selenium=4.1.3 with python 3.7.  I think the [expected_conditions.text_to_be_present_in_element_attribute](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/support/expected_conditions.py#L245) don't work the way it should.  ![image](https://user-images.githubusercontent.com/1100288/166081670-7db741a1-5dbe-4367-bf8c-00cfef000103.png)  In the current code, the condition L245 is useless because [element_attribute_to_include ](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/support/expected_conditions.py#L436)always return a function.  So L247 will return None if the attribute doesn't exists and L248 will raise a TypeError: argument of type 'NoneType' is not iterable.   I think the intended behavior is :  ` if not element_attribute_to_include(locator, attribute_)(driver):     return False `    ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.expected_conditions import text_to_be_present_in_element_attribute  driver = webdriver.Chrome() driver.get(""https://google.com"")  tester = text_to_be_present_in_element_attribute((By.CSS_SELECTOR, ""body""), ""missingattribute"", ""oups"") tester(driver) ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 248, in _predicate     return text_ in element_text TypeError: argument of type 'NoneType' is not iterable ```   ### Operating System  Windows 10  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","tbadaud","2022-04-29T23:56:58Z","2022-06-01T00:13:45Z"
"","10431","[🐛 Bug]: Can't handle alerts on new ChromeDriver update","### What happened?  Hello,  I'm using Selenium to check if my credentials in a website are working. When the credentials are accepted, the website returns an alert with OK button on it. Until ChromeDriver 98.0.4758.102 everything worked fine but when I upgraded to ChromeDriver 99.0.4844.51 this stop working. I can't continue using the old version of Google Chrome because my updates are automatically.  The problem is: everytime the alert appears on the page and I try to handle it, I get an error   ### How can we reproduce the issue?  ```shell (...)  login_button = driver.find_elements(By.ID, ""Entrada"")[0] login_button.click() time.sleep(15)  try: 	driver.switch_to.alert.accept() 	time.sleep(5)         print('Successful Login') except: 	print('Error') ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""C:\Users\Schwyz\Documents\scrap_files.py"", line 102, in run     driver.switch_to.alert.accept()   File ""C:\Users\Schwyz\Documents\lib\site-packages\selenium\webdriver\remote\switch_to.py"", line 56, in alert     alert.text   File ""C:\Users\Schwyz\Documents\lib\site-packages\selenium\webdriver\common\alert.py"", line 66, in text     return self.driver.execute(Command.W3C_GET_ALERT_TEXT)[""value""]   File ""C:\Users\Schwyz\Documents\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 424, in execute     self.error_handler.check_response(response)   File ""C:\Users\Schwyz\Documents\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 246, in check_response     raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: A sessão anterior foi encerrada. Stacktrace: Backtrace:         Ordinal0 [0x00929943+2595139]         Ordinal0 [0x008BC9F1+2148849]         Ordinal0 [0x007B4528+1066280]         Ordinal0 [0x007A4B9A+1002394]         Ordinal0 [0x007A50D8+1003736]         Ordinal0 [0x007A5068+1003624]         Ordinal0 [0x007AAD85+1027461]         Ordinal0 [0x007AAFC6+1028038]         Ordinal0 [0x007A62AD+1008301]         Ordinal0 [0x007A67C5+1009605]         Ordinal0 [0x007A65AF+1009071]         Ordinal0 [0x007A5BC6+1006534]         Ordinal0 [0x007A4AD0+1002192]         Ordinal0 [0x007A50D8+1003736]         Ordinal0 [0x007A5068+1003624]         Ordinal0 [0x007AB220+1028640]         Ordinal0 [0x007A62AD+1008301]         Ordinal0 [0x007A67C5+1009605]         Ordinal0 [0x007A65AF+1009071]         Ordinal0 [0x007A5BC6+1006534]         Ordinal0 [0x007A4AD0+1002192]         Ordinal0 [0x007A50D8+1003736]         Ordinal0 [0x007A5068+1003624]         Ordinal0 [0x007AB220+1028640]         Ordinal0 [0x007A62AD+1008301]         Ordinal0 [0x007A67C5+1009605]         Ordinal0 [0x007A65AF+1009071]         Ordinal0 [0x007A5BC6+1006534]         Ordinal0 [0x007A4AD0+1002192]         Ordinal0 [0x007A50D8+1003736]         Ordinal0 [0x007A5068+1003624]         Ordinal0 [0x007AB220+1028640]         Ordinal0 [0x007A62AD+1008301]         Ordinal0 [0x007A67C5+1009605]         Ordinal0 [0x007A65AF+1009071]         Ordinal0 [0x007A5BC6+1006534]         Ordinal0 [0x007A4AD0+1002192]         Ordinal0 [0x007A50D8+1003736]         Ordinal0 [0x007A5068+1003624]         Ordinal0 [0x007AAD85+1027461]         Ordinal0 [0x007AAFC6+1028038]         Ordinal0 [0x007A62AD+1008301]         Ordinal0 [0x007A67C5+1009605]         Ordinal0 [0x007A65AF+1009071]         Ordinal0 [0x007A5BC6+1006534]         Ordinal0 [0x007A4AD0+1002192]         Ordinal0 [0x007A50D8+1003736]         Ordinal0 [0x007A5068+1003624]         Ordinal0 [0x007AAD85+1027461]         Ordinal0 [0x007AAFC6+1028038]         Ordinal0 [0x007A62AD+1008301]         Ordinal0 [0x007A67C5+1009605]         Ordinal0 [0x007A65AF+1009071]         Ordinal0 [0x007A5BC6+1006534]         Ordinal0 [0x007A542B+1004587]         Ordinal0 [0x007A52C9+1004233]         Ordinal0 [0x007B58A0+1071264]         Ordinal0 [0x007C4747+1132359]         Ordinal0 [0x007FB806+1357830]         Ordinal0 [0x007D6086+1204358]         Ordinal0 [0x007D6F96+1208214]         GetHandleVerifier [0x00ACB232+1658114]         GetHandleVerifier [0x00B8312C+2411516]         GetHandleVerifier [0x009BF261+560433]         GetHandleVerifier [0x009BE366+556598]         Ordinal0 [0x008C286B+2173035]         Ordinal0 [0x008C75F8+2192888]         Ordinal0 [0x008C76E5+2193125]         Ordinal0 [0x008D11FC+2232828]         BaseThreadInitThunk [0x757BFA29+25]         RtlGetAppContainerNamedObjectPath [0x77947A9E+286]         RtlGetAppContainerNamedObjectPath [0x77947A6E+238] ```   ### Operating System  Windows 10  ### Selenium version  Python 3.9.1 - Selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99.0.4844.51 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","RenanSchwyz","2022-03-09T20:15:09Z","2022-05-01T00:14:48Z"
"","10313","[🐛 Bug]: se:cdp being reported as the hub interface instead of the node SE_NODE_HOST flag","### What happened?  Hello,  I'm migrating from `4.0.0-beta-4` hub and `chrome v90` node to `4.1.2` hub and `chrome v97` and I'm noticing that the `se:cdp` flag is wrongly set now, which makes my tests fail.  I've this set up on **different VMs** and I'm running the hub/node in a docker container.  On the previous version, when I queried the `se:cdp` endpoint, I would get something like: ``` [0-0]     'se:cdp': 'ws://10.112.180.69:5555/session/968314a0ce3cfe50626ce64cdbd11af0/se/cdp', [0-0]     'se:cdpVersion': '93.0.4577.82', ```  Where `10.112.180.69:5555` is what I set up on the `SE_NODE_HOST/SE_NODE_PORT`.  What I get now with the latest versions: ``` [0-0]     'se:cdp': 'ws://172.17.0.2:4444/session/bc42eae3f16f9d536c9d5a432b76e2ac/se/cdp', [0-0]     'se:cdpVersion': '97.0.4692.99', ```  Where `172.17.0.2:4444` is the Hub address... I should get what I registered there from a different machine by the `SE_NODE_HOST/SE_NODE_PORT` flags.  ### How can we reproduce the issue?  ```shell  I'm starting the hub like this:  Hub:  docker run -p 4442-4444:4442-4444 selenium/hub:4.1.2  Node: docker run -p 5555:5555 \             --shm-size=""2g"" \             -e SE_NODE_MAX_INSTANCES=1 \             -e SE_NODE_MAX_SESSIONS=1 \             -e SE_EVENT_BUS_HOST=IP_FROM_HUB \             -e SE_NODE_HOST=IP_FROM_MACHINE_2 \             -e SE_NODE_PORT=5555 \             -e SE_EVENT_BUS_PUBLISH_PORT=4442 \             -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \             selenium/node-chrome:97.0 ``` ```   ### Relevant log output  ```shell Hub Log:  2022-02-01 13:06:40,765 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing 2022-02-01 13:06:40,767 INFO supervisord started with pid 8 2022-02-01 13:06:41,770 INFO spawned: 'selenium-grid-hub' with pid 10 13:06:42.167 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 2022-02-01 13:06:42,170 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 13:06:42.172 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 13:06:42.270 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.17.0.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.17.0.2:4443] 13:06:42.334 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.17.0.2:4442 and tcp://172.17.0.2:4443 13:06:42.353 INFO [UnboundZmqEventBus.] - Sockets created 13:06:43.355 INFO [UnboundZmqEventBus.] - Event bus ready 13:06:44.042 INFO [Hub.execute] - Started Selenium Hub 4.1.2 (revision 9a5a329c5a): http://172.17.0.2:4444 13:06:59.399 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 13:06:59.783 INFO [LocalDistributor.add] - Added node 69e680eb-7236-4de5-874a-f9da9af957d2 at http://10.112.180.69:5555. Health check every 120s 13:06:59.797 INFO [GridModel.setAvailability] - Switching node 69e680eb-7236-4de5-874a-f9da9af957d2 (uri: http://10.112.180.69:5555) from DOWN to UP     Node Log:  2022-02-01 13:06:56,090 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing 2022-02-01 13:06:56,092 INFO supervisord started with pid 8 2022-02-01 13:06:57,095 INFO spawned: 'xvfb' with pid 10 2022-02-01 13:06:57,097 INFO spawned: 'vnc' with pid 11 2022-02-01 13:06:57,099 INFO spawned: 'novnc' with pid 12 2022-02-01 13:06:57,101 INFO spawned: 'selenium-node' with pid 13 2022-02-01 13:06:57,102 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2022-02-01 13:06:57,103 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2022-02-01 13:06:57,103 INFO success: novnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2022-02-01 13:06:57,103 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2022-02-01 13:06:57,103 INFO exited: xvfb (exit status 0; expected) 2022-02-01 13:06:57,104 INFO exited: vnc (exit status 0; expected) 2022-02-01 13:06:57,105 INFO exited: novnc (exit status 0; expected) Generating Selenium Config Setting up SE_NODE_GRID_URL... Selenium Grid Node configuration: [events] publish = ""tcp://HUB_IP:4442"" subscribe = ""tcp://HUB_IP:4443""  [server] host = ""10.112.180.69"" port = ""5555"" [node] session-timeout = ""300"" override-max-sessions = true detect-drivers = false max-sessions = 1  [[node.driver-configuration]] display-name = ""chrome"" stereotype = '{""browserName"": ""chrome"", ""browserVersion"": ""97.0"", ""platformName"": ""Linux""}' max-sessions = 1  Starting Selenium Grid Node... 13:06:57.911 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 13:06:57.917 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 13:06:58.034 INFO [UnboundZmqEventBus.] - Connecting to tcp://HUB_IP:4442 and tcp://HUB_IP:4443 13:06:58.089 INFO [UnboundZmqEventBus.] - Sockets created 13:06:59.092 INFO [UnboundZmqEventBus.] - Event bus ready 13:06:59.217 INFO [NodeServer.createHandlers] - Reporting self as: http://10.112.180.69:5555 13:06:59.240 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 13:06:59.241 WARN [NodeOptions.getSessionFactories] - Overriding max recommended number of 8 concurrent sessions. Session stability and reliability might suffer! 13:06:59.241 WARN [NodeOptions.getSessionFactories] - One browser session is recommended per available processor. Safari is always limited to 1 session per host. 13:06:59.241 WARN [NodeOptions.getSessionFactories] - Overriding this value for Internet Explorer is not recommended. Issues related to parallel testing with Internet Explored won't be accepted. 13:06:59.241 WARN [NodeOptions.getSessionFactories] - Double check if enabling 'override-max-sessions' is really needed 13:06:59.299 INFO [NodeOptions.report] - Adding chrome for {""browserName"": ""chrome"",""browserVersion"": ""97.0"",""platformName"": ""Linux""} 1 times 13:06:59.310 INFO [Node.] - Binding additional locator mechanisms: id, relative, name 13:06:59.511 INFO [NodeServer$1.start] - Starting registration process for node id 69e680eb-7236-4de5-874a-f9da9af957d2 13:06:59.512 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://10.112.180.69:5555 13:06:59.515 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 13:06:59.791 INFO [NodeServer.lambda$createHandlers$2] - Node has been added ```   ### Operating System  MacOS  ### Selenium version  Java 1.8.0_271-b09  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71  ### Are you using Selenium Grid?  4.1.2","closed","","luiscspinho","2022-02-01T13:13:48Z","2022-03-05T00:09:37Z"
"","10794","[🐛 Bug]: IEDriverServer stuck when remote node windows session locked","### What happened?  Hello,  As we are upgrading grid 2 to grid 4 I am facing the following issue: running a basic test on a remote (node) windows machine hangs IE  on the initial page with the following error : ""This is the initial start page for the WebDriver server"" in case that remote session is disconnected. It is not the case for chrome, firefox or edge that run without any issue. IE also works fine if I stay connected on the remote desktop session of that node. Versions and configurations: - Selenium jar version 4.2.1 or 4.2.2 - IEDriverServer.exe version 4.2.0.0 (tested also with older versions) 32bit version - Node OS: windows server 2019 or 2016 - IE zoom 100% and same protected mode on all zones (in fact the same nodes are working fine with selenium 2.53) - I also tested without success the following options: ignoreZoomSettings, introduceFlakinessByIgnoringSecurityDomains and disableNativeEvents - I also tested as administrator (just in case) - The log in eclipse console report System info: host: 'SELEN1', ip: '1.2.3.4', os.name: 'Windows Server 2012 R2', os.arch: 'x86' but in fact it is a 2019 server x64   The issue is also present when I try to run Edge in IE mode. I guess it is related to IEDriverServer.  I saw that this issue is reported in 2020 on google groups but nobody answered it. The link is here https://groups.google.com/g/selenium-users/c/G_6nrNrTc5Y/m/vGm8WZkzAAAJ  Thank you in advance, Marius  ### How can we reproduce the issue?  ```shell 1. open a remote (rdc) session and run this command in cmd (as regular user or administrator) to start the node on windows 2016 or 2019: c:\> java -jar selenium-server-4.2.1.jar standalone Disconnect your remote session (X)  run the following code from a remote machine : 	InternetExplorerOptions options = new InternetExplorerOptions(); 	WebDriver driver = new RemoteWebDriver(new URL(""http://1.2.3.4:4444), options); 	driver.get(""https://www.google.com""); 	driver.quit();  After few moments connect again your remote session. You will see IE hanged with the following message ""This is the initial start page for the WebDriver server""  If you repeat the test by keeping the remote session connected you will be able to see your test completed. ```   ### Relevant log output  ```shell Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.2.1', revision: 'ac4d0fdd4a' System info: host: 'SELEN1', ip: '1.2.3.4', os.name: 'Windows Server 2012 R2', os.arch: 'x86', os.version: '6.3', java.version: '1.8.0_51' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [null, newSession {capabilities=[Capabilities {browserName: internet explorer, pageLoadStrategy: normal, se:ieOptions: {ignoreProtectedModeSettings: true, ignoreZoomSetting: true}}], desiredCapabilities=Capabilities {browserName: internet explorer, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, pageLoadStrategy: normal, se:ieOptions: {ignoreProtectedModeSettings: true, ignoreZoomSetting: true}}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:162) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at ulis14.Main.main(Main.java:143) Caused by: java.lang.RuntimeException: NettyHttpHandler request execution error 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:76) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler$$Lambda$91/5974363.execute(Unknown Source) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent$$Lambda$306/10272124.execute(Unknown Source) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.Filter$$Lambda$92/6757759.execute(Unknown Source) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent$$Lambda$306/10272124.execute(Unknown Source) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.Filter$$Lambda$92/6757759.execute(Unknown Source) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:98) 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:120) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:551) 	... 4 more Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to 1.2.3.4/1.2.3.4:4444 after 180000 ms 	at java.util.concurrent.CompletableFuture.reportGet(Unknown Source) 	at java.util.concurrent.CompletableFuture.get(Unknown Source) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59) 	... 22 more Caused by: java.util.concurrent.TimeoutException: Request timeout to 1.2.3.4/1.2.3.4:4444 after 180000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.run(HashedWheelTimer.java:715) 	at io.netty.util.concurrent.ImmediateExecutor.execute(ImmediateExecutor.java:34) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:703) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:790) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:503) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Unknown Source) ```   ### Operating System  Windows Server 2016/2019  ### Selenium version  4.2.1  ### What are the browser(s) and version(s) where you see this issue?  Internet Explorer 1809 build 17763.2803  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.2.0.0   ### Are you using Selenium Grid?  4.2.1","closed","I-defect,","zefkide","2022-06-22T14:21:32Z","2022-07-23T00:13:05Z"
"","10336","[🐛 Bug]: Chrome's Webdriver getting stuck on `driver.get(URL)` since v91+","### What happened?  Hello,  As a pet project, I'm working on a web-extension, which is tested using selenium's python binding. After a while without activity, I got back to it recently, discovering that my automated tests were no longer able to pass reliably for chrome. Coming here, my issue looked very much like https://github.com/SeleniumHQ/selenium/issues/10002 (where I [commented](https://github.com/SeleniumHQ/selenium/issues/10002#issuecomment-1030918722)), but seems to be slightly different.  To detail the issue, at a very high reproduction rate (but not 100%, so some tests still pass), selenium gets completely stuck on a `driver.get(URL)` call, halting the progress of all tests. Obviously the CI thus times-out after a while without any output. I identified this situation by running our pytest tests with the `--pdb` option, then interrupting with a Ctrl+C keypress to obtain the stack trace (cf my comment in #10002 ).  As it does not seem easy to reproduce with a simple python script, so I suspect that either the fact that we're loading a web-extension, or that the sites we rely on for testing are slow might play an important part in this issue.  Also, attempting to set the following did not help:  - option: --disable-browser-side-navigation  - `driver.set_page_load_timeout(30)` failed to trigger the TimeoutException  ### How can we reproduce the issue?  For now, I don't have much more than our own repository and its Circle CI tests:  https://github.com/BookMyComics-Developers/BookMyComics    ### Relevant log output  ```shell tests/func/test_register.py::TestRegister::test_escape_key_handling[chrome] ^CFAILED >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>  controller =  unique_reader =       @staticmethod     def test_escape_key_handling(controller, unique_reader):         """"""             Validates that pressing the ""ESCAPE"" key on the ""adder menu""             discards it.         """""" >       init_sidebar(unique_reader, controller)  tests/func/test_register.py:51:  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  tests/func/utils/bmc.py:373: in init_sidebar     reader_driver.load_random(predicate=predicate) tests/func/utils/__init__.py:27: in wrapper     return func(*args, **kwargs) tests/func/utils/__init__.py:46: in wrapper     ret = func(self, *args, **kwargs) tests/func/utils/support/manganato.py:33: in load_random     mangas = self._get_mangas() tests/func/utils/support/manganato.py:18: in _get_mangas     self.home() tests/func/utils/support/manganato.py:26: in home     self._driver.get('https://manganato.com/') ../../.virtualenvs/bmc37/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:436: in get     self.execute(Command.GET, {'url': url}) ../../.virtualenvs/bmc37/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py:422: in execute     response = self.command_executor.execute(driver_command, params) ../../.virtualenvs/bmc37/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py:421: in execute     return self._request(command_info[0], url, body=data) ../../.virtualenvs/bmc37/lib/python3.7/site-packages/selenium/webdriver/remote/remote_connection.py:443: in _request     resp = self._conn.request(method, url, body=body, headers=headers) ../../.virtualenvs/bmc37/lib/python3.7/site-packages/urllib3/request.py:79: in request     method, url, fields=fields, headers=headers, **urlopen_kw ../../.virtualenvs/bmc37/lib/python3.7/site-packages/urllib3/request.py:170: in request_encode_body     return self.urlopen(method, url, **extra_kw) ../../.virtualenvs/bmc37/lib/python3.7/site-packages/urllib3/poolmanager.py:375: in urlopen     response = conn.urlopen(method, u.request_uri, **kw) ../../.virtualenvs/bmc37/lib/python3.7/site-packages/urllib3/connectionpool.py:710: in urlopen     chunked=chunked, ../../.virtualenvs/bmc37/lib/python3.7/site-packages/urllib3/connectionpool.py:449: in _make_request     six.raise_from(e, None) :3: in raise_from     ??? ../../.virtualenvs/bmc37/lib/python3.7/site-packages/urllib3/connectionpool.py:444: in _make_request     httplib_response = conn.getresponse() /usr/lib/python3.7/http/client.py:1348: in getresponse     response.begin() /usr/lib/python3.7/http/client.py:315: in begin     version, status, reason = self._read_status() /usr/lib/python3.7/http/client.py:276: in _read_status     line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"") _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   self = , b =       def readinto(self, b):         """"""Read up to len(b) bytes into the writable buffer *b* and return         the number of bytes read.  If the socket is non-blocking and no bytes         are available, None is returned.              If *b* is non-empty, a 0 return value indicates that the connection         was shutdown at the other end.         """"""         self._checkClosed()         self._checkReadable()         if self._timeout_occurred:             raise OSError(""cannot read from timed out object"")         while True:             try: >               return self._sock.recv_into(b) E               KeyboardInterrupt  /usr/lib/python3.7/socket.py:589: KeyboardInterrupt >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> ```   ### Operating System  Ubuntu/Debian, depending on the environment (personal computer, CI)  ### Selenium version  python3.7 selenium=4.1.0 , python3.6 selenium=3.141.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 91+  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 91+  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","Joacchim","2022-02-07T19:15:56Z","2022-04-07T00:11:41Z"
"","10679","[🐛 Bug]: getScreenshotAs on web element doesn't use retina resolution unlike driver screenshot","### What happened?  Hello,  ```driver.getScreenshotAs``` generates HiDPI screenshot when ran on retina display.  ```webElement.getScreenshotAs``` generates single pixel screenshot in the same environment/test.   Didn't notice a setting to affect this. Could you please help me figure out what am I missing?   ### How can we reproduce the issue?  ```shell execute `webElement.getScreenshotAs` using hi dpi output device ```   ### Relevant log output  ```shell NA ```   ### Operating System  Latest Mac  ### Selenium version  Java 4.1.4  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41   ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","MykolaGolubyev","2022-05-22T01:25:51Z","2022-06-26T00:14:14Z"
"","10910","[🐛 Bug]: Unable to Load a .xpi extension on firefox without a FirefoxProfile created","### What happened?  Hello!    I'm currently migrating from sel3 to sel4 and updating everything that was deprecated. Everything went smoothly, until I migrated everything from FirefoxProfile to FirefoxOptions: Every option still works fine from what I could see, but when I try loading an .xpi extension, I get the following error:  ``` selenium.common.exceptions.WebDriverException: Message: Could not install add-on: C:\Users\gbrabelo\AppData\Local\Temp\addon-01f66145-c781-4da4-ab28-cd20949a695d.xpi: Add-on webpki@lacunasoftware.com is not compatible with application version. add-on minVersion: 50.0a1. Stacktrace: WebDriverError@chrome://remote/content/shared/webdriver/Errors.jsm:186:5 UnknownError@chrome://remote/content/shared/webdriver/Errors.jsm:513:5 install@chrome://remote/content/marionette/addon.js:86:13 ```  Looks to me that the remote driver thinks it is a Chrome? Looks to me that it is unable to compare to Firefox version (>50), even though I'm using the latest Firefox.  Extension used download from: https://docs.lacunasoftware.com/pt-br/articles/web-pki/installation-webpki-gpo.html direct link> https://cdn.lacunasoftware.com/webpki/webpki-ext.zip  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.firefox.service import Service  a_service = Service(executable_path='gecko_path') driver = webdriver.Firefox(service=a_service) # it works if you add a profile though> # driver = webdriver.Firefox(service=a_service, firefox_profile=webdriver.FirefoxProfile()) driver.install_addon('webpki-firefox-ext.xpi', temporary=True) ```   ### Relevant log output  ```shell selenium.common.exceptions.WebDriverException: Message: Could not install add-on: C:\Users\gbrabelo\AppData\Local\Temp\addon-83b613a7-aed6-4e3c-bf4b-15ebf282470c.xpi: Add-on webpki@lacunasoftware.com is not compatible with application version. add-on minVersion: 50.0a1. Stacktrace: WebDriverError@chrome://remote/content/shared/webdriver/Errors.jsm:186:5 UnknownError@chrome://remote/content/shared/webdriver/Errors.jsm:513:5 install@chrome://remote/content/marionette/addon.js:86:13 ```   ### Operating System  Win10 and latest Mac  ### Selenium version  Python 3.10 with Sel4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 102  ### What are the browser driver(s) and version(s) where you see this issue?  gecko v0.31  ### Are you using Selenium Grid?  No","open","I-defect,","gbrabelo","2022-07-27T20:31:44Z","2022-08-01T10:27:22Z"
"","10477","[🐛 Bug]: StackOverflowException from a listener after upgrading to Selenium 4","### What happened?  Hello folks.  Recently, I've upgraded my project to Se4.  In my project, I have a WebDriverListener implemented, that tries to find an element in any of the iframes. It helps me to make my tests handle iframes smoothly.  After upgrading to Se4, it started to fail inside this listener with StackOverflowException. I've prepared a sample project with Se3 and Se4 implementation of the same test.  https://github.com/baflQA/selenium_debug/tree/main/se3 - Selenium 3 implementation https://github.com/baflQA/selenium_debug/tree/main/se4 - Selenium 4 implementation  As You can see, I create a decorated instance of WebDriver.  Then, from found WebElement, I extract the wrapped driver and create a new decorated driver instance.  It's an abbreviation of what I do in my framework, but it points to the problem directly.  The listener's beforeFindElement method will be called infinitely in Se4 implementation after decorating the wrapped driver, causing StackOverflowException. This is not the case in Se3.  ### How can we reproduce the issue?  ```shell https://github.com/baflQA/selenium_debug/tree/main/se3 - Selenium 3 implementation https://github.com/baflQA/selenium_debug/tree/main/se4 - Selenium 4 implementation ```   ### Relevant log output  ```shell StackOverflowException will be thrown ```   ### Operating System  macOS  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 99  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","baflQA","2022-03-25T11:22:34Z","2022-05-09T00:11:04Z"
"","10349","[🐛 Bug]: Headless is ignored for Firefox when CapabilityType.LOGGING_PREFS is set","### What happened?  Headless worked with Selenium 3.x for Chrome and Firefox. With Selenium 4.1.2 it does not work for Firefox anymore. (Firefox is still started with UI)  ~~After some debugging i currently think it´s lost there:~~ ![image](https://user-images.githubusercontent.com/10461942/153289191-1cb97ab2-b4d9-4063-9e8a-fcaabd3a2fb3.png)  ### How can we reproduce the issue?  ```java FirefoxOptions firefoxOptions = new FirefoxOptions(); firefoxOptions = firefoxOptions.setHeadless(true); return new FirefoxDriver(firefoxOptions); ``` ```  ### Operating System  Windows 11  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  -","closed","G-geckodriver,","christophs78","2022-02-09T21:06:06Z","2022-03-13T00:09:45Z"
"","10301","[🐛 Bug]: webdriver exception with selenium 4.1.1 upgrade while launching firefox browser","### What happened?  Getting WebDriverException with selenium upgrade from selenium 3.141.59 to 4.1.1 while launching firefox browser in my project. Please help me with the solution if any configurations are required here.  Caused by: org.openqa.selenium.WebDriverException: Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'l100779min.rpega.com', ip: '2409:4070:2505:a772:57:ecac:b10d:51c0%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '1.8.0_292' Driver info: driver.version: FirefoxDriver         at java.util.Optional.orElseThrow(Optional.java:290)         at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:230)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186)  ### How can we reproduce the issue?  ```shell Getting WebDriverException with selenium upgrade from selenium 3.141.59 to 4.1.1 while launching firefox browser in my project. Please help me with the solution if any configurations are required here. I am using geckodriver binary 0.30.0 version  Caused by: org.openqa.selenium.WebDriverException: Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'l100779min.rpega.com', ip: '2409:4070:2505:a772:57:ecac:b10d:51c0%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '1.8.0_292' Driver info: driver.version: FirefoxDriver         at java.util.Optional.orElseThrow(Optional.java:290)         at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:230)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186) ```   ### Relevant log output  ```shell Caused by: org.openqa.selenium.WebDriverException: Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'l100779min.rpega.com', ip: '2409:4070:2505:a772:57:ecac:b10d:51c0%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '1.8.0_292' Driver info: driver.version: FirefoxDriver         at java.util.Optional.orElseThrow(Optional.java:290)         at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:230)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186) ```   ### Operating System  macOS  ### Selenium version  java 1.8  ### What are the browser(s) and version(s) where you see this issue?  firefox 96  ### What are the browser driver(s) and version(s) where you see this issue?  gecko driver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Tejareddy1","2022-01-28T20:15:55Z","2022-06-09T00:11:23Z"
"","10290","[🐛 Bug]: Getting UnsupportedOperationException when while selecting values from dropdowns in selenium-4.0.0","### What happened?  Getting UnsupportedOperationException when while selecting dropdowns org.openqa.selenium.support.ui.Select class from selenium 4.0.0 (tried latest 4.1.1 as well). The same code works fine with 3.141.59 version. I am getting this issue while upgrading the selenium library in my project.    java.lang.UnsupportedOperationException: getDomAttribute 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at org.openqa.selenium.support.ui.Select.(Select.java:54)  ### How can we reproduce the issue?  ```shell Getting UnsupportedOperationException when while selecting dropdowns org.openqa.selenium.support.ui.Select class from selenium 4.0.0 (tried latest 4.1.1 as well)  java.lang.UnsupportedOperationException: getDomAttribute 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) ```   ### Relevant log output  ```shell java.lang.UnsupportedOperationException: getDomAttribute 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) ```   ### Operating System  macOS or linux  ### Selenium version  Java 8  ### What are the browser(s) and version(s) where you see this issue?  chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  97.0.4692.71  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Tejareddy1","2022-01-26T19:03:27Z","2022-03-04T00:10:53Z"
"","10501","[🐛 Bug]: InvocationTargetException while using dynamic Selenium grid 4","### What happened?  Getting InvocationTargetException while using dynamic Selenium grid 4.  We have downloaded docker compose file (docker-compose-v3-dynamic-grid.yml) from https://github.com/SeleniumHQ/docker-selenium/blob/trunk/docker-compose-v3-dynamic-grid.yml and created config.toml file using the code from https://github.com/SeleniumHQ/docker-selenium#dynamic-grid without changing anything. The config.toml file is place in NodeDocker folder.  ### How can we reproduce the issue?  ```shell selenium-compose.yml:  version: ""3"" services:   node-docker:     image: selenium/node-docker:latest     volumes:       - ./assets:/opt/selenium/assets       - ./config/config.toml:/opt/bin/config.toml     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443    selenium-hub:     image: selenium/hub:4.1.3-20220327     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444""  config.toml  [docker] # Configs have a mapping between the Docker image to use and the capabilities that need to be matched to # start a container with the given image. configs = [     ""selenium/standalone-chrome:latest"", ""{\""browserName\"": \""chrome\""}"" 	""selenium/standalone-firefox:latest"", ""{\""browserName\"": \""firefox\""}""     ]  # URL for connecting to the docker daemon # Most simple approach, leave it as http://127.0.0.1:2375, and mount /var/run/docker.sock. # 127.0.0.1 is used because interally the container uses socat when /var/run/docker.sock is mounted  # If var/run/docker.sock is not mounted:  # Windows: make sure Docker Desktop exposes the daemon via tcp, and use http://host.docker.internal:2375. # macOS: install socat and run the following command, socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock, # then use http://host.docker.internal:2375. # Linux: varies from machine to machine, please mount /var/run/docker.sock. If this does not work, please create an issue. url = ""http://host.docker.internal:2375"" # Docker image used for video recording video-image = ""selenium/video:latest""  # Uncomment the following section if you are running the node on a separate VM # Fill out the placeholders with appropriate values #[server] #host =  #port =   Running below docker compose command:  docker-compose -f selenium-compose.yml up ```   ### Relevant log output  ```shell selenium-hub    | 2022-03-31 20:24:30,036 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing selenium-hub    | 2022-03-31 20:24:30,039 INFO supervisord started with pid 8 selenium-hub    | 2022-03-31 20:24:31,041 INFO spawned: 'selenium-grid-hub' with pid 10 selenium-hub    | 20:24:31.411 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding selenium-hub    | 2022-03-31 20:24:31,413 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) selenium-hub    | 20:24:31.416 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing selenium-hub    | 20:24:31.517 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.22.0.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.22.0.2:4443] selenium-hub    | 20:24:31.567 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.22.0.2:4442 and tcp://172.22.0.2:4443 selenium-hub    | 20:24:31.587 INFO [UnboundZmqEventBus.] - Sockets created selenium-hub    | 20:24:32.589 INFO [UnboundZmqEventBus.] - Event bus ready selenium-hub    | 20:24:33.198 INFO [Hub.execute] - Started Selenium Hub 4.1.3 (revision 7b1ebf28ef): http://172.22.0.2:4444 selenium-hub    | Trapped SIGTERM/SIGINT/x so shutting down supervisord... selenium-hub    | 2022-03-31 20:31:13,705 WARN received SIGTERM indicating exit request selenium-hub    | 2022-03-31 20:31:13,706 INFO waiting for selenium-grid-hub to die selenium-hub    | 2022-03-31 20:31:14,707 INFO stopped: selenium-grid-hub (terminated by SIGTERM) selenium-hub    | Shutdown complete selenium-hub    | 2022-03-31 20:31:35,542 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing selenium-hub    | 2022-03-31 20:31:35,545 INFO supervisord started with pid 9 selenium-hub    | 2022-03-31 20:31:36,547 INFO spawned: 'selenium-grid-hub' with pid 11 selenium-hub    | 20:31:36.964 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding selenium-hub    | 2022-03-31 20:31:36,968 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) selenium-hub    | 20:31:36.971 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing selenium-hub    | 20:31:37.102 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.22.0.2:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.22.0.2:4443] selenium-hub    | 20:31:37.158 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.22.0.2:4442 and tcp://172.22.0.2:4443 selenium-hub    | 20:31:37.181 INFO [UnboundZmqEventBus.] - Sockets created selenium-hub    | 20:31:38.183 INFO [UnboundZmqEventBus.] - Event bus ready selenium-hub    | 20:31:38.936 INFO [Hub.execute] - Started Selenium Hub 4.1.3 (revision 7b1ebf28ef): http://172.22.0.2:4444 node-docker_1   | 2022-03-31 20:33:12,162 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-docker.conf"" during parsing node-docker_1   | 2022-03-31 20:33:12,165 INFO supervisord started with pid 8 node-docker_1   | 2022-03-31 20:33:13,167 INFO spawned: 'socat' with pid 10 node-docker_1   | 2022-03-31 20:33:13,169 INFO spawned: 'selenium-grid-docker' with pid 11 node-docker_1   | 2022-03-31 20:33:13,176 INFO success: socat entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) node-docker_1   | 2022-03-31 20:33:13,177 INFO success: selenium-grid-docker entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) node-docker_1   | 2022-03-31 20:33:13,177 INFO exited: socat (exit status 0; expected) node-docker_1   | Starting Selenium Grid Node Docker... node-docker_1   | 20:33:13.656 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding node-docker_1   | 20:33:13.663 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing node-docker_1   | 20:33:13.831 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-hub:4442 and tcp://selenium-hub:4443 node-docker_1   | 20:33:13.889 INFO [UnboundZmqEventBus.] - Sockets created node-docker_1   | 20:33:14.892 INFO [UnboundZmqEventBus.] - Event bus ready node-docker_1   | 20:33:15.016 INFO [NodeServer.createHandlers] - Reporting self as: http://172.22.0.3:5555 node-docker_1   | 20:33:15.032 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors node-docker_1   | java.lang.reflect.InvocationTargetException node-docker_1   |       at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) node-docker_1   |       at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) node-docker_1   |       at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) node-docker_1   |       at java.base/java.lang.reflect.Method.invoke(Method.java:566) node-docker_1   |       at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) node-docker_1   |       at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) node-docker_1   | Caused by: org.openqa.selenium.grid.config.ConfigException: java.lang.reflect.InvocationTargetException node-docker_1   |       at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:115) node-docker_1   |       at org.openqa.selenium.grid.node.config.NodeOptions.getNode(NodeOptions.java:149) node-docker_1   |       at org.openqa.selenium.grid.node.httpd.NodeServer.createHandlers(NodeServer.java:127) node-docker_1   |       at org.openqa.selenium.grid.node.httpd.NodeServer.asServer(NodeServer.java:183) node-docker_1   |       at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:231) node-docker_1   |       at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) node-docker_1   |       at org.openqa.selenium.grid.Main.launch(Main.java:83) node-docker_1   |       at org.openqa.selenium.grid.Main.go(Main.java:57) node-docker_1   |       at org.openqa.selenium.grid.Main.main(Main.java:42) node-docker_1   |       ... 6 more node-docker_1   | Caused by: java.lang.reflect.InvocationTargetException node-docker_1   |       at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) node-docker_1   |       at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) node-docker_1   |       at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) node-docker_1   |       at java.base/java.lang.reflect.Method.invoke(Method.java:566) node-docker_1   |       at org.openqa.selenium.grid.config.ClassCreation.callCreateMethod(ClassCreation.java:50) node-docker_1   |       at org.openqa.selenium.grid.config.MemoizedConfig.lambda$getClass$4(MemoizedConfig.java:100) node-docker_1   |       at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1737) node-docker_1   |       at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:95) node-docker_1   |       ... 14 more node-docker_1   | Caused by: org.openqa.selenium.docker.DockerException: Unable to reach the Docker daemon at http://127.0.0.1:2375 node-docker_1   |       at org.openqa.selenium.grid.node.docker.DockerOptions.getDockerSessionFactories(DockerOptions.java:125) node-docker_1   |       at org.openqa.selenium.grid.node.local.LocalNodeFactory.create(LocalNodeFactory.java:80) node-docker_1   |       ... 22 more node-docker_1   | Exception in thread ""Thread-0"" java.lang.NullPointerException node-docker_1   |       at org.openqa.selenium.grid.node.httpd.NodeServer.lambda$new$0(NodeServer.java:79) node-docker_1   |       at java.base/java.lang.Thread.run(Thread.java:829) node-docker_1   | 2022-03-31 20:33:15,858 INFO exited: selenium-grid-docker (exit status 1; not expected) ```   ### Operating System  Windows 10  ### Selenium version  Java 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  dynamic grid using docker  ### What are the browser driver(s) and version(s) where you see this issue?  selenium/node-docker:latest, selenium/standalone-chrome:latest, selenium/standalone-firefox:latest  ### Are you using Selenium Grid?  4","closed","","cloudmsdasari","2022-03-31T20:35:06Z","2022-05-01T00:14:47Z"
"","10179","[🐛 Bug]: Error - org.openqa.selenium.UnsupportedCommandException: getElementDomAttribute Build info: version: '4.1.1'","### What happened?  Getting error only while executing in Sauce. Local Machine its working as expected.  All the select class xpath are failing after updating selenium 4.1.1  Updated Remote webdriver as ChromeOptions options=new New ChromeOptions();  browser pick ki up correctly in sauce, but dropdown values not selecting.     ### How can we reproduce the issue?  ```shell Trying select Dropdown values by using select elememt  public void selectByVisisibleText(Sting arg0, String arg1){ Select select = new Select(driver.findelement(By.xpath(arg0)); select.selectByviibleText(arg1); } tried different ByXpath/ID/Name none of the worked. ```   ### Relevant log output  ```shell java.lang.AssertionError: Element Not Found//select[@id='example']| Error - org.openqa.selenium.UnsupportedCommandException: getElementDomAttribute Build info: version: '4.1.1', , java.version: '1.8.0_231' Driver info: org.openqa.selenium.remote.RemoteWebDriver ```   ### Operating System  Windows 10  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96, Edge 96 all latest   ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 96, Edge 96 all latest   ### Are you using Selenium Grid?  no","closed","needs-triaging,","ghost","2021-12-24T13:35:11Z","2022-01-24T00:07:36Z"
"","10233","[🐛 Bug]: Using WebDriverListener with Augmenter throws ArgumentException","### What happened?  Getting error in case of RemoteWebDriver using WebDriverListener.  ### How can we reproduce the issue?  ```shell Project: Maven Runner: TestNG  src/main/java folder:  public class Driver {     public static void initDriver() {         assertionMode = AssertionMode.SOFT;         baseUrl = ""https://www.google.com/"";         pageLoadStrategy = ""eager"";         browser = ""Chrome"";         pollingInterval = 500;         holdBrowserOpen = false;         savePageSource = false;         fastSetValue = true;         screenshots = false;         remote = ""remoteMachineUrl"";         driverManagerEnabled = true;         headless = false;         timeout = 10000;         WebDriverRunner.addListener(new WebDriverEvent());         open();     }   public final class Util {     public static WebDriver driver = new Augmenter().augment(getWebDriver());     public static DevTools devTools = ((HasDevTools) driver).getDevTools(); }   public class WebDriverEvent implements WebDriverListener {     @Override     public void beforeClick(WebElement element) {         WebDriverListener.super.beforeClick(element);         System.out.println(""Before Click"");     } }  src/test/java folder:  public class DevToolsTest {     @Test     public void devToolTest(){         Driver.initDriver();         open(baseUrl);         Util.devTools.createSession();         Util.devTools.send(Network.clearBrowserCache());     } }   pom XML:        4.0.0      org.example     Draft     1.0-SNAPSHOT               11         11                                 org.testng             testng             7.4.0                               com.codeborne             selenide             6.1.2                               org.selenide             selenide-testng             1.0.0             test                               net.bytebuddy             byte-buddy             1.12.6                  The problem is connected with the WebDriverListener interface, when I remove this everything is okay. But the problem is only arising in the case of running the test on the remote machine, when I run the test with the WebDriverListener interface in the local machine, everything is okay. ```   ### Relevant log output  ```shell java.lang.ExceptionInInitializerError 	at DevToolsTest.devToolTest(DevToolsTest.java:13) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332) 	at org.testng.SuiteRunner.run(SuiteRunner.java:276) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1134) 	at org.testng.TestNG.runSuites(TestNG.java:1063) 	at org.testng.TestNG.run(TestNG.java:1031) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) Caused by: java.lang.IllegalArgumentException: Cannot subclass primitive, array or final types: class jdk.proxy2.$Proxy10 	at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:490) 	at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:463) 	at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:360) 	at org.openqa.selenium.remote.Augmenter.augment(Augmenter.java:179) 	at Util.(Util.java:10) ```   ### Operating System  Local: macOS Monterey /  Remote: Windows 10  ### Selenium version  JavaSE 14: version 16.0.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  Selenium Grid (selenium server 4.1.0)","closed","I-defect,","arsen-papoyan","2022-01-07T13:45:13Z","2022-03-13T00:09:55Z"
"","10828","[🐛 Bug]: Using HasAuthentication with Augmenter throws ClassCastException","### What happened?  Getting an error in case of RemoteWebDriver using HasAuthentication.  ### How can we reproduce the issue?  ```shell Project: Maven Runner: TestNG  src/main/java folder:  public class DriverMobile {      public static WebDriver webDriver;     public static DevTools devTools;      public static void initDriver() {         Map mobileEmulation = new HashMap();         mobileEmulation.put(""deviceName"", ""iPhone 12 Pro"");         ChromeOptions options = new ChromeOptions();         options.setExperimentalOption(""mobileEmulation"", mobileEmulation);         assertionMode = SOFT;         driverManagerEnabled = true;         screenshots = false;         savePageSource = false;         headless = false;         remote = ""remoteMachineUrl"";         browserCapabilities = options;         open();         webDriver = new Augmenter().augment(getWebDriver());         devTools = ((HasDevTools) webDriver).getDevTools();         ((HasAuthentication) webDriver).register(UsernameAndPassword.of(""username"", ""password""));     } }  src/test/java folder:  public class HasAuthenticationTest {      @Test     public void test(){         DriverMobile.initDriver();         open(""https://www.google.com/"");     } }  pom XML:        4.0.0      org.example     Draft     1.0-SNAPSHOT               UTF-8         11         11         1.9.6                                org.testng             testng             7.4.0                               com.codeborne             selenide-testng             6.6.5                               net.bytebuddy             byte-buddy             1.12.10                The problem is only arising in the case of running the test on the remote machine, when I run the test on the local machine, everything is okay. ```   ### Relevant log output  ```shell java.lang.ClassCastException: class org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$W9YhfBNu cannot be cast to class org.openqa.selenium.HasAuthentication (org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$W9YhfBNu is in unnamed module of loader net.bytebuddy.dynamic.loading.ByteArrayClassLoader @5fa9247b; org.openqa.selenium.HasAuthentication is in unnamed module of loader 'app')  	at SelenideDriver.DriverMobile.initDriver(DriverMobile.java:40) 	at HasAuthenticationTest.test(HasAuthenticationTest.java:10) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332) 	at org.testng.SuiteRunner.run(SuiteRunner.java:276) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1134) 	at org.testng.TestNG.runSuites(TestNG.java:1063) 	at org.testng.TestNG.run(TestNG.java:1031) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) ```   ### Operating System  Local: macOS Monterey / Remote: Windows 10  ### Selenium version  JavaSE 14: version 16.0.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102  ### Are you using Selenium Grid?  Selenium Grid (selenium server 4.1.4)","open","I-defect,","arsen-papoyan","2022-06-29T12:24:42Z","2022-07-05T06:05:41Z"
"","10008","[🐛 Bug]: GetDevToolsSession in WPF hangs forever","### What happened?  GetDevToolsSession in WPF Application hangs forever, but same code in Console Application work fine.  ### How can we reproduce the issue?  ```shell MainWindow.xaml：   MainWindow.xaml.cs： private void Button_Click(object sender, RoutedEventArgs e) {     IWebDriver driver = new ChromeDriver();     IDevTools devTools = driver as IDevTools;     DevToolsSession session = devTools.GetDevToolsSession(); //this line never return     driver.Navigate().GoToUrl(""https://bing.com"");     driver.Quit(); } ```   ### Relevant log output  ```shell no relevant log output and vs2019 hasn't error log ```   ### Operating System  windows 10  ### Selenium version  .net c# 4.0.1  ### What are the browser(s) and version(s) where you see this issue?  chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.5401  ### Are you using Selenium Grid?  no","open","I-defect,","topfunet","2021-11-03T11:28:55Z","2022-05-31T13:43:30Z"
"","10378","[🐛 Bug]: Unable to execute request for an existing session: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect","### What happened?  Get Window Rect Command(`/window/rect`) is giving RuntimeException with Selenium standalone version 4.0.0  **Error Response**: ``` {     ""value"": {         ""error"": ""script timeout"",         ""message"": ""Unable to execute request for an existing session: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown"",         ""stacktrace"": ""java.lang.RuntimeException: Unable to execute request for an existing session: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:139)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\n\tat org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$NestedRoute.handle(Route.java:270)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n""     } } ```  ""stacktrace"": ""java.lang.RuntimeException: Unable to execute request for an existing session: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:139)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\n\tat org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n""  ### How can we reproduce the issue?  ```shell ### Steps  - Start Standalone Selenium 4.0.0 server, using command   java -Dwebdriver.gecko.driver=""geckodriver"" -jar selenium-server-4.0.0.jar standalone   --driver-configuration display-name=""Firefox""    stereotype='{""browserName"": ""firefox"", ""browserVersion"": ""97"", ""moz:firefoxOptions"": {""binary"":""/Applications/Firefox.app/Contents/MacOS/firefox-bin""}}' --log-level=FINE ```  - After that Create New Firefox Session  ``` curl --location --request POST 'http://localhost:4444/wd/hub/session' \ --header 'Accept: application/json; charset=utf-8' \ --header 'Content-Type: application/json; charset=utf-8' \ --data-raw '{     ""desiredCapabilities"": {         ""browserName"": ""firefox""     } }' ```  - Once session created, the hit `/session/{session id}/window/rect` API Call ``` curl --location --request GET 'http://localhost:4444/wd/hub/session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect' \ --header 'Content-Type: application/json; charset=utf-8' ```  Error Response :  ```{     ""value"": {         ""error"": ""script timeout"",         ""message"": ""Unable to execute request for an existing session: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown"",         ""stacktrace"": ""java.lang.RuntimeException: Unable to execute request for an existing session: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:139)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\n\tat org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$NestedRoute.handle(Route.java:270)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n""     } }``` ```   ### Relevant log output  ```shell 17:21:19.711 WARN [SpanWrappedHttpHandler.execute] - Unable to execute request: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292' Driver info: driver.version: unknown org.openqa.selenium.UnsupportedCommandException: GET /session/f77974f3-032d-4f3d-b6df-bbed7e364f8e/window/rect Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.decode(AbstractHttpCommandCodec.java:293) 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.decode(AbstractHttpCommandCodec.java:127) 	at org.openqa.selenium.grid.web.ProtocolConverter.execute(ProtocolConverter.java:123) 	at org.openqa.selenium.grid.node.ProtocolConvertingSession.execute(ProtocolConvertingSession.java:75) 	at org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:123) 	at org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:388) 	at org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35) 	at org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.node.Node.execute(Node.java:240) 	at org.openqa.selenium.grid.web.CombinedHandler.execute(CombinedHandler.java:59) 	at org.openqa.selenium.grid.web.RoutableHttpClientFactory$1.execute(RoutableHttpClientFactory.java:72) 	at org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:92) 	at org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:110) 	at org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.router.Router.execute(Router.java:91) 	at org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66) 	at org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70) 	at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) 17:21:19.712 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""36e0eaaeb0d50e837f0b801c3abfb50a"",""eventTime"": 1645271479711205999,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request: GET \u002fsession\u002ff77974f3-032d-4f3d-b6df-bbed7e364f8e\u002fwindow\u002frect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.UnsupportedCommandException: GET \u002fsession\u002ff77974f3-032d-4f3d-b6df-bbed7e364f8e\u002fwindow\u002frect\nBuild info: version: '4.0.0', revision: '3a21814679'\nSystem info: host: 'Sanjays-MacBook-Pro.local', ip: 'fe80:0:0:0:8e5:9ede:9c54:e086%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.4', java.version: '1.8.0_292'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.decode(AbstractHttpCommandCodec.java:293)\n\tat org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.decode(AbstractHttpCommandCodec.java:127)\n\tat org.openqa.selenium.grid.web.ProtocolConverter.execute(ProtocolConverter.java:123)\n\tat org.openqa.selenium.grid.node.ProtocolConvertingSession.execute(ProtocolConvertingSession.java:75)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:123)\n\tat org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:388)\n\tat org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\n\tat org.openqa.selenium.grid.web.CombinedHandler.execute(CombinedHandler.java:59)\n\tat org.openqa.selenium.grid.web.RoutableHttpClientFactory$1.execute(RoutableHttpClientFactory.java:72)\n\tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:92)\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:110)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\n\tat org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"",""exception.type"": ""org.openqa.selenium.UnsupportedCommandException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remote.http.Route$PredicatedRoute"",""http.host"": ""localhost:4444"",""http.method"": ""GET"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fsession\u002ff77974f3-032d-4f3d-b6df-bbed7e364f8e\u002fwindow\u002frect"",""http.user_agent"": ""PostmanRuntime\u002f7.28.2""}} ```   ### Operating System  MacOS Catalina  ### Selenium version  Postman/Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0   ### Are you using Selenium Grid?  Standlone 4.0.0","closed","","sushobhit-lt","2022-02-19T12:06:02Z","2022-03-26T00:09:51Z"
"","10001","[🐛 Bug]: Geckodriver run fine from IDE but got an error WebDriverException from executable jar","### What happened?  Geckodriver works fine when run from IDE (netbeans 12.5) but it doesn't work when I run from executable jar (Firefox browser doesn't open and nothing happens).   ### How can we reproduce the issue?  ```shell Geckodriver works fine in selenium java 3.141.59 but doesn't work in selenium java 4.0.0 when running from executable jar. ```   ### Relevant log output  ```shell org.openqa.selenium.WebDriverException: Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'DESKTOP-LMSUFO4', ip: '10.8.0.3', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1' Driver info: driver.version: FirefoxDriver ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox v93 64bit  ### What are the browser driver(s) and version(s) where you see this issue?  Geckodriver 0.30.0  ### Are you using Selenium Grid?  No","closed","I-defect,","michaeljclark125","2021-10-30T08:29:29Z","2021-12-12T00:07:23Z"
"","10506","[🐛 Bug]:","### What happened?  From the Website Locator strategies page in the documentation of **Chaining relative locators**, there is a Circle brace missing from **the locator Chaining**   Expected :  RelativeLocator.with(By.tagName(""button"")).below(By.id(""email"")).toRightOf(By.id(""cancel"")); Actual :  RelativeLocator.with(By.tagName(""button"")).below(By.id(""email"").toRightOf(By.id(""cancel""));      ### How can we reproduce the issue?  ```shell Test step :  1- go to https://www.selenium.dev/documentation/webdriver/elements/locators/ 2- scroll down to get  https://www.selenium.dev/documentation/webdriver/elements/locators/#chaining-relative-locators 3- check the **Chaining relative locators** ```   ### Relevant log output  ```shell N/A ```   ### Operating System  macOS (Big Sur)  ### Selenium version  N/A  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99   ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","duaa-alkilanie","2022-04-02T23:27:10Z","2022-05-04T00:11:25Z"
"","10395","[🐛 Bug]:Py version 4.1.1 can't find the path. Look at the updated description and delete it. Why?","### What happened?  from selenium.webdriver import TouchActions, ActionChains E   ImportError: cannot import name 'TouchActions' from 'selenium.webdriver'  ### How can we reproduce the issue?  ```shell from selenium.webdriver import TouchActions, ActionChains E   ImportError: cannot import name 'TouchActions' from 'selenium.webdriver' ```   ### Relevant log output  ```shell from selenium.webdriver import TouchActions, ActionChains E   ImportError: cannot import name 'TouchActions' from 'selenium.webdriver' ```   ### Operating System  Windows 10  ### Selenium version  Python 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome-98  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome-98  ### Are you using Selenium Grid?  4.0.0","closed","C-py,","timwang-ai","2022-02-24T13:26:33Z","2022-03-28T00:10:22Z"
"","10162","[🐛 Bug]: SeleniumGrid IEDriverServer (3.141.59.1+) Unable to create session  when run on locked VM","### What happened?  From IEDriverServer 3.141.59.1 onwards attempts to start an IE 11 browser on Selenium Grid timeout only when the Grid node window session is Locked.  The above scenario works with the following setup (my companies current setup)  1. Windows 10 VM Connected using RDP 2. Selenium Grid 3 (Hub +Node) 3. IE Driver Server 3.141.59.0 4. IE 11.  The tested scenario (what we were hoping to upgrade to) 1. Windows 10 VM Connected using RDP 2. Selenium Grid 4.1 (Hub + Node) 3. IE Driver Server 4.0.0 4. IE 11  I see in the log that pre 3.141.59.1 IEDriverServer did not attempt to set focus to the window when creating the session regardless of the 'requireWindowFocus setting'. Here is an excerpt from 3.141.50.0  ``` T 2021-12-17 17:26:36:964 C:\Projects\webdriver\cpp\webdriver-server\server.cc(474) Entering Server::SendResponseToClient T 2021-12-17 17:26:36:999 C:\Projects\webdriver\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize D 2021-12-17 17:26:37:025 C:\Projects\webdriver\cpp\iedriver\BrowserFactory.cpp(399) Ignoring zoom setting: 0 T 2021-12-17 17:26:37:035 C:\Projects\webdriver\cpp\webdriver-server\server.cc(598) Entering Server::SendHttpNotFound T 2021-12-17 17:26:37:067 C:\Projects\webdriver\cpp\iedriver\BrowserFactory.cpp(591) Entering BrowserFactory::GetBrowserZoomLevel T 2021-12-17 17:26:37:213 C:\Projects\webdriver\cpp\iedriver\BrowserFactory.cpp(631) Entering BrowserFactory::GetZoomLevel D 2021-12-17 17:26:37:330 C:\Projects\webdriver\cpp\iedriver\BrowserFactory.cpp(711) Browser zoom level is 100% I 2021-12-17 17:26:37:364 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1366) Persistent hovering set to: 0 T 2021-12-17 17:26:37:395 C:\Projects\webdriver\cpp\iedriver\ProxyManager.cpp(103) ProxyManager::SetProxySettings D 2021-12-17 17:26:37:426 C:\Projects\webdriver\cpp\iedriver\ProxyManager.cpp(119) Using existing system proxy settings. T 2021-12-17 17:26:37:457 C:\Projects\webdriver\cpp\iedriver\DocumentHost.cpp(36) Entering DocumentHost::DocumentHost T 2021-12-17 17:26:37:488 C:\Projects\webdriver\cpp\iedriver\CookieManager.cpp(48) Entering CookieManager::Initialize T 2021-12-17 17:26:37:519 C:\Projects\webdriver\cpp\iedriver\Browser.cpp(38) Entering Browser::Browser T 2021-12-17 17:26:37:549 C:\Projects\webdriver\cpp\iedriver\Browser.cpp(383) Entering Browser::AttachEvents T 2021-12-17 17:26:37:589 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1165) Entering IECommandExecutor::AddManagedBrowser T 2021-12-17 17:26:37:621 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1169) Setting current browser id to ec6c55d9-fcbc-4a92-b7f5-7d1f4c0f32b8 T 2021-12-17 17:26:37:653 C:\Projects\webdriver\cpp\webdriver-server\response.cc(81) Entering Response::SetSuccessResponse T 2021-12-17 17:26:37:684 C:\Projects\webdriver\cpp\webdriver-server\response.cc(87) Entering Response::SetResponse D 2021-12-17 17:26:37:715 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(881) Command execution for newSession complete T 2021-12-17 17:26:37:746 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1121) Entering IECommandExecutor::GetCurrentBrowser T 2021-12-17 17:26:37:776 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(1127) Entering IECommandExecutor::GetManagedBrowser T 2021-12-17 17:26:37:809 C:\Projects\webdriver\cpp\webdriver-server\response.cc(60) Entering Response::Serialize D 2021-12-17 17:26:37:841 C:\Projects\webdriver\cpp\iedriver\IECommandExecutor.cpp(933) Setting serialized response to { 	""value"" :  	{... ```   IEDriverServer 4.0.0 on the other hand will always attempt to set the window focus regardless of the requireWindowFocus setting in my tests. Here is the same section from 4.0.0  ``` T 2021-12-17 13:09:17:995 C:\Projects\selenium\cpp\webdriver-server\server.cc(479) Entering Server::SendResponseToClient T 2021-12-17 13:09:18:083 C:\Projects\selenium\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize T 2021-12-17 13:09:18:170 C:\Projects\selenium\cpp\webdriver-server\server.cc(603) Entering Server::SendHttpNotFound D 2021-12-17 13:09:18:448 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(508) Ignoring zoom setting: 0 T 2021-12-17 13:09:18:475 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(709) Entering BrowserFactory::GetBrowserZoomLevel T 2021-12-17 13:09:18:542 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(749) Entering BrowserFactory::GetZoomLevel D 2021-12-17 13:09:18:641 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(829) Browser zoom level is 100% I 2021-12-17 13:09:18:672 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1584) Persistent hovering set to: 1 T 2021-12-17 13:09:18:701 C:\Projects\selenium\cpp\iedriver\ProxyManager.cpp(103) ProxyManager::SetProxySettings D 2021-12-17 13:09:18:729 C:\Projects\selenium\cpp\iedriver\ProxyManager.cpp(119) Using existing system proxy settings. T 2021-12-17 13:09:18:758 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(37) Entering DocumentHost::DocumentHost T 2021-12-17 13:09:18:785 C:\Projects\selenium\cpp\iedriver\CookieManager.cpp(48) Entering CookieManager::Initialize T 2021-12-17 13:09:18:813 C:\Projects\selenium\cpp\iedriver\Browser.cpp(38) Entering Browser::Browser T 2021-12-17 13:09:18:841 C:\Projects\selenium\cpp\iedriver\Browser.cpp(414) Entering Browser::AttachEvents T 2021-12-17 13:09:18:878 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1339) Entering IECommandExecutor::AddManagedBrowser T 2021-12-17 13:09:18:906 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1343) Setting current browser id to 5d58bb86-51f6-4d2e-80d2-5f92e56cc520 T 2021-12-17 13:09:18:934 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(447) Entering DocumentHost::SetFocusToBrowser T 2021-12-17 13:09:18:964 C:\Projects\selenium\cpp\iedriver\Browser.cpp(559) Entering Browser::GetTopLevelWindowHandle T 2021-12-17 13:09:18:993 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(452) Top-level IE window is 00030494 foreground window is 00000000 T 2021-12-17 13:09:19:036 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(461) Using UI Automation to set window focus T 2021-12-17 13:11:58:033 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:11:58:061 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /shutdown HTTP verb: GET body: {} T 2021-12-17 13:11:58:088 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk T 2021-12-17 13:11:58:117 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(88) Entering IEServer::ShutDown T 2021-12-17 13:11:58:132 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:11:58:145 C:\Projects\selenium\cpp\iedriver\WebDriver.cpp(54) Entering StopServer T 2021-12-17 13:11:58:174 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /shutdown HTTP verb: GET body: {} T 2021-12-17 13:11:58:202 C:\Projects\selenium\cpp\webdriver-server\server.cc(225) Entering Server::Stop T 2021-12-17 13:11:58:230 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk T 2021-12-17 13:11:58:288 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(88) Entering IEServer::ShutDown`  The relevant lines where the timeout occurs `T 2021-12-17 13:09:18:934 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(447) Entering DocumentHost::SetFocusToBrowser T 2021-12-17 13:09:18:964 C:\Projects\selenium\cpp\iedriver\Browser.cpp(559) Entering Browser::GetTopLevelWindowHandle T 2021-12-17 13:09:18:993 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(452) Top-level IE window is 00030494 foreground window is 00000000 T 2021-12-17 13:09:19:036 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(461) Using UI Automation to set window focus ```  This check in the driver should be controlled by the requireBrowserFocus setting in selenium.  This is similar to a bug from last year where the reporters workaround was to use VNC. Due to corporate policies I cant use VNC here. Post   ### How can we reproduce the issue?  ```shell The tested scenario (what we were hoping to upgrade to) 1. Windows 10 VM Connected using RDP 2. Selenium Grid 4.1 (Hub + Node) 3. IE Driver Server 4.0.0 4. IE 11  Sample code for test.  `InternetExplorerOptions ieOptions = new InternetExplorerOptions(); WebDriver driver = new RemoteWebDriver(new URL(""http://:4444""), ieOptions); driver.get(""http://www.google.com""); driver.quit();` ```   ### Relevant log output  ```shell I 2021-12-17 13:08:56:983 C:\Projects\selenium\cpp\webdriver-server\server.cc(88) Starting WebDriver server on port: '51967' on host: '' T 2021-12-17 13:08:57:011 C:\Projects\selenium\cpp\webdriver-server\server.cc(738) Entering Server::PopulateCommandRepository T 2021-12-17 13:08:57:039 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(32) Entering IEServer::IEServer I 2021-12-17 13:08:57:067 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(33) Driver version: 4.0.0.0 (32-bit) T 2021-12-17 13:08:57:094 C:\Projects\selenium\cpp\webdriver-server\server.cc(180) Entering Server::Start T 2021-12-17 13:08:57:602 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:08:57:665 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /status HTTP verb: GET body: {} T 2021-12-17 13:08:57:692 C:\Projects\selenium\cpp\webdriver-server\server.cc(334) Entering Server::DispatchCommand T 2021-12-17 13:08:57:720 C:\Projects\selenium\cpp\webdriver-server\server.cc(687) Entering Server::LookupCommand D 2021-12-17 13:08:57:747 C:\Projects\selenium\cpp\webdriver-server\server.cc(343) Command: GET /status {} T 2021-12-17 13:08:57:775 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(51) Entering IEServer::GetStatus T 2021-12-17 13:08:57:804 C:\Projects\selenium\cpp\webdriver-server\response.cc(81) Entering Response::SetSuccessResponse T 2021-12-17 13:08:57:831 C:\Projects\selenium\cpp\webdriver-server\response.cc(87) Entering Response::SetResponse T 2021-12-17 13:08:57:859 C:\Projects\selenium\cpp\webdriver-server\response.cc(60) Entering Response::Serialize D 2021-12-17 13:08:57:887 C:\Projects\selenium\cpp\webdriver-server\server.cc(426) Response: { 	""value"" :  	{ 		""build"" :  		{ 			""version"" : ""4.0.0.0 (32-bit)"" 		}, 		""message"" : ""Ready to create session"", 		""os"" :  		{ 			""arch"" : ""x64"", 			""name"" : ""windows"", 			""version"" : ""10.0.18362.1916 (WinBuild.160101.0800)"" 		}, 		""ready"" : true 	} } T 2021-12-17 13:08:57:915 C:\Projects\selenium\cpp\webdriver-server\server.cc(479) Entering Server::SendResponseToClient T 2021-12-17 13:08:57:944 C:\Projects\selenium\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize T 2021-12-17 13:08:57:973 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk T 2021-12-17 13:08:58:022 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:08:58:050 C:\Projects\selenium\cpp\webdriver-server\server.cc(298) Entering Server::ReadRequestBody T 2021-12-17 13:08:58:080 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /session HTTP verb: POST body: {   ""desiredCapabilities"": {     ""se:ieOptions"": {       ""ie.ensureCleanSession"": true,       ""enablePersistentHover"": true,       ""requireWindowFocus"": false,       ""ignoreProtectedModeSettings"": true     },     ""browserName"": ""internet explorer"",     ""unhandledPromptBehavior"": ""ignore"",     ""acceptInsecureCerts"": false   },   ""capabilities"": {     ""firstMatch"": [       {         ""acceptInsecureCerts"": false,         ""browserName"": ""internet explorer"",         ""se:ieOptions"": {           ""ie.ensureCleanSession"": true,           ""enablePersistentHover"": true,           ""requireWindowFocus"": false,           ""ignoreProtectedModeSettings"": true         },         ""unhandledPromptBehavior"": ""ignore""       }     ]   } } T 2021-12-17 13:08:58:108 C:\Projects\selenium\cpp\webdriver-server\server.cc(334) Entering Server::DispatchCommand T 2021-12-17 13:08:58:136 C:\Projects\selenium\cpp\webdriver-server\server.cc(687) Entering Server::LookupCommand D 2021-12-17 13:08:58:165 C:\Projects\selenium\cpp\webdriver-server\server.cc(343) Command: POST /session {   ""desiredCapabilities"": {     ""se:ieOptions"": {       ""ie.ensureCleanSession"": true,       ""enablePersistentHover"": true,       ""requireWindowFocus"": false,       ""ignoreProtectedModeSettings"": true     },     ""browserName"": ""internet explorer"",     ""unhandledPromptBehavior"": ""ignore"",     ""acceptInsecureCerts"": false   },   ""capabilities"": {     ""firstMatch"": [       {         ""acceptInsecureCerts"": false,         ""browserName"": ""internet explorer"",         ""se:ieOptions"": {           ""ie.ensureCleanSession"": true,           ""enablePersistentHover"": true,           ""requireWindowFocus"": false,           ""ignoreProtectedModeSettings"": true         },         ""unhandledPromptBehavior"": ""ignore""       }     ]   } } T 2021-12-17 13:08:58:194 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(42) Entering IEServer::InitializeSession T 2021-12-17 13:08:58:221 C:\Projects\selenium\cpp\iedriver\IESession.cpp(45) Entering IESession::Initialize D 2021-12-17 13:08:58:249 C:\Projects\selenium\cpp\iedriver\IESession.cpp(60) Mutex acquired for session initalization T 2021-12-17 13:08:58:278 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(902) Entering IECommandExecutor::ThreadProc T 2021-12-17 13:08:58:314 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(75) Entering IECommandExecutor::OnCreate T 2021-12-17 13:08:58:344 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1687) Entering IECommandExecutor::PopulateElementFinderMethods T 2021-12-17 13:08:58:372 C:\Projects\selenium\cpp\iedriver\InputManager.cpp(56) Entering InputManager::InputManager T 2021-12-17 13:08:58:400 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1230) Entering BrowserFactory::GetExecutableLocation T 2021-12-17 13:08:58:429 C:\Projects\selenium\cpp\iedriver\RegistryUtilities.cpp(49) Attempting to get registry value  from HKEY_LOCAL_MACHINE\SOFTWARE\Classes\InternetExplorer.Application\CLSID T 2021-12-17 13:08:58:458 C:\Projects\selenium\cpp\iedriver\RegistryUtilities.cpp(133) Retrieved value {0002DF01-0000-0000-C000-000000000046} T 2021-12-17 13:08:58:488 C:\Projects\selenium\cpp\iedriver\RegistryUtilities.cpp(49) Attempting to get registry value  from HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID\{0002DF01-0000-0000-C000-000000000046}\LocalServer32 T 2021-12-17 13:08:58:518 C:\Projects\selenium\cpp\iedriver\RegistryUtilities.cpp(133) Retrieved value ""C:\Program Files\Internet Explorer\IEXPLORE.EXE"" T 2021-12-17 13:08:58:547 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1279) Entering BrowserFactory::GetIEVersion T 2021-12-17 13:08:58:578 C:\Projects\selenium\cpp\iedriver\CommandHandlerRepository.cpp(110) Entering CommandHandlerRepository::PopulateCommandHandlers T 2021-12-17 13:08:58:607 C:\Projects\selenium\cpp\iedriver\IESession.cpp(106) Created thread for command executor returns HWND: '000E0352' T 2021-12-17 13:08:58:635 C:\Projects\selenium\cpp\iedriver\IESession.cpp(110) Session id is retrived from command executor window: '8cd7652f-8c3f-401d-89a8-28c3c3e853a8' D 2021-12-17 13:08:58:663 C:\Projects\selenium\cpp\iedriver\IESession.cpp(116) Releasing session initialization mutex T 2021-12-17 13:08:58:691 C:\Projects\selenium\cpp\iedriver\IESession.cpp(198) Entering IESession::ExecuteCommand T 2021-12-17 13:08:58:718 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(156) Entering IECommandExecutor::OnSetCommand T 2021-12-17 13:08:58:746 C:\Projects\selenium\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize D 2021-12-17 13:08:58:774 C:\Projects\selenium\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {   ""desiredCapabilities"": {     ""se:ieOptions"": {       ""ie.ensureCleanSession"": true,       ""enablePersistentHover"": true,       ""requireWindowFocus"": false,       ""ignoreProtectedModeSettings"": true     },     ""browserName"": ""internet explorer"",     ""unhandledPromptBehavior"": ""ignore"",     ""acceptInsecureCerts"": false   },   ""capabilities"": {     ""firstMatch"": [       {         ""acceptInsecureCerts"": false,         ""browserName"": ""internet explorer"",         ""se:ieOptions"": {           ""ie.ensureCleanSession"": true,           ""enablePersistentHover"": true,           ""requireWindowFocus"": false,           ""ignoreProtectedModeSettings"": true         },         ""unhandledPromptBehavior"": ""ignore""       }     ]   } } } T 2021-12-17 13:08:58:803 C:\Projects\selenium\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize D 2021-12-17 13:08:58:831 C:\Projects\selenium\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {   ""desiredCapabilities"": {     ""se:ieOptions"": {       ""ie.ensureCleanSession"": true,       ""enablePersistentHover"": true,       ""requireWindowFocus"": false,       ""ignoreProtectedModeSettings"": true     },     ""browserName"": ""internet explorer"",     ""unhandledPromptBehavior"": ""ignore"",     ""acceptInsecureCerts"": false   },   ""capabilities"": {     ""firstMatch"": [       {         ""acceptInsecureCerts"": false,         ""browserName"": ""internet explorer"",         ""se:ieOptions"": {           ""ie.ensureCleanSession"": true,           ""enablePersistentHover"": true,           ""requireWindowFocus"": false,           ""ignoreProtectedModeSettings"": true         },         ""unhandledPromptBehavior"": ""ignore""       }     ]   } } } T 2021-12-17 13:08:58:859 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(178) Entering IECommandExecutor::OnExecCommand T 2021-12-17 13:08:58:887 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(974) Entering IECommandExecutor::DispatchCommand T 2021-12-17 13:08:58:859 C:\Projects\selenium\cpp\iedriver\IESession.cpp(226) Beginning wait for response length to be not zero D 2021-12-17 13:08:58:915 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1039) Executing command: newSession D 2021-12-17 13:08:58:970 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(48) Found W3C capabilities structure T 2021-12-17 13:08:58:997 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(183) Entering NewSessionCommandHandler::ValidateArguments D 2021-12-17 13:08:59:025 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(199) Validating alwaysMatch capability set T 2021-12-17 13:08:59:053 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(672) Entering NewSessionCommandHandler::ValidateCapabilities D 2021-12-17 13:08:59:080 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(673) Validating capabilities object D 2021-12-17 13:08:59:108 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(220) Validating firstMatch capability set with index 0 T 2021-12-17 13:08:59:135 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(672) Entering NewSessionCommandHandler::ValidateCapabilities D 2021-12-17 13:08:59:163 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(673) Validating capabilities object D 2021-12-17 13:08:59:190 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(694) Found acceptInsecureCerts capability. Validating value type is boolean. D 2021-12-17 13:08:59:218 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(722) Found browserName capability. Validating value type is string. D 2021-12-17 13:08:59:246 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(989) Found se:ieOptions capability. Validating value type is object. D 2021-12-17 13:08:59:274 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(765) Found unhandledPromptBehavior capability. Validating value type is string. D 2021-12-17 13:08:59:303 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(775) Validating unhandledPromptBehavior capability is a valid value. T 2021-12-17 13:08:59:331 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(648) Entering NewSessionCommandHandler::MergeCapabilities T 2021-12-17 13:08:59:359 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(274) Entering NewSessionCommandHandler::ProcessCapabilities T 2021-12-17 13:08:59:387 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(589) Entering NewSessionCommandHandler::MatchCapabilities D 2021-12-17 13:08:59:414 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(279) Processing matched capability set with index 0 T 2021-12-17 13:08:59:442 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability unhandledPromptBehavior T 2021-12-17 13:08:59:469 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability pageLoadStrategy T 2021-12-17 13:08:59:498 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(167) Entering NewSessionCommandHandler::GetPageLoadStrategyValue T 2021-12-17 13:08:59:528 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability strictFileInteractability T 2021-12-17 13:08:59:555 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability timeouts W 2021-12-17 13:08:59:583 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(105) Invalid capability setting: timeouts is type null instead of object. Default value will be used: null  T 2021-12-17 13:08:59:611 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(345) Entering NewSessionCommandHandler::SetTimeoutSettings T 2021-12-17 13:08:59:638 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(364) Entering NewSessionCommandHandler::SetBrowserFactorySettings T 2021-12-17 13:08:59:666 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ignoreProtectedModeSettings T 2021-12-17 13:08:59:693 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ignoreZoomSetting T 2021-12-17 13:08:59:723 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability browserAttachTimeout T 2021-12-17 13:08:59:750 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability initialBrowserUrl T 2021-12-17 13:08:59:779 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.forceCreateProcessApi T 2021-12-17 13:08:59:807 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.forceShellWindowsApi T 2021-12-17 13:08:59:835 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.browserCommandLineSwitches T 2021-12-17 13:08:59:864 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.ensureCleanSession T 2021-12-17 13:08:59:893 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.edgechromium T 2021-12-17 13:08:59:921 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.edgepath T 2021-12-17 13:08:59:948 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(118) Entering BrowserFactory::Initialize D 2021-12-17 13:08:59:976 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(128) path before was   D 2021-12-17 13:09:00:007 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(130) path after was 05FB6B98  T 2021-12-17 13:09:00:036 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(485) Entering NewSessionCommandHandler::SetInputSettings T 2021-12-17 13:09:00:063 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability nativeEvents T 2021-12-17 13:09:00:091 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability elementScrollBehavior T 2021-12-17 13:09:00:119 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability requireWindowFocus T 2021-12-17 13:09:00:146 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability ie.fileUploadDialogTimeout T 2021-12-17 13:09:00:174 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(101) Entering NewSessionCommandHandler::GetCapability for capability enablePersistentHover T 2021-12-17 13:09:00:202 C:\Projects\selenium\cpp\iedriver\InputManager.cpp(82) Entering InputManager::Initialize T 2021-12-17 13:09:00:229 C:\Projects\selenium\cpp\iedriver\CommandHandlers\NewSessionCommandHandler.cpp(532) Entering NewSessionCommandHandler::CreateReturnedCapabilities T 2021-12-17 13:09:00:258 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1561) Entering IECommandExecutor::CreateNewBrowser T 2021-12-17 13:09:00:288 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(150) Entering BrowserFactory::LaunchBrowserProcess D 2021-12-17 13:09:00:316 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(154) Ignoring Protected Mode Settings: 1 D 2021-12-17 13:09:00:344 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(160) Has Valid Protected Mode Settings: 0 T 2021-12-17 13:09:00:372 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(236) Entering BrowserFactory::IsIELaunchURLAvailable T 2021-12-17 13:09:00:426 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(138) Entering BrowserFactory::ClearCache D 2021-12-17 13:09:00:454 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(141) Clearing cache with low mandatory integrity level as required on Windows Vista or later. T 2021-12-17 13:09:00:485 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(957) Entering BrowserFactory::InvokeClearCacheUtility T 2021-12-17 13:09:00:513 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(905) Entering BrowserFactory::CreateLowIntegrityLevelToken D 2021-12-17 13:09:00:542 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(997) Launching inetcpl.cpl via rundll32.exe to clear cache D 2021-12-17 13:09:00:616 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1037) Waiting for rundll32.exe process to exit. D 2021-12-17 13:09:05:949 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1042) Cache clearing complete. D 2021-12-17 13:09:05:977 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(144) Clearing cache with normal process execution. T 2021-12-17 13:09:06:005 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(957) Entering BrowserFactory::InvokeClearCacheUtility D 2021-12-17 13:09:06:033 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(997) Launching inetcpl.cpl via rundll32.exe to clear cache D 2021-12-17 13:09:06:082 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1037) Waiting for rundll32.exe process to exit. D 2021-12-17 13:09:14:160 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1042) Cache clearing complete. T 2021-12-17 13:09:14:198 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(257) Entering BrowserFactory::LaunchBrowserUsingIELaunchURL D 2021-12-17 13:09:14:234 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(258) Starting IE using the IELaunchURL API D 2021-12-17 13:09:15:097 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(212) IE launched successfully with process ID 5508 D 2021-12-17 13:09:15:162 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(218) Process with ID 5508 is executing iexplore.exe T 2021-12-17 13:09:15:233 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(477) Entering BrowserFactory::AttachToBrowser D 2021-12-17 13:09:15:287 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(487) Using Active Accessibility to find IWebBrowser2 interface T 2021-12-17 13:09:15:321 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(538) Entering BrowserFactory::AttachToBrowserUsingActiveAccessibility D 2021-12-17 13:09:15:355 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:15:428 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:15:819 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:15:882 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:16:192 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:16:248 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 T 2021-12-17 13:09:16:493 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:09:16:566 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: / HTTP verb: GET body: {} D 2021-12-17 13:09:16:601 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 T 2021-12-17 13:09:16:616 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk D 2021-12-17 13:09:16:681 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:17:129 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:17:186 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:17:498 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(1145) Looking for 5508 D 2021-12-17 13:09:17:552 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(565) Found window handle 00020522 for window with class 'Internet Explorer_Server' belonging to process with id 5508 T 2021-12-17 13:09:17:586 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:09:17:586 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(441) Entering BrowserFactory::GetDocumentFromWindowHandle T 2021-12-17 13:09:17:614 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /favicon.ico HTTP verb: GET body: {} T 2021-12-17 13:09:17:677 C:\Projects\selenium\cpp\webdriver-server\server.cc(334) Entering Server::DispatchCommand T 2021-12-17 13:09:17:715 C:\Projects\selenium\cpp\webdriver-server\server.cc(687) Entering Server::LookupCommand D 2021-12-17 13:09:17:759 C:\Projects\selenium\cpp\webdriver-server\server.cc(343) Command: GET /favicon.ico {} T 2021-12-17 13:09:17:824 C:\Projects\selenium\cpp\webdriver-server\response.cc(94) Entering Response::SetErrorResponse T 2021-12-17 13:09:17:872 C:\Projects\selenium\cpp\webdriver-server\response.cc(87) Entering Response::SetResponse T 2021-12-17 13:09:17:931 C:\Projects\selenium\cpp\webdriver-server\response.cc(60) Entering Response::Serialize D 2021-12-17 13:09:17:961 C:\Projects\selenium\cpp\webdriver-server\server.cc(426) Response: { 	""value"" :  	{ 		""error"" : ""unknown command"", 		""message"" : ""Command not found: GET /favicon.ico"", 		""stacktrace"" : """" 	} } T 2021-12-17 13:09:17:995 C:\Projects\selenium\cpp\webdriver-server\server.cc(479) Entering Server::SendResponseToClient T 2021-12-17 13:09:18:083 C:\Projects\selenium\cpp\webdriver-server\response.cc(30) Entering Response::Deserialize T 2021-12-17 13:09:18:170 C:\Projects\selenium\cpp\webdriver-server\server.cc(603) Entering Server::SendHttpNotFound D 2021-12-17 13:09:18:448 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(508) Ignoring zoom setting: 0 T 2021-12-17 13:09:18:475 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(709) Entering BrowserFactory::GetBrowserZoomLevel T 2021-12-17 13:09:18:542 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(749) Entering BrowserFactory::GetZoomLevel D 2021-12-17 13:09:18:641 C:\Projects\selenium\cpp\iedriver\BrowserFactory.cpp(829) Browser zoom level is 100% I 2021-12-17 13:09:18:672 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1584) Persistent hovering set to: 1 T 2021-12-17 13:09:18:701 C:\Projects\selenium\cpp\iedriver\ProxyManager.cpp(103) ProxyManager::SetProxySettings D 2021-12-17 13:09:18:729 C:\Projects\selenium\cpp\iedriver\ProxyManager.cpp(119) Using existing system proxy settings. T 2021-12-17 13:09:18:758 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(37) Entering DocumentHost::DocumentHost T 2021-12-17 13:09:18:785 C:\Projects\selenium\cpp\iedriver\CookieManager.cpp(48) Entering CookieManager::Initialize T 2021-12-17 13:09:18:813 C:\Projects\selenium\cpp\iedriver\Browser.cpp(38) Entering Browser::Browser T 2021-12-17 13:09:18:841 C:\Projects\selenium\cpp\iedriver\Browser.cpp(414) Entering Browser::AttachEvents T 2021-12-17 13:09:18:878 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1339) Entering IECommandExecutor::AddManagedBrowser T 2021-12-17 13:09:18:906 C:\Projects\selenium\cpp\iedriver\IECommandExecutor.cpp(1343) Setting current browser id to 5d58bb86-51f6-4d2e-80d2-5f92e56cc520 T 2021-12-17 13:09:18:934 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(447) Entering DocumentHost::SetFocusToBrowser T 2021-12-17 13:09:18:964 C:\Projects\selenium\cpp\iedriver\Browser.cpp(559) Entering Browser::GetTopLevelWindowHandle T 2021-12-17 13:09:18:993 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(452) Top-level IE window is 00030494 foreground window is 00000000 T 2021-12-17 13:09:19:036 C:\Projects\selenium\cpp\iedriver\DocumentHost.cpp(461) Using UI Automation to set window focus T 2021-12-17 13:11:58:033 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:11:58:061 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /shutdown HTTP verb: GET body: {} T 2021-12-17 13:11:58:088 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk T 2021-12-17 13:11:58:117 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(88) Entering IEServer::ShutDown T 2021-12-17 13:11:58:132 C:\Projects\selenium\cpp\webdriver-server\server.cc(234) Entering Server::ProcessRequest T 2021-12-17 13:11:58:145 C:\Projects\selenium\cpp\iedriver\WebDriver.cpp(54) Entering StopServer T 2021-12-17 13:11:58:174 C:\Projects\selenium\cpp\webdriver-server\server.cc(243) Process request with: URI: /shutdown HTTP verb: GET body: {} T 2021-12-17 13:11:58:202 C:\Projects\selenium\cpp\webdriver-server\server.cc(225) Entering Server::Stop T 2021-12-17 13:11:58:230 C:\Projects\selenium\cpp\webdriver-server\server.cc(540) Entering Server::SendHttpOk T 2021-12-17 13:11:58:288 C:\Projects\selenium\cpp\iedriver\IEServer.cpp(88) Entering IEServer::ShutDown ```   ### Operating System  Window 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Internet Explorer 11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  4.1.0","closed","I-defect,","naijabounce","2021-12-17T23:00:36Z","2022-06-05T00:14:09Z"
"","10429","[🐛 Bug]: Python NoReturn type in Chromium Options","### What happened?  For the Python ChromeOptions, NoReturn is used  incorrectly and throws Pylance off.   Python Selenium Version: 4.1.0 was working fine (no return types) Python Selenium Version: 4.1.3 pylance error shows up.  For the functions where NoReturn is used incorrectly, the return type should be changed to None.  ### How can we reproduce the issue?  ```shell from selenium.webdriver import ChromeOptions  class CustomOptions(ChromeOptions):     def __init__(self, page_load_strategy = 'normal', headless=True) -> None:         super().__init__()          if headless:             self.add_argument('headless')               self.add_argument('window-size=1920,1080')         else:             self.add_argument('start-maximized')          self.add_experimental_option('useAutomationExtension', False)         self.add_argument('--ignore-certificate-errors')         self.add_argument('--incognito')         self.add_argument('--disable-blink-features=AutomationControlled')         self.add_argument('--log-level=3')         self.page_load_strategy = page_load_strategy ```   ### Relevant log output  ```shell Pylance:  (method) add_argument: (argument: Any) -> None Adds an argument to the list  :Args:  Sets the arguments Code is unreachable Pylance ```   ### Operating System  Windows 11  ### Selenium version  Python selenium v 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver version 99  ### Are you using Selenium Grid?  None","closed","I-defect,","AlexBelanger","2022-03-09T19:04:47Z","2022-05-09T00:11:08Z"
"","10686","[🐛 Bug]: Contained Firefox can't be used on MacOS","### What happened?  For the project https://github.com/robocorp/rpaframework/ we're installing an isolated Firefox and adding that to the path. But because as seen here https://github.com/SeleniumHQ/selenium/blob/dab928e6ac2c270b03d0199f381950c998c3f8b0/py/selenium/webdriver/firefox/firefox_binary.py#L152 the path for MacOS is hardcoded and not searched for in $PATH, Selenium will never find and use that version.  ### How can we reproduce the issue?  ```shell Install Firefox on MacOS in a different path. Add it to the $PATH global variable and try to use Selenium against it. Selenium will fail, not being able to find Firefox. ```   ### Relevant log output  ```shell SessionNotCreatedException: Message: Expected browser binary location, but unable to find binary ```   ### Operating System  MacOS Monterey 12.3  ### Selenium version  3.141.0 (but based on the code seems like it should be on all versions)  ### What are the browser(s) and version(s) where you see this issue?  Firefox 98, 99 and 100  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","closed","C-py,","bogdancondurache","2022-05-24T09:07:47Z","2022-07-30T00:11:57Z"
"","10243","[🐛 Bug]: Impossible to use CDP via WS or HTTP with Selenium 4.x","### What happened?  For the last few days me and other people have been trying to use CDP commands via Selenium, however nothing seems to function as expected. Selenium always returns ""se:cdp"": ""ws://"" instead of HTTP - that's problem 1, and problem 2 is that even trying to communicate via ws:// Selenium never returns anything, it just gets stuck.  If you do send ""bad"" or ""missing"" parameters Selenium will return an error message, but if you do send a ""correct"" command, nothing will happen.  I would like to focus only on problem 2 which is the ws:// cdp usage, since I spent several days to try and use HTTP without success.  Please note that I have ensured and triple checked and tested several variations of Chrome + ChromeDriver.  ### How can we reproduce the issue?  ```shell Try to communicate via ws://, send the following test: {""id"":123213123,""sessionId"":""975cefdf3e55bc59341ec6a3f9564216"",""method"":""Network.setUserAgentOverride"",""params"":{""userAgent"":""banana"",""acceptLanguage"":""minion world"",""platform"":""apple""}} - nothing will happen. ```   ### Relevant log output  ```shell Nothing, unfortunately. No error, no output, absolutely nothing. ```   ### Operating System  Windows 10  ### Selenium version  Java version ""1.8.0_311""  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.110  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.110  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","Mecanik","2022-01-11T08:11:29Z","2022-02-26T00:08:50Z"
"","10618","[🐛 Bug]: drag_and_drop can't act well with canvas","### What happened?  for example with http://literallycanvas.com/: i want to draw a line in it ,i tried `ActionChains(driver).drag_and_drop_by_offset(canvas,50,50).perform()`,but only draw a point then i tried `ActionChains(driver).click_and_hold(canvas).move_by_offset(50, 0).release().perform()`,also draw a point finally i draw a line with `ActionChains(driver).click_and_hold(canvas).move_by_offset(50, 0).move_by_offset(0, 0).release().perform()` but it's not reasonable  ### How can we reproduce the issue?  ```shell it seems like a holdingmouse_move action require something like 'Intermediate state',which drag_and_drop didn't provide ```   ### Relevant log output  ```shell None ```   ### Operating System  Window10  ### Selenium version  python4.1.3  ### What are the browser(s) and version(s) where you see this issue?  chrome 101  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 101  ### Are you using Selenium Grid?  no","closed","I-defect,","zndqs","2022-05-07T03:48:48Z","2022-06-07T00:10:16Z"
"","10782","[🐛 Bug]: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms","### What happened?  Following issue happens for FireFox and Google Chrome browsers/drivers for latest versions. I found same issues from past years, where it was recommended to update to latest versions of selenium/driver, however I already have latest versions.  **Test:** ``` import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver;  public class testSel {     public static void main(String[] args){         System.out.println(""1"");         System.setProperty(""webdriver.gecko.driver"", ""/Users/atkeshelashvili/Downloads/geckodriver"");         WebDriver driver=new FirefoxDriver();         System.out.println(""2"");         driver.get(""http://demo.guru99.com/"");         System.out.println(""3"");         WebElement element=driver.findElement(By.xpath(""//input[@name='emailid']""));         element.sendKeys(""abc@gmail.com"");          WebElement button=driver.findElement(By.xpath(""//input[@name='btnLogin']""));         button.click();     } } ```  ### How can we reproduce the issue?  **Upload following versions:** ```shell FireFox 101.0.1 (64 bit)  Selenium Web Driver 4.2.2 selenium-java-4.2.2.zip Geckodriver 0.31.0 System macOS Monterey (M1)  Same happens for Google Chrome 102.0.5005.61. ```   ### Relevant log output  **Logs:** ```shell org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ce://gre/modules/AsyncShutdown.jsm:526:26 addBlocker@resource://gre/modules/AsyncShutdown.jsm:465:15 setupShutdown@resource://gre/modules/osfile/osfile_async_front.jsm:1564:28 @resource://gre/modules/osfile/osfile_async_front.jsm:1584:16 @resource://gre/modules/osfile.jsm:11:30 @resource://gre/modules/TelemetryStorage.jsm:18:28 getShutdownState@resource://gre/modules/TelemetrySend.jsm:1665:7 getShutdownState@resource://gre/modules/TelemetrySend.jsm:358:30 _getState@resource://gre/modules/TelemetryControllerParent.jsm:1073:33 setupTelemetry/","closed","I-defect,","anikomt","2022-06-17T08:28:49Z","2022-07-21T00:12:32Z"
"","10458","[🐛 Bug]: publish-events and subscribe-events TOML Configuration being ignored in Node component for Selenium 4 Grid (classic)","### What happened?  Following is the TOML configuration file I used to setup node component for Selenium classic grid. The publish-events and subscribe-events was ignore and it connected to event bus on localhost (0.0.0.0). As a result it kept attempting ""Sending registration event"" and did not add the node.   It only worked when used flags CLI options **--publish-events** and **--subscribe-events** in the command line. As per your documentation - ""All the options shown in [CLI options] can be configured through a [TOML] file."" Please update your documentation or fix the issue so it can work with TOML configuration.  **Config TOML:** ` [server] port=5556 host= ""node.hostname.org"" bind-host = true  [node] detect-drivers = true grid-url = ""http://hub.hostname"" session-timeout = 900  [events] bind-bus = false publish-events = ""tcp://hub-ip:4442"" subscribe-events = ""tcp://hub-ip:4443"" `  ### How can we reproduce the issue?  ```shell You can reproduce this issue by setting up classic grid on windows servers. Setup hub and node on different machines. You will have to specify publish-events and subscribe-events in the node configuration as the event bus is started along with hub on a different machine.  Selenium 4 -> selenium-server-4.1.2.jar Classic Grid setup Windows Server 2016 platform ```   ### Relevant log output  ```shell 18:06:01.434 INFO [LogManager$RootLogger.log] - Using the system default encoding 18:06:01.434 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 18:06:01.653 INFO [UnboundZmqEventBus.] - Connecting to tcp://0.0.0.0:4442 and tcp://0.0.0.0:4443 18:06:01.716 INFO [UnboundZmqEventBus.] - Sockets created 18:06:02.729 INFO [UnboundZmqEventBus.] - Event bus ready 18:06:02.792 INFO [NodeServer.createHandlers] - Reporting self as: http://node-hostname:5556 18:06:02.808 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 18:06:02.839 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 18:06:02.891 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 8 times 18:06:02.891 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 8 times 18:06:02.907 INFO [Node.] - Binding additional locator mechanisms: id, name, relative 18:06:03.333 INFO [NodeServer$1.start] - Starting registration process for node id 2d9b7e86-c663-4547-a54c-43bd34becefe 18:06:03.333 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://node-hostname:5556 18:06:03.378 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:06:13.381 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:06:23.387 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:06:33.393 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:06:43.394 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:06:53.408 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:07:03.411 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:07:13.425 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:07:23.432 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:07:33.445 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:07:43.456 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:07:53.457 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 18:08:03.363 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ### Operating System  Windows Server 2016  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  chrome 99, edge 99  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 99, edge 99  ### Are you using Selenium Grid?  Yes. 4.1.2","closed","needs-triaging,","jitendrakalyan","2022-03-18T22:12:46Z","2022-04-18T00:12:02Z"
"","9987","[🐛 Bug]: Local Firefox driver generating rename error following upgrade to the 4.0.1 version of selenium-webdriver","### What happened?  Follow the upgrade to 4.0.1 from 4.0.0 a local firefox driver no longer works where a profile is specified  The appears to be related to the changes to zipper.rb to ""Remove tempfile compatibility for Ruby 1.8""  Snippet and stack trace below.  ### How can we reproduce the issue?  ```shell require 'selenium-webdriver'  profile = Selenium::WebDriver::Firefox::Profile.new profile['browser.download.dir'] = '/tmp/webdriver-downloads' # Including a profile generates the failure opts = Selenium::WebDriver::Firefox::Options.new(profile: profile) # The below line will work # opts = Selenium::WebDriver::Firefox::Options.new  driver = Selenium::WebDriver.for :firefox, capabilities: opts  driver.navigate.to 'https://selenium.dev/'  puts ""title is #{driver.title}""  driver.quit ```   ### Relevant log output  ```shell C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/rubyzip-2.3.2/lib/zip/file.rb:455:in `rename': Permission denied @ rb_file_s_rename - (C:/Users/mstanley/AppData/Local/Temp/20211026-10936-2unukv20211026-10936-novllv, C:/Users/mstanley/AppData/Local/Temp/20211026-10936-2unukv) (Errno::EACCES)         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/rubyzip-2.3.2/lib/zip/file.rb:455:in `block in on_success_replace'         from C:/Ruby30-x64/lib/ruby/3.0.0/tmpdir.rb:144:in `create'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/rubyzip-2.3.2/lib/zip/file.rb:453:in `on_success_replace'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/rubyzip-2.3.2/lib/zip/file.rb:349:in `commit'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/zipper.rb:58:in `block in zip'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/rubyzip-2.3.2/lib/zip/file.rb:125:in `open'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/zipper.rb:76:in `block in with_tmp_zip'         from C:/Ruby30-x64/lib/ruby/3.0.0/tempfile.rb:358:in `create'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/zipper.rb:75:in `with_tmp_zip'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/zipper.rb:53:in `zip'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/profile_helper.rb:39:in `encoded'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:151:in `generate_as_json'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:167:in `block in process_json_hash'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:162:in `each'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:162:in `each_with_object'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:162:in `process_json_hash'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:149:in `generate_as_json'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:167:in `block in process_json_hash'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:162:in `each'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:162:in `each_with_object'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:162:in `process_json_hash'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:149:in `generate_as_json'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/options.rb:123:in `as_json'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:358:in `block in generate_capabilities'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:345:in `map'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:345:in `generate_capabilities'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:333:in `create_bridge'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:74:in `initialize'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:53:in `new'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver/common/driver.rb:53:in `for'         from C:/Ruby30-x64/lib/ruby/gems/3.0.0/gems/selenium-webdriver-4.0.3/lib/selenium/webdriver.rb:88:in `for'         from selenium-test.rb:10:in `' ```   ### Operating System  Windows 10  ### Selenium version  ruby 3.0.2p107 (2021-07-07 revision 0db68f0233) [x64-mingw32]  ### What are the browser(s) and version(s) where you see this issue?  Firefox 93.0 (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  geckodriver 0.30.0 (d372710b98a6 2021-09-16 10:29 +0300)  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","markstanley-nps","2021-10-26T16:28:12Z","2021-11-27T00:06:26Z"
"","10418","[🐛 Bug]: Firefox ProfilesIni.readProfiles() does not handle files written in UTF-16 (?)","### What happened?  Firefox ProfilesIni.readProfiles() does not handle files written in UTF-16, I think.  The following line ignores the encoding bytes at the front of the file.  https://github.com/SeleniumHQ/selenium/blob/d40b1a8504003abc71f7d5f2baedc99f51f8f65a/java/src/org/openqa/selenium/firefox/ProfilesIni.java#L60  ### How can we reproduce the issue?  ```shell The following code returns `null` even though the profile is correct.      new ProfilesIni().       getProfile(""nathan""); ``` ```   ### Relevant log output  ```shell Not applicable ```   ### Operating System  Windows 11  ### Selenium version  Java 3.141.59  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  GeckDriver 0.30.0 win64  ### Are you using Selenium Grid?  No","open","I-defect,","numeralnathan","2022-03-07T17:27:16Z","2022-07-08T12:19:56Z"
"","10348","[🐛 Bug]: DevTools Functionality is Broken for Firefox 97 in Java","### What happened?  Firefox now requires an empty origin header for websockets, and Netty sends one by default: https://github.com/netty/netty/issues/9673  ### How can we reproduce the issue?  ```shell FirefoxDriver driver = new FirefoxDriver(); DevTools devTools = driver.getDevTools(); ```  ### Relevant log output  ```shell JavaScript error: chrome://remote/content/server/WebSocketHandshake.jsm, line 117: Error: The handshake request has incorrect Origin header http://localhost:50021 Feb 09, 2022 1:45:20 PM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Invalid Status code=400 text=Bad Request java.io.IOException: Invalid Status code=400 text=Bad Request 	at org.asynchttpclient.netty.handler.WebSocketHandler.abort(WebSocketHandler.java:92) 	at org.asynchttpclient.netty.handler.WebSocketHandler.handleRead(WebSocketHandler.java:118) 	at org.asynchttpclient.netty.handler.AsyncHttpClientHandler.channelRead(AsyncHttpClientHandler.java:78) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:311) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:432) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:834)   org.openqa.selenium.remote.http.ConnectionFailedException: Unable to establish websocket connection to http://localhost:50021/devtools/browser/2857af35-3ab7-42f3-bdfa-efedc76ffba4 ```   ### Operating System  MacOS Big Sur  ### Selenium version  Java 4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97  ### What are the browser driver(s) and version(s) where you see this issue?  Geckodriver 0.30.0  ### Are you using Selenium Grid?  n/a","closed","D-firefox,","titusfortner","2022-02-09T20:17:28Z","2022-03-17T00:09:21Z"
"","10678","[🐛 Bug]:","### What happened?  Fetch.requestPaused not callback  ### How can we reproduce the issue?  ```shell driver.execute_cdp_cmd('Fetch.enable', {'patterns':[{'urlPattern':'*.png'}]}) driver.add_cdp_listener('Fetch.authRequired', testtest) driver.add_cdp_listener('Fetch.requestPaused', testtest) ```   ### Relevant log output  ```shell null ```   ### Operating System  mac os  ### Selenium version  python  3.7  ### What are the browser(s) and version(s) where you see this issue?  chrome 101  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 101  ### Are you using Selenium Grid?  4.1","closed","needs-triaging,","gdszps","2022-05-21T09:23:44Z","2022-06-21T00:15:34Z"
"","10493","[🐛 Bug]: The driver is not executable","### What happened?  Failed to execute goal org.codehaus.mojo:exec-maven-plugin:3.0.0:java (default-cli) on project sendMail04: An exception occured while executing the Java class. The driver is not executable: /home/runner/work/SendHealth/SendHealth/chromedriver -> [Help 1] ![123](https://user-images.githubusercontent.com/54025960/160774807-51482bed-76bf-4d89-ac27-8bfce562aa76.png)   I don't know why this is happening, please help me   ### How can we reproduce the issue?  ```shell I don't have a clue ```   ### Relevant log output  ```shell Error:  Failed to execute goal org.codehaus.mojo:exec-maven-plugin:3.0.0:java (default-cli) on project sendMail04: An exception occured while executing the Java class. The driver is not executable: /home/runner/work/SendHealth/SendHealth/chromedriver -> [Help 1] Error:   Error:  To see the full stack trace of the errors, re-run Maven with the -e switch. Error:  Re-run Maven using the -X switch to enable full debug logging. Error:   Error:  For more information about the errors and possible solutions, please read the following articles: Error:  [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException Error: Process completed with exit code 1. ```   ### Operating System  Ubuntu  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  chrome 99.0.4844.35  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 99.0.4844.35  ### Are you using Selenium Grid?  I don't have a clue","closed","I-issue-template,","Orange-es","2022-03-30T07:26:38Z","2022-04-30T00:12:18Z"
"","10824","[🐛 Bug]: Edge IE Mode - org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException","### What happened?  Facing Timeout issue with Edge - IE Mode automation with needed configuration.   - Using 32 bit driver and made below updates to registry  For 32-bit Windows, the key is at HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BFCACHE .  Able to open the browser but getting timeout issue with driver.navigate (url);  ### How can we reproduce the issue?  ```shell System.setProperty(""webdriver.ie.driver"",System.getProperty(""user.dir"") + ""/drivers/IEDriverServer.exe""); InternetExplorerOptions edgeIe11Options = new InternetExplorerOptions(); 					Map ops = (Map) edgeIe11Options.getCapability(""se:ieOptions""); 					ops.put(""ie.edgechromium"", true); 					ops.put(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");     // Edge Browser directory path  					edgeIe11Options.introduceFlakinessByIgnoringSecurityDomains(); 					edgeIe11Options.ignoreZoomSettings(); 					edgeIe11Options.enablePersistentHovering(); 					edgeIe11Options.takeFullPageScreenshot(); 					edgeIe11Options.disableNativeEvents(); 					edgeIe11Options.requireWindowFocus(); 					edgeIe11Options.destructivelyEnsureCleanSession(); 			edgeIe11Options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.ACCEPT); 					driver = new InternetExplorerDriver(edgeIe11Options); ```   ### Relevant log output  ```shell org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException Build info: version: '4.3.0', revision: 'a4995e2c09*'  Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: false, ie.browserCommandLineSwitches: , ie.edgechromium: true, ie.edgepath: C:\Program Files (x86)\Micr..., ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, initialBrowserUrl: http://localhost:60629/, nativeEvents: false, requireWindowFocus: true}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: accept} ```   ### Operating System  Windows 10  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Edge - 103.0.1264.37   ### What are the browser driver(s) and version(s) where you see this issue?  IE Driver - 4.2.0.0  ### Are you using Selenium Grid?  N","closed","I-defect,","kurpt","2022-06-28T15:18:55Z","2022-07-05T19:24:32Z"
"","10402","[🐛 Bug]: Exception when initializing the webdriver with Service","### What happened?  Exception when initializing the webdriver with Service: NotImplementedError  ### How can we reproduce the issue?  ```python from webdriver_manager.firefox import GeckoDriverManager from selenium import webdriver from selenium.webdriver.common.service import Service  service = Service(executable=GeckoDriverManager().install()) # same error #service = Service(executable=firefox_wd_path) browser = webdriver.Firefox(service=service) browser.close() ```  ### Relevant log output  ``` $ python3 selenium_bug.py   ====== WebDriver manager ====== Current firefox version is 97.0 Get LATEST geckodriver version for 97.0 firefox Driver [/home/raffaele/.wdm/drivers/geckodriver/linux64/v0.30.0/geckodriver] found in cache Traceback (most recent call last):   File ""/home/raffaele/.local/lib/python3.10/site-packages/selenium/webdriver/common/service.py"", line 70, in start     cmd.extend(self.command_line_args())   File ""/home/raffaele/.local/lib/python3.10/site-packages/selenium/webdriver/common/service.py"", line 58, in command_line_args     raise NotImplementedError(""This method needs to be implemented in a sub class"") NotImplementedError: This method needs to be implemented in a sub class  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""/run/media/raffaele/55ab61c4-83cf-4d9f-a5cd-7fcfdc14b4fb/Dropbox (DIG)/Deepening RISIS/LexisNexis_webscraper/src/selenium_bug.py"", line 9, in      browser = webdriver.Firefox(service=service)   File ""/home/raffaele/.local/lib/python3.10/site-packages/selenium/webdriver/firefox/webdriver.py"", line 173, in __init__     self.service.start()   File ""/home/raffaele/.local/lib/python3.10/site-packages/selenium/webdriver/common/service.py"", line 93, in start     raise WebDriverException( selenium.common.exceptions.WebDriverException: Message: The executable geckodriver needs to be available in the path.  This method needs to be implemented in a sub class ```  ### Operating System  Fedora Workstation 35  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Firefox 97.0.1  ### What are the browser driver(s) and version(s) where you see this issue?  0.30  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","raffaem","2022-02-28T12:41:25Z","2022-03-31T00:58:54Z"
"","10303","[🐛 Bug]: WheelScrollInteraction does not work for dotnet Selenium","### What happened?  Exception after execute reproduce code. OpenQA.Selenium.WebDriverArgumentException: 'invalid argument from invalid argument: type of action must be the string 'scroll' or 'pause'   (Session info: chrome=97.0.4692.99)'  Root cause: line 155 in https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/src/webdriver/Interactions/WheelInputDevice.cs Currently: toReturn[""type""] = ""pointerMove""; Should be: toReturn[""type""] = ""scroll""  ### How can we reproduce the issue?  ```shell public void TestScroll()         {             ChromeDriver driver = new ChromeDriver();             Thread.Sleep(1000);              driver.Url = ""http://baidu.com"";             Thread.Sleep(1000);             driver.Manage().Window.Maximize();             Thread.Sleep(500);              var kwEle = driver.FindElement(By.Id(""kw""));             kwEle.SendKeys(""abcxyz"");             Thread.Sleep(500);             var suEle = driver.FindElement(By.Id(""su""));             suEle.Click();             Thread.Sleep(1000);              WheelInputDevice wheel1 = new WheelInputDevice();             Interaction scrollDown = wheel1.CreateWheelScroll(0, 100, TimeSpan.FromSeconds(1));             IList asList = new List();              ActionSequence @as = new ActionSequence(wheel1);             @as.AddAction(scrollDown);             asList.Add(@as);              ((WebDriver)driver).PerformActions(asList);         } ```   ### Relevant log output  ```shell N/A ```   ### Operating System  Windows 10  ### Selenium version  dotnet 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 97.0.4692.99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.7100  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","eversoutheast","2022-01-29T13:03:10Z","2022-03-09T00:11:48Z"
"","10795","[🐛 Bug]: chromedriver service is not killed","### What happened?  Even after calling `driver.quit`. Not able to start chrome driver on the same port. Server is not getting killed and the port is not released.  ### How can we reproduce the issue?  ```shell const webdriver = require('selenium-webdriver'); const chrome = require('selenium-webdriver/chrome'); const BROWSER_NAME = webdriver.Browser.CHROME;  async function getDriver() {   let service = new chrome.ServiceBuilder(require('chromedriver').path).setPort(9515);    service.setStdio(['pipe', process.stdout, process.stderr]);    return new webdriver.Builder()     .setChromeService(service)     .forBrowser(BROWSER_NAME)     .build(); }  async function runTestWithCaps() {   for (i = 0; i","closed","I-defect,","gravityvi","2022-06-22T14:27:11Z","2022-07-04T23:01:14Z"
"","10014","[🐛 Bug]: Gekodriver no longer works since 4.0.0 RC1","### What happened?  Environment: Centos 7 Python 3.8 Firefox 91.2 geckodriver 0.30  What happens? Firefox will refuse to work after RC2 and above, says ""No matching capabilities found'"".  Error: `CEx:SessionNotCreatedException('session not created: No matching capabilities found', None, ['#0 0x5602f0959f93 ', '#1 0x5602f0434908 ', '#2 0x5602f048cadc ', '#3 0x5602f048bee2 ', '#4 0x5602f048d56d ', '#5 0x5602f0487973 ', '#6 0x5602f045ddf4 ', '#7 0x5602f045ede5 ', '#8 0x5602f09892be ', '#9 0x5602f099eba0 ', '#10 0x5602f098a215 ', '#11 0x5602f099ffe8 ', '#12 0x5602f097e9db ', '#13 0x5602f09bb218 ', '#14 0x5602f09bb398 ', '#15 0x5602f09d66cd ', '#16 0x7f201f087ea5 ', '']) ` Code used: ```     options = FirefoxOptions()     try:         driver = webdriver.Firefox(options=options,log_path=TMP_DIR_LOG+'ff_webdriver-%s.log' % randomString(4))         time.sleep(1)     except TimeoutException:         print(""Firefox took more than 60 seconds start!"")         print(""FFEx:""+repr(e))     except Exception as e:         print(""FFEx:""+repr(e)) ```  ### How can we reproduce the issue?  ```shell Try the simple code above with Selenium 4.0.0 RC2 and Python 3.8  The above code works fine with Selenium 4.0.0. RC1 ```   ### Relevant log output  ```shell CEx:SessionNotCreatedException('session not created: No matching capabilities found', None, ['#0 0x5602f0959f93 ', '#1 0x5602f0434908 ', '#2 0x5602f048cadc ', '#3 0x5602f048bee2 ', '#4 0x5602f048d56d ', '#5 0x5602f0487973 ', '#6 0x5602f045ddf4 ', '#7 0x5602f045ede5 ', '#8 0x5602f09892be ', '#9 0x5602f099eba0 ', '#10 0x5602f098a215 ', '#11 0x5602f099ffe8 ', '#12 0x5602f097e9db ', '#13 0x5602f09bb218 ', '#14 0x5602f09bb398 ', '#15 0x5602f09d66cd ', '#16 0x7f201f087ea5 ', '']) Unable to start driver UnboundLocalError(""local variable 'driver' referenced before assignment""). ```   ### Operating System  Centos 7  ### Selenium version  Python 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 91  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Bllacky","2021-11-05T08:54:58Z","2021-12-25T00:06:59Z"
"","10687","[🐛 Bug]: Unable to get cookies on IE Compatibility mode with IEDriverServer 4.0.0","### What happened?  Edge Version 101 IE Driver version 4.0.0 32 bit  Hi, My website IE Compatibility mode enabled. When I am launching my website using IE mode with IEdriver 4.0.0 i am unable to read cookies from the website. Able to fetch cookies when working on Edge and IE browsers separately  Configuration :  {""se:ieOptions"":{""ie.edgechromium"":true,""ie.edgepath"":""C:/Program Files )x86)/Microsoft/Edge/Application/msedge.exe""}} Method used to get cookies: Set bCookie = .manage().getCookies(); also tried (String) .executeScript(""return document.cookie"");  for both above methods getting below error  getCookies:{}Could not retrieve cookies. The most common cause of this error is mismatch in the bitness between the driver and browser. In particular, be sure you are not attempting to use a 64-bit IEDriverServer-exe against IE 10 or 11, even on 64-bit Windows  ### How can we reproduce the issue?  ```shell Edge Version 101 IE Driver version 4.0.0 32 bit  Hi, My website IE Compatibility mode enabled. When I am launching my website using IE mode with IEdriver 4.0.0 i am unable to read cookies from the website. Able to fetch cookies when working on Edge and IE browsers separately  Configuration :  {""se:ieOptions"":{""ie.edgechromium"":true,""ie.edgepath"":""C:/Program Files )x86)/Microsoft/Edge/Application/msedge.exe""}} Method used to get cookies: Set bCookie = .manage().getCookies(); also tried (String) .executeScript(""return document.cookie"");  for both above methods getting below error  getCookies:{}Could not retrieve cookies. The most common cause of this error is mismatch in the bitness between the driver and browser. In particular, be sure you are not attempting to use a 64-bit IEDriverServer-exe against IE 10 or 11, even on 64-bit Windows ```   ### Relevant log output  ```shell Edge Version 101 IE Driver version 4.0.0 32 bit  Hi, My website IE Compatibility mode enabled. When I am launching my website using IE mode with IEdriver 4.0.0 i am unable to read cookies from the website. Able to fetch cookies when working on Edge and IE browsers separately  Configuration :  {""se:ieOptions"":{""ie.edgechromium"":true,""ie.edgepath"":""C:/Program Files )x86)/Microsoft/Edge/Application/msedge.exe""}} Method used to get cookies: Set bCookie = .manage().getCookies(); also tried (String) .executeScript(""return document.cookie"");  for both above methods getting below error  getCookies:{}Could not retrieve cookies. The most common cause of this error is mismatch in the bitness between the driver and browser. In particular, be sure you are not attempting to use a 64-bit IEDriverServer-exe against IE 10 or 11, even on 64-bit Windows ```   ### Operating System  Windows 10  ### Selenium version  Java 1.8  ### What are the browser(s) and version(s) where you see this issue?  Edge 101  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver 4.0.0  ### Are you using Selenium Grid?  no","closed","I-issue-template,","souban-git","2022-05-24T10:23:46Z","2022-07-03T00:14:09Z"
"","10902","[🐛 Bug]: Edge Version 103.0.1264.71 - IE Mode - Selenium IE Driver 4.3.0.0 - Not working","### What happened?  Edge IE - Mode failing with version - 103.0.1264.71 for both 32-bit and 64-bit  Started InternetExplorerDriver server (64-bit) 4.3.0.0 Listening on port 56120 Only local connections are allowed org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.3.0', revision: 'a4995e2c09*'  Started InternetExplorerDriver server (32-bit) 4.3.0.0 Listening on port 56120 Only local connections are allowed org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.3.0', revision: 'a4995e2c09*'  ### How can we reproduce the issue?  ```shell System.setProperty(""webdriver.ie.driver"", System.getProperty(""user.dir"") + ""/drivers/IEDriverServer.exe""); 					InternetExplorerOptions ieOptions = new InternetExplorerOptions(); 					ieOptions.ignoreZoomSettings(); 					ieOptions.setCapability(""ignoreProtectedModeSettings"", true); 				 					ieOptions.enablePersistentHovering(); 					ieOptions.requireWindowFocus(); 					ieOptions.attachToEdgeChrome(); 					ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe""); ```   ### Relevant log output  ```shell Started InternetExplorerDriver server (32-bit) 4.3.0.0 Listening on port 56120 Only local connections are allowed org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.3.0', revision: 'a4995e2c09*'  Started InternetExplorerDriver server (64-bit) 4.3.0.0 Listening on port 56120 Only local connections are allowed org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.3.0', revision: 'a4995e2c09*' ```   ### Operating System  Windows 10  ### Selenium version  4.0.3  ### What are the browser(s) and version(s) where you see this issue?  Edge 103.0.1264.71  ### What are the browser driver(s) and version(s) where you see this issue?  IE Driver 4.3.0.0  ### Are you using Selenium Grid?  No","closed","needs-triaging,","kurpt","2022-07-24T09:19:40Z","2022-07-24T22:12:46Z"
"","10557","[🐛 Bug]: Firefox hangs when testing after upgrade to Selenium 4.x Python binding","### What happened?  during tests after upgrading to Selenium 4.x I encounter problems with FireFox. the Firefox browser hangs after being started and the Python webdriver object does not return from initialization. Same code works fine with Chrome. Differences in driver implementation i e addon installation are not relevant in the test i e I do not use any specific setting, user profile or something else.  Latest Geckodriver and Firefox. Geckodriver process as well as a Firefox (with this robot icon in the address bar proving it being started remotely) are started, so the path issue reported often is not an issue (while path is set anyway). I did a complete reinstall of Firefox *without* taking over old settings, so old firefox settings cannot be the root cause.  I discovered the issue when recently doing the upgrade to Selenium 4.x and testing some of my standard modules. However, I do not use FireFox very often so I cannot completely rule out it would have happened with 3.141 since a specific firefox version.  Does anybody have similar problems?   ### How can we reproduce the issue?  ```shell Standard start, no really extraordinary coding ```   ### Relevant log output  ```shell no log output ```   ### Operating System  Windows 10  ### Selenium version  Python 3.9.5, Selenium 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  latest Chrome and Firefox  ### What are the browser driver(s) and version(s) where you see this issue?  Geckodriver 0.30 and 0.31  ### Are you using Selenium Grid?  No","closed","I-issue-template,","dornech","2022-04-19T11:35:27Z","2022-05-20T00:11:18Z"
"","10171","[🐛 Bug]: Python + Selenium 4.0+ (AttributeError: 'dict' object has no attribute 'click')","### What happened?  During running tests on Python  faced with issue: AttributeError: 'dict' object has no attribute 'click' which didn't see on Selenium 3.141  ### How can we reproduce the issue?  ```shell Python 3.8 Exception see with w3c=True and without  Code:     def setup_method(self):         options = webdriver.ChromeOptions()         options.w3c = True         options.add_argument('--no-sandbox')         self.driver = webdriver.Remote(             command_executor=""http://localhost:8085"",             desired_capabilities=webdriver.DesiredCapabilities.CHROME,             options=options)  Test code:     def test(self, setup_method):         self.driver.get('https://sha-test-app.herokuapp.com/')         self.driver.find_element(By.XPATH, ""//button[contains(@class,'default-btn')]"").click() ```   ### Relevant log output  ```shell def test(self, setup_method):         self.driver.get('https://sha-test-app.herokuapp.com/')         self.button=self.driver.find_element(By.XPATH, ""//button[contains(@class,'default-btn')]"") >       self.button.click() E       AttributeError: 'dict' object has no attribute 'click' ```   ### Operating System  Windows 10  ### Selenium version  4.0.0 and 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94, 95, 96  ### What are the browser driver(s) and version(s) where you see this issue?  Remote  ### Are you using Selenium Grid?  No","closed","I-defect,","ElenaStepuro","2021-12-21T10:16:30Z","2022-02-18T00:07:45Z"
"","10699","[🐛 Bug]: Same error with every new chrome version when using bidi_connection()","### What happened?  driver.bidi_connection() fails every time when new chrome version is released. I have opened this defect in the past.   The line that is causing it is located under webdriver.py  devtools = import_module(""selenium.webdriver.common.devtools.v{}"".format(version))  Devtools module don`t seem to be updating fast enough. It is hard to use bidi_connection in a professional setting. Currently it fails for chrome version 102  ### How can we reproduce the issue?  ```shell Update chrome and webdriver to version 102.  Run: async with driver.bidi_connection() as bidi_session:    session, devtools = bidi_session.session, bidi_session.devtools ```   ### Relevant log output  ```shell ModuleNotFoundError ```   ### Operating System  windows and mac os  ### Selenium version  python  ### What are the browser(s) and version(s) where you see this issue?  chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  102.0.5005  ### Are you using Selenium Grid?  no","closed","I-defect,","gromovoff","2022-05-26T20:12:54Z","2022-07-14T00:15:03Z"
"","9975","[🐛 Bug]: IEDriverServer 3.150.2 failing to find elements","### What happened?  Downloaded 32-bit IEDriverServer 3.150.2 from https://www.selenium.dev/downloads/  When extracted the actual file version is 3.150.1.1 - is that right? I replaced the older 3.150.1.0 file with the 1.1 and it fails running the getting started example, not finding ""q"". ![Screenshot 2021-10-22 113435](https://user-images.githubusercontent.com/92938784/138447155-7bd08754-fcfc-4fd8-93f7-62d5c86cb0c3.png) ![Screenshot 2021-10-22 113837](https://user-images.githubusercontent.com/92938784/138447627-0db2d4ba-36de-47a3-b8b9-c6325f7f1c46.png)   ### How can we reproduce the issue?  ```shell Use the sample 'Getting started code' at https://www.selenium.dev/documentation/ change it for InternetExplorerDriver so the code looks like this using OpenQA.Selenium; using OpenQA.Selenium.IE; using OpenQA.Selenium.Support.UI; using System;  namespace Test150._2 {     class Program     {         static void Main(string[] args)         {             using (IWebDriver driver = new InternetExplorerDriver())             {                 WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));                 driver.Navigate().GoToUrl(""https://www.google.com/ncr"");                 driver.FindElement(By.Name(""q"")).SendKeys(""cheese"" + Keys.Enter);                 wait.Until(webDriver => webDriver.FindElement(By.CssSelector(""h3"")).Displayed);                 IWebElement firstResult = driver.FindElement(By.CssSelector(""h3""));                 Console.WriteLine(firstResult.GetAttribute(""textContent""));             }         }     } }  run it - it fails as above - but this works without issue using the 3.150.1.0 version ```   ### Relevant log output  ```shell Is there a logging facility in the driver? ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  IE11 21H1 (19043.1288)  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 3.150.2 (but file version is 3.150.1.1)  ### Are you using Selenium Grid?  No","closed","I-defect,","ShirleyYahafl","2021-10-22T11:49:02Z","2022-01-03T00:07:39Z"
"","10573","[🐛 Bug]: HTTP method not allowed for IME","### What happened?  Does Selenium still support to work on IME?  Both request failed on Firefox and Chrome in local Windows browser.  Get the background from a stackoverflow answer: https://stackoverflow.com/questions/26588441/what-exactly-does-ime-in-selenium-do So try to call the docker firefox based on Linux by below command: `docker run -d -p 4444:4444 --shm-size=""2g"" selenium/standalone-firefox:4.1.3-20220405` Still failed ![image](https://user-images.githubusercontent.com/3264250/164983185-dc40a2d7-8bec-4b0d-aa0b-87c1720e999c.png) ![image](https://user-images.githubusercontent.com/3264250/164983211-9ee6217c-2b75-4e4b-a354-6e837ccdc914.png)  Try to check the Selenium unit test https://github.com/SeleniumHQ/selenium/blob/8ef70018710104a03311b7627290301e08228947/java/test/org/openqa/selenium/I18nTest.java#L128  Seems ignore all browsers? `  @Ignore(IE)   @Ignore(CHROME)   @Ignore(EDGE)   @Ignore(FIREFOX)   @NotYetImplemented(HTMLUNIT) `  So what's the specific usage on ImeHandler and any available scenario?  Can't find out the related section in WebDriver part, seems it's another story as below?  https://www.w3.org/TR/ime-api/   Thanks.     ### How can we reproduce the issue?  ```shell @Test   public void testUnsupportedCommandException() {     Assertions.assertThatExceptionOfType(UnsupportedCommandException.class)             .isThrownBy(() -> driver.manage().ime().getActiveEngine());     Assertions.assertThatExceptionOfType(UnsupportedCommandException.class)             .isThrownBy(() -> driver.manage().ime().isActivated());     Assertions.assertThatExceptionOfType(UnsupportedCommandException.class)             .isThrownBy(() -> driver.manage().ime().getAvailableEngines());   } ```   ### Relevant log output  ```shell 14:55:12.569 INFO [LocalDistributor.newSession] - Session request received by the distributor:  [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {args: [], log: {level: trace}, prefs: {toolkit.asyncshutdown.log: true}}}] 1650812112573   geckodriver     INFO    Listening on 127.0.0.1:53237 1650812112593   mozrunner::runner       INFO    Running command: ""/usr/bin/firefox"" ""--marionette"" ""--remote-debugging-port"" ""35320"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofilen3PXsv"" 1650812112593   geckodriver::marionette DEBUG   Waiting 60s to connect to browser on 127.0.0.1:37095 1650812112593   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms 1650812112694   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker AddonManager: shutting down. for phase profile-before-change DEBUG: Adding blocker IOUtils Blocker (profile-before-change) for phase profile-before-change DEBUG: Adding blocker IOUtils Blocker (xpcom-will-shutdown) for phase xpcom-will-shutdown DEBUG: Adding blocker Flush WebExtension StartupCache for phase IOUtils: waiting for profileBeforeChange IO to complete 1650812112794   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete DEBUG: Adding blocker JSON store: writing data for phase AddonManager: Waiting for providers to shut down. DEBUG: Adding blocker Update add-on blocklist state into add-on DB for phase AddonManager: Waiting to start provider shutdown. DEBUG: Adding blocker XPIProvider shutdown for phase quit-application-granted DEBUG: Adding blocker XPIProvider for phase AddonManager: Waiting for providers to shut down. DEBUG: Adding blocker ServiceWorkerRegistrar: Flushing data for phase profile-before-change DEBUG: Adding blocker CrashMonitor: Writing notifications to file after receiving profile-before-change and awaiting all checkpoints written for phase IOUtils: waiting for profileBeforeChange IO to complete DEBUG: Adding blocker TelemetryController: shutting down for phase profile-before-change-telemetry 1650812112894   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms 1650812112994   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms [GFX1-]: glxtest: libpci missing [GFX1-]: glxtest: libEGL missing 1650812113094   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker EnvironmentAddonBuilder for phase AddonManager: Waiting to start provider shutdown. DEBUG: Adding blocker RemoteSettingsClient - finish IDB access. for phase profile-before-change 1650812113121   RemoteAgent     DEBUG   CDP enabled 1650812113121   Marionette      INFO    Marionette enabled DEBUG: Adding blocker PermissionManager: Flushing data for phase xpcom-will-shutdown 1650812113170   Marionette      TRACE   Received observer notification toplevel-window-ready DEBUG: Completed blocker Update add-on blocklist state into add-on DB for phase AddonManager: Waiting to start provider shutdown. DEBUG: Adding blocker ClientManagerService: start destroying IPC actors early for phase xpcom-will-shutdown DEBUG: Adding blocker Flush AddonRepository for phase profile-before-change 1650812113195   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker OS.File: flush pending requests, warn about unclosed files, shut down service. for phase xpcom-will-shutdown DEBUG: Adding blocker OS.File: flush I/O queued before profileBeforeChange for phase profile-before-change 1650812113295   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker MediaShutdownManager: shutdown for phase profile-before-change 1650812113395   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete DEBUG: Adding blocker Remote Settings profile-before-change for phase profile-before-change DEBUG: Adding blocker GMPProvider for phase AddonManager: Waiting for providers to shut down. DEBUG: Adding blocker ContentParent: id=7ff1e36f7c00 for phase xpcom-will-shutdown DEBUG: Adding blocker ContentParent: id=7ff1e36f7c00 for phase profile-before-change 1650812113495   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker ServiceWorkerShutdownBlocker: shutting down Service Workers for phase profile-change-teardown DEBUG: Adding blocker ContentParent: id=7ff1f46f5b00 for phase xpcom-will-shutdown DEBUG: Adding blocker ContentParent: id=7ff1f46f5b00 for phase profile-before-change 1650812113596   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete DEBUG: Adding blocker PageActions: purging unregistered actions from cache for phase profile-before-change DEBUG: Adding blocker Places Clients shutdown for phase profile-change-teardown DEBUG: Adding blocker Places Connection shutdown for phase profile-before-change 1650812113696   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker sanitize.js: Sanitize on shutdown for phase Places Clients shutdown console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new NotFoundError(""Could not open the file at /tmp/rust_mozprofilen3PXsv/search.json.mozlz4"", (void 0))) DEBUG: Adding blocker Sqlite.jsm shutdown blocker for phase profile-before-change DEBUG: Adding blocker content-prefs.sqlite#0: waiting for shutdown for phase Sqlite.jsm: wait until all connections are closed DEBUG: Adding blocker Closing ContentPrefService2 connection. for phase Sqlite.jsm: wait until all clients have completed their task DEBUG: Adding blocker Transaction (0) for phase content-prefs.sqlite#0: waiting for clients 1650812113796   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Completed blocker Transaction (0) for phase content-prefs.sqlite#0: waiting for clients DEBUG: Adding blocker ContextualIdentityService: writing data for phase profile-before-change DEBUG: Adding blocker Transaction (1) for phase content-prefs.sqlite#0: waiting for clients DEBUG: Adding blocker Transaction (2) for phase content-prefs.sqlite#0: waiting for clients DEBUG: Completed blocker Transaction (1) for phase content-prefs.sqlite#0: waiting for clients DEBUG: Completed blocker Transaction (2) for phase content-prefs.sqlite#0: waiting for clients DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete 1650812113896   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete 1650812113996   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete DEBUG: Adding blocker JSON store: writing data for phase IOUtils: waiting for profileBeforeChange IO to complete 1650812114097   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker Search service: shutting down for phase IOUtils: waiting for profileBeforeChange IO to complete 1650812114197   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Adding blocker places.sqlite#1: waiting for shutdown for phase Sqlite.jsm: wait until all connections are closed DEBUG: Adding blocker Places Expiration: shutdown for phase Places Connection shutdown DEBUG: Adding blocker PlacesUtils wrapped connection closing as part of Places shutdown for phase Places Connection shutdown DEBUG: Adding blocker PlacesUtils wrapped connection must be closed before Sqlite.jsm for phase Sqlite.jsm: wait until all clients have completed their task DEBUG: Adding blocker places.sqlite#1: PlacesExpiration.jsm: setup (0) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#0: waiting for shutdown for phase Sqlite.jsm: wait until all connections are closed DEBUG: Adding blocker PlacesUtils read-only connection closing as part of Places shutdown for phase Places Connection shutdown DEBUG: Adding blocker PlacesUtils read-only connection must be closed before Sqlite.jsm for phase Sqlite.jsm: wait until all clients have completed their task DEBUG: Completed blocker places.sqlite#1: PlacesExpiration.jsm: setup (0) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker Transaction (1) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: Bookmarks.jsm: eraseEverything (2) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: PlacesUIUtils: maybeAddImportButton (3) for phase places.sqlite#1: waiting for clients DEBUG: Completed blocker places.sqlite#1: PlacesUIUtils: maybeAddImportButton (3) for phase places.sqlite#1: waiting for clients 1650812114297   geckodriver::marionette TRACE   Connection refused (os error 111). Retrying in 100ms DEBUG: Completed blocker Transaction (1) for phase places.sqlite#1: waiting for clients DEBUG: Completed blocker places.sqlite#1: Bookmarks.jsm: eraseEverything (2) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: Bookmarks.jsm: fetchBookmark (4) for phase places.sqlite#1: waiting for clients DEBUG: Completed blocker places.sqlite#1: Bookmarks.jsm: fetchBookmark (4) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker Transaction (5) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: Bookmarks.jsm: insertBookmarkTree (6) for phase places.sqlite#1: waiting for clients 1650812114341   RemoteAgent     TRACE   Received observer notification remote-startup-requested 1650812114351   RemoteAgent     DEBUG   Setting recommended pref apz.content_response_timeout to 60000 1650812114351   RemoteAgent     DEBUG   Setting recommended pref browser.contentblocking.introCount to 99 1650812114351   RemoteAgent     DEBUG   Setting recommended pref browser.download.panel.shown to true 1650812114351   RemoteAgent     DEBUG   Setting recommended pref browser.newtabpage.enabled to false 1650812114352   RemoteAgent     DEBUG   Setting recommended pref browser.pagethumbnails.capturing_disabled to true 1650812114352   RemoteAgent     DEBUG   Setting recommended pref browser.search.update to false 1650812114353   RemoteAgent     DEBUG   Setting recommended pref browser.tabs.disableBackgroundZombification to false 1650812114353   RemoteAgent     DEBUG   Setting recommended pref browser.tabs.unloadOnLowMemory to false 1650812114354   RemoteAgent     DEBUG   Setting recommended pref browser.tabs.warnOnCloseOtherTabs to false 1650812114354   RemoteAgent     DEBUG   Setting recommended pref browser.tabs.warnOnOpen to false 1650812114354   RemoteAgent     DEBUG   Setting recommended pref browser.toolbars.bookmarks.visibility to never 1650812114354   RemoteAgent     DEBUG   Setting recommended pref browser.usedOnWindows10.introURL to 1650812114355   RemoteAgent     DEBUG   Setting recommended pref browser.urlbar.merino.endpointURL to 1650812114355   RemoteAgent     DEBUG   Setting recommended pref browser.urlbar.suggest.searches to false 1650812114356   RemoteAgent     DEBUG   Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false 1650812114356   RemoteAgent     DEBUG   Setting recommended pref dom.disable_open_during_load to false 1650812114356   RemoteAgent     DEBUG   Setting recommended pref dom.file.createInChild to true 1650812114356   RemoteAgent     DEBUG   Setting recommended pref dom.max_chrome_script_run_time to 0 1650812114357   RemoteAgent     DEBUG   Setting recommended pref dom.max_script_run_time to 0 1650812114357   RemoteAgent     DEBUG   Setting recommended pref dom.push.connection.enabled to false 1650812114358   RemoteAgent     DEBUG   Setting recommended pref dom.successive_dialog_time_limit to 0 1650812114358   RemoteAgent     DEBUG   Setting recommended pref extensions.getAddons.cache.enabled to false 1650812114358   RemoteAgent     DEBUG   Setting recommended pref extensions.getAddons.discovery.api_url to data:, 1650812114358   RemoteAgent     DEBUG   Setting recommended pref network.http.prompt-temp-redirect to false 1650812114358   RemoteAgent     DEBUG   Setting recommended pref privacy.trackingprotection.enabled to false 1650812114358   RemoteAgent     DEBUG   Setting recommended pref security.fileuri.strict_origin_policy to false 1650812114358   RemoteAgent     DEBUG   Setting recommended pref security.notification_enable_delay to 0 1650812114359   RemoteAgent     DEBUG   Setting recommended pref signon.autofillForms to false 1650812114360   RemoteAgent     DEBUG   Setting recommended pref signon.rememberSignons to false 1650812114361   RemoteAgent     DEBUG   Setting recommended pref browser.topsites.contile.enabled to false 1650812114362   RemoteAgent     DEBUG   Setting recommended pref browser.contentblocking.features.standard to -tp,tpPrivate,cookieBehavior0,-cm,-fp 1650812114362   RemoteAgent     DEBUG   Setting recommended pref network.cookie.cookieBehavior to 0 1650812114366   Marionette      TRACE   Received observer notification marionette-startup-requested 1650812114366   Marionette      TRACE   Waiting until startup recorder finished recording startup scripts... DevTools listening on ws://localhost:35320/devtools/browser/8684718d-e21c-41a8-9b02-dd3931809276 DEBUG: Completed blocker Transaction (5) for phase places.sqlite#1: waiting for clients DEBUG: Completed blocker places.sqlite#1: Bookmarks.jsm: insertBookmarkTree (6) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: GuidHelper.getItemId (7) for phase places.sqlite#1: waiting for clients DEBUG: Completed blocker places.sqlite#1: GuidHelper.getItemId (7) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: Bookmarks.jsm: fetchBookmark (8) for phase places.sqlite#1: waiting for clients 1650812114385   Marionette      TRACE   All scripts recorded. 1650812114385   RemoteAgent     DEBUG   Setting recommended pref dom.disable_beforeunload to true 1650812114387   Marionette      INFO    Listening on port 37095 1650812114387   Marionette      DEBUG   Marionette is listening DEBUG: Adding blocker DownloadAutoSaveView: writing data for phase profile-before-change 1650812114407   Marionette      DEBUG   Accepted connection 0 from 127.0.0.1:46738 DEBUG: Completed blocker places.sqlite#1: Bookmarks.jsm: fetchBookmark (8) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker Transaction (9) for phase places.sqlite#1: waiting for clients DEBUG: Adding blocker places.sqlite#1: Bookmarks.jsm: insertBookmarkTree (10) for phase places.sqlite#1: waiting for clients 1650812114409   geckodriver::marionette DEBUG   Connection to Marionette established on 127.0.0.1:37095. 1650812114415   Marionette      DEBUG   0 -> [0,1,""WebDriver:NewSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox"",""se:noVncPort"":7900,""se:vncEnabled"":true}] 1650812114418   RemoteAgent     WARN    TLS certificate errors will be ignored for this session 1650812114424   RemoteAgent     TRACE   [17] Document already finished loading: about:blank 1650812114427   Marionette      DEBUG   0","open","I-defect,","alaahong","2022-04-24T15:19:41Z","2022-05-12T20:40:06Z"
"","10145","[🐛 Bug]: selenium python module is not PEP517 compliant","### What happened?  Disclaimer: This issue ticket is not strict bug report but more question or discussion (I'm trying to understand background of some technical decisions)  PEP517 (https://www.python.org/dev/peps/pep-0517/) is widely accepted as build framework. Looks like selenium is trying to use bazel which seem is used only to generate or download few .js files. If those files would be part of the source tree existing py/setup.{py,cfg} files could be used to generate .whl , sdist archives or build and install selenium  using `setuptools`.  Is it any particular reason why in case of `selenium ` is used bazel? (which seems has quite complicated build dependencies) And/or: why not just extend somehow py/setup.py to add generate/download missing .js files?  ### How can we reproduce the issue?  ```shell N/A ```   ### Relevant log output  ```shell N/A ```   ### Operating System  N/A  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  N/A","closed","needs-triaging,","kloczek","2021-12-14T06:15:36Z","2022-02-22T00:08:51Z"
"","10587","[🐛 Bug]: Dim driver2 As New Edge.EdgeDriver(EdgeDriverService2, EdgeOptions2) cause show start up form","### What happened?  Dim EdgeDriverService2 = Edge.EdgeDriverService.CreateDefaultService(Application.StartupPath)          Dim EdgeOptions2 As New Edge.EdgeOptions          EdgeDriverService2.HideCommandPromptWindow = True         EdgeOptions2.AddArgument(""--headless"")             Dim driver2 As New Edge.EdgeDriver(EdgeDriverService2, EdgeOptions2)  Run above code in a Sub in a Module in a Parameterized thread in Visual Studio 2022 in a Visual Basic Windows Forms App , using Selenium Webdriver, last line wrongly  cause show application start up form. Could you fix it by stopping show start up form.     ### How can we reproduce the issue?  ```shell Dim EdgeOptions2 As New Edge.EdgeOptions          EdgeDriverService2.HideCommandPromptWindow = True         EdgeOptions2.AddArgument(""--headless"")             Dim driver2 As New Edge.EdgeDriver(EdgeDriverService2, EdgeOptions2)  Run above code in a Sub in a Module in a Parameterized thread in Visual Studio 2022 in a Visual Basic Windows Forms App , using Selenium Webdriver, last line wrongly cause show application start up form. Could you fix it by stopping show start up form. ```   ### Relevant log output  ```shell None. ```   ### Operating System  Windows 10  ### Selenium version  Visual Basic Selenium. WebDriver 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Microsoft Edge Version 100.0.1185.50 (Official build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  Don't know  ### Are you using Selenium Grid?  Don't know","closed","I-issue-template,","Bradley501","2022-04-28T18:00:48Z","2022-06-05T00:14:08Z"
"","10225","[🐛 Bug]: automation using in chrome using selenium in windows 11 is not working...","### What happened?  DevTools listening on ws://127.0.0.1:50039/devtools/browser/895e8c9b-a626-4801-ae3c-b050c40bb56c [1116:10588:0106/124410.875:ERROR:device_event_log_impl.cc(214)] [12:44:10.875] USB: usb_device_handle_win.cc:1050 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [1116:11420:0106/124410.877:ERROR:chrome_browser_main_extra_parts_metrics.cc(227)] START: ReportBluetoothAvailability(). If you don't see the END: message, this is crbug.com/1216328. [1116:11420:0106/124410.878:ERROR:chrome_browser_main_extra_parts_metrics.cc(230)] END: ReportBluetoothAvailability() [1116:11420:0106/124410.878:ERROR:chrome_browser_main_extra_parts_metrics.cc(235)] START: GetDefaultBrowser(). If you don't see the END: message, this is crbug.com/1216328. [1116:11420:0106/124411.025:ERROR:chrome_browser_main_extra_parts_metrics.cc(239)] END: GetDefaultBrowser()   Getting This type of error in chrome console window and after there not passing value to elements in chrome   Please help me for his  ### How can we reproduce the issue?  ```shell Getting This type of error in chrome console window and after there not passing value to elements in chrome   Please help me for his ```   ### Relevant log output  ```shell DevTools listening on ws://127.0.0.1:50039/devtools/browser/895e8c9b-a626-4801-ae3c-b050c40bb56c [1116:10588:0106/124410.875:ERROR:device_event_log_impl.cc(214)] [12:44:10.875] USB: usb_device_handle_win.cc:1050 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [1116:11420:0106/124410.877:ERROR:chrome_browser_main_extra_parts_metrics.cc(227)] START: ReportBluetoothAvailability(). If you don't see the END: message, this is crbug.com/1216328. [1116:11420:0106/124410.878:ERROR:chrome_browser_main_extra_parts_metrics.cc(230)] END: ReportBluetoothAvailability() [1116:11420:0106/124410.878:ERROR:chrome_browser_main_extra_parts_metrics.cc(235)] START: GetDefaultBrowser(). If you don't see the END: message, this is crbug.com/1216328. [1116:11420:0106/124411.025:ERROR:chrome_browser_main_extra_parts_metrics.cc(239)] END: GetDefaultBrowser() ```   ### Operating System  Windows 11  ### Selenium version  3.8  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  Chorme Driver  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","mraakashjoshi","2022-01-06T07:27:24Z","2022-02-26T00:08:49Z"
"","10527","[🐛 Bug]: Selenium Grid not working with WebView2 application","### What happened?  Detailed steps to reproduce the behavior: Run the below c# code              EdgeOptions edgeOptions = new EdgeOptions();             edgeOptions.UseChromium = true;             edgeOptions.UseWebView = true;             edgeOptions.BinaryLocation = @""C:\MyWebView2App.exe"";             IWebDriver webDriver = new RemoteWebDriver(new Uri(""http://127.0.0.1:4444""),edgeOptions); Below exception occurs:  OpenQA.Selenium.WebDriverException   HResult=0x80131500   Message=The HTTP request to the remote WebDriver server for URL http://127.0.0.1:4444/session timed out after 60 seconds.   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, DriverOptions options)    at WebViewTesting.Program.Main(String[] args) in     This exception was originally thrown at this call stack:     [External Code]  Inner Exception 1: WebException: The operation has timed out.  ### How can we reproduce the issue?  ```shell The sample test project (WebViewTesting) and sample app (SampleApp) can be found in below git repo. https://github.com/pramodkeeliputti12345/pramodkeeliputti12345  Start selenium grid 4 (selenium-server-4.0.0-beta-4.jar) in standalone mode. Load project WebViewTesting in visual studio 2019. Copy 'SampleApp' folder under c drive. Run the WebViewTesting application. Exception occurse @ line number 16. (IWebDriver webDriver = new RemoteWebDriver(new Uri(""http://127.0.0.1:4444""),edgeOptions);)  What i am looking is to achieve the below functionality with Selenium Grid. https://docs.microsoft.com/en-us/microsoft-edge/webview2/how-to/webdriver  This works for EdgeDriver but not working for RemoteWebDriver. ```   ### Relevant log output  ```shell OpenQA.Selenium.WebDriverException   HResult=0x80131500   Message=The HTTP request to the remote WebDriver server for URL http://127.0.0.1:4444/session timed out after 60 seconds.   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, DriverOptions options)    at WebViewTesting.Program.Main(String[] args) in     This exception was originally thrown at this call stack:     [External Code]  Inner Exception 1: WebException: The operation has timed out. ```   ### Operating System  Windows 10  ### Selenium version  selenium-server-4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Webview2  ### What are the browser driver(s) and version(s) where you see this issue?  91.0.864.37  ### Are you using Selenium Grid?  4.0.0","closed","R-awaiting answer,","pramodkeeliputti12345","2022-04-07T17:19:59Z","2022-05-11T00:12:40Z"
"","10372","[🐛 Bug]: [Chrome 95+] Error occurring when using throttling settings in Chrome 95 and above","### What happened?  Creating this one since #10002 was closed prematurely and haven't been re-opened despite my reports of the issues persisting.  **Chrome version:**    * 95.0.4638.69   * 96.0.4664.45   * 97.0.4692.99   * 98.0.4758.80  **chromedriver versions:**  * 95.0.4638.69 * 96.0.4664.45 * 97.0.4692.99 * ChromeDriver 98.0.4758.80 (7f0488e8ba0d8e019187c6325a16c29d9b7f4989-refs/branch-heads/4758@{#972})  ### Error thrown: ```      WebDriverError: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: chrome=98.0.4758.80)       at Object.throwDecodedError (/Users/.../node_modules/selenium-webdriver/lib/error.js:550:15)       at parseHttpResponse (/Users/.../node_modules/selenium-webdriver/lib/http.js:565:13)       at Executor.execute (/Users/.../node_modules/selenium-webdriver/lib/http.js:491:26)       at processTicksAndRejections (internal/process/task_queues.js:93:5)       at thenableWebDriverProxy.execute (/Users/.../node_modules/selenium-webdriver/lib/webdriver.js:700:17)       at Object.findAndClick (src/utils/utils.js:14:5)       at Context. (src/tests/[testSuiteName].js:128:7) ```    ### How can we reproduce the issue?  The test case looks like follows:  ```js await utils.disableNetwork(); // Error is thrown from next line - button makes a request on click await utils.findAndClick(Locators.BUTTON); ``` where: ```js export function disableNetwork(driver) {   return driver.setNetworkConditions({ offline: true, latency: 0, throughput: 0 }); } export function makeFindAndClick(driver) {   return async locator => {     const elt = await find(driver, locator, 5000);     await elt.click();     return elt;   }; } ```   ### Relevant log output  When the erroring line is wrapped in try-catch console.log(error), the following is outputted:  ```shell  WebDriverError: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: chrome=98.0.4758.80)     at Object.throwDecodedError (/Users/.../node_modules/selenium-webdriver/lib/error.js:550:15)     at parseHttpResponse (/Users/.../node_modules/selenium-webdriver/lib/http.js:565:13)     at Executor.execute (/Users/.../node_modules/selenium-webdriver/lib/http.js:491:26)     at processTicksAndRejections (internal/process/task_queues.js:93:5)     at thenableWebDriverProxy.execute (/Users/.../node_modules/selenium-webdriver/lib/webdriver.js:700:17)     at Object.findAndClick (/Users/.../src/utils/utils.js:14:5)     at Context. (/Users/.../src/tests/[test-case].js:129:9) {   name: 'WebDriverError',   remoteStacktrace: '0   chromedriver                        0x00000001062033c9 chromedriver + 5018569\n' +     '1   chromedriver                        0x000000010618e333 chromedriver + 4539187\n' +     '2   chromedriver                        0x0000000105d6393f chromedriver + 170303\n' +     '3   chromedriver                        0x0000000105d50693 chromedriver + 91795\n' +     '4   chromedriver                        0x0000000105d50119 chromedriver + 90393\n' +     '5   chromedriver                        0x0000000105d4f713 chromedriver + 87827\n' +     '6   chromedriver                        0x0000000105d4e747 chromedriver + 83783\n' +     '7   chromedriver                        0x0000000105d4eb4c chromedriver + 84812\n' +     '8   chromedriver                        0x0000000105d5c641 chromedriver + 140865\n' +     '9   chromedriver                        0x0000000105d5d202 chromedriver + 143874\n' +     '10  chromedriver                        0x0000000105d6a933 chromedriver + 198963\n' +     '11  chromedriver                        0x0000000105d6da2a chromedriver + 211498\n' +     '12  chromedriver                        0x0000000105d4ee6e chromedriver + 85614\n' +     '13  chromedriver                        0x0000000105d6a56c chromedriver + 197996\n' +     '14  chromedriver                        0x0000000105dc8a13 chromedriver + 584211\n' +     '15  chromedriver                        0x0000000105db56d3 chromedriver + 505555\n' +     '16  chromedriver                        0x0000000105d8b95e chromedriver + 334174\n' +     '17  chromedriver                        0x0000000105d8c935 chromedriver + 338229\n' +     '18  chromedriver                        0x00000001061bf1ee chromedriver + 4739566\n' +     '19  chromedriver                        0x00000001061d8f51 chromedriver + 4845393\n' +     '20  chromedriver                        0x00000001061de928 chromedriver + 4868392\n' +     '21  chromedriver                        0x00000001061d9a7a chromedriver + 4848250\n' +     '22  chromedriver                        0x00000001061b3c31 chromedriver + 4693041\n' +     '23  chromedriver                        0x00000001061f4978 chromedriver + 4958584\n' +     '24  chromedriver                        0x00000001061f4b01 chromedriver + 4958977\n' +     '25  chromedriver                        0x000000010620a795 chromedriver + 5048213\n' +     '26  libsystem_pthread.dylib             0x00007fff204488fc _pthread_start + 224\n' +     '27  libsystem_pthread.dylib             0x00007fff20444443 thread_start + 15\n' ```   ### Operating System  macOS  ### Selenium version  JavaScript, 4.0.0-alpha.7  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95+  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver ^95,^96,^97,^98  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","TeoTN","2022-02-18T16:36:06Z","2022-03-23T00:10:46Z"
"","10194","[🐛 Bug]: Slow session creation with Selenium 4","### What happened?  Creating a new selenium session (e.g. chrome, firefox) is 3 times slower (5-7 seconds) with Selenium 4 compared to Selenium 3 (1-2 seconds).   The log output shows a big delay (up to 5 secs) between the creation of the RemoteWebDriver instance on the client-side and the log output of the hub ""Session request received by the distributor"".   Client: 16:46:17.005 [main] INFO NodeSelectTest - Creating remote driver Hub:   16:46:21.759 INFO [LocalDistributor.newSession] - Session request received by the distributor    ### How can we reproduce the issue?  ```shell I've created a simple test case to show the behavior. See README.md for instructions.  https://github.com/cyberflohr/selenium-node-test  PS: Trying to create a Firefox session, which obviously will not work because the set-up only contains Chrome nodes, will also show this 5-second delay until the server responds with an error message. ```   ### Relevant log output  ```shell Docker container logs  hub_1     | 16:46:21.759 INFO [LocalDistributor.newSession] - Session request received by the distributor: hub_1     |  [Capabilities {browserName: chrome, goog:chromeOptions: {args: [], extensions: []}}] chrome_1  | Starting ChromeDriver 94.0.4606.61 (418b78f5838ed0b1c69bb4e51ea0252171854915-refs/branch-heads/4606@{#1204}) on port 45659 chrome_1  | Only local connections are allowed. chrome_1  | Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. chrome_1  | ChromeDriver was started successfully. chrome_1  | [1640709981.951][SEVERE]: bind() failed: Cannot assign requested address (99) chrome_1  | 16:46:23.426 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C hub_1     | 16:46:23.492 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: c6d12c99edc2731d63a73e077491d728, Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 94.0.4606.81, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: /tmp/.com.google.Chrome.uedrAE}, goog:chromeOptions: {debuggerAddress: localhost:39151}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: linux, proxy: {}, se:cdp: ws://0.0.0.0:4444/session/c..., se:cdpVersion: 94.0.4606.81, se:vnc: ws://0.0.0.0:4444/session/c..., se:vncEnabled: true, se:vncLocalAddress: ws://172.24.0.3:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} hub_1     | 16:46:23.735 INFO [LocalSessionMap.lambda$new$0] - Deleted session from local session map, Id: c6d12c99edc2731d63a73e077491d728   Test output:  16:46:17.005 [main] INFO NodeSelectTest - Creating remote driver 16:46:23.580 [main] INFO NodeSelectTest - Chrome remote created 16:46:23.580 [main] INFO NodeSelectTest - Destroying driver 16:46:23.778 [main] INFO NodeSelectTest - Driver destroyed ```   ### Operating System  macOS - Docker Desktop 4.3  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 94  ### Are you using Selenium Grid?  4.1.1","closed","I-defect,","cyberflohr","2021-12-28T17:26:18Z","2022-02-12T00:07:58Z"
"","10867","[🐛 Bug]: Custom SlotMatcher not working as expected","### What happened?  Creating a custom Slot Matcher - where if user is not passing the custom capability, the custom slot matcher code will add the key and value for the  capability and then will match.  Node 1 -  ""c:customCap"":""beta"" Node 2 -  ""c:customCap"":""alpha"" Node 3 -  ""c:customCap"":""default""  Scenario - User is only passing browser as chrome, so now my custom slot matcher code has added the ""c:customCap"":""default"". But still Selenium grid is not respecting this added capability and execution is going to any of the nodes irrespective of the value of ""c:customCap"".   Expected - The request should go to  Node 3 -  ""c:customCap"":""default""   ### How can we reproduce the issue?  ```shell I am adding c:customCap to the passed capability and then matching and returning  boolean custCapMatch = stereotype.asMap().get(""c:customCap"").equals(capabilities.asMap().get(""c:customCap""));  return basicChecks && custCapMatch;  basicChecks  is only checking the default selenium grid capabilities  Node setup  java -jar selenium-server-4.3.0.jar node --detect-drivers false --driver-configuration display-name=""Chrome Beta"" max-sessions=2 stereotype={\""browserName\"":\""chrome\"",\""c:customCap\"":\""beta\""} --port 5557  java -jar selenium-server-4.3.0.jar node --detect-drivers false --driver-configuration display-name=""Chrome1"" max-sessions=2 stereotype={\""browserName\"":\""chrome\"",\""c:customCap\"":\""alpha\""} --port 5558  java -jar selenium-server-4.3.0.jar node --detect-drivers false --driver-configuration display-name=""Chrome2"" max-sessions=2 stereotype={\""browserName\"":\""chrome\"",\""c:customCap\"":false} --port 5559 ```   ### Relevant log output  ```shell orgcap - {browserName=chrome, platformName=WINDOWS, acceptInsecureCerts=true} orgcap - [acceptInsecureCerts, browserName, platformName] modcap - {c:customCap=default, browserName=chrome, platformName=WINDOWS, acceptInsecureCerts=true} newcap - [acceptInsecureCerts, browserName, c:customCap, platformName] added customCap c - true b - true 11:00:11.674 INFO [LocalDistributor.newSession] - Session request received by the Distributor: ```   ### Operating System  Windows 10  ### Selenium version  selenium-server-4.3.0  ### What are the browser(s) and version(s) where you see this issue?  All  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 103  ### Are you using Selenium Grid?  4.3.0","closed","I-question,","ketanb02","2022-07-12T10:06:08Z","2022-07-13T08:32:43Z"
"","10776","[🐛 Bug]: WebDriver throws NullReferenceException when calling StartEventMonitoring with EventFiringWebDriver","### What happened?  Creating a `JavaScriptEngine` with an `EventFiringWebDriver` as parameter will throw a `NullReferenceException` when calling `monitor.StartEventMonitoring();`  I believe line 57 in https://github.com/SeleniumHQ/selenium/blob/5713de4224785d86cb3a7bdbb99ee62404c9c59b/dotnet/src/webdriver/JavaScriptEngine.cs#L48-L64  should be changed to  `if (devToolsDriver == null)` to correctly throw a `WebDriverException` when trying to use a non-compatible webdriver  ### How can we reproduce the issue?  ```shell using (var driver = new EventFiringWebDriver(new ChromeDriver()))             {                 IJavaScriptEngine monitor = new JavaScriptEngine(driver);                 await monitor.StartEventMonitoring();             } ```   ### Relevant log output  ```shell Message:  Test method WebDriver.JavascriptEngine.Tests.UnitTest2.TestMethod1 threw exception:  System.NullReferenceException: Object reference not set to an instance of an object.    Stack Trace:  b__0() line 62 Lazy`1.CreateValue() Lazy`1.LazyInitValue() Lazy`1.get_Value() d__24.MoveNext() line 116 --- End of stack trace from previous location where exception was thrown --- TaskAwaiter.ThrowForNonSuccess(Task task) TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) TaskAwaiter.GetResult() d__5.MoveNext() line 80 --- End of stack trace from previous location where exception was thrown --- TaskAwaiter.ThrowForNonSuccess(Task task) TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) ThreadOperations.ExecuteWithAbortSafety(Action action) ```   ### Operating System  Windows 10  ### Selenium version  .Net Framework 4.8  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.6102  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","elgatov","2022-06-16T13:18:36Z","2022-07-05T13:18:31Z"
"","10468","[🐛 Bug]: When using scroll-behavior smooth scroll and element outside of view port get error move target out of bounds","### What happened?  Created a jsbin that uses smooth scroll. Please see code snippet and use it in a new project. This is using Selenium 4.0.1 (WebDriver and Support).   What I expected to happen was that when using Actions MoveToElement when the element is outside of the view port, the element will scroll into view. What actually happens is the move target out of bounds error happens.    ### How can we reproduce the issue?  ```shell [TestClass]     public class UnitTest1     {         private WebDriver _driver;         [TestInitialize]         public void Init()         {             _driver = new ChromeDriver(@""..\..\drivers"");         }          [TestMethod]         public async Task Test_MoveToElementSelenium()         {             _driver.Navigate().GoToUrl(""https://output.jsbin.com/husomir"");             var moveToElement = _driver.FindElement(By.Id(""three""));             var actions = new Actions(_driver);             actions.MoveToElement(moveToElement).Build().Perform();             _driver.Quit();         }          [TestCleanup]         public void Cleanup()         {             _driver.Quit();         }     } ```   ### Relevant log output  ```shell Test method Tests.UnitTest1.Test_MoveToElementSelenium threw exception:      OpenQA.Selenium.MoveTargetOutOfBoundsException: move target out of bounds       (Session info: chrome=99.0.4844.82) ```   ### Operating System  Windows 10  ### Selenium version  4.0.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99   ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  No","closed","needs-triaging,","AceOfSpades29","2022-03-22T21:37:44Z","2022-04-22T00:12:12Z"
"","10887","Getting WebGL issue with Selenium - WebDriver[🐛 Bug]:","### What happened?  Could you please help to understand why I am getting the WebGL problem in the case of WebDriver-Selenium? ![WebGL](https://user-images.githubusercontent.com/74778982/179543898-e5d8afc9-de8d-4211-b32b-7c213c0983c4.png)   ### How can we reproduce the issue?  ```shell When I open the game manually, this does not happen, but there is a WebGL issue when running the automation test. The problem arose after chrome version: 101, before that everything was working fine. In Firefox everything works fine. ```   ### Relevant log output  ```shell Please find the attached screenshot. ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.3.0 , JavaSE 14: version 16.0.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060.114  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53  ### Are you using Selenium Grid?  Selenium Grid (selenium server 4.1.4)","closed","G-chromedriver,","arsen-papoyan","2022-07-18T15:14:44Z","2022-07-27T09:53:47Z"
"","10467","[🐛 Bug]: Inconsistent XPATH find_element: Text() not found","### What happened?  Considering a dropdown button in a Span - not available through Select - finding elements via generic XPath functions, however, when specifying a specific text to be caught, returns an Element Not Found error.  Specifically, taking the span and expanding it, searching for all the  tags within, returns all the possible values. However, filtering the  tag containing the specific value, returns the error.  ### How can we reproduce the issue?  ```shell ` # subscribe for the list elements to be open extract_product_links.subscribe_page_load(web_driver=web_driver, css_selector=selection_list_container_expanded_css) selection_list_container = web_driver.find_element(by=By.CSS_SELECTOR, value=selection_list_container_expanded_css)  print(""Possibilities:"", [a.text for a in selection_list_container.find_elements(by=By.XPATH, value="".//li"")]) print(""Size option:"", size_option) print(""XPATH Selector:"", f'.//li[text()=""{size_option}""]')  # select the case where the size option label equals the size_option size_selector = selection_list_container.find_element(by=By.XPATH, value=f'.//li[text()=""{size_option}""]') ` ```   ### Relevant log output  ```shell Possibilities: ['xs', 's', 'm', 'l', 'xl', 'xxl'] Size option: xs XPath Selector: .//li[text()=""xs""]   And the error: Message: no such element: Unable to locate element: {""method"":""xpath"",""selector"":"".//li[text()=""xs""]""}   (Session info: chrome=99.0.4844.83) Stacktrace: 0   ef7a2bf9fe65c296_chromedriver       0x0000000104c42159 ef7a2bf9fe65c296_chromedriver + 5120345 1   ef7a2bf9fe65c296_chromedriver       0x0000000104bcfb13 ef7a2bf9fe65c296_chromedriver + 4651795 2   ef7a2bf9fe65c296_chromedriver       0x00000001047bfe68 ef7a2bf9fe65c296_chromedriver + 392808 3   ef7a2bf9fe65c296_chromedriver       0x00000001047f5181 ef7a2bf9fe65c296_chromedriver + 610689 4   ef7a2bf9fe65c296_chromedriver       0x00000001047f5341 ef7a2bf9fe65c296_chromedriver + 611137 5   ef7a2bf9fe65c296_chromedriver       0x00000001047e9a77 ef7a2bf9fe65c296_chromedriver + 563831 6   ef7a2bf9fe65c296_chromedriver       0x0000000104812b6d ef7a2bf9fe65c296_chromedriver + 732013 7   ef7a2bf9fe65c296_chromedriver       0x00000001047e99b5 ef7a2bf9fe65c296_chromedriver + 563637 8   ef7a2bf9fe65c296_chromedriver       0x0000000104812c4e ef7a2bf9fe65c296_chromedriver + 732238 9   ef7a2bf9fe65c296_chromedriver       0x0000000104825637 ef7a2bf9fe65c296_chromedriver + 808503 10  ef7a2bf9fe65c296_chromedriver       0x0000000104812a33 ef7a2bf9fe65c296_chromedriver + 731699 11  ef7a2bf9fe65c296_chromedriver       0x00000001047e85dd ef7a2bf9fe65c296_chromedriver + 558557 12  ef7a2bf9fe65c296_chromedriver       0x00000001047e94f5 ef7a2bf9fe65c296_chromedriver + 562421 13  ef7a2bf9fe65c296_chromedriver       0x0000000104bff38d ef7a2bf9fe65c296_chromedriver + 4846477 14  ef7a2bf9fe65c296_chromedriver       0x0000000104c1921c ef7a2bf9fe65c296_chromedriver + 4952604 15  ef7a2bf9fe65c296_chromedriver       0x0000000104c1ea12 ef7a2bf9fe65c296_chromedriver + 4975122 16  ef7a2bf9fe65c296_chromedriver       0x0000000104c19b4a ef7a2bf9fe65c296_chromedriver + 4954954 17  ef7a2bf9fe65c296_chromedriver       0x0000000104bf45b0 ef7a2bf9fe65c296_chromedriver + 4801968 18  ef7a2bf9fe65c296_chromedriver       0x0000000104c33f78 ef7a2bf9fe65c296_chromedriver + 5062520 19  ef7a2bf9fe65c296_chromedriver       0x0000000104c340ff ef7a2bf9fe65c296_chromedriver + 5062911 20  ef7a2bf9fe65c296_chromedriver       0x0000000104c49545 ef7a2bf9fe65c296_chromedriver + 5150021 21  libsystem_pthread.dylib             0x00007ff8135124f4 _pthread_start + 125 22  libsystem_pthread.dylib             0x00007ff81350e00f thread_start + 15 ```   ### Operating System  MacOS Monterey 12.2  ### Selenium version  4.1.13  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99.0.4844.51  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","TamGB","2022-03-22T16:02:03Z","2022-04-22T00:12:14Z"
"","10420","[🐛 Bug]: Unable to select element by text when div tag is in the way","### What happened?  Consider the DOM tree below.  I am unable to select Choice2 by text due to the ""dive tag beiing in the way"".                       Choice1                                            Choice2                        Choice3              The XPath `//div[@class='myClass'][contains(text(),'Choice')]` is only able to return Choice1 and Choice3.  Similarly, `//div[@class='myClass'][contains(text(),'Choice2')]` does not select the element.  Since the only difference between Choice1 and Choice2 is the placement of the sibling `div` tag, I suspect that this tag is somehow getting in the way of selecting Choice2.  ### How can we reproduce the issue?  ```shell Using the above HTML  driver.findElements(new By.ByXPath(""//div[@class='myClass'][contains(text(),'Choice1')]""))  will return an element while  driver.findElements(new By.ByXPath(""//div[@class='myClass'][contains(text(),'Choice2')]""));  will not. ```   ### Relevant log output  ```shell org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""xpath"",""selector"":""//div[@class='myClass'][contains(text(),'Choice2')]""}   (Session info: chrome=98.0.4758.109) For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z' System info: host: 'abcdefg', ip: '192.168.0.2', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.7', java.version: '1.8.0_322' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 98.0.4758.109, chrome: {chromedriverVersion: 97.0.4692.71 (adefa7837d02a..., userDataDir: /var/folders/dc/f7zsptcj163...}, goog:chromeOptions: {debuggerAddress: localhost:52861}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 3de8e929630b629a9fdf209ab3e77747 *** Element info: {Using=xpath, value=//div[@class='myClass'][contains(text(),'Choice2')]}      at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)     at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)     at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:424)     at org.openqa.selenium.By$ByXPath.findElement(By.java:353)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314) ```   ### Operating System  macos catalina  ### Selenium version  Java   ### What are the browser(s) and version(s) where you see this issue?  browserName: chrome, browserVersion: 98.0.4758.109  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriverVersion: 97.0.4692.71  ### Are you using Selenium Grid?  no","closed","I-question,","mandutree","2022-03-08T00:40:35Z","2022-04-08T00:10:38Z"
"","10535","[🐛 Bug]: When use diffrent proxy server, the driver can not start","### What happened?  Code as below: ``` var task = Task.Run(() => {     SignUtils su = new();     su.StartProxyServer();     su.SetProxyPort(8888);      su.exit = false;     su.Sign(listPerson[0].name, listPerson[0].email, listPerson[0].password, 8888);     su.StopProxyServer(); }); task.Wait();  Console.WriteLine(""Finish first proxy"");  await Task.Delay(10*1000);  task = Task.Run(() => {     SignUtils su = new();      su.StartProxyServer();     su.SetProxyPort(9999);     su.exit = false;     su.Sign(listPerson[0].name, listPerson[0].email, listPerson[0].password, 9999);     su.StopProxyServer(); }); task.Wait(); ``` Sign function as below: ``` public void Sign(string? name, string? email, string? password, int port)   {       using (IWebDriver wd = new EdgeDriver())       {           wd.Navigate().GoToUrl(""http://kq.neusoft.com/"");           wd.Quit();        }       } ``` I use Titanium as proxy server, when I set diffreent port, the second time will occur following error: 由于目标计算机积极拒绝，无法连接。 [::ffff:127.0.0.1]:8888 (localhost:8888) 由于目标计算机积极拒绝，无法连接。 [::ffff:127.0.0.1]:8888 (localhost:8888) 由于目标计算机积极拒绝，无法连接。 [::ffff:127.0.0.1]:8888 (localhost:8888)  ### How can we reproduce the issue?  ```shell You can run the code as https://github.com/BurningTeng/Bill.The second task will occur the issue. ```   ### Relevant log output  ```shell The second task will show following log:  由于目标计算机积极拒绝，无法连接。 [::ffff:127.0.0.1]:8888 (localhost:8888) 由于目标计算机积极拒绝，无法连接。 [::ffff:127.0.0.1]:8888 (localhost:8888) 由于目标计算机积极拒绝，无法连接。 [::ffff:127.0.0.1]:8888 (localhost:8888) ```   ### Operating System  Win11  ### Selenium version  C#  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100 and Edge 100.0.1185.36  ### What are the browser driver(s) and version(s) where you see this issue?  MSEdgeDriver 99.0.1150.46 (a1c1ea02160226bf4a0831a74f06de8edf55ffcf)  ### Are you using Selenium Grid?  No","closed","I-issue-template,","BurningTeng","2022-04-10T04:09:27Z","2022-05-12T00:12:42Z"
"","10767","[🐛 Bug]: CI executes pytest using `3.8.10` in ubuntu.","### What happened?  CI is currently executing pytest under a global install of python `3.8.10`.  Given the headaches we had for `4.1` where various `types` that only work on 3.8+ got introduced as well as the sweeping python3.7+ syntax upgrades I will be merging in `4.3` I would like to add a blocker on 4.3 until CI is running everything through python `3.7` as it _should_ be.  ### How can we reproduce the issue?  Look at any *failing* python build in CI; notice how `pytest` is being invoked with `python 3.8.10` this is by mistake as we setup `3.7` prior in actions, I assume its maybe the default/bootstrapped sys python of the ubuntu version? or we need to tweak bazel toolchains etc  Example: https://github.com/SeleniumHQ/selenium/runs/6867087000?check_suite_focus=true#step:9:64","open","bug,","symonk","2022-06-13T16:31:13Z","2022-07-20T18:13:11Z"
"","10384","[🐛 Bug]: Python selenium4 --headless from ChromeOptions doesn't apply if use desired_capabilities","### What happened?  ChromeOptions passed as desired_capabities are lost when passed as command line arguments.  ### How can we reproduce the issue?  ```shell from selenium.webdriver import Chrome, ChromeOptions  options = ChromeOptions() options.add_argument('--headless') caps = options.to_capabilities()  driver = Chrome(desired_capabilities=caps) time.sleep(10) driver.quit() ```   ### Relevant log output  ```shell There is no logs.  Im add print('capabilities is ', capabilities) to webdriver.py:267 and see this: capabilities is  {'browserName': 'chrome', 'pageLoadStrategy': 'normal', 'goog:chromeOptions': {'extensions': [], 'args': []}}  When expected: capabilities is  {'browserName': 'chrome', 'pageLoadStrategy': 'normal', 'goog:chromeOptions': {'extensions': [], 'args': ['--headless']}} ```   ### Operating System  Any  ### Selenium version  Python, 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome 99  ### Are you using Selenium Grid?  No","closed","needs-triaging,","akrasnov-marfatech","2022-02-21T20:01:30Z","2022-03-25T00:09:42Z"
"","10504","[🐛 Bug]: ChromeDriver Failed to open new tab","### What happened?  ChromeDriver Failed to open new tab  ### How can we reproduce the issue?  ```shell ChromeOptions options = new ChromeOptions(); options.addArguments(""--incognito""); ChromiumDriver driver = new ChromeDriver(options); driver.get(""https://www.google.com"");         driver.switchTo().newWindow(WindowType.TAB); ```   ### Relevant log output  ```shell Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [201f8f7d8102097f65a24e565bc8db38, newWindow {type=tab}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.60, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\ramesh\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:53997}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:53997/devtoo..., se:cdpVersion: 100.0.4896.60, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 201f8f7d8102097f65a24e565bc8db38 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.newWindow(RemoteWebDriver.java:1095) ```   ### Operating System  Windows 10  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100.0.4896.60  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 100.0.4896.60  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","RameshBabuPrudhvi","2022-04-01T17:12:44Z","2022-05-02T00:11:01Z"
"","9961","[🐛 Bug]: Chrome Capabilities Regression","### What happened?  Chrome typically heavily relies on many options and desired capabilities. But out of nowhere https://github.com/seleniumhq/selenium/commit/2aea999ba19a6c3e2ce9a35ab008f75665ae59b8 broke our setup, which initializes Chrome by taking our options, converting them to capabilities and using only the capabilities to initialize Chrome.  ### How can we reproduce the issue?  NOT WORKING (but used to work when still in 4 beta):  ```python options = ChromeOptions() options.add_argument('--headless') options.add_argument('--no-sandbox') capabilities = options.to_capabilities() driver = Chrome(desired_capabilities=capabilities) ```  WORKING:  ```python options = ChromeOptions() options.add_argument('--headless') options.add_argument('--no-sandbox') capabilities = options.to_capabilities() driver = Chrome(desired_capabilities=capabilities, options=options) ```   ### Relevant log output  ```shell (most recent call last):   File """", line 1, in      c = Chrome(desired_capabilities=capabilities)   File ""/var/env/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 69, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/var/env/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 93, in __init__     RemoteWebDriver.__init__(   File ""/var/env/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 266, in __init__     self.start_session(capabilities, browser_profile)   File ""/var/env/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 357, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/var/env/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""/var/env/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: crashed.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) Stacktrace: #0 0x55b28246bac3  #1 0x55b281f458f8  #2 0x55b281f68b22  #3 0x55b281f6464d  #4 0x55b281f9e7f0  #5 0x55b281f989f3  #6 0x55b281f6ee14  #7 0x55b281f6fe05  #8 0x55b28249d25e  #9 0x55b2824b2afa  #10 0x55b28249e1b5  #11 0x55b2824b44c8  #12 0x55b28249295b  #13 0x55b2824cf298  #14 0x55b2824cf418  #15 0x55b2824eabed  #16 0x7f8abd103609  ```   ### Operating System  Ubuntu 20.4  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 95.0.4638.54  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 95.0.4638.17 (a9d0719444d4b035e284ed1fce73bf6ccd789df2-refs/branch-heads/4638@{#178})  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","tuky","2021-10-20T17:51:53Z","2021-11-20T00:06:27Z"
"","10449","[🐛 Bug]: Unable to save network request outside lamba scope","### What happened?  Chrome exposed devtools and we are able to get network request response header using Selenium 4,  ""addListener"" method accept 2nd param as **Consumer Interface** so is it possible to store the headers we are printing on command prompt,  in a Map outside the lambda scope ?   OR   I can understand something that since all variables/objects inside lambda scope are effectively final so it is not allowed or designed like this in devTools.addListener() method of Selenium 4 ? Kindly confirm same  ``` devTools.addListener(Network.requestWillBeSent(), request -> {     Headers header = request.getRequest().getHeaders();     if (!header.isEmpty()) {         System.out.println(""Request Headers: "");         header.forEach((key, value) -> {         System.out.println("" "" + key + "" = "" + value);         });     } });  ```  Thanks Amit Jain  ### How can we reproduce the issue?  ```shell We can reproduce issue by simply trying to save the captured network request/response out side lambda scope which currently is not allowed or show compile time error. ```   ### Relevant log output  ```shell NA ```   ### Operating System  Windows10  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome94  ### What are the browser driver(s) and version(s) where you see this issue?  NA  ### Are you using Selenium Grid?  NA","closed","I-question,","amitjaincoer191","2022-03-16T08:28:37Z","2022-04-16T00:10:54Z"
"","10204","[🐛 Bug]: Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.HasAuthentication","### What happened?  Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.HasAuthentication         at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)         at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)         at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)         ... 19 more  ### How can we reproduce the issue?  ```shell public static void main(String[] args) { 	System.setProperty(""webdriver.chrome.driver"", ""D:/plugins/web-driver/chromedriver.exe""); 	WebDriver driver = new ChromeDriver();         driver.get(""https://google.com"");         driver.getTitle(); // => ""Google""         WebElement searchBox = driver.findElement(By.name(""q""));         WebElement searchButton = driver.findElement(By.name(""btnK""));         searchBox.sendKeys(""Selenium"");         searchButton.click();         driver.findElement(By.name(""q"")).getAttribute(""value""); // => ""Selenium""         driver.quit(); } ```   ### Relevant log output  ```shell Exception in thread ""main"" java.lang.NoClassDefFoundError: org/openqa/selenium/HasAuthentication         at java.base/java.lang.ClassLoader.defineClass1(Native Method)         at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)         at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)         at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)         at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)         at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)         at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)         at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)         at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)         at java.base/java.lang.ClassLoader.defineClass1(Native Method)         at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)         at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)         at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)         at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)         at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)         at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)         at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)         at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)         at xyz.idoly.selenium.SeleniumApplication.main(SeleniumApplication.java:18) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.HasAuthentication         at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)         at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)         at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)         ... 19 more ```   ### Operating System  win10  ### Selenium version  selenium-java-4.1.1  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?  selenium-chrome-driver-4.1.1  ### Are you using Selenium Grid?  _No response_","closed","C-java,","idoly","2021-12-31T03:30:36Z","2022-01-31T00:07:18Z"
"","10070","[🐛 Bug]: Cannot find ""locateWith"" in JavaScript environment","### What happened?  Cannot find ""locatewith"" in JavaScript environment.  I noticed a code in `selenium-webdriver/index.js` that ```javascript exports.withLocator = by.withLocator ``` Should ""withLocator "" be changed to ""locateWith""?  ### How can we reproduce the issue?  ```shell const { locateWith } = require('selenium-webdriver'); console.log(locateWith); ```   ### Relevant log output  ```shell undefined ```   ### Operating System  win10  ### Selenium version  javascript 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 96.0.4664.45  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","ULQUIARROSYX","2021-11-21T16:28:19Z","2021-12-23T00:07:19Z"
"","10104","[🐛 Bug]: Incognito mode can't open ""chrome://settings/""","### What happened?  Can't open `chrome://settings/` by selenium using `--incognito` argument. However, if remove this argument, it works! ```python from selenium import webdriver from selenium.webdriver.common.keys import Keys chrome_options = webdriver.ChromeOptions()  chrome_options.add_argument(""--incognito"") # driver = webdriver.Chrome('./chromedriver', options=chrome_options)  # crash! driver = webdriver.Chrome('./chromedriver')  # work! try:     driver.get(""chrome://settings/"")     print('Open!')     driver.execute_script('chrome.settingsPrivate.setDefaultZoom(0.5);')     print('Done!')     driver.get('https://www.baidu.com/')     print('Ok') except Exception:     pass finally:     driver.close() ```  ### How can we reproduce the issue?  ```shell from selenium import webdriver from selenium.webdriver.common.keys import Keys chrome_options = webdriver.ChromeOptions()  chrome_options.add_argument(""--incognito"") driver = webdriver.Chrome('./chromedriver', options=chrome_options) try:     driver.get(""chrome://settings/"")     print('Open!')     driver.execute_script('chrome.settingsPrivate.setDefaultZoom(0.5);')     print('Done!')     driver.get('https://www.baidu.com/')     print('Ok') except Exception:     pass finally:     driver.close() ```   ### Relevant log output  ```shell a007@007deMacBook-Pro se测试 % python3 test.py /Users/a007/se测试/test.py:5: DeprecationWarning: executable_path has been deprecated, please pass in a Service object   driver = webdriver.Chrome('./chromedriver', options=chrome_options) Open! Traceback (most recent call last):   File ""/Users/a007/se测试/test.py"", line 16, in      driver.close()   File ""/opt/homebrew/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 937, in close     self.execute(Command.CLOSE)   File ""/opt/homebrew/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 424, in execute     self.error_handler.check_response(response)   File ""/opt/homebrew/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: chrome not reachable   (Session info: chrome=96.0.4664.55) Stacktrace: 0   chromedriver                        0x0000000103009408 __gxx_personality_v0 + 543364 1   chromedriver                        0x0000000102f9f138 __gxx_personality_v0 + 108468 2   chromedriver                        0x0000000102b9e6a8 chromedriver + 157352 3   chromedriver                        0x0000000102b8ea9c chromedriver + 92828 4   chromedriver                        0x0000000102b821f4 chromedriver + 41460 5   chromedriver                        0x0000000102bed628 chromedriver + 480808 6   chromedriver                        0x0000000102bc3238 chromedriver + 307768 7   chromedriver                        0x0000000102fccc7c __gxx_personality_v0 + 295672 8   chromedriver                        0x0000000102fe0bd8 __gxx_personality_v0 + 377428 9   chromedriver                        0x0000000102fe52b0 __gxx_personality_v0 + 395564 10  chromedriver                        0x0000000102fe19f8 __gxx_personality_v0 + 381044 11  chromedriver                        0x0000000102fc2754 __gxx_personality_v0 + 253392 12  chromedriver                        0x0000000102ffaa38 __gxx_personality_v0 + 483508 13  chromedriver                        0x0000000102ffabac __gxx_personality_v0 + 483880 14  chromedriver                        0x000000010300ffec __gxx_personality_v0 + 570984 15  libsystem_pthread.dylib             0x0000000187def878 _pthread_start + 320 16  libsystem_pthread.dylib             0x0000000187dea5e0 thread_start + ```   ### Operating System  macOS Big Sur  ### Selenium version  python selenium 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  93.0.4577.82 (arm64)  ### What are the browser driver(s) and version(s) where you see this issue?  97.0.4692.20  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","Bollie15","2021-11-30T08:09:50Z","2021-12-31T00:07:22Z"
"","10532","[🐛 Bug]: ""invalid cookie domain"" thrown when on 500 server error page","### What happened?  Calling `webDriver.manage().addCookie(new Cookie(""XDEBUG_SESSION"", ""IDEA""))` when the browser is showing a 500 error screen causes 'invalid cookie domain' exception. This exception is very confusing because the current URL reports the correct domain and the cookie has no domain specified.  Fixing the 500 error and re-running causes the cookie set to succeed.  Many servers will respond with a content body for a 500 error; but some may not. When no body is returned, the browser renders a generic 500 error screen. I suspect it is this generic error screen that is leading to the invalid cookie domain exception, however a missing content body for a response should not impact the cookie or at least cause a more reasonable exception message like ""Cannot set cookie on browser-generated generic error screen for 500 response code""  ### How can we reproduce the issue?  ```shell Using docker image `seleniarm/standalone-chromium:4.1.2-20220227` ```   ### Relevant log output  ```shell org.openqa.selenium.InvalidCookieDomainException: invalid cookie domain           (Session info: chrome=98.0.4758.102)         Build info: version: '4.1.2', revision: '9a5a329c5a'         System info: host: '8047a03e41c1', ip: '172.18.0.6', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-77-generic', java.version: '11.0.14.1'         Driver info: org.openqa.selenium.remote.RemoteWebDriver         Command: [193fd5e6405aec2cc413ddc777afe5c5, addCookie {cookie=XDEBUG_SESSION=IDEA; path=/}]         Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 98.0.4758.102, chrome: {chromedriverVersion: 98.0.4758.102 (273bf7ac8c90..., userDataDir: /tmp/.org.chromium.Chromium...}, goog:chromeOptions: {debuggerAddress: localhost:45225}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), se:cdp: ws://172.27.0.12:4444/sessi..., se:cdpVersion: 98.0.4758.102, se:vnc: ws://172.27.0.12:4444/sessi..., se:vncEnabled: true, se:vncLocalAddress: ws://172.27.0.12:7900, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}         Session ID: 193fd5e6405aec2cc413ddc777afe5c5           at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)           at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)           at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)           at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)           at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)           at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)           at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)           at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)           at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:51)           at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:558)           at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions.addCookie(RemoteWebDriver.java:763) ```   ### Operating System  Linux  ### Selenium version  Java 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 98.0.4758.102  ### What are the browser driver(s) and version(s) where you see this issue?  98.0.4758.102  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","idontusenumbers","2022-04-09T03:53:27Z","2022-05-12T00:12:36Z"
"","10708","[🐛 Bug]: call devtools.target.create_browser_context() failed","### What happened?  call devtools.target.create_browser_context() return error  selenium.webdriver.common.bidi.cdp.BrowserError: BrowserError None  Python 3.8.9   ### How can we reproduce the issue?  ```shell from selenium import webdriver import selenium.webdriver.common.devtools.v101 as devtools   async def create_context(driver):     async with driver.bidi_connection() as session:         cdp_session = session.session         a = await cdp_session.execute(             devtools.target.create_browser_context()         )         print(a)   async def main():     chrome_options = webdriver.ChromeOptions()     chrome_options.add_argument(""--no-sandbox"")     driver = webdriver.Chrome(options=chrome_options)      try:         driver.get(""https://my-location.org/"")         await create_context(driver)         # or driver.execute_cdp_cmd('Target.createBrowserContext', {})     finally:         driver.quit()   if __name__ == '__main__':     import trio     trio.run(main) ```   ### Relevant log output  ```shell Traceback (most recent call last):   File ""/Users/ant/work/selenium4/test_context.py"", line 29, in      trio.run(main)   File ""/Users/ant/work/selenium4/venv/lib/python3.8/site-packages/trio/_core/_run.py"", line 1946, in run     raise runner.main_task_outcome.error   File ""/Users/ant/work/selenium4/test_context.py"", line 21, in main     await create_context(driver)   File ""/Users/ant/work/selenium4/test_context.py"", line 8, in create_context     a = await cdp_session.execute(   File ""/Users/ant/work/selenium4/venv/lib/python3.8/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 203, in execute     raise response selenium.webdriver.common.bidi.cdp.BrowserError: BrowserError None ```   ### Operating System  macOS Monterey  ### Selenium version  Python Selenium 4.1.5  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.61  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 102.0.5005.61  ### Are you using Selenium Grid?  _No response_","open","I-defect,","ant1dot","2022-05-27T12:08:15Z","2022-05-30T12:58:54Z"
"","9938","[🐛 Bug]: IEDriver crashed when call API FindElementByXPath","### What happened?  Build IEDriver from trunk branch. IEDriver crashed when call API FindElementByXPath. The test was made with IEDriver and Edge in IEMode. The crash also happens when test with IEDriver and IE.   ### How can we reproduce the issue?  ```shell using System; using OpenQA.Selenium; using OpenQA.Selenium.IE;  namespace Selenium_Web {     class Program     {         IWebDriver reqDriver = null;         static void Main(string[] args)         {             //change the path accordingly             var dir = @""C:\dev\selenium\build\cpp\x64\Debug"";              var driverexe = ""IEDriverServer.exe"";              var ieService = InternetExplorerDriverService.CreateDefaultService(dir, driverexe);             var ieOptions = new InternetExplorerOptions { IgnoreZoomLevel = true };             ieOptions.PageLoadStrategy = PageLoadStrategy.Eager;             ieOptions.AddAdditionalCapability(""ie.edgechromium"", true);  // comment this line when test with IE             //change the path accordingly             ieOptions.AddAdditionalCapability(""ie.edgepath"", ""C:/Program Files (x86)/Microsoft/Edge/Application/msedge.exe""); // comment this line when test with IE                          InternetExplorerDriver reqDriver = new InternetExplorerDriver(ieService, ieOptions);             reqDriver.Url = ""https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_win_opener"";                          reqDriver.FindElementByXPath(""//button[text()='Run ❯']"").Click();              Console.WriteLine(""Done"");             Console.ReadLine();         }     } } ```   ### Relevant log output  ```shell Started InternetExplorerDriver server (64-bit) 3.150.2.0 Listening on port 58616 Only local connections are allowed Unhandled exception. OpenQA.Selenium.NoSuchElementException: Unable to find element with xpath == //button[text()='Run ?']    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.FindElement(String mechanism, String value)    at OpenQA.Selenium.Remote.RemoteWebDriver.FindElementByXPath(String xpath)    at Selenium_Web.Program.Main(String[] args) in C:\dev\IEDriver test\BrowserAutomation\IEDriverSelenium\Program - Copy.cs:line 26 ```   ### Operating System  Windows 10  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Edge 94  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver 3.150.2.0  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","guangyuexu","2021-10-15T22:38:33Z","2021-11-18T00:06:39Z"
"","10180","[🐛 Bug]: org.openqa.selenium.interactions.MoveTargetOutOfBoundsException IN FireFox version 95 and 94","### What happened?  Browser: Firefox  Version : 96 I have located an element which is available on bottom of the page so i used ""action.moveToElement"" method for navigating on that element but i am getting MoveTargetOutOfBoundsException in Firefox and Safari only but in chrome it is working fine.   Logs attached for Firefox and safari Please check below.  ### How can we reproduce the issue?  ```shell Just call this method to move on the particular element  Actions action = new Actions(DriverProvider.getInstance().getDriver()); action.moveToElement(moveElement).perform(); ```   ### Relevant log output  ```shell org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: (341, 1119) is out of bounds of viewport width (1440) and height (730) Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'LTB0224786-MAC.local', ip: 'fe80:0:0:0:182b:f77b:d928:a013%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.11' Driver info: org.openqa.selenium.firefox.FirefoxDriver Command: [9c5dc7fa-8e40-4047-b149-60dba5364a08, actions {actions=[org.openqa.selenium.interactions.Sequence@14a3d766]}] Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 95.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20211218203254, moz:debuggerAddress: localhost:64204, moz:geckodriverVersion: 0.30.0, moz:headless: false, moz:processID: 1183, moz:profile: /var/folders/6m/mz3rjtx11qn..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: MAC, platformName: MAC, platformVersion: 20.4.0, proxy: Proxy(), se:cdp: ws://localhost:64204/devtoo..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: 9c5dc7fa-8e40-4047-b149-60dba5364a08  	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)      org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'LTB0224786-MAC.local', ip: 'fe80:0:0:0:182b:f77b:d928:a013%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '11.0.11' Driver info: org.openqa.selenium.safari.SafariDriver Command: [E4A6A4DA-58DB-42C3-9FE1-ACC7CAEEBE41, actions {actions=[org.openqa.selenium.interactions.Sequence@5ae79c6]}] Capabilities {acceptInsecureCerts: false, browserName: Safari, browserVersion: 14.1, javascriptEnabled: true, platform: MAC, platformName: MAC, safari:automaticInspection: false, safari:automaticProfiling: false, safari:diagnose: false, safari:platformBuildVersion: 20E241, safari:platformVersion: 11.3.1, safari:useSimulator: false, setWindowRect: true, strictFileInteractability: false, webkit:WebRTC: {DisableICECandidateFiltering: false, DisableInsecureMediaCapture: false}} Session ID: E4A6A4DA-58DB-42C3-9FE1-ACC7CAEEBE41 ```   ### Operating System  MacBook Pro BigSur 11 with M1 chip  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  FireFox 94,95 and Safari 14.1  ### What are the browser driver(s) and version(s) where you see this issue?  i am using webdrivermanager   ### Are you using Selenium Grid?  No","closed","needs-triaging,","Vipin20th","2021-12-24T16:10:02Z","2022-01-24T00:07:37Z"
"","10123","[🐛 Bug]: Issue in Selenium 4- Relative locator.","### What happened?  Below direction enters value in the very next below object and this is not constant. Sometimes this is working fine and adds value in the correct object.   ### How can we reproduce the issue?  ```shell Since using the option for the official site. I am not allowed to provide the details here. ```   ### Relevant log output  ```shell Incorrect textbox identified. ```   ### Operating System  Windows 10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Version 96.0.4664.45 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  Version 96.0.4664.45 (Official Build) (64-bit)  ### Are you using Selenium Grid?  No","closed","I-issue-template,","GokiAmmulu","2021-12-09T07:34:49Z","2022-01-26T00:10:12Z"
"","10465","Bazel Build technical debt","### What happened?  Bazel build documentation outdated and unable to build dotnet sources using Bazel on Windows.   Steps like correctly setting up VCTools and MSBuild environment variables are unclear and there are either missing requirements or unclear specifications for portions of the Bazel build instructions. From what I understood after looking around for support on this topic it looks like this has been a long standing issue, as mention by @jimevans, due to a combination of factors:  > If you try building using `bazel build //dotnet/…`, you’re going to have a Bad Time™. The rule set used to build the .NET bindings is not the “official” Bazel .NET rules, because those rules make some assumptions that run counter to how .NET environments like to build. This is particularly so with multiple framework versions encompassing .NET Framewotk, .NET Core, and the subsequent unification of those with .NET 5 and beyond..  >  > The ones we _do_ use, are much better in that regard, but they’re also wildly incomplete, mostly in the execution of stuff using `bazel test` or `bazel run`. We attempt to use some custom rules in those cases, but they’re, frankly speaking, poorly written. >  > The custom rules’ author (me) doesn’t know what he’s doing when constructing Bazel rules, and no one with any real expertise in writing Bazel rules seems to have any interest in donating effort to make them actually work. Those same people with the proper Bazel skill set also usually have no understanding of the peculiarities of .NET projects, or the know how to make them to work seamlessly on Windows.  - _Originally posted by @jimevans in https://github.com/SeleniumHQ/selenium/issues/9915#issuecomment-944896131_ ---  I recently went through all of the steps in the documentation for a fresh setup, using the linked blog article for WIndows as a reference as well, and after spending a few hours trying to resolve it I was still ultimately unsuccessful in building even the dotnet project via VS command line.  **Note:**  Building just the WebDriver, WebDriver.Support, and WebDriverBackedSelenium dotnet projects from within Visual Studio 2019 works and successfully builds the DLLs for each .NET standard and framework. Building the tests is a different story...  We should potentially consider moving away from the Bazel implementation for complete building via command line.  ### How can we reproduce the issue?  - On latest Windows 10 with latest Visual Studio 2019 and Visual Studio Command Line Tools installed, follow all of the documented steps for setting up the Bazel build environment - You may need to use the linked blog article for assistance with some of the steps - Run command to build dotnet using Bazel: `bazel build //dotnet/`   ### Operating System  Windows 10 v19044.1586  ### Selenium version  Fresh checkout of Selenium 4 trunk","open","C-build,","cgv-wd","2022-03-22T14:43:09Z","2022-03-22T22:52:18Z"
"","10703","[🐛 Bug]: PySelenium doesn't support a named pipe as a log file","### What happened?  As part of [OpenWPM](https://github.com/openwpm/OpenWPM) we use Selenium to drive multiple Firefox browsers in parallel.  To capture, enrich and redirect the browser's logging output, we use named pipes that look like normal log files to Selenium. However pipes don't support seeking so the need to be opened with `w` and not with `a+` as the [`firefox.Service` currently does](https://github.com/SeleniumHQ/selenium/blob/268161f84fb63e3e3e3177eb8b99b812ee3ae413/py/selenium/webdriver/firefox/service.py#L49). [We have previously monkeypatched this](https://github.com/openwpm/OpenWPM/blob/8464741bbfcdbd9aad54686d3f290a060c168488/openwpm/deploy_browsers/selenium_firefox.py#L79-L122) but that approach has led to us breaking every time a new Selenium release comes out. [A newer approach that tries to call `firefox.Service.__init__` and open the `log_file` afterwards](https://github.com/openwpm/OpenWPM/blob/45ffd5a752e88c24607776e62cd2d53c965effb4/openwpm/deploy_browsers/selenium_firefox.py#L80-L105) doesn't work at all, so I wanted to check if there was an appetite to address this issue upstream.  ### How can we reproduce the issue?  ```shell import os from selenium.webdriver import Firefox from selenium.webdriver.firefox.service import Service pipe_name = ""selenium_pipe.log"" os.mkfifo(pipe_name, 0o600) service=Service(executable_path=""firefox"",log_path=pipe_name) driver = Firefox(     service=service ) driver.get(""https://example.com"") ```   ### Relevant log output  ```shell File ""/home/vringar/selenium_mvp/demo.py"", line 9, in      service=Service(executable_path=""firefox"",log_path=pipe_name) File ""/home/stefan/.conda/envs/openwpm/lib/python3.10/site-packages/selenium/webdriver/firefox/service.py"", line 50, in __init__     log_file = open(log_path, ""a+"") if log_path else None io.UnsupportedOperation: File or stream is not seekable. ```   ### Operating System  Linux  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Firefox 100  ### What are the browser driver(s) and version(s) where you see this issue?  GeckoDriver 0.30.0  ### Are you using Selenium Grid?  _No response_","open","I-defect,","vringar","2022-05-27T10:15:06Z","2022-05-27T19:47:01Z"
"","10242","[🐛 Bug]: Performance of Selenium 4 is significantly slower than 3.141.59","### What happened?  As discussed in https://github.com/SeleniumHQ/docker-selenium/issues/1444, the time to init a session is _significantly_ slower in Selenium 4.X than it is in version 3.141.59.  In my instance, with 4.1.1 it is anywhere between 4 and 10 times slower than 3.141.59 to initialise a new session.  When resetting sessions between tests, this adds up to a significant amount and radically slows down test runs. In our case w e have around 12,000 tests. When   ### How can we reproduce the issue?  ```shell I've created a repository to demonstrate the performance to just initialise the session: https://github.com/andrewnicols/selenium-1444 ```   ### Relevant log output  ```shell ➜  selenium-1444 git:(main) node index.js Starting runs for chrome 3.141.59 against http://localhost:5444/wd/hub ================================================== 	Completed run for chrome 3.141.59 against http://localhost:5444/wd/hub 	Average run time for 50 runs: 599.647109117508 Starting runs for chrome 4.1.1 against http://localhost:4444/ ================================================== 	Completed run for chrome 4.1.1 against http://localhost:4444/ 	Average run time for 50 runs: 4900.971164139509 Starting runs for firefox 3.141.59 against http://localhost:5444/wd/hub ================================================== 	Completed run for firefox 3.141.59 against http://localhost:5444/wd/hub 	Average run time for 50 runs: 1001.9559491628409 Starting runs for firefox 4.1.1 against http://localhost:4444/ ================================================== 	Completed run for firefox 4.1.1 against http://localhost:4444/ 	Average run time for 50 runs: 4622.045899059176 ```   ### Operating System  MacOS Monterey 12.1  ### Selenium version  4.1.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 97.0.4692.71, Firefox 95.0.2  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 97.0.4692.71 (adefa7837d02a07a604c1e6eff0b3a09422ab88d-refs/branch-heads/4692@{#1247}), geckodriver 0.30.0 (d372710b98a6 2021-09-16 10:29 +0300)  ### Are you using Selenium Grid?  No, but I believe this is also experienced with Grid (See linked issue)","closed","I-defect,","andrewnicols","2022-01-11T03:41:14Z","2022-02-19T00:09:41Z"
"","10823","[🐛 Bug]: devtools.debugger.resume() can effectively not be used","### What happened?  Applying one of the fixes suggested for issue #10804 , it is now possible to enable the debugger using the provided Selenium wrapper (`debugger.enable()`). However, it seems like the wrapper `debugger.resume()` can effectively not be used, preventing one from resuming JavaScript execution after a breakpoint was triggered.  As the code below demonstrates, the command `session.execute(devtools.debugger.resume())` is not executed. From what I understand, Selenium ""freezes"" at the `button.click()` statement (which triggers the breakpoint), as the missing `""This statement after the click is not executed.""` message illustrates.  As I launched the click method using `nursery.start_soon`, I allowed the execution to actually reach `session.execute(devtools.debugger.resume())`, however, it still does not execute. It seems like the click statement blocks Selenium internally when it tries to send the CDP resume command to Chrome.  As a test website for the code, you can use this small HTML file and host it using `python3 -m http.server`: ```              Click me!   ```  ### How can we reproduce the issue?  ```shell import trio import time from selenium import webdriver from selenium.webdriver.chrome.service import Service from selenium.webdriver.common.by import By from webdriver_manager.chrome import ChromeDriverManager   async def perform_click(driver):     # Locate button and click it     button = driver.find_element(By.ID, ""button"")     button.click()     print(""This statement after the click is not executed."")   async def main():     driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))      async with driver.bidi_connection() as connection:         session, devtools = connection.session, connection.devtools          driver.get('http://localhost:8000/test.html')          # For debugger.enable to work, the fix suggested for issue #10804 has to be applied         await session.execute(devtools.debugger.enable())         await session.execute(devtools.dom_debugger.set_event_listener_breakpoint(""click""))          async with trio.open_nursery() as nursery:             nursery.start_soon(perform_click, driver)             time.sleep(2)             print(""This statement is executed..."")             await session.execute(devtools.debugger.resume())   # ... but this one is not.  trio.run(main) ```   ### Relevant log output  ```shell [WDM] - ====== WebDriver manager ====== [WDM] - Current google-chrome version is 103.0.5060 [WDM] - Get LATEST chromedriver version for 103.0.5060 google-chrome [WDM] - Driver [/home/tim/.wdm/drivers/chromedriver/linux64/103.0.5060.53/chromedriver] found in cache This statement is executed... ```   ### Operating System  Linux Mint 20.1  ### Selenium version  Python 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53  ### Are you using Selenium Grid?  No","closed","I-defect,","TimRecktenwald","2022-06-28T10:31:04Z","2022-07-07T09:51:44Z"
"","10549","Selenium Hub 4.1.3 not working with Appium 1.22.3 through relay option","### What happened?  Android app is keep crashing with below error.  01-20 13:02:22.982 17937 17958 E AndroidRuntime: FATAL EXCEPTION: Instr: androidx.test.runner.AndroidJUnitRunner 01-20 13:02:22.982 17937 17958 E AndroidRuntime: Process: io.appium.uiautomator2.server, PID: 17937 01-20 13:02:22.982 17937 17958 E AndroidRuntime: java.lang.IllegalStateException: UiAutomation not connected! 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at android.app.UiAutomation.throwIfNotConnectedLocked(UiAutomation.java:1198) 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at android.app.UiAutomation.disconnect(UiAutomation.java:294) 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at android.app.Instrumentation.finish(Instrumentation.java:248) 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at androidx.test.runner.MonitoringInstrumentation.finish(MonitoringInstrumentation.java:367) 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at androidx.test.runner.AndroidJUnitRunner.finish(AndroidJUnitRunner.java:415) 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at androidx.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:404) 01-20 13:02:22.982 17937 17958 E AndroidRuntime: 	at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2189)  ### How can we reproduce the issue?  ```shell Environment: Appium: 1.22.3 Selenium Hub with relay node: 4.1.3 Platform: Android java_client: 8.0.0 Selenium: 4  We are using DesiredCapabilities class with java_client 8.0.0.   TOML File:  [server] port = 4444  [node] detect-drivers = false  [relay] # Default Appium server endpoint url = ""http://localhost:4723/wd/hub"" # url = ""http://10.0.0.44:5555/wd/hub"" status-endpoint = ""/status"" # Stereotypes supported by the service configs = [   ""1"", ""{\""browserName\"": \""chrome\"", \""platformName\"": \""android\"", \""appium:platformVersion\"": \""10\""}"" ] ```   ### Relevant log output  ```shell NA ```   ### Operating System  macOS  ### Selenium version  Java Selenium 4  ### What are the browser(s) and version(s) where you see this issue?  Android  ### What are the browser driver(s) and version(s) where you see this issue?  Android  ### Are you using Selenium Grid?  4.0.0","closed","I-defect,","muhammad-ir","2022-04-14T18:47:43Z","2022-06-10T00:11:47Z"
"","10690","[🐛 Bug]: unhandledPromptBehavior doesn't work","### What happened?  am using python 3.9.12 with pip 22.1.1  my localhost has an index.html file with only one line of code: `alert(""hi"")`  expected result is to have the above alert dissapear but it doesnt  ### How can we reproduce the issue?  ```shell from selenium.webdriver import Chrome from selenium.webdriver import ChromeOptions from selenium.webdriver.chrome.service import Service import time options = ChromeOptions() options.set_capability(""unhandledPromptBehavior"", ""dismiss"") service = Service(executable_path=""/usr/local/bin/chromedriver"") driver = Chrome(service=service,options=options) driver.maximize_window() driver.get(""http://localhost:8888"") time.sleep(5) driver.quit() ```   ### Relevant log output  ```shell no output. ```   ### Operating System  macos Montery 12.3.1  ### Selenium version  4.1.5  ### What are the browser(s) and version(s) where you see this issue?  chrome 101.0.4951.64 arm64  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 101.0.4951.41  ### Are you using Selenium Grid?  no","closed","needs-triaging,","TBAIKamine","2022-05-24T20:32:39Z","2022-06-29T00:11:07Z"
"","10091","[🐛 Bug]: Cannot run selenium webdriver.Remote with socks5 proxy enabled.","### What happened?  After upgrading selenium to version 4 on our python repository, our socks5 proxy stopped working with `selenium.Remote`  I believe its linked to this PR : https://github.com/SeleniumHQ/selenium/pull/8297/files  ### How can we reproduce the issue?  Create a file named test.py ```python from selenium import webdriver  browser = webdriver.Remote(""http://127.0.0.1:4444/wd/hub"") ```  Run the following command `HTTP_PROXY=socks5://127.0.0.1:2424 HTTPS_PROXY=socks5://127.0.0.1:2424 python test.py`  ### Relevant log output  ```shell Traceback (most recent call last):   File ""test.py"", line 4, in      browser = webdriver.Remote(""http://127.0.0.1:4444/wd/hub"")   File ""venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 256, in __init__     self.command_executor = get_remote_connection(capabilities, command_executor=command_executor,   File ""venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 131, in get_remote_connection     return handler(command_executor, keep_alive=keep_alive, ignore_proxy=ignore_local_proxy)   File "".venv/lib/python3.9/site-packages/selenium/webdriver/remote/remote_connection.py"", line 172, in __init__     self._conn = self._get_connection_manager()   File "".venv/lib/python3.9/site-packages/selenium/webdriver/remote/remote_connection.py"", line 140, in _get_connection_manager     urllib3.ProxyManager(self._proxy_url, **pool_manager_init_args)   File "".venv/lib/python3.9/site-packages/urllib3/poolmanager.py"", line 480, in __init__     raise ProxySchemeUnknown(proxy.scheme) urllib3.exceptions.ProxySchemeUnknown: Proxy URL had unsupported scheme socks5, should use http:// or https:// ```   ### Operating System  Debian  ### Selenium version  Python 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Remote chrome  ### What are the browser driver(s) and version(s) where you see this issue?  Remote Chrome  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","JeremieDoctrine","2021-11-26T16:56:00Z","2021-12-30T00:07:23Z"
"","10806","[🐛 Bug]: find('canvas').click(x: 100, y: 100) not working","### What happened?  After upgrading `selenium-webdriver` gem 4.2.1 -> 4.3.0 the following stopped working:  ```ruby find('canvas').click(x: 100, y: 100) ```  i.e. it no longer seems to ""draw"" on the canvas, so the test cannot continue due to validation error.  We're using it to draw a signature on a [signature_pad](https://github.com/szimek/signature_pad) canvas.  Any ideas what change I need to make to fix this?  ### How can we reproduce the issue?  ```shell Run that line with 4.3.0, it doesn't ""click"" the ``. ```   ### Relevant log output  ```shell When I run this line on its own, there's no error but it no longer seems to work. ```   ### Operating System  macOS, Ubuntu  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Chromium 103  ### What are the browser driver(s) and version(s) where you see this issue?  selenium-webdriver Ruby with minitest  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","AlecRust","2022-06-24T12:03:29Z","2022-07-30T00:11:55Z"
"","10319","[🐛 Bug]: SelectElement not working after updating selenium webdriver 4 and IEDriverServer 4","### What happened?  after updating selenium WebDriver (3.15 to 4.0.0) and IEDriver (3.150.1 to 4.0.0)  getting below error while setting dropdown value, code was working properly with old selenium version (3):  Error : Cannot click on option element. Executing JavaScript click function returned an unexpected error, but no error could be returned from Internet Explorer's JavaScript engine  HTML :   None India            public By countrySelector = By.Id(""selCountry"");          public string Country         {             set => new SelectElement(Driver.FindElement(countrySelector )).SelectByText(value);         }  Country= ""India""; ```   ### Relevant log output  ```shell Cannot click on option element. Executing JavaScript click function returned an unexpected error, but no error could be returned from Internet Explorer's JavaScript engine ```   ### Operating System  Window server 2016  ### Selenium version  C# Selenium version 4 ,  IEDriver  4  ### What are the browser(s) and version(s) where you see this issue?  Internet Explorer 11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriver  4  ### Are you using Selenium Grid?  no","closed","I-defect,","shlokVK","2022-02-03T10:59:13Z","2022-06-04T00:12:05Z"
"","10498","[🐛 Bug]: (ruby) location_once_scrolled_into_view throws element not interactable","### What happened?  After updating from ruby 2.2.4p230 with selenium-webdriver 3.141.0 to ruby 3.1.1p18 with selenium-webdriver-4.1.0 i got the problem that location_once_scrolled_into_view throws element not interactable. After a lot of research I found https://github.com/watir/watir/issues/884#issuecomment-573124544:  > Selenium is using #send_keys to bring the element into view, which only works for keyboard-interactable elements > I would suggest logging a bug in the Selenium project - ie I don't think it makes sense that their #location_once_scrolled_into_view does not work for label elements.  With that I finally was able to track it back to https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver/remote/bridge.rb:  ``` def element_location_once_scrolled_into_view(element)    send_keys_to_element(element, [''])    element_location(element) end ```  After commenting it out, it got back to work.  ``` def element_location_once_scrolled_into_view(element)    #send_keys_to_element(element, [''])    element_location(element) end ```  I could not find any reason (e.g. in https://www.w3.org/TR/webdriver/#dfn-scrolls-into-view) why this line with #send_keys should be in here.  ### How can we reproduce the issue?  ```shell require 'selenium-webdriver' $driver = Selenium::WebDriver.for :chrome $driver.get ""https://accounts.google.com/signin/v2/identifier?flowName=GlifWebSignIn&hl=en-GB"" ($driver.find_element(:xpath,""//span[contains(text(),'‪English (United Kingdom)‬')]"")).location_once_scrolled_into_view ```   ### Relevant log output  ```shell ""[ERROR]Selenium::WebDriver::Error::ElementNotInteractableError: element not interactable\n  (Session info: chrome=99.0.4844.84)"" ```   ### Operating System  Windows 10  ### Selenium version  selenium-webdriver-4.1.0, ruby 3.1.1p18  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99.0.4844.84  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","seleniumghost","2022-03-31T12:27:36Z","2022-05-03T00:11:07Z"
"","10019","[🐛 Bug]: driver.execute_script() does not work with chromedriver/msedgedriver v96 - return dict and not WebDriver object","### What happened?  After updating chrome and/or msedge to v96, driver.execute_script() no longer works it returns a dict(hash) instead of webDriver element:  I need to execute a shadowRoot pseudo-element in order to get the properties inside the element.  I think there are changes in the browser driver that prevent this from working, I think this can be reproduceable with any pseudo-elements that needs javascript executing.  I've tried all combinations of: ``` options.w3c = True|False options.add_experimental_option('w3c', True|False) ```  Current workaround is not updating beyond v95 of chrome/msedge      ### How can we reproduce the issue?  ``` Example code python link to one of our customer test logins, trying to click a button behins a jsdom.  #!/usr/bin/env python3 import sys import selenium import selenium.webdriver from selenium.webdriver.common.by import By  url = ""https://www.trk.qa-04.buypass.no/key-registration""  # options = selenium.webdriver.EdgeOptions() # options.binary_location = ""C:\\Program Files (x86)\\Microsoft\\Edge Dev\\Application\\msedge.exe"" # #options.w3c = False # #options.add_experimental_option('w3c', True) # options.use_chromium = True # wd = selenium.webdriver.Edge(options=options, service_args=['--verbose'])   # default chrome options = selenium.webdriver.ChromeOptions() options.binary_location = ""C:\\Program Files (x86)\\Google\\Chrome Beta\\Application\\chrome.exe"" #options.w3c = False #options.add_experimental_option('w3c', True) wd = selenium.webdriver.Chrome(options=options)  wd.set_window_size(800,800) print(f""webdriver:{wd.name}, capabilities:{wd.capabilities}"") print(f""type:{type(wd)}"") print(f""python version:{sys.version}"") print(f""selenium version:{selenium.__version__}"")  wd.get(url) el = wd.find_element(By.XPATH, ""//bp-button[@text='Buypass ID']"") shadow_root = wd.execute_script(f""return arguments[0].shadowRoot"", el) print(f""shadow_root:{shadow_root}"") shadow_root.find_element(By.CSS_SELECTOR, ""button"").click() ```  ### Relevant log output ``` chrome v95 works as all previous versions:  python .\bin\chrome-selenium-execute-bug.py  DevTools listening on ws://127.0.0.1:54262/devtools/browser/7904da2f-0317-49fb-a07d-2e7706c20324 [15352:11568:1109/133205.386:ERROR:display_layout.cc(559)] PlacementList must be sorted by first 8 bits of display_id  [15352:11568:1109/133205.700:ERROR:display_layout.cc(559)] PlacementList must be sorted by first 8 bits of display_id  webdriver:chrome, capabilities:{'acceptInsecureCerts': False, 'browserName': 'chrome', 'browserVersion': '95.0.4638.69', 'chrome': {'chromedriverVersion': '95.0.4638.17 (a9d0719444d4b035e284ed1fce73bf6ccd789df2-refs/branch-heads/4638@{#178})', 'userDataDir': 'C:\\Users\\mobj\\AppData\\Local\\Temp\\scoped_dir14728_516592648'}, 'goog:chromeOptions': {'debuggerAddress': 'localhost:54262'}, 'networkConnectionEnabled': False, 'pageLoadStrategy': 'normal', 'platformName': 'windows', 'proxy': {}, 'setWindowRect': True, 'strictFileInteractability': False, 'timeouts': {'implicit': 0, 'pageLoad': 300000,  'script': 30000}, 'unhandledPromptBehavior': 'dismiss and notify', 'webauthn:extension:credBlob': True, 'webauthn:extension:largeBlob': True, 'webauthn:virtualAuthenticators': True} type: python version:3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)] selenium version:4.0.0 shadow_root: ```  chrome v96 does not work: ``` python .\bin\chrome-selenium-execute-bug.py DevTools listening on ws://127.0.0.1:55116/devtools/browser/67905cf2-00b9-4455-9744-6ccd48f654a0 [12352:21508:1109/140012.902:ERROR:display_layout.cc(559)] PlacementList must be sorted by first 8 bits of display_id  [12352:21508:1109/140013.144:ERROR:display_layout.cc(559)] PlacementList must be sorted by first 8 bits of display_id  webdriver:chrome, capabilities:{'acceptInsecureCerts': False, 'browserName': 'chrome', 'browserVersion': '96.0.4664.35', 'chrome': {'chromedriverVersion': '96.0.4664.35 (8df3babf8da8faa8aacb78f4848ef66a93b4944b-refs/branch-heads/4664@{#680})', 'userDataDir': 'C:\\Users\\mobj\\AppData\\Local\\Temp\\scoped_dir15676_76951379'}, 'goog:chromeOptions': {'debuggerAddress': 'localhost:55116'}, 'networkConnectionEnabled': False, 'pageLoadStrategy': 'normal', 'platformName': 'windows', 'proxy': {}, 'setWindowRect': True, 'strictFileInteractability': False, 'timeouts': {'implicit': 0, 'pageLoad': 300000, 'script': 30000}, 'unhandledPromptBehavior': 'dismiss and notify', 'webauthn:extension:credBlob': True, 'webauthn:extension:largeBlob': True, 'webauthn:virtualAuthenticators': True} type: python version:3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)] selenium version:4.0.0 shadow_root:{'shadow-6066-11e4-a52e-4f735466cecf': '07cda0b2-3936-4421-91fa-c0a69d96aa93'} Traceback (most recent call last):   File ""C:\dist\work\trk-fullstack-test\bin\chrome-selenium-execute-bug.py"", line 31, in      shadow_root.find_element(By.CSS_SELECTOR, ""button"").click() AttributeError: 'dict' object has no attribute 'find_element' ```  msedgev97 does not work: ``` python .\bin\chrome-selenium-execute-bug.py [264:11416:1109/134247.963:ERROR:clean_exit_beacon.cc(241)] beacon_file_path_: C:\Users\mobj\AppData\Local\Temp\scoped_dir3512_1790376771\Variations [264:11416:1109/134247.966:ERROR:clean_exit_beacon.cc(141)] got_beacon_file_contents: 0  DevTools listening on ws://127.0.0.1:54551/devtools/browser/c5b4e18b-57bc-4eb0-be57-5a1dbe9b5438  [264:11416:1109/134249.808:ERROR:fallback_task_provider.cc(118)] Every renderer should have at least one task provided by a primary task provider. If a fallback task is shown, it is a bug. Please file a new bug and tag it as a dependency of crbug.com/739782. webdriver:msedge, capabilities:{'acceptInsecureCerts': False, 'browserName': 'msedge', 'browserVersion': '97.0.1060.2', 'ms:edgeOptions': {'debuggerAddress': 'localhost:54551'}, 'msedge': {'msedgedriverVersion': '97.0.1060.2 (0365cba3e5dc1a8b30b892df0cf076eee17919ce)', 'userDataDir': 'C:\\Users\\mobj\\AppData\\Local\\Temp\\scoped_dir3512_1790376771'}, 'networkConnectionEnabled': False, 'pageLoadStrategy': 'normal', 'platformName': 'windows', 'proxy': {}, 'setWindowRect': True, 'strictFileInteractability': False, 'timeouts': {'implicit': 0, 'pageLoad': 300000, 'script': 30000}, 'unhandledPromptBehavior': 'dismiss and notify', 'webauthn:extension:credBlob': True, 'webauthn:extension:largeBlob': True, 'webauthn:virtualAuthenticators': True} type: python version:3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)] selenium version:4.0.0 [264:11416:1109/134251.810:ERROR:fallback_task_provider.cc(118)] Every renderer should have at least one task provided by a primary task provider. If a fallback task is shown, it is a bug. Please file a new bug and tag it as a dependency of crbug.com/739782. shadow_root:{'shadow-6066-11e4-a52e-4f735466cecf': 'a6a68841-eb92-420e-9918-347bf9a70814'} Traceback (most recent call last):   File ""C:\dist\work\trk-fullstack-test\bin\chrome-selenium-execute-bug.py"", line 30, in      shadow_root.find_element(By.CSS_SELECTOR, ""button"").click() AttributeError: 'dict' object has no attribute 'find_element' ```   ### Operating System  windows10, ubuntu20.04LTS  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome96, MSEdge96, MSEdge97  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriverVersion: '96.0.4664.35, msedgedriverVersion: 97.0.1060.2  ### Are you using Selenium Grid?  Na","closed","D-chrome,","fenchu","2021-11-09T13:17:42Z","2021-12-19T00:07:55Z"
"","10434","Cant acess shadowdom element after msedgedriver update","### What happened?  After updating a Microsoft edge browser , when i run my test i have the following error: java.lang.UnsupportedOperationException: getShadowRoot.     ### How can we reproduce the issue?  ```shell WebElement shadowHost = driver.findElement(By.cssSelector(""#shadow_host"")); SearchContext shadowRoot = shadowHost.getShadowRoot(); WebElement shadowContent = shadowRoot.findElement(By.cssSelector(""#shadow_content"")); ```   ### Relevant log output  ```shell [ERROR] Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 32.566 s","closed","I-issue-template,","MilvenCossa","2022-03-10T11:26:02Z","2022-05-09T00:11:10Z"
"","9932","[🐛 Bug]:","### What happened?  After the release of version 4 tests which were using selenium-hub cannot connect to it. Pipeline is in Azure. For some reasons I cannot provide the full code, but here are some contents of docker-compose.yml and mvn files. I hope that there is enough information in them about versions.  P.s. I have tried with another different versions. But it didn't help. Will be very grateful for any help.  ### How can we reproduce the issue?  ```shell Some code snippets.  docker-compose.yml:  version: ""3"" services:   chrome:     image: selenium/node-chrome     depends_on:       - selenium-hub     environment:       - HUB_HOST=selenium-hub       - HUB_PORT=4444       - NODE_MAX_INSTANCES=2       - NODE_MAX_SESSION=2    selenium-hub:     image: selenium/hub     container_name: selenium-hub     ports:       - ""4444:4444""     environment:       - GRID_MAX_SESSION=3    bns_bdd_automation:     depends_on:       - selenium-hub       - chrome     build: .     image: bdd-automation     command: mvn test ""-Dhost=selenium-hub"" ""-Dport=4444""     volumes:       - ./allure-results:/app/target/allure-results       - ./cucumber-report:/app/target/cucumber-report  pom.xml:               8         8         UTF-8         UTF-8         UTF-8         UTF-8         3.141.59         6.9.1         4.3.1         1.8.10      ```   ### Relevant log output  ```shell selenium-hub          | 22:07:17.967 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""f01ef1c68f61e6f58dbaa555cd2d5532"",""eventTime"": 1634162837959247007,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"",""http.host"": ""selenium-hub:4444"",""http.method"": ""POST"",""http.request_content_length"": ""693"",""http.scheme"": ""HTTP"",""http.status_code"": 500,""http.target"": ""\u002fsession"",""http.user_agent"": ""selenium\u002f3.141.59 (java unix)""}} ```   ### Operating System  ubuntu-16.04/18.04/20.04  ### Selenium version  3.141.59  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  chromedriver  ### Are you using Selenium Grid?  _No response_","closed","","GgStormer","2021-10-14T21:00:54Z","2021-11-15T00:06:35Z"
"","10125","[🐛 Bug]: ChromeOptions arguments are converted to lower case","### What happened?  After run the attached code, I can see that the created process in Task Manager looks like below. ""C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"" --**a**rg1=1  What I expect is as below. ""C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"" --**A**rg1=1  I can see that Selenium convert arguments to lower case.  ### How can we reproduce the issue?  ```shell To reproduce, please add a breakpoint in the end and debug below code.  public class Test {     public static void main(String[] args) {         System.setProperty(""webdriver.chrome.driver"", ""tools/96.0.4664.45/chromedriver.exe"");         ChromeOptions options = new ChromeOptions();         options.addArguments(""--Arg1=1"");         WebDriver driver = new ChromeDriver(options);         driver.get(""https://google.com/"");     } } ```   ### Relevant log output  ```shell NA ```   ### Operating System  Windows 10  ### Selenium version  3.141.59  ### What are the browser(s) and version(s) where you see this issue?  96.0.4664.45  ### What are the browser driver(s) and version(s) where you see this issue?  Chrome driver 96.0.4664.45  ### Are you using Selenium Grid?  No","closed","G-chromedriver,","gary-a-zhang","2021-12-10T03:39:25Z","2022-02-04T00:06:33Z"
"","10016","[🐛 Bug]: Selenium Grid loading after linking hub to nodes","### What happened?  After linking the Selenium Grid hub for port `localhost:4444` with Chrome and Firefox browsers, I wanted to check the nodes in the hub with my localhost address but it is just loading and never display the nodes. I tried it with different browsers but they're the same.  ### How can we reproduce the issue?  ```shell 1. linking the hub with nodes: docker run -d -P --link selenium-hub:hub selenium/node-chrome-debug docker run -d -P --link selenium-hub:hub selenium/node-firefox-debug 2. Checking the nodes on Selenium-Grid URL at: http://mylocalhost:4444 ```   ### Relevant log output  ```shell NA ```   ### Operating System  macOS  ### Selenium version  Java 15.0.2  ### What are the browser(s) and version(s) where you see this issue?  Chrome 95.0.4638.69  ### What are the browser driver(s) and version(s) where you see this issue?  selenium-chrome-driver 3.141.59  ### Are you using Selenium Grid?  4.0.0","closed","","haidariaa","2021-11-07T22:32:00Z","2021-12-09T00:06:54Z"
"","10485","[🐛 Bug]: Hub/Node stops responding when scanned by vulnerability scanning software","### What happened?  After a Nessus Scan(vulnerability scanning software) the Website only show the Text ""Loading"" and cant be reached. Should be related to: https://github.com/SeleniumHQ/docker-selenium/issues/1497  ### How can we reproduce the issue?  ```shell HUB: docker run -d -p 4442-4444:4442-4444 --log-level trace --name selenium-hub [Image]  Someone in the comments of the last issues said: ""I was able to recreate the issue using a Nessus Essentials/Home version and performing a ""Basic Network Scan"" against a ""standalone"" grid instance"" ```   ### Relevant log output  ```shell 06:00:37.173 ERROR [UnboundZmqEventBus$PollingRunnable.rejectEvent] - Could not parse event secret, rejecting event. Unable to parse: . Event[id=21871a2c-d64f-4abd-94ef-f1e0045b5153, type=selenium-rejected-event, data={""data"": """",""name"": ""g�=Q,p��B�i\u0015��Ϗ)�\u0000\u0000R�\n�\u0014\u00009\u00008\u0000�\u0000��\u0019\u0000:\u0000��\t�\u0013\u00003\u00002\u0000�\u0000�\u0000E\u0000D�\u0018\u00004\u0000�\u0000F�\u0007�\u0011�\u0016\u0000\u0018�\b�\u0012\u0000\u0016\u0000\u0013�\u0017\u0000\u001b\u00005\u0000�\u0000\u002f\u0000�\u0000A\u0000\u0007\u0000\u0005\u0000\u0004\u0000\n\u0000�""}]  06:01:28.871 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""ccdf5613d8b5354f2465a403517227cb"",""eventTime"": 1648447288870596878,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request for an existing session: Unable to find session with ID: \nBuild info: version: '4.1.3', revision: '7b1ebf28ef'\nSystem info: host: '5cbe48771ea9', ip: '10.88.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.18.0-348.20.1.el8_5.x86_64', java.version: '11.0.14'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.NoSuchSessionException: Unable to find session with ID: \nBuild info: version: '4.1.3', revision: '7b1ebf28ef'\nSystem info: host: '5cbe48771ea9', ip: '10.88.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.18.0-348.20.1.el8_5.x86_64', java.version: '11.0.14'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.sessionmap.local.LocalSessionMap.get(LocalSessionMap.java:129)\n\tat org.openqa.selenium.grid.router.HandleSession.lambda$loadSessionId$4(HandleSession.java:158)\n\tat io.opentelemetry.context.Context.lambda$wrap$2(Context.java:224)\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:121)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""org.openqa.selenium.NoSuchSessionException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.router.HandleSession"",""http.host"": ""[our server]"",""http.method"": ""GET"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fsession\u002f"",""http.user_agent"": ""Mozilla\u002f4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\u002f4.0)"",""session.id"": """"}}  06:03:17.844 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""3bf7c4e86d62820c57f8a3a5dbbb884f"",""eventTime"": 1648447397844099195,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request for an existing session: Unable to find session with ID: login.php\nBuild info: version: '4.1.3', revision: '7b1ebf28ef'\nSystem info: host: '5cbe48771ea9', ip: '10.88.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.18.0-348.20.1.el8_5.x86_64', java.version: '11.0.14'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.NoSuchSessionException: Unable to find session with ID: login.php\nBuild info: version: '4.1.3', revision: '7b1ebf28ef'\nSystem info: host: '5cbe48771ea9', ip: '10.88.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.18.0-348.20.1.el8_5.x86_64', java.version: '11.0.14'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.grid.sessionmap.local.LocalSessionMap.get(LocalSessionMap.java:129)\n\tat org.openqa.selenium.grid.router.HandleSession.lambda$loadSessionId$4(HandleSession.java:158)\n\tat io.opentelemetry.context.Context.lambda$wrap$2(Context.java:224)\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:121)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:91)\n\tat org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""org.openqa.selenium.NoSuchSessionException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.router.HandleSession"",""http.host"": ""[our server]"",""http.method"": ""GET"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fsession\u002flogin.php"",""http.user_agent"": ""Mozilla\u002f4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident\u002f4.0)"",""session.id"": ""login.php""}} ```   ### Operating System  Linux RHEL8  ### Selenium version  4.1.3  ### What are the browser(s) and version(s) where you see this issue?  chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  chrome 99  ### Are you using Selenium Grid?  4.1.3","closed","I-defect,","ehesognp","2022-03-28T06:23:56Z","2022-05-28T00:12:03Z"
"","10601","[🐛 Bug]: Actions Selenium Java mouse action drag and drop not working when cursor type changes after clickandhold","### What happened?  Actions Selenium Java mouse action drag and drop not working when cursor type changes after clickandhold  ### How can we reproduce the issue?  ```shell Actions Selenium Java mouse action drag and drop not working when cursor type changes after clickandhold  Use case:  1. Mouse cursor type: Pointer 2. Move to source element. 3. click and hold with mouse cursor type: changing to a rectangle block. 4. Move to target element and release.   Start Code snippet:  import org.openqa.selenium.interactions.Action; import org.openqa.selenium.interactions.Actions;  builder.moveToElement(fromWebElement).clickAndHold().moveToElement(toWebElement).perform() Thread.sleep(2000); builder.moveToElement(toWebElement).release().build().perform();   or: builder.moveToElement(fromWebElement).dragAndDrop(fromWebElement,toWebElement).clickAndHold().build().perform();  end Code snippet:   Above different code do not work fully. The mouse pointer moves to the source element and clicks on draggable element as i notice the cursor type change to rectangle block to confirm click and hold.  But action of moving to the target element with draggable element does happen.  If i manually move the mouse the cursor type changes back to pointer and i see the pointer move to target element without the draggable element. ```   ### Relevant log output  ```shell noen ```   ### Operating System  Windows Server 2019  ### Selenium version  Java 8  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","icodelongtime","2022-05-02T15:25:42Z","2022-06-04T00:11:59Z"
"","10446","[🐛 Bug]: Chromium based browsers do not throw InsecureCertificateException","### What happened?  Accessing https://self-signed.badssl.com/ using chrome or edge does not throw InsecureCertificateException.  ### How can we reproduce the issue?  ```shell from selenium import webdriver                                                                                                                                                                              driver = webdriver.Chrome()                                                                                                                                                                                 driver.get(""https://self-signed.badssl.com/"") ```   ### Relevant log output  ```shell . ```   ### Operating System  linux  ### Selenium version  python 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  Google Chrome 99.0.4844.51  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.51  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","PhilippSelenium","2022-03-15T10:59:50Z","2022-04-17T00:12:09Z"
"","9935","[🐛 Bug]: [Ruby][4.0.0] driver.on_log_event throws exception","### What happened?  A runtime exception is thrown in ruby when using the method `driver.on_log_event`. I am trying out the cdp examples in [documentation](https://www.selenium.dev/documentation/webdriver/bidi_apis/#listen-to-consolelog-events) in ruby. So I installed selenium-webdriver gem using `gem install selenium-webdriver`. This installed the latest stable `4.0.0`. Then I added `chromedriver` binary in my path, and ran following code snippet: ``` require 'selenium-webdriver'  def run_session   driver = Selenium::WebDriver.for :chrome   driver.get 'http://www.google.com'   logs = []   driver.on_log_event(:console) do |event|     logs.push(event)     puts logs.length   end    driver.execute_script('console.log(""here"")')   driver.quit end  run_session ``` That resulted in the following exception: ``` Traceback (most recent call last):         5: from cdp_commands.rb:16:in `'         4: from cdp_commands.rb:7:in `run_session'         3: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.0/lib/selenium/webdriver/common/driver_extensions/has_log_events.rb:66:in `on_log_event'         2: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.0/lib/selenium/webdriver/common/driver_extensions/has_devtools.rb:33:in `devtools'         1: from /Users/shashikantkadam/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems/core_ext/kernel_require.rb:92:in `require' /Users/shashikantkadam/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems/core_ext/kernel_require.rb:92:in `require': cannot load such file -- selenium/devtools (LoadError) ```  ### How can we reproduce the issue?  ```shell require 'selenium-webdriver'  def run_session   driver = Selenium::WebDriver.for :chrome   driver.get 'http://www.google.com'   logs = []   driver.on_log_event(:console) do |event|     logs.push(event)     puts logs.length   end    driver.execute_script('console.log(""here"")')   driver.quit end  run_session ```   ### Relevant log output  ```shell Traceback (most recent call last):         5: from cdp_commands.rb:16:in `'         4: from cdp_commands.rb:7:in `run_session'         3: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.0/lib/selenium/webdriver/common/driver_extensions/has_log_events.rb:66:in `on_log_event'         2: from /Users/shashikantkadam/.rvm/gems/ruby-2.7.0/gems/selenium-webdriver-4.0.0/lib/selenium/webdriver/common/driver_extensions/has_devtools.rb:33:in `devtools'         1: from /Users/shashikantkadam/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems/core_ext/kernel_require.rb:92:in `require' /Users/shashikantkadam/.rvm/rubies/ruby-2.7.0/lib/ruby/2.7.0/rubygems/core_ext/kernel_require.rb:92:in `require': cannot load such file -- selenium/devtools (LoadError) ```   ### Operating System  macOS Big Sur  ### Selenium version  4.0.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 94  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 94.0.4606.61  ### Are you using Selenium Grid?  No","closed","needs-triaging,","shashikdm","2021-10-15T12:14:35Z","2021-11-15T00:06:34Z"
"","10536","[py] CI tests are intermittently failing for pull requests [list of culprit tests]","### What happened?  A fair few of the python tests in CI are a little flaky; resulting in red builds in most python pull requests at the minute; we are merging a few knowing they are 'flaky' so let's get that fixed up.  Edit: There are quite a few; here is a compiled lists of tests that suffer in CI; getting information for them all is pretty time consuming; but they could use some work.  Some are harder to recreate than others and they _could_ be due to latency in a CI system; most cases are hitting `TimeoutErrors`:   - ~test_full_virtual_authenticator (Todo: Add links)~ (fixed)  - test_click_should_timeout (Todo: Add links)  - test_should_timeout_on_page_load_taking_too_long (Todo: Add links)  - test_collect_log_mutations (BIDI/async) (Todo: Add links)  - test_should_be_able_to_click_element_that_is_out_of_view_in_aframe_that_is_out_of_view[chrome] [output](https://github.com/SeleniumHQ/selenium/runs/6441541077?check_suite_focus=true#step:9:81)  - test_touch_pointer_properties - [output](https://github.com/SeleniumHQ/selenium/runs/6433705992?check_suite_focus=true#step:9:112)   *os*: `ubuntu 20.04` *chromedriver*: `100.0.4896.75` *chrome*: `100`","open","help wanted,","symonk","2022-04-10T14:20:25Z","2022-06-01T15:25:29Z"
"","10426","[🐛 Bug]: npm i selenium-webdriver failed","### What happened?  `npm i selenium-webdriver` failed.  ### How can we reproduce the issue?  ```shell If there's already a `puppeteer` installed, `selenium-webdriver` will fail to be installed. ```   ### Relevant log output  ```shell meme@home a-folder % sudo npm install selenium-webdriver Password: npm ERR! code 1 npm ERR! path /Users/meme/Desktop/projects/a-folder/node_modules/puppeteer npm ERR! command failed npm ERR! command sh -c node install.js npm ERR! ERROR: Failed to set up Chromium r970485! Set ""PUPPETEER_SKIP_DOWNLOAD"" env variable to skip download. npm ERR! Error: connect ECONNREFUSED 127.0.0.1:443 npm ERR!     at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1161:16) { npm ERR!   errno: -61, npm ERR!   code: 'ECONNREFUSED', npm ERR!   syscall: 'connect', npm ERR!   address: '127.0.0.1', npm ERR!   port: 443 npm ERR! }  npm ERR! A complete log of this run can be found in: npm ERR!     /Users/luochao/.npm/_logs/2022-03-09T04_29_57_150Z-debug-0.log ```   ### Operating System  macOS  ### Selenium version  newest  ### What are the browser(s) and version(s) where you see this issue?  newest  ### What are the browser driver(s) and version(s) where you see this issue?  newest  ### Are you using Selenium Grid?  _No response_","closed","R-awaiting answer,","zzzgit","2022-03-09T04:43:58Z","2022-04-15T00:10:37Z"
"","10735","[🐛 Bug]: `getText()` returns inconsistent result across browsers when element text contains redundant whitespaces","### What happened?  `getText()` returns inconsistent result when element text contains redundant whitespaces.  For example, on a webpage, we have HTML like this: ```   Test  text    Here is  some   text   I      wrote     ``` We have more than one whitespace in the text. In most browsers, like Chrome and Safari, the redundant whitespaces will be removed when the HTML gets rendered. However, if we use the selenium webdriver `getText()` command to get the text value, I will get inconsistent results.  In chromedriver, I get no redundant whitespaces: ``` Test text Here is some text I wrote ``` In safari driver, I get the original text with all whitespaces: ```  Test  text    Here is  some   text   I      wrote   ```   ### How can we reproduce the issue?  ```shell I have setup a test content: https://jsfiddle.net/tyao/o0v8jywm/1/  Run below code:  const {Builder, Browser, By, Key, until} = require('selenium-webdriver'); const chrome = require('selenium-webdriver/chrome'); const safari = require('selenium-webdriver/safari');  (async function example() {     const serviceS = new safari.ServiceBuilder('/usr/bin/safaridriver');     let driverS = await new Builder().forBrowser(Browser.SAFARI).build();     console.log('Safari ===========================================================');     await getResult(driverS);      const serviceC = new chrome.ServiceBuilder(require('chromedriver').path);     let driverC = await new Builder().forBrowser(Browser.CHROME).build();     console.log('Chrome ===========================================================');     await getResult(driverC); })();  async function getResult(driver) {     try {         await driver.get('https://jsfiddle.net/tyao/o0v8jywm/1/');         await driver.switchTo().frame('result')         let text1 = await driver.findElement(By.css('#test-double-whitespaces')).getText();         let text2 = await driver.findElement(By.css('#test-whitespaces')).getText();         console.log(text1)         console.log(text2)       } finally {         await driver.quit();       } } ```  You should see output: ``` Safari ===========================================================   Test  text    Here is  some   text   I      wrote     Chrome =========================================================== Test text Here is some text I wrote ``` ``` ```   ### Relevant log output  ```shell No error log ```   ### Operating System  macOs Monterey  ### Selenium version  JavaScript v4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Safari Version 15.4 (17613.1.17.1.13)  ### What are the browser driver(s) and version(s) where you see this issue?  Safari 15.4 (17613.1.17.1.13)  ### Are you using Selenium Grid?  No","closed","G-safaridriver,","tim-yao","2022-06-06T11:17:43Z","2022-07-10T00:14:36Z"
"","10137","Not able tpo open particular page","### What happened?  ``` WebDriver driver; WebDriverManager.chromedriver().setup(); driver =new ChromeDriver(); driver.get(""http://www.google.com""); driver.findElement(By.name(""q"")).sendKeys(""Selenium Automation"");  	}  } ```  ### How can we reproduce the issue?  ```shell I am able to open the chrome browse .But the particular page like here google is not getting opened.  Can you all please guide.Thanks ```   ### Relevant log output  ```shell SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Starting ChromeDriver 96.0.4664.45 (76e4c1bb2ab4671b8beba3444e61c0f17584b2fc-refs/branch-heads/4664@{#947}) on port 49202 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. [1639358729.654][SEVERE]: Unable to receive message from renderer Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:168) 	at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:108) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:104) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:91) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:46) 	at Webdriver_Automatn.session_1.main(session_1.java:17) Caused by: org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException Build info: version: '4.1.0', revision: '87802e897b' System info: host: 'DESKTOP-HC67Q70', ip: '192.168.0.17', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.1' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:72) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:82) 	at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.Execution.executeSync(Execution.java:128) 	at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379) 	at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:82) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$6(RetryRequest.java:82) 	at net.jodah.failsafe.Functions.lambda$get$0(Functions.java:48) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.RetryPolicyExecutor.lambda$supply$0(RetryPolicyExecutor.java:66) 	at net.jodah.failsafe.Execution.executeSync(Execution.java:128) 	at net.jodah.failsafe.FailsafeExecutor.call(FailsafeExecutor.java:379) 	at net.jodah.failsafe.FailsafeExecutor.get(FailsafeExecutor.java:68) 	at org.openqa.selenium.remote.http.RetryRequest.lambda$apply$7(RetryRequest.java:82) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:108) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	... 7 more Caused by: java.util.concurrent.TimeoutException 	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960) 	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:66) 	... 38 more ```   ### Operating System  windows 10  ### Selenium version  selenium 4.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 96.0  ### What are the browser driver(s) and version(s) where you see this issue?  chrome-96.0  ### Are you using Selenium Grid?  _No response_","closed","R-awaiting answer,","deepika-krsna","2021-12-13T02:44:23Z","2022-01-27T00:06:52Z"
"","10253","[🐛 Bug]: wait.Until(ExpectedConditions.ElementToBeClickable ... does not exist in latest nuget","### What happened?  ``` Severity	Code	Description	Project	File	Line	Suppression State Error	CS0103	The name 'ExpectedConditions' does not exist in the current context	 ```  ### Hello, this is not working with latest nuget `C# .net Core 6` update but the docs / help show this, while browsing the code does not., please advise  ``` WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(25));             wait.Until(ExpectedConditions.ElementToBeClickable(By.XPath(""/html/body ```   ### How can we reproduce the issue?  ```shell Update to latest ASP core 6 and use the code above ```   ### Relevant log output  ```shell Update to latest ASP core 6 and use the code above ```   ### Operating System  win 11  ### Selenium version  .NET ASP C# core 6 latest nuget  ### What are the browser(s) and version(s) where you see this issue?  chromium  latest nuget  ### What are the browser driver(s) and version(s) where you see this issue?  chromerdriver latest nuget  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","fasteddys","2022-01-15T04:51:22Z","2022-02-16T00:08:38Z"
"","10422","[🐛 Bug]: I use grid4 automated mobile phone to find elements and prompt ""selenium. Common. Exceptions. Invalidselectorexception: Message: an element could not be located on the page using the given search parameters."", But the location information of this element on the page is also correct.","### What happened?  `1，hub(10.22.64.60)：` `java -jar selenium-server-4.1.1.jar hub`  `2，node（11.204.111.8）：` appium: `appium --session-override -a 11.204.111.8 -p 4726  -U  连接一体机手机的UDID  --log-level error --relaxed-security`  1.tom: ``` [server] port = 5555  [node] detect-drivers = false grid-url = ""http://10.22.64.60:4444"" hub = ""http://10.22.64.60:4444""  [relay] # Default Appium server endpoint url = ""http://11.204.111.8:4726/wd/hub"" status-endpoint = ""/status"" # Stereotypes supported by the service [[relay.configs]] max-sessions = 1 stereotype = '{""browserName"": ""chrome"", ""platformName"": ""android"", ""appium:platformVersion"": ""11"",""nodename:applicationName"":""huawei honor 10""}}'  [events] publish = ""tcp://10.22.64.60:4442"" subscribe = ""tcp://10.22.64.60:4443"" ``` `java -jar selenium-server-4.1.1.jar node --config  1.toml`  `3，client(10.22.64.60)` #selenium GRID专用 ``` host=""http://localhost:4444/wd/hub"" def get_driver(): 	'''生成deiver''' 	caps = {} 	caps[""platformName""] = ""Android"" 	# caps[""platformVersion""] = ""7.1.2"" 	# caps[""deviceName""] = ""P7CDU18C03003486        device"" 	# caps[""deviceName""] = udid 	# caps[""udid""] = udid 	# caps[""deviceName""] = ""127.0.0.1:62001 device""  	# 新架构app 	#caps[""appPackage""] = ""com.picc.etong"" 	# caps[""appActivity""] = ""com.picc.etong.etongmain.main.GroupLoginActivity"" 	#caps[""appActivity""] = ""com.picc.nmmslogin.activity.GroupWelcomeActivity""  	#老版app 	caps[""appPackage""] = ""com.picc.nx"" 	# caps[""appActivity""] = ""com.picc.nx.ui.activity.MainActivity"" 	# caps[""appActivity""] = ""com.picc.nx.ui.activity.common.locker.WholePatternCheckingActivity""  	# caps[""appActivity""] = ""com.picc.nx.ui.activity.user.LoginActivity""  	caps[""appActivity""] = ""com.picc.nx.ui.activity.extras.SplashActivity""  	#Don't reset app state before this session.  	caps[""noReset""] = True 	#Have Appium automatically determine which permissions your app requires and grant them to the app on install. Defaults to false. If noReset is true, this capability doesn't work. 	# caps[""autoGrantPermissions""] = True 	#为了输入框输入中文 	caps[""unicodeKeyboard""] = True 	caps[""resetKeyboard""] = True 	#How long (in seconds) Appium will wait for a new command from the client before assuming the client quit and ending the session 	caps[""newCommandTimeout""] = 180 	#Timeout in milliseconds used to wait for adb command execution. Defaults to 20000 	caps[""adbExecTimeout""] = 180000 	# caps[""automationName""] = ""UiAutomator1"" 	#Set the output format for logcat messages since Appium 1.18.0. Supported formats are listed in here. Please read logcat#outputFormat for more details about each format. Defaults to threadtime. 	caps[""logcatFormat""] = ""time"" 	#Set the output filter rule for logcat messages since Appium 1.18.0. Please read logcat#filteringOutput for more details about the rule. Write and View Logs with Logcat is also helpful. 	caps[""logcatFilterSpecs""] = ['*:E'] 	#在每次会话开始时清除logcat日志 	caps[""clearDeviceLogsOnStart""] = True 	caps[""chromeOptions""] = {""w3c"": False} 	driver = webdriver.Remote(host, caps) 	driver.implicitly_wait(global_wait)  	return driver ``` YZB_CB_HKT_case_01.py: ```  @when_error_screenshot     @logcatlogger     def test_case_01(self):         '''清单-验标-投保单'''          self.logging.info(""*********************登录页面*********************"")          LP=LoginPage(self.logging)          #登录耘智保         LP.login_by_sss(self.driver) ``` LoginPage.py: ``` #coding=utf-8 from appium.webdriver.common.touch_action import TouchAction from test_page.BasePage import BasePage from public.sss import get_point_pos from public.common import get_element class LoginPage(BasePage): 	'''登录页所有操作'''  	def login_by_sss(self,driver): 		'''手势锁登录''' 		self.logging.info(""*画手势锁登录*"") 		try: 			el1 = get_element(driver,'id','com.picc.nx:id/patternLockerView') 		except: 			self.logging.error(""*非手势锁页面*"") 		else: 			p1=get_point_pos(el1) 			TouchAction(driver).press(x=int(p1[1][0]),y=int(p1[1][1])).move_to(x=int(p1[3][0]),y=int(p1[3][1])).wait(100).move_to(x=int(p1[7][0]),y=int(p1[7][1])).wait(10).move_to(x=int(p1[5][0]),y=int(p1[5][1])).wait(10).release().perform() ``` common.py: ``` def get_element(driver,method,value):     '''封装find_ellement_by_*()方法'''     e=None     if method=='id':         e=driver.find_element_by_id(value)     elif method=='xpath':         e=driver.find_element_by_xpath(value)      elif method=='class':         e=driver.find_element_by_class_name(value)      elif method==""content-desc"":         e=driver.find_element_by_accessibility_id(value)      elif method==""text"":         e=driver.find_element_by_android_uiautomator(""text(\""""+value+""\"")"")      return e ```  **4,error** ``` ft1.1: Traceback (most recent call last):   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 27, in testPartExecutor     yield   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 188, in run     testMethod()   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\common2.py"", line 123, in wrapper     func(self)   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\common2.py"", line 45, in wrapper     func(self)   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\test_case\YZB_CB_HKT_case_01.py"", line 92, in test_case_01     LP.login_by_sss(self.driver)   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\test_page\LoginPage.py"", line 13, in login_by_sss     el1 = get_element(driver,'id','com.picc.nx:id/patternLockerView')   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\common.py"", line 16, in get_element     e=driver.find_element_by_id(value)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 360, in find_element_by_id     return self.find_element(by=By.ID, value=id_)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\appium\webdriver\webdriver.py"", line 279, in find_element     return self.execute(RemoteCommand.FIND_ELEMENT, {   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\appium\webdriver\errorhandler.py"", line 31, in check_response     raise wde   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\appium\webdriver\errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidSelectorException: Message: An element could not be located on the page using the given search parameters. For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DZB11117303RK', ip: '11.204.111.8', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '11.0.10' Driver info: org.openqa.selenium.grid.node.CustomLocatorHandler$CustomWebDriver Command: [d6b391f9-8699-4a47-b83c-7907eeb03700, findElement {using=id, value=com.picc.nx:id/patternLockerView}] Capabilities {} Session ID: d6b391f9-8699-4a47-b83c-7907eeb03700 ```     ### How can we reproduce the issue?  ```shell #selenium GRID专用  host=""http://localhost:4444/wd/hub"" def get_driver(): 	'''生成deiver''' 	caps = {} 	caps[""platformName""] = ""Android"" 	# caps[""platformVersion""] = ""7.1.2"" 	# caps[""deviceName""] = ""P7CDU18C03003486        device"" 	# caps[""deviceName""] = udid 	# caps[""udid""] = udid 	# caps[""deviceName""] = ""127.0.0.1:62001 device""  	# 新架构app 	#caps[""appPackage""] = ""com.picc.etong"" 	# caps[""appActivity""] = ""com.picc.etong.etongmain.main.GroupLoginActivity"" 	#caps[""appActivity""] = ""com.picc.nmmslogin.activity.GroupWelcomeActivity""  	#老版app 	caps[""appPackage""] = ""com.picc.nx"" 	# caps[""appActivity""] = ""com.picc.nx.ui.activity.MainActivity"" 	# caps[""appActivity""] = ""com.picc.nx.ui.activity.common.locker.WholePatternCheckingActivity""  	# caps[""appActivity""] = ""com.picc.nx.ui.activity.user.LoginActivity""  	caps[""appActivity""] = ""com.picc.nx.ui.activity.extras.SplashActivity""  	#Don't reset app state before this session.  	caps[""noReset""] = True 	#Have Appium automatically determine which permissions your app requires and grant them to the app on install. Defaults to false. If noReset is true, this capability doesn't work. 	# caps[""autoGrantPermissions""] = True 	#为了输入框输入中文 	caps[""unicodeKeyboard""] = True 	caps[""resetKeyboard""] = True 	#How long (in seconds) Appium will wait for a new command from the client before assuming the client quit and ending the session 	caps[""newCommandTimeout""] = 180 	#Timeout in milliseconds used to wait for adb command execution. Defaults to 20000 	caps[""adbExecTimeout""] = 180000 	# caps[""automationName""] = ""UiAutomator1"" 	#Set the output format for logcat messages since Appium 1.18.0. Supported formats are listed in here. Please read logcat#outputFormat for more details about each format. Defaults to threadtime. 	caps[""logcatFormat""] = ""time"" 	#Set the output filter rule for logcat messages since Appium 1.18.0. Please read logcat#filteringOutput for more details about the rule. Write and View Logs with Logcat is also helpful. 	caps[""logcatFilterSpecs""] = ['*:E'] 	#在每次会话开始时清除logcat日志 	caps[""clearDeviceLogsOnStart""] = True 	caps[""chromeOptions""] = {""w3c"": False} 	driver = webdriver.Remote(host, caps) 	driver.implicitly_wait(global_wait)  	return driver ``` YZB_CB_HKT_case_01.py: ```  @when_error_screenshot     @logcatlogger     def test_case_01(self):         '''清单-验标-投保单'''          self.logging.info(""*********************登录页面*********************"")          LP=LoginPage(self.logging)          #登录耘智保         LP.login_by_sss(self.driver) ``` LoginPage.py: ``` #coding=utf-8 from appium.webdriver.common.touch_action import TouchAction from test_page.BasePage import BasePage from public.sss import get_point_pos from public.common import get_element class LoginPage(BasePage): 	'''登录页所有操作'''  	def login_by_sss(self,driver): 		'''手势锁登录''' 		self.logging.info(""*画手势锁登录*"") 		try: 			el1 = get_element(driver,'id','com.picc.nx:id/patternLockerView') 		except: 			self.logging.error(""*非手势锁页面*"") 		else: 			p1=get_point_pos(el1) 			TouchAction(driver).press(x=int(p1[1][0]),y=int(p1[1][1])).move_to(x=int(p1[3][0]),y=int(p1[3][1])).wait(100).move_to(x=int(p1[7][0]),y=int(p1[7][1])).wait(10).move_to(x=int(p1[5][0]),y=int(p1[5][1])).wait(10).release().perform() ``` common.py: ``` def get_element(driver,method,value):     '''封装find_ellement_by_*()方法'''     e=None     if method=='id':         e=driver.find_element_by_id(value)     elif method=='xpath':         e=driver.find_element_by_xpath(value)      elif method=='class':         e=driver.find_element_by_class_name(value)      elif method==""content-desc"":         e=driver.find_element_by_accessibility_id(value)      elif method==""text"":         e=driver.find_element_by_android_uiautomator(""text(\""""+value+""\"")"")      return e ``` ```   ### Relevant log output  ```shell ft1.1: Traceback (most recent call last):   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 27, in testPartExecutor     yield   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 188, in run     testMethod()   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\common2.py"", line 123, in wrapper     func(self)   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\common2.py"", line 45, in wrapper     func(self)   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\test_case\YZB_CB_HKT_case_01.py"", line 92, in test_case_01     LP.login_by_sss(self.driver)   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\test_page\LoginPage.py"", line 13, in login_by_sss     el1 = get_element(driver,'id','com.picc.nx:id/patternLockerView')   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\common.py"", line 16, in get_element     e=driver.find_element_by_id(value)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 360, in find_element_by_id     return self.find_element(by=By.ID, value=id_)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\appium\webdriver\webdriver.py"", line 279, in find_element     return self.execute(RemoteCommand.FIND_ELEMENT, {   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\appium\webdriver\errorhandler.py"", line 31, in check_response     raise wde   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\appium\webdriver\errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidSelectorException: Message: An element could not be located on the page using the given search parameters. For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DZB11117303RK', ip: '11.204.111.8', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '11.0.10' Driver info: org.openqa.selenium.grid.node.CustomLocatorHandler$CustomWebDriver Command: [d6b391f9-8699-4a47-b83c-7907eeb03700, findElement {using=id, value=com.picc.nx:id/patternLockerView}] Capabilities {} Session ID: d6b391f9-8699-4a47-b83c-7907eeb03700 ```   ### Operating System  HUB:windows server 2008 R2;NODE:win7;clent:windows server 2008 R2  ### Selenium version  python3.8.5 selenium3.14.1  ### What are the browser(s) and version(s) where you see this issue?  IE11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer_win32_3.141.0  ### Are you using Selenium Grid?  selenium-server-4.1.1.jar","closed","needs-triaging,","tianyao1111","2022-03-08T13:57:58Z","2022-04-09T00:11:17Z"
"","10096","[🐛 Bug]: FirefoxDriverService.cs one line change breaks geckodriver ConnectToRunningBrowser","### What happened?  [dotnet] Add --websocket-port command line argument for geckodriver **argsBuilder.Append(string.Format(CultureInfo.InvariantCulture, "" --websocket-port {0}"", PortUtilities.FindFreePort()));**  This breaks the firefoxdriver ability to connect to an already open browser when using --connect-existing.  geckodriver: The argument '--connect-existing' cannot be used with '--websocket-port  The websocket-port should not be blindly added when all the other parms are conditional...  ### How can we reproduce the issue?  ```shell FirefoxDriverService firefoxDriverService = FirefoxDriverService.CreateDefaultService(browserSettings.DriverLocation);                     firefoxDriverService.HideCommandPromptWindow = false;                     firefoxDriverService.Port = 0;                     firefoxDriverService.BrowserCommunicationPort = 2828;                     firefoxDriverService.Host = ""127.0.0.1"";                     firefoxDriverService.ConnectToRunningBrowser = true;                     var tmpDriver = new FirefoxDriver(firefoxDriverService, ffOptions); ```   ### Relevant log output  ```shell geckodriver: The argument '--connect-existing' cannot be used with '--websocket-port ```   ### Operating System  win 10  ### Selenium version  latest  ### What are the browser(s) and version(s) where you see this issue?  firefox  ### What are the browser driver(s) and version(s) where you see this issue?  most recent geckodriver  ### Are you using Selenium Grid?  _No response_","closed","","deadmike","2021-11-27T22:20:42Z","2022-01-26T00:09:40Z"
"","10835","[🐛 Bug]: Opera Browser in Selenium 4 Usage","### What happened?  2 points. 1.  As commit message mentioned, Selenium Deprecated Opera Support by non-W3C support [[java] Add deprecated warnings to OperaDriver and OperaOptions](https://github.com/seleniumhq/selenium/commit/b3f9d377d04dcefb5bfbc6fbdaffccf946bfedda)  But as below code, Opera support W3C by additional option, so do we still need remove Opera in Selenium? JWP --> ``` @Test   public void operaOptionsTest() {      operaOptions = new OperaOptions(); //    operaOptions.setExperimentalOption(""w3c"",true);     driver = new OperaDriver(operaOptions);     driver.get(""https://www.bing.com/"");    } //in log --> 7月 02, 2022 12:01:49 上午 org.openqa.selenium.remote.ProtocolHandshake createSession 信息: Detected upstream dialect: OSS ``` W3C  ``` @Test public void operaOptionsTest() {   operaOptions = new OperaOptions();   operaOptions.setExperimentalOption(""w3c"",true);   driver = new OperaDriver(operaOptions);   driver.get(""https://www.bing.com/""); } // in log --> 7月 02, 2022 12:05:22 上午 org.openqa.selenium.remote.ProtocolHandshake createSession 信息: Detected upstream dialect: W3C ``` reference:  https://github.com/operasoftware/operachromiumdriver/issues/96#issuecomment-985291083 https://github.com/operasoftware/operachromiumdriver/issues/100#issuecomment-1134277851  2. ChromeDriver doesn't not work well with Opera As doc mentioned, it expect to work under ChromeOptions https://www.selenium.dev/documentation/webdriver/getting_started/open_browser/#opera  But throw exception on my side ``` @Test public void operaWithChromeOptionsTest() {   // ChromeDriver is 102.0.5005.61   // Opera is 88 based on Chrome/102.0.5005.115   chromeOptions = new ChromeOptions();   chromeOptions.setBinary(""/${OPERA_HOME}/opera.exe"");   driver = new ChromeDriver(chromeOptions);   driver.get(""https://www.ianzhang.cn/""); } // org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: exited normally. //  (unknown error: DevToolsActivePort file doesn't exist) ``` ![image](https://user-images.githubusercontent.com/3264250/176943764-d6c22590-0b05-465f-ad55-bd1e52dd3dc0.png)   But chromeOptions with deprecated OperaDriver is fine, (it still need work with opera driver) ``` @Test public void operaWithChromeOptionsAndOperaDriverTest() {   chromeOptions = new ChromeOptions();   chromeOptions.setBinary(""/${OPERA_HOME}/opera.exe"");   driver = new OperaDriver(chromeOptions);   driver.get(""https://www.ianzhang.cn/""); } ``` So, any solution if user want to work with Opera by Selenium 4?    ### How can we reproduce the issue?  ```shell See above ```   ### Relevant log output  ```shell See above ```   ### Operating System  Windows 11  ### Selenium version  4.3.0  ### What are the browser(s) and version(s) where you see this issue?  Opera 88 (based on Chrome 102)  ### What are the browser driver(s) and version(s) where you see this issue?  OperaDriver 102, ChromeDriver 102  ### Are you using Selenium Grid?  No","open","I-defect,","alaahong","2022-07-01T17:36:45Z","2022-07-01T19:11:54Z"
"","10262","[🐛 Bug]: 404 in Ruby documentation ""TimeoutError.html""","### What happened?  1. Open https://www.selenium.dev/selenium/docs/api/rb/index.html 2. Click WebDriver->Wait from left frame, it navigates to ""https://www.selenium.dev/selenium/docs/api/rb/Selenium/WebDriver/Wait.html"" 3. Scroll to the bottom and click TimeOutError   ![image](https://user-images.githubusercontent.com/2890751/149895421-967ca23f-a5d6-4eb7-83e5-835cabfc8df9.png)   Actual Result  Getting 404   ![image](https://user-images.githubusercontent.com/2890751/149895674-858444a4-1df9-4c5f-8eb3-8af645423f38.png)   Expected Result TimeOutError Class Explanation htmp page   ### What browsers and operating systems are you seeing the problem on?  OS: Mac Monterey Browser: Google Chrome Browser version: Version 97.0.4692.71 (Official Build) (x86_64)","closed","C-rb,","veenadevi","2022-01-18T08:06:32Z","2022-02-19T00:09:44Z"
"","10469","[🐛 Selenium4 is unable to launch chrome browser in docker container]:","### What happened?  1. Create a Selenium 4 Maven project with JUnit  2. Create a docker file to execute test cases over docker container 3. Execute the jenkins pipeline job to run the test 4. After executing jenkins pipeline job our chrome browser is launching in docker container with the latest version of chromedriver but crashing immediately.  ### How can we reproduce the issue?  ```shell My Docker File Details : ARG MAVEN_VERSION=${MAVEN_VERSION:-3.6.1} ENV MAVEN_VERSION=${MAVEN_VERSION} ENV MAVEN_HOME=/usr/apache-maven-${MAVEN_VERSION} ENV PATH=${PATH}:${MAVEN_HOME}/bin RUN curl -sL http://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \   | gunzip \   | tar x -C /usr/ \   && ln -s ${MAVEN_HOME} /usr/maven ENV PATH=${PATH}:${JAVA_HOME}/bin   RUN wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm && \     yum localinstall google-chrome-stable_current_x86_64.rpm -y  && \     rm -rf google-chrome-stable_current_x86_64.rpm   RUN echo ""net.ipv6.conf.all.disable_ipv6 = 1"" >> /etc/sysctl.conf && \     echo ""net.ipv6.conf.default.disable_ipv6 = 1"" >> /etc/sysctl.conf   These are the chrome options that we are passing :   ChromeOptions options = new ChromeOptions() ; options.addArguments(""--disable-gpu"") ; options.addArguments(""--shm-size=2g""); ```   ### Relevant log output  ```shell 10:04:51  ------------------------------------------------------- 10:04:51   T E S T S 10:04:51  ------------------------------------------------------- 10:04:52  Running selenium.webdriverTest 10:04:52  path of driver is :/usr/local/bin/chromedriver 10:04:53  SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". 10:04:53  SLF4J: Defaulting to no-operation (NOP) logger implementation 10:04:53  SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. 10:04:54  Starting ChromeDriver 99.0.4844.51 (d537ec02474b5afe23684e7963d538896c63ac77-refs/branch-heads/4844@{#875}) on port 51616 10:04:54  Only local connections are allowed. 10:04:54  Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. 10:04:54  ChromeDriver was started successfully. 10:04:54  [1648010094.058][SEVERE]: CreatePlatformSocket() failed: Address family not supported by protocol (97) 10:04:57  Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 4.99 sec","closed","I-question,","AC49184","2022-03-23T08:03:34Z","2022-04-23T00:10:07Z"
"","10421","[🐛 Bug]: I use grid4 to start ie11, driver Get (URL), prompt ""parameters property of command is not a valid JSON object""","### What happened?  - hub(10.22.64.60):  `java -jar selenium-server-4.1.1.jar hub`  - node(11.204.111.8):  web1.tom: ``` [server] port = 5556  [node] detect-drivers = false grid-url = ""http://10.22.64.60:4444"" hub = ""http://10.22.64.60:4444""  [[node.driver-configuration]] display-name = ""internet explorer"" max-sessions = 1 stereotype = ""{\""browserName\"": \""internet explorer\"", \""browserVersion\"": \""11\"", \""platformName\"": \""WINDOWS\""}"" webdriver-executable = '节点机driver地址'  [events] publish = ""tcp://10.22.64.60:4442"" subscribe = ""tcp://10.22.64.60:4443"" ``` `java -jar selenium-server-4.1.1.jar node --config  web1.toml`  - clent(10.22.64.60):  ``` def get_web_driver(url,data=None,kill_all_ie=True): 	chrome_capabilities = { 				""browserName"": ""internet explorer"",		# 浏览器名称 				""version"": ""11"",				  # 操作系统版本 				""platform"": ""WINDOWS"",			  # 平台，这里可以是windows、linux、andriod等等 				""javascriptEnabled"": True,	  # 是否启用js 				#""webdriver.chrome.driver"": chrome_driver 			} 	driver = webdriver1.Remote('http://localhost:4444/wd/hub', desired_capabilities=chrome_capabilities) 	driver.get(url) 	driver.maximize_window() 	driver.implicitly_wait(global_wait) 	#等待页面加载 	driver.find_element_by_xpath('//a[@id=""overridelink""]')  	#点击详细信息 	driver.execute_script(""javascript:expandCollapse('infoBlockID', true);"")  	#转到此网页 	WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.XPATH, '//a[@id=""overridelink""]'))) 	ele=driver.find_element_by_xpath('//a[@id=""overridelink""]') 	str1='return arguments[0].click();' 	driver.execute_script(str1, ele) 	return driver ```  - error:  ``` ft1.1: Traceback (most recent call last):   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 27, in testPartExecutor     yield   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 184, in run     self.setUp()   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\test_case\YZB_CB_HKT_case_01.py"", line 70, in setUp     self.driver=get_web_driver(self.data['web_CB_url'])   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\get_driver.py"", line 87, in get_web_driver     driver.get(url)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 333, in get     self.execute(Command.GET, {'url': url})   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: parameters property of command is not a valid JSON object ```  ### How can we reproduce the issue?  ```shell def get_web_driver(url,data=None,kill_all_ie=True): 	chrome_capabilities = { 				""browserName"": ""internet explorer"",		# 浏览器名称 				""version"": ""11"",				  # 操作系统版本 				""platform"": ""WINDOWS"",			  # 平台，这里可以是windows、linux、andriod等等 				""javascriptEnabled"": True,	  # 是否启用js 				#""webdriver.chrome.driver"": chrome_driver 			} 	driver = webdriver1.Remote('http://localhost:4444/wd/hub', desired_capabilities=chrome_capabilities) 	driver.get(url) 	driver.maximize_window() 	driver.implicitly_wait(global_wait) 	#等待页面加载 	driver.find_element_by_xpath('//a[@id=""overridelink""]')  	#点击详细信息 	driver.execute_script(""javascript:expandCollapse('infoBlockID', true);"")  	#转到此网页 	WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.XPATH, '//a[@id=""overridelink""]'))) 	ele=driver.find_element_by_xpath('//a[@id=""overridelink""]') 	str1='return arguments[0].click();' 	driver.execute_script(str1, ele) 	return driver ```   ### Relevant log output  ```shell ft1.1: Traceback (most recent call last):   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 27, in testPartExecutor     yield   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\MyTestCase.py"", line 184, in run     self.setUp()   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\test_case\YZB_CB_HKT_case_01.py"", line 70, in setUp     self.driver=get_web_driver(self.data['web_CB_url'])   File ""C:\Users\Administrator\Desktop\UITestAND_PICC_YZB\public\get_driver.py"", line 87, in get_web_driver     driver.get(url)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 333, in get     self.execute(Command.GET, {'url': url})   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: parameters property of command is not a valid JSON object ```   ### Operating System  HUB:windows server 2008 R2;NODE:win7;clent:windows server 2008 R2  ### Selenium version  python3.8.5 selenium3.14.1  ### What are the browser(s) and version(s) where you see this issue?  IE11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer_win32_3.141.0  ### Are you using Selenium Grid?  selenium-server-4.1.1.jar","closed","needs-triaging,","tianyao1111","2022-03-08T13:44:29Z","2022-04-10T00:11:01Z"
"","10435","[🐛 Bug]: When I use GRID4 to control the web, it prompts 'An invalid or illegal selector was specified', but sometimes this piece does not report an error","### What happened?  - hub `java -jar selenium-server-4.1.1.jar hub`  - node web1.tom: ``` [server] port = 5556  [node] detect-drivers = false  [[node.driver-configuration]] display-name = ""internet explorer"" max-sessions = 1 stereotype = ""{\""browserName\"": \""internet explorer\"", \""browserVersion\"": \""11\"", \""platformName\"": \""WINDOWS\""}"" webdriver-executable = 'C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\tools\IEDriverServer_Win32_4.0.0\IEDriverServer_Win32_4.0.0.exe' ``` `java -jar selenium-server-4.1.1.jar node --config  C:\Users\14221\Desktop\项目资料\人保E通新架构\web1.toml`  - client get_driver.py: ``` def get_web_driver(url,data=None,kill_all_ie=True):         global_wait=30 	chrome_capabilities = { 				""browserName"": ""internet explorer"",		# 浏览器名称 				""version"": ""11"",				  # 操作系统版本 				""platform"": ""WINDOWS"",			  # 平台，这里可以是windows、linux、andriod等等 				""javascriptEnabled"": True,	  # 是否启用js 				#""webdriver.chrome.driver"": chrome_driver 			} 	driver=webdriver.Remote(host, desired_capabilities=chrome_capabilities) 	driver.get(url) 	driver.maximize_window() 	driver.implicitly_wait(global_wait) 	#等待页面加载 	driver.find_element_by_xpath('//a[@id=""overridelink""]')  	#点击详细信息 	driver.execute_script(""javascript:expandCollapse('infoBlockID', true);"")  	#转到此网页 	WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.XPATH, '//a[@id=""overridelink""]'))) 	ele=driver.find_element_by_xpath('//a[@id=""overridelink""]') 	str1='return arguments[0].click();' 	driver.execute_script(str1, ele) 	return driver ``` YZB_CB_HKT_case_01.py: ``` global product_info self.wins = {} self.wins['首页'] = self.driver.current_window_handle # 登录农险核心系统 CBWebLoginPage(self.logging).login(self.driver, self.data['web_CB_user'], self.data['web_CB_pwd']) ``` CBWebLoginPage.py: ``` from test_page.BasePage import BasePage from public.common import get_visibile_element,js_click class CBWebLoginPage(BasePage):  	def input_userName(self,driver,val): 		self.logging.info(""*录入用户名-%s*""%val) 		ele=get_visibile_element(driver,'id','username1') 		ele.clear() 		ele.send_keys(val)  	def input_pwd(self,driver,val): 		self.logging.info(""*录入密码-%s*""%val) 		ele=get_visibile_element(driver,'id','password1') 		ele.clear() 		ele.send_keys(val)  	def click_login(self,driver): 		self.logging.info(""*点击登录*"") 		ele=get_visibile_element(driver,'id','button') 		js_click(driver,ele)  	def login(self,driver,user,pwd): 		self.input_userName(driver,user) 		self.input_pwd(driver,pwd) 		self.click_login(driver) ``` common.py: ``` def get_visibile_element(driver,method,value):     '''查找可见元素'''     e=None     if method=='id':         e=WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.ID, value)))      elif method=='xpath':         e=WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.XPATH, value)))     return e ```  - error ``` ft1.1: test_case_02---{} Traceback (most recent call last):   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\common2.py"", line 123, in wrapper     func(self)   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\test_case\YZB_CB_HKT_case_01.py"", line 300, in test_case_02     CBWebLoginPage(self.logging).login(self.driver, self.data['web_CB_user'], self.data['web_CB_pwd'])   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\test_page\CBWebLoginPage.py"", line 24, in login     self.input_userName(driver,user)   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\test_page\CBWebLoginPage.py"", line 8, in input_userName     ele=get_visibile_element(driver,'id','username1')   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\common.py"", line 54, in get_visibile_element     e=WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.ID, value)))   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\wait.py"", line 82, in until     raise e   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\wait.py"", line 78, in until     value = method(self._driver)   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 127, in _predicate     raise e   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 125, in _predicate     return _element_if_visible(driver.find_element(*locator))   File ""C:\Python39\lib\site-packages\appium\webdriver\webdriver.py"", line 414, in find_element     return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 30, in check_response     raise wde   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidSelectorException: Message: An invalid or illegal selector was specified For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-H3KEKEV', ip: '11.204.111.178', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.10' Driver info: org.openqa.selenium.grid.node.CustomLocatorHandler$CustomWebDriver Command: [33128463-5d15-4c24-98a0-642598db2182, findElement {using=id, value=username1}] Capabilities {} Session ID: 33128463-5d15-4c24-98a0-642598db2182 Stacktrace: org.openqa.selenium.InvalidSelectorException: An invalid or illegal selector was specified For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-H3KEKEV', ip: '11.204.111.178', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.10' Driver info: org.openqa.selenium.grid.node.CustomLocatorHandler$CustomWebDriver Command: [33128463-5d15-4c24-98a0-642598db2182, findElement {using=id, value=username1}] Capabilities {} Session ID: 33128463-5d15-4c24-98a0-642598db2182 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.grid.node.CustomLocatorHandler$NodeWrappingExecutor.execute(CustomLocatorHandler.java:236) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) 	at org.openqa.selenium.grid.node.CustomLocatorHandler.execute(CustomLocatorHandler.java:202) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.node.Node.execute(Node.java:240) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:834)   During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\MyTestCase.py"", line 27, in testPartExecutor     yield   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\MyTestCase.py"", line 188, in run     testMethod()   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\common2.py"", line 129, in wrapper     if hasattr(self.driver, 'current_context'):   File ""C:\Python39\lib\site-packages\appium\webdriver\extensions\context.py"", line 46, in current_context     return self.execute(Command.GET_CURRENT_CONTEXT)['value']   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 30, in check_response     raise wde   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Command not found: GET /session/33128463-5d15-4c24-98a0-642598db2182/context ```  ### How can we reproduce the issue?  ```shell get_driver.py:  def get_web_driver(url,data=None,kill_all_ie=True):         global_wait=30 	chrome_capabilities = { 				""browserName"": ""internet explorer"",		# 浏览器名称 				""version"": ""11"",				  # 操作系统版本 				""platform"": ""WINDOWS"",			  # 平台，这里可以是windows、linux、andriod等等 				""javascriptEnabled"": True,	  # 是否启用js 				#""webdriver.chrome.driver"": chrome_driver 			} 	driver=webdriver.Remote(host, desired_capabilities=chrome_capabilities) 	driver.get(url) 	driver.maximize_window() 	driver.implicitly_wait(global_wait) 	#等待页面加载 	driver.find_element_by_xpath('//a[@id=""overridelink""]')  	#点击详细信息 	driver.execute_script(""javascript:expandCollapse('infoBlockID', true);"")  	#转到此网页 	WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.XPATH, '//a[@id=""overridelink""]'))) 	ele=driver.find_element_by_xpath('//a[@id=""overridelink""]') 	str1='return arguments[0].click();' 	driver.execute_script(str1, ele) 	return driver ``` YZB_CB_HKT_case_01.py: ``` global product_info self.wins = {} self.wins['首页'] = self.driver.current_window_handle # 登录农险核心系统 CBWebLoginPage(self.logging).login(self.driver, self.data['web_CB_user'], self.data['web_CB_pwd']) ``` CBWebLoginPage.py: ``` from test_page.BasePage import BasePage from public.common import get_visibile_element,js_click class CBWebLoginPage(BasePage):  	def input_userName(self,driver,val): 		self.logging.info(""*录入用户名-%s*""%val) 		ele=get_visibile_element(driver,'id','username1') 		ele.clear() 		ele.send_keys(val)  	def input_pwd(self,driver,val): 		self.logging.info(""*录入密码-%s*""%val) 		ele=get_visibile_element(driver,'id','password1') 		ele.clear() 		ele.send_keys(val)  	def click_login(self,driver): 		self.logging.info(""*点击登录*"") 		ele=get_visibile_element(driver,'id','button') 		js_click(driver,ele)  	def login(self,driver,user,pwd): 		self.input_userName(driver,user) 		self.input_pwd(driver,pwd) 		self.click_login(driver) ``` common.py: ``` def get_visibile_element(driver,method,value):     '''查找可见元素'''     e=None     if method=='id':         e=WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.ID, value)))      elif method=='xpath':         e=WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.XPATH, value)))     return e ``` ```   ### Relevant log output  ```shell ft1.1: test_case_02---{} Traceback (most recent call last):   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\common2.py"", line 123, in wrapper     func(self)   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\test_case\YZB_CB_HKT_case_01.py"", line 300, in test_case_02     CBWebLoginPage(self.logging).login(self.driver, self.data['web_CB_user'], self.data['web_CB_pwd'])   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\test_page\CBWebLoginPage.py"", line 24, in login     self.input_userName(driver,user)   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\test_page\CBWebLoginPage.py"", line 8, in input_userName     ele=get_visibile_element(driver,'id','username1')   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\common.py"", line 54, in get_visibile_element     e=WebDriverWait(driver, global_wait).until(EC.visibility_of_element_located((By.ID, value)))   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\wait.py"", line 82, in until     raise e   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\wait.py"", line 78, in until     value = method(self._driver)   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 127, in _predicate     raise e   File ""C:\Python39\lib\site-packages\selenium\webdriver\support\expected_conditions.py"", line 125, in _predicate     return _element_if_visible(driver.find_element(*locator))   File ""C:\Python39\lib\site-packages\appium\webdriver\webdriver.py"", line 414, in find_element     return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 30, in check_response     raise wde   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidSelectorException: Message: An invalid or illegal selector was specified For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-H3KEKEV', ip: '11.204.111.178', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.10' Driver info: org.openqa.selenium.grid.node.CustomLocatorHandler$CustomWebDriver Command: [33128463-5d15-4c24-98a0-642598db2182, findElement {using=id, value=username1}] Capabilities {} Session ID: 33128463-5d15-4c24-98a0-642598db2182 Stacktrace: org.openqa.selenium.InvalidSelectorException: An invalid or illegal selector was specified For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception Build info: version: '4.1.1', revision: 'e8fcc2cecf' System info: host: 'DESKTOP-H3KEKEV', ip: '11.204.111.178', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.10' Driver info: org.openqa.selenium.grid.node.CustomLocatorHandler$CustomWebDriver Command: [33128463-5d15-4c24-98a0-642598db2182, findElement {using=id, value=username1}] Capabilities {} Session ID: 33128463-5d15-4c24-98a0-642598db2182 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.grid.node.CustomLocatorHandler$NodeWrappingExecutor.execute(CustomLocatorHandler.java:236) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162) 	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:66) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359) 	at org.openqa.selenium.grid.node.CustomLocatorHandler.execute(CustomLocatorHandler.java:202) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.node.Node.execute(Node.java:240) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:834)   During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\MyTestCase.py"", line 27, in testPartExecutor     yield   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\MyTestCase.py"", line 188, in run     testMethod()   File ""C:\Users\14221\Desktop\project-git\UITestAND_PICC_YZB\public\common2.py"", line 129, in wrapper     if hasattr(self.driver, 'current_context'):   File ""C:\Python39\lib\site-packages\appium\webdriver\extensions\context.py"", line 46, in current_context     return self.execute(Command.GET_CURRENT_CONTEXT)['value']   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 418, in execute     self.error_handler.check_response(response)   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 30, in check_response     raise wde   File ""C:\Python39\lib\site-packages\appium\webdriver\errorhandler.py"", line 26, in check_response     super().check_response(response)   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 243, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Command not found: GET /session/33128463-5d15-4c24-98a0-642598db2182/context ```   ### Operating System  win10  ### Selenium version  python selenium 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  IE11  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer_win32_4.0.0  ### Are you using Selenium Grid?  selenium-server-4.1.1.jar","closed","I-issue-template,","tianyao1111","2022-03-10T11:53:52Z","2022-04-15T00:10:36Z"
"","10569","[🐛 Bug]: Selenium Edge with IEMode( IEDriverServer (4.0.0.0) Unable to create session when run on locked VDI","### What happened?  **Scenario-** Execution of the selenium code in the locked window or on some remote desktop.  **Issue-** Following error is encountered whenever the selenium script is put on execution while window is locked. **Error-** java.net.SocketException: Connection reset.  Same code is working fine when the window is unlocked. Though I have used the ""requireWindowFocus()"" capability also yet the issue persists.  The above scenario works with the following setup Selenium 4 IE Driver Server 4.0.0 _IE 11._  The above scenario doesn't work with following setup Selenium 4 IE Driver Server 4.0.0 _IE Compatibility mode in Edge_   ### How can we reproduce the issue?  ```shell here is the code that is being used to launch the browser in IE compatibility mode in Edge.   private WebDriver initIEDriver(String appURL) {         try {             System.out.println(""Launching Internet Explorer with new profile.."");             System.setProperty(""webdriver.ie.driver"", ""Driver\\IEDriverServer.exe"");             InternetExplorerOptions edgeIe11Options = new InternetExplorerOptions();             Map ops = (Map) edgeIe11Options.getCapability(""se:ieOptions"");             ops.put(""ie.edgechromium"", true);             ops.put(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");    // Edge Browser directory path             edgeIe11Options.introduceFlakinessByIgnoringSecurityDomains();             edgeIe11Options.ignoreZoomSettings();             edgeIe11Options.enablePersistentHovering();             edgeIe11Options.takeFullPageScreenshot();             edgeIe11Options.setCapability(""nativeEvents"", false);             edgeIe11Options.requireWindowFocus();             edgeIe11Options.destructivelyEnsureCleanSession();              edgeIe11Options.setCapability(""ignoreProtectedModeSettings"", true);             edgeIe11Options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.IGNORE);              this.driver = new InternetExplorerDriver(edgeIe11Options);             System.out.println(""t1"");             this.driver.manage().window().maximize();             this.driver.manage().timeouts().pageLoadTimeout(60L, TimeUnit.SECONDS);             this.driver.manage().timeouts().implicitlyWait(60L, TimeUnit.SECONDS);             this.driver.get(appURL);         } catch (Exception var4) {             System.out.println(""Error in InternetExplorer-->"" + var4.getMessage());         }          return this.driver;     } ```   ### Relevant log output Whenever we lock the window the following error is encountered otherwise it executes fine with unlocked window.. ```shell Error in InternetExplorer-->java.net.SocketException: Connection reset Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:01:39.354Z' ```   ### Operating System  Window 10  ### Selenium version  Selenium 3.7.1  ### What are the browser(s) and version(s) where you see this issue?  IECompatibility mode in Edge... IE11 and Edge exe - Version 100.0.1185.44  ### What are the browser driver(s) and version(s) where you see this issue?  InternetExplorerDriver server (32-bit) 4.0.0.0 . Its not navigate to the URL while run on locked window/VDI and throws Error- java.net.SocketException: Connection reset  ### Are you using Selenium Grid? No _No response_","closed","G-msedgedriver,","Gauravgupta1501","2022-04-21T09:08:06Z","2022-05-22T00:11:33Z"
"","10373","[🐛 Bug]: Node not registering on Hub for non Dockerised grid 4 on AWS Ec2","### What happened?  **I've create 3 Ec2 Instance all with Elastic IP .In Grid 4 I'm able to create a hub but when I'm trying to register the node machines.**   it only giving the **[NodeServer$1.lambda$start$1] - Sending registration event**.  **In Grid Version 3 with selenium server 3.141 jar I am able to register the node from different machine.**  ![MicrosoftTeams-image](https://user-images.githubusercontent.com/20920506/154750832-9f0b6cdb-cdfe-4ece-a3bc-8cb136aaa9d5.png)  **In Grid Version 4 with Selenium Server 4.1.2 For same machine hub and node working but I am not able to register any node from different machine.**      **Hub Registered with Version 4**     **Node is not registering.**        ### How can we reproduce the issue?  ```shell On Machine 1  java -jar selenium-server-4.1.2.jar hub  On Machine 2 java -jar selenium-server-4.1.2.jar node --detect-drivers true --publish-events  tcp://172.168.1.157:4442 --subscribe-events tcp://172.168.1.157:4443 ```   ### Relevant log output  ```shell Logs For Hub machine:  C:\Users\Administrator\Desktop\bat>java -jar selenium-server-4.1.2.jar hub 19:24:30.166 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 19:24:30.166 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 19:24:30.463 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.168.1.157:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.168.1.157:4443] 19:24:30.544 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.168.1.157:4442 and tcp://172.168.1.157:4443 19:24:30.575 INFO [UnboundZmqEventBus.] - Sockets created 19:24:31.591 INFO [UnboundZmqEventBus.] - Event bus ready 19:24:32.559 INFO [Hub.execute] - Started Selenium Hub 4.1.2 (revision 9a5a329c5a): http://172.168.1.157:4444    Logs For Node machine:   19:04:51.991 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 19:04:51.994 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 19:04:52.061 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.168.1.157:4442 and tcp://172.168.1.157:4443 19:04:52.084 INFO [UnboundZmqEventBus.] - Sockets created 19:04:53.090 INFO [UnboundZmqEventBus.] - Event bus ready 19:04:53.157 INFO [NodeServer.createHandlers] - Reporting self as: http://169.254.228.24:5555 19:04:53.172 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors 19:04:53.187 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 19:04:53.204 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 12 times 19:04:53.204 INFO [NodeOptions.report] - Adding Safari for {""browserName"": ""safari""} 1 times 19:04:53.217 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 19:04:53.312 INFO [NodeServer$1.start] - Starting registration process for node id 20fae541-650b-4042-9b8d-91e5471d03b8 19:04:53.312 INFO [NodeServer.execute] - Started Selenium node 4.1.2 (revision 9a5a329c5a): http://169.254.228.24:5555 19:04:53.318 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:05:03.328 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:05:13.337 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:05:23.346 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:05:33.351 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:05:43.360 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:05:53.363 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:06:03.370 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:06:13.378 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:06:23.381 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:06:33.388 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:06:43.396 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 19:06:53.314 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ### Operating System  Mac, Windows, Ubantu ec2  ### Selenium version  Selenium server 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  For Grid 4  ### What are the browser driver(s) and version(s) where you see this issue?  Safari  ### Are you using Selenium Grid?  4.1.2","closed","I-question,","TahirAkhlaq","2022-02-18T19:59:20Z","2022-03-25T00:09:43Z"
"","10831","[🐛 Bug]: Zombie ChromeDriver with data:, involving session request queue (Python PoC)","### What happened?  **DESCRIPTION**  There is a (reproducible) situation where a zombie ChromeDriver page with `data:,` is created.  This happens when a driver quits (due to session-request-timeout) and yet a Chrome session is created for that script, which has just quit. Since the script is no more, the Chrome session is left orphan with a `data:,`.  This can be reproduced easily by playing with a timer in a script.  **SETUP**  Using a hub and a single node with one single available chrome session:  Command to start the hub:  `java -jar selenium-server-4.3.0.jar hub --config hub.toml`  Content of hub.toml:  ``` [server] host = ""localhost"" port = 4444 [sessionqueue] session-request-timeout = 10 ```  Command to start the node:  `java -jar selenium-server-4.3.0.jar node --config node.toml`  Content of node.toml:  ``` [node] detect-drivers = true driver-implementation = [""chrome""] max-sessions = 1 grid-url = ""http://localhost:4444"" session-timeout = 5 ```  **HOW TO REPRODUCE**  The simplest way I've found to reproduce this issue is by executing 2 scripts simultaneously:  The first one (occupy.py) blocks the unique session for arround 'session-request-timeout' seconds. The second one (dummy.py), waits in the session request queue for 'session-request-timeout' seconds, and quits the driver without getting a session (apparently, since it actually ""gets"" one).  The second one will be given a session (although the script has already quitted the driver), and a zombie `data:,` chrome is left open.  _Check the Code section for both scripts._  Running those simultaneously (occupy.py and dummy.py) with  ``` start python ""occupy.py"" start python ""dummy.py"" ```  (in that order) will:  1. (occupy.py) Open _about:blank_ 2. (occupy.py) quit and close Chrome window 3. (dummy.py) quit driver 3. A zombie `data:,` chrome is left open  The _about:blank_ for the second script (dummy.py) is never opened, since the script has quitted, but the session persists.  This has to do with timings (see `time.wait(7.5)` at occupy.py), which might need to be adjusted by adding or substracting at most one unit (seconds). Tested in several versions (check below).   ### How can we reproduce the issue?  ```shell [occupy.py]  from selenium import webdriver driver = webdriver.Remote(command_executor = ""http://localhost:4444"", desired_capabilities = {""browserName"": ""chrome""}) driver.get(""about:blank"") import time time.sleep(7.5) # session-request-timeout = 10 (substract aprox 2.5 sec, may vary +- 1 sec.) driver.quit()   [dummy.py]  from selenium import webdriver driver = webdriver.Remote(command_executor = ""http://localhost:4444"", desired_capabilities = {""browserName"": ""chrome""}) driver.get(""about:blank"") driver.quit() ```   ### Relevant log output  ```shell . ```   ### Operating System  Windows 10  ### Selenium version  Java 4.3.0, Java 4.1.3  ### What are the browser(s) and version(s) where you see this issue?  Chrome 103.0.5060.66 64-bit, Chrome v.101.0.4951.67  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 103.0.5060.53, ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  4.3.0, 4.1.3","closed","I-defect,","AcidCaos","2022-06-30T10:17:40Z","2022-07-07T09:20:35Z"
"","10912","[🐛 Bug]: Modifier keys for MacOS 'control' (⌃, ""\u2303"") and 'option' (⌥, ""\u2325"") unavailable","### What happened?  (observed with python bindings, but examination of `Keys` in Java seemed to proved the same)  Using the Keys class, one cannot press the Mac modifier keys ""control"" (different from ""command"") or ""option"". The inability to use these keys represents a gap between what's possible with Selenium vs end user; the keys can prove useful when writing tests.  ### How can we reproduce the issue?  ```shell See for example https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/common/keys.py, which does not contain said keys. ```   ### Relevant log output  ```shell Not needed to reproduce ```   ### Operating System  macOS  ### Selenium version  Python 4.3.0  ### What are the browser(s) and version(s) where you see this issue?  I have only tried Chrome but... it is clearly browser-agnostic  ### What are the browser driver(s) and version(s) where you see this issue?  clearly driver-agnostic  ### Are you using Selenium Grid?  no","closed","R-awaiting answer,","cpeck-rmvd","2022-07-28T23:09:46Z","2022-08-01T17:17:04Z"
"","10781","[🐛 Bug]: PATH not properly read.","### What happened?  ### Selenium failed to find the geckodriver executable inside the `$PATH` variable.   I tried a custom entry in the path, pointing to a folder in my home directory `/home/alisot2000/.geckodriver`, I tried `/usr/local/bin` and `/usr/bin`.   The GeckoDriver works perfectly fine, if provided as an argument when instantiating `webdriver.Firefox(executable_path=""/path/to/geckodriver"")`.  I went through the code executed with the debugger of Pycharm and it didn't seem to ""load"" the Environment variable of the OS. It just used the `DEFAULT_EXECUTABLE_PATH = ""geckodriver""` inside the firefox/service.py file as the `executable_path`. I also tried to put only the parent directory of the geckodriver in the `$PATH` variable as well as putting the path to the executable directly into the `$PATH` variable, both with equal result.   I read the file `common/service.py` containing the follow part: ```python     def start(self):         """"""         Starts the Service.          :Exceptions:          - WebDriverException : Raised either when it can't start the service            or when it can't connect to the service         """"""         try:             cmd = [self.path]             cmd.extend(self.command_line_args())             self.process = subprocess.Popen(cmd, env=self.env, #","closed","I-defect,","AliSot2000","2022-06-17T07:04:04Z","2022-07-21T00:12:31Z"
"","10552","[🐛 Bug]: RemoteWebDriver - Unexpected error creating WebSocket DevTools session.","### What happened?  ### Issue This issue happens when attempting to retrieve a Dev Tools session using a `RemoteWebDriver` instance connecting to Selenium hosted on a remote server. In this case, I hosted the grid as **Hub & Node** style where all are hosted in a Kubernetes Cluster.  When retrieving the Dev Tools session, the error logged seems to indicate that the Node **IP Address** and **Port Number** that is being connected to is not responding (either invalid/blocked). Based on the example log output provided, `10.32.129.130:4444` is the Selenium Node **IP Address** and **Port Number** that it is trying to connect to.  ### Expected The **IP Address** is correct, but the **Port Number** used is wrong as the Selenium Node being hosted uses a default port number of 5555, which may explain the failure to connect when retrieving the Dev Tools session.  Is it possible to change the port number used to connect and create Dev Tools session (assuming the wrong port number is the one causing the issue)?  ### How can we reproduce the issue?  ```shell // Create options var options = new OpenQA.Selenium.Chrome.ChromeOptions(); options.AddArguments(""--no-sandbox"", ""--disable-dev-shm-usage"", ""--disable-gpu"", ""--disable-cache"", ""--disable-infobars"", ""--window-size=1366,768"", ""--start-maximized"", ""--disable-extensions"", ""--remote-debugging-port=9230"", ""--disable-blink-features=AutomationControlled"", ""user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.93 Safari/537.36"");  // Create Driver var driver = new OpenQA.Selenium.Remote.RemoteWebDriver(new Uri(""http://:4444/wd/hub""), options.ToCapabilities(), TimeSpan.FromMinutes(1));  // Start DevTools session (Error here) var devToolsSession = driver.GetDevToolsSession(); ```   ### Relevant log output  ```shell OpenQA.Selenium.WebDriverException: Unexpected error creating WebSocket DevTools session.  ---> System.Net.WebSockets.WebSocketException (0x80004005): Unable to connect to the remote server  ---> System.Net.Http.HttpRequestException: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond. (10.32.129.130:4444)  ---> System.Net.Sockets.SocketException (10060): A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.    at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)    at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)    at System.Net.Sockets.Socket.g__WaitForConnectWithCancellation|277_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)    at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)    --- End of inner exception stack trace ---    at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)    at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)    at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)    at System.Net.Http.HttpConnectionPool.AddHttp11ConnectionAsync(HttpRequestMessage request)    at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)    at System.Net.Http.HttpConnectionPool.GetHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)    at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)    at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)    at System.Net.WebSockets.WebSocketHandle.ConnectAsync(Uri uri, CancellationToken cancellationToken, ClientWebSocketOptions options)    at System.Net.WebSockets.WebSocketHandle.ConnectAsync(Uri uri, CancellationToken cancellationToken, ClientWebSocketOptions options)    at System.Net.WebSockets.ClientWebSocket.ConnectAsyncCore(Uri uri, CancellationToken cancellationToken)    at OpenQA.Selenium.DevTools.DevToolsSession.InitializeSocketConnection()    at OpenQA.Selenium.DevTools.DevToolsSession.StartSession(Int32 requestedProtocolVersion)    at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession(Int32 protocolVersion)    --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession(Int32 protocolVersion)    at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession()    ... ```   ### Operating System  Google Kubernetes Engine Cluster  ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 100  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 100.0.4896.60  ### Are you using Selenium Grid?  4.1.3","closed","C-devtools,","wongkhaimeng","2022-04-16T07:22:56Z","2022-06-01T00:13:42Z"
"","10607","[🐛 Bug]: Unable to switchTo().Frame(iframe) on iframes inside a shadow dom","### What happened?  ### Description Whenever I try to call Driver.switchTo().Frame(iframeElem) on an iframe inside of a shadow dom I get a NullReferenceException instead.  #### Context We are testing how our product integrates when embedded into test LMS sites. This test was working until one LMS made an update wrapping embedded content in a shadow dom. We need to switch to the iframe to verify the content loaded correctly.  ### Repro Steps 1. Put an iframe inside of a shadow dom 2. Attempt to retrieve the iframe in a test and switch to it  #### Expected:  I can switch to the iframe and verify some of the content inside of it.   #### Actual: I got a System.NullReferenceException when trying to switch to the frame. When I debug the test the iframe element does not appear to be null when it is passed to Frame(iframe).  Message:      System.NullReferenceException : Object reference not set to an instance of an object.   Stack Trace:      **EventFiringTargetLocator.Frame(IWebElement frameElement)**     LMSBase.SwitchToEmbedViewerFrame(Boolean isViewerNested) line 76     LMSTestBase.OpenViewer(Boolean isViewerNested) line 282     D2LTests.D2LVerifyEmbed() line 479  ### Test Code I have tried with Selenium 4's GetShadowRoot function: ``` public IWebElement GetShadowElement(IWebDriver driver, IWebElement shadowHost, string cssOfShadowElement) {     ISearchContext shadowRoot = shadowHost.GetShadowRoot();     return shadowRoot.FindElement(By.CssSelector(cssOfShadowElement)); }  ...  IWebElement embedViewerFrameElem = this.GetShadowElement(Driver, EmbedViewerShadowHost, ""iframe[src*='panopto']"");  Driver.SwitchTo().Frame(embedViewerFrameElem); ```  and with the following javascript execution: ``` var shadowHost = Driver.FindElement(By.CssSelector(""d2l-html-block""));  js = (IJavaScriptExecutor)Driver;  var shadowRoot = (ISearchContext)js.ExecuteScript(""return arguments[0].shadowRoot"", shadowHost); IWebElement embedViewerFrameElem = shadowRoot.FindElement(By.CssSelector(""iframe[src*='panopto']""));  Driver.SwitchTo().Frame(embedViewerFrameElem); ```  ### How can we reproduce the issue?  ```shell ### Repro Steps 1. Put an iframe inside of a shadow dom 2. Attempt to retrieve the iframe in a test and switch to it  Test code snippets are above ```   ### Relevant log output  ```shell Message:      System.NullReferenceException : Object reference not set to an instance of an object.   Stack Trace:      EventFiringTargetLocator.Frame(IWebElement frameElement)     LMSBase.SwitchToEmbedViewerFrame(Boolean isViewerNested) line 76     LMSTestBase.OpenViewer(Boolean isViewerNested) line 282     D2LTests.D2LVerifyEmbed() line 479 ```   ### Operating System  Windows 10  ### Selenium version  C# 4.1.0  ### What are the browser(s) and version(s) where you see this issue?  chrome 101.0.4951.41  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  _No response_","closed","G-chromedriver,","jmalmsten-panopto","2022-05-04T21:45:30Z","2022-06-04T00:11:58Z"
"","10865","[🐛 Bug]: ""400 Bad Request"" response to any WebDriver.Execute call causes crash","### What happened?  ## How did you trigger this bug?  Run a test including any code that calls into `WebDriver.Execute`, such that the server responds with `400 Bad Request`.   ## What did you expect to happen?   I expect the driver to retry failed requests until they succeed, rather than throwing an error about unparseable JSON.   ## What code is causing this issue?   `/dotnet/src/webdriver/Response.cs#L147`   ### How can we reproduce the issue?  ```shell Unable to reproduce absent large server load, which is when it typically happens, AFAICT. I lack the skill to set up a server that would respond `400 Bad Request` to *any* `WebDriver.Execute`, but that is how I would test it. ```   ### Relevant log output  ```shell Additional text encountered after finished reading JSON content: B. Path '', line 1, position 4.  at Newtonsoft.Json.JsonTextReader.Read()    at Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(JsonReader reader, Type objectType, Boolean checkAdditionalContent)    at Newtonsoft.Json.JsonSerializer.DeserializeInternal(JsonReader reader, Type objectType)    at Newtonsoft.Json.JsonSerializer.Deserialize(JsonReader reader, Type objectType)    at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonSerializerSettings settings)    at Newtonsoft.Json.JsonConvert.DeserializeObject(String value, Type type, JsonConverter[] converters)    at Newtonsoft.Json.JsonConvert.DeserializeObject[T](String value, JsonConverter[] converters)    at OpenQA.Selenium.Response.FromJson(String value)    at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(HttpResponseInfo responseInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebElement.Execute(String commandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebElement.get_Displayed() ```   ### Operating System  Ubuntu  ### Selenium version  C# Selenium.WebDriver 4.2.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.61   ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver   ### Are you using Selenium Grid?  4.0.0","closed","I-issue-template,","0x70b1a5","2022-07-11T19:46:43Z","2022-07-13T19:30:28Z"
"","10871","[🐛 Bug]: ERROR - Using Selenium in a JS continuously loading webpage via python web crawling task from an ec2 aws ubuntu 20.04 LTS instance","### What happened?  ## GOAL  - Use Selenium in a JS continuously loading webpage via python web crawling task from an ec2 aws ubuntu 20.04 LTS instance   ## MAIN CODE PART  ``` CHROME_PATH = '/usr/bin/chromium-browser' CHROMEDRIVER_PATH = '/usr/bin/chromedriver'  WINDOW_SIZE = '1200, 800' chrome_options = Options()  chrome_options.add_argument('headless') # chrome runs without a GUI window - as server doesn't have a gui   chrome_options.add_argument('window-size=%s' % WINDOW_SIZE) #chrome_options.add_argument('ignore-ssl-errors') chrome_options.add_argument('hide-scrollbars') chrome_options.binary_location = CHROME_PATH  options = webdriver.ChromeOptions() options.add_argument('--headless') driver = webdriver.Chrome(executable_path=CHROME_PATH,                            options=chrome_options) ```   ## A.) That I have tried to use afterwards  ``` driver = webdriver.Chrome(     executable_path=CHROMEDRIVER_PATH,     chrome_options=chrome_options, )   ```   Warning message generated that is on for 1 min  ``` :1: DeprecationWarning: use options instead of chrome_options   driver = webdriver.Chrome( ```  Than after 1 min error message   ``` :1: DeprecationWarning: use options instead of chrome_options   driver = webdriver.Chrome( --------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last)  in  ----> 1 driver = webdriver.Chrome(       2     executable_path=CHROMEDRIVER_PATH,       3     chrome_options=chrome_options,       4 )         5   /usr/local/lib/python3.8/dist-packages/selenium/webdriver/chrome/webdriver.py in __init__(self, executable_path, port, options, service_args, desired_capabilities, service_log_path, chrome_options, keep_alive)      74       75         try: ---> 76             RemoteWebDriver.__init__(      77                 self,      78                 command_executor=ChromeRemoteConnection(  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py in __init__(self, command_executor, desired_capabilities, browser_profile, proxy, keep_alive, file_detector, options)     155             warnings.warn(""Please use FirefoxOptions to set browser profile"",     156                           DeprecationWarning, stacklevel=2) --> 157         self.start_session(capabilities, browser_profile)     158         self._switch_to = SwitchTo(self)     159         self._mobile = Mobile(self)  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py in start_session(self, capabilities, browser_profile)     250         parameters = {""capabilities"": w3c_caps,     251                       ""desiredCapabilities"": capabilities} --> 252         response = self.execute(Command.NEW_SESSION, parameters)     253         if 'sessionId' not in response:     254             response = response['value']  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)     319         response = self.command_executor.execute(driver_command, params)     320         if response: --> 321             self.error_handler.check_response(response)     322             response['value'] = self._unwrap_value(     323                 response.get('value', None))  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)     240                 alert_text = value['alert'].get('text')     241             raise exception_class(message, screen, stacktrace, alert_text) --> 242         raise exception_class(message, screen, stacktrace)     243      244     def _value_or_default(self, obj, key, default):  WebDriverException: Message: unknown error: DevToolsActivePort file doesn't exist  ```     ## B.) That I have tried to use afterwards  ``` options = webdriver.ChromeOptions() options.add_argument('--headless') driver = webdriver.Chrome(executable_path=CHROME_PATH,                            options=chrome_options) ```  error message  ``` --------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last)  in        1 options = webdriver.ChromeOptions()       2 options.add_argument('--headless') ----> 3 driver = webdriver.Chrome(executable_path=CHROME_PATH,        4                           options=chrome_options)  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/chrome/webdriver.py in __init__(self, executable_path, port, options, service_args, desired_capabilities, service_log_path, chrome_options, keep_alive)      71             service_args=service_args,      72             log_path=service_log_path) ---> 73         self.service.start()      74       75         try:  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/common/service.py in start(self)      96         count = 0      97         while True: ---> 98             self.assert_process_still_running()      99             if self.is_connectable():     100                 break  /usr/local/lib/python3.8/dist-packages/selenium/webdriver/common/service.py in assert_process_still_running(self)     107         return_code = self.process.poll()     108         if return_code is not None: --> 109             raise WebDriverException(     110                 'Service %s unexpectedly exited. Status code was: %s'     111                 % (self.path, return_code)  WebDriverException: Message: Service /usr/bin/chromium-browser unexpectedly exited. Status code was: 1 ```   ## C.) That I have tried to use afterwards   ``` # selenium 4 from selenium import webdriver from selenium.webdriver.chrome.service import Service as ChromeService from webdriver_manager.chrome import ChromeDriverManager ​ driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))  ```  ERROR message  ``` [WDM] - ====== WebDriver manager ====== 2022-07-13 10:30:16,809 INFO ====== WebDriver manager ====== --------------------------------------------------------------------------- KeyError                                  Traceback (most recent call last)  in        4 from webdriver_manager.chrome import ChromeDriverManager       5  ----> 6 driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))  ~/.local/lib/python3.8/site-packages/webdriver_manager/chrome.py in install(self)      36       37     def install(self) -> str: ---> 38         driver_path = self._get_driver_path(self.driver)      39         os.chmod(driver_path, 0o755)      40         return driver_path  ~/.local/lib/python3.8/site-packages/webdriver_manager/core/manager.py in _get_driver_path(self, driver)      27       28     def _get_driver_path(self, driver): ---> 29         binary_path = self.driver_cache.find_driver(driver)      30         if binary_path:      31             return binary_path  ~/.local/lib/python3.8/site-packages/webdriver_manager/core/driver_cache.py in find_driver(self, driver)      93         os_type = driver.get_os_type()      94         driver_name = driver.get_name() ---> 95         driver_version = driver.get_version()      96         browser_version = driver.browser_version      97   ~/.local/lib/python3.8/site-packages/webdriver_manager/core/driver.py in get_version(self)      41     def get_version(self):      42         self._version = ( ---> 43             self.get_latest_release_version()      44             if self._version == ""latest""      45             else self._version  ~/.local/lib/python3.8/site-packages/webdriver_manager/drivers/chrome.py in get_latest_release_version(self)      35       36     def get_latest_release_version(self): ---> 37         self.browser_version = get_browser_version_from_os(self.chrome_type)      38         log(f""Get LATEST {self._name} version for {self.browser_version} {self.chrome_type}"")      39         latest_release_url = (  ~/.local/lib/python3.8/site-packages/webdriver_manager/core/utils.py in get_browser_version_from_os(browser_type)     150         return get_browser_version(browser_type, metadata)     151  --> 152     cmd_mapping = {     153         ChromeType.BRAVE: {     154             OSType.LINUX: linux_browser_apps_to_cmd(  KeyError: 'google-chrome' ```             ``` ### Operating System  aws ec2 ubuntu 20.04 LTS  ### Selenium version  3.141.0  ### What are the browser(s) and version(s) where you see this issue?  None it is in an aws ec2 jupyter notebook, desktop browser is Version 103.0.5060.114 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  Version 103.0.5060.114 (Official Build) (64-bit)  ### Are you using Selenium Grid?  no ```","closed","I-defect,","stromal","2022-07-13T10:33:01Z","2022-07-15T14:25:39Z"
"","10443","[🐛 Bug]: The selenium-java 4 dependency library version is not applied when using Maven with the spring-boot-starter-parent.","### What happened?  # The selenium-java 4 dependency library version is not applied when using Maven with the spring-boot-starter-parent.  I did tried upgrade to the selenium-java 4.1.2 from 3.141.59 by Maven. However, the dependent library version was not updated.  I suspect a library conflict, so I did some tests. But I can't find the conflict in case.  I created a new empty project and tested it, it included the spring-boot-starter-parent and the problem occurred. I have no expert knowledge of Maven.  Explicitly adding dependent library versions solved the problem. But I'd like to keep the pom.xml as simple as possible.  Is there any workaround for this? can you help me.   ### How can we reproduce the issue?  ```shell pom.xml        4.0.0            com.example     demo2     1.0-SNAPSHOT      Selenium Test               1.8         1.8            		 			org.seleniumhq.selenium 			selenium-java 			4.1.2 		       ``` ```   ### Relevant log output  ```shell # With spring-boot-starter-parent $ mvn dependency:tree [INFO] --- maven-dependency-plugin:3.2.0:tree (default-cli) @ demo2 --- [INFO] com.example:demo2:jar:1.0-SNAPSHOT [INFO] \- org.seleniumhq.selenium:selenium-java:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-api:jar:3.141.59:compile [INFO]    +- org.seleniumhq.selenium:selenium-chrome-driver:jar:3.141.59:compile [INFO]    |  +- net.bytebuddy:byte-buddy:jar:1.11.22:compile [INFO]    |  +- org.apache.commons:commons-exec:jar:1.3:compile [INFO]    |  +- com.google.guava:guava:jar:25.0-jre:compile [INFO]    |  |  +- com.google.code.findbugs:jsr305:jar:1.3.9:compile [INFO]    |  |  +- org.checkerframework:checker-compat-qual:jar:2.0.0:compile [INFO]    |  |  +- com.google.errorprone:error_prone_annotations:jar:2.1.3:compile [INFO]    |  |  +- com.google.j2objc:j2objc-annotations:jar:1.1:compile [INFO]    |  |  \- org.codehaus.mojo:animal-sniffer-annotations:jar:1.14:compile [INFO]    |  +- com.squareup.okhttp3:okhttp:jar:3.14.9:compile [INFO]    |  \- com.squareup.okio:okio:jar:1.14.0:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v85:jar:4.1.2:compile [INFO]    |  +- com.google.auto.service:auto-service-annotations:jar:1.0.1:compile [INFO]    |  +- com.google.auto.service:auto-service:jar:1.0.1:compile [INFO]    |  |  \- com.google.auto:auto-common:jar:1.2:compile [INFO]    |  \- org.seleniumhq.selenium:selenium-json:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v95:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v96:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v97:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-edge-driver:jar:3.141.59:compile [INFO]    +- org.seleniumhq.selenium:selenium-firefox-driver:jar:3.141.59:compile [INFO]    +- org.seleniumhq.selenium:selenium-firefox-xpi-driver:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-ie-driver:jar:3.141.59:compile [INFO]    +- org.seleniumhq.selenium:selenium-opera-driver:jar:3.141.59:compile [INFO]    +- org.seleniumhq.selenium:selenium-remote-driver:jar:3.141.59:compile [INFO]    +- org.seleniumhq.selenium:selenium-safari-driver:jar:3.141.59:compile [INFO]    \- org.seleniumhq.selenium:selenium-support:jar:3.141.59:compile  # Without spring-boot-starter-parent $ mvn dependency:tree ... [INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ demo2 --- [INFO] com.example:demo2:jar:1.0-SNAPSHOT [INFO] \- org.seleniumhq.selenium:selenium-java:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-api:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-chrome-driver:jar:4.1.2:compile [INFO]    |  +- com.google.auto.service:auto-service-annotations:jar:1.0.1:compile [INFO]    |  +- com.google.auto.service:auto-service:jar:1.0.1:compile [INFO]    |  |  \- com.google.auto:auto-common:jar:1.2:compile [INFO]    |  +- com.google.guava:guava:jar:31.0.1-jre:compile [INFO]    |  |  +- com.google.guava:failureaccess:jar:1.0.1:compile [INFO]    |  |  +- com.google.guava:listenablefuture:jar:9999.0-empty-to-avoid-conflict-with-guava:compile [INFO]    |  |  +- com.google.code.findbugs:jsr305:jar:3.0.2:compile [INFO]    |  |  +- org.checkerframework:checker-qual:jar:3.12.0:compile [INFO]    |  |  +- com.google.errorprone:error_prone_annotations:jar:2.7.1:compile [INFO]    |  |  \- com.google.j2objc:j2objc-annotations:jar:1.3:compile [INFO]    |  +- org.seleniumhq.selenium:selenium-chromium-driver:jar:4.1.2:compile [INFO]    |  \- org.seleniumhq.selenium:selenium-json:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v85:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v95:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v96:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-devtools-v97:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-edge-driver:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-firefox-driver:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-firefox-xpi-driver:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-ie-driver:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-opera-driver:jar:4.1.2:compile [INFO]    +- org.seleniumhq.selenium:selenium-remote-driver:jar:4.1.2:compile [INFO]    |  +- com.beust:jcommander:jar:1.82:compile [INFO]    |  +- io.netty:netty-buffer:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-codec-http:jar:4.1.73.Final:compile [INFO]    |  |  +- io.netty:netty-codec:jar:4.1.73.Final:compile [INFO]    |  |  \- io.netty:netty-handler:jar:4.1.73.Final:compile [INFO]    |  |     \- io.netty:netty-tcnative-classes:jar:2.0.46.Final:compile [INFO]    |  +- io.netty:netty-common:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-transport-classes-epoll:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-transport-classes-kqueue:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-transport-native-epoll:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-transport-native-kqueue:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-transport-native-unix-common:jar:4.1.73.Final:compile [INFO]    |  +- io.netty:netty-transport:jar:4.1.73.Final:compile [INFO]    |  |  \- io.netty:netty-resolver:jar:4.1.73.Final:compile [INFO]    |  +- io.opentelemetry:opentelemetry-api:jar:1.10.1:compile [INFO]    |  +- io.opentelemetry:opentelemetry-context:jar:1.10.1:compile [INFO]    |  +- io.opentelemetry:opentelemetry-exporter-logging:jar:1.10.1:compile [INFO]    |  |  +- io.opentelemetry:opentelemetry-sdk-metrics:jar:1.10.1-alpha:compile [INFO]    |  |  \- io.opentelemetry:opentelemetry-sdk-logs:jar:1.10.1-alpha:compile [INFO]    |  +- io.opentelemetry:opentelemetry-sdk-common:jar:1.10.1:compile [INFO]    |  +- io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:jar:1.10.1:compile [INFO]    |  +- io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:jar:1.10.1-alpha:compile [INFO]    |  +- io.opentelemetry:opentelemetry-sdk-trace:jar:1.10.1:compile [INFO]    |  +- io.opentelemetry:opentelemetry-sdk:jar:1.10.1:compile [INFO]    |  +- io.opentelemetry:opentelemetry-semconv:jar:1.10.1-alpha:compile [INFO]    |  +- io.ous:jtoml:jar:2.0.0:compile [INFO]    |  +- net.bytebuddy:byte-buddy:jar:1.12.7:compile [INFO]    |  +- org.apache.commons:commons-exec:jar:1.3:compile [INFO]    |  +- org.asynchttpclient:async-http-client:jar:2.12.3:compile [INFO]    |  |  +- org.asynchttpclient:async-http-client-netty-utils:jar:2.12.3:compile [INFO]    |  |  +- io.netty:netty-codec-socks:jar:4.1.60.Final:compile [INFO]    |  |  +- io.netty:netty-handler-proxy:jar:4.1.60.Final:compile [INFO]    |  |  +- io.netty:netty-transport-native-epoll:jar:linux-x86_64:4.1.60.Final:compile [INFO]    |  |  +- io.netty:netty-transport-native-kqueue:jar:osx-x86_64:4.1.60.Final:compile [INFO]    |  |  +- org.reactivestreams:reactive-streams:jar:1.0.3:compile [INFO]    |  |  +- com.typesafe.netty:netty-reactive-streams:jar:2.0.4:compile [INFO]    |  |  +- org.slf4j:slf4j-api:jar:1.7.30:compile [INFO]    |  |  \- com.sun.activation:jakarta.activation:jar:1.2.2:compile [INFO]    |  \- org.seleniumhq.selenium:selenium-http:jar:4.1.2:compile [INFO]    |     \- net.jodah:failsafe:jar:2.4.4:compile [INFO]    +- org.seleniumhq.selenium:selenium-safari-driver:jar:4.1.2:compile [INFO]    \- org.seleniumhq.selenium:selenium-support:jar:4.1.2:compile ... ```   ### Operating System  Ubuntu 18.04  ### Selenium version  4.1.2  ### What are the browser(s) and version(s) where you see this issue?  -  ### What are the browser driver(s) and version(s) where you see this issue?  -  ### Are you using Selenium Grid?  4.1.2-20220217","closed","I-question,","sunggyu-kam","2022-03-14T16:21:39Z","2022-04-14T00:11:37Z"
"","10866","[🐛 Bug]: KeyError: 'google-chrome' - python selenium webdriver","### What happened?  # GOAL  - not to get the error (both code snippet generates the same error) - it is running on an aws ec2 ubuntu - importing this for web scraping with python, selenium, beautifulsoup as continuously loading JS webpage - I follow this guide [L](https://oak-tree.tech/blog/python-web-scraping-selenium)   # Tried to solve by  - https://stackoverflow.com/questions/63945164/getting-keyerror-windowssdkdir-while-running-chromium-browser-source-code-on - https://exerror.com/chromedrivermanager-install-is-giving-keyerror-google-chrome/ - https://github.com/wkeeling/selenium-wire/issues/295 - https://stackoverflow.com/questions/72941844/keyerror-google-chrome-python-selenium-webdriver  ### How can we reproduce the issue?  ```shell # MY CODE  # selenium 3 from selenium import webdriver from webdriver_manager.chrome import ChromeDriverManager  driver = webdriver.Chrome(ChromeDriverManager().install()) ```  ``` # selenium 4 from selenium import webdriver from selenium.webdriver.chrome.service import Service as ChromeService from webdriver_manager.chrome import ChromeDriverManager  driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install())) ``` ```   ### Relevant log output  ```shell # ERROR    [WDM] - ====== WebDriver manager ====== 2022-07-11 15:49:01,250 INFO ====== WebDriver manager ====== --------------------------------------------------------------------------- KeyError                                  Traceback (most recent call last)  in        2 from webdriver_manager.chrome import ChromeDriverManager       3  ----> 4 driver = webdriver.Chrome(ChromeDriverManager().install())  ~/.local/lib/python3.8/site-packages/webdriver_manager/chrome.py in install(self)      36       37     def install(self) -> str: ---> 38         driver_path = self._get_driver_path(self.driver)      39         os.chmod(driver_path, 0o755)      40         return driver_path  ~/.local/lib/python3.8/site-packages/webdriver_manager/core/manager.py in _get_driver_path(self, driver)      27       28     def _get_driver_path(self, driver): ---> 29         binary_path = self.driver_cache.find_driver(driver)      30         if binary_path:      31             return binary_path  ~/.local/lib/python3.8/site-packages/webdriver_manager/core/driver_cache.py in find_driver(self, driver)      93         os_type = driver.get_os_type()      94         driver_name = driver.get_name() ---> 95         driver_version = driver.get_version()      96         browser_version = driver.browser_version      97   ~/.local/lib/python3.8/site-packages/webdriver_manager/core/driver.py in get_version(self)      41     def get_version(self):      42         self._version = ( ---> 43             self.get_latest_release_version()      44             if self._version == ""latest""      45             else self._version  ~/.local/lib/python3.8/site-packages/webdriver_manager/drivers/chrome.py in get_latest_release_version(self)      35       36     def get_latest_release_version(self): ---> 37         self.browser_version = get_browser_version_from_os(self.chrome_type)      38         log(f""Get LATEST {self._name} version for {self.browser_version} {self.chrome_type}"")      39         latest_release_url = (  ~/.local/lib/python3.8/site-packages/webdriver_manager/core/utils.py in get_browser_version_from_os(browser_type)     150         return get_browser_version(browser_type, metadata)     151  --> 152     cmd_mapping = {     153         ChromeType.BRAVE: {     154             OSType.LINUX: linux_browser_apps_to_cmd(  KeyError: 'google-chrome' ``` ```   ### Operating System  aws ec2 ubuntu 20.04 LTS  ### Selenium version  3.141.0  ### What are the browser(s) and version(s) where you see this issue?  None it is in an aws ec2 jupyter notebook, desktop browser is Version 103.0.5060.114 (Official Build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  Version 103.0.5060.114 (Official Build) (64-bit)  ### Are you using Selenium Grid?  no","closed","","stromal","2022-07-12T08:34:29Z","2022-07-12T11:52:55Z"
"","10916","[🐛 Bug]: Selenium GRID 4: Unable to launch the edge driver with hub and node configuration. Getting ""Unable to find handler for (POST) \u002fsession.""","### What happened?  ""Selenium.WebDriver"" version=""3.141.0"" ""Selenium.WebDriver.ChromeDriver"" version=""103.0.5060.13400"" ""Selenium.WebDriver.MSEdgeDriver"" version=""105.0.1329.1-pre""  Grid Version: selenium-server-4.3.0.jar  I have setup both hub and node on the same machine. I can see that hub is registered as well.  Hub: ``` C:https://github.com/SeleniumHQ/docker-selenium/issues/1 PersonalFolder\sharedFolder\SeleniumGrid>java -jar selenium-server-4.3.0.jar hub 11:38:21.979 INFO [LogManager$RootLogger.log] - Using the system default encoding 11:38:21.982 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 11:38:22.369 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://:4442, advertising as tcp://169.254.168.113:4442], XSUB binding to [binding to tcp://:4443, advertising as tcp://169.254.168.113:4443] 11:38:22.433 INFO [UnboundZmqEventBus.] - Connecting to tcp://169.254.168.113:4442 and tcp://169.254.168.113:4443 11:38:22.455 INFO [UnboundZmqEventBus.] - Sockets created 11:38:23.456 INFO [UnboundZmqEventBus.] - Event bus ready 11:38:24.786 INFO [Hub.execute] - Started Selenium Hub 4.3.0 (revision a4995e2c09*): http://169.254.168.113:4444/ 11:39:03.517 INFO [Node.] - Binding additional locator mechanisms: relative, id, name 11:39:04.055 INFO [GridModel.setAvailability] - Switching Node 4a4b5707-9246-4e6f-8b2f-e20ee107d481 (uri: http://169.254.168.113:5555/) from DOWN to UP 11:39:04.055 INFO [LocalDistributor.add] - Added node 4a4b5707-9246-4e6f-8b2f-e20ee107d481 at http://169.254.168.113:5555/. Health check every 120s ```  Node: ``` C:https://github.com/SeleniumHQ/docker-selenium/issues/1 PersonalFolder\sharedFolder\SeleniumGrid>java -jar selenium-server-4.3.0.jar node 11:39:00.868 INFO [LogManager$RootLogger.log] - Using the system default encoding 11:39:00.870 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 11:39:01.082 INFO [UnboundZmqEventBus.] - Connecting to tcp://0.0.0.0:4442 and tcp://0.0.0.0:4443 11:39:01.145 INFO [UnboundZmqEventBus.] - Sockets created 11:39:02.147 INFO [UnboundZmqEventBus.] - Event bus ready 11:39:02.383 INFO [NodeServer.createHandlers] - Reporting self as: http://169.254.168.113:5555/ 11:39:02.770 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors 11:39:02.794 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 11:39:02.852 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 8 times 11:39:02.854 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 8 times 11:39:02.864 INFO [Node.] - Binding additional locator mechanisms: name, id, relative 11:39:03.457 INFO [NodeServer$1.start] - Starting registration process for Node http://169.254.168.113:5555/ 11:39:03.458 INFO [NodeServer.execute] - Started Selenium node 4.3.0 (revision a4995e2c09*): http://169.254.168.113:5555/ 11:39:03.479 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:39:04.065 INFO [NodeServer.lambda$createHandlers$2] - Node has been added ```  I am able to access the following and it shows appropriate screen http://161.85.102.61:4444/ui# http://169.254.168.113:4444/status http://169.254.168.113:5555/status   ### How can we reproduce the issue?  ```shell EdgeOptions option = new EdgeOptions(); option.AcceptInsecureCertificates = false;        option.PlatformName = ""Windows 10"";    RemoteWebDriver driver = new RemoteWebDriver(new Uri(@""http://169.254.168.113:5555/""), option.ToCapabilities()); ```   ### Relevant log output  ```shell Message: OpenQA.Selenium.WebDriverException : Unexpected error. {   ""value"": {     ""error"": ""unknown command"",     ""message"": ""Unable to find handler for (POST) \u002fsession"",     ""stacktrace"": """"   } } ```   ### Operating System  Windows 10  ### Selenium version  Selenium grid 4  ### What are the browser(s) and version(s) where you see this issue?  edge Version 103.0.1264.71 (Official build) (64-bit)  ### What are the browser driver(s) and version(s) where you see this issue?  msedgedriver.exe 105.0.1329.1  ### Are you using Selenium Grid?  selenium-server-4.3.0.jar","closed","","Prashant0587","2022-08-01T06:42:02Z","2022-08-01T07:54:22Z"
"","10605","[🐛 Bug]: Python Proxy configuration with Proxy network","### What happened?  ![proxy](https://user-images.githubusercontent.com/86263323/166492874-e19d376e-36a8-4993-946f-22d22a439a00.png) I am using a proxy network and want to configure it with Selenium on Python. I have seen many resources use the HOST:PORT method of configuration, but proxy networks uses the ""URL method"" of http://USER:PASSWORD@PROXY:PORT.  See different types of configurations below:    ### How can we reproduce the issue?  ```shell ###Selenium_Options### from selenium import webdriver  options = webdriver.ChromeOptions() options.add_argument(""--proxy-server=http://USER:PASSWORD@PROXY:PORT"") driver = webdriver.Chrome(options=options) driver.get(""https://some_url.com"")    ###Desired_Capabilities### from selenium import webdriver from selenium.webdriver.common.proxy import *  proxy_url = ""http://USER:PASSWORD@PROXY:PORT"" proxy = Proxy({     'proxyType': ProxyType.MANUAL,     'httpProxy': proxy_url,     'sslProxy': proxy_url,     'noProxy': ''})  capabilities = webdriver.DesiredCapabilities.CHROME proxy.add_to_capabilities(capabilities)  driver = webdriver.Chrome(desired_capabilities=capabilities) driver.get(""https://some_url.com"") ```   ### Relevant log output   Log does not throw any errors with the above configurations, all the errors on on a browser side:  Reference above attached image for Selenium_Options error.   Desired Capabilities does not throw any browser errors, but the configuration still fails to add proxy.  *Proxy ""URL"" is in a working state and has been tested using the requests library.  FOR MORE INFORMATION: https://stackoverflow.com/questions/70806778/python-selenium-proxy-network  ### Operating System  Windows 10  ### Selenium version  Tried with: 3.141.0 and 4.0.0a7  ### What are the browser(s) and version(s) where you see this issue?  Version 101.0.4951.41  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  NA","closed","G-chromedriver,","lukehamil55","2022-05-03T16:19:19Z","2022-07-10T00:14:34Z"
"","10748","issue of handle table row data","### What happened?  ![image](https://user-images.githubusercontent.com/101032724/172674204-1af1d36b-036c-491f-80c3-a4b982bf926a.png) Hi everyone , i am get stuck on the findelement data for my solution , what i triyng to do is filter the data by locate the time as today only then grab it to my database but i have not clue to do it could anyone give some suggest  the output is i only get the row data by filter time is today   ### How can we reproduce the issue?  ```shell IWebElement testing = driver.FindElement(By.XPath(""/html/body/div[6]/div[2]/table""));                     string tt = testing.Text;                     //get all table rows                     IList rows = testing.FindElements(By.TagName(""tr""));                     rows.Where(x => x.Text.Equals(driver.FindElement(By.CssSelector(""body > div.page-block.frame.bottom > div:nth-child(2) > div > table > thead > tr > th:nth-child(2) > div > span.content""))));                                         foreach (IWebElement row in rows)                     {                                              } ```   ### Relevant log output  ```shell the output for the list rows have record all row data but i just need the today's data ```   ### Operating System  windows10  ### Selenium version  C#3.0  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.67  ### Are you using Selenium Grid?  _No response_","closed","I-question,","jun0100","2022-06-08T16:59:49Z","2022-07-09T00:10:51Z"
"","10745","[🐛 Bug]:","### What happened?  ![image](https://user-images.githubusercontent.com/101032724/172560040-97885437-6fe2-4515-b8f5-0e18cc47a3c7.png) Hi everyone , i am get stuck on the  findelement data for my solution , what i triyng to do is filter the data by locate the time as today only then grab it to my database but i have not clue to do it could anyone give some suggest   ### How can we reproduce the issue?  ```shell IWebElement clickhistory = driver.FindElement(By.CssSelector(""body > div.page-tabs.bottom.lower.frame.toolbox > a:nth-child(3)""));                     clickhistory.Click();                      IWebElement order = driver.FindElement(By.CssSelector(""body > div.page-block.frame.bottom > div:nth-child(2) > table > tbody > tr.total > td.iconed > div > span""));                     string p = order.Text.Trim();                       IWebElement testing = driver.FindElement(By.XPath(""/html/body/div[6]/div[2]/table""));                     string tt = testing.Text;                     //get all table rows                     IList rows = testing.FindElements(By.TagName(""tr""));                     rows.Where(x => x.Text.Equals(driver.FindElement(By.CssSelector(""body > div.page-block.frame.bottom > div:nth-child(2) > div > table > thead > tr > th:nth-child(2) > div > span.content""))));                                         foreach (IWebElement row in rows)                     {                                              } ```   ### Relevant log output  ```shell the output for the list rows have record all row data but i just need the today's data ```   ### Operating System  windown 10  ### Selenium version  C#  ### What are the browser(s) and version(s) where you see this issue?  Chorme  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.67  ### Are you using Selenium Grid?  _No response_","closed","I-question,","jun0100","2022-06-08T09:38:17Z","2022-07-09T00:10:55Z"
"","10681","[🐛 Bug]:","### What happened?  ![image](https://user-images.githubusercontent.com/101032724/169737715-a0ce951e-d3b7-4575-b53c-33050be960ac.png) i have a issue about element , i have double check the element selector and xpath as well all is correct one but the result i get is stil cannot locate the element    ### How can we reproduce the issue?  ```shell ChromeOptions option = new ChromeOptions(); driver.Navigate().GoToUrl(""https://webtrader.justforex.com""); driver.FindElement(By.CssSelector(""#login"")).SendKeys(""sssss""); ```   ### Relevant log output  ```shell OpenQA.Selenium.NoSuchElementException: 'no such element: Unable to locate element: {""method"":""css selector"",""selector"":""#login""}   (Session info: chrome=101.0.4951.67)' ```   ### Operating System  windows10  ### Selenium version  C#  ### What are the browser(s) and version(s) where you see this issue?  Chrome  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.67  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","jun0100","2022-05-23T03:29:58Z","2022-06-23T00:11:09Z"
"","10635","[🐛 Bug]: Queue size is always high and the grid is drastically underutilized","### What happened?  ![ErrorScreenshot](https://user-images.githubusercontent.com/6175985/167858548-a1c96c8b-610b-452a-b1cd-c87d0ea77fda.png) Queue size is more than 10 and nodes are already up. But still it will take atleast 10 to 15 minutes to pickup those test and process. Which is making run slower.  ### How can we reproduce the issue?  ```shell It is a simple test suite and setup in Kubernetes cluster with Keda for scaling. ```   ### Relevant log output  ```shell No errors. It is just like it is taking time to utilize chrome nodes. ```   ### Operating System  Linux  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  chrome   ### What are the browser driver(s) and version(s) where you see this issue?  v.91.0  ### Are you using Selenium Grid?  Grid version: 4.0.0-rc-1","closed","I-defect,","amitkpal83","2022-05-11T13:19:34Z","2022-07-09T00:10:53Z"
"","10479","[🐛 Bug]: Can't get Fetch.GetResponseBody","### What happened?   Have tried with both 'Network' and 'Fetch' Am able to get the basic response but can't get the response body. I understand the request has to be stopped at the response stage , but even with this I can never get a response body returned.  Always get error: {""A command response was not received: Fetch.getResponseBody""}  ### How can we reproduce the issue?  ```shell domains = session.GetVersionSpecificDomains();             var enableFetchCommandSettings = new OpenQA.Selenium.DevTools.V96.Fetch.EnableCommandSettings();              var requestPattern = new OpenQA.Selenium.DevTools.V96.Fetch.RequestPattern();             requestPattern.RequestStage = OpenQA.Selenium.DevTools.V96.Fetch.RequestStage.Response;             //requestPattern.ResourceType = ResourceType.XHR;             enableFetchCommandSettings.Patterns = new OpenQA.Selenium.DevTools.V96.Fetch.RequestPattern[] { requestPattern };             domains.Fetch.Enable(enableFetchCommandSettings);               domains.Fetch.RequestPaused += RequestPaused;             driver.Navigate().GoToUrl(""https://www.google.com"");     static void RequestPaused(object sender, OpenQA.Selenium.DevTools.V96.Fetch.RequestPausedEventArgs e)         {                               try                 {                 var getResponseBody = domains.Fetch.GetResponseBody(new OpenQA.Selenium.DevTools.V96.Fetch.GetResponseBodyCommandSettings()                 {                     RequestId = e.RequestId                 });                  //Note: RequestID always seems to be valued: '""interception-job-1.0""'                   var body = getResponseBody.Result.Body;                 }                 catch (Exception ex)                 {                     Console.WriteLine(ex);                 }          } ```   ### Relevant log output  ```shell {""A command response was not received: Fetch.getResponseBody""} ```   ### Operating System  Windows 10  ### Selenium version  41  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 99.0.4844.5100  ### Are you using Selenium Grid?  _No response_","open","C-devtools,","johneakin","2022-03-25T15:08:41Z","2022-04-18T17:00:44Z"
"","10131","[🐛 Bug]: Select Dropdown not working on IE on windows 10","### What happened?      When running tests on Browserstack on IE 11 it just fails to select anything from dropdown. Works on other browsers. Error is:  Unable to execute request for an existing session: getElementDomAttribute Select drop = new Select(seleniumCore.findElement(stateDropdown));  drop.selectByValue(state);  ### How can we reproduce the issue?  ```shell Select drop = new Select(seleniumCore.findElement(stateDropdown));  drop.selectByValue(state); ```   ### Relevant log output  ```shell TestDMToolFunctionality>BaseTest.afterMethod:323 The following asserts failed:         Exception occurred Unable to execute request for an existing session: getElementDomAttribute Build info: version: '4.0.0', revision: '3a21814679' System info: host: '207-254-7-208', ip: '', os.name: 'windows', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'FPKVENDORION017', ip: '', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.11' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [f3f2e7a26d64ab0c49dac977e6c94a2e0b61ea89, getElementDomAttribute {id=b2b89a14-57f7-4006-8387-cd6f7a9946ab, name=multiple}] Capabilities {browserAttachTimeout: 0, browserName: internet explorer, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:55042/, javascriptEnabled: true, nativeEvents: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11} Element: [[RemoteWebDriver: internet explorer on WINDOWS (f3f2e7a26d64ab0c49dac977e6c94a2e0b61ea89)] -> xpath: //div[@aria-label='form-select-item']//select] Session ID: f3f2e7a26d64ab0c49dac977e6c94a2e0b61ea89 [ERROR]   TestDMToolFunctionality.testErrorMessagesInAddressEditModal:121 The following asserts failed:         Exception occurred Unable to execute request for an existing session: getElementDomAttribute Build info: version: '4.0.0', revision: '3a21814679' System info: host: '207-254-7-208', ip: '', os.name: 'windows', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'FPKVENDORION017', ip: '', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.11' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [f3f2e7a26d64ab0c49dac977e6c94a2e0b61ea89, getElementDomAttribute {id=b2b89a14-57f7-4006-8387-cd6f7a9946ab, name=multiple}] Capabilities {browserAttachTimeout: 0, browserName: internet explorer, elementScrollBehavior: 0, enableElementCacheCleanup: true, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.enableFullPageScreenshot: true, ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ie.forceShellWindowsApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:55042/, javascriptEnabled: true, nativeEvents: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, requireWindowFocus: false, unexpectedAlertBehaviour: dismiss, unhandledPromptBehavior: dismiss, version: 11} Element: [[RemoteWebDriver: internet explorer on WINDOWS (f3f2e7a26d64ab0c49dac977e6c94a2e0b61ea89)] -> xpath: //div[@aria-label='form-select-item']//select] Session ID: f3f2e7a26d64ab0c49dac977e6c94a2e0b61ea89 ```   ### Operating System  Window10  ### Selenium version  Java 4.0.0  ### What are the browser(s) and version(s) where you see this issue?  IE 11  ### What are the browser driver(s) and version(s) where you see this issue?  Browserstack  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","MartynasITT","2021-12-10T16:37:59Z","2022-02-11T00:07:49Z"
"","10684","[🐛 Bug]: chromedriver unexpectedly exited. Status code was: -5 - - -","### What happened?      browser = webdriver.Chrome(   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 70, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 90, in __init__     self.service.start()   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 98, in start     self.assert_process_still_running()   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 110, in assert_process_still_running     raise WebDriverException( selenium.common.exceptions.WebDriverException: Message: Service /home/snippetbucket/.wdm/drivers/chromedriver/linux64/101.0.4951.41/chromedriver unexpectedly exited. Status code was: -5 - - -   ### How can we reproduce the issue?  ```shell running bottle server  in background use python selenium ```   ### Relevant log output  ```shell chat = WhatsApp()   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/alright/__init__.py"", line 33, in __init__     browser = webdriver.Chrome(   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 70, in __init__     super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], ""goog"",   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/chromium/webdriver.py"", line 90, in __init__     self.service.start()   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 98, in start     self.assert_process_still_running()   File ""/home/snippetbucket/source/odoo/venv3.8/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 110, in assert_process_still_running     raise WebDriverException( selenium.common.exceptions.WebDriverException: Message: Service /home/snippetbucket/.wdm/drivers/chromedriver/linux64/101.0.4951.41/chromedriver unexpectedly exited. Status code was: -5 - - - ```   ### Operating System  ubuntu 20  ### Selenium version  latest  ### What are the browser(s) and version(s) where you see this issue?  101.0.4951  ### What are the browser driver(s) and version(s) where you see this issue?  101.0.4951  ### Are you using Selenium Grid?  _No response_","closed","I-issue-template,","tejastank","2022-05-23T12:17:40Z","2022-07-03T00:14:06Z"
"","10644","[🐛 Bug]: In Java17 creating new Chrome driver causes runtime exception","### What happened?   Simply creating a new ChromeDriver causes this runtime error. Similar to previous issue #7676 (https://github.com/SeleniumHQ/selenium/issues/7676)  ### How can we reproduce the issue?  ```shell WebDriver driver = new ChromeDriver(); ```   ### Relevant log output  ```shell Exception in thread ""main"" java.util.ServiceConfigurationError: org.openqa.selenium.devtools.CdpInfo: module org.seleniumhq.selenium.remote_driver does not declare `uses` 	at java.base/java.util.ServiceLoader.fail(ServiceLoader.java:593) 	at java.base/java.util.ServiceLoader.checkCaller(ServiceLoader.java:579) 	at java.base/java.util.ServiceLoader.(ServiceLoader.java:507) 	at java.base/java.util.ServiceLoader.load(ServiceLoader.java:1653) 	at org.seleniumhq.selenium.remote_driver/org.openqa.selenium.devtools.CdpVersionFinder.(CdpVersionFinder.java:44) 	at org.seleniumhq.selenium.chromium_driver/org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:126) 	at org.seleniumhq.selenium.chrome_driver/org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:106) 	at org.seleniumhq.selenium.chrome_driver/org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:93) 	at org.seleniumhq.selenium.chrome_driver/org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:48) ```   ### Operating System  Windows 7  ### Selenium version  Java 4.1.4  ### What are the browser(s) and version(s) where you see this issue?  Chrome 101  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver 101.0.4951.41  ### Are you using Selenium Grid?  None","open","I-defect,","benwilbur","2022-05-13T19:05:57Z","2022-07-07T07:39:23Z"
"","10486","[🐛 Bug]: Cannot Get DevToolSession","### What happened?   I want to get the devtoolsession from idevtool object, but when I write the code to get it, my program freezes. Here is my code (the program freezes after executing line 2):    ### How can we reproduce the issue?  ```shell IDevTools devTool = driver as IDevTools;             var session = devTool.GetDevToolsSession();             var domains = session.GetVersionSpecificDomains();             domains.Page.Enable(new EnableCommandSettings());             domains.Page.AddScriptToEvaluateOnNewDocument(new AddScriptToEvaluateOnNewDocumentCommandSettings()             {                 Source = ""Object.defineProperty(navigator, 'webdriver', { get: () => undefined });"" +                 @""Object.defineProperty(navigator, 'platform', { get: () => 'MacOS'}); "" +                 """"             }); ```   ### Relevant log output  ```shell nothing ```   ### Operating System  Window 10  ### Selenium version  C# 4.1  ### What are the browser(s) and version(s) where you see this issue?  Chrome 99  ### What are the browser driver(s) and version(s) where you see this issue?  ChromeDriver  ### Are you using Selenium Grid?  _No response_","closed","C-devtools,","phonggvjppro","2022-03-28T08:04:12Z","2022-05-09T00:11:06Z"
"","10441","[🐛 Bug]: session not created: This version of ChromeDriver only supports Chrome version 97 Current browser version is 99.0.4844.51","### What happened?   I am trying to run some classes via CMD with the command : mvn test  When I run it throw the eclipse with testng it's run well.  But when I am trying to run it from CMD I got this message :  ``` session not created: This version of ChromeDriver only supports Chrome version 97 Current browser version is 99.0.4844.51 ``` Before that I got this   ``` Starting ChromeDriver 97.0.4692.71 (adefa7837d02a07a604c1e6eff0b3a09422ab88d-refs/branch-heads/4692@{#1247}) on port 23849 Only local connections are allowed. ``` My chromedriver is :  ``` C:\Program Files\Selenium\ChromeDriver>chromeDriver -v ChromeDriver 99.0.4844.51 ``` What is the problem ? From where its take the sentence ""This version of ChromeDriver only supports Chrome version 97"" ? How can I make it works please ?  ### How can we reproduce the issue?  ```shell I am trying to run from CMD the command : mvn test ```   ### Relevant log output  ```shell session not created: This version of ChromeDriver only supports Chrome version 97 Current browser version is 99.0.4844.51 ```   ### Operating System  Windowa 10  ### Selenium version  4  ### What are the browser(s) and version(s) where you see this issue?  chrome  ### What are the browser driver(s) and version(s) where you see this issue?   99.0.4844.51  ### Are you using Selenium Grid?  _No response_","closed","needs-triaging,","mironb13","2022-03-14T13:17:26Z","2022-04-15T00:10:39Z"
"","10697","[🐛 Bug]: tab crashed","### What happened?   I am getting this error when trying to access any data (find_elements)  What I already tried:       chrome_options.add_argument('--no-sandbox')      chrome_options.add_argument('--disable-dev-shm-usage')  And a few more options like disable GPU, Javascript, etc. I don’t know, maybe the site itself is to blame, because on others there was almost never such a problem     ### How can we reproduce the issue?  ```shell from selenium.webdriver import DesiredCapabilities from selenium import webdriver as uc from selenium.webdriver.common.by import By  for u in [x.strip() for x in [     ""https://www.planetminecraft.com/texture-packs/?time_machine=y-2022&order=order_views&op1=128""]]:  # open(""links.txt"").readlines()     capa = DesiredCapabilities.CHROME     capa[""pageLoadStrategy""] = ""none""     d = uc.Chrome(desired_capabilities=capa)     while True:         d.get(u)         while d.execute_script(""return document.readyState"") != ""interactive"":             print(d.execute_script(""return document.readyState""))         links = [item.get_attribute('href') for item in d.find_elements(By.XPATH, '//a[@class=""r-title""]')]         print(links) ```   ### Relevant log output  ```shell File ""C:\Users\Mostalk\AppData\Local\Programs\Python\Python310\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 155, in get_attribute     attribute_value = self.parent.execute_script(   File ""C:\Users\Mostalk\AppData\Local\Programs\Python\Python310\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 879, in execute_script     return self.execute(command, {   File ""C:\Users\Mostalk\AppData\Local\Programs\Python\Python310\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 425, in execute     self.error_handler.check_response(response)   File ""C:\Users\Mostalk\AppData\Local\Programs\Python\Python310\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 247, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: session deleted because of page crash from tab crashed   (Session info: chrome=102.0.5005.63) Stacktrace: Backtrace: 	Ordinal0 [0x0100D953+2414931] 	Ordinal0 [0x00F9F5E1+1963489] 	Ordinal0 [0x00E8C580+836992] 	Ordinal0 [0x00E7E363+779107] 	Ordinal0 [0x00E7E04F+778319] 	Ordinal0 [0x00E7D646+775750] 	Ordinal0 [0x00E7C565+771429] 	Ordinal0 [0x00E7CB68+772968] 	Ordinal0 [0x00E7CAF8+772856] 	Ordinal0 [0x00E82D5A+798042] 	Ordinal0 [0x00E7DD3B+777531] 	Ordinal0 [0x00E7E265+778853] 	Ordinal0 [0x00E7E04F+778319] 	Ordinal0 [0x00E7D646+775750] 	Ordinal0 [0x00E7C565+771429] 	Ordinal0 [0x00E7CB68+772968] 	Ordinal0 [0x00E7CAF8+772856] 	Ordinal0 [0x00E82D5A+798042] 	Ordinal0 [0x00E7DD3B+777531] 	Ordinal0 [0x00E7E265+778853] 	Ordinal0 [0x00E7E04F+778319] 	Ordinal0 [0x00E7D646+775750] 	Ordinal0 [0x00E7C565+771429] 	Ordinal0 [0x00E7CB68+772968] 	Ordinal0 [0x00E94AF2+871154] 	Ordinal0 [0x00E8EBBB+846779] 	Ordinal0 [0x00E8E735+845621] 	Ordinal0 [0x00E8EF2F+847663] 	Ordinal0 [0x00E8F8EA+850154] 	Ordinal0 [0x00EE5249+1200713] 	Ordinal0 [0x00ED449C+1131676] 	Ordinal0 [0x00EE4812+1198098] 	Ordinal0 [0x00ED42B6+1131190] 	Ordinal0 [0x00EAE860+976992] 	Ordinal0 [0x00EAF756+980822] 	GetHandleVerifier [0x0127CC62+2510274] 	GetHandleVerifier [0x0126F760+2455744] 	GetHandleVerifier [0x0109EABA+551962] 	GetHandleVerifier [0x0109D916+547446] 	Ordinal0 [0x00FA5F3B+1990459] 	Ordinal0 [0x00FAA898+2009240] 	Ordinal0 [0x00FAA985+2009477] 	Ordinal0 [0x00FB3AD1+2046673] 	BaseThreadInitThunk [0x76DC6739+25] 	RtlGetFullPathName_UEx [0x77C48E7F+1215] 	RtlGetFullPathName_UEx [0x77C48E4D+1165] ```   ### Operating System  Windows 11  ### Selenium version  Python 4.13  ### What are the browser(s) and version(s) where you see this issue?  Chrome 102.0.5005.63  ### What are the browser driver(s) and version(s) where you see this issue?  Chromedriver 102.0.5005.61  ### Are you using Selenium Grid?  _No response_","closed","I-defect,","Mostalk","2022-05-26T17:25:09Z","2022-07-09T00:10:54Z"
"","10495","[🐛 Bug]: Not able to read url to parallel instances in edge browser for IE mode using selenium","### What happened?   Edge(IE mode), parallel instance of edge in IE mode does not open/load the url. It load's the url only in one instance, for rest of the instances url does not load(struck on localhost #### page). Also, no error is thrown by the selenium.     ### How can we reproduce the issue?  ```shell System.setProperty(""webdriver.ie.driver"", ""C:\\Selenium\\IEDriverServer.exe"");             InternetExplorerOptions options = new InternetExplorerOptions();             options.attachToEdgeChrome();              options.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");              options.ignoreZoomSettings();              options.introduceFlakinessByIgnoringSecurityDomains();              options.disableNativeEvents();             options.requireWindowFocus();             options.setUnhandledPromptBehaviour(UnexpectedAlertBehaviour.ACCEPT);             options.destructivelyEnsureCleanSession();             options.enablePersistentHovering();               DriverFactory.getInstance().setDriver(new InternetExplorerDriver(options)); ```   ### Relevant log output  ```shell In console it is not showing any error logs , it is showing all expected execution steps. ```   ### Operating System  Windows 10  ### Selenium version  Selenium 4.1.2  ### What are the browser(s) and version(s) where you see this issue?  edge 99.0.1150.55  ### What are the browser driver(s) and version(s) where you see this issue?  IEDriverServer 4.0.0  ### Are you using Selenium Grid?  No","closed","G-msedgedriver,","Akshatha-chowta","2022-03-30T10:00:17Z","2022-05-13T00:14:32Z"
"","10521","[🐛 Bug]: There seems to be a circular dependency bug with the js part of selenium","### What happened?   ![未命名图片3](https://user-images.githubusercontent.com/22679011/162108259-9f4678ef-1785-4df9-bcf8-96e35627203d.png) A circular dependency error appeared when we tried to compile the js part of Selenium.It looks like locators.js depends on relative.js which in turn depends on locators.js ![未命名图片](https://user-images.githubusercontent.com/22679011/162107360-e045b3f0-602d-4bb4-a7ad-fb7b4b531971.png) ![未命名图片2](https://user-images.githubusercontent.com/22679011/162107390-c3b21cb2-0831-4ebb-a25a-c823018e9765.png)   ### How can we reproduce the issue?  ```shell python calcdeps.py --path ./selenium-trunk -e selenium-trunk\third_party\closure\goog\i18n\compactnumberformatsymbols_ext.js --input ./selenium-trunk/javascript/selenium-atoms/select.js --output_mode compiled --compiler_jar ./selenium-trunk/third_party/closure/bin/compiler.jar > tmp.js   # calcdeps.py is from google closure ```   ### Relevant log output  ```shell N/A, command line execution error ```   ### Operating System  Window 10  ### Selenium version  4.1.0  ### What are the browser(s) and version(s) where you see this issue?  N/A  ### What are the browser driver(s) and version(s) where you see this issue?  N/A  ### Are you using Selenium Grid?  N/A","open","I-defect,","killerwhite","2022-04-07T02:29:57Z","2022-04-07T14:19:42Z"
"","10408","[java] add deprecation notices to Grid logs and Java stdout","### Update I had to change the code quite a bit because what Java was building and what the Grid was receiving turned out to be more different than I realized. So most of the discussion in this initial post is out of date.  -----  As discussed in TLC meeting today, to address #10374   ~Note: this is in DRAFT until we add the documentation (and update the URL as desired) and write the blog post.~  This is what the output looks like: https://gist.github.com/titusfortner/f75a3bff9b1b9946687ae8069f112f7f 4 conditions:  1. Client sends Options with only w3c syntax (Se 4 Ruby/.NET/JS) — No warnings 2. Client sends Options with a valid handshake with both W3C & OSS and driver supports w3c (Se 3; Se 4 Java) — No warnings 3. Client sends Options a valid handshake with both W3C & OSS, but driver only supports or is set to use OSS — Warning that OSS mode deprecated 4. Client sends only OSS Capabilities (Se 2 or DesiredCapabilities class) — Warning to use W3C Capabilities  One issue is for use case 2, if the user is working with Selenium 3.0 - 3.8.1 (handshake, but not fully w3c compliant), Selenium reports w3c mode, but will attempt to convert any commands that aren't w3c compliant. So these people might likely wouldn't get warnings, but would have code stop working after we remove deprecations. The bright side is that only 6% of downloads are in this range for Java, and the likelihood that these people have not updated their client version, but *have updated their Grid version is likely an extremely small cross-section","closed","C-java,","titusfortner","2022-03-02T20:06:59Z","2022-05-25T21:14:02Z"
"","10314","[🚀 Feature]: Window events listener onWindowMove","### Feature and motivation  Would be great to have ability to capture movements of the browser window.  There are two ways of testing in browser: 1. Tests automation. When you start all of your tests from command line and it goes through all of your test suits. 2. Live/hot reload. When software engineer does coding and observes changes in the browser.  In the scenario of a live/hot reload, software engineer may move their browser windows all over the screen or even multiple screens.  Would be great to be able to capture these movements to enable to save and restore windows setup. Currently, we can get/set window position, but we can't listen to changes. https://www.selenium.dev/documentation/webdriver/browser/windows/#get-window-position  I suppose it should be part of BiDirectional API. https://www.selenium.dev/documentation/webdriver/bidirectional/bidi_api/  What do you think about that?  ### Usage example  ``` const {Builder, By} = require('selenium-webdriver'); (async () => {   try {     let driver = new Builder()       .forBrowser('safari')       .build();      const observeMe = await driver.getWindowHandle();     await driver.onWindowMove(observeMe, async function (event) {       const rect = await driver.manage().window(event.windowHandle).getRect();       console.log(rect);     });   } catch (e){     console.log(e);   } })(); ```","closed","I-enhancement,","maximandrews","2022-02-02T01:28:33Z","2022-03-05T00:09:36Z"
"","10808","[🚀 Feature]: Implement Touch specific functionality in actions","### Feature and motivation  With the move to w3c, the previous Touch Actions API was made obsolete.  For single finger interactions, a user can set the pointer input ""type"" to be a ""finger"" similar to how this example shows it being set as a ""pen"": https://www.selenium.dev/documentation/webdriver/actions_api/pen/#using-a-pen  And then do all the things that any pointer input can do: https://www.selenium.dev/documentation/webdriver/actions_api/mouse/  What the existing implementations do not make easy is multiple inputs (fingers) acting simultaneously.  We should consider creating an API or options for things like ""pinch,"" ""zoom,"" and ""scroll"".  Whatever this API is, it should match what an Appium user does or would expect to do in native application contexts.   ### Usage example  ```java new Actions(driver)         .zoom(locus, startRadius, endRadius, pinchAngle, duration)         .perform(); ```","open","I-enhancement,","titusfortner","2022-06-24T15:09:45Z","2022-06-29T14:30:20Z"
"","10335","[🚀 Feature]: Support WebDriver BiDi and ""log.entryAdded"" events (with Firefox)","### Feature and motivation  With the [WebDriver BiDi specification](https://w3c.github.io/webdriver-bidi/) moving forward it would be great to see support for this protocol being added to Selenium. In case of Firefox we already added the `log.entryAdded` event and relevant commands like `session.subscribe` to get relevant logging events for console API calls and Javascript exceptions on the page.  Given the high request of Selenium users for such an API it would be great to move the current implementation for Firefox which is based on CDP over to WebDriver BiDi. On our side we have the following bug on file:  https://bugzilla.mozilla.org/show_bug.cgi?id=1753991  CC'ing @AutomatedTester, @shs96c, @titusfortner, @diemol  ### Usage example  From the user's perspective the API for logging events might not change and could probably the same as when using the CDP backend.","open","C-devtools,","whimboo","2022-02-07T17:30:11Z","2022-02-09T20:50:28Z"
"","10115","[🚀 Feature]: Support stereotypes `configs` from the CLI with Relay","### Feature and motivation  When I'm trying to [relay commands to a service endpoint](https://www.selenium.dev/documentation/grid/configuring_components/toml_options/#relaying-commands-to-a-service-endpoint-that-supports-webdriver) via CLI, I only found 4 options in the [CLI Options Docs](https://www.selenium.dev/documentation/grid/configuring_components/cli_options/#relay) (`--service-url`, `--service-host`, `--service-port` and `--service-status-endpoint`). I cannot find an option that corresponds to `configs` for the `[relay]` in TOML Options to define stereotypes supported by the service.  ### Usage example  According to [selenium/java/src/org/openqa/selenium/grid/node/relay/RelayOptions.java](https://github.com/SeleniumHQ/selenium/blob/319fd1afd7cfd9fd5418320de8bc8396e3bb70a5/java/src/org/openqa/selenium/grid/node/relay/RelayOptions.java), it seems like `configs` should contain `maxSessions` and `stereotype`, so the usage may look like: ``` java -jar selenium-server-.jar node --relay-configs max-sessions=1 stereotype='{""browserName"": ""safari"", ""platformName"": ""iOS"",  ""appium:platformVersion"": ""14.5""}' --service-url ""http://localhost:4723/wd/hub"" ```","closed","I-enhancement,","cytung","2021-12-07T02:20:37Z","2022-01-14T00:07:36Z"
"","10642","Selenium Web Driver : Start Up Log : instance identification","### Feature and motivation  When I start Selenium Chrome Driver ""Version 101.0.4951.67 ( 12/05/2022 7:52 AM ) : 2.50 MB""  a log file is opened in a window and messages written to it. The messages do not include the ""Process Identifier"" allocated by Windows 10,  nor does it display the date/time when the Driver instance was started.  I run many instances of Selenium Chrome Driver concurrently. They may , or may not be spawned by the same parent process. For various reasons the parent process may no longer able to shut down a specific instance. So Windows 10 Process Monitor must be used to manually remove the Driver instance. However identifying the orphaned instance is guess work.  If the Driver log displayed PID and Start/Time this ambiguity could be eliminated. It would also be useful if the parent process had identified itself at Browser Start. This could be easily done by allowing a start up preference like this . . .      Driver.setPreference ""browser.startup.invokedby"", ""ShippingScheduleDownloader.exe""  Killing the wrong Driver instance can be extremely inconvenient ![Selenium Chrome Driver ~ Log file](https://user-images.githubusercontent.com/105487255/168253721-62cad11a-bcd8-494a-b1a9-7e62e01617d3.png) .  ### Usage example  Use Case : A Process, that initiated Selenium Chrome Driver, crashes. The Selenium Chrome Driver continues to run. Its Chrome Browser has its Profile Directory locked. By killing the Selenium Chrome Driver all resources and points of potential contention are released. I should be able to look at each of the Selenium Chrome Driver log windows and see which one was started at the requisite time, and invocation context (""invokedby""). The Selenium Chrome Driver log window will also show the Process Identifier of Selenium Chrome Driver. Using the Process Identifier I would then  use Windows 10 Process Monitor to kill the orphaned process only.","closed","G-chromedriver,","BugFinderBugFixer","2022-05-13T09:44:29Z","2022-06-13T00:13:40Z"
"","10884","[🚀 Feature]: Get download percentage","### Feature and motivation  When downloading files from a website sometimes we need to check if the download have ended and the file is ready. A native way to check this would be very useful. As you can see in this link with more than 80k views its relatively popular request. https://stackoverflow.com/questions/34338897/python-selenium-find-out-when-a-download-has-completed  There are some work around but they are not perfect. Checking the download folders manually can cause problems when there are other programs that are also downloading in the same folder.  Checking .crdownload files can be a problem when you are downloading multiple files. Checking a file name can be a problem because sometimes filenames are send random from the server.  The code below is a good attempt and works ok for big files but I had problems with small ones and sometimes fails for some reason. ``` downloadPercentage = driver.execute_script(                 ""return document.querySelector('downloads-manager').shadowRoot.querySelector('#downloadsList downloads-item').shadowRoot.querySelector('#progress').value"") ```  A native way to check if download finished or not, what is the percentage, did the download finished successfully or failed, would be very usefull.  ### Usage example  I want to use this feature when downloading many files from a website that requires login and only allow some number of concurrent downloads at the same time. So that I can download one file, wait for it to finish and download next one. Also I can start processing the files as soon as they finish downloading.","closed","I-enhancement,","canklot","2022-07-17T19:19:27Z","2022-08-03T21:41:49Z"
"","10135","[🚀 Feature]: Access to ShadowRoot in typescript","### Feature and motivation  What I am looking for is to obtain the elements contained in ShadowRoot to be able to interact with them through Selenium. Thanks. This proposal comes because of the problems I am having in Chrome 96  ### Usage example  ```javascript public async getExtShadowRoot(selectorShadowHost: string): Promise {     let shadowHost: WebElementPromise;     await (shadowHost = this.driver.findElement(By.css(selectorShadowHost)));     return this.driver.executeScript(""return arguments[0].shadowRoot"", shadowHost);   }    public async findShadowDomElement(selectorShadowHost: string, selectorShadowDomElement: string) {     let shadowRoot;     let element;     await (shadowRoot = this.getExtShadowRoot(selectorShadowHost));     await shadowRoot.then(async (result) => {       await (element = result.findElement(By.css(selectorShadowDomElement)));     });     return element    } ```  Get access to the element identified by the .container selector from within a ShadowRoot  ``` javascript @findByIntoSahdowRoot('settings-ui', '.container')   public element!: WebComponent; ```","open","I-enhancement,","adomened","2021-12-11T14:14:44Z","2022-01-05T18:00:20Z"
"","10646","[🚀 Feature]: [py]: Remove python2 syntax from /py","### Feature and motivation  We are officially supporting python3.7+ however the code base has a lot of references to the python2 syntax.  Some efforts have began eradicating some of them already, It would be good to upgrade everything, should have some minor performance improvements and reflect what we support accurately.  Aiming for `4.3` to include everything here.","closed","I-enhancement,","symonk","2022-05-14T10:26:11Z","2022-07-19T00:16:02Z"
"","10754","[🚀 Feature]: deno support","### Feature and motivation  We are moving away from nodejs to deno. Selenium is important too us and it would be great to have deno support as an alternative to nodejs. I have tried to use the CDN https://www.skypack.dev/view/selenium-webdriver But I still get an error of http being required  /*  * [Package Error] [Package Error] ""http"" does not exist. (Imported by ""selenium-webdriver:14:7"").  *  * The package ""selenium-webdriver:14:7"" depends on this Node.js built-in module.  * Node.js built-in modules (like ""fs"", ""http"", etc.) are Node.js-specific, and do  * not exist in non-Node environments like Deno or the web browser. Skypack CDN polyfills  * most of these modules for you automatically, but this one could not be polyfilled.  *  * How to fix:  *   - Let the package author know that you'd like to run their package in the browser.  *   - Use https://skypack.dev/ to find a web-friendly alternative to find another package.  */  throw new Error(""[Package Error] \""http\"" does not exist. (Imported by \""selenium-webdriver:14:7\"").""); export default null;  I have posted a request on deno side for compat mode to include http but in reality if would far better to just have selenium work directly with deno instead of using compat mode.  ### Usage example  Testing UI in a deno environment void of nodejs","open","help wanted,","caperaven","2022-06-09T13:11:08Z","2022-06-10T07:43:00Z"
"","10183","[🚀 Feature]: Support setting timeouts in capabilities","### Feature and motivation  W3C supports adding timeout values when starting a session, which isn't currently implemented in .NET The existing Timeout classes need to be subclassed or superclassed to make it work correctly, and I'm not sure which one.  ### Usage example  Setting timeouts on the driver currently looks like this: ``` driver.Manage().Timeouts().PageLoad = TimeSpan.FromSeconds(2); ``` So I think the API will look like this ``` options.Timeouts().ImplicitWait = TimeSpan.FromSeconds(1); options.Timeouts().AsynchronousJavaScript = TimeSpan.FromSeconds(1); options.Timeouts().PageLoad = TimeSpan.FromSeconds(2); ```","open","I-enhancement,","titusfortner","2021-12-25T16:24:24Z","2021-12-25T16:24:24Z"
"","9984","[🚀 Feature]: use Selenium C# get the chrome-version:81.0.4044.138 x64 Session Storage，Exception:Driver doest not support manipulating HTML5 web storage. Use the HasWebStrorage property to test the driver capability","### Feature and motivation  use Selenium C# get the Session Storage by chrome-version:81.0.4044.138 x64 ，Exception:Driver doest not support manipulating HTML5 web storage. Use the HasWebStrorage property to test the driver capability。  ### Usage example  ` RemoteWebDriver remote=(RemoteWebDriver )selenium;  string vuex=remote.WebStorage.SessionStorage.getItem(""vuex"");  //the code can use Other Chrome Version:Ex 62 75  `","closed","","312855935","2021-10-26T05:02:36Z","2021-11-26T00:06:37Z"
"","10691","[🚀 Feature]: Add Pause action to C# API","### Feature and motivation  Unlike other languages, the C#/DotNet language API does not have the Pause method on the Actions class and the PauseInteraction is unable to be instantiated for use with the ActionBuilder class as it marked as internal. I believe this is an oversight and the API should have been included already.  ### Usage example  https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/interactions/Actions.html#pause(long)","closed","I-enhancement,","sbMohammadUddin","2022-05-25T15:06:30Z","2022-06-27T00:12:21Z"
"","10692","[🚀 Feature]: Add support for Chromium's ""preferCSSPageSize"" to PrintOptions","### Feature and motivation  This should be an easy addition.  It's just a PrintOption addition i.e. preferCSSPageSize true:false  ### Usage example  This is useful when automating PDF creation.  It allows page sizing to be done in the CSS rather than hard-coding or via complex settings management.","closed","needs-triaging,","redmist77","2022-05-26T01:31:26Z","2022-06-26T00:14:13Z"
"","10069","[🐛 Bug]: 1>CSC : warning CS8002: Referenced assembly 'WebDriver, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null' does not have a strong name.","### Feature and motivation  This is with Selenium.WebDriver v4.0.1 downloaded via Nuget for C# in VS2015. The package should be signed.  ### Usage example  Simply add the reference to a ClassLib project.","closed","needs-triaging,","Nebenaube","2021-11-20T17:28:31Z","2021-12-25T00:07:05Z"
"","10652","[🚀 Feature]: [py] A common interface/mixin for element location `find_element(...)` & `find_elements(...)`","### Feature and motivation  There is some duplication throughout the following areas that are (largely) carrying out the same tasks:  ```console grep -rE ""def find_elements?\("" *  selenium/webdriver/remote/webdriver.py:    def find_element(self, by=By.ID, value=None) -> WebElement: selenium/webdriver/remote/webdriver.py:    def find_elements(self, by=By.ID, value=None) -> List[WebElement]: selenium/webdriver/remote/webelement.py:    def find_element(self, by=By.ID, value=None): selenium/webdriver/remote/webelement.py:    def find_elements(self, by=By.ID, value=None): selenium/webdriver/remote/shadowroot.py:    def find_element(self, by: By = By.ID, value: str = None): selenium/webdriver/remote/shadowroot.py:    def find_elements(self, by: By = By.ID, value: str = None): selenium/webdriver/support/event_firing_webdriver.py:    def find_element(self, by=By.ID, value=None): selenium/webdriver/support/event_firing_webdriver.py:    def find_elements(self, by=By.ID, value=None): selenium/webdriver/support/event_firing_webdriver.py:    def find_element(self, by=By.ID, value=None): selenium/webdriver/support/event_firing_webdriver.py:    def find_elements(self, by=By.ID, value=None): ```  Note: `EventFiringWebDriver` is just dynamically dispatching calls at runtime and implements nothing itself.  These areas can likely be simplified by exposing some sort of `LocatesElementsMixin` (or whatever is better named in line with other bindings; a mixin class is just an idea as it has some drawbacks too, but this issue is more just to figure out what would be a good approach to unifying it.  A few of the problems:   - Keeping backwards compatibility  - The actual webdriver `Command` dispatch varies throughout  - instance attributes vary in naming which makes a mixin class a little tougher and unclean  Curious on your thoughts to this?  @AutomatedTester has a comment in `ShadowRoot.py` here; I assume it was also aiming to move towards something _like_ this?  https://github.com/SeleniumHQ/selenium/blob/575b878db2efccdde95ea8d0bdf6b8db4bea1fa0/py/selenium/webdriver/remote/shadowroot.py#L26  Python is not java of course so we should keep that in mind and leverage duck typing etc where applicable.","open","I-enhancement,","symonk","2022-05-15T17:49:36Z","2022-06-08T19:42:10Z"
"","10738","[🚀 Feature]: Add a codecov badge to the repository","### Feature and motivation  There is a codecov check that happens for some of the code. I think it would be good to see the percent code coverage on the main page of the Selenium repository.  ### Usage example  This is useful to see how the code coverage is on the repository.","closed","","ollie-iterators","2022-06-06T16:23:26Z","2022-07-08T00:14:19Z"
"","10032","[🚀 Feature]: Remove unused Touch Endpoints in python","### Feature and motivation  There are a number of endpoints to do with touch that are legacy and are not used. The new Actions API support these much better. We need to remove them in https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py#L322-L337 and anywhere using the `Command` class  ### Usage example  When you've done that please make sure to run the python tests with bazel test //py:auto-firefox --//common:pin_browsers and bazel test //py:auto-chrome --//common:pin_browsers","closed","help wanted,","AutomatedTester","2021-11-12T17:24:28Z","2022-01-27T00:06:51Z"
"","10031","[🚀 Feature]: Remove legacy end points in favour of W3C in python bindings","### Feature and motivation  There are a number of dead endpoints in the python code that have been improved through the standards process. We should remove them.  If there is a `W3C_` endpoint like https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py#L284-L285 we should delete the similarly named non-W3C endpoint like https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py#L282-L283  ### Usage example  When you've done that please make sure to run the python tests with `bazel test //py:auto-firefox --//common:pin_browsers` and `bazel test //py:auto-chrome --//common:pin_browsers`","closed","help wanted,","AutomatedTester","2021-11-12T15:07:51Z","2021-12-31T00:07:21Z"
"","9996","[🚀 Feature]: Support advanced properties defined in WebDriver specification for pointer actions","### Feature and motivation  The W3C WebDriver Specification defines several [properties for pointer actions](https://w3c.github.io/webdriver/#pointer-actions) that the Selenium language bindings do not yet allow users to access. These properties are: * width * height * pressure * tangentialPressure * tiltX * tiltY * twist * altitudeAngle * azimuthAngle Each set of language bindings should be capable of sending these properties of a pointer action across the wire as part of the JSON payload for the actions command.  ### Usage example  Actions helper classes do not expose this type of functionality at this time, but builders of actions should allow such properties to be used.","closed","I-enhancement,","jimevans","2021-10-28T22:11:26Z","2022-06-07T00:10:11Z"
"","10129","[🚀 Feature]: Python Difficulties with ShadowRoot object interface","### Feature and motivation  The ShadowRoot object interface differs from the WebElement object interface in terms of keyword arguments on some similar functions:  Currently the ShadowRoot object find_element and find_elements functions have the signature:  `def find_element(self, using, value):`  `def find_elements(self, using, value):`  however the webelement objects have:  `def find_element(self, by=By.ID, value=None):`  `def find_elements(self, by=By.ID, value=None):`  The issue with this is that it prevents using the shadow root elements and the web elements when duck typing as if you try and use something like:  `element.find_element(by=By.NAME, value='test-element')`  this won't work when the element happens to be a shadow root as the keyword arguments don't line up (forcing you to not use keyword arguments).   Another issue i've run into when migrating to selenium 4 is that the ShadowRoot class is hidden from the interface, which i think is because in the Java and .net versions of the package the aim is to use the SearchContext, however this isn't available in the python package and so it feels a bit difficult to use as a result e.g.  - theres no option to overwrite the internal functions with adjusted ones.   - The exception NoSuchShadowRootException doesn't seem to be public on the exceptions module - When you get a detached shadow root it seems to get wrapped into a NoSuchElementException whereas it would be nice if we could react to the shadow root becoming detached (similarly to a stale element exception) rather than it looking like the element doesn't exist.  ### Usage example  Aligning the interfaces between shadow roots and webelements would mean we could treat them similarly when a function might return either a shadow root or a web element and then whatever it returns we want to then search inside that element for another element, currently you need to treat them differently or not use keyword arguments.   If the ShadowRoot object was made public we would be able to monkeypatch functions within it, this can be useful for example we have a complicated dom structure where we want to search through elements and their shadow roots without needing to be too specific, e.g. find_element(By.NAME, 'publish-button') - This publish-button is unique on the page but we don't want to specify exactly which shadow root / element it is inside, in the past we have overwritten the find_element function to ignore certain shadow roots as they contain a lot of nested elements, which would take a long time.  Being able to import the NoSuchShadowRootException without getting warnings from your IDE would be a QOL change.  Being able to distinguish between a shadowroot becoming detached and the element not existing at all would be useful in error handling / retries.","closed","I-enhancement,","NickScottKortical","2021-12-10T11:50:11Z","2022-01-24T00:07:38Z"
"","10578","[🚀 Feature]: Allow user defined metadata in Sessions list in Selenium 4 Grid","### Feature and motivation  The Selenium4 grid ui has this new ""Sessions"" section containing a list with the columns ""Session, Capabilities, Start Time, Duration etc"".   It would be really helpful if it allowed a user-defined metadata field which could be displayed as column here.   For example, the user can set the testcase name programmatically as metadata which can then be showed in a separate column along with the sessionid.  Please see screenshot for example highlighted in red    ### Usage example  Feature can be used by sending important metadata like testcase name or some other test case related information programmatically. This will be helpful in mapping which session is for which test case and quickly select and click on the session and view the live VNC recording which is currently possible.","closed","I-enhancement,","ApexK","2022-04-26T14:32:23Z","2022-06-03T00:10:30Z"
"","10732","[🚀 Feature]: python 4.2.0 tag missing","### Feature and motivation  The git tag for https://pypi.org/project/selenium/4.2.0/ is missing.  ### Usage example  When building packages from source it is quite handy to have the git history right next to it.","closed","","SuperSandro2000","2022-06-03T20:37:55Z","2022-07-06T00:14:38Z"
"","10730","[🚀 Feature]: Replace HTTP Client in Java","### Feature and motivation  The client we currently use seems to be unmaintained https://github.com/AsyncHttpClient/async-http-client  ### Usage example  After checking for a while, this one seems to be a good replacement.  https://github.com/reactor/reactor-netty  Open to other alternatives though.   Ideally, we will add more details below about the implementation steps.","open","I-enhancement,","diemol","2022-06-02T13:25:00Z","2022-06-17T20:00:30Z"
"","9997","[🚀 Feature]: Need Firefox Profile settings","### Feature and motivation  The ability setting firefox profile is deprecated: https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0/py/selenium/webdriver/firefox/options.py#L102  It is said ""Ideally you can figure out what you need from your profile and set those using prefs"".  However, I want to use existing cookies from profile. If the api is removed, I must export the cookies as file, and then import to webdriver.  ### Usage example  Use profile with everything ready.","closed","needs-triaging,","srdr0p","2021-10-29T07:50:23Z","2021-12-17T00:06:57Z"
"","10610","[🚀 Feature]: How to load configuration for a Chome extension","### Feature and motivation  The 2captcha extension needs to set an ApiKey. So how to set the ApiKey when I use selenium to open a Chrome.  ### Usage example  extension_path1 = r'C:\Users\admin\AppData\Local\Google\Chrome\User Data\Default\Extensions\ifibfemgeogfhoebkmokieepdoobkbpo\3.0.7_0'  # Install extension options.add_argument(f'--disable-extensions-except={extension_path1}') options.add_argument(f'--load-extension={extension_path1}')  after loading the extension, how to use selenium to load the configuration for the extension?","closed","I-question,","pgshow","2022-05-05T11:15:56Z","2022-06-05T00:14:04Z"
"","10874","[🚀 Feature]: Keep support for MoveToElementOffsetOrigin.TopLeft","### Feature and motivation  Starting version 4.3 MoveToElementOffsetOrigin.TopLeft is not supported anymore (only Center is). Is it possible to bring this back in action MoveToElement? We have tests that are dedicated to click on certain points in canvas and recalculation from center is with our dataset simply impossible. I dont know what exactly happened that you stopped supporting this option for version 4.3 but for us is crucial breaking change.  ### Usage example  We simply want the option to calculate from top left corner like it was in version 4.2. Just make the center option default value but please consider to still supporting this otherwise we dont know how to change our data sets. [Obsolete(""Starting in Selenium 4.3 only MoveToElementOffsetOrigin.Center will be supported"")]     public Actions MoveToElement(       IWebElement toElement,       int offsetX,       int offsetY,       MoveToElementOffsetOrigin offsetOrigin)     {       Actions.GetLocatableFromElement(toElement);       if (offsetOrigin == MoveToElementOffsetOrigin.TopLeft)       {         Size size = toElement.Size;         int xOffset = offsetX - size.Width / 2;         int yOffset = offsetY - size.Height / 2;         this.actionBuilder.AddAction(this.defaultMouse.CreatePointerMove(toElement, xOffset, yOffset, this.DefaultMouseMoveDuration));       }       else         this.actionBuilder.AddAction(this.defaultMouse.CreatePointerMove(toElement, offsetX, offsetY, this.DefaultMouseMoveDuration));       return this;     }","closed","needs-triaging,","Hujanita","2022-07-14T11:48:00Z","2022-07-14T14:47:09Z"
"","10182","[🚀 Feature]: Add startDesktopMirroring functionality","### Feature and motivation  StartDesktopMirroring is now supported for Chromium casting.   ### Usage example  See Python Example from #10150","closed","I-enhancement,","titusfortner","2021-12-24T22:20:11Z","2022-01-31T00:07:15Z"
"","10898","[🚀 Feature]: Support disable-build-check in c# chromedriver implementation","### Feature and motivation  Sometimes Chrome/Chromedriver versions that are compatible have bugs which makes upgrading or downgrading temporarily to a distinct chromedriver version desirable.  One example is:  https://bugs.chromium.org/p/chromedriver/issues/detail?id=4121  This was fixed in the next beta release of chromedriver for several weeks before getting backported to the version where it was originally broke. Trying to run the beta 104 chromedriver against the stable 103 chrome browser was impossible in C# powered selenium automation because the current ChromeDriverService and ChromiumService in C#:  * Uses sealed classes and protected constructors * Doesn't have support for the property `disableBuildCheck` arguments  For reference, this is the flag in chromedriver:  https://github.com/bayandin/chromedriver/blob/d9865ee18a2ac228d4e5f41ff2c950992cc0b788/chrome_launcher.cc#L280  Java supports the flag, as introduced by @diemol:  https://github.com/SeleniumHQ/selenium/blob/c7be1be9e1053488d13aab76a76598dbf0a39a56/java/src/org/openqa/selenium/chrome/ChromeDriverService.java#L274-L276  C# does not:  https://github.com/SeleniumHQ/selenium/blob/c7be1be9e1053488d13aab76a76598dbf0a39a56/dotnet/src/webdriver/Chromium/ChromiumDriverService.cs#L123  Can this be added to the c# implementation of chromedriver?  ### Usage example  I tried to explain that in the Feature and Motivation, let me know if that wasn't clear enough from that section and I can attempt to explain further.","closed","needs-triaging,","ojintoad","2022-07-21T21:30:57Z","2022-07-22T17:37:42Z"
"","9951","[🚀 Feature]: selenium-server-4.0.0.jar googleapis synchronization","### Feature and motivation  selenium-server-4.0.0.jar  There is no download address in    ### Usage example  Should be synchronized","closed","","liushilive","2021-10-19T06:57:36Z","2021-11-19T00:06:33Z"
"","10196","[🚀 Feature]: switch Java-tests from JUnit 4 to JUnit 5","### Feature and motivation  Selenium still uses JUnit 4 (see eg https://github.com/SeleniumHQ/selenium/blob/702b3aae7385adf331d75cdeacd79720cf6b9c84/java/maven_deps.bzl#L56, https://github.com/SeleniumHQ/selenium/blob/702b3aae7385adf331d75cdeacd79720cf6b9c84/java/test/org/openqa/selenium/testing/JUnit4TestBase.java#L35) JUnit 5 is out since 2017 and widely adopted.  I´m asking for this because there are issues when using JUnit 5 and Selenium 4 together. (https://github.com/SeleniumHQ/selenium/issues/9359) IMO such issues already should be recognized during automated testing.","closed","help wanted,","christophs78","2021-12-29T10:19:30Z","2022-07-06T04:43:39Z"
"","10842","[🚀 Feature]: selenium 4 supports PageFactory","### Feature and motivation  selenium 4 supports PageFactory similar to Se v3   ### Usage example  public class PublicPage {     public WebElement element;   }    public static class Page {     @FindBy(name = ""someForm"")     WebElement formElement;      @FindBy(tagName = ""div"")     @CacheLookup     List divs;   }","closed","needs-triaging,","agaramudhala","2022-07-04T06:05:50Z","2022-07-04T14:09:30Z"
"","9942","[🚀 Feature]: OpenTelementry tracing: split ""command"" tag to ease the search","### Feature and motivation  Selenium 4 is outputting OpenTelemetry traces. The traces have tag ""command"" which is a string concatenation of sessionId, commandName, and commandParameters. In order to make the search easier, it is better to split the concatenated ""command"" tag: https://github.com/SeleniumHQ/selenium/blob/702b3aae7385adf331d75cdeacd79720cf6b9c84/java/src/org/openqa/selenium/remote/TracedCommandExecutor.java#L38  ### Usage example  Be able to filter all traces per given session ID.","closed","help wanted,","llatinov","2021-10-16T08:48:30Z","2021-12-23T00:07:18Z"
"","10885","[🚀 Feature]: do we have any plan to support Safari on grid 4?","### Feature and motivation  Safari is a browser most of the senior managers are using. do we have any plan to support it?  ### Usage example  senior managers are using mac book with safari","closed","I-question,","RayChenLDL","2022-07-17T23:30:01Z","2022-07-18T16:49:34Z"
"","10036","[🚀 Feature]: [python] Set default executable path in service object","### Feature and motivation  Right now using the webdriver (for i.e. firefox) is done by:  ``` from selenium.webdriver import Firefox driver = Firefox() ``` This works since the `executable_path` is set to a [default:](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/webdriver.py#L47) but this option is deprecated and will be replaced by the [service object](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/service.py).  But the service object does not have a default executable path.  So right now, the following does not work:  ``` from selenium.webdriver import Firefox from selenium.webdriver.firefox.service import Service  driver  = Firefox(service=Service()) TypeError: __init__() missing 1 required positional argument: 'executable_path' ```  I don't known how this will be solved or handled in the future or if I'm missing something here but the [`DEFAULT_EXECUTABLE_PATH`](https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/firefox/webdriver.py#L36) should be defined in the service module for every browser and used as default in the Service object.  I am happy to do a PR  ### Usage example  See above.","closed","help wanted,","dosas","2021-11-13T16:17:09Z","2021-12-24T00:07:19Z"
"","10279","[🚀 Feature]: Read desired capabilities from Json file directly","### Feature and motivation  Read capabilities from json file directly from file system  WebDriver driver = new WebDriver(""PATH_TO_JSON_FILE/desiredCapabilities.json"");  ### Usage example  WebDriver driver = new WebDriver(""PATH_TO_JSON_FILE/desiredCapabilities.json"");   python has similar functionality and it ll be great if other programming languages support same","closed","","krishtoautomate","2022-01-23T03:31:35Z","2022-02-26T00:08:55Z"
"","10264","[🚀 Feature]: Remove Handshake code in Python","### Feature and motivation  Python still sends both capabilities and desired capabilities to the driver, which can result in an OSS session that isn't properly supported any more.  ### Usage example  N/A","closed","I-enhancement,","titusfortner","2022-01-19T20:54:08Z","2022-05-07T00:10:16Z"
"","10267","[🚀 Feature]: Add Safari Options to Python","### Feature and motivation  Python is the only language not to have a Safari Options class.  There are only 2 options, and they aren't likely to be used, so low priority, but should be an easy update for someone looking to jump in. Well, except that safari doesn't do `apple:safariOptions` like the other drivers, both of these options are individually namespaced with `safari:` so that might make things complicated in Python potentially  here's what Ruby has: https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver/safari/options.rb  ### Usage example  ```py     options = SafariOptions()     driver = webdriver.Safari(options=options) ```","closed","I-enhancement,","titusfortner","2022-01-19T21:28:07Z","2022-04-01T01:07:23Z"
"","10154","[🚀 Feature]: Using Selenium with PowerShell","### Feature and motivation  PowerShell is a powerful language that is automatically installed and updated on a user's computer that has Windows installed. However, for some reason, there's not a lot of documentation on the use of PowerShell and Selenium. It would be nice to have this as an option to C#, Python, etc., where people could use Selenium with PowerShell. Then, people could use PowerShell and Selenium to utilize all the WebDriver capabilities.   ### Usage example  $ScriptPath = ""C:\Users\lpeder6\Documents\PowerShell\Selenium""  Add-Type -Path ""$ScriptPath\WebDriver.dll""  $SeleniumOptions = New-Object OpenQA.Selenium.Edge.EdgeOptions  $SeleniumOptions.UseWebSocketUrl = ""http://omega2010.uhc.com/Production""  $SeleniumOptions.LeaveBrowserRunning = $true  New-Variable -Name EdgeS -Value ([OpenQA.Selenium.Edge.EdgeDriverService]) -Force $DefaultService = $EdgeS::CreateDefaultService()  $DefaultService.HideCommandPromptWindow = $true  $Edge = New-Object OpenQA.Selenium.Edge.EdgeDriver -ArgumentList @($DefaultService, $SeleniumOptions)  #This is the same as 'session_id = driver.session_id $Handle = $Edge.WindowHandles  #Not sure how to use the handle to reuse the URL $Edge.Navigate().GoToUrl(""http://mywebsite.com"")","closed","needs-triaging,","lpeder6","2021-12-15T18:09:49Z","2022-01-17T00:07:47Z"
"","10879","[🚀 Feature]: Support Select Lists in Javascript","### Feature and motivation  Our web application has implemented multi-select lists and I want to exercise selecting multiple list entries in our automated tests.  ### Usage example  After building a list of values to include or exclude in a query, the user can multi-select values in the list to remove with one button click.  I cannot automate this with our code that is implemented in javascript.","open","I-enhancement,","PeteSwauger","2022-07-14T21:00:54Z","2022-07-15T15:57:49Z"
"","10130","[🚀 Feature]:  Switching between drivers/Switching between two or more browser windows with single driver/multiple drivers.","### Feature and motivation  Our team is working on a project wherein we need to automate an application with multiple users simultaneously . Therefore, we need to perform set of workflows on say user 'A' and switch to user 'B' to approve the actions performed on user 'A'. Now, again switch back to user 'A' and perform some more actions and so on. To automate this workflow we need two browser windows running simultaneously, and this requires two drivers to trigger two browser windows. Therefore, we are using two drivers to automate this scenario.  Problem Statement: Selenium supports switching between two different browser tabs/windows, but there is no such feature to switch between two drivers in selenium.  ### Usage example  Selenium community is very vast and provides numerous solutions in automating web applications. While researching on driver switch workflow over the internet in various discussion forums, we noticed that there are many organizations and individuals who are stuck with this problem statement. Therefore, we think it will be a great help to the whole selenium community if this feature (switching between drivers) is being developed.  An example code snippet is attached for your reference. [Demo.zip](https://github.com/SeleniumHQ/selenium/files/7692970/Demo.zip)","closed","I-enhancement,","mustaq-13","2021-12-10T13:19:57Z","2022-01-15T00:07:24Z"
"","10616","[🚀 Feature]: Does dotnet have any plans to add performance to LogType?","### Feature and motivation  options. SetLoggingPreference(""performance"", OpenQA.Selenium.LogLevel.All);  ### Usage example   options.SetLoggingPreference(""performance"", OpenQA.Selenium.LogLevel.All);    var GetLog = driver.Manage().Logs.GetLog(""performance"");","closed","I-enhancement,","wqscode","2022-05-06T08:30:49Z","2022-06-09T00:11:25Z"
"","10379","[🚀 Feature]: Remove Opera Classes","### Feature and motivation  opera driver has not been updated to support w3c, so we've agreed to remove those classes.  ### Usage example  Ruby deleted the classes for Selenium 3 release.  Users can use Chromedriver for opera with `ChromeOptions` class and `setBinary` with the path to the Opera Browser.","open","help wanted,","titusfortner","2022-02-19T21:44:19Z","2022-07-20T18:24:13Z"
"","10822","[🚀 Feature]:  W3C Capabilities of InternetExplorerOptions","### Feature and motivation  Once we execute with Edge IE Mode, there is warn in log  ``` Support for Legacy Capabilities is deprecated; You are sending the following invalid capabilities: [elementScrollBehavior, enablePersistentHover, ie.browserCommandLineSwitches, ie.edgechromium, ie.edgepath, ie.enableFullPageScreenshot, ie.ensureCleanSession, ie.fileUploadDialogTimeout, ie.forceCreateProcessApi, ie.useLegacyFileUploadDialogHandling, ie.usePerProcessProxy, ignoreProtectedModeSettings, ignoreZoomSetting, initialBrowserUrl, nativeEvents, requireWindowFocus, silent]; Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/ ```  I tried to set almost values from docs (https://www.selenium.dev/documentation/webdriver/capabilities/internet_explorer/),  I'm sure there are some capabilities expired in Edge IE Mode ( as we should only have this way to run IE at this moment),  but what's the qualified capability? And meanwhile, there won't any Deprecated in InternetExplorerOptions, so user don't know what should be using with latest Selenium.  ### Usage example   Full configurations case  ```   @Test   public void internetExplorerOptionsTest() {     ieOptions = new InternetExplorerOptions();     ieOptions.attachToEdgeChrome();     ieOptions.ignoreZoomSettings();     ieOptions.destructivelyEnsureCleanSession();     ieOptions.requireWindowFocus();     ieOptions.introduceFlakinessByIgnoringSecurityDomains();     ieOptions.takeFullPageScreenshot();     ieOptions.disableNativeEvents();     ieOptions.waitForUploadDialogUpTo(Duration.ofMillis(1000L));     ieOptions.useLegacyUploadDialog();     ieOptions.elementScrollTo(ElementScrollBehavior.TOP);     ieOptions.enablePersistentHovering();     ieOptions.usePerProcessProxy();     ieOptions.useCreateProcessApiToLaunchIe();     ieOptions.addCommandSwitches(""-k"");     ieOptions.addCommandSwitches(""-private"");     ieOptions.setCapability(""silent"", true);     ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");     ieOptions.withInitialBrowserUrl(""https://www.ianzhang.cn"");     driver = new InternetExplorerDriver(ieOptions);     driver.get(""https://www.bing.com"");   } ```  ``` Support for Legacy Capabilities is deprecated; You are sending the following invalid capabilities: [elementScrollBehavior, enablePersistentHover, ie.browserCommandLineSwitches, ie.edgechromium, ie.edgepath, ie.enableFullPageScreenshot, ie.ensureCleanSession, ie.fileUploadDialogTimeout, ie.forceCreateProcessApi, ie.useLegacyFileUploadDialogHandling, ie.usePerProcessProxy, ignoreProtectedModeSettings, ignoreZoomSetting, initialBrowserUrl, nativeEvents, requireWindowFocus, silent]; Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/  ```   Minimal Case ```   @Test   public void internetExplorerOptionsInputTest() {     ieOptions = new InternetExplorerOptions();     ieOptions.attachToEdgeChrome();     ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");     driver = new InternetExplorerDriver(ieOptions);     driver.get(""https://www.bing.com"");   } ```   ``` Started InternetExplorerDriver server (64-bit) 4.2.0.0 Listening on port 63513 Only local connections are allowed 6月 28, 2022 4:11:23 下午 org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected upstream dialect: W3C 6月 28, 2022 4:11:23 下午 org.openqa.selenium.remote.ProtocolHandshake createSession WARN: Support for Legacy Capabilities is deprecated; You are sending the following invalid capabilities: [ie.edgechromium, ie.edgepath]; Please update to W3C Syntax: https://www.selenium.dev/blog/2022/legacy-protocol-support/  ```","closed","I-enhancement,","alaahong","2022-06-28T08:19:27Z","2022-07-29T00:12:19Z"
"","10240","[🚀 Feature]: Update doc to add `sendAndGetDevToolsCommand`","### Feature and motivation  On this page for Chromium-only WebDriver definition, it only listed `sendDevToolsCommand`.  https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/chrome_exports_Driver.html  It should also add `sendAndGetDevToolsCommand`, which is from [this commit](https://github.com/SeleniumHQ/selenium/commit/8735ef954c9ed0100e7bba48b5c1cd8e2e6a793e).  As pointed out from [this issue](https://github.com/SeleniumHQ/selenium/issues/8764), may also be great to update the doc to explicitly point out that the `sendDevToolsCommand` will not get a return value, developer will need to call `sendAndGetDevToolsCommand` if a return value is expected.  ### Usage example  `sendDevToolsCommand` is great, but it is not obvious that this command is unidirectional (no return value).  There is a newer `sendAndGetDevToolsCommand` which is bidirectional. However, it is not documented properly.  I believe if the `sendAndGetDevToolsCommand` is documented properly, there will be an uptick of developers using this new command instead of the original `sendDevToolsCommand`.  For example, we can use the new `sendAndGetDevToolsCommand` to snapshot the accessibility tree of the page:  ```js await webDriver.sendDevToolsCommand('Accessibility.enable');  const { nodes } = await webDriver.sendAndGetDevToolsCommand('Accessibility.getFullAXTree');  console.log(nodes); // Snapshot of AXNode tree ```","open","I-enhancement,","compulim","2022-01-10T19:06:50Z","2022-04-25T08:17:29Z"
"","10729","[🚀 Feature]: Default IE Options to use IE Mode in Edge","### Feature and motivation  Microsoft is deprecating IE soon, and based on this post https://docs.microsoft.com/en-us/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection, any usage of IE will be launching Edge instead.  Should IE Options to have these options by default?  ```java ieOptions.attachToEdgeChrome(); ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe""); ```  ### Usage example  Instead of   ```java public class IEDriverSample {     public static void main(String[] args) {                 InternetExplorerOptions ieOptions = new InternetExplorerOptions();         ieOptions.attachToEdgeChrome();         ieOptions.withEdgeExecutablePath(""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");                  WebDriver driver = new InternetExplorerDriver(ieOptions);          driver.get(""http://www.bing.com"");         WebElement elem = driver.findElement(By.id(""sb_form_q""));         elem.sendKeys(""WebDriver"", Keys.RETURN);          driver.close();     } } ```  Have this using IE Mode in Edge by default.  ```java public class IEDriverSample {     public static void main(String[] args) {                 WebDriver driver = new InternetExplorerDriver(new InternetExplorerOptions());          driver.get(""http://www.bing.com"");         WebElement elem = driver.findElement(By.id(""sb_form_q""));         elem.sendKeys(""WebDriver"", Keys.RETURN);          driver.close();     } }","open","I-enhancement,","diemol","2022-06-02T10:10:46Z","2022-06-22T21:40:01Z"
"","10382","[🚀 Feature]: A method to listen to page title change","### Feature and motivation  Listening to change of the title of the page instead using wait  ### Usage example  To include unexpected page change For example:  The page was expected to change to succes.xxx.com but it changed to fail.xxx.com  thats where event listening jackes in, the new featrue would help making better handling of page changes with the driver","closed","","ItzMiracleOwO","2022-02-20T09:33:28Z","2022-03-23T00:10:45Z"
"","10185","Update JS API Docs","### Feature and motivation  Last update was for Selenium 4 alpha  ### Usage example  This page should stay up to date: https://seleniumhq.github.io/selenium/docs/api/javascript/index.html","open","C-docs,","titusfortner","2021-12-26T09:19:23Z","2022-05-22T17:09:46Z"
"","10136","[🚀 Feature]: WaitForNavigation method","### Feature and motivation  Just like in puppeteer, a WaitForNavigation method would be really useful because currently there's no way to wait for navigation and know when a page has been fully loaded.  having options like NetworkIdle2 and Load would also be great.  ### Usage example  `driver.Navigate().WaitForNavigation()`  another one would accept parameters such as `NetworkIdle2` and `Load`, `DOMContentLoaded` and so on.","closed","G-w3c,","dahanj95","2021-12-11T20:24:17Z","2022-01-26T00:10:01Z"
"","10309","[🚀 Feature]: Support to add capabilites for python selenium by edge options","### Feature and motivation  It would be nice if following C# code can be used also in Python usage to add arguments or capabilities to edge.  ``` using OpenQA.Selenium; using OpenQA.Selenium.Edge; using System.Threading;  namespace EdgeDriverSample {     class Program     {         static void Main(string[] args)         {             var options = new EdgeOptions();             options.AddArgument(""--disable-features=msSmartScreenProtection"");              var driver = new EdgeDriver(options);  	    // Should navigate to smartscreen test site instead of blocking.             driver.Url = ""https://nav.smartscreen.msft.net/other/malware.html"";              Thread.Sleep(5000);             driver.Quit();         }     } } ```  This will disable the microsoft smart screen feature by edge for all tests. From current documentation their is only three method implementations supported for edge options.  https://www.selenium.dev/selenium/docs/api/py/webdriver_edge/selenium.webdriver.edge.options.html#module-selenium.webdriver.edge.options  ### Usage example  ``` from selenium.webdriver.edge import options as EdgeOptions  def create_edge_options():     options = EdgeOptions()     options.add_argument(""--disable-features=msSmartScreenProtection"");     return options ```","closed","","Nepitwin","2022-01-31T10:45:16Z","2022-03-03T00:10:11Z"
"","10901","[🚀 Feature]: isClickable function allowing to check if a DOM element can be clicked","### Feature and motivation  It would be most helpful to have a function that determines, if a DOM element isClickable similar to the functionality offered by [WebDriverIO](https://webdriver.io/docs/api/element/isClickable).  Return true if the selected DOM-element:  - exists - is visible - is within viewport (if not try scroll to it) - its center is not overlapped with another element - is not disabled otherwise return false.  ### Usage example  ```javascript const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     const el = await driver.findElement(By.name('q'));     const clickable = await el.isClickable();     console.log(clickable);   } finally {     await driver.quit();   } })(); ```","closed","needs-triaging,","doberkofler","2022-07-23T06:31:51Z","2022-07-23T18:53:50Z"
"","10315","[🚀 Feature]: TestNG support to run feature files in parallel(like Junit 4)","### Feature and motivation  Is your feature request related to a problem? Please describe. With Version 4 Selenium and cucumber-jvm. We cannot run feature files parallely using TestNG . The same feature is available with Junit  Currently when we run 2 threads, Scenario 1 & 2 present in same feature file gets executed Problem - Scenario 2 is dependent on Scenario 1 to complete  Under maven-surefireplugin   ```  		 		dataproviderthreadcount 		2 		  classes  true  					 true   	Runner Path to be added  ```  Article used to setup - https://cucumber.io/docs/guides/parallel-execution/?sbsearch=parallel  ### Usage example  In Junit we can run feature file in parallel  This feature is required in testng since many a time scenarios present in same feature file are interdependednt and single thread should run/pick one feature file","closed","I-question,","surajgupta7175","2022-02-02T13:37:03Z","2022-03-13T00:09:46Z"
"","9941","[🚀 Feature]:","### Feature and motivation  Is it possible to come up with a window that can judge which page or window is the focus window (not the window that is currently under control, but the window that is currently at the top)? I have checked the whole document and found no such interface. I hope it can be improved.    ### Usage example  get_focus_window_handle()","closed","","luxiaolan6373","2021-10-16T03:47:26Z","2021-11-17T00:06:23Z"
"","9940","[🚀 Feature]:  v4 should support port -1 like v3","### Feature and motivation  In version 3, the -p option to node can be set to -1 and an unused port will be detected and used. This is really useful for testing locally, but also for rootless container setups like podman. As far as I can tell, this functionality does not exist in version 4.  ### Usage example  For example, this snippet from a docker-compose.yml works very well with rootless containers on version 3:  ``` version: ""3"" services:   selenium-hub:     image: selenium/hub:3.141.59     container_name: selenium-hub     ports:       - ""127.0.0.1:4444:4444""    chrome:     image: selenium/node-chrome:3.141.59     volumes:       - /dev/shm:/dev/shm     deploy:       replicas: 4     depends_on:       - selenium-hub     environment:       - HUB_HOST=selenium-hub       - HUB_PORT=4444       - NODE_PORT=-1 ```  With version 4, I need to specify each chrome service individually, or otherwise automate the port setting per instance (which doesn't work very well with docker-compose.)","closed","C-grid,","mattblaha","2021-10-16T02:15:16Z","2021-11-22T00:06:45Z"
"","10428","[🚀 Feature]: Include options class in Safari webdrivers remote RemoteWebDriver constructor","### Feature and motivation  In the Safari [webdriver constructor](https://github.com/SeleniumHQ/selenium/blob/a2a58baba0a9f7289de1cd7d98c7eb05a148613a/py/selenium/webdriver/safari/webdriver.py#L42) in the Ptyhon library an Options class can be passed as argument. However this options class is never used. In webdriver classes of other browsers the options class is passed to the constructor of the RemoteWebDriver class, the class that he webdriver implements.    ### Usage example  options = Options()  webdriver(options=options)","closed","I-defect,","MWschutte","2022-03-09T16:14:26Z","2022-04-20T00:12:01Z"
"","10018","[🚀 Feature]: Recorded Video File Names","### Feature and motivation  In the current implementation of grid 4 video recording videos are saved using a file name that's determined at the start of the ffmpeg container while in a start grid configuration.  (Dynamic also works roughly the same way.)  The issue with this is that there's no great way to identify a video named ""video.mp4"", or even ""edge_video.mp4"" if one attempts to save that video to a mounted storage of any kind short of using some scripting to rename the generated video from the client side or something (which would be prone to all sorts of race conditions).  My thoughts on a solution for this would be to provide the video name to the video recording container when recording is started by the selenium session, passing the sessions sessionId as the file name.  Since this is visible to the client, it would allow easy linking a video the a given test run on the client side.  ### Usage example  Given a static grid where each video container mounts a shared storage directory... ```yaml --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-chrome-node-deployment   labels:     app: selenium-chrome-node     name: selenium-chrome-node     component: ""selenium-grid-4"" spec:   replicas: 10   selector:     matchLabels:       app: selenium-chrome-node   template:     metadata:       labels:         app: selenium-chrome-node         name: selenium-chrome-node         component: ""selenium-grid-4""     spec:       containers:         - name: video           image: selenium/video           resources:             limits:               memory: ""1Gi""               cpu: ""1""           volumeMounts:             - name: video               mountPath: /video         - name: selenium           image: selenium/node-chrome:latest           env:             - name: SE_EVENT_BUS_HOST               value: ""selenium-event-bus""             - name: SE_EVENT_BUS_PUBLISH_PORT               value: ""4442""             - name: SE_EVENT_BUS_SUBSCRIBE_PORT               value: ""4443""             - name: VNC_NO_PASSWORD               value: ""true""             - name: ""SE_OPTS""               value: ""--log-level FINE --grid-url https://selenium-grid.example.com""           ports:             - containerPort: 5553               protocol: TCP             - containerPort: 5555               protocol: TCP            volumeMounts:             - name: dshm               mountPath: /dev/shm           resources:             requests:               memory: ""1Gi""               cpu: ""1""             limits:               memory: ""1Gi""               cpu: ""1""       volumes:         - name: video           flexVolume:             driver: 'fstab/cifs'             fsType: 'cifs'             secretRef:               name: 'selenium-video'             options:               networkPath: '//examplefs/qa/selenium-videos'               mountOptions: 'dir_mode=0777,file_mode=0777,vers=3.0,domain=EXAMPLEDOMAIN'         - name: dshm           emptyDir: { ""medium"": ""Memory"" } ```  Using ruby: ```ruby FILE_SERVER_PATH = '//examplefs/qa/selenium-videos/' @driver = Selenium::Webdriver.for :remote, url: 'selenium-grid.example.com', desired_capabilities: :chrome @session_id = @driver.session_id @video_file_path = ""#{FILE_SERVER_PATH}#{@driver.session_id}.mp4"" ```  From there it could be sent to any reporting aggregator of your choice for easy linking of video to test results, and managed (such as being removed in the event of a passing test or renamed to something more useful) entirely from the client side.","closed","I-enhancement,","LukeIGS","2021-11-09T13:15:31Z","2022-03-25T00:09:47Z"
"","10892","[🚀 Feature]: Support custom headers for remote WebDriver connection (python)","### Feature and motivation  In `RemoteConnection`, the `get_remote_connection_headers` method has a set of logical defaults it builds, but there's no way for a user to make an addition to these headers.  Adding a hook or property that the consuming code can set to add to these headers would be a big help.  ### Usage example  I need to add a host header for requests to be successful to my selenium grid running behind traefik reverse proxy. Without this feature, I can't use selenium python out of the box to create sessions (initializing `WebDriver` throws 404 errors because traefik doesn't know where to route without the host header).  Passing a parameter from `WebDriver` to `RemoteConnection` ought to do the trick: ```py driver = WebDriver(command_executor, additional_headers={""Host"": ""some-value""}) ```","open","I-enhancement,","scook12","2022-07-20T22:19:58Z","2022-07-28T17:21:02Z"
"","10715","[🚀 Feature]: How to control which node to execute in Selenium Grid where the browser configuration is same for all the nodes?","### Feature and motivation  If we want to distribute a group of test cases between multiple nodes with same browser configuration, i.e. same browserName, browserVersion and platformName, in that case we can control which test scenario will assign to which node.  ### Usage example  I have 3 groups of test cases and I want to execute them parallelly in 3 different nodes with same version of chrome and same platform name using Selenium Grid 4, but the node selection seems totally random that I can not control.  So is it possible to control which node to execute for each test scenario, given the same browser configuration.  Can it be done using the node ip?  I have used this code for RemoteWebdiver, where the capabilities are same for each node.:-  ChromeOptions options = new ChromeOptions(); driver = new RemoteWebDriver(new URL(""http://localhost:4444/""), options);","closed","I-question,","sayanbir","2022-05-31T04:56:20Z","2022-07-01T00:13:03Z"
"","10153","[🚀 Feature]: .har file export support for Chrome DevTools request/response objects","### Feature and motivation  I've just started using Selenium 4's Chrome DevTools integration and it's amazingly powerful. I found myself using it to capture request/response data while running a test, to be able to look through what happened API call-wise when a test fails.  However I don't see a clean way to export the request/response objects to a standardized file format, like that of .har file for easier consumption after.  I think adding in this feature would make the lives of people utilizing the request/response caps of Selenium 4 a whole lot easier, i.e. download the .har file from the test run, open it in a .har viewer or chrome dev tools, and very quickly inspect what went wrong, in a format they're used to viewing in general.  ### Usage example  As mentioned before, I can see testers keeping logs of requests/responses that happen during a test run, and if the test fails, logging that information as more detail to check why a test had failed. At the moment this would be either logging out specific parts of the request/response objects to a log file or worse to cli.  Adding in a way to easily write a list of request/response objects (or a way to capture all network traffic and do this export) would save testers time since they would not need to go re-run the test again and watch the network tab in their browser, or even worse try to replicate it by hand. And as we know some API call failures are super rare and difficult to replicate again later on.","open","I-enhancement,","Proryanator","2021-12-15T17:23:47Z","2022-01-10T05:34:53Z"
"","10845","[🚀 Feature]: Revisiting strong-named assemblies for NuGet (.NET Core/.NET)","### Feature and motivation  I'm aware that the current policy at Selenium is to distribute non-strong-named assemblies via NuGet and to make strong-named assemblies available only via a download site which is not a NuGet feed.  This is OK unless a developer wishes to create a package which: * Is to be distributed exclusively via NuGet * Depends upon Selenium * Is to be strong-named  Such a package cannot depend upon the Selenium NuGet packages because they are not strong-named, and a NuGet package cannot sensibly depend upon ""an out-of-band download site"".  I am aware that this issue/question has come up a few times over the past few years and I recall asking about it myself previously (possibly on IRC but it would have been at least 4 years ago).  What I'd like to do is prompt a revisit of the policy of ""No strong-named assemblies on NuGet"", given the current status of NuGet and .NET.  What problems need to be resolved to prompt a reversal of that policy?  Lots (perhaps the majority) of packages are released on NuGet with strong-named assemblies so it must be possible.  I seem to recall that at least part of the problem with strong-naming related to _assembly binding redirects_ in `App.config` files.  If that's the main pain-point then I have good news: _In .NET Core and .NET5+ App.config files and binding redirects are a thing of the past!_  The assembly binding/versioning rules are now much more sane.  This is going to mean that the audience who could be affected by issues is only going to decline as more projects upgrade to .NET Core or .NET5+.  But still - I suppose this feature request begins with a question:  What problems would need to be resolved in order to reverse the policy of having no strong-named binaries distributed via NuGet?  The next step is me taking a look to see if I can solve those problems.  ## Current workarounds A package which has to depend upon Selenium and is to be distributed via NuGet would have to either: * Forgo strong-naming * Bundle a copy of the Selenium strong-named binaries  For that second workaround, as far as I can tell the software license doesn't prevent this, but it's a bad solution because then the Selenium Version is tied to the package version.  Developers could not upgrade Selenium (even point releases) without upgrading the dependent package.  So, that's not a great solution either.  ### Usage example  I'm about to begin a revisit of [a package of my own].  I would like to distribute this via NuGet, it will require a dependency upon Screenplay and I would like to strong-name it.  [a package of my own]: https://github.com/csf-dev/CSF.Screenplay.Selenium","open","I-enhancement,","craigfowler","2022-07-04T12:37:36Z","2022-07-05T14:06:04Z"
"","10525","[🚀 Feature]: Update bazel toolchains to 5.1.1 to support current Bazel release","### Feature and motivation  I would like to make a package for selenium on ArchLinux. However, what stops me is selenium requires the version of Bazel is 4.2.1. I wonder whether it is possible to upgrade the version Bazel used by selenium just like this PR #8386  ### Usage example  After the change, I can make a package on ArchLinux to help distribute selenium","closed","C-build,","FantasqueX","2022-04-07T11:33:44Z","2022-06-09T00:11:16Z"
"","10664","[🚀 Feature]: AAU I want to be able to use the upload a Folder with Files with RemoteWebElement sendKeys","### Feature and motivation  I will explain what are we trying to do. We want to sendkeys with RemoteWebElement to a folderBrowserDialog in ChromeWebDriver. When we try to do this in local machines we can send keys to the folderBrowserDialog without further problem, but when we launch the same test in the Selenoid machines that use RemoteWebElement Seleniumcode will check if there is a before the sendkeys or making the zip to upload. These are the particular lines of code.  `List files = (List)var10000.map((xva$0) -> {                 return var10001.getLocalFile(new CharSequence[]{xva$0});             }).collect(Collectors.toList());             if (!files.isEmpty() && !files.contains((Object)null)) {                 allKeysToSend = (String)files.stream().map(this::upload).collect(Collectors.joining(""\n""));             }`   So, since we are giving a Folder path who contains all the files we want to upload there is no file explicit and the files.isEmpty() is failing, as it is expected. We try to give also one file present in the folder, but this is also not working since the folder browser is not accepting files only folder paths.         ### Usage example  The use of this feature will be upload the folder, with a variable number of filesz, making use of the folderBrowserDialog when we are working with RemoteMachines in Selenium grid.  Since it is working already in local machines will be nice if it work as well in remoteWebElement.","closed","needs-triaging,","gsangar","2022-05-18T10:28:04Z","2022-06-20T00:11:18Z"
"","10195","[🚀 Feature]: Possibility to reduce stacktrace from WebDriverWait","### Feature and motivation  I wanna have possibility to reduce stacktrace output from `WebDriverWait.until` due to long output (see picture). I can create an PR, but need approve of idea.     ### Usage example  ```python def until(self, method, message='', capture_stacktrace=True)     ...     if capture_stacktrace:         stacktrace = getattr(exc, 'stacktrace', None)     ... ```","closed","I-enhancement,","VladimirPodolyan","2021-12-29T02:47:40Z","2022-03-02T00:12:04Z"
"","10769","[🚀 Feature]: Replace explicit parent class references using `Parent.__init__(...)`","### Feature and motivation  I upgraded _most_ things to python 3.7+ however there are still _some_ references using their parent by direct name, this has a few caveats (most importantly gets in the way of MRO and doesn't lend itself to co-operative multi-inheritance, albeit it that is a small potential use case):  - Update all references using `SomeParentClass.__init__(...)` to instead use `super().__init__(...)`  ### Usage example  Here is one example:  https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/chromium/remote_connection.py#L23 https://github.com/SeleniumHQ/selenium/blob/31cc432099851bc9aa68c443b448ff97d7ad91ca/py/selenium/webdriver/chromium/service.py#L45   Should be able to find using some sort of `grep -ir /py .*\.__init__` (or similar)","closed","C-py,","symonk","2022-06-14T07:49:55Z","2022-07-16T00:13:11Z"
"","10747","[🚀 Feature]: Make it easier to figure out which areas need tests in the repository","### Feature and motivation  I recently asked about having a badge for codecov in the repository. It was closed because codecov is only for Python code. I think it would be good to have some way to know which parts of the code need to be tested.   NOTE:  - Since there is going to be some code removal for the move to Selenium 4.3, I will be okay with this waiting until Selenium 4.3 is released, which would mean that all of the code that was used for supporting the legacy protocol has been removed.  ### Usage example  To find areas that need tests so that they can be used to generate documentation for the site. This happened in the Pull Request: copy web content to be served on selenium.dev (https://github.com/SeleniumHQ/selenium/pull/10637)","open","I-enhancement,","ollie-iterators","2022-06-08T14:09:44Z","2022-06-20T12:31:10Z"
"","10049","[🚀 Feature]: Documentation about Actions API in WebDriver W3C Protocol to do things like zoom in","### Feature and motivation  I noticed on this link: https://www.lambdatest.com/blog/selenium4-w3c-webdriver-protocol/ that it was said that it is possible to use the Actions API in WebDriver W3C Protocol to do things like perform multi-touch actions, zoom-in, zoom-out, pressing two keys simultaneously, and more. I am unable to find documentation about how to do these things.  ### Usage example  I am working on using the Actions API in WebDriver to zoom in a page.","closed","I-enhancement,","ollie-iterators","2021-11-16T17:19:15Z","2022-01-26T00:10:08Z"
"","10765","[🚀 Feature]: How to move a file downloaded in Node machine to the hub machine using Selenium Grid?","### Feature and motivation  I have Hub with 2 nodes. Now while executing the test cases in the nodes in chrome browser, I want to access the files downloaded in the node and move them to the hub for further use. How to achieve that using Selenium Grid 4?  In my case, the default download directory for chrome is the 'Downloads' folder.  ### Usage example  Sometimes we need to access the files of the node machine and use them in the hub machine for future operations. For that scenario how to do it?","closed","I-question,","sayanbir","2022-06-13T12:42:27Z","2022-07-14T00:15:04Z"
"","10891","Add Java tests for JWP","### Feature and motivation  I don't think we have sufficient integration tests around our JWP implementation support.  As we are looking to remove `makew3csafe()` I want to make sure the handshake still works as expected.  Adding this to track for 4.4 release since I'm not sure we'll be able to actually remove that method for this release.","open","I-enhancement,","titusfortner","2022-07-20T18:27:35Z","2022-07-20T18:28:17Z"
"","10714","[🚀 Feature]: How to use the Selenium IDE to run (or autoplay/autorun) at certain times of a certain days","### Feature and motivation  How to use the Selenium IDE to run (or autoplay/autorun) at certain times of a certain days,  for example I would like one project to run at 7 am every week day & another at 8 am every weekday  ### Usage example  I would like one project to run at 7 am every week day & another at 8 am every weekday","closed","I-question,","zzack1","2022-05-30T18:54:04Z","2022-07-01T00:13:04Z"
"","10367","[🚀 Feature]: How to use Python to modify the data source of XPath","### Feature and motivation  How to use Python to modify the data source of XPath   When I use XPath to locate in IE9, the running speed is too slow, but I can only find a way for Java to modify the XPath source, so I need some help. Thank you       ### Usage example  java like:        selenium = new DefaultSelenium(location, port, browser, targetPath);            selenium.start();            selenium.useXpathLibrary(""javascript-xpath"");    How should Python be modified","closed","needs-triaging,","leecmd","2022-02-16T10:06:10Z","2022-03-19T00:08:56Z"
"","10134","[🚀 Feature]: Publish Selenium Server 4.1.0 to https://selenium-release.storage.googleapis.com","### Feature and motivation  Hi, Not sure who controls publishing new releases to https://selenium-release.storage.googleapis.com/index.html, but it would be helpful to be able to pull 4.1.0 stand alone server there. Selenium grid extras and a few projects look for newer versions there by default. Thank you!  ### Usage example  Browse https://selenium-release.storage.googleapis.com/index.html and notice latest is 4.0 alpha versions.","closed","","mjmj","2021-12-10T19:53:22Z","2022-01-11T00:07:41Z"
"","10523","[🚀 Feature]: Need Videos Dashboard For Selenium Grid 4","### Feature and motivation  Hi Team,            I need access to the dashboard, videos and logs access from any remote machine. Do we have any selenium configuration or environment variable to access the selenium dashboard from any machine? So that all team members of my team can have access to review test case status.  Feature Like this: ![image](https://user-images.githubusercontent.com/42374890/162170820-2490a951-81a8-4480-baff-ef97d817ea39.png)   ### Usage example  Please refer the  [Zalenium - Dashboard ]https://opensource.zalando.com/zalenium/","closed","","IronMan0404","2022-04-07T09:48:02Z","2022-05-08T00:11:24Z"
"","10762","[🚀 Feature]: GoLang Client","### Feature and motivation  Hey there, is it possible to offer a GoLang Client?  ### Usage example  Using Selenium in Go Projects","closed","I-enhancement,","TorbenHammes","2022-06-12T19:13:07Z","2022-07-14T00:15:09Z"
"","10369","[🚀 Feature]: Get XPath from IWebElement","### Feature and motivation  Hey i mean it would be very nice to get the XPath from an existing IWebElement to work with this path and change it like needed.   ### Usage example  As example i have this Extension which give me back an IWebElement:     public static class MyExtensions     {         public static IWebElement GetParent(this IWebElement node)         {             return node.FindElement(By.XPath(""..""));         }     }  after that i want to check if its present on the page with           private bool IsElementPresent(By by)         {             try             {                 driver.FindElement(by);                 return true;             }             catch (NoSuchElementException)             {                 return false;             }         }  For the isElementPresent i need the XPath. But i dont get the whole xPath because i navigated from an other element with GetParent and from the final node again down in the DOM and have just a part of the xPath","closed","needs-triaging,","ChristianErdtmann","2022-02-16T18:22:07Z","2022-03-20T00:09:57Z"
"","10860","[🚀 Feature]:  Set default download folder using Selenium in C#.","### Feature and motivation  Hello: I use Selenium Nuget package version 4.3.0 with Chrome Driver version 103.0.5060.5300 to run some test, which translate some text into other langauages. When the test is done, I have to download the translated file in one zip file and save it to default download folder in Windows 10 PC. However, the default download folder in C: drive is too small, I want to change the default download folder for Chrome to another driver, for example: D:\Download\   ### Usage example              ChromeOptions option1 = new();             option1.AddAdditionalChromeOption(""download.default_directory"", @""D:\Download"");","closed","I-question,","zydjohnHotmail","2022-07-09T19:26:23Z","2022-07-11T04:40:36Z"
"","10512","[🚀 Feature]: wait until page reload, wait until url change","### Feature and motivation  hello. thank you for making selenium. i have a deep respect for Selenium developers.  please add wait until page reload, wait until url change. it might be useful everywhere.  ### Usage example  ``` await driver.wait(until.pageReload({      reloadTrigger: () => driver.findElement(By.css(""#submit"")).click() }), 3000) // after reload...  await driver.wait(until.urlChange({     changeTrigger: () => driver.findElement(By.css("".movePage"")).click()  }), 3000) // after change ```","closed","needs-triaging,","HeyKJ","2022-04-05T14:06:56Z","2022-05-06T00:12:22Z"
"","10779","[🚀 Feature]: Make --distributor-implementation and --grid-model available for ""Hub"" mode","### Feature and motivation  Hello,   I try to migrate a custom grid v3 to v4. This grid used servlet to add features. As servlets are not supported anymore (sadly, routes cannot be added), I owuld like to start a servlet server on Hub startup I thought I could use the ""--distributor-implementation"" for example to extend the behaviour, but it's only taken into account when distributor is started as a single component, not through Hub  ```java Distributor distributor = new LocalDistributor(       tracer,       bus,       clientFactory,       sessions,       queue,       distributorOptions.getSlotSelector(),       secret,       distributorOptions.getHealthCheckInterval(),       distributorOptions.shouldRejectUnsupportedCaps(),       newSessionRequestOptions.getSessionRequestRetryInterval()); ```  Would it be possible to be able to specify my own class as a distributor ?  Thanks  ### Usage example  Start a hub with a specific distributor class","open","I-enhancement,","bhecquet","2022-06-16T15:03:15Z","2022-06-23T16:19:06Z"
"","10274","[🚀 Feature]: Start distributing Selenium Server on Maven once again","### Feature and motivation  Hello mates, I'm proposing to start once again distributing Selenium Server over Maven. The last release is **selenium-server 4.0.0-alpha-2 / 02.July.2019**  I've searched a lot what motivates this move back in 2019 - stopping the distribution, but didn't find any news/article, etc.  We have quite a big UI framework depending on selenium-java and selenium-server and recently we start upgrading it from Java 8 to most recent Java 17.  No current version over Maven is a big drawback as most of the things are automated and manually updating single dependency is a pain.   ### Usage example  Selenium-java and Selenium-server are going hand by hand, it's logical both to have distribution over Maven.","closed","","wrbst","2022-01-21T16:12:01Z","2022-02-21T00:09:06Z"
"","10288","[🚀 Feature]: Make ExpectedConditions library work with Android, Mobile, Ios elements without type casting","### Feature and motivation  Greetings, as I'm doing mobile app automation testing I've faced problem that ExpectedConditions library doesn't work with mentioned element types without type cast, in Java type casting is an anti pattern, but still this library is best solution for explicit wait. It would be great if library will work with all element types.  ### Usage example  ``` public MobileElement getElement(By id) {         return (MobileElement) wait.until(ExpectedConditions.visibilityOfElementLocated(id));     } ```","closed","I-enhancement,","jevgenijsklimovs","2022-01-26T12:23:40Z","2022-03-01T00:10:44Z"
"","10265","[🚀 Feature]: Support sending Firefox Addon directory as temporary in Remote Sessions","### Feature and motivation  Firefox Addon endpoint supports either `path` or `addon` parameter, with addon being a base64 encoded string of a compressed file, which can be either an xpi or a zip file.  Directories are needed to support the temporary parameter. Rather than implementing a file detector and trying to upload the directory to a remote machine, directories should be zipped and base 64 encoded and sent with the `addon` parameter.  Supporting temporary parameter is https://github.com/SeleniumHQ/selenium/issues/10084 It was fixed in every language, except .NET has outstanding PR — https://github.com/SeleniumHQ/selenium/pull/10093 So, it works if the user zips the directory and passes it in, but it would be nice for Selenium to do this for the user.  A great example of this by @nickgaya in JS is here: https://github.com/SeleniumHQ/selenium/pull/10216    ### Usage example  ``` String id = ((HasExtensions) augmentedDriver).installExtension(Paths.get(""path/to/addon/directory/""), true); ```","open","I-enhancement,","titusfortner","2022-01-19T21:17:39Z","2022-05-11T07:39:39Z"
"","10736","[🚀 Feature]: ErrorInResponseException","### Feature and motivation  ErrorInResponseException supported by selenium 3.141.0  ### Usage example  I used selenium 3.141.0  ErrorInResponseException occurred when response was delayed due to a large number of users on the site. So I made good use of this exception.  An IDE say that ErrorInResponseException has been lost since recently migrated to selenium 4.2.0. I found that it was deleted due to this issue https://github.com/SeleniumHQ/selenium/issues/7134  I can't find exception that replaces ErrorInResponseException at Selenium 4 documentation, so could you please support ErrorInResponseException again?","closed","needs-triaging,","DoTheBestMayB","2022-06-06T12:38:46Z","2022-07-08T00:14:15Z"
"","10724","[🚀 Feature]: Consolidate Actions class features","### Feature and motivation  Did a comparative analysis of Actions class functionality between languages:  https://www.selenium.dev/documentation/webdriver/actions_api/  #### Differences of note  * Python & Ruby can change default durations for scrolling & movement; Java & .NET can't * Python & Ruby have a ""move to Location"" method, Java & .NET don't * I just added support for Python & Ruby to specify what button to click on click and hold, release and click methods; Java & .NET don't have this * I added support for Java to & Ruby to set an ""active"" pointer (e.g. use a pen with Actions instead of needing ActionBuilder) Python & .NET can't do this * Pointer Event Properties require the Action Builder approach in Java/Python/.NET; * Java requires using Sequences instead of having a single ActionBuilder class like Python & .NET   #### Proposal 1: Allow setting default pointer in Python & .NET  This saves the step of needing to define the action and add to the input and then perform. Note: this example is Python, I haven't looked to see how difficult in .NET  ```python pen = ActionChains(driver)\     .set_pointer(PointerInput(POINTER_PEN, ""default pen""))\     .move_to(element)\     .perform() ```  #### Proposal 2: Move to Location method in Java & .NET Adds one method to Actions class Currently no option for moving based on Viewport origin, only Element origin The parameter could be x, y integers or a single  Coordinate/Point object instance  ```java new Actions(driver)         .moveToLocation(100, 200)         .perform() ```  #### Proposal 3: Allow changing of default duration in Java & .NET  Adds one constructor to Actions class Appium wants a default of 50ms instead of 250ms Putting it in Actions constructor is much lower impact than adding the parameter to each method **Discuss with Appium Devs First**  ```java new Actions(driver, Duration.ofMillis(50))         .moveByOffset(13, 15)         .perform(); ```  #### Proposal 4: Provide a better way to perform action sequences in Java  The `Collections.singletonList` requirement just feels clunky and unintuitive to me. It is extra overhead, and might be worth waiting to implement until after we do #10808 since that's where we're going to want to add multiple sequences.  instead of: ```java ((RemoteWebDriver) driver).perform(Collections.singletonList(actions)); ```  Wrap it with this: ```java new ActionsBuilder(driver)   .addSequence(actions)   .perform(); ```  #### Proposal 5: Allow PointerEvents to be used with Actions Convenience class  This would be lots more methods, and since PointerEvents are mostly not useful at this point, **I don't think we should do this one**  ```java PointerInput.PointerEventProperties eventProperties = PointerInput.eventProperties()         .setTiltX(-72)         .setTiltY(9)         .setTwist(86); new Actions(driver)         .setActivePointer(PointerInput.Kind.PEN, ""default pen"")         .moveToElement(pointerArea)         .clickAndHold()         .moveByOffset(2, 2, eventProperties)         .release()         .perform(); ```  #### Proposal 6: Specify Buttons  Add parameter for which button to click to `clickAndHold()`, `release()`, and `click()` (Java & .NET) Adds three methods to Actions class (which is a lot, so probably **we shouldn't do this one**) Note: this one is **probably not worth it** because the use cases are not that interesting.  ```java new Actions(driver)   .click(PointerInput.MouseButton.BACK)   .perform(); ```","open","I-enhancement,","titusfortner","2022-06-01T19:45:04Z","2022-07-20T18:44:51Z"
"","10770","[🚀 Feature]: Ability to pass user data directory argument to IEDriverServer for use automating Edge legacy mode","### Feature and motivation  Currently, as far as I can see there is no way to add options to the Edge browser instance that is launched when using IEDriverServer to automate Edge Legacy mode. This means that you are unable to pass a 'user-data-dir' parameter to the Edge browser window (as you can when using msedgedriver), which means my organisations' profile sign in window appears. This causes any automation to fail when automating Edge legacy mode.   Please note that this profile sign in window only appears when using IEDriverServer version 4.0.0 and above, which is mentioned as a pre-requisite by Selenium for Edge legacy automation. If I use a version less than 4.0.0, such as 3.150.1.2, then this window does not appear.   ![image](https://user-images.githubusercontent.com/107465910/173531210-a0d913b1-8e0a-471b-96ca-c3815a8b864a.png)   ### Usage example  Edge implementation:  EdgeOptions.AddArguments(""user-data-dir="" + EnvironmentContext.LocalDirectory, ""--start-maximized"");","closed","G-msedgedriver,","lukeinstone","2022-06-14T09:04:41Z","2022-07-15T00:13:41Z"
"","10302","[🚀 Feature]: Support retrieving groupCollapsed group labels","### Feature and motivation  Currently,  collapsed log groups' labels cannot be retrieved from the browser logs via functions like `driver.get_log(""browser"")`.  For example, if my I log the following to my console: ``` console.groupCollapsed(""group label""); console.log(""hello""); console.log(""world""); console.groupEnd(); ``` Only `""hello""` and `""world""` will be retrieved from `driver.get_log(""browser"")`. `""group label""`, the label of this inline console log group, is not captured.   It would be great if group labels can be captured as normal console log messages.  ### Usage example  In certain scenarios, we would like to use console log messages along with selenium as a way of testing our web app. We also use `groupCollapsed` to not clutter the console. Ideally, we would like to get the group labels as they may contain useful information for our testing.","closed","G-chromedriver,","jieqiu0630","2022-01-28T23:44:16Z","2022-03-10T00:09:39Z"
"","10908","[🚀 Feature]: Degrade more gracefully if relay server is not reachable","### Feature and motivation  Currently the node stops with a NullPointerException if the relay server is not reachable.  Example:  relay.toml ``` [server] port = 5555  [node] detect-drivers = false  [relay] url = ""http://localhost:4723"" status-endpoint = ""/status"" configs = [   ""1"", ""{\""browserName\"": \""chrome\"", \""platformName\"": \""android\"", \""version\"": \""11\""}"" ] ```  Running `java -jar selenium-server-4.3.0.jar node --config relay.toml` results in the following output if localhost:4723 cannot be reached: ``` 11:12:01.767 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 11:12:01.771 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 11:12:01.881 INFO [UnboundZmqEventBus.] - Connecting to tcp://0.0.0.0:4442 and tcp://0.0.0.0:4443 11:12:01.923 INFO [UnboundZmqEventBus.] - Sockets created 11:12:02.929 INFO [UnboundZmqEventBus.] - Event bus ready 11:12:03.054 INFO [NodeServer.createHandlers] - Reporting self as: http://192.168.121.96:5555 11:12:03.075 INFO [NodeOptions.getSessionFactories] - Detected 8 available processors java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) 	at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: org.openqa.selenium.grid.config.ConfigException: java.lang.reflect.InvocationTargetException 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:115) 	at org.openqa.selenium.grid.node.config.NodeOptions.getNode(NodeOptions.java:151) 	at org.openqa.selenium.grid.node.httpd.NodeServer.createHandlers(NodeServer.java:127) 	at org.openqa.selenium.grid.node.httpd.NodeServer.asServer(NodeServer.java:183) 	at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:231) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) 	at org.openqa.selenium.grid.Main.launch(Main.java:83) 	at org.openqa.selenium.grid.Main.go(Main.java:57) 	at org.openqa.selenium.grid.Main.main(Main.java:42) 	... 6 more Caused by: java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.grid.config.ClassCreation.callCreateMethod(ClassCreation.java:50) 	at org.openqa.selenium.grid.config.MemoizedConfig.lambda$getClass$4(MemoizedConfig.java:100) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1737) 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:95) 	... 14 more Caused by: org.openqa.selenium.grid.config.ConfigException: Unable to reach the service at http://localhost:4723 	at org.openqa.selenium.grid.node.relay.RelayOptions.isServiceUp(RelayOptions.java:119) 	at org.openqa.selenium.grid.node.relay.RelayOptions.getSessionFactories(RelayOptions.java:131) 	at org.openqa.selenium.grid.node.local.LocalNodeFactory.create(LocalNodeFactory.java:89) 	... 22 more Exception in thread ""Thread-0"" java.lang.NullPointerException 	at org.openqa.selenium.grid.node.httpd.NodeServer.lambda$new$0(NodeServer.java:79) 	at java.base/java.lang.Thread.run(Thread.java:829) ```  The output contains a clear error message why it is not working (Unable to reach the service at http://localhost:4723) but the java program completely exits leaving no possibility that the relay server is slow in starting up or is only temporary unreachable.   ### Usage example  A retry mechanism would make it possible that the node does not need to be restarted every time the relay server is too slow in starting up (happens with appium) or is only temporary unreachable.","closed","I-enhancement,","mythsunwind","2022-07-27T09:51:32Z","2022-08-03T03:51:49Z"
"","10322","[🚀 Feature]: deleteNetworkConditions missing in Javascript","### Feature and motivation  Currently the Javascript Chrome WebDriver only has methods to set and get the network conditions:  https://github.com/SeleniumHQ/selenium/blob/66b14c5578a915ae5b931ad857d0cd341c361377/javascript/node/selenium-webdriver/chromium.js#L700-L737  However, other languages support also deleting those conditions, e.g. in Java:  https://github.com/SeleniumHQ/selenium/blob/66b14c5578a915ae5b931ad857d0cd341c361377/java/src/org/openqa/selenium/chromium/ChromiumDriver.java#L286-L288  Or Python:  https://github.com/SeleniumHQ/selenium/blob/341b454c4a3c16a227b4e70e90044eede68f37e4/py/selenium/webdriver/chromium/webdriver.py#L142-L146  Would it be possibe to add the same functionality to Javascript?    ### Usage example  ```js driver.setNetworkConditions({ offline: false, throughput: 500, latency: 0 }); driver.deleteNetworkConditions() ```","closed","needs-triaging,","slhck","2022-02-04T10:50:44Z","2022-03-07T00:09:34Z"
"","9963","[🚀 Feature]: Maintain different versions of documentation","### Feature and motivation  Currently the [documentation](https://www.selenium.dev/selenium/docs/api/py/) is only available for the 4.0.0 release. If there are interface changes and the documentation is updated I cannot use the official doc with sphinx anymore.  This is via many projects maintain a versioning scheme. 4.0.0, 4.1.0, latest, stable ...  ### Usage example  Use version of doc according to the version you installed via pip","open","I-enhancement,","PhilippSelenium","2021-10-21T05:58:13Z","2021-12-26T07:02:52Z"
"","10812","[🚀 Feature]: Methods `Select.select*()` should NOT allow selecting DISABLED option (or select)","### Feature and motivation  Currently `Select` methods work even the `option` is disabled. Or `select` is disabled.  I suggest these `selectByFoo` methods should throw an exception.   ### Usage example  ```java new Select(element).selectByVisibleText(""fish""); ```   ### Pull request  see https://github.com/SeleniumHQ/selenium/pull/10814","open","I-enhancement,","asolntsev","2022-06-25T21:19:06Z","2022-07-01T00:43:19Z"
"","10517","[🚀 Feature]: Chrome101 adds a  verify your identity popup I'm unable to pass with selenium","### Feature and motivation  Chrome: Version 101.0.4951.15 (Official Build) beta (64-bit)  from chrome101 this popup happens on my machine when I ask for access to the fido2 security key feature https://docs.microsoft.com/en-us/azure/active-directory/authentication/fido2-compatibility  I'm unable to control it via selenium, the chrome developer console do not react on it. I have to manually just press enter to continue. but sending this enter I'm unable to.  Is there a way to bypass it via config? or chrome developer api?  How can I pass this? ![chrome100-verify-your-identity](https://user-images.githubusercontent.com/11349883/161975709-1caa88c8-af62-424c-8fae-2e308bff5a93.jpg)    ### Usage example  ```        wd.get(url)         el = WebDriverWait(wd, args.webwait).until(EC.presence_of_element_located((By.XPATH, ""//bp-button[@name='authenticationExecution'] | //*[@id='fido2']"")))         el.click()         log.info(""here the security key popup happens - code below have no impact"")         action = ActionChains(wd)         action.send_keys(Keys.ARROW_DOWN).perform()         action = ActionChains(wd)         action.send_keys(Keys.ENTER).perform() ```","closed","I-enhancement,","fenchu","2022-04-06T12:44:19Z","2022-07-02T00:12:50Z"
"","10608","[🚀 Feature]: Can you enter the page to get the page request data and return value data?","### Feature and motivation  Can provide the c# source code？I'm a.NET developer   ### Usage example  Want to achieve access to the page to get network data。","closed","I-question,","wqscode","2022-05-05T02:30:36Z","2022-06-05T00:14:10Z"
"","9943","[🚀 Feature]: OpenTelementry tracing: be able to link the default tracing with a custom tracing","### Feature and motivation  Be able to link custom OpenTelemetry tracing with the default Selenium grid tracing. See for e.g. https://github.com/llatinov/selenium-observability-java/blob/324b500316be34f5f1426720353d0c4e2e8b5a89/selenium-tests/src/main/java/com/automationrhapsody/observability/TracingWebDriver.java#L81  It will be useful if I am able to pass my Span as a parent span of Selenium's RemoteWebDriver tracing, so I can trace my actions with corresponding grid actions.  ### Usage example  Implement a custom tracing that monitors the tests. It will be of great help to be able to make the default server/grid tracing a child of the custom tracking. In this case, users can monitor how a click of a button in their tests links to grid performance.","closed","C-java,","llatinov","2021-10-16T09:17:32Z","2021-12-25T00:07:04Z"
"","10546","[🚀 Feature]:","### Feature and motivation  As per the [Microsoft Blog](https://blogs.windows.com/msedgedev/2022/02/01/test-ie-mode-in-microsoft-edge-internet-explorer-driver/), IE driver 4.0.0 or later binding is needed for automating the application in IE compatibility mode in Edge.  After June 15 once IE will get sunset, would it be feasible to automate the application supporting ""IE compatibility mode"" using IE driver ?   ### Usage example  Since starting June 15, 2022, Internet Explorer 11 will no longer be supported so need a solution where we can use selenium to test the  legacy applications in Internet Explorer (IE) mode in Microsoft Edge.  Need a robust solution which will support the automation of the application supported in IE mode in MS Edge. As current solution provided is using IE driver and once the IE will get sunset how the driver will work to support the IE mode?","closed","I-enhancement,","AradhanaJamwal","2022-04-14T10:56:09Z","2022-05-15T00:15:56Z"
"","10882","[🚀 Feature]: Provide end to end Observability on Selenium via agent automatically","### Feature and motivation  As a project owner,  I want to observe the whole end to end flow in the scenario level, So just raise the ticket to seek the possible on this.  Background: In a normal project, it's easy to get full trace flow, just need start via same agent and send to same jaeger. no need set additional span or metric, just use as automatically way. ![image](https://user-images.githubusercontent.com/3264250/179277118-5c69448d-2b00-4fbb-84f6-576e76f5c287.png)  ``` https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.15.0/opentelemetry-javaagent.jar https://github.com/alaahong/sia4-appium-sample/releases/download/opentelemetry-1/opentelemetry-1.jar https://github.com/alaahong/sia4-appium-sample/releases/download/opentelemetry-2/opentelemetry-2.jar ```  But we can't put Selenium into above flow with agent automatically too. 1. The Selenium trace record can't merge into Java Service automatically. ![image](https://user-images.githubusercontent.com/3264250/179279923-ad6484f5-7d27-4093-8f79-9ac55f669f76.png) 2. Even in Selenium, the trace will be splitting as request level, can't work as the scenario level.  So do we have the possible to combine Selenium OpenTelemetry evidence within transaction level (which means whole end to end execution, just like the java service client embed into java service host) or session level (which means Selenium execution level, not split into per request)?  Might be customized span can do this, but no code change is better.       ### Usage example Environment: opentelemetry-javaagent 1.15 Java 17 Windows 11 Selenium and Selenium Grid 4.3.0  Start jaeger ``` docker run -d --name jaeger   -e COLLECTOR_ZIPKIN_HOST_PORT=:9411   -e COLLECTOR_OTLP_ENABLED=true   -p 6831:6831/udp   -p 6832:6832/udp   -p 9778:5778   -p 16686:16686   -p 4317:4317   -p 4318:4318   -p 14250:14250   -p 14268:14268   -p 14269:14269   -p 9411:9411   jaegertracing/all-in-one:1.36 ```   Start java service ``` java  -javaagent:""opentelemetry-javaagent.jar""  -D""otel.traces.exporter""=""jaeger"" -D""otel.exporter.jaeger.endpoint""=""http://localhost:14250"" -D""otel.resource.attributes""=""service.name=java-service-client"" -jar opentelemetry-1.jar --server.port=8081 --target-uri=""http://localhost:8082/api/hello?name=""  java  -javaagent:""opentelemetry-javaagent.jar""  -D""otel.traces.exporter""=""jaeger"" -D""otel.exporter.jaeger.endpoint""=""http://localhost:14250"" -D""otel.resource.attributes""=""service.name=java-service-host"" -jar opentelemetry-2.jar --server.port=8082 --""target-uri""=""http://localhost:8081/api/hello?name="" ```  Start Grid with same agent and jaeget ``` java   -javaagent:""opentelemetry-javaagent.jar""  -D""otel.traces.exporter""=""jaeger"" -D""otel.exporter.jaeger.endpoint""=""http://localhost:14250"" -D""otel.resource.attributes""=""service.name=selenium-standalone""  -jar selenium-server-4.3.0.jar  --ext $(coursier fetch -p io.opentelemetry:opentelemetry-exporter-jaeger:1.15.0 io.grpc:grpc-netty:1.45.0) standalone --tracing false  ``` Test Code ``` public class OpenTelemetryTest {    protected WebDriver driver;    @BeforeAll   static void setupClass() {     WebDriverManager.chromedriver()             .setup();   }    @BeforeEach   void setupTest() throws MalformedURLException {     ChromeOptions options = new ChromeOptions();     driver = new RemoteWebDriver(new URL(""http://localhost:4444""), options);   }    @Test   public void openTelemetryTest() {     driver.get(""http://localhost:8081/"");     driver.findElement(By.id(""hello"")).sendKeys(""test"");     driver.findElement(By.xpath(""//input[@type='submit']"")).click();     Assertions.assertThat(driver.findElement(By.tagName(""h1"")).getText())             .isEqualTo(""Hello TEST"");   }    @AfterEach   void teardown() {     if (driver != null) {       driver.quit();     }   } } ```","open","I-enhancement,","alaahong","2022-07-15T17:45:04Z","2022-08-03T21:43:41Z"
"","10541","[🚀 Feature]: Add virtual authenticator support for all Selenium language bindings","### Feature and motivation  Applications often integrate WebAuthn as part of the login step. This triggers a WebAuthn browser-specific WebAuthn flow.  Example of WebAuthn in Chrome:    Automating interaction with the WebAuthn dialog, as shown above, is possible via the extension VirtualAuthenticator APIs defined as part of https://w3c.github.io/webauthn/#sctn-automation.   ### Implementation Implementation for Java was added as part of https://github.com/SeleniumHQ/selenium/pull/7760 and https://github.com/SeleniumHQ/selenium/pull/7842. The rest of the language bindings need to add the relevant code and can refer to the Java implementation for guidance.  An outline of implementing VirtualAuthenticator 1. [VirtualAuthenticatorOptions](https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/virtualauthenticator/VirtualAuthenticatorOptions.java) (this is used when adding the VirtualAuthenticator)  2. [Credential](https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/virtualauthenticator/Credential.java) (The credentials to be used by the VirtualAuthenticator) 3. List of methods (which call the WebDriver commands) and the respective parameters required:   -  addVirtualAuthenticator(VirtualAuthenticatorOptions options) - Returns an authenticator id as a string - removeVirtualAuthenticator (String authenticatorId) - addCredential(Credential credential, String authenticatorId) - getCredentials(String authenticatorId) - Returns a Map - removeCredential(byte[] credentialId, String authenticatorId) - removeCredential(String credentialId, String authenticatorId) - removeAllCredentials(String authenticatorId)  - setUserVerified(boolean verified, String authenticatorId) Refer:  https://github.com/SeleniumHQ/selenium/blob/b1fafa7ead771bfe70b659cf96d1f29cb22a2605/java/src/org/openqa/selenium/remote/RemoteWebDriver.java#L654 https://github.com/SeleniumHQ/selenium/blob/b1fafa7ead771bfe70b659cf96d1f29cb22a2605/java/src/org/openqa/selenium/remote/RemoteWebDriver.java#L1158  Tests are defined in https://github.com/SeleniumHQ/selenium/blob/trunk/java/test/org/openqa/selenium/virtualauthenticator/VirtualAuthenticatorTest.java  Note: Currently, only chromium-based browsers implement the WebAuthn APIs. Though Java does not do it, till the rest of the vendors implement it might be a good idea for the VirtualAuthenticator APIs to sit in the chromium section of each binding (similar to the current implementation of Permissions API).  **C#**  It can follow the Java implementation since both are strongly typed. C# binding has similar interface declarations as Java for existing features (example: HasPermissions).  **Ruby**  All extension APIs are defined in https://github.com/SeleniumHQ/selenium/tree/39dec028673260e8a9518898fe40a910426adc85/rb/lib/selenium/webdriver/common/driver_extensions. Similarly, `has_virtualauthenticator` interface can be implemented and added here and used in the chromium module.   **Python**  Chromium-specific Selenium commands in python are in https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/chromium/webdriver.py VirtualAuthenticator commands can be added here and authentication id can be defined as a local variable.   **Javascript** Chromium-specific Selenium commands in javascript are in https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/chromium.js VirtualAuthenticator commands can be added here and authentication id can be defined as a local variable.   ### Usage example  A sample java example:  ```     WebDriver driver = new ChromeDriver();         HasVirtualAuthenticator virtualAuthenticatorManager = ((HasVirtualAuthenticator) driver);      VirtualAuthenticatorOptions options = new VirtualAuthenticatorOptions();     options.setIsUserConsenting(true);     options.setProtocol(VirtualAuthenticatorOptions.Protocol.U2F);     options.setTransport(VirtualAuthenticatorOptions.Transport.USB);          VirtualAuthenticator authenticator = virtualAuthenticatorManager.addVirtualAuthenticator(options);     authenticator.setUserVerified(true); ```","open","I-enhancement,","pujagani","2022-04-13T13:23:44Z","2022-07-20T14:13:00Z"
"","10397","Remote ApplicationCache support","### Feature and motivation  ApplicationCache is not supported in w3c mode. This probably should have been marked obsolete at some point, but it's not working now, so probably just needs to be removed?  ### Usage example  #10344","open","C-nodejs,","titusfortner","2022-02-24T18:39:05Z","2022-07-20T13:58:50Z"
"","10602","[🚀 Feature]: release selenium-devtools gem v101","### Feature and motivation  Any chance you could release a new version of the selenium-devtools ruby gem? This commit would fix my issues https://github.com/SeleniumHQ/selenium/commit/4f1d7d7c6a115c0601a2882144637440f15e037c  ### Usage example  gem release, please.","closed","I-enhancement,","annaswims","2022-05-02T17:14:48Z","2022-06-04T00:12:00Z"
"","10847","[🚀 Feature]: Subpath parameter for subpath ingress configurations","### Feature and motivation  Adding parameter for subpath configuration so inside container application can work on different path than root.  I've tested rewrite rules on ingress and they do not work correctly.  ### Usage example  Currently application works on http://localhost:4444 inside of the container, unfortunately in ingress implementation with reverse-proxy application will not respond correctly to ingress configuration where path is configured different than ""/"" New parameter would allow to change base URL of the application to work on http://localhost/selenium:4444 which will allow correct communication with ingress.","open","I-enhancement,","med502","2022-07-04T14:24:38Z","2022-07-05T10:18:33Z"
"","10084","[🚀 Feature]: Java/CS FirefoxProfile to support addExtensioin temporary","### Feature and motivation  Add to `FirefoxProfile::addExtension` option to add extensions as temporary  Other languages (Python, Ruby and Javascript) support providing config of adding extension as temporary  For some reason Java/C# doesn't provide config, just provides false, or nothing https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/firefox/AddHasExtensions.java#L105 https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/src/webdriver/Firefox/FirefoxDriver.cs#L299   ### Usage example  When testing on release (non developer/nightly), an 'unsigned' xpi won't load if it isn't loaded as temporary  - where localy signed doesn't count as signed.  On windows, when unpacking the xpi to load the folder, can lead to failures because of windows adding content like thumbs.db  ``` 		FirefoxProfile firefoxProfile = new FirefoxProfile(); 		firefoxProfile.addExtension(a, true); ```","closed","I-enhancement,","GregDomjan","2021-11-25T04:33:41Z","2022-01-03T00:07:43Z"
"","10665","[🚀 Feature]: Add selenium grid to maven central","### Feature and motivation  Add selenium grid to maven central to allow embedding it on Java aplications. Can be added just the http server for remote driver.  ### Usage example  Build a custom remote web driver without need to reimplement the server api redirections to web driver implementation. It can be HTMLUnit, or a web driver that I'm building for JavaFX WebView","closed","I-enhancement,","giflw","2022-05-18T12:41:12Z","2022-06-18T00:11:57Z"
"","10086","[🚀 Feature]: Download xml file instead of open","### Feature and motivation  Add a settings to make the .xml file downloading possible. Right now browser is always open the .xml file.  ### Usage example  In some cases user want to download the .xml file instead of open it","closed","I-question,","zoloc","2021-11-25T12:59:21Z","2021-12-26T00:08:09Z"
"","10158","[🚀 Feature]: Allow to specify HttpOnly attribute when adding new cookie with py bindings","### Feature and motivation  According to WebDriver specification of [Add Cookie](https://www.w3.org/TR/webdriver/#add-cookie) it should be possible to set various cookie attributes. However, constructor of Cookie class in python bindings doesn't have parameters for the HttpOnly one.  https://github.com/SeleniumHQ/selenium/blob/007037c9654f2040f3e28ed508a623f2a54cde11/py/selenium/webdriver/remote/webdriver.py#L1112  Would be great to have them like guys in js do :)  https://github.com/SeleniumHQ/selenium/blob/007037c9654f2040f3e28ed508a623f2a54cde11/javascript/node/selenium-webdriver/lib/webdriver.js#L1615  ### Usage example  .","closed","I-enhancement,","jacopotediosi","2021-12-16T14:08:43Z","2022-01-26T00:09:42Z"
"","10317","[🚀 Feature]: a capability to set the process priority","### Feature and motivation  A capability to set the process priority of the drivers and browsers could help to orchestrate important and not so important tests in shared environments. For example we are running 24/7 performance tests in a 15 minutes intervall. The performance tests will measure the time spent for some operations on the website. The regular regression tests are executed on demand and will run on the same system. To minimize the impact of the regression tests to the times measured in the performance tests it would be good to set the process priority while creation of the session.  ### Usage example  This could help to reduce the amount of reserved hardware only for collecting performance numbers.","closed","","joerg1985","2022-02-02T16:37:28Z","2022-03-07T00:09:36Z"
"","10266","[🚀 Feature]: Update extensions in bindings to the new common ones.","### Feature and motivation  @nickgaya added extensions in common directory https://github.com/seleniumhq/selenium/tree/trunk/common/extensions  Would be nice for all languages to update to use these extensions in their test code. Usage example here: https://github.com/SeleniumHQ/selenium/pull/10216   ### Usage example  add to bazel file as data: ``` data = TEST_DATA + [     ""//common/extensions"",     ... ```  then can reference it from main directory: ``` /common/extensions/webextensions-selenium-example.crx ```","open","I-enhancement,","titusfortner","2022-01-19T21:23:24Z","2022-06-08T11:42:14Z"
"","10836","[🚀 Feature]: Initialize findby via constructors","### Feature and motivation  @ findby is very handy with an ajax element locator factory as it solves the stale element problem while giving a fixed amount of time for elements to appear.  But when the locator needs to be language specific annotations can not be used. Having the ability to construct these objects directly in the code would be great, as driver.findelement needs a lot of boilerplate to provide the same functionality.  If this is already possible then I was not able to find it in any documentation or when asking on your irc channel which would instead mean that the docs could be updated.  ### Usage example  @findby(xpath = '//div[@name='englishText']') Webelement element  But what if I need 'germanText' instead?  new FindBy(By.xpath(String,format('//div[@name='%s']',variableText),this)","closed","I-enhancement,","skyhirider","2022-07-02T07:10:18Z","2022-07-05T16:34:40Z"
"","10466","[🚀 Feature]: Add .NET 6.0 to dotnet project build targets","### Feature and motivation  .NET 6.0 SDK was recently publicly released, so we should consider adding .NET 6 to the list of target frameworks for each dotnet project.  Not much has changed from NET 5 to NET 6 in terms of required source changes, however .NET 6 lists Visual Studio 2022 as a requirement so keep that in mind.  ### Usage example  I was able to successfully update the following projects and build .NET 6 DLLs from Visual Studio 2022:  - WebDriver - WebDriver.Support - WebDriverBackedSelenium  Rough steps on updating project to support .NET 6 (**Note** VS2022 is required for full .NET 6 support):  1. Install latest .NET 6.0 SDK and latest Visual Studio 2022 2. Edit each project and nuspec file to specify `net6.0` where applicable. 3. Edit preprocessor directives in relevant sources to include `NET6_0_OR_GREATER` (or `NET6_0`) where applicable or you will encounter an error when building sources that use system drawing methods (like screenshotting)   You may be able to get around installing VS2022, if one were to just perform the above changes and then build with the NET 6 SDK installed, however I have not tried this myself so cannot speak to how this workaround might work.","open","I-enhancement,","cgv-wd","2022-03-22T15:08:29Z","2022-03-22T22:54:12Z"
"","10632","[🚀 Feature]: Having Search box added in Selenium 4 Grid GUI","### Feature and motivation  **Scenario:** When we start our selenium automation test script execution on Selenium4 Grid GUI (http://localhost:4444/ui/index.html), we can see the sessions gets located to required TestCases. We do have sorting option or can see 15 VNC sessions at time but it's difficult when the TestCases number being executed are more (~80 I am currently executing).  **Issue:** We cannot directly search with session ID or name (if we set it using setCapability(""se:name"","""")) in VNC Sessions UI.  **Request:** Request to add new feature of adding search box in Sessions Grid 4 VNC GUI to making the search easy.  **Original Grid-4**     **Modified Grid-4**     ### Usage example  I am going to use this search box feature for Sessions Grid 4 GUI to search particular sessionId or the name of VNC for the session I provided.","open","help wanted,","Nkperiwal","2022-05-11T11:38:31Z","2022-07-14T16:36:33Z"
"","10285","[🚀 Feature]: support python `with` statement to automatically quit webdrivers","### Feature and motivation  ### Feature  Support the use of the python [`with`](https://docs.python.org/3/reference/compound_stmts.html#the-with-statement) statement to automatically quit webdriver classes.  ### Motivation 1. This is useful for single purpose selenium scripts where the user is creating and using a driver once to accomplish a specific task.  If any step of the task fails (i.e., throws an uncaught exception) the driver will be automatically closed. 1. Using the `with` statement is idiomatic for resources (files, network connections, etc) that must be cleaned up in some way after use    ### Usage example  ```python with webdriver.Chrome(options=options, service=service) as driver:     # use the driver     driver.find_element(By.ID, ""foo"")      # when this block exits, driver.quit() is automatically called ```","closed","I-enhancement,","mmindenhall","2022-01-25T00:54:14Z","2022-03-20T00:09:55Z"
"","10861","[🚀 Feature]: How to use Selenium to launch Brave browser with adblock on for C#?","### Feature and motivation   Hello: I have been using Brave browser for quite a number of years, with the brave browser, I can skip almost all kinds of ads on internet. Recently, I want to write some C# code to use selenium to do some translation job on some web sites, unfortunately, there are so many ads on the web site, selenium always failed, as it can’t see the element hidden by all kinds of ads. When I launch Brave browser by hand and visit the translation web site, I can see all the ads are gone, so it is rather clean. I think if I can launch Brave browser with Selenium, then I can get a clean web site, so my C# selenium code could run. So I installed some NUGET packages: PM> Install-Package Selenium.WebDriver -Version 4.3.0 PM> Install-Package Selenium.WebDriver.ChromeDriver -Version 103.0.5060.5300 PM> Install-Package Selenium.Support -Version 4.3.0 The following is my C# code:   try  {      Environment.SetEnvironmentVariable(""webdriver.chrome.driver"", chromeDriverPath);      ChromeOptions chromeOptions = new()      {          BinaryLocation = braveBrowserPath       };      Brave_Driver = new ChromeDriver(chromeOptions);      Brave_Driver.Url = ""https://edition.cnn.com/"";  }  catch (Exception ex)  {      Console.WriteLine(ex.Message);  } I can see that selenium can launch Brave browser, but the home page, which is from CCN web site, has a lot of ads, and I tried different web pages, still all the ads are there.  It makes Brave browser useless.  Using Chrome browser is the same, tons of ads appear on the web page, some times, those ads occupy 90% or more space on the screen, it is difficult to run C# selenium code to do the job. If I don’t want to use some ad-block extensions, only use Brave browser, how I can keep all the ads away? Please advise if I did something wrong, or it is possible with Selenium with C#. Thanks,   ### Usage example  try  {      Environment.SetEnvironmentVariable(""webdriver.chrome.driver"", chromeDriverPath);      ChromeOptions chromeOptions = new()      {          BinaryLocation = braveBrowserPath       };      Brave_Driver = new ChromeDriver(chromeOptions);      Brave_Driver.Url = ""https://edition.cnn.com/"";  }  catch (Exception ex)  {      Console.WriteLine(ex.Message);  } Just use the code or add some parameter, so the ads are gone as I use Brave browser by hand.","closed","I-question,","zydjohnHotmail","2022-07-10T16:04:59Z","2022-07-11T04:40:17Z"
"","10172","Reflect how find_elements returns a list, not just one WebElement","### Description (and motivation and context) The author of python/typeshed#6565 seems to have been misled by the return types changed here, and it caused mypy to make a lot of complaints in a codebase I work on. Here, like in python/typeshed#6645, those annotations are corrected to reflect that any method with `find_elements` in the name returns a list.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","colons","2021-12-21T10:25:43Z","2021-12-24T20:48:27Z"
"","10904","[py] Normalized finding by class (not via CSS selector)","### Description ⠀Good day! ⠀I use Selenium in several of my projects and I often encounter classes consisting of several words separated by spaces. When I do a search on such classes I get nothing, because now the class search is done through the CSS selector. So I applied the proposed commit to my local libraries and it works logically and as it should work.  ### Motivation and Context ⠀When developer want to find an element by class name, which can be several words separated by spaces, he want find it by class name, not CSS selector. If he want find element by CSS selector he'll just do it.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","SecorD0","2022-07-26T01:04:00Z","2022-07-26T15:29:23Z"
"","10659","[rb] - Improving Wait class error handling","### Description When re-polling during the `Wait#until` method. Ensure we don't trip up if the element is missing **OR** if the element is stale, as both are equally likely  ### Motivation and Context During the upgrade from capybara 3.35 to 3.37.1 this error starts showing a **lot** more. It is likely that as we are moving faster in better rubies, we are likely to hit that split second where the web element could be missing OR it could be in the process of appearing / changing and therefore register as stale.  I've classified this as a bugfix. As ideally missing element and stale element should live hand in hand.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","luke-hill","2022-05-17T08:50:29Z","2022-07-05T13:03:01Z"
"","9958","Use `nameof()` for refactoring safety (C# / .NET)","### Description Use the `nameof()` language/compiler feature, which provides a safety net, ensuring messages/exceptions always contain the correct parameter name in the case of a variable being renamed.  ### Motivation and Context A safety net, meaning parameters stay correctly named in messages in future refactors.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","thomhurst","2021-10-20T12:03:59Z","2021-10-25T16:56:43Z"
"","10473","Updated Session map command to work with selenium 4.1.2","### Description Updating the version of selenium from 4.0.0-alpha-6 to 4.1.2 in command to make Session Map (# RedisBackedSessionMap and # JdbcBackedSessionMap) work with the latest version.  ### Motivation and Context Keeping the session map up to date with the latest stable version of selenium.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","TamsilAmani","2022-03-24T09:45:25Z","2022-03-24T13:16:16Z"
"","10396","Update CHANGES for Python Selenium 4.1.2","### Description Update CHANGES for Python Selenium 4.1.2  ### Motivation and Context The PyPI version is at ``4.1.2``, but the CHANGES file for Python only goes up to ``4.1.1``.  ### Types of changes  - [x] Documentation  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change is a change to the documentation. - [x] I have updated the documentation accordingly.","closed","","mdmintz","2022-02-24T17:40:54Z","2022-07-15T13:38:16Z"
"","10611","[JS] handle a breaking changes in os.networkInterfaces","### Description Until Node 16, [`os.networkInterfaces()`](https://nodejs.org/dist/latest-v16.x/docs/api/os.html#osnetworkinterfaces)'s `family` is either `IPv4` or `IPv6`.  ```js {   address: '127.0.0.1',   netmask: '255.0.0.0',   family: 'IPv4',   mac: '00:00:00:00:00:00',   internal: true,   cidr: '127.0.0.1/8' }, ```  However, in Node 18, [`os.networkInterfaces()`](https://nodejs.org/dist/latest-v18.x/docs/api/os.html#osnetworkinterfaces)'s `family` is either `4`(for IPv4) or `6`(for IPv6).  ```js {   address: '127.0.0.1',   netmask: '255.0.0.0',   family: 4,   mac: '00:00:00:00:00:00',   internal: true,   cidr: '127.0.0.1/8' }, ```  So, this patch can handle both `IPv4`/`IPv6` and `4`/`6`.  ### Motivation and Context When I run tests for my project with Node 18, I failed because selenium-webdriver can't get any network interfaces.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","outsideris","2022-05-05T12:27:29Z","2022-05-05T13:10:32Z"
"","10829","Bump bazel-contrib/rules_jvm to v0.4.0","### Description This PR updates the version of bazel-contrib/rules_jvm to the last stable (i.e., 0.4.0), just released.  ### Motivation and Context To carry out the migration of the Selenium Java tests to JUnit 5, a fix was required in the rules_jvm's JUnit 5 runner. This change has been officially included in rules_jvm v0.4.0, released on June 29 2022.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-29T13:18:15Z","2022-06-29T19:38:22Z"
"","10067","Throw specific exception when port is already in use","### Description This PR provides a fix for issues #9972 and #10066  NB! This PR will also solves some of **Selenium own flaky tests**, for example [caused by ""BindException: Address already in use""](https://github.com/asolntsev/selenium/runs/4412949195?check_suite_focus=true).  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-java,","asolntsev","2021-11-20T16:25:22Z","2022-01-03T21:37:15Z"
"","10778","[java] Migrate all tests to JUnit Jupiter (JUnit 5) (issue #10196)","### Description This PR migrates all the Selenium tests from JUnit 4 to JUnit 5.   For that, the scaffolding test classes based on JUnit 4 (such as [JUnit4TestBase](https://github.com/seleniumHQ/selenium/blob/trunk/java/test/org/openqa/selenium/testing/JUnit4TestBase.java), [SeleniumTestRunner](https://github.com/seleniumHQ/selenium/blob/trunk/java/test/org/openqa/selenium/testing/SeleniumTestRunner.java), or [SeleniumTestRule](https://github.com/seleniumHQ/selenium/blob/trunk/java/test/org/openqa/selenium/testing/SeleniumTestRule.java)) has been reimplemented as a new test base (called `JupiterTestBase`) and a JUnit 5 extension (called `SeleniumExtension`). Then, all the existing tests using the former `JUnit4TestBase` have been migrated to use the new base class and the new JUnit 5 programming model (i.e., Jupiter).  ### Motivation and Context Solves #10196 (migration to JUnit 5).  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-16T14:51:04Z","2022-06-18T15:42:24Z"
"","9936","[js] Add support for form submit in W3C mode (fixes #9916)","### Description This Pr is a fix for issue #9916  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-10-15T16:04:33Z","2021-10-20T10:55:29Z"
"","10689","Include mini tutorial about how to update Java dependencies in README","### Description This PR includes a section in the README explaining the required steps to update the Java dependencies in the Selenium project.  ### Motivation and Context This PR might help developers to know the Bazel command required to manage the Java dependencies, for instance, to bump a given artifact to the next stable version.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bonigarcia","2022-05-24T14:01:12Z","2022-05-24T14:42:10Z"
"","10752","[java] Run tests on the JUnit Platform (JUnit 5)","### Description This PR enables `java_test_suite` from `contrib_rule_jvm `to use the JUnit Platform for running test cases. It uses the JUnit 4 runner by default since most existing tests are JUnit 4-based. New test cases can be based on JUnit Jupiter. We can migrate the existing JUnit 4 tests to JUnit Jupiter as a future step.  ### Motivation and Context Migration of Java tests from JUnit 4 to JUnit 5 (issue #10196).  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-09T10:21:48Z","2022-06-09T13:27:58Z"
"","10742","[java] Run tests on the JUnit Platform (JUnit 5) (issue #10196)","### Description This PR enables `java_test_suite` from `contrib_rule_jvm `to use the JUnit Platform for running test cases. It uses the JUnit 4 runner by default since most existing tests are JUnit 4-based. New test cases can be based on JUnit Jupiter. We can migrate the existing JUnit 4 tests to JUnit Jupiter as a future step.  ### Motivation and Context Migration of Java tests from JUnit 4 to JUnit 5 (issue #10196).  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-07T13:52:18Z","2022-06-09T13:03:56Z"
"","10186","[py] PEP484 hints for py/selenium/webdriver/common/actions/key_input.py","### Description This PR adds type hints to selenium.webdriver.common.actions.key_input.py  ### Motivation and Context This is a follow-up of #9482 to address #9480. @AutomatedTester pls review  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","iampopovich","2021-12-26T19:19:05Z","2021-12-26T22:06:06Z"
"","10103","[py] PEP 484 type hints for selenium.webdriver.common.actions.wheel_input","### Description This PR adds type hints to `selenium.webdriver.common.actions.wheel_input` Code style was edited in according to 80 charachters ruller  ### Motivation and Context This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","iampopovich","2021-11-29T18:48:30Z","2021-11-30T12:14:50Z"
"","10108","[py] PEP484 hints for webdriver.common.actions.action_builder","### Description This PR adds type hints to `selenium.webdriver.common.actions.action_builder`  also method `get_device_with` was edited much more laconic old: ```     def get_device_with(self, name):         try:             idx = self.devices.index(name)             return self.devices[idx]         except Exception:             pass ``` new: ```     def get_device_with(self, name) -> Union[""WheelInput"",""PointerInput"",""KeyInput""]:         return next(filter(lambda x: x == name, self.devices), None) ```  - new variant has the same execution time as old `get_device_with` - method returns None (as old try/except) if no device was filtered - try/except block is unnecessary anymore  ### Motivation and Context This is a follow-up of #9482 to address #9480. @AutomatedTester  pls review  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","iampopovich","2021-12-01T12:53:15Z","2021-12-25T00:17:06Z"
"","10099","[py] PEP 484 type hints for selenium.webdriver.chromium.options","### Description This PR adds type hints to `selenium.webdriver.chromium.options`  ### Motivation and Context This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","iampopovich","2021-11-28T16:54:45Z","2021-11-29T13:31:59Z"
"","10212","PEP484 type hints for py/selenium/webdriver/chrome/options.py","### Description This PR adds type hints to `selenium.webdriver.chrome.options`  ### Motivation and Context This is an action towards #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","thecr8tr","2022-01-01T18:07:54Z","2022-01-04T23:45:15Z"
"","10095","[js] Remove legacy JWP support and w3c switch (Cleanup-1)","### Description This PR  * Removes support for legacy JWP (now strictly supports W3C protocol) * Removes W3C (boolean> switch which was introduced to switch between w3c(true) and non-w3c(false) command   ### Motivation and Context To make JS bindings completely W3C-compliant (Removes JWP support)  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-11-27T19:14:34Z","2021-11-30T11:08:25Z"
"","10713","Fix `unreleased` note in Ruby changelog","### Description This gem been released several days ago   ### Motivation and Context It's a incorrect information  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","ShockwaveNN","2022-05-29T19:51:19Z","2022-05-29T22:55:09Z"
"","9908","[python] Remove Edge legacy options","### Description This change removes the `use_chromium` property from EdgeOptions, and removes a reference to the MicrosoftWebDriver (legacy) binary.  ### Motivation and Context In #9166 the decision was made to remove EdgeHTML support from Selenium 4. Capabilities that were only applicable to MicrosoftWebDriver (EdgeHTML) can safely be removed. Now that Edge Chromium is the default and only supported Edge version, the `use_chromium` can be removed as well.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bwalderman","2021-10-13T08:18:04Z","2021-10-13T10:44:38Z"
"","10105","Performance improvements","### Description These changes are purely performance improvements to make Selenium run faster, there are no new features in this pull request.  ### Motivation and Context These changes provide performance improvements only.   The uses of StringBuffer below can be safely replaced with StringBuilder and avoid synchronization overhead.   The change to use equalsIgnoreCase is faster and reduces memory consumption by eliminating many temporary strings.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ X] All new and existing tests passed.","closed","","larrydiamond","2021-11-30T13:17:02Z","2021-12-02T10:36:35Z"
"","10786","[java] Migrate base for Closure tests to JUnit Jupiter (JUnit 5)","### Description The JavaScript build contains a set of Closure tests (HTML + JavaScript) that are executed through Selenium and Java. These tests were based originally on JUnit 4. This PR migrates the test base required for that tests to JUnit 5, using dynamic tests (that use the set of HTML file to generate dynamically the Closure tests).  ### Motivation and Context Migration of Java tests to JUnit 5 (issue https://github.com/SeleniumHQ/selenium/issues/10196).  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-20T12:06:12Z","2022-06-20T15:14:15Z"
"","10737","[java] Add ability to decorate child classes of `WebDriver`","### Description The changes enable decoration of custom `WebDriver` implementations.  ### Motivation and Context Relates https://github.com/appium/java-client/issues/1694  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-java,","valfirst","2022-06-06T13:33:32Z","2022-07-19T11:21:41Z"
"","10582","[IE] Check process ID when searching for Edge window handle","### Description Submitting the bug fix first shared by: https://github.com/HiroyukiSakoh/selenium/commit/44af88bad326f4ba7d3037b5d3e25bd21bfb91f2  This update IEDriver's FindEdgeWindow method to skip Edge windows that do not belong to the expected Edge process.  ### Motivation and Context This is a fix for an issue that users are encountering when attempting to run two instances of Edge in IE Mode in parallel: - https://github.com/SeleniumHQ/selenium/issues/10339 - https://github.com/MicrosoftEdge/EdgeWebDriver/issues/11  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bwalderman","2022-04-27T17:44:26Z","2022-05-24T22:46:37Z"
"","10472","added .bazelrc.local file location in README.md","### Description Specified the location of file '.bazelrc.local' in README.md  ### Motivation and Context Helps to locate the file easily while setting up Bazel on macOS (Apple silicon mac)  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","TamsilAmani","2022-03-23T15:45:44Z","2022-03-23T18:25:29Z"
"","10695","fix: update ExpectedCondition to extend java util Function","### Description Some builds of guava have `Function` that does NOT extend the java native function. This causes `ExpectedCondition` instances to be incompatible the various wait `until` methods that were recently updated to accept `java.util.function.Function`. See     more [here](https://github.com/SeleniumHQ/selenium/issues/10606#issuecomment-1136382614).  ### Motivation and Context Fixes #10606  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] ~My change requires a change to the documentation.~ N/A - [ ] ~I have updated the documentation accordingly.~ N/A - [ ] ~I have added tests to cover my changes.~ Not testable unless we are running with a different version of guava (specifically the ""android"" builds because those are java 7 compatible and therefore don't have the `java.util.function.Function` interface iirc) - [ ] All new and existing tests passed. ... having issues getting some tests working. On the small tests had one failure mentioning no port available, but all the others passed. I don't recall what the large tests failed with, but it was something with the StressTest or whatever it was called.","closed","","ammmze","2022-05-26T04:22:37Z","2022-06-15T16:30:41Z"
"","9955","Fix Javadoc code block formatting","### Description Several classes use the `` tag for for javadoc code blocks. This tag doesn't maintain formatting and should be combined with a `` tag (as is done in most classes). Additionally '', and '@' characters needs to be escaped in plain HTML javadoc.  ### Motivation and Context The unformatted code blocks result in badly formatted documentation and unescaped characters result broken or incomplete documentation. For instance, the doc for [WebDriverDecorator](https://www.javadoc.io/doc/org.seleniumhq.selenium/selenium-support/4.0.0/org/openqa/selenium/support/decorators/WebDriverDecorator.html) is cut short by [an unescaped '@'](https://github.com/SeleniumHQ/selenium/blob/702b3aae7385adf331d75cdeacd79720cf6b9c84/java/src/org/openqa/selenium/support/decorators/WebDriverDecorator.java#L105).  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","labkey-tchad","2021-10-20T01:10:21Z","2021-11-04T11:29:21Z"
"","9906","[dotnet] Use vendor-specific method names for additional Chromium options.","### Description Renames `ChromiumOptions.AddAdditionalChromeOption` to the more vendor-neutral `ChromiumOptions.AddAdditionalChromiumOption`. Make this method protected and add vendor-specific versions of this method to the derived classes `ChromeOptions` and `EdgeOptions`.  ### Motivation and Context This avoids potential confusion with customers using `EdgeOptions` having to use the Chrome-branded `AddAdditionalChromeOption` for capabilities that may in fact be Edge-specific (e.g. webview2 or device portal options). The existing `AddAdditionalChromeOption` is preserved on `ChromeOptions` to avoid breaking ChromeOptions users that call this method.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bwalderman","2021-10-13T06:59:26Z","2021-10-13T10:05:51Z"
"","9921","[java] Remove Edge USE_CHROMIUM flag","### Description Removing the `ms:edgeChromium` a.k.a. `USE_CHROMIUM` flag from the Java bindings as this should no longer be used.  ### Motivation and Context The flag was originally introduced as a hint for middleware like Selenium Grid to let the client select either EdgeHTML or Chromium-based Edge. In #9166 the decision was made to remove EdgeHTML support from Selenium 4 and make Edge Chromium the default and only supported Edge version. Since there are no longer plans to support running both Edge implementations side-by-side, this flag can be removed.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bwalderman","2021-10-14T09:04:33Z","2021-10-14T09:19:55Z"
"","10470","Remove opera class from Python codebase","### Description Remove the Opera class from the Python codebase. The Opera classes in Java were already marked as Deprecated.   ### Motivation and Context Opera does not support W3C, and therefore it should be deleted from Selenium. Issue #10379.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-py,","nienkenijkamp","2022-03-23T10:24:28Z","2022-05-10T17:37:52Z"
"","10478","[py] Update extension in the tests to use the common extensions","### Description Related to #10266  ### Motivation and Context Ensure all language bindings use the same extensions for testing. The changes help fix this for Python bindings.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","SinghHrmn","2022-03-25T14:27:38Z","2022-04-06T13:39:50Z"
"","10785","[java] Restore Closure Java classes required for JavaScript build","### Description PR #10778 deleted by mistake a Java package required by the JavaScript build, and as a result, the JavaScript build started to fail. This PR restores these files.  ### Motivation and Context Migration of Java tests to JUnit 5 (issue #10196).  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-20T09:16:06Z","2022-06-20T10:50:16Z"
"","10308","py: Modifies install_addon method to support installing unpacked addons","### Description Modifies install_addon method to support installing unpacked addons  ### Motivation and Context implements #10265   ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gpt14","2022-01-30T23:44:07Z","2022-03-01T14:57:44Z"
"","10566","Java: Support for sending firefox addon directory as temporary in remote sessions","### Description Modified the `installExtension()` to send firefox addon directory as temporary in remote session.  ### Motivation and Context  - to implement java solution for #10265  - References made : https://github.com/SeleniumHQ/selenium/issues/8357#issuecomment-643047209  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","TamsilAmani","2022-04-20T07:57:55Z","2022-04-22T07:13:25Z"
"","10310","[py] Add py.typed file","### Description Makes type checkers use type annotations from selenium itself.  ### Motivation and Context  #9480  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist Let me know if I have to go through the boilerplate, but I verified it manually: after `pip install ./py` in the repo, I can successfully run mypy over a file containing `import selenium`.  - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Akuli","2022-01-31T18:47:54Z","2022-02-03T18:33:02Z"
"","9937","fix some typos, mostly in Java code","### Description Just fixed some typos in comments and tests.","closed","","asolntsev","2021-10-15T17:58:25Z","2021-10-21T07:18:10Z"
"","10409","fixed reading the data from the stream and fixed the size of chunks","### Description InputStream.read may read less bytes than actually are in the stream, this might corrupt the forwarded data. Also fixed the size of the chunks send after the initial chunk.  ### Motivation and Context I noticed the http chunks after the initial 1MiB chunk are only 8KiB, e.g. a 3 MiB screenshot was chunked  in one chunk of 1MiB and 256 chunks of 8KiB, i don't think this was the intention when implementing chunks.  While fixing this i noticed the call to `is.read(ary)` did expect the function to block until the array is full or the end of steam is reached, like `is.readNBytes(ary, 0, ary.length)` would do. Since `is.readNBytes` is Java 9 i had to fallback to `com.google.common.io.ByteStreams` already used in other areas of the code.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-grid,","joerg1985","2022-03-02T20:41:48Z","2022-03-11T22:47:35Z"
"","10868","Remove require of websocket in selenium-devtools gem","### Description In cd69898 the dependency of websocket was removed from selenium-devtools gem. When this gem is required it raises an error of: `cannot load such file -- websocket (LoadError)`  We experienced this error because we updated selenium-devtools and hadn't updated selenium-webdriver. We found the problem was resolved by updating selenium-webdriver as that has a websocket dependency cd69898  ### Motivation and Context  Resolve an error when requiring the selenium-devtools gem  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","kevindew","2022-07-12T10:17:20Z","2022-07-13T18:25:14Z"
"","10208","[java] Fix FluentWait's sample usage wrt durations","### Description Fixes the sample usage of the `FluentWait` class which currently does not compile.  ### Motivation and Context Commit 502301edeb4c4caf27aad125e8e75da3f22691f1 removed some deprecated methods which used the deprecated `TimeUnit` class and kept only the overloaded methods that use Java's `java.time.Duration` class.  However, it missed fixing the sample usage at the beginning of the javadoc that still referred to these methods. This patch fixes the issue and replaces the method calls in the sample usage with the newer methods that accept a `Duration` argument.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - N/A - documentation change only - [x] All new and existing tests passed.    Fixes #10207","closed","","mureinik","2021-12-31T09:09:41Z","2021-12-31T19:39:49Z"
"","10077","[py] Fix RelativeBy `near()` docs, fix bugs and deprecations in `webserver.py`","### Description Fixed up a discrepency when invoking webserver.py standalone where host was set as the port number provided.  Tidied up some of the webserver code was I was in there and stopped called a deprecated function in the `stop()` method of the `SimpleWebServer`  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. (N/A) - [x] I have updated the documentation accordingly. (N/A) - [x] I have added tests to cover my changes. (N/A) - [x] All new and existing tests passed.","closed","","symonk","2021-11-23T22:47:13Z","2022-03-06T17:39:05Z"
"","10811","#10810 pick the right target using given window handle","### Description Fix for issue https://github.com/SeleniumHQ/selenium/issues/10810  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)","closed","C-devtools,","asolntsev","2022-06-25T11:57:15Z","2022-06-29T10:22:33Z"
"","10793","[java] Cleanup after migration to JUnit 5","### Description Final cleanup in Bazel config after migration to JUnit 5. This PR also includes a fix in a test (not being executed)  ### Motivation and Context Final step in the migration of the Selenium Java tests to JUnit 5 (this PR might close #10196).  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-22T10:41:42Z","2022-06-22T11:25:36Z"
"","10358","[py] Add support for http proxy authentication to remote_connection","### Description Currently, `urllib3.ProxyManager` is used when connecting to a Selenium Server via http proxy. The proxy url is read from environment variables.  Some http proxies require authentication. Credentials are usually passed in the url like this: http://username:password@proxy.com:8080  When specifying a url like this and passing it into the ProxyManager's `proxy_url` attribute, the ProxyManager is not able to authenticate to the proxy and a ProxyError is thrown: `ProxyError('Cannot connect to proxy.', OSError('Tunnel connection failed: 407 Proxy Authentication Required'))`  Instead ProxyManager uses a `proxy_header` field for authentication, which can take a `proxy-authorization` header that is then used to authenticate to the http proxy.  This PR implements support for this header. If credentials are specified in the proxy url like shown above, they are seperated out. They are then used to create a HTTP basic proxy-authorization header using the [urllib3.util.make_headers](https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html#urllib3.util.make_headers) method provided by urllib3. The credentials are removed from the url and the ProxyManager object is created using the url without credentials and the authorization header.  If a regular url is passed in without credentials, no auth header is specified and the ProxyManager is created as it was before.  ### Motivation and Context  It is currently not possible to connect to a Selenium Server behind an http proxy that requires authentication using the Python Remote Webdriver. This problem is solved here, as credentials can now be specified in the proxy url using the following standardized format: http://username:password@proxy.com:8080 This feature is already present in other Selenium implementations (I tested it in Ruby), and this adds support for Python as well.    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.   (This is my first ever open source contribution, so if there is anything I can improve, please let me know!)","closed","","luispflamminger","2022-02-11T14:50:43Z","2022-02-28T12:04:27Z"
"","10645","Add docker device mapping configuration","### Description Configure docker containers device mapping  ### Motivation and Context Sometimes is needed to map a device file to a docker container to make possible some tasks like virtualize a VM or something else. Because of this, I believe it is desirable to have a way to configure which device files should be available in containers.  In this commit, we can define which device files should be mapped in containers through the standard selenium grid configuration file.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gifflet","2022-05-13T20:52:06Z","2022-06-03T11:52:43Z"
"","9926","[java] Updating extraInfo object type in WebDriverException class","### Description Changing type of extraInfo from HashMap to ConcurrentHasMap in WebDriverException class.  ### Motivation and Context To avoid ConcurrentModificationException while reading exception message by parallel threads.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","hornyja4","2021-10-14T14:27:40Z","2021-10-25T12:19:37Z"
"","10688","[java] Bump Maven dependencies to the latest versions","### Description Bump graphql-java, byte-buddy, failsafe, testng, littleproxy, redisson, netty, and opentelemetry to the latest versions.  ### Motivation and Context Preparation for next release, i.e. Selenium 4.1.5.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-05-24T13:00:15Z","2022-06-10T15:20:25Z"
"","10081","[java] Fix #10080 Handle null parameters in TracedCommandExecutor","### Description Bug fix for #10080 Converts null param value to ""null"" string.  Closes #10080 ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","BorisOsipov","2021-11-24T17:18:26Z","2021-12-07T14:27:19Z"
"","10376","[dotnet] Fix missing documentation comments in NuGet package","### Description All .nuspec files failed to include the XML files containing documentation comments. This regression was introduced with d77555a8e13d22a0c02ea7b22260d6844c0e1cbd and affects v4.0.0, v4.0.1 and v4.1.0.  Fixes: - #10371 - #10375  Both have been closed as duplicates of an unrelated bug (missing online documentation). Please consider reopening #10371 to track the underlying issue until this has been fixed. Both bugs do not mention online documentation, so I don't understand why they were closed.  ### Motivation and Context Starting with version 4.0.0, all documentation comments were missing. This is because the XML file that contains those comments has been inadvertently excluded from the NuGet package.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.  **I was unable to test my changes because I was unable to complete a full build. Please consider improving your build instructions if you require such a complex build with this amount of dependencies.**","closed","C-dotnet,","BaerMitUmlaut","2022-02-18T23:52:27Z","2022-06-01T20:38:46Z"
"","10792","[java] Allow linting only on the default test","### Description After migrating Selenium tests to JUnit 5, the rule `java_junit5_test` delegates to `contrib_rules_jvm`’s `java_test`, and that adds lint tests for every target. We want to add one set of lint tests, since the rest are going to be identical. Therefore, we tag all but one test with `no-lint`.  ### Motivation and Context Improve the performance of spotbug tests (linting) after the migration to Selenium Java tests to JUnit 5 (issue #10196).  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bonigarcia","2022-06-22T09:20:32Z","2022-06-22T09:28:58Z"
"","10190","[node] Adds new desktop cast command for Chromium","### Description Adds new desktop cast command for Chromium as detailed in #10182  ### Motivation and Context #10182   ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","gpt14","2021-12-27T17:58:42Z","2021-12-29T05:45:46Z"
"","10191","[java, node] Adds new desktop cast command for Chromium #10190","### Description Adds new desktop cast command for Chromium as detailed in #10182  ### Motivation and Context #10182   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gpt14","2021-12-27T18:36:58Z","2021-12-29T17:13:32Z"
"","10869","Disable popup blocking for Edge in IE Mode","### Description Add the `--disable-popup-blocking` flag to the command line used to launch Edge in IE Mode.  ### Motivation and Context This flag is already used by Edge WebDriver when launching Edge natively. It suppresses the browser's default popup blocking behavior which can sometimes interfere with tests. Adding this flag to IEDriver for IE Mode should fix https://github.com/MicrosoftEdge/EdgeWebDriver/issues/36  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","bwalderman","2022-07-12T18:02:55Z","2022-07-12T18:12:45Z"
"","10459","Py3 upgrades","### Description - removed old-style class declaration - replaced format and %-calls with f-strings - updated super() calls - replaced OSError aliases - removed unnecessary __future__-imports - removed redundant open modes - replaced set-calls by set literals - removed unicode literals - replaced format and %-calls with f-strings - replaced list with generator expressions (pep289) - replaced tuple with generator expressions (pep289) - removed unnecessary python2 imports - simplified encode-calls - replaced encode calls with byte literals  ### Motivation and Context  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","open","C-py,","paulhfischer","2022-03-19T06:17:42Z","2022-05-15T10:33:15Z"
"","10012","[node] Fix edge test failures","### Description * Update node tests for Edge to fix recent test failures. * Add tests for correct handling of extensions in Edge options.  ### Motivation and Context These tests started failing when bc69a20 got merged into #9495. See the [test logs](https://github.com/SeleniumHQ/selenium/runs/4104350137?check_suite_focus=true) for details.  Since edge.Driver now extends chromium.Driver, the edge tests should be updated similarly to the chrome tests.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","nickgaya","2021-11-04T15:51:40Z","2021-11-05T13:59:47Z"
"","9909","[js] Fixes cdp for Chrome and Firefox","### Description * Fixes cdp for chrome and firefox * Added `enableDebugger` firefox option to enable debugger address which is used for CDP  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","harsha509","2021-10-13T08:44:02Z","2021-10-13T12:50:33Z"
"","10693","[java] fix screen rotate error","### Description  The implemetion of rotate command may be wrong in java client, SET_SCREEN_ORIENTATION has beeing used twice, but SET_SCREEN_ROTATION has never been used.   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","fanjlii","2022-05-26T02:09:37Z","2022-05-26T21:45:02Z"
"","10433","Add Hook options class in safari driver","### Description  To be able to use Options in safari webdriver it should be hooked to the driver class.  ### Motivation and Context  See this issue #10428  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ x] All new and existing tests passed.","closed","","MWschutte","2022-03-10T10:06:40Z","2022-03-20T20:35:48Z"
"","10674","[java] Include JMX monitoring feature in the Grid local distributor","### Description  This PR implements issue #9794. It exposes metrics through JMX in the local distributor, namely:  - Number of up nodes - Number of down nodes - Number of active slots - Number of idle slots  Regarding the session elapsed time (requested in the original feature proposal issue), that info should be available using GraphQL.  ### Motivation and Context  Grid 4 already implements JMX monitoring on the nodes. This PR allows to gather also other metrics in the local distributor.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","bonigarcia","2022-05-20T10:05:01Z","2022-05-23T11:40:03Z"
"","10202","[py] make mypy only complain about stuff that matters","### Description  This PR disables the mypy checks that don't matter for a codebase that is only beginning to adopt type checks, in the hopes that flagrantly incorrect annotations such as the ones fixed in #10120 and #10172 can be avoided. It also fixes a number of other very wrong annotations, although not all of them. Some would be hard to fix without removing them entirely, refactoring, or breaking backwards compatibility, and I did not want to do that here without raising it first.  One thing I think I'd suggest as a useful refactor would be turning `Keys` and `By` into `Enum`s or something similar., to help with issues like those mypy still raises about `shadowroot.py`.  Coverage appears to be decreased by this, but I'm not sure what value a coverage report for a check that is mostly throwing errors has. Once the stragglers are sorted, it'd be nice to make the mypy CI job fail when the checks fail (although I'm not sure if CI failures are just to be expected in this codebase).  ~Also, one of the things mypy is complaining about is that `WheelInput` is given too many arguments in `action_builder.ActionBuilder.add_wheel_input`, which I'm confused about. Is there some magic I'm missing, or is this just a method that isn't working at the moment?~ raised in #10210  ### Motivation and Context  I [observed in a comment](https://github.com/SeleniumHQ/selenium/pull/10172#issuecomment-998688391) that the errors that have been made in the existing annotations are completely understandable given how overwhelmingly noisy the current mypy checks are. In an existing codebase, complaining about stuff like missing return annotations is pointless; all you really want to do is [add annotations as you work on stuff](https://mypy.readthedocs.io/en/stable/existing_code.html#write-annotations-as-you-go) and make sure that what you _do_ add is correct.  Incorrect annotations are way, way worse than no annotations.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","open","C-py,","colons","2021-12-30T16:36:27Z","2022-05-24T23:01:00Z"
"","10704","overload log_path to accept tuple (path, mode)","### Description  This change allows users to specify how they want to open their log file with a fallback to `a+` if nothing else is specified  ### Motivation and Context  In [OpenWPM](https://github.com/openwpm/OpenWPM) we run multiple Firefox instances in parallel. To integrate their output with our logging infrastructure we want them to write their logs into pipes, which we then read on the other side, enrich it with metadata and log it ourselves.  This feature is relevant to anyone who wants to interleave their own code's log lines with Selenium's or the browser's.  Fixes #10703  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [ ] All new and existing tests passed.","open","C-py,","vringar","2022-05-27T10:29:41Z","2022-07-04T22:07:43Z"
"","10900","[dotnet] Update Newtonsoft.Json package to v13.0.1","### Description  There was Dependabot's PR https://github.com/SeleniumHQ/selenium/pull/10797 that updated Newtonsoft.Json to v13.0.1. But it didn't make the actual update as Selenium.WebDriver v4.3.0 NuGet package still references Newtonsoft.Json v12.0.3. So I tried to update other project files.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","YevgeniyShunevych","2022-07-22T20:13:40Z","2022-07-22T20:32:14Z"
"","10764","[JS] Fix: using fulfillRequest when intercepting","### Description  The implementation of Network Interception BiDi command is outdated and no longer works (for JavaScript atleast). It uses `Fetch.continueRequest` CDP command, which is now used to change the parameters of request only and not the response. The correct command to be used now is `Fetch.fulfillRequest` which mocks the response.  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","TamsilAmani","2022-06-13T11:58:54Z","2022-06-22T14:56:39Z"
"","10880","[py] build(setup.py): Add `project_urls` for PyPI","### Description  Show Project URLs to [Selenium's PyPI page](https://pypi.org/project/selenium/) via [`project_urls`](https://packaging.python.org/en/latest/guides/distributing-packages-using-setuptools/#project-urls) to _setup.py_  ![image](https://user-images.githubusercontent.com/26336/179226514-48d45405-744b-4f7d-b569-227e14a16fc2.png)  ### Motivation and Context  It takes a few clicks to get around to the docs and source code.  This makes it possible launch all of them via PyPI.   It also is helpful to anyone else that ingests the metadata from setup.py / PyPI  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","open","","tony","2022-07-15T12:51:21Z","2022-07-25T17:54:33Z"
"","10254","[js] remove unnecessary condition","### Description  Selenium have already stopped supporting Firefox 24 ESR.  https://firefox-source-docs.mozilla.org/testing/geckodriver/Support.html ### Motivation and Context  Find TODO comment  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","wafuwafu13","2022-01-15T09:57:42Z","2022-01-17T03:56:56Z"
"","10903","[ruby] feat: Added virtual authenticator","### Description  Relates https://github.com/SeleniumHQ/selenium/issues/10541  - Added virtual authenticator for js. - Added tests for the same.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","open","","TamsilAmani","2022-07-25T09:18:56Z","2022-08-03T20:46:16Z"
"","10295","[java] fix typo in macOS Monterrey to Monterey","### Description  macOS 12 should be Monterey instead of Monterrey (A city of Mexico https://en.wikipedia.org/wiki/Monterrey ?).  https://en.wikipedia.org/wiki/MacOS_Monterey :)  ### Motivation and Context  It seems typo. Is it enough to fix the typo in this file...?  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","KazuCocoa","2022-01-28T02:40:15Z","2022-01-30T01:38:10Z"
"","10494","[py] Removed desired capabilities from handshake code","### Description  Fixes #10264 ### Motivation and Context  Python still sends both capabilities and desired capabilities to the driver, which can result in an OSS session that isn't properly supported any more.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","SinghHrmn","2022-03-30T09:40:35Z","2022-04-06T13:54:38Z"
"","10702","[IEDriver] fix Edge IE mode issue that sometimes cannot get the handle of a newly opened window","### Description  Fix Edge IE mode issue that sometimes cannot  get the handle of the newly opened window.  ### Motivation and Context  This is a fix for an issue of Edge IE mode that sometimes cannot get the handle of a newly opened window. Resolve #8868 Resolve MicrosoftEdge/EdgeWebDriver#19  ### Reproduction steps Attached zip file contains test programs to reproduce of the issue. [iedrivertest.zip](https://github.com/SeleniumHQ/selenium/files/8784854/iedrivertest.zip)  1.  Install node_modules `npm install` 2. Run server. `node server.js` 3. Run tests several times. `node test.js --edge-path ""path\to\msedge.exe"" --driver-path ""path\to\IEDriverServer.exe""` `node test2.js --edge-path ""path\to\msedge.exe"" --driver-path ""path\to\IEDriverServer.exe""` `node test3.js --edge-path ""path\to\msedge.exe"" --driver-path ""path\to\IEDriverServer.exe""` `node test4.js --edge-path ""path\to\msedge.exe"" --driver-path ""path\to\IEDriverServer.exe""` `node test5.js --edge-path ""path\to\msedge.exe"" --driver-path ""path\to\IEDriverServer.exe""`  #### Contents of test programs 1. test.js Open one child window and check that can get window handle of the child window. 2. test2.js Open four child window and check that can get window handles of all of the child windows. 3. test3.js Open four child tabs in the same window that contains the parent tab and check that can get window handles of all of the child tabs. 4. test4.js Open child window and its grandchild window at same time and close child window immediately, then check that can get window handle of grandchild windows. 5. test5.js Open child window and its grandchild window at same time, then check that can get window handle of child and grandchild windows.  ### Unresolved problem Open child and its grandchild tabs in the same window that contains the parent tab at same time, IEDriver cannot get window handle of the child tab. `node test6.js --edge-path ""path\to\msedge.exe"" --driver-path ""path\to\IEDriverServer.exe""`   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","yusuke-noda","2022-05-27T07:46:42Z","2022-07-14T18:27:28Z"
"","9944","actually do not camel case fx prefs","### Description  firefox preferences must not be camelized. this was intended in eb2d0176 but failed simply due to a type mismatch.  ### Motivation and Context  i wanted to set `intl.accepted_languages` but in a firefox instance it ended up as `intl.acceptedLanguages` and thus having no effect.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.  all tests in the scope of my changes are passing. many others don't. i consider them being wip.  before this pr:  ``` bundle exec rspec spec/unit/selenium/webdriver/firefox/options_spec.rb:153 Run options: include {:locations=>{""./spec/unit/selenium/webdriver/firefox/options_spec.rb""=>[153]}} F  Failures:    1) Selenium::WebDriver::Firefox::Options#add_preference does not camelize preferences      Failure/Error: expect(prefs).to eq(expected)         expected: {""intl.accepted_languages""=>""en-US""}             got: {""intl.acceptedLanguages""=>""en-US""}         (compared using ==)         Diff:        @@ -1 +1 @@        -""intl.accepted_languages"" => ""en-US"",        +""intl.acceptedLanguages"" => ""en-US"",       # ./spec/unit/selenium/webdriver/firefox/options_spec.rb:158:in `block (3 levels) in '  Finished in 0.01195 seconds (files took 0.40692 seconds to load) 1 example, 1 failure  Failed examples:  rspec ./spec/unit/selenium/webdriver/firefox/options_spec.rb:153 # Selenium::WebDriver::Firefox::Options#add_preference does not camelize preferences ```","closed","","glaszig","2021-10-16T21:49:39Z","2021-10-20T02:59:48Z"
"","9930","[java] Fix reference to removed withTagName method in RelativeLocator","### Description  Changed example used in doc comments for RelativeLocator to reflect the replacement of withTagName() with with(tagName()).  ### Motivation and Context  Have JavaDoc give valid code example.  ### Types of changes  - [x] Doc change  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","coty","2021-10-14T19:20:51Z","2021-10-18T16:18:27Z"
"","10060","[py] Fix return type hint in get_screenshot_as_png","### Description  Change return type hint of `get_screenshot_as_png` from `str` to `bytes`  ### Motivation and Context  `get_screenshot_as_png` returns a `bytes` object but the return type hint is set to `str`. This causes IDEs to throw warning when using this function with `io.BytesIO` (or any other function that expects bytes object)  Example Warning: `Expected type 'bytes', got 'str' instead`  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","roushikk","2021-11-19T07:38:12Z","2021-11-19T23:03:32Z"
"","10385","Py safari options","### Description  Adds same functionality as the the safari options in the [java repository](https://github.com/SeleniumHQ/selenium/blob/trunk/java/src/org/openqa/selenium/safari/SafariOptions.java). Enables the user to set safari options: - Set Safari browser name to technology preview - Set Automatic Inspection - Set Automatic Profiling   ### Motivation and Context  Python is the only language not to have a Safari Options class. Closes #10267   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x ] My change requires a change to the documentation. - [ x] I have updated the documentation accordingly. - [ x] I have added tests to cover my changes. - [ x] All new and existing tests passed.","closed","","MWschutte","2022-02-21T20:01:31Z","2022-05-22T16:34:20Z"
"","10236","Add explicit instructions for local Python installation to README","### Description  Adds instructions on how to locally install a build of the Python bindings.  ### Motivation and Context  I want to use a modified version of Selenium locally for a project. I made my changes and followed the build instructions, looked in `py/`, and saw a `setup.py`, so figured I could just `pip install py/`. Unfortunately, that resulted in an error during import that `getAttribute.js` could not be found. Installing the `.whl` seems to work fine though, so I'm assuming this is the correct way to do it.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed. [I haven't checked; I'm assuming there aren't tests for the README.]","closed","","mrahtz","2022-01-09T19:05:04Z","2022-01-10T12:53:10Z"
"","10503","New implementation of one shot nodes","### Description  Adding a config to the distributor to automatically drain a node after it has gotten it's first session.  The existing one shot node functionality (OneShotNode) has not been maintained. This is understandable as it's repeating instead of reusing the functionality of LocalNode but isn't used by many.  After this PR is accepted I intend to make a follow up PR cleaning away OneShotNode.  ### Motivation and Context  As the old OneShotNode this is mainly meant to be used when deploying to Kubernetes. See the discussion in #9845.  This PR kind of fixes #docker-selenium/1514, though the configuration would be different now.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","msvticket","2022-04-01T11:37:06Z","2022-04-07T14:11:32Z"
"","10216","node: Add support for installing unpacked addons at runtime in Firefox webdriver","### Description  Add support for installing an extension from a directory in the Node.js Firefox WebDriver client.  The implementation checks if the addon path provided is a directory and, if so, creates a zip archive of the directory contents to send to geckodriver.  ### Motivation and Context  This implements #8357 for node.  The same approach can be used for other language bindings.  The approach of creating an ad-hoc zip archive for a local directory was suggested here: https://github.com/SeleniumHQ/selenium/pull/9494#issuecomment-1001597660  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","nickgaya","2022-01-04T04:16:11Z","2022-01-24T13:34:11Z"
"","10696","[java] Add support for BiDi log event","### Description  Add log.entryAdded support for BiDi. Related to https://github.com/SeleniumHQ/selenium/issues/10335  ### Motivation and Context  BiDi supports log events to allow listening to different types of logs. The changes allow subscribing to such logs and mapping the result.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2022-05-26T06:23:08Z","2022-06-13T09:59:32Z"
"","10643","Add __all__ to __init__.py to make imports public","### Description  Add __all__ variable to webdriver.__init__.py with a reference to all imports to make them public.  ### Motivation and Context  `pyright` throws a ""private import"" error when using e.g. `webdriver.Chrome` From the `pyright` docs [here](https://github.com/microsoft/pyright/blob/main/docs/typed-libraries.md): > Imported symbols are considered private by default. If they use the “import A as A” (a redundant module alias), “from X import A as A” (a redundant symbol alias), or “from . import A” forms, symbol “A” is not private unless the name begins with an underscore. If a file __init__.py uses the form “from .A import X”, symbol “A” is not private unless the name begins with an underscore (but “X” is still private). If a wildcard import (of the form “from X import *”) is used, all symbols referenced by the wildcard are not private. A module can expose an __all__ symbol at the module level that provides a list of names that are considered part of the interface. The __all__ symbol indicates which symbols are included in a wildcard import. All symbols included in the __all__ list are considered public even if the other rules above would otherwise indicate that they were private. For example, this allows symbols whose names begin with an underscore to be included in the interface.  Redundant aliases seem to only work if the name isn't being changed. I'm no type expert, so there might be a ""cleaner"" solution, but this works.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","hudcap","2022-05-13T16:30:19Z","2022-05-23T22:05:36Z"
"","10918","[ruby] fix: setting w3c: false throws error","### Description  `w3c: false` does not work in ruby binding. Setting this key as false will throw an error.   ### Motivation and Context  https://github.com/SeleniumHQ/selenium/issues/10448#issuecomment-1149870933   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","TamsilAmani","2022-08-03T12:18:06Z","2022-08-03T20:13:31Z"
"","10414","[rb] Fix WebSockets in DevTools","### Description  [This commit](https://github.com/SeleniumHQ/selenium/commit/e89eb141aec829af773c7226f8b1c20627146609#diff-9a9f51fd500d2166ddc3552382da74e9afbbc2d7c36afeb6628a7a9c04f79952) removed the line that I've re-added. I'm not sure why. But:  ### Motivation and Context Without that line, at least using JRuby, I get:  ``` NameError:        uninitialized constant Selenium::WebDriver::DevTools::WebSocket      # ./features/build/.gems/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/devtools.rb:179:in `ws'      # ./features/build/.gems/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/devtools.rb:173:in `socket'      # ./features/build/.gems/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/devtools.rb:95:in `process_handshake'      # ./features/build/.gems/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/devtools.rb:40:in `initialize'      # ./features/build/.gems/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/common/driver_extensions/has_devtools.rb:36:in `devtools'      # ./features/build/.gems/gems/selenium-webdriver-4.1.0/lib/selenium/webdriver/common/driver_extensions/has_network_interception.rb:64:in `intercept' ```  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.  P.S. This breakage happened after I updated `selenium-devtools` from `0.98.0` to `0.99.0` (which included this change).","closed","","boris-petrov","2022-03-06T20:33:28Z","2022-03-09T07:19:38Z"
"","10480","[rb] Add process status check to the stop_process method too","### Description  [This commit](https://github.com/SeleniumHQ/selenium/commit/e3e492af0c9d9c99ce31b9dc036dbf75327e6f30) removed the `return if process_exited?` from the beginning of the `stop_process` method. However, since [there is `ensure` at the method level in the `stop` method](https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver/common/service_manager.rb#L69-L71), the `stop_process` method is called even after [the process exit checking in the `stop` method](https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver/common/service_manager.rb#L63). To prevent `NoMethodError`, I would like to add `return if process_exited?` to the beginning of the `stop_process` method.  simple example: ```ruby class Foo   def bar     if @process.nil?       puts 'A'       return     end      puts 'B'   ensure     puts 'C'     @process.stop   end end  f = Foo.new f.bar ```  ```sh $ ruby foo.rb A C foo.rb:11:in `bar': undefined method `stop' for nil:NilClass (NoMethodError)      @process.stop             ^^^^^         from foo.rb:16:in `' ```  ### Motivation and Context   Same as https://github.com/SeleniumHQ/selenium/pull/10015. This change is necessary to exit without raising `NoMethodError` if there is a problem creating a child process.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-rb,","yoshoku","2022-03-26T02:40:37Z","2022-04-14T03:34:08Z"
"","10653","[py] fix: SecurityError: Invalid Domain problem","### Description  - Fixed the Invalid Domain error while executing JS in Virtual Authenticator tests. - Added more tests for Virtual Authenticator. - Updated SimpleWebserver to use 'localhost' when serving a page when `localhost` check is `True`.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-py,","SinghHrmn","2022-05-16T17:50:38Z","2022-05-20T12:07:22Z"
"","10273","Elaborate find_element deprecation message","### Description   This PR gives more detailed deprecation information to the methods of `find_element_by_*` .  ### Motivation and Context  Though a user who uses `find_element_by_*` may not know the grammar of `find_element()`, currently, the warnings don't suggest the usage of it. So the user has to look up the documentation, and it would be a little annoying. If the deprecation warnings gave enough information, it would save users' time.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","europeanplaice","2022-01-21T14:42:33Z","2022-01-24T21:54:21Z"
"","10015","[rb] Add check of process existence before polling for exit of process","### Description   In the `stop` method of `Selenium::WebDriver::ServiceManager`, I would like to add a check if the process exists before calling the `poll_for_exit` method of the instance variable `@process`.  ### Motivation and Context   The simplest error reproduction is as follows:  ```ruby $ bundle exec irb irb(main):001:0> require 'selenium-webdriver' irb(main):002:0> service = Selenium::WebDriver::Service.chrome irb(main):003:0> service_manager = Selenium::WebDriver::ServiceManager.new(service) irb(main):004:0> service_manager.stop /Users/yoshoku/selenium/rb/lib/selenium/webdriver/common/service_manager.rb:65:in `stop':  undefined method `poll_for_exit' for nil:NilClass (NoMethodError) ... ```  I am using selenium-webdriver with capybara and parallel_tests, and sometimes I get this error.  In the `stop_server` private method of `Selenium::WebDriver::ServiceManager`, the existence of the process is checked at the beginning. I think that the same check is also necessary before calling the `poll_for_exit` method.   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-rb,","yoshoku","2021-11-07T10:55:06Z","2021-11-26T23:07:14Z"
"","10510","Fixing options handling for print command.","### Description   ### Motivation and Context   Prior to this change, when executing e.g. a `RemoteWebDriver#print` command, the print options passed to the method were passed through to the chromedriver instance, but serialized in a wrong format, rendering them uneffective. The issues were:    - Options were wrapped in an `options` key when chromedriver expected     them to be at the top-level of the parameters dict (see [here](https://github.com/chromium/chromium/blob/main/chrome/test/chromedriver/window_commands.cc#L2246))   - Page size options were put into a `pageSize` key, when chromedriver     expected it to be a `page` key (see [here](https://github.com/chromium/chromium/blob/main/chrome/test/chromedriver/window_commands.cc#L539))   - The `Orientation` enum was serialized incorrectly (uppercase), while chromedriver is expecting the values to be all lowercase (see [here](https://github.com/chromium/chromium/blob/main/chrome/test/chromedriver/window_commands.cc#L466-L467))  Also, using the `PageSize` class supplied by selenium was not possible, due to defaulting to constant page sizes, not allowing the consumer to override them. This was addressed by adding a second constructor allowing to specify height/width.  All tests were performed against a v96 chromedriver.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","dennisoelkers","2022-04-05T11:32:01Z","2022-04-08T07:23:24Z"
"","10232","Use class's class loader when looking up `HttpClient` factory.","### Description   ### Motivation and Context   Prior to this change, `HttpClient.Factory.create` was using `ServiceLoader.load` without passing in a class loader explicitly. In this case, `ServiceLoader` is using the current thread's default class loader to resolve the specified class name's service.  In projects with a plugin system, this can lead to problems, when selenium dependencies are part of a jar file that is not on the class path the application was started with. For these projects, using selenium results in a `ClassNotFoundException` when the first remote call is performed.  To fix this, using the class loader of the factory interface would be beneficial. In projects without a plugin architecture, it will mostly be identical with the class loader of the current thread, in other cases there is very high chance that the service which is to be loaded can be resolved through the class loader of `HttpClient.Factory`.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","dennisoelkers","2022-01-07T13:38:07Z","2022-01-10T08:50:28Z"
"","10509","Use class' class loader when looking up CDP implementations.","### Description   ### Motivation and Context   Prior to this change, `CdpVersionFinder` was using `ServiceLoader.load` without passing in a class loader explicitly to find CDP implementations. In this case, `ServiceLoader` is using the current thread's default class loader to resolve the specified class name's service.  In projects with a plugin system, this can lead to problems, when selenium dependencies are part of a jar file that is not on the class path the application was started with. For these projects, using selenium results in a `ClassNotFoundException` when connecting to a remote webdriver.  To fix this, using the class loader of the class itself would be beneficial. In projects without a plugin architecture, it will mostly be identical with the class loader of the current thread, in other cases there is a very high chance that the service which is to be loaded can be resolved through the class loader of `CdpVersionFinder`.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","dennisoelkers","2022-04-05T11:04:21Z","2022-04-07T06:47:59Z"
"","9918","Ability to locate elements using accessibility values","## 🚀 Feature Proposal  With selenium 4, we should be able to locate elements using their accessibiliy attributes(ARIA) https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA mainly accessibility NAME  ## Motivation  I was trying to find the search box with the keyword search in google. After trying it in multiple ways, with relative locators etc I was not able to figure out a way to locate it using the keyword search eventhough it is available (refer to the below screenshot)   ![google_accessibility](https://user-images.githubusercontent.com/4618356/137270936-ab2ad5d8-b662-4900-aaa1-67f488370c14.png)   ## Example Something like this ```python from selenium import webdriver from selenium.webdriver.support.relative_locator import locate_with search_element = driver.find_elements(locate_with(By.ACCESSIBILITY, 'Search'))  ```","closed","G-w3c,","codeslord","2021-10-14T07:29:55Z","2022-01-26T00:10:15Z"
"","9922",".mouseButtonClick('right') not working properly in nightwatch testing","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","dhanashrisakharkar","2021-10-14T11:49:30Z","2021-11-14T00:06:45Z"
"","9924",".NET / C# - Selenium 4.0 - Invalid cookie configuration: SameSite=None must be Secure","## 💥 Regression Report  Calling 'GetCookieNamed' in Selenium 4.0 results in an exception.  ## Last working Selenium version  Worked up to version: 3.141  Stopped working in version: 4.0  ## To Reproduce  Detailed steps to reproduce the behavior:  Call `GetCookieNamed(someCookieName)`  ```csharp OpenQA.Selenium.WebDriverException: Unexpected problem getting cookies ---> System.ArgumentException: Invalid cookie configuration: SameSite=None must be Secure    at OpenQA.Selenium.Cookie..ctor(String name, String value, String domain, String path, Nullable`1 expiry, Boolean secure, Boolean isHttpOnly, String sameSite)    at OpenQA.Selenium.Internal.ReturnedCookie..ctor(String name, String value, String domain, String path, Nullable`1 expiry, Boolean isSecure, Boolean isHttpOnly, String sameSite)    at OpenQA.Selenium.Cookie.FromDictionary(Dictionary`2 rawCookie)    at OpenQA.Selenium.CookieJar.GetAllCookies()    --- End of inner exception stack trace ---    at OpenQA.Selenium.CookieJar.GetAllCookies()    at OpenQA.Selenium.CookieJar.get_AllCookies()    at OpenQA.Selenium.CookieJar.GetCookieNamed(String name) ```  ## Expected behavior  That the cookie with the name specified is returned.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 93.0 (64-bit) Browser Driver version: Selenium.WebDriver.GeckoDriver  0.30.0 Language Bindings version: .NET 4.0","closed","C-dotnet,","thomhurst","2021-10-14T12:49:00Z","2021-11-25T00:06:40Z"
"","9916","C-nodejs 4.0.0 Using submit on a WebElement causes error Cannot call non W3C standard command while in W3C mode","## 🐛 Bug Report  When trying to use the submit method on a web element, the `Cannot call non W3C standard command while in W3C mode` exception is thrown.   https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_WebElement.html#submit  ## To Reproduce  ```js const el = await page.findElement(By.css('form')); await el.submit(); ```  ## Expected behavior  This should not throw an exception.  ## Test script or set of commands reproducing this issue  ## Environment  OS: macOS 11.6 Browser:  Browser version:Chrome 94 Browser Driver version: ChromeDriver 94 Language Bindings version: nodejs 4.0.0  Selenium Grid version (if applicable):","closed","C-nodejs,","doberkofler","2021-10-13T21:37:32Z","2021-11-20T00:06:30Z"
"","9913","Selenium 4.0.0 Java - java.lang.ClassNotFoundException: io.netty.handler.codec.compression.Brotli","## 🐛 Bug Report  When I try launching a local ChromeDriver instance I get the mentioned exception  ## To Reproduce  Detailed steps to reproduce the behavior:  ``` private static ThreadLocal driver = new ThreadLocal(); private static ChromeOptions chOptions; chOptions = new ChromeOptions(); WebDriverManager.chromedriver().setup(); driver.set(new ChromeDriver(chOptions)); ```  ## Expected behavior  Chrome Browser should open  ## Environment  OS: Windows 11 Browser: Chrome Browser version: 94.0.4606.81 Browser Driver version: ChromeDriver 94.0.4606.61 Language Bindings version: Java 4.0.0  ## Issue workaround  Adding this dependency to my pom.xml bypassed this issue as it contains the missing class ```                               io.netty             netty-handler             4.1.69.Final          ```  ## Actual Stacktrace  ``` org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.0.0', revision: '3a21814679' System info: host: 'DESKTOP-16RT7DI', ip: '192.168.1.110', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--start-maximized, --enable-automation, --no-sandbox, --disable-infobars, --disable-dev-shm-usage, --disable-browser-side-navi..., --disable-gpu], extensions: [], prefs: {download.default_directory: C:\Users\Mohab\IdeaProjects..., download.prompt_for_download: false, profile.default_content_settings.popups: 0}, w3c: false}, goog:loggingPrefs: org.openqa.selenium.logging..., pageLoadStrategy: normal, platformName: windows}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--start-maximized, --enable-automation, --no-sandbox, --disable-infobars, --disable-dev-shm-usage, --disable-browser-side-navi..., --disable-gpu], extensions: [], prefs: {download.default_directory: C:\Users\Mohab\IdeaProjects..., download.prompt_for_download: false, profile.default_content_settings.popups: 0}, w3c: false}, loggingPrefs: org.openqa.selenium.logging..., pageLoadStrategy: normal, platformName: WINDOWS}}] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:246) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:168) 	at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:108) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:104) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:91) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:80) 	at com.shaft.driver.DriverFactoryHelper.createNewLocalDriverInstanceForChrome(DriverFactoryHelper.java:522) 	at com.shaft.driver.DriverFactoryHelper.createNewLocalDriverInstance(DriverFactoryHelper.java:563) 	... 30 more Caused by: java.lang.RuntimeException: NettyHttpHandler request execution error 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:83) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51) 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:119) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:139) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:559) 	... 38 more Caused by: java.util.concurrent.ExecutionException: java.lang.ClassNotFoundException: io.netty.handler.codec.compression.Brotli 	at java.base/java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:396) 	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2096) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:66) 	... 51 more Caused by: java.lang.ClassNotFoundException: io.netty.handler.codec.compression.Brotli 	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) 	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) 	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) 	at io.netty.handler.codec.http.HttpContentDecompressor.newContentDecoder(HttpContentDecompressor.java:70) 	at io.netty.handler.codec.http.HttpContentDecoder.decode(HttpContentDecoder.java:100) 	at io.netty.handler.codec.http.HttpContentDecoder.decode(HttpContentDecoder.java:47) 	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321) 	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:308) 	at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:422) 	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) 	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) 	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) 	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) 	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:833) ```","closed","C-java,","MohabMohie","2021-10-13T18:50:46Z","2021-11-14T00:06:41Z"
"","9919","[py] [doc] Python documentation not up to date","## 🐛 Bug Report  The documentation under https://selenium-python.readthedocs.io is not up to date with the 4.0.0 release  Update: Link to github project of the unofficial documentation: https://github.com/baijum/selenium-python Update: Link to the official documentation: https://www.selenium.dev/selenium/docs/api/py","closed","C-docs,","PhilippSelenium","2021-10-14T08:24:47Z","2021-11-21T00:06:57Z"
"","9920","4.0.0 release does not support switch_to_frame","## 🐛 Bug Report  Switching to frames no longer works in this release.  ## To Reproduce  This can be done on any site using iframes. The moment the code tries to switch to an iframe, you get the `AttributeError: 'WebDriver' object has no attribute 'switch_to_frame'` error.  Switching back to version 3.141.0 fixes the issue.  ## Expected behavior  Switching to frames should still work.  ## Test script or set of commands reproducing this issue  n/a  ## Environment  OS: Ubuntu 18.04 Browser: Chromium Browser version: 93.0.4577.63 Browser Driver version: ChromeDriver 93.0.4577.63 Language Bindings version: Python 3.7.4","closed","C-py,","bnx05","2021-10-14T08:31:09Z","2021-11-14T00:06:42Z"
"","9917","4.0.0 release is missing sdist tarball on pypi","## 🐛 Bug Report  It seems that the 4.0.0 release on pypi includes only wheels but missed the .tar.gz archive needed to build from source.  ## To Reproduce  Visit https://pypi.org/project/selenium/#files  ## Expected behavior  .tar.gz archive being present  ## Test script or set of commands reproducing this issue  n/a  ## Environment  OS: Gentoo Linux Browser: n/a Browser version: n/a Browser Driver version: n/a Language Bindings version: Python (any) Selenium Grid version (if applicable): n/a","open","C-build,","mgorny","2021-10-14T06:12:38Z","2022-07-05T12:38:31Z"
"","9925","Python Selenium 4.0.0 - Does not respect no_proxy variable but respects http_proxy and https_proxy","## 🐛 Bug Report  I upgraded python selenium 4.0.0 and when the tests run the request to the webdriver on localhost is sent to the proxy specified in environment variable https_proxy. The no_proxy variable is pecified to exclude `localhost`.  ## To Reproduce    1. Define proxy environment variables in your shell  Run selenium tests inside the shell. Requests to the webdriver on localhost is sent to the proxy even though no_proxy is defined.  When the reqeuest to localhost went to the proxy it was caught in the proxy protection solution and returned an erorr page that localhost is not categorized. :  ``` Blocked Category: none Internet Address: http://localhost/session  ``` The request shouldn't have been sent to the proxy in the first place.  ## Expected behavior Both the values in http(s)_proxy and no_proxy should be respected.  This works in python selenium 3.141.0  ## Test script or set of commands reproducing this issue  Define environment variables in the shell: ```sh export https_proxy=http:\\server:port export http_proxy=http:\\server:port export no_proxy=localhost ```  Run your selenium test: ```sh python my_test.py ```   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 94.0.4606.71 Browser Driver version: ChromeDriver 94.0.4606.61 Language Bindings version: python selenium 4.0.0","closed","C-py,","supersmo","2021-10-14T14:14:44Z","2021-11-22T00:06:46Z"
"","9910","Download logs using Getlog() with RemoteWebdriver is not working in .NET","## 🐛 Bug Report  I tried to download browser logs using driver's GetLogs() method with RemoteWebDriver(Selenium 4 RC1) which connect to a locally running version of Chrome browser. I couldn't get any browser logs. But instead of using Remote Webdriver if I use normal driver, I am getting required logs.  How to download browser logs using driver's Getlog() with RemoteWebdriver in .NET?  ## To Reproduce ```c# private static void RemoteWebdriver_GetBrowserLogs() {     ChromeOptions options = new ChromeOptions();     options.AddArguments(""--no-sandbox"");     RemoteWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:9515""), options);     driver.Manage().Window.Maximize();     driver.Navigate().GoToUrl(""******************"");     Thread.Sleep(5000);//Wait     var logEntries = driver.Manage().Logs.GetLog(""browser""); // Returns nothing with remote webdriver.     foreach (var entry in logEntries)     {         Console.WriteLine(""\n "" + entry.ToString());     } } ```  ## Expected behavior  Browser logs should be downloaded with RemoteWebdriver.   ## Test script or set of commands reproducing this issue  See above script to reproduce it.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: v93 Browser Driver version: chromedriver v93 Language Bindings version: Selenium 4 RC1 - .NET(C#) Selenium Grid version (if applicable): Not Applicable","closed","C-dotnet,","SKumar-777","2021-10-13T13:04:10Z","2022-01-26T00:10:03Z"
"","9907","FirefoxDriver crashes in toExecutor() method","## 🐛 Bug Report  I got the following error when executing my project from the command line whereas it works properly in the IDE (IntelliJ).  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Build info: version: '4.0.0-rc-3', revision: '5fe1af712f' System info: host: 'xxxx', ip: '1.2.3.4', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.0-kali9-amd64', java.version: '11.0.12' Driver info: driver.version: FirefoxDriver 	at java.base/java.util.Optional.orElseThrow(Optional.java:408) 	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:230) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186) 	at company.GeckodriverTest.createFirefoxWebDriver(GeckodriverTest.java:53) 	at company.GeckodriverTest.run(GeckodriverTest.java:22) 	at company.GeckodriverTest.main(GeckodriverTest.java:17)  ## To Reproduce I created a simple maven project to demonstrate the problem (see Java code and pom.xml below).  Project   |   |_src/main/java/company/GeckodriverTest.java   |   |_webdriver/geckodriver   |   |_target/artifact-1.0.0-SNAPSHOT.jar  **GeckodriverTest.java**  ``` package company;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxDriverLogLevel; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.support.ui.ExpectedCondition; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait;  public class GeckodriverTest {     private WebDriver driver;      public static void main(String[] args) {         new GeckodriverTest().run();     }      private void run() {         driver = createFirefoxWebDriver();         driver.get(""https://duckduckgo.com"");         set(By.id(""search_form_input_homepage""), ""selenium"");         click(By.id(""search_button_homepage""));         driver.close();     }      private void set(By by, String content) {         this.findElement(by).sendKeys(new CharSequence[]{content});     }      private void click(By by) {         this.waitForElement(ExpectedConditions.elementToBeClickable(by));         this.findElement(by).click();     }      private WebElement findElement(By by) {         this.waitForElement(ExpectedConditions.presenceOfElementLocated(by));         return driver.findElement(by);     }      private void waitForElement(ExpectedCondition cond) {         (new WebDriverWait(driver, 30L)).until(cond);     }      private WebDriver createFirefoxWebDriver() {         System.setProperty(""webdriver.gecko.driver"", ""./webdriver/geckodriver"");         System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, ""./gecko.log"");         FirefoxOptions options = new FirefoxOptions();         options.setHeadless(false);         options.setLogLevel(FirefoxDriverLogLevel.TRACE);         return new FirefoxDriver(options);     } } ```  **pom.xml**  ```       4.0.0      company     artifact     1.0.0-SNAPSHOT               UTF-8         UTF-8         4.0.0-rc-3                                                  org.apache.maven.plugins                 maven-compiler-plugin                 3.8.0                                      11                     11                                                             org.apache.maven.plugins                 maven-assembly-plugin                                                                jar                         package                                                      single                                                                                                                                                     company.GeckodriverTest                                                                                           false                                                              jar-with-dependencies                                                                                                                                                    org.seleniumhq.selenium             selenium-java             ${selenium.version}                               org.seleniumhq.selenium             selenium-api             ${selenium.version}                               org.seleniumhq.selenium             selenium-remote-driver             ${selenium.version}                               org.seleniumhq.selenium             selenium-firefox-driver             ${selenium.version}                               org.seleniumhq.selenium             selenium-support             ${selenium.version}                               org.apache.commons             commons-exec             1.3                               com.google.guava             guava             31.0.1-jre                               com.google.code.gson             gson             2.8.8                               org.apache.httpcomponents             httpclient             4.5.13                               org.apache.httpcomponents             httpcore             4.4.14                               commons-logging             commons-logging             1.2                               org.apache.logging.log4j             log4j-core             2.14.1                ```    ## Expected behavior I expect that the Firefox browser is launched, as when executed from the IDE.   ## Test script or set of commands reproducing this issue Run java -jar target/artifact-1.0.0-SNAPSHOT.jar   ## Environment  OS: Linux  Browser: Firefox Browser version: 78.14.0esr (64 bits) Browser Driver version: 0.30.0 Language Bindings version: Java 11.0.12","closed","","jlucbt","2021-10-13T07:37:51Z","2021-11-18T00:06:40Z"
"","9904","Not able to use Relative locators after Selenium '4.0.0-beta-2'","## 🐛 Bug Report  I am able to invoke Relative locators till Selenium '4.0.0-beta-2'. If I use Selenium version '4.0.0-beta-3' I am not able to use relative locator. Not able to use these relative locators in the test above() , below(), near(). toLeftOf(), toRightOf().    ## To Reproduce 1. Create Gradle project  2. Add dependency in build.gradle `implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.0.0-beta-3'` 3. Import relative locator  `import static org.openqa.selenium.support.locators.RelativeLocator.withTagName;` 4. Check the behavior  Detailed steps to reproduce the behavior:  ## Expected behavior  As a user I should be able to use Relative locator smoothly.   ## Test script or set of commands reproducing this issue Below code snippet is from Selenium '4.0.0-beta-2'   `import io.github.bonigarcia.wdm.WebDriverManager; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.testng.annotations.Test;  import static org.openqa.selenium.support.locators.RelativeLocator.withTagName; public class AutomationWithSelenium4 {     @Test     public static void relativeLocator() {         WebDriver driver;         WebDriverManager.chromedriver().setup();         driver = new ChromeDriver();         driver.get(""https://www.google.com/"");         driver.findElement(By.name(""q"")).click();         driver.findElement(By.name(""q"")).sendKeys(""Selenium"");         driver.findElement(withTagName(""a"").toRightOf(By.linkText(""Gmail""))).click();         System.out.println(""clicked"");          driver.quit();      } } ` This is working absolutely fine till Selenium '4.0.0-beta-2' but if I use Selenium '4.0.0-beta-3' then this script will fail and not able to use relative locators by any chance.   OS:  Windows 10 Browser: Chrome (NA) Browser version: NA Browser Driver version: NA Language Bindings version:  Selenium 4.0.0-beta-3+ Selenium Grid version (if applicable): NA","closed","","monilj","2021-10-12T17:31:19Z","2021-11-13T00:06:30Z"
"","9915","Error building dotnet project in Windows","## 🐛 Bug Report  Building the dotnet project in Windows returns an error.    ## To Reproduce    Detailed steps to reproduce the behavior:  I have tried to build it using two different ways:  1. Using Visual Studio 2019. After installing the dependencies, I'm able to build the `Webdriver` project, but when I try to build the project `Webdriver.Common.Tests` then I get some issues similar to the this one:  ```txt C:/users//_bazel_/io65vnbs/external/maven/BUILD:1737:8: Executing genrule @maven//:io_netty_netty_transport_native_epoll_4_1_67_Final_extension failed: (Exit 127): bash.exe failed: error executing command ``` 2. Using the command line. Running the command `bazel build dotnet/...` ```txt ERROR: C:/github/selenium/dotnet/src/webdriverbackedselenium/BUILD.bazel:227:11: in src attribute of nuget_push rule //dotnet/src/webdriverbackedselenium:publish: '//dotnet/src/webdriverbackedselenium:package' must produce a single file ERROR: C:/github/selenium/dotnet/src/webdriverbackedselenium/BUILD.bazel:227:11: Analysis of target '//dotnet/src/webdriverbackedselenium:publish' failed ERROR: file 'dotnet/test/common/bazelout/netcoreapp2.1/Newtonsoft.Json.dll' is generated by these conflicting actions: Label: //dotnet/test/common:edge, //dotnet/test/common:firefox RuleClass: nunit_test rule Configuration: aa07a07519e82af810774c182569ca55c645d883994ca9f38206e0a45c93967d Mnemonic: CopyFile Action key: 8e55144576d1ad53f03a8496f5eef0c6956cea29389c534297527ed5abb5881c, 1170696927e279935540456bb63d6023998c9e71393f04e77a136632e239f270 Progress message: Copying files PrimaryInput: File:[C:/users//_bazel_/io65vnbs/external/json.net[source]]lib/netstandard2.0/Newtonsoft.Json.dll PrimaryOutput: File:[[]bazel-out/x64_windows-fastbuild/bin]dotnet/test/common/bazelout/netcoreapp2.1/Newtonsoft.Json.dll Owner information: ConfiguredTargetKey{label=//dotnet/test/common:edge, config=BuildConfigurationValue.Key[aa07a07519e82af810774c182569ca55c645d883994ca9f38206e0a45c93967d]}, ConfiguredTargetKey{label=//dotnet/test/common:firefox, config=BuildConfigurationValue.Key[aa07a07519e82af810774c182569ca55c645d883994ca9f38206e0a45c93967d]} MandatoryInputs: Attempted action contains artifacts not in previous action (first 5):         dotnet/test/common/edge-copy-files.bat Previous action contains artifacts not in attempted action (first 5):         dotnet/test/common/firefox-copy-files.bat Outputs: are equal ERROR: com.google.devtools.build.lib.skyframe.ArtifactConflictFinder$ConflictException: com.google.devtools.build.lib.actions.MutableActionGraph$ActionConflictException: for dotnet/test/common/bazelout/netcoreapp2.1/Newtonsoft.Json.dll, previous action: action 'Copying files', attempted action: action 'Copying files' INFO: Elapsed time: 57.083s INFO: 0 processes. FAILED: Build did NOT complete successfully (360 packages loaded, 12877 targets configured) ```  Any idea what can be the issue?  ## Expected behavior  The project is built.  ## Test script or set of commands reproducing this issue  --- ## Environment  OS: Windows 10 Browser: --- Browser version: --- Browser Driver version: --- Language Bindings version: --- Selenium Grid version (if applicable): ---","closed","C-build,","sarvaje","2021-10-13T20:20:28Z","2021-12-19T00:07:51Z"
"","9905","Action failed to execute: java.io.IOException: ERROR: src/main/native/windows/process.cc(202): CreateProcessW","## Environment OS: Windows 10 selenium-selenium-4.0.0-rc-3 bazel 4.2.1 openjdk 12.0.2 2019-07-16 OpenJDK Runtime Environment (build 12.0.2+10) OpenJDK 64-Bit Server VM (build 12.0.2+10, mixed mode, sharing)  ```cmd PS C:\Users\Administrator\Desktop\selenium-selenium-4.0.0-rc-3> bazel build selenium-server-standalone Starting local Bazel server and connecting to it... INFO: Analyzed target //:selenium-server-standalone (1671 packages loaded, 66323 targets configured). INFO: Found 1 target... ERROR: C:/users/administrator/desktop/selenium-selenium-4.0.0-rc-3/java/src/org/openqa/selenium/BUILD.bazel:127:8: Executing genrule //java/src/org/openqa/selenium:manifest-entries failed: (Exit -1): bin failed: error executing command   cd C:/users/administrator/_bazel_administrator/d3c3azb5/execroot/selenium   SET PATH=C:\Ruby27-x64\bin;D:\Program Files\Python310\Scripts\;D:\Program Files\Python310\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;D:\phpstudy_pro\Extensions\php\php7.3.4nts;C:\Program Files (x86)\PuTTY\;C:\Program Files (x86)\NetSarang\Xshell 7\;C:\Program Files\TortoiseGit\bin;C:\Program Files\Git\cmd;C:\Program Files\Go\bin;D:\Program Files\jdk-12.0.2\bin;D:\Program Files\webdriver;D:\Program Files\msys64\usr\bin;D:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\Program Files\apache-maven-3.8.3\bin;D:\Program Files\apache-maven-3.8.3\bin;C:\Program Files (x86)\Yarn\bin\;D:\Program Files\bazel;C:\Users\Administrator\go\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Users\Administrator\AppData\Local\Yarn\bin     SET RUNFILES_MANIFEST_ONLY=1   D:/Program Files/msys64/usr/bin -c source external/bazel_tools/tools/genrule/genrule-setup.sh;       mkdir -p META-INF &&       echo Manifest-Version: 1.0 >META-INF/MANIFEST.MF &&       echo """" >>META-INF/MANIFEST.MF &&       echo """" >>META-INF/MANIFEST.MF &&       echo Name: Build-Info >>META-INF/MANIFEST.MF &&       echo Selenium-Version: 4.0.0 >>META-INF/MANIFEST.MF &&       echo Build-Revision: Unknown >>META-INF/MANIFEST.MF &&       echo Build-Time: Wed Jan 3 21:49:10 2007 +0000 >>META-INF/MANIFEST.MF &&       external/bazel_tools/tools/zip/zipper/zipper.exe c bazel-out/x64_windows-fastbuild/bin/java/src/org/openqa/selenium/manifest-entries.jar META-INF/MANIFEST.MF  Execution platform: @local_config_platform//:host Action failed to execute: java.io.IOException: ERROR: src/main/native/windows/process.cc(202): CreateProcessW(""D:\Program Files\msys64\usr\bin"" -c ""source external/bazel_tools/tools/genrule/genrule-setup.sh;       mkdir -p META-INF &&       echo Manifest-Version: 1.0 >META-INF/MANIFEST.MF &&       echo \""\"" >>META-INF/MANIFEST.MF &&       echo \""\"" >>META-INF/MANIFEST.MF &&       echo Name: Build-Info >>META-INF/MANIFEST.MF &&       echo Selenium-Version: 4.0.0 >>META-INF/MANIFEST.MF &&       echo Build-Revision: Unknown >>META-INF/MANIFEST.MF &&       echo Build-Time: Wed Jan 3 21:49:10 2007 +000(...)): 鎷掔粷璁块棶銆?  (error: 5) Target //java/src/org/openqa/selenium/grid:selenium_server_deploy.jar failed to build INFO: Elapsed time: 245.256s, Critical Path: 1.81s INFO: 6 processes: 6 internal. FAILED: Build did NOT complete successfully PS C:\Users\Administrator\Desktop\selenium-selenium-4.0.0-rc-3> ```","closed","","lyh-kyle","2021-10-13T05:57:30Z","2021-11-13T00:06:31Z"
"","10628","[py]: Initial implementation of linting in CI","# New Python Linting  Here's typically how this stuff will work for now, since we do not want `pre-commit` put in place; this utilises `tox` which currently handles our `flake8` stuff.  Main difference here is that both `black` and `isort` will _rewrite_ files which are violating our rules, these will be *unstaged* and require you to re-stage the fixed versions however the python code base will be uniform across the board which is vital, we will also have less merge conflicts with more keeping more to a single line (e.g imports etc).  This adds the following to a new `tox -e linting` recipe; formerly `tox -e flake8` (specifically).   - `flake8`.  - `isort` for consistent import management.  - `black` for a consistent code base throughout all contributors.  Github actions have been updated as part of this work and will fail just like `flake8` currently does when things are not uniform.  Tools are now configured via the `setup.cfg` file for everything, we should consider moving to a `pyproject.toml` in future; but we use `bazel` so do not follow a normal 'python packaging' setup.  I have been adding commit hashes that do sweeping linting changes to `.git-blame-ignore-revs` which can be used in conjunction with `git blame` for checking who was responsible for what changes originally without everything coming back as me with the original changes.  Typical working flow:   - Branch off `trunk` and do some work  - Prior to committing; `tox -e linting`  - If tox linting is not exiting `0` due to changes in `black` or `isort` those files will be *unstaged* and amended automatically, re-stage them and apply `tox -e linting` again until it is good (this is handled automatically by `pre-commit` which is why I was pushing this so strongly)  - `flake8` fixes will manually need resolved as they currently do  We are so far away from having a good `mypy` coverage but we can work towards it in future and consider adding it into the `tox -e linting` recipe.  **Negatives** (for now):   - Since we are allowing pushing without enforcing the stuff is good; remote side can error so `--no-verify` is not a valid work around, I don't really see that as a big 'negative' at all but something to be aware of.  # Outstanding tasks:  - Make CI apply it and not only `flake8`.  - Black requires a `toml`  - Should this only run against _staged_ files?  - Ensure `git blame` is not impacted by the initial rewriting commits.  - Update `CONTRIBUTING.md` to reflect the workflow for new contributors  - various other teething issues","closed","C-py,","symonk","2022-05-09T23:01:43Z","2022-06-11T08:58:35Z"
"","10820","[🚀 Feature]: Send delete to geckodriver on timeout","# Background As you may know, there is a long [standing issue with geckodriver](https://bugzilla.mozilla.org/show_bug.cgi?id=1430064) that _Firefox does not exit when geckodriver is terminated_. The issue does not surface when a normal session close/quit is performed. In this case, a DELETE is sent to geckodriver and Firefox is shut down. However, if a session times out, `OsProcess#destroy` kills geckodriver only with an OS signal. And due to the aforementioned issue, Firefox itself is not killed.  Ideally, the geckodriver bug would be fixed. However, since it is a 5 year old bug with resolution being postponed from release to release I don't think this will be resolved in geckodriver itself any time soon.  # Proposal The geckodriver codebase is not anywhere near my skillset, but the Selenium codebase is. If appreciated, I would like to contribute a fix such that `org.openqa.selenium.remote.service.DriverService#stop` is changed such that in the `GeckoDriverService` a ""hook"" is called to shut down geckodriver _and_ Firefox by sending a DELETE to the session.  Note that the `` already contains related code: ``` URL killUrl = new URL(url.toString() + ""/shutdown""); new UrlChecker().waitUntilUnavailable(3, SECONDS, killUrl); ``` However, geckodriver does not have such a `/shutdown` endpoint. An approach could be to factor this code out into a separate method and to override it in `GeckoDriverService` by sending an HTTP DELETE request to the `/{session-id}` endpoint.  # DELETE on stop as default behaviour? Note that I don't really know why this isn't default behaviour. `org.openqa.selenium.grid.node.ProtocolConvertingSession` already always forwards DELETE requests. But maybe there are other implementations that I'm not aware of though.","open","help wanted,","frensjan","2022-06-27T21:49:41Z","2022-07-06T05:30:25Z"
"","10355","switch ByClassName locator from to ""class name""","""class"" is not compatible with ios-driver, Refer to line 39 in https://github.com/ios-driver/ios-driver/blob/dev/server/src/main/java/org/uiautomation/ios/command/web/ToCSSSelectorConverter.java.  the ""class"" does not match any if condition here and will finally throw ""WebDriverException: NI , selector type class""  If switch ""class"" to ""class name"", it works for both ios-driver, chromium-driver and geckodirver.","closed","C-grid,","katrina95","2022-02-10T17:17:50Z","2022-03-04T16:19:10Z"
"","10756","[py]: Tweaks to `select.py` for pythonic naming and types","","closed","","symonk","2022-06-09T19:54:45Z","2022-06-09T20:08:52Z"