"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","6814","[py] Don't override browser options with desired capabilities by defa…","…ult in WebKitGTK  When desired_capabilities parameter is omitted in WebKitGTK driver, the default capabilities are used. If options are also passed they are updated from desired capabilities, overriding the passed options. The desired_capabalities parameter should default to None instead.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6814)","closed","C-py,","carlosgcampos","2019-01-04T12:09:33Z","2019-01-04T16:27:31Z"
"","5873","[java] Workaround for ChromeDriver not supporting dual stack environm…","…ent.  Utilize waitUntilAvailable() to probe the address family selected by ChromeDriver and proceed with whatever address is working.  See: https://bugs.chromium.org/p/chromedriver/issues/detail?id=779  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","hnsl","2018-05-09T09:20:51Z","2018-06-07T08:58:34Z"
"","6005","Fix .npmignore","You are currently shipping various redundant files such as tests, examples etc.  Please consider not shipping files that are non essential for the package to function.  Prime candidates are `test` `examples`, `lib/test`.","closed","C-nodejs,","SimonSchick","2018-06-08T13:47:22Z","2021-09-05T08:10:38Z"
"","6703","Ensure traces are injected and read to and from HTTP calls.","Without this, the traces only really make sense in the standalone mode.","closed","C-infra,","shs96c","2018-11-29T08:21:24Z","2021-09-05T09:02:45Z"
"","6810","Is there an alternative to using window().setSize in Selenium?","With latest Chrome Browser update, our UI tests for mobile browsers are failing on Chrome browser for windows.  I have been using this: driver.manage().window().setSize(dimension);  They are failing as UI elements do not match the expected on minimum chrome browser width.  But the site just loads fine on actual mobile devices on chrome browser.  Is there an alternative available in selenium which overrides the default minimum browser width set by chrome browser.","closed","","ghost","2019-01-03T16:20:20Z","2021-09-05T10:20:37Z"
"","6305","[Grid] Remove unused client timeout logic","With commit d06e54aec6c41ac7f3503c087472690961cd9873, the browserTimeout logic is no longer used when creating the http client. This removes that logic since it's unused.  No functional changes should take place with this change - it just makes the code clearer to follow (I came across this when trying to find what determined the http client timeout and it distracted me).  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","dylanlive","2018-08-19T01:36:00Z","2019-05-08T18:05:41Z"
"","5982","Remove package_data and data_files options from setup.py","With `include_package_data` option set to `True` in `setup.py`, package data that is specified in MANIFEST.in is installed into the target directory when installing selenium. This means that we don't need to specify `package_data` and `data_files` in setup.py too. With the options set as before, files were included twice in wheel distributions (once in their original place and once in the "".data"" directory) and that triggered a bug that caused setuptools to fail to install the wheel distribution of selenium.  I verified that running `python setup.py bdist_wheel` and `python setup.py sdist` create distributions with the data files inside and that the data files are installed when installing the created distributions.  Fixes issue #5907  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","wiggin15","2018-06-03T14:18:05Z","2018-06-26T12:42:17Z"
"","6576","SendKeys not entering text on textarea fields.  However, it works fine for input tag fields.","Windows 10 Selenium 3.4 IEDriver 3.4 64x - not entering text on textarea fields Windows 10 Selenium 3.4 IEDriver 3.14 64x - - not entering text on textarea fields Windows 10 Selenium 3.4 IEDriver 3.4 32x - Entering text on textarea however, having issue in closing browser driver. Windows 10 Selenium 3.4 IEDriver 3.14 32x - Entering text on textarea however, having issue in closing browser driver.","closed","D-IE,","sksajjan","2018-10-25T10:40:10Z","2019-08-15T03:09:38Z"
"","6310","Can t even open selenium","Windows 10 64 bits - lastest Firefox  from selenium import webdriver  browser = webdriver.Firefox(executable_path=""geckodriver.exe"")  browser.get(""http://google.com"") #this will load the the google homepage  Does work at all .","closed","R-awaiting answer,","tchaton","2018-08-20T21:20:04Z","2019-08-15T14:10:02Z"
"","5874","Driver fails to click button when it is out of screen bounds","Windows 10 Selenium Version:   3.11.0 Browser:   Firefox 59.0.3 (64-bit)  ## Expected Behavior -  I expect the driver to scroll to the position of the button, and click it  ## Actual Behavior -  No scrolling occurs, the driver successfully finds the button and seems to successfully click it but nothing happens. No errors occur, the only error that occurs is my test assertion fails because it is expecting an effect of the button click, which did not happen  ## Steps to reproduce - The following markup results in the button rendering beyond the screen boundary of my 15.6"" laptop display  ` 		 		Billing Information 		 			 				 					 				 			 			 				First 					Name 				 					 				 			 			 				Last 					Name 				 					 				 			 			 				Email 				 					 				 			 			 				Billing 					Address Line 1 				 					 				 			 			 				Billing 					Address Line 2 				 					 				 			 			 				City 				 					 				 			 			 				State 				 					 				 			 			 				Zip 				 					 				 			 			 				Country 				 					 				 			 			 				 					Purchase 				 			 		 	`  The following Java code is used to click the button:  `WebElement field = waiter.until(ExpectedConditions.visibilityOf( 				By.xpath(""/html/body/div[contains(@class, 'container content')]/form//div[button[contains(text(), 'Purchase')]]//button""))); 		field.click();`  When I run the test, pause on a debug, manually scroll to the bottom and then resume, my test passes OK","closed","R-awaiting answer,","johno1985","2018-05-09T15:10:14Z","2019-08-15T23:09:38Z"
"","5909","Every action slow on IE 11 browser in Windows Server 2016","Window : Windows Server 2016 Browser Version:   IE 11  ## Expected Behavior - Each selenium action should be working normally as expected behaviour  ## Actual Behavior - Actually all the selenium actions like click, sendkeys, gettext are working very slowly like taking atleast 7-8 seconds in between each actions.  ## Steps to reproduce - 1. Login to windows server 2016 2. Launch any URL on IE 11 browser using selenium 3. Perform any selenium action  Note: I have tried all the Selenium versions from 2.47.0 to 3.9.0 along with both IEDriverServer.exe for 32 and 64 bit.","closed","D-IE,","pranjal1987","2018-05-17T16:55:34Z","2019-08-15T23:09:36Z"
"","6260","AbstractCapabilities.abbreviate is truncating DesiredCapabilities values","While some of the DesiredCapabilities' values are not all that important, there are a few that I wish to NOT have truncated.  We add a custom ""name"" key with a value that is the name of the test being executed.  We then scoop up our Hub/Node/Test logs and have them centralized for simplified searching.  This truncation was added in 3.1.0 and I am not entirely sure why it was added.  `19:13:20.233 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, ..., loggingPrefs: org.openqa.selenium.logging..., media.navigator.permission.disabled: true, name: tcInHouseSeleniumGridHealth..., platform: WINDOWS`  A large number of our tests have prefixes + testnames that exceed the current truncation length (30 chars).  I believe this issue could be solved a number of ways:  1. Do not Truncate the values that were specified in the DesiredCapabilities map 2. Adjust the length comparison to a greater value (30 seems too low) 3. Make Truncation optional via hub config file","closed","C-java,","johnbartels","2018-08-08T13:18:00Z","2021-09-05T08:19:14Z"
"","5862","Missing commands","While converting an old Selenium test suite, I found that the following commands are not supported in the new version:  verifyLocation assertLocation storeTable verifySelectOptions verifyAttribute verifySelectedLabel assertXPathCount  It's possible there are equivalent commands with different names but if not, please add these.  Pete","closed","","lcsqlpete","2018-05-06T18:01:58Z","2019-08-16T03:09:44Z"
"","6113","Need safaridriver.exe for selenium","where i can get safaridriver.exe for selenium ( windows 7) ?","closed","","jvalarmathi","2018-07-04T15:40:04Z","2019-08-15T20:09:39Z"
"","5991","Can't open page with user data dir","When trying to open a page with the following code:  `from selenium import webdriver  options = webdriver.ChromeOptions()  options.add_argument(""user-data-dir=C:\\Users\\USER\\AppData\\Local\\Google\\Chrome\\User Data"") #Path to your chrome profile w = webdriver.Chrome(executable_path=""C:\\Users\\USER\\Downloads\\Selenium\\chromedriver.exe"", chrome_options=options) w.get('http://www.youtube.com')`  I get the following error:  `[9696:11672:0605/002643.992:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.997:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.998:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.998:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.998:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.999:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.999:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002643.999:ERROR:in_progress_cache_impl.cc(189)] Cache is not initialized, cannot RetrieveEntry. [9696:11672:0605/002644.516:ERROR:CONSOLE(0)] ""Error in event handler for (unknown): TypeError: Cannot read property 'trace' of undefined     at browser.runtime.sendMessage.response (chrome-extension://cfhdojbkjhnklbpkdaibdccddilifddb/include.preload.js:750:20)"", source: https://www.google.nl/_/chrome/newtab?ie=UTF-8 (0) [9696:11672:0605/002647.419:ERROR:CONSOLE(6)] ""Uncaught ReferenceError: gbar is not defined"", source: https://clients5.google.com/pagead/drt/dn/ (6)`  What can I do?","closed","","AWrongUsername","2018-06-04T22:28:08Z","2019-08-16T00:09:33Z"
"","5860","/usr/bin/chromedriver: Syntax error: "")"" unexpected","when starting webdriver, ""/usr/bin/chromedriver: Syntax error: "")"" unexpected"" occurred. Anyone knows the reason?","closed","","lijun003","2018-05-05T08:21:24Z","2019-08-16T03:09:44Z"
"","6432","Add SWITCH_TO_FRAME_PARENT to command map","When I used `targetLocator.paretFrame()` method of `selenium-webdirver@4.0.0-alpha.1` (npm package) with Chrome driver I got next error: ``` UnknownCommandError: Unrecognized command: switchToFrameParent     at buildRequest (...\selenium-webdriver\lib\http.js:376:9)     at Executor.execute (...\selenium-webdriver\lib\http.js:456:19)     at Driver.execute (...\selenium-webdriver\lib\webdriver.js:696:38) ```  Looks like this command is missing in common commands list, this PR adds it.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6432)","closed","C-nodejs,","astappiev","2018-09-20T15:54:10Z","2019-06-16T13:10:35Z"
"","6824","UnhandledPromiseRejectionWarning: NoSuchSessionError: invalid session id when using driver.quit();","When I run this code   `  const { Builder, By } = require('selenium-webdriver') const chrome = require(""selenium-webdriver/chrome"")  let chromeOptions = new chrome.Options();  chromeOptions.addArguments('disable-gpu') chromeOptions.addArguments('headless')  class Selenium {     constructor (url, elem) {         this.url = url,          this.elem = elem     }      // finds a specfic attribute within an HTML element     async findAttr(attr) {         let driver = new Builder().forBrowser(""chrome"").setChromeOptions(chromeOptions).build();                  try {             await driver.get(this.url);             const _elem = await driver.findElement(By.tagName(this.elem));              return _elem.getAttribute(attr);         } finally {             driver.close();         }              }      }  module.exports = Selenium  `  This error is given `UnhandledPromiseRejectionWarning: NoSuchSessionError: invalid session id`, I don't know why this is happening or how to fix it... I'm hoping somebody here knows a working solution.","closed","","aljadooa","2019-01-08T01:08:17Z","2019-08-14T16:09:54Z"
"","5902","Autodownload does not work in headless chrome webdriver","When I executed my tests in headless mode; auto download of files does not seem to work. Anyone any idea why it is not working, as I expected it to work.","closed","","Rahul9844","2018-05-16T10:28:40Z","2019-08-16T01:09:56Z"
"","6798","Can't build when using modulepath","When building selenium-server-standalone-3.141.59.jar on Eclipse 2018-12 with openJDK11.0.1 the build fails:  `java.lang.module.FindException: Unable to derive module descriptor for \selenium-server-standalone-3.141.59.jar     at java.base/jdk.internal.module.ModulePath.readJar(ModulePath.java:647)     at java.base/jdk.internal.module.ModulePath.readModule(ModulePath.java:330)     at java.base/jdk.internal.module.ModulePath.scan(ModulePath.java:236)     at java.base/jdk.internal.module.ModulePath.scanNextEntry(ModulePath.java:189)     at java.base/jdk.internal.module.ModulePath.findAll(ModulePath.java:165)     at java.base/java.lang.module.ModuleFinder$2.lambda$findAll$2(ModuleFinder.java:368)     at java.lang.module.ModuleFinder$2$$Lambda$22.00000000DB437580.apply(Unknown Source)     at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:271)     at java.base/java.util.AbstractList$RandomAccessSpliterator.forEachRemaining(AbstractList.java:720)     at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:499)     at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:489)     at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)     at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)     at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:241)     at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)     at java.base/java.lang.module.ModuleFinder$2.findAll(ModuleFinder.java:369)     at java.base/java.lang.module.Resolver.findAll(Resolver.java:841)     at java.base/java.lang.module.Resolver.bind(Resolver.java:223)     at java.base/java.lang.module.Configuration.resolveAndBind(Configuration.java:304)     at java.base/java.lang.module.ModuleDescriptor$1.resolveAndBind(ModuleDescriptor.java:2735)     at java.base/jdk.internal.module.ModuleBootstrap.boot(ModuleBootstrap.java:337)     at java.base/java.lang.ClassLoader.initializeClassLoaders(ClassLoader.java:217)     at java.base/java.lang.Thread.initialize(Thread.java:422)     at java.base/java.lang.Thread.(Thread.java:153) Caused by: java.lang.module.InvalidModuleDescriptorException: Provider class org.eclipse.jetty.http.Http1FieldPreEncoder not in module     at java.base/jdk.internal.module.ModulePath.deriveModuleDescriptor(ModulePath.java:554)     at java.base/jdk.internal.module.ModulePath.readJar(ModulePath.java:643)     ... 23 more `  I lack the advanced understanding of this issue, it however can be fixed by unpacking and changing a single line, according to this reply I got on stackexchange: https://stackoverflow.com/a/53979469/1341887  Do you believe it is possible to include this fix upstream?","closed","C-java,","skyhirider","2018-12-31T12:43:24Z","2021-09-05T08:24:55Z"
"","6524","not able to switch windows in safari on mac","What steps will reproduce the problem? 1. Run any test in safari that generates a pop-up window. 2. Pop-Up window opens and it switches to the window but after that it hangs executing no further commands.  Selenium version:3.9.1 OS:Windows macos Browser:Safari Browser version:12","closed","","ravi005e","2018-10-11T22:04:52Z","2019-08-15T08:09:45Z"
"","5827","hangs Selenium","Website https://www.vesti.ru/doc.html?id=2992690 hangs Selenium He generally ceases to respond","closed","","avoiteh","2018-04-25T13:09:14Z","2019-08-16T04:09:57Z"
"","6300","[py] Rounded pause duration","WebDriver standard expects ""duration"" parameter of ""pause"" action to be integer. ChromeDriver does not care, but GeckoDriver is very strict on this. See https://github.com/mozilla/geckodriver/issues/1355  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","Dakkaron","2018-08-17T08:57:42Z","2018-08-21T15:07:20Z"
"","6469","WebDriver is not fetching frames count in chrome 69.0.3 webdriver 3.13","WebDriver is not fetching frames count in chrome 69.0.3 Selenium Version 3.13.0 chrome driver v 2.42","closed","D-chrome,","sandeepd4s","2018-10-02T06:32:52Z","2019-08-15T06:09:48Z"
"","6449","What is the reason to rewrite various locators to css in W3C mode?","We've faced quite unusual behaviour in all selenium clients (java/ruby/python) while implementing W3C support in Appium. All id/name/class name locators were forcefully rewritten to css locator type before being sent to the server. This behaviour, of course, broke our tests for native mobile context (since css locators have no sense there), so we had to override it and restore the normal behaviour. Although, it would be interesting to know what was the original cause for such an ugly hack and whether you plan to keep it for the future.  Reference commit: https://github.com/appium/python-client/commit/238ca0e1b006d1430c32a4cc789f1bf763cf6366","closed","","mykola-mokhnach","2018-09-26T21:38:23Z","2019-08-15T09:09:47Z"
"","6575","Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.","We use: Selenium Version: 3.12. Browser: Chrome: 66 version  We have errors **sometimes** when WebDriver initialize and it can not up: after 3 attempts. We don't have errors in every run, just sometimes its happens :  ``` Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-693.21.1.el7.x86_64', java.version: '1.8.0_112' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:564) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) Caused by: org.apache.http.conn.HttpHostConnectException: Connect to selenium.ta.dev.some_organization.com:80 [selenium.ta.dev.some_organization.com/10.112.11.166] failed: Connection refused (Connection refused) 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151) 	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353) 	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380) 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236) 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184) 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88) 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110) 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:154) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:96) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	... 39 more Caused by: java.net.ConnectException: Connection refused (Connection refused) 	at java.net.PlainSocketImpl.socketConnect(Native Method) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:589) 	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74) 	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134) 	... 52 more ```","closed","R-awaiting answer,","rif88","2018-10-25T10:02:34Z","2019-08-15T03:09:39Z"
"","5839","how to forbid web browser  refreshing automatically","We use selenium + chrome driver to crawl data, but js in page fresh itself automatically, then elements found by xpath or css selector will outdate or is invisible; how to forbid this?  any hints, thank you!","closed","","adrianhust","2018-04-28T10:12:11Z","2019-08-16T04:09:44Z"
"","6672","Extract selenium-3-compat jars","We should pull various things out of the main repo and into a legacy jar. The obvious candidates are the legacy firefox driver, and the original grid.","closed","C-java,","shs96c","2018-11-21T11:24:56Z","2021-09-05T08:37:19Z"
"","6610","Documentation: Proxy depreciation warning message references are cyclical (Python)","We get a warning message when using set_proxy() method. https://github.com/SeleniumHQ/selenium/blob/8a0ef8d205cedbce7c0f11db0d5c6b933d66e586/py/selenium/webdriver/firefox/firefox_profile.py#L184-L189  We are advised that this method is being depreciated and to reference the Driver object. Driver object is vague, but if we look at RemoteWebDriver we're told to use the above code. https://github.com/SeleniumHQ/selenium/blob/8a0ef8d205cedbce7c0f11db0d5c6b933d66e586/py/selenium/webdriver/remote/webdriver.py#L142-L145  Some clarification needs to be done here as the two references are cyclical. If you look at Firefox/WebDriver object the proxy parameter has documentation about about connecting to the Firefox browser, not the proxy settings that the browser will be using.","closed","C-py,","crutledge","2018-11-02T15:28:42Z","2019-08-15T05:09:43Z"
"","6093","Selenium Click is not working in Windows 10 IE11","We are using Selenium with C#,But Selenium click functionality is not working in Windows 10 IE11,If I am using Javascriptexecutor then its working, But My requirement is not to use Javascriptexecutor   ((IJavaScriptExecutor)seleniumuiDriver.webDr).ExecuteScript(""return document.querySelectorAll(arguments[0])[0].click();"", identifier.Split('$')[0]);  When I am using Javascriptexecutor then I cant able to use ID,Xpath,Name.I can able to use only CssSelector. Is there any way to work with in IE11  windows 10 without Javascriptexecutor  Selenium Version:2.49 Programing Language:C#","closed","","CGkabila","2018-06-28T15:55:54Z","2019-08-15T20:09:56Z"
"","6668","Fix error code for unsupported locator strategy","W3C WebDriver spec indicates that when an unsupported locator strategy is used in Find Element or Find Elements command, the implementation should return ""invalid argument"" error. The existing JavaScript atoms for these commands didn't specify an error code, resulting in the default ""unknown error"". This commit fixes the error code.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6668)","closed","","JohnChen0","2018-11-20T22:51:50Z","2018-11-21T09:25:03Z"
"","6696","W3C update request. clear() method should not use blur.","W3C Requirements for clear() method contain ""blur"" action as the last step.  The step is really unnecessary. Why the method should not execute blur event:.  1. clear() method is used when we want to clear text values in input elements.  If user does the actions he still stays in the focused element. (Please note: from the beginning it was implemented as a ""reset"" action. But reset - it's not a User's step so we should not have the method for repeating real user steps)  2. To handle the following case looks like a trick: If we have input field which saves the value by using Enter action, without it it returns value to original one. if real user does it: -  it looks OK: - user selects the input - clears all values (by using delete/backspace) - types new values (and then press Enter) - as a result value will be correctly applied.  in the case the clear method cannot be used: once blur is executed - value will be automatically returned to previous one. So clear is not suitable for the case... and as result:  3. Because clear() cannot be used in the case above we should simulate Keyboard actions: - sendKeys(CTRL+A+DELETE) but in the case why do we have clear() method ? -- need to remove it ?  4. To be honest everyone (No?) uses the method to clear values in an input elements, so backward compatibility should be... (and if somebody uses clear() method as reset action - need to add an appropriate method for it but i guess it's not necessary because ""reset"" doesn't correspond to any of real user step.","closed","","dmitryyu","2018-11-27T17:32:13Z","2019-08-15T04:09:48Z"
"","5988","Returns: Failed: Uploading directories is not supported when sendkeys to input","Versions: [16:04:39] I/status - selenium standalone version available: 3.12.0 [last] [16:04:39] I/status - chromedriver versions available: 2.38, 2.39 [last] [16:04:39] I/status - geckodriver version available: v0.20.1 [last] [16:05:02] I/version - webdriver-manager 12.0.6  Code:  ApplicationDetailsPage.prototype.fillAppDetail = function (apiName, realm) {   apiName = apiName || 'InitialTestAPI';   realm = realm || 'test';   browser.wait(EC.visibilityOf(this.requestRealmName), timeOut);   this.selectApi(apiName);   this.requestRealmName.sendKeys(realm);   this.requestTestRealm.click();   this.requestSubmitBtn.click();};  Issue: Issue happens in line:   this.requestRealmName.sendKeys(realm);  when call fillAppDetail method, and don't pass realm value. It will use default value ""test"" and return following   error: F    ✗ request production access with created api       - Failed: Uploading directories is not supported: test           at TypeError (native)           at /Users/c5253649/Projects/openapi/apiportal/node_modules/selenium-webdriver/remote/index.js:344:13           at promise.ControlFlow.runInFrame_ (/Users/c5253649/Projects/openapi/apiportal/node_modules/selenium-webdriver/lib/goog/../webdriver/promise.js:1857:20)           at wrappedCtr.notify (/Users/c5253649/Projects/openapi/apiportal/node_modules/selenium-webdriver/lib/goog/../webdriver/promise.js:2448:25)           at promise.Promise.notify_ (/Users/c5253649/Projects/openapi/apiportal/node_modules/selenium-webdriver/lib/goog/../webdriver/promise.js:564:12)           at Array.forEach (native)           at promise.Promise.notifyAll_ (/Users/c5253649/Projects/openapi/apiportal/node_modules/selenium-webdriver/lib/goog/../webdriver/promise.js:553:15)           at goog.async.run.processWorkQueue (/Users/c5253649/Projects/openapi/apiportal/node_modules/selenium-webdriver/lib/goog/async/run.js:130:15)       From: Task: WebElement.sendKeys()           at WebElement.sendKeys (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:2185:43)           at actionFn (/usr/local/lib/node_modules/protractor/built/element.js:89:44)           at Array.map (native)           at actionResults.getWebElements.then (/usr/local/lib/node_modules/protractor/built/element.js:461:65)           at ManagedPromise.invokeCallback_ (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:1376:14)           at TaskQueue.execute_ (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:3084:14)           at TaskQueue.executeNext_ (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:3067:27)           at asyncRun (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:2927:27)           at /usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:668:7           at process._tickCallback (internal/process/next_tick.js:103:7)Error           at ElementArrayFinder.applyAction_ (/usr/local/lib/node_modules/protractor/built/element.js:459:27)           at ElementArrayFinder.(anonymous function) [as sendKeys] (/usr/local/lib/node_modules/protractor/built/element.js:91:29)           at ElementFinder.(anonymous function) [as sendKeys] (/usr/local/lib/node_modules/protractor/built/element.js:831:22)           at Service.ApplicationDetailsPage.sendString (/Users/c5253649/Projects/openapi/apiportal/e2e/test-framework/pages/application-details-page.js:43:9)           at Service.ApplicationDetailsPage.fillAppDetail (/Users/c5253649/Projects/openapi/apiportal/e2e/test-framework/pages/application-details-page.js:37:8)           at UserContext. (/Users/c5253649/Projects/openapi/apiportal/e2e/test/superuser/admin-verify-mapping-of-api-to-ariba-product.js:119:28)           at /usr/local/lib/node_modules/protractor/node_modules/jasminewd2/index.js:108:15           at new ManagedPromise (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:1077:7)           at ControlFlow.promise (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/promise.js:2505:12)           at schedulerExecute (/usr/local/lib/node_modules/protractor/node_modules/jasminewd2/index.js:95:18)       From: Task: Run it(""request production access with created api"") in control flow           at UserContext. (/usr/local/lib/node_modules/protractor/node_modules/jasminewd2/index.js:94:19)       From asynchronous test:        Error           at Suite. (/Users/c5253649/Projects/openapi/apiportal/e2e/test/superuser/admin-verify-mapping-of-api-to-ariba-product.js:114:3)           at Object. (/Users/c5253649/Projects/openapi/apiportal/e2e/test/superuser/admin-verify-mapping-of-api-to-ariba-product.js:27:1)           at Module._compile (module.js:570:32)           at Object.Module._extensions..js (module.js:579:10)           at Module.load (module.js:487:32)           at tryModuleLoad (module.js:446:12)","closed","R-awaiting answer,","darrenlau86","2018-06-04T08:07:20Z","2019-08-15T21:09:46Z"
"","6491","Added Locale.US for USER_AGENT toLowerCase","USER_AGENT toLowerCase without locale is causing problems with some languages, in may case Turkish.  It maps WINDOWS to wındows which is resulting an exception later when it is used because of 'ı' char instead of 'i'.  Calling toLowerCase with Locale.US solves this problem.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6491)","closed","C-java,","bozdemir84","2018-10-07T22:16:21Z","2018-10-29T13:50:38Z"
"","6279","Error when writing password field","Used the same name for a variable and got an error","closed","","Samirovich","2018-08-14T15:26:21Z","2019-08-15T15:09:59Z"
"","5968","Loosen WebElementCondition instance checks","Update WebElementCondition and Condition with custom static hasInstance methods so that `instanceof` checks are more lenient and don't cause issues with Babel.  Fixes #5560  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","afsmith92","2018-05-31T18:07:10Z","2019-01-30T21:58:56Z"
"","5956","Loosen WebElementCondition instance checks","Update WebElementCondition and Condition with custom static hasInstance methods so that `instanceof` checks are more lenient and don't cause issues with Babel.  Fixes #5560  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","afsmith92","2018-05-29T21:08:07Z","2018-05-30T20:33:57Z"
"","6390","Add missing init in SessionStorageTest.testClearSessionStorage","Unlike other tests in SessionStorageTest class, testClearSessionStorage didn't get to a known page before running the test. This causes the test to fail on Chrome when ran by itself, as the default page opened by ChromeDriver doesn't support session storage.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2018-09-11T00:36:35Z","2018-09-11T23:27:04Z"
"","6713","Selenium ie driver - open browser in private mode","Today's solutions to open the IE browser in private mode all includes changing the registry ""TabProcGrowth"". For security reasons, not all the users can make this change. You can see here: https://support.microsoft.com/en-us/help/3136268/can-t-print-from-the-web-if-you-run-internet-explorer-11-as-another-us In the ""More information"" section Microsoft are saying it will reduce security.  From what i know there is a simple way to open the browser in private mode, just open the process with the argument of private mode.  Thanks, Omer","closed","","omer11121","2018-12-02T08:41:11Z","2019-08-15T03:10:01Z"
"","6714","Selenium IE driver - Working with local DLL (IEDriver.dll)","Today the selenium IE driver is working with tmp files that he is creating and then loading them from the local temp folder. For security reasons in some computers the option to run unknown DLLs(including tmp files) is blocked.  My suggestion is to add a parameter to give the option to work with the DLL (IEDriver.dll). In my project i had to change the source code and re-compile. The changes I made:  hard coded in the LoadLibrary() function the ""fileName"" parameter to be ""IEDriver.dll"". Removed the section where the tmp files are deleted after use. You can see the changes in the attached files: ![iedriver1](https://user-images.githubusercontent.com/44057000/49339174-a3b4c480-f636-11e8-8590-d265840b2972.png) ![iedriver2](https://user-images.githubusercontent.com/44057000/49339175-a3b4c480-f636-11e8-8566-c80f2e20e693.png)","closed","D-IE,","omer11121","2018-12-02T11:32:18Z","2019-08-14T19:09:51Z"
"","6019","Selenium grid does not support chrome and Firefox headless","Today I experienced a bad limitation in Selenium Grid. The need to run chrome headless in nodes are deprived with the current versio"" first make sure chrome headless and firefox headless supports fully across the Selenium solutions, especially in Grid. Although following code is written to send the headless option through desired capabilities, debugging the code showed that it does not support the headless argument. Running headless is most important  thing to run scripts via Grid.   Selenium Web Driver versions used 3.12.0 Selenium Standalone - 3.12.0  chromeOptions.AddArgument(""--headless"");  capabilities = chromeOptions.ToCapabilities() as DesiredCapabilities;                         capabilities.SetCapability(CapabilityType.BrowserName, ""chrome"");                         capabilities.SetCapability(CapabilityType.Platform, new Platform(PlatformType.WinNT));                                                                Driver = new RemoteWebDriver(new Uri(""""), capabilities);","closed","C-remote,","lkkushan101","2018-06-13T13:11:24Z","2019-08-15T15:10:04Z"
"","6682","Build atoms using bazel","This will bring us to parity with buck, at least conceptually.","closed","D-atoms,","shs96c","2018-11-23T10:36:05Z","2019-08-15T04:09:55Z"
"","6459","[Py] Safari 12 webdriver legacy arg","This updates the Python Safari webdriver and service modules to allow specification of command line arguments, specifically so the `--legacy` flag can be passed to the safaridriver. Not sure if Safari 12 will be supported by Selenium, but we've found this to be a useful workaround in the meantime.  This has been discussed here:  https://github.com/SeleniumHQ/selenium/issues/6431  And here: https://stackoverflow.com/questions/52432636/session-not-created-selenium-webdriver-when-using-safari-12  But none of the workarounds seem to be Python specific.  The change follows the convention found in other browser modules (e.g. Chrome https://github.com/SeleniumHQ/selenium/blob/bc10b674bf0f0b0dadfde9435584813224d02618/py/selenium/webdriver/chrome/service.py#L37), and adds some test that the subprocess call includes the legacy flag or not.  Allowing any argument to be passed is perhaps not restrictive enough, and there is nothing specific catching the error if someone specifies an invalid argument. An alternative might be to use a use_legacy=True/False flag. Tests could also be more comprehensive.   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6459)","closed","C-py,","keenangraham","2018-09-28T02:15:46Z","2018-10-13T03:16:02Z"
"","6665","Land updated mechanism for distributing sessions into New Grid","This should be based on the one from the `scheduler` branch","closed","C-java,","shs96c","2018-11-20T17:39:50Z","2020-05-20T22:47:34Z"
"","6667","Java implementation of DevTools API","This should allow users to take advantage of features offered by using the Chrome Debugging Protocol (and equivalents on other browsers), notably:  * Full page screenshots * Streaming logs * Waiting for mutation events on the page","closed","C-java,","shs96c","2018-11-20T17:42:55Z","2021-09-05T09:44:01Z"
"","6800","update year in copyright NOTICE and LICENSE header","This PR updates the project copyright year for 2019.  Happy New Year!   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6800)","closed","","cgoldberg","2018-12-31T17:35:41Z","2018-12-31T17:56:40Z"
"","6818","[py] remove all deprecated methods and args from Python bindings","This PR removes all deprecated Python code in preparation for 4.0.  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6818)","closed","","cgoldberg","2019-01-06T18:23:51Z","2019-01-07T15:23:05Z"
"","6710","Update docstrings in options.py","This PR modifies the docstrings in options.py in such a way that the documentation can better parse them.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6710)","closed","C-py,","jsfehler","2018-11-30T16:58:56Z","2019-02-13T16:27:14Z"
"","6444","Selenium 4: Ruby bindings","This PR is opened for the list of changes I'd like to do for Ruby bindings in Selenium 4. Please read below for details and I'll be happy to hear the feedback. Let's have this PR both as To Do list and discussion board + code of what we want to see in Selenium 4. I'll be updating the list throughout the implementation and discussion.  I'll be very happy to hear the feedback from everyone else involved in selenium-webdriver gem development (@titusfortner, @lmtierney, @twalpole). If something is not clear or doesn't make any sense or causes trouble for higher-level libraries (Watir, Capybara) - let's discuss here.  ### Removal of OSS dialect  - [x] Remove deprecated `Mouse` class. - [x] Remove deprecated `Keyboard` class. - [x] Remove all OSS -> W3C capabilities conversion and aliases. Deprecate what used to work. - [x] Convert all `W3CSometimg` classes to `Something`. Remove their OSS equivalents. - [ ] Change API for timeouts. - [x] Remove protocol handshake. - [ ] Rename `desired_capabilities` to `capabilities` and provide W3C-compliant API for setting then (`alwaysMatch`, `firstMatch`).  ### Cleanup  - [x] Remove Firefox legacy driver support. - [x] Remove PhantomJS code (or extract to standalone gem) (?). - [ ] Go through all the driver extensions and drop the ones that no longer make any sense.  ### Improvements  - [ ] Implement automatic driver extensions loading based on returned capabilities (it should have been there all the time). - [x] Implement `Safari::Options` (added in 96998d9af7). - [x] Implement `Edge::Options` (added in 4b0296f27e). - [x] Allow to pass `Options` classes to remote instances (added in 92f4ed8183). - [x] Allow to pass custom `Service` instances to driver in favor of `driver_opts`. Deprecate `driver_opts`. - [x] ~~Use `element/{element id}/attribute/{name}` to get element instead of atom (confirm with Simon).~~ This is postponed until Se5. - [ ] Consider adding CDP (#6667)  ### Ruby-specific  - [x] ~~Deprecate `Selenium::WebDriver` namespace in favor of `Selenium`.~~ Agree not to do this. - [x] Require minimum Ruby version to 2.3 (EOL is in March) (https://www.ruby-lang.org/en/downloads/branches/). - [ ] Address all `C-rb` issues (somehow). - [ ] Address all `C-rb` pull requests (somehow). - [ ] Remove JRuby-specific `SocketPoller#listening?` as the bug it works around has been fixed in JRuby 1.6.7 (http://jruby.org/2012/02/22/jruby-1-6-7). - [x] Remove any custom code that checks for defined `RUBY_ENGINE` as it was only undefined in MRI 1.8 (also search for similar constants). - [x] Check if we still need custom logic for getting HOME directory on JRuby. - [x] Remove anything related to IronRuby - it’s not developed anymore. - [x] Simplify `Platform#null_device` as `File::NULL` was introduced in Ruby 1.9.3 (https://svn.ruby-lang.org/repos/ruby/tags/v1_9_3_0/NEWS). - [x] Drop all the execution via `$PROGRAM_NAME == __FILE__` - use IRB instead. - [x] Properly handle Windows/Unix path separators using `File::ALT_SEPARATOR` whenever possible. - [x] Remove all the compatibility layer for old Ruby in `Logger` . - [x] Remove `PortProber.random` as it should be avoided (deprecated in 6d3edb5). - [x] Rework `Wait` to use `Process::CLOCK_MONOTONIC` instead of `Time` as the latter is often monkey-patched (e.g. Timecop). - [x] ~~Deprecate and extract all custom HTTP clients (curb/persistent)~~ Postponed. - [ ] Go through YARD docs and add missing. - [x] Use safe-navigation operator where needed (`&.`) - [x] Use squiggly heredoc instead of manually de-indented ones - [x] Check why we need `Safari::Service#binary_path` - [ ] Check all TODOs   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6444)","closed","C-rb,","p0deje","2018-09-25T11:01:51Z","2019-04-24T06:09:52Z"
"","5834","Can not use any version of Selenium 3.4.0 with Firefox if test is using window/tab swith","This is my last trial to point the attention over to this bug: https://github.com/SeleniumHQ/selenium/issues/5064  Because of the referenced issue we can not upgrade Selenium to any version above 3.4.0 without loosing Firefox browser to run our test cases.  All programming language bindings are affected when running tests on Remote.","closed","","DavidGangel","2018-04-26T10:26:01Z","2019-08-16T04:09:52Z"
"","6747","grid documentation: add these useful pieces of info in the right place please","This is about: For nodes (and hubs?) to use the right network interfaces (on Linux), I had to remove docker and virbr0 interfaces. Sometimes UPDATE: no, NOT sometimes (I just figured out that I have a chromedriver and a geckodriver in my PATH since 3 months), nodes need to be started with specific webdrivers (java -Dwebdriver.chrome.driver=./chromedriver -Dwebdriver.firefox.driver=./geckodriver -jar ...) FirefoxOptions() sets marionette default to false (in my experience). Second UPDATE: I also figured out why in my case marionette was false: because I had the line System.setProperty(""webdriver.firefox.marionette"",""/Users/dieter/Documents/Seltest/src/test/resources/geckodriver 2""); which I later commented out. (that bad line I got somewhere from internet, webdriver.firefox.marionette is a boolean, not a location for the geckodriver)   Learning selenium is a bit frustrating because of bad and not up-to-date documentation lying in all corners of the internet.  For selenium grid there is https://www.seleniumhq.org/docs/07_selenium_grid.jsp and then later on you stumble somewhere on https://github.com/SeleniumHQ/selenium/wiki/Grid2 (there is also https://github.com/SeleniumHQ/selenium/wiki/Grid-Platforms) and via https://github.com/SeleniumHQ/selenium I now also discover New Handbook (work in progress): https://seleniumhq.github.io/docs/ (still have to read that)  I learned the java way of selenium. Grid (remotewebdriver) I got working ok locally on my macbook laptop: both normal and docker-selenium. The normal local grid using only selenium-server-standalone-3.141.59.jar. I figured that that standalone jar contains a chromedriver and a geckodriver (no idea what other drivers it contains), in the output of my maven command I can see ""Starting ChromeDriver 2.42.591059"", which was not the latest version of chromedriver. For gecko firefox the output does not show what version it was. **UPDATE: a few hours later I see that I have a chromedriver and a geckodriver in my PATH on my macbook since 3 months, I completely forgot about that. So no, the standalone jar does NOT contain drivers.** My apologies  But also I found that the local node can be started with  UPDATE: no, it's mandatory java -Dwebdriver.chrome.driver=./chromedriver -Dwebdriver.firefox.driver=./geckodriver\ 2 -jar ... and indeed using browsertype/OS specific webdrivers can also be done on the node: the output then showed ""Starting ChromeDriver 2.44.609545"".  This info is not on 07_selenium_grid.jsp or on wiki/Grid2 (it is mentioned somehow in the New Handbook) and it's also not in the help output of ""java -jar selenium-server-standalone-3.141.59.jar -role node -h"".     For docker-selenium hub and node containers I don't know if the nodes can be started with specific webdrivers (I guess you would have to build compose a docker image yourself to have the specicic webdriver file in its file system and let it start with the -Dwebdriver..driver= option but that's too much hassle)  For firefox I got the error: Error forwarding the new session cannot find : Capabilities {acceptInsecureCerts: true, browserName: firefox, marionette: false, moz:firefoxOptions: {args: [], prefs: {}}}  I got it working by setting in the test code the capability of marionette to true (so FirefoxOptions() sets it default to false?):  ```         FirefoxOptions options = new FirefoxOptions();         options.setCapability(""marionette"", true);         driver = new RemoteWebDriver(                 new URL(Hub),                 options); ```  Then it took a lot of work getting a non-local grid working at home: The issues were the network configuration on my 2 node linux machines (real ones, not VMs): In the output of the hub I saw that my node Kubuntu 18.04 used a docker network interface. I stopped and disabled docker and rebooted so that interface would not show up anymore in ifconfig. Then it used the virbr0 network interface (the nat interface for kvm): another 3 commands to get rid of that in ifconfig. (I don't know yet how to get it back if I want to use kvm again) Then that node finally used the correct ip address 192.168.0.xx  On my node Mageia 6 I hit a bug of Mageia when I disabled the firewall but which actually  firewalled everything coming in. After enabling the firewall again and puching a hole in port 5555 that node started to function.  Next issue was: on the Mageia node the included chromedriver of the selenium-server-standalone-3.141.59.jar could be used with chrome beta 71.0.3578.80 and the chrome test succeeded. UPDATE: no, there is no included chromedriver, I probably just have also on Mageia a chromedriver in its PATH. My firefox test didn't start the firefox browser, I guess because on Mageia the firefox version is 60.something.ESR. I didn't try the latest firefox on it.  But with the Kubuntu node I got in my maven output the errors:  Unable to create new service: ChromeDriverService Driver info: driver.version: unknown Unable to create new service: GeckoDriverService Driver info: driver.version: unknown  I got it working by starting the node with ... -Dwebdriver.chrome.driver=./chromedriver -Dwebdriver.firefox.driver=./geckodriver ... (these linux webdrivers in the same location as the selenium-server-standalone-3.141.59.jar of the node). Then on Kubuntu the chrome and firefox tests worked.  No idea why only on Kubuntu I needed to have specific webdrivers. UPDATE: no, the Mageia probably has a chromedriver in its PATH that I forgot about. My Mageia had chrome beta 71.0.3578.80 My Kubuntu had chrome beta 71.0.3578.53 (and firefox 63.0.3)","closed","","DieterRogiest","2018-12-12T13:53:14Z","2019-08-15T02:09:53Z"
"","6463","Add python client support for webextensions in firefox [rebased upon latest master and with fixed tests]","This is a rebased and improved upon version of https://github.com/SeleniumHQ/selenium/pull/5069, addressing the concerns raised by the reviewer.   Fixes the python part of #4093  Main contributors of this PR: * @jonsecchis for the initial PR at #4790 * @sangaline for the improved PR with initial tests at #5069 * The contributors behind the corresponding fixes in the Ruby, Node.js and Java bindings  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6463)","closed","C-py,","motin","2018-09-30T09:18:18Z","2018-10-04T16:02:38Z"
"","6044","Make Python ChromeDriver override stop_client instead of quit","This is a feature request (trivial). Would do a PR myself but don't currently have CLA signed. See https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/chrome/webdriver.py#L129 https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webdriver.py#L699 it's clear that it was intended the service stop logic would be in function stop_client (based on documentation in https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webdriver.py#L223) and actual quit would not be overridden. Should not require any changes in tests. Currently Chrome WebDriver is also for some reason swallowing the exception with the reason that you don't care about exception if something has gone wrong which is a complete oxymoron","closed","C-py,","nanonyme","2018-06-19T18:56:42Z","2021-09-05T08:27:35Z"
"","6654","functionalTimeouts incorrectly send according to GeckoDriver","This is a bug report first added to the GeckoDriver issue list [#1426](https://github.com/mozilla/geckodriver/issues/1426)  They believe this is an issue in Selenium.  ## System  * Version: geckodriver 0.23.0 * Platform: Microsoft Windows 10 Pro * Firefox: 63.0.1 * Selenium: selenium-server-standalone-3.14.0.jar * Intern: 4.3.2 * Node: 9.3.0  ## Testcase  In the above environment, setup the following files: [run.js](https://pastebin.com/wRHv9sMH) [test.js](https://pastebin.com/wGnv4peh)  Note: the test uses an environmental variable to set the path to the FireFox browser executable. Edit line 22 of run.js to hardcode this.  Run the test using `node run.js firefox`  The test fails to run. The script fails after the capabilities check. The test works in Chrome, Edge and IE11.  The test also works in FireFox if the functionalTimeout block is commented out in the config object (run.js, lines 11-13)  It seems the communication of timeout values is incorrect between Intern and geckodriver in these versions.  ## Stacktrace  Added as attachment `functionalTimeout command line output.txt`  ## Trace-level log  Added as attachment `functionalTimeout trace log.txt`   [functionalTimeout command line output.txt](https://github.com/SeleniumHQ/selenium/files/2579869/functionalTimeout.command.line.output.txt) [functionalTimeout trace log.txt](https://github.com/SeleniumHQ/selenium/files/2579870/functionalTimeout.trace.log.txt)","closed","","GARMBoshouwers","2018-11-14T08:52:19Z","2019-08-15T05:09:49Z"
"","6430","Add support for safaridriver's new_window() and new_tab() commands.","This functionality is available in Safari 12 and recent Safari Technology Preview builds. We'd like to get feedback and propose a spec change if it seems to be useful.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6430)","closed","","burg","2018-09-19T17:07:08Z","2019-01-23T08:52:47Z"
"","6144","Selenium Click is not working with IE11 in Windows 10 locally and also using remotedriver","This exception is what I get when trying to click on a button or an element on IE11 WINDOWS 10. I tried also with remote driver and the result is the same. New version of selenium gives the same as well.  The workaround I am using now with partial success is sendKeys(keys.ENTER), but indeed is a workaround.  org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: Cannot click on element Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:25:02.294Z' System info: host: 'PCxxxx', ip: 'xxxxxx', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_172' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:8856/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}","closed","D-IE,","salvada","2018-07-11T14:00:01Z","2019-08-15T15:10:02Z"
"","6694","Support structured logging on stdout","This allows systems such as DataDog to extract meaningful information from the logs. Which can only be a Good Thing.","closed","selenium-4,","shs96c","2018-11-27T11:48:03Z","2021-09-05T08:37:23Z"
"","6266","Severe bug in Firefox driver","There is are fat bugs in https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Firefox/Internal/Executable.cs   in LocateFirefoxBinaryFromPlatform()  The Selenium programmer who wrote this code doesn't have any experience in Windows programming. If you run the Selenium code in a 32 bit application the buggy code will not find a 64 bit version of Firefox. This is a shame.  A 32 bit Windows process accesses other locations in the registry than a 64 bit process.  The 64 bit installations of Firefox are written to  HKEY_LOCAL_MACHINE\SOFTWARE\Mozilla\Mozilla Firefox  The 32 bit installations of Firefox are written to  HKEY_LOCAL_MACHINE\SOFTWARE\Wow64Node\Mozilla\Mozilla Firefox  1.) BUG  The buggy code does not search in both nodes for a Firefox installation so it will only find anything if Firefox has the same bitness as the application which runs Selenium. A 32 bit process will only find 32 bit Firefoxes and vice versa. But the 32 bit Gecko driver can  automate both: Firefox 32 and 64, so this makes no sense.  2.) BUG  if (mozillaKey == null) { mozillaKey = Registry.CurrentUser.OpenSubKey(firefoxRegistryKey);  The code searches in HKEY_CURRENT_USER which is complete nonsense because there it will never find an install path.  3.) BUG  Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "" (x86)"" is completely wrong for the same reason because SpecialFolder.ProgramFiles points to a different folder depending if the Selenium code runs in a 32 bit or a 64 bit application. This is completely wrong.  Correct would be to use SpecialFolder.ProgramFiles and SpecialFolder.ProgramFilesX86. See https://msdn.microsoft.com/en-us/library/system.environment.specialfolder(v=vs.110).aspx. Additionally it is completely wrong to assume that Firefox is installed into a specific folder and search on the disk. All the information is already in the Registry and searching on the disk is a dirty workaround which has only been implemented because the code which searches in the registry is buggy. The Firefox installer writes the install path into the registry and there is absolutely no reason to search Firefox on the disk.  4.) OBSOLETE // Didn't find binary in any of the default install locations, so look // at directories on the user's PATH environment variable.  This is really a shame. The PATH variable is completely OBSOLETE. It was from the old times of Windows 3 and should not be used anymore in modern software !  5.) AWKWARD CODE in GetExecutablePathUsingRegistry() : .... string.Format(CultureInfo.InvariantCulture, @""{0}\Main"", currentVersion) Why so complicated?  -------------------------  I post a tested and working code here which works ALWAYS. There is neither a workaround required to search Firefox on disk nor in the PATH environment variable at all.  Please replace all the buggy code with this function:  `          // Selenium is unable to read a 64 registry path from a 32 bit Selenium process!         // This code is bullet proof.         protected String FindFirefoxExe()         {             List i_Views = new List();             i_Views.Add(RegistryView.Registry32);             if (Utils.Is64BitPlatform())                 i_Views.Add(RegistryView.Registry64);                          foreach (RegistryView e_View in i_Views)             {                 using (RegistryKey i_HKLM = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, e_View))                 {                     using (RegistryKey i_Moz = i_HKLM.OpenSubKey(@""SOFTWARE\Mozilla\Mozilla Firefox""))                     {                         if (i_Moz == null)                             continue;                          String s_CurVersion = (String)i_Moz.GetValue(""CurrentVersion"");                         if (String.IsNullOrEmpty(s_CurVersion))                             continue;                                                                                  using (RegistryKey i_Main = i_Moz.OpenSubKey(s_CurVersion + @""\Main""))                         {                             if (i_Main == null)                                 continue;                              String s_Path = (String)i_Main.GetValue(""PathToExe"");                             if (s_Path != null && File.Exists(s_Path))                                 return s_Path;                         }                     }                 }             }              throw new Exception(""Could not read the current FireFox version from the registry. Please install Firefox anew."");         } `  Please note that in the case that Firefox is installed as 32 bit AND as 64 installations the code will first search the 32bit ""CurrentVersion"" and if not found it will search the 64bit ""CurrentVersion"". You can change this order by adding the  RegistryView in the opposite order to i_View.  NOTE: If you don't want to implement a function Is64BitPlatform() you can also omit this if (...)  In case that the code is running on a 32 bit Windows, RegistryView.Registry64 will be redirected automatically to the 32 bit registry hive.  `                    List i_Views = new List();                 i_Views.Add(RegistryView.Registry32);            i_Views.Add(RegistryView.Registry64); ` would search the 32 bit hive twice on a 32 bit Windows.","closed","","Elmue","2018-08-09T19:34:47Z","2018-08-09T20:04:14Z"
"","6268","Selenium does not find Firefox Installation","There are several bugs in https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Firefox/Internal/Executable.cs in LocateFirefoxBinaryFromPlatform()  If you run the Selenium code in a 32 bit application the code will not find a 64 bit installation of Firefox.  But the 32 bit Gecko driver can automate both: Firefox 32 and 64, so this makes no sense.  A 32 bit Windows process accesses other locations in the registry than a 64 bit process.  The 64 bit installations of Firefox are written to HKEY_LOCAL_MACHINE\SOFTWARE\Mozilla\Mozilla Firefox  The 32 bit installations of Firefox are written to HKEY_LOCAL_MACHINE\SOFTWARE\Wow64Node\Mozilla\Mozilla Firefox  1.) BUG The code does not search in both nodes for a Firefox installation so it will only find anything if Firefox has the same bitness as the application which runs Selenium. A 32 bit process will only find 32 bit Firefoxes and vice versa.   2.) BUG if (mozillaKey == null) { mozillaKey = Registry.CurrentUser.OpenSubKey(firefoxRegistryKey);  The code searches in HKEY_CURRENT_USER which is useless because there it will never find an install path.  3.) BUG Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles) + "" (x86)"" is wrong for the same reason because SpecialFolder.ProgramFiles points to a different folder depending if the Selenium code runs in a 32 bit or a 64 bit application. Correct would be to use SpecialFolder.ProgramFiles and SpecialFolder.ProgramFilesX86. See https://msdn.microsoft.com/en-us/library/system.environment.specialfolder(v=vs.110).aspx. Additionally it is wrong to assume that Firefox is installed into a specific folder and search on the disk. (My Firefox is for example installed into an individual folder)  All the information is already in the Registry and searching on the disk is a workaround which has only been implemented because the code which searches in the registry is buggy. The Firefox installer writes the install path into the registry and there is absolutely no reason to search Firefox on the disk.  4.) OBSOLETE // Didn't find binary in any of the default install locations, so look // at directories on the user's PATH environment variable.  The PATH variable is completely obsolete. It was from the old times of Windows 3 and should not be used anymore in modern software.  5.) AWKWARD CODE in GetExecutablePathUsingRegistry() : .... string.Format(CultureInfo.InvariantCulture, @""{0}\Main"", currentVersion) Why so complicated?  I post a tested and working code here which works always. There is neither a workaround required to search Firefox on disk nor in the PATH environment variable at all.  Please replace all the buggy code with this function:  `      // Selenium is unable to read a 64 registry path from a 32 bit Selenium process.     // This code is bullet proof.     protected String FindFirefoxExe()     {         List i_Views = new List();         i_Views.Add(RegistryView.Registry32);         if (Utils.Is64BitPlatform())             i_Views.Add(RegistryView.Registry64);                  foreach (RegistryView e_View in i_Views)         {             using (RegistryKey i_HKLM = RegistryKey.OpenBaseKey(RegistryHive.LocalMachine, e_View))             {                 using (RegistryKey i_Moz = i_HKLM.OpenSubKey(@""SOFTWARE\Mozilla\Mozilla Firefox""))                 {                     if (i_Moz == null)                         continue;                      String s_CurVersion = (String)i_Moz.GetValue(""CurrentVersion"");                     if (String.IsNullOrEmpty(s_CurVersion))                         continue;                                                                          using (RegistryKey i_Main = i_Moz.OpenSubKey(s_CurVersion + @""\Main""))                     {                         if (i_Main == null)                             continue;                          String s_Path = (String)i_Main.GetValue(""PathToExe"");                         if (s_Path != null && File.Exists(s_Path))                             return s_Path;                     }                 }             }         }          throw new Exception(""Could not read the current FireFox version from the registry. Please install Firefox anew."");     }  `  Please note that in the case that Firefox is installed as 32 bit AND as 64 installations the code will first search the 32bit ""CurrentVersion"" and if not found it will search the 64bit ""CurrentVersion"". You can change this order by adding the RegistryView in the opposite order to i_View.  NOTE: If you don't want to implement a function Is64BitPlatform() you can also omit this if (...) In case that the code is running on a 32 bit Windows, RegistryView.Registry64 will be redirected automatically to the 32 bit registry hive.  `         RegistryView[] i_Views = new ListRegistryView[] { RegistryView.Registry32, RegistryView.Registry64 };  ` would search the 32 bit hive twice on a 32 bit Windows.","closed","D-firefox,","Elmue","2018-08-10T18:33:03Z","2018-11-20T16:48:10Z"
"","5926","Support POST	/session/{session id}/window/rect in javascript (nodejs) client.","The W3C command for window position and size is  POST	/session/{session id}/window/rect https://www.w3.org/TR/webdriver/#set-window-rect   The javascript/webdriver code: https://github.com/SeleniumHQ/selenium/blob/master/javascript/webdriver/command.js#L139 only supports non-W3C position and size.  We discovered this omission when we switched to the W3C IE11 driver.  There does not seem to be any W3C code in javascript/webdriver/command.js whereas the py code https://github.com/SeleniumHQ/selenium/blob/a92a0496c5f75cc0afa2e3585143493bfe7aa088/py/selenium/webdriver/remote/command.py has several W3C-specific commands: there may be other W3C features missing from the JS code.","closed","C-nodejs,","johnjbarton","2018-05-21T15:23:52Z","2019-08-16T01:09:40Z"
"","6677","Load classes from buildr urls","The new grid is pluggable, but it would be really helpful to be able to say something like ""load the sessionmap from this jar"", give a Buildr url (or maven coords in some other format), and have a classloader be created that does the hard work for us.","closed","selenium-4,","shs96c","2018-11-23T08:59:48Z","2021-09-05T09:02:47Z"
"","6100","Make selenium jars usable with Java 9 (and above)","The module system introduced with Java 9 forbids having a package in more than one jar file. The following three packages are affected by this: - org.openqa.selenium.logging - org.openqa.selenium.interactions - org.openqa.selenium.interactions.internal  This change introduces new packages and moves a couple of classes around, so that each jar file has only distinct packages.  Fixes #5896  Note: This breaks the tests (run with ./go clean test) because HtmlUnit still excpects HasInputDevices in the package org.openqa.selenium.interactions (which had to move). I seriously have no idea how to fix this, or at least disable the HtmlUnit tests. This is the error message: ```console PARSING BUCK FILES... 0,8s (100%) CREATING ACTION GRAPH: FINISHED IN 0,2s Build failed: Command failed with exit code 1. stderr: /home/ombre/dev/projects/selenium/java/client/test/org/openqa/selenium/testing/TestUtilities.java:42: error: cannot access org.openqa.selenium.interactions.HasInputDevices       return ((HtmlUnitDriver) driver).getBrowserVersion().getUserAgent();                                       ^   class file for org.openqa.selenium.interactions.HasInputDevices not found Errors: 1. Warnings: 0.      When running .     When building rule //java/client/test/org/openqa/selenium/testing:test-base. DOWNLOADED 0 ARTIFACTS, 0,00 BYTES BUILDING: FINISHED IN 6,5s (100%) 321/326 JOBS, 56 UPDATED, 0,3% CACHE MISS BUILD FAILED go aborted! ```  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6100)","closed","C-java,","seombre","2018-06-30T20:34:39Z","2021-01-22T18:46:41Z"
"","6620","Pass capabilities rather than options to the proxy object","The method add_to_capabilities from the Proxy class takes capabilities (self._caps) as argument instead of ""opts""  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6620)","closed","C-py,","earendil","2018-11-05T15:33:26Z","2019-07-18T01:34:12Z"
"","6205","[Documentation] Update link to Guiceberry in Wiki","The link to the Guiceberry project, in the [LoadableComponent wiki page](https://github.com/SeleniumHQ/selenium/wiki/LoadableComponent) is outdated.  The project has moved to Github, on the following link: https://github.com/zorzella/guiceberry","closed","","JoaoGFarias","2018-07-26T09:10:51Z","2019-08-15T17:09:55Z"
"","6607","Incorrect version progression on newest release","The last ""full"" release was https://github.com/SeleniumHQ/selenium/releases/tag/selenium-3.14.0  2 days ago, https://github.com/SeleniumHQ/selenium/releases/tag/selenium-3.141.0 was created. It looks like this version number is incorrect; perhaps it was supposed to be 3.14.1.","closed","","mtrea","2018-11-02T00:50:45Z","2019-08-15T06:09:41Z"
"","6248","Selenium release 3.14.0 - Broken ABI with appium-dotnet-driver","The issue was presented in 3.11.1 and addressed in v 3.11.2 I've hit the same issue in latest 3.14.0  Link to a previous bug report:  [https://github.com/SeleniumHQ/selenium/issues/5768](github/issues/5768)  Selenium version: 3.14.0 Appium driver version: 3.0.0.2  An Exception:  `System.TypeLoadException: 'Method 'Dispose' in type 'OpenQA.Selenium.Appium.Service.AppiumCommandExecutor' from assembly 'appium-dotnet-driver, Version=3.0.0.2, Culture=neutral, PublicKeyToken=null' does not have an implementation.'`","closed","","krvns","2018-08-03T16:15:04Z","2019-08-15T12:09:39Z"
"","6475","Add a check for WebExtension in the atoms userAgent","The IDE requires specific treatments in atoms, that require the atoms to take WebExtensions into account, similarly to how it takes Firefox Extensions.   Right now we circumvent the issue by overriding `bot.userAgent.FIREFOX_EXTENSION` to be true, but that adds extra treatments in atoms that may assume XUL, which is why we need to define WebExtensions specifically.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6475)","closed","","corevo","2018-10-03T08:55:59Z","2018-10-26T07:33:29Z"
"","6443","Can't select option by selenium with python","The drop down list is a dynamic generated html DOM. The backend code of this  ```html     Assign a trainer                                                  Fitplans Team                                                           Unassigned                           ``` I have to change Fitplans Team to another.. How i can change it ?? There have many solution for option tags,, When i try to Select method from selenium.websriver.support.iu then i get this error   > selenium.common.exceptions.UnexpectedTagNameException: Message: Select only works on \ elements, not on \","closed","","devils-ey3","2018-09-25T10:31:31Z","2019-08-15T10:09:42Z"
"","6563","Add AddAdditionalCapability(string capabilityName, object capabilityValue, bool isGlobalCapability) overload to DriverOptions","The current state is inconsistent: 1. `ChromeOptions`, `FirefoxOptions`, and `InternetExplorerOptions` each have their own `AddAdditionalCapability(string, object, bool)` overload (unrelated in terms of polymorphism). 1. `SafariOptions` and `EdgeOptions` don't a `AddAdditionalCapability(string, object, bool)` overload at all.  This means that you can't share code and have to have undesirable casts like the following: ```cs static void AddGlobalCapability(this DriverOptions options, string name, object capabilityValue) {     switch (options)     {         case ChromeOptions chromeOptions:             chromeOptions.AddAdditionalCapability(name, capabilityValue, true);             break;         case FirefoxOptions firefoxOptions:             firefoxOptions.AddAdditionalCapability(name, capabilityValue, true);             break;         case InternetExplorerOptions internetExplorerOptions:             internetExplorerOptions.AddAdditionalCapability(name, capabilityValue, true);             break;         default:             options.AddAdditionalCapability(name, capabilityValue);             break;     } } ```  Note how the exact same call has to be written multiple times due to said lack of polymorphism.   This API discrepancy also demonstrates inconsistency between the semantics of `AddAdditionalCapability(string capabilityName, object capabilityValue)`. For Chrome, FF, and IE it adds browser-specific capabilities (by defaulting to `isGlobalCapability = false`), whereas for Safari and Edge it adds global capabilities (the equivalent of defaulting to `isGlobalCapability = true` had there been a similar overload accepting the latter).","closed","C-dotnet,","ohadschn","2018-10-21T22:19:30Z","2019-08-15T02:09:54Z"
"","6664","Nice Locators","The current locators are very low level, and so we need to add some nice ones that people can use to the support library. These should probably subclass `By`","closed","C-java,","shs96c","2018-11-20T17:38:37Z","2020-05-20T23:22:43Z"
"","6399","bot.inject.cache.getElement throws STALE_ELEMENT_REFERENCE Error for elements inside a shadowRoot","The check https://github.com/SeleniumHQ/selenium/blob/cadae224ba4ff7cc7b59839ac44c7f750bc8da98/javascript/atoms/inject.js#L521-L528  does not take ShadowDom into account and thus fails for every element inside a shadowRoot.","closed","D-atoms,","dominikg","2018-09-12T07:55:04Z","2021-09-05T08:10:37Z"
"","6361","Dispatch untrusted ""submit"" event in ""submit"" helper on the window instead of the form itself","The [HTML spec](https://w3c.github.io/uievents/#trusted-events) says the following for untrusted events as created with `createEvent()`:  > Most untrusted events will not trigger default actions, with the exception of the click event. This event always triggers the default action, even if the isTrusted attribute is false (this behavior is retained for backward-compatibility). All other untrusted events behave as if the preventDefault() method had been called on that event.  Also the `submit` event is included here.  Selenium creates and fires such an event for the `submit()` helper:  https://github.com/SeleniumHQ/selenium/search?q=e.initEvent%28%27submit%27&unscoped_q=e.initEvent%28%27submit%27  From the point of submitting a form it is totally enough to just call:  > HTMLFormElement.prototype.submit.call(form)  Note that in Firefox this untrusted event is causing a double submission of the form data! This is about to get fixed, but relies on some external code (eg. Jenkins) to be updated first.  As long as this behavior stays in Selenium we are blocked with improving the WebDriver conformance in geckodriver / Marionette. See [bug 1487705](https://bugzilla.mozilla.org/show_bug.cgi?id=1487705).","closed","C-nodejs,","whimboo","2018-09-04T08:23:01Z","2019-08-15T12:09:57Z"
"","6592","Selenium does not set firefox profile - python","System windows:10 Selenium:3.14 Python:3.7 Gecodriver:0.23  Expection: Open the firefox with test profile  Issue: Open the firefox with default profile Create a temp profile folder to temp folder   Code Block  ``` from selenium.webdriver.firefox.firefox_profile import FirefoxProfile from selenium import webdriver  fp = FirefoxProfile(""C:\\Users\\\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\ji8rbij6.test"") browser = webdriver.Firefox(firefox_profile=fp) ```  Has anyone have any idea !   Thanks in Advance","closed","C-py,","digiboons","2018-10-29T10:36:42Z","2019-08-15T01:09:47Z"
"","6728","[py] Update Sphinx","Subj, from https://github.com/SeleniumHQ/selenium/pull/6711#issuecomment-443470408.  Other changes: * Only left immediately needed packages in `tox.ini`:     * the dependency tree has changed so much between versions that I felt that updating the full list of packages and versions one by one is lots of redundant work. It's your call though.     * This way, it's clear what in `3rd-party/py` is really needed and what is just there as dependencies.         * It's (still) unclear though what is a dependency for what -- so no easy way to check that there are no redundant files in `3rd-party/py`. * Ignored that platform-independent packages were present as wheels.     * Also redundant work to check what is platform-independent and what is not.     * A source package is also superior to a wheel from maintenance perspective because it's a [Corresponding Source](https://www.gnu.org/licenses/gpl-3.0.en.html#section1). The only possible reason (that I can see) why Selenium keeps copies of dependencies is to be insured from a loss of their supply channels. And a source package is the only thing that you can do everything you may ever need with if you have nothing else.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6728)","closed","","native-api","2018-12-05T11:44:17Z","2018-12-05T15:40:30Z"
"","6530","My IE driver start typing very slow after 3 min of running my tests","Steps to reproduce 1. My test runs more than 5 min 2. After a while, I can see each send key characters  Currently my solution to this problem: Restart the IE driver  Driver.close(); Driver.Quit(); and re-open Please let me know if any solution for this problem. even in browser stack, my sessions are split due to this issue.   My operating system:  Windows 10 64 bit","closed","D-IE,","suryap666","2018-10-12T14:14:11Z","2019-08-14T15:09:41Z"
"","6392","org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverService","Starting ChromeDriver 2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e) on port 14596 Only local connections are allowed. Sep 11, 2018 12:39:56 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Sep 11, 2018 12:39:57 PM org.openqa.selenium.remote.DesiredCapabilities chrome INFO: Using `new ChromeOptions()` is preferred to `DesiredCapabilities.chrome()` org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverService Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'WRIT-A05', ip: '172.16.7.127', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111' Driver info: driver.version: unknown Command duration or timeout: 340 milliseconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) 	at ISCO.ISCO.invokeBrowser(ISCO.java:59) 	at ISCO.ISCO.main(ISCO.java:534) Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverService Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'WRIT-A05', ip: '172.16.7.127', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111' Driver info: driver.version: unknown Build info: version: '3.9.1', revision: '63f7b50', time: '2018-02-07T22:42:28.403Z' System info: host: 'WRIT-A05', ip: '172.16.7.127', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_111' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.server.ServicedSession$Factory.lambda$get$0(ServicedSession.java:128) 	at org.openqa.selenium.remote.server.ServicedSession$Factory.apply(ServicedSession.java:145) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:176) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$11$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:179) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:65) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.Collections$2.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:68) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.DistinctOps$1$2.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.stream.ReferencePipeline$2$1.accept(Unknown Source) 	at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Unknown Source) 	at java.util.stream.Streams$ConcatSpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:71) 	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:242) 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source)","closed","","MFaizanChughtai","2018-09-11T09:12:00Z","2019-08-15T11:09:39Z"
"","6160","Timed out waiting for driver server to start.","Starting ChromeDriver 2.40.565498 (ea082db3280dd6843ebfb08a625e3eb905c4f5ab) on port 45228 Only local connections are allowed. Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:14.902Z' System info: host: 'DESKTOP-G83T95P', ip: '192.168.0.4', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:193) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:179) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at flipkart.com.test.demo.LoginValidationMain.invokeBrowser(LoginValidationMain.java:17) 	at flipkart.com.test.demo.LoginValidationMain.main(LoginValidationMain.java:32) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:45228/status] to be available after 20004 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:188) 	... 10 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) 	... 11 more","closed","","GauravDixit11","2018-07-15T08:00:19Z","2019-08-14T21:10:00Z"
"","6533","Manual actions in Selenium during tests","Started the test in Selenium in addition in my browser I manually clicked and/or entered the data in the fields.  Is it possible to save the actions that I made manually - actions logs? I want to know what the user's actions during manual test.","closed","","slawomir0211","2018-10-14T17:04:10Z","2019-08-15T08:09:37Z"
"","5939","OFF: help with old webdriver code (Kernel32.java, Windows Job Objects)","Sorry about the OFF TOPIC, but I'm desperate and running out of time.   I created [this question on stackoverflow ](https://stackoverflow.com/questions/50498555/jna-in-windows-auto-terminate-child-processes-using-windows-jobs) to find out what is happening.  My code was based on the Selenium Webdriver [Kernel32.java](https://github.com/pilwon/selenium-webdriver/blob/master/java/client/src/org/openqa/selenium/os/Kernel32.java), I thought someone here could help me.","closed","","betonetotbo","2018-05-24T11:45:35Z","2019-08-16T00:10:01Z"
"","6700","Javascript set current time of video don't work","Sometimes the javascript to set current time don't work but when i get current time, the time is time which i had set.  Any solution for this issue   Code: [Code.txt](https://github.com/SeleniumHQ/selenium/files/2622542/Code.txt)  Selenium : 3.141.59 Browser : Edge (version 42) Window 10","closed","","thaichau298","2018-11-28T02:15:59Z","2019-08-15T04:09:44Z"
"","6602","Enable .NET ClearTest cases now supported by ChromeDriver","Some previously disabled test cases in .NET ClearTest class are now supported by ChromeDriver 2.43.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6602)","closed","","JohnChen0","2018-10-31T21:41:18Z","2018-12-11T20:21:53Z"
"","6422","Improve Error Messages in ExpectedConditions.java","Some of the messages here remove a lot of necessary context to fully understand the error.  For example: ""number to be more than \""%s\"". Current number: \""%s\"""" misses the context of the locator and elements that are missing.","closed","C-java,","kunalgosar","2018-09-17T23:21:49Z","2019-08-15T10:09:59Z"
"","6462","Fix bot.dom.isEditable with more input element types","Some input element types that are considered editable by W3C WebDriver Recommendation were not allowed by bot.dom.isEditable. Those missing types are now added. See https://www.w3.org/TR/webdriver1/#dfn-editable.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6462)","closed","","JohnChen0","2018-09-28T19:46:35Z","2018-10-01T19:16:45Z"
"","6847","Finding element by text","Since xpath is slow in IE, why don’t you guys implement finding elements by inner text? Instead of writing driver.findElement(By.xpath(“//button[text()=‘some text”]); We could have: driver.findElement(By.text(“some text”));","closed","","Nodirbek3d","2019-01-12T14:29:14Z","2019-08-15T00:09:37Z"
"","6251","Add: safari capabilities for nodejs bindings","Signed-off-by: Sri Harsha   - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6251)","closed","C-nodejs,","harsha509","2018-08-04T20:51:43Z","2019-01-12T17:12:46Z"
"","6821","Python: Fix DeprecationWarning: invalid escape sequence","Signed-off-by: Mickaël Schoentgen   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6821)","closed","","BoboTiG","2019-01-07T09:24:22Z","2019-01-07T15:49:24Z"
"","5942","Error handler throwing a KeyError for 'status' when response is ""400, Could not proxy command to remote server""","Selenium version: 3.12 Appium-Python-Client: 0.26 Os: macOS High Sierra 10.16.4 Emulator version: Nexus 5 X Api level 27 8.1 Oreo  This error was found while using Appium but I decided to open it here because appium uses Selenium library and its throwing the exception on `errorhandler.py` line 130: `status = value[""status""]` The response that I am seeing there is:   {'status': 400,  'value': '{""value"":{""message"":""Could not proxy command to remote server. '           'Original error: Error: read '           'ECONNRESET"",""stacktrace"":""ProxyRequestError: Could not proxy '           'command to remote server. Original error: Error: read '           'ECONNRESET\\n    at JWProxy.proxy$ '           '(/usr/local/lib/node_modules/appium/node_modules/appium-base-driver/lib/jsonwp-proxy/proxy.js:152:13)\\n    '           'at tryCatch '           '(/usr/local/lib/node_modules/appium/node_modules/babel-runtime/regenerator/runtime.js:67:40)\\n    '           'at GeneratorFunctionPrototype.invoke [as _invoke] '           '(/usr/local/lib/node_modules/appium/node_modules/babel-runtime/regenerator/runtime.js:315:22)\\n    '           'at GeneratorFunctionPrototype.prototype.(anonymous function) [as '           'throw] '           '(/usr/local/lib/node_modules/appium/node_modules/babel-runtime/regenerator/runtime.js:100:21)\\n    '           'at GeneratorFunctionPrototype.invoke '           '(/usr/local/lib/node_modules/appium/node_modules/babel-runtime/regenerator/runtime.js:136:37)\\n    '           'at ""}}'}","closed","","eduardoreynoso","2018-05-24T17:01:31Z","2019-08-16T00:09:40Z"
"","5936","WebElement::getText provides confusing javaDoc","Selenium Version:  3.12.0 [Current version of WebElement::getText](https://github.com/SeleniumHQ/selenium/blob/73ce7673425cb99bf1ee2dcfbc9447276e082173/java/client/src/org/openqa/selenium/WebElement.java#L143-L148) says that result will be ""without any leading or trailing whitespace"", which makes me think that String::trim method is used before value is returned.  This is not true:  ## Expected Behavior - Option1: getText() must always trim result according to javaDoc.   Option2: javaDoc must indicate that there are exceptional cases  ## Actual Behavior - getText() does not always trim result   ## Steps to reproduce - ```java import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait;  public class T {      public static void main(String[] args) {         WebDriver webDriver = new ChromeDriver();         webDriver.get(""https://jsfiddle.net/2dp8Lc90/show/"");         new WebDriverWait(webDriver, 10).until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(0));         String styledText = webDriver.findElement(By.id(""styled"")).getText();         String preformattedText = webDriver.findElement(By.id(""preformatted"")).getText();         System.out.println(""Does trim() affect resulted text in case#1=""                 + !styledText.trim().equals(styledText)                 + "" case#2=""                 + !preformattedText.trim().equals(preformattedText));         webDriver.quit();     } } ```","closed","C-java,","dr29bart","2018-05-23T20:43:05Z","2019-08-15T22:09:56Z"
"","5908","Selenium Hub does not update Node's configuration if started after the node","Selenium Version:   3.12.0 Browser:   Any ## Expected Behavior - Node configuration is updated with corresponding Hub parameters ## Actual Behavior - Configuration for the node is not updated with Hub parameters  ![image](https://user-images.githubusercontent.com/22076937/40186754-8dc0d1d4-59fe-11e8-973a-19e24607d32a.png)  ``` Config for the hub : browserTimeout : 240 debug : true help : false jettyMaxThreads : -1 port : 4444 role : hub timeout : 15 enablePassThrough : false cleanUpCycle : 5000 host : 10.64.214.26 maxSession : 5 hubConfig : /opt/selenium/config.json capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher newSessionWaitTimeout : -1 throwOnCapabilityNotPresent : true registry : org.openqa.grid.internal.DefaultGridRegistry Config details : hub launched with : -browserTimeout 240 -debug true -help false -jettyMaxThreads -1 -port 4444 -role hub -timeout 15 -enablePassThrough false -cleanUpCycle 5000 -host 10.64.214.26 -maxSession 5 -hubConfig /opt/selenium/config.json -capabilityMatcher org.openqa.grid.internal.utils.DefaultCapabilityMatcher -newSessionWaitTimeout -1 -throwOnCapabilityNotPresent true -registry org.openqa.grid.internal.DefaultGridRegistry the final configuration comes from : the default : browserTimeout : 0 debug : false help : false port : 4444 role : hub timeout : 1800 enablePassThrough : true cleanUpCycle : 5000 capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher newSessionWaitTimeout : -1 throwOnCapabilityNotPresent : true registry : org.openqa.grid.internal.DefaultGridRegistry  updated with params : browserTimeout : 240 debug : false help : false jettyMaxThreads : -1 port : 4444 role : hub timeout : 15 enablePassThrough : true cleanUpCycle : 5000 maxSession : 5 capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher newSessionWaitTimeout : -1 throwOnCapabilityNotPresent : true registry : org.openqa.grid.internal.DefaultGridRegistry ```  ## Steps to reproduce - 1. Start a node with default parameters, check that it cannot register to the hub 2. Start a hub with environment GRID_TIMEOUT=15 3. Check node configuration after the registration on the hub","closed","C-grid,","dev-e","2018-05-17T15:25:04Z","2019-08-15T13:09:38Z"
"","5896","Can't compile Java9 module with selenium-java as dependency","Selenium Version:   3.11.0  I'm trying to build a Java9 module which has selenium-java as maven dependency.  My module-info.java looks something like this: ```java module my.module {      exports my.package;      requires httpcore;     requires json;     requires selenium.api;     requires selenium.chrome.driver;     requires selenium.edge.driver;     requires selenium.firefox.driver;     requires selenium.ie.driver;     requires selenium.remote.driver;     requires selenium.support; } ```  However, when compiling my module with maven I get the following error message: module my.module reads package org.openqa.selenium.logging from both selenium.api and selenium.remote.driver  This seems to happen, because both selenium-api and selenium-remote-driver contain a package called ""org.openqa.selenium.logging"". Java 9 (and all later versions) forbid this. This problem is called ""split packages"".  Is there any chance, we can get this problem fixed in the next releases? Or is there some other dependecy I should use instead of selenium-java (for example a single JAR that contains everything)?","closed","C-java,","mhomnag","2018-05-14T14:16:14Z","2021-09-05T08:21:46Z"
"","6351","Can something be done towards reducing overall selenium repo size of over 1.6 GiB?","Selenium repo is over 1.6 GiB which is usually considered way too big. I see that may be caused by the thousands of commit objects/snapshots stored in git files.  Should it be reduced by removing ""older by 6 months commits"" which should potentially free up a lot of storage and reduce size to become < 1 GiB ?","closed","","praveen4463","2018-08-31T00:33:41Z","2019-08-15T13:09:56Z"
"","6226","Network throttling not working in Selenium Grid 3.13","Selenium Grid 3.13 with Chrome nodes. Created using selenium/hub:3.13 and selenium/node-chrome:3.13 Docker images.  According to the [changelog](https://github.com/SeleniumHQ/selenium/blob/master/java/CHANGELOG), since 3.13 it's possible to use `get_network_conditions()` and `set_network_conditions()` to simulate lower speeds.  However, assume the following Python snippet:  ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  driver = webdriver.Remote(     command_executor='http://selenium:4444/wd/hub',     desired_capabilities=getattr(DesiredCapabilities, ""CHROME"") ) print(driver.get_network_conditions()) driver.close() ```  It's reporting:  `AttributeError: 'WebDriver' object has no attribute 'get_network_conditions'`","closed","","ay0o","2018-07-30T12:52:01Z","2019-08-15T17:09:43Z"
"","6822","selenium don't running at spark cluster mode - Failed to open connection to ""session"" message bus: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11 site:stackoverflow.com","selenium don't running at spark cluster mode  Version: centos 7 Platform: LINUX Firefox: 60.2.2 Selenium: 3.14.1 geckodriver 0.21.0  I don't no understand selenium do good running at Yarn Cluster Mode. but selenium don't running at spark cluster mode.  ![stop2](https://user-images.githubusercontent.com/21356484/50772016-a5297a80-12cf-11e9-9820-de2ba80864e5.png) ![stop](https://user-images.githubusercontent.com/21356484/50772017-a5297a80-12cf-11e9-94cf-5e23f4d17a0b.png)","closed","","saseo90","2019-01-07T13:57:50Z","2019-08-15T00:09:59Z"
"","5857","Selenium click not working for selenium 3.10","Selenium click is not working in IE 11. I am using selenium 3.10.0. and 32-bit InternetExplorerDriver exe. Dependencies used are as -   desiredCapabilities.setCapability(""ignoreProtectedModeSettings"", true); desiredCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); desiredCapabilities.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, true); desiredCapabilities.setCapability(""nativeEvents"", true); desiredCapabilities.setCapability(""enablePersistentHover"", true);  Can someone please help on this.?  I do not want to use javascript/ actions to click because the same code is being used for chrome. And it would be a rework.","closed","","ShiekhaGB","2018-05-03T10:37:22Z","2019-08-16T02:10:01Z"
"","6383","Selenium:WebElement Not Found by Selenium even though its visible on WebPage","Selenium - 3.13 Windows - 10 TestNG - 6.14  Following code opens a website, which in turn opens another website.On this opened website the web element is not found by selenium.Kindly intervene.  ``` package onlinePractice;  import java.util.ArrayList;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait; import org.testng.annotations.Test;  public class testCasesphpTravelsTest {      String baseUrl = ""http://phptravels.com/demo/"";     String driverPath = ""C:/Marionette/geckodriver.exe"";     WebDriver driver;      @Test   public void login() {   System.setProperty(""webdriver.gecko.driver"", driverPath);   driver = new FirefoxDriver();   driver.get(baseUrl);    WebElement login = driver.findElement(By.linkText(""LOGIN""));    if (login.isDisplayed())    login.click();    WebElement email = driver.findElement(By.xpath(""//input[@id='inputEmail']""));  } } ```","closed","","SudeeptMohan","2018-09-08T16:11:49Z","2019-08-15T12:09:50Z"
"","6626","selenium-webdriver gem version jumped from 3.14.1 to 3.141.0.","Seems like we may have skipped 127 minor versions or made a typo. https://rubygems.org/gems/selenium-webdriver","closed","","anovadox","2018-11-06T21:45:05Z","2019-08-15T06:09:39Z"
"","5975","How to execute javascript with specified ""type""?","See the following code, two pieces of javascript has ""type"". When I run the first piece of code by ``driver.ExecuteScript('MathJax.Hub.Config({TeX: { extensions: [""color.js"",""autoload-all.js""] }});')``, it does not work. I am told the code need to be executed with ""type"" being ""text/x-mathjax-config"" when the page loads. How do I achieve this in selenium?  ``` html          colorbox                 MathJax.Hub.Config({         TeX: { extensions: [""color.js"",""autoload-all.js""] }       });                      \( \colorbox {red} x y z \)     ```","closed","","tonyriverms","2018-06-02T02:54:06Z","2019-08-16T00:09:43Z"
"","6429","Safari-specific check of returned 'browserName' capability should be case-insensitive","safaridriver now returns the browser name as reported by the user agent. Don't assume a specific casing; it's capitalized in Safari 12 and later.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6429)","closed","","burg","2018-09-19T16:23:56Z","2018-09-19T19:05:25Z"
"","6401","Safari-specific check of returned 'browserName' capability should be case-insensitive","safaridriver now returns the browser name as reported by the user agent. Don't assume a specific casing; it's capitalized in Safari 12 and later.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","burg","2018-09-12T16:15:10Z","2018-09-12T21:35:09Z"
"","5905","Ruby selenium driver throw lots of warnings","Runing tests/specs with warnings enabled (`ruby -w`) adds a lot of noise.  ~~~ selenium-webdriver-3.12.0/lib/selenium/webdriver/remote/capabilities.rb:53: warning: method redefined; discarding old javascript_enabled selenium-webdriver-3.12.0/lib/selenium/webdriver/remote/capabilities.rb:40: warning: previous definition of javascript_enabled was here selenium-webdriver-3.12.0/lib/selenium/webdriver/remote/capabilities.rb:209: warning: method redefined; discarding old proxy=  selenium-webdriver-3.12.0/lib/selenium/webdriver/remote/capabilities.rb:44: warning: previous definition of proxy= was here selenium-webdriver-3.12.0/lib/selenium/webdriver/remote/w3c/capabilities.rb:226: warning: method redefined; discarding old proxy=  selenium-webdriver-3.12.0/lib/selenium/webdriver/remote/w3c/capabilities.rb:63: warning: previous definition of proxy= was here selenium-webdriver-3.12.0/lib/selenium/webdriver/common/service.rb:132: warning: instance variable @process not initialized ~~~  To reproduce the issue just run the test suite with warnings enabled. (`rspec -w`).  Regards.","closed","C-rb,","eloyesp","2018-05-16T19:41:21Z","2019-08-16T01:09:51Z"
"","6055","Enable reading timeouts on non-spec driver instances","Right now, you can set e.g. `ImplicitWait` on a  non-W3C-compliant driver instance: https://github.com/SeleniumHQ/selenium/blob/85318cb2af44e768ec7041891e3ecf52b00039bd/dotnet/src/webdriver/Remote/RemoteTimeouts.cs#L167-L168  But not get one: https://github.com/SeleniumHQ/selenium/blob/85318cb2af44e768ec7041891e3ecf52b00039bd/dotnet/src/webdriver/Remote/RemoteTimeouts.cs#L130  This shouldn't need to be the case. Whatever is going on internally to set the timeout should be able to store it if it has not been already, and read it too.  One use case for this is the ability to [temporarily suspend implicit waiting](https://stackoverflow.com/a/23359199) without having direct access to the original wait times.","closed","","Arithmomaniac","2018-06-21T14:59:59Z","2019-08-14T23:10:02Z"
"","5855","Removed","Removed","closed","C-py,","leMenace","2018-05-03T02:02:23Z","2019-08-16T03:09:57Z"
"","6591","Cleanup: Remove unused imports","Remove unused imports in java/client.  ### Why? - To prevent unwanted dependencies. - A lot of warnings might hide real problems.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6591)","closed","","JohanBrorson","2018-10-29T09:23:40Z","2018-10-29T12:20:46Z"
"","6647","[Ruby] delete unnecessary return value, nil","Refactoring. Only delete unnecessary return value nil. Because ruby's default return value is nil.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6647)","closed","","chiba3","2018-11-12T12:30:23Z","2018-11-14T14:52:45Z"
"","6228","XXE Vulnerability","Prevent XXE attacks in xml processing.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","FlXME","2018-07-30T21:37:27Z","2018-09-04T20:02:22Z"
"","6756","Keydown and keycords of Action class not working for key presses such as t or f in firefox version 64","Plateform:  Windows 7 Firefox version 64 selenium-java-3.141.59 Firefox Browser Driver: geckodriver-v0.23.0 -------------------------------------------------------------- STR: When I try to simulate keystrikes like control + F or control + t , no new tab or search box appears in the browser. ``` WebElement ele = driver.findElement(By.cssSelector(""body"")); Actions action = new Actions(driver); 	action.keyDown(Keys.CONTROL).sendKeys(ele,Keys.chord(""f"")).keyUp(Keys.CONTROL).build().perform(); ```  Attaching console logs. [BUG.zip](https://github.com/SeleniumHQ/selenium/files/2682661/BUG.zip)","closed","","99nimsoft","2018-12-15T13:52:06Z","2019-08-15T02:09:49Z"
"","6721","Add support for 'strictFileInteractability' W3C capability","Per recent spec draft changes, 'strictFileInteractability' is now a standardized capability. At a minimum, it needs to be added to the whitelist in remote/webdriver.py so that it does not get stripped. I don't know what else should be done for other language bindings.","closed","C-nodejs,","burg","2018-12-04T01:09:27Z","2020-04-02T14:32:06Z"
"","6206","[Documentation] Update link to [GridPlatforms] in Wiki for DesiredCapabilities","Page: https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities Text: For more information see **[GridPlatforms]** Link: GridPlatforms Actual value: https://github.com/SeleniumHQ/selenium/wiki/GridPlatforms.md Expected value: https://github.com/SeleniumHQ/selenium/wiki/Grid-Platforms","closed","","vefimofff","2018-07-26T09:44:36Z","2019-08-15T17:09:56Z"
"","6246","Selenium/py does not distribute tests/license","Package published on pypi.python.org does not contain the tests and license file.  The license should be distributed with the tarball based on its terms and the tests would make it easier for distributions to validate if selenium is at least basically functional in their enviroment.","closed","C-py,","scarabeusiv","2018-08-03T11:36:02Z","2019-08-15T11:09:38Z"
"","6743","Windows Server 2012 R2- IE 11(Version - 11.0.9600.19180)- Error -org.openqa.selenium.NoSuchWindowException: Unable to get browser","OS: Windows Server 2012 R2 (64 bit) Selenium Version: 3.13.0 /3.14.0/3.141.59 Browser: Internet explorer via IEDriverServer 32bit (Version 3.13.0 / 3.14.0) Browser Version: IE 11 (Version - 11.0.9600.19180) Note : All IE Protected zones set correctly and added website under trusted websites.  Snippet Java code:(Steps to Reproduce) public static void main(String[] args) throws InterruptedException { 		String driverPath = ""D:\iedriver.exe""; 		System.setProperty(""webdriver.ie.driver"", driverPath); 		DesiredCapabilities  capabilities = DesiredCapabilities.internetExplorer(); 		InternetExplorerOptions io = new InternetExplorerOptions(); 		io.merge(capabilities); 		InternetExplorerDriver driver = new InternetExplorerDriver(io); 		driver.get(""https://AUTTest.com""); 		Thread.sleep(9000); 		String title = driver.getTitle(); 		System.out.println(title); 		driver.quit();; 	}   Error : started InternetExplorerDriver server (32-bit) 3.13.0.0 Listening on port 44853 Only local connections are allowed Dec 11, 2018 4:10:55 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" org.openqa.selenium.NoSuchWindowException: Unable to get browser Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:19.891Z' System info: host: 'xyzzzz', ip: '1.xx.xx.12', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_172' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:44853/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: d0371b01-d702-4abf-8396-13ef490f61d5 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605) 	at org.openqa.selenium.remote.RemoteWebDriver.getTitle(RemoteWebDriver.java:280) 	at Test.main(Test.java:25)  Expected : IE browser should load and perform the expected actions. Actual : Error -org.openqa.selenium.NoSuchWindowException: Unable to get browser","closed","D-IE,","santoshchk","2018-12-11T11:52:45Z","2021-09-05T08:08:26Z"
"","6688","headless chrome not working in java","OS: Windows 7 ChromeDriver 2.44.609538 selenium verison 3.141.59   it shows org.openqa.selenium.remote.ProtocolHandshake createSession  Detected dialect: OSS  it works without adding chromeOptions.addArguments(""--headless"");  already edited","closed","R-awaiting answer,","batof","2018-11-26T10:28:58Z","2019-08-15T01:09:39Z"
"","6779","Could not do Arrow down using sendKeys(Keys.ARROW_DOWN) in chrome","OS: windows 10 x64 Selenium Version: 3.141.59 Browser: Google Chrome( 71.0.3578.98 (Official Build) (64-bit))/Firefox(60.4.0esr (32-bit)) Chrome Driver Version : ChromeDriver 2.45  Expected Behavior - **act.contextClick(tutorial).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ENTER).build().perform();**  should press arrow down on context menu and then press ENTER.  Actual Behavior - it doesn't work, it is not pressing arrow down.  Steps to reproduce - System.setProperty(""webdriver.chrome.driver"", ""drivers/chromedriver.exe""); ChromeDriver driver = new ChromeDriver();// browser open driver.get(""http://toolsqa.com/automation-practice-form""); WebElement tutorial = driver.findElement(By.xpath(""//div/ul[@id='primary-menu']/li/a/span/span[contains(.,'Tutorial')]"")); Actions act = new Actions(driver); act.moveToElement(tutorial).build().perform(); act.contextClick(tutorial).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ENTER).build().perform();","closed","D-chrome,","sureshshaw","2018-12-21T07:14:08Z","2019-08-14T15:10:01Z"
"","5833","java-client's NewSessionPayload.class conflict with selenium's NewSessionPayload.class","OS: Windows 10 Selenium Version: 3.9.1 Browser: Firefox Browser Version: 59.0.2 (64-bit)   ## Expected Behavior - When start Firefox driver will call class NewSessionPageload.java of selenium instead call NewSessionPageload.java of java-client. ## Actual Behavior - When start Firefox driver  called class NewSessionPageload.java of java-client  instead call NewSessionPageload.java of selenium. - Error message. **Exception in thread ""main"" org.openqa.selenium.InvalidArgumentException: firefox_profile is not the name of a known capability or extension capability**  ## Steps to reproduce   - Please run source code to reproduce : ```     public class FirefoxTest { 	public static void main(String[] args) {          // declaration and instantiation of objects/variables         System.setProperty(""webdriver.gecko.driver"", ""/path/to/geckodriver_win64.exe"");                   FirefoxProfile ffprofile = new FirefoxProfile();     	FirefoxOptions firefoxOptions = new FirefoxOptions();     	firefoxOptions.setProfile(ffprofile); 	WebDriver driver = new FirefoxDriver(firefoxOptions);         String baseUrl = ""http://demo.guru99.com/test/newtours/"";         String expectedTitle = ""Welcome: Mercury Tours"";         String actualTitle = """";         driver.get(baseUrl);         // get the actual value of the title         actualTitle = driver.getTitle();         /*          * compare the actual title of the page with the expected one and print          * the result as ""Passed"" or ""Failed""          */         if (actualTitle.contentEquals(expectedTitle)){             System.out.println(""Test Passed!"");         } else {             System.out.println(""Test Failed"");         }              //close Fire fox          driver.close();            }        } ``` ------------------------------------------pom.xml file------------------------------------------------------             	 	4.0.0 	DemoFirefoxDriver 	DemoFirefoxDriver 	0.0.1-SNAPSHOT 	 		3.9.1 	 	 		 			 				 				org.apache.maven.plugins 				maven-jar-plugin 			 		 	 	 		 			io.appium 			java-client 			6.0.0-BETA3 		 		 			org.seleniumhq.selenium 			selenium-server 			${selenium.webdriver.version} 			 				  					org.apache.httpcomponents 					httpclient 				 				 					xalan 					xalan 				 			 		                  			org.seleniumhq.selenium 			selenium-java 			${selenium.webdriver.version} 			 				 					org.seleniumhq.selenium 					selenium-firefox-driver 				 				 					xalan 					xalan 				 			 		 		 		 			org.seleniumhq.selenium 			selenium-firefox-driver 			${selenium.webdriver.version} 		  		 		 			org.seleniumhq.selenium 			selenium-ie-driver 			${selenium.webdriver.version} 		  		 		 			org.seleniumhq.selenium 			selenium-chrome-driver 			${selenium.webdriver.version} 		  		 		 			org.seleniumhq.selenium 			selenium-edge-driver 			${selenium.webdriver.version} 		  		 		 			org.seleniumhq.selenium 			selenium-safari-driver 			${selenium.webdriver.version} 		 		 			com.google.guava 			guava 			24.0-jre 		 	   ------------------------------------------------------------------------------------------------------------------- - This is a bug of selenium? - Do Anyone have the workaround for this issue? Please advice me. Thank in advance!","closed","","Tenit2012","2018-04-26T10:13:11Z","2019-08-16T04:09:49Z"
"","6565","OpenQA.Selenium.ElementNotVisibleException : element not interactable while clicking in C#","OS: Windows 10 Selenium Version: 3.14.0 Browser: Chrome ChromeDriver : 2.42.0.1  There is a very strange behavior for the C# bindings while trying to click on an element. **I tried the same with java bindings and everything is working smooth and fine with same selector.**  In C# I am getting the following exception while clicking an element: `Message: OpenQA.Selenium.ElementNotVisibleException : element not interactable   (Session info: chrome=69.0.3497.100)   (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.14393 x86_64)`  The element looks like below as I can not provide the URl as its an internal project and can not be accessed. ```    ```  I am using this xpath : //div[@data-offset='0']//span[@title='Click to add to basket']  **Not sure what is special here in C# binding and not able to click the element as the element is visable and I can click the element using the Java script (IJavaScriptExecutor) directly**  Expected Behavior - Element should be clicked   Actual Behavior - Exception for the visiblity of the element. OpenQA.Selenium.ElementNotVisibleException  Steps to reproduce - Trying to simple click on the element. Please have a look at the Screenshot for the Html as Url can not be accessed from outside. ![click-issue-with-webdriver](https://user-images.githubusercontent.com/4025540/47294643-fbaae500-d60d-11e8-8b68-1f07018750c9.PNG)","closed","R-awaiting answer,","pgaria","2018-10-22T13:21:44Z","2019-08-15T06:09:51Z"
"","5835","Error message has wrong path to WebDriver download link","OS: OSX Selenium Version: ""selenium-webdriver"": ""=3.3.0"" Browser: Firefox  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  Browser Version:   ``` 🐼 $ /Applications/Firefox\ Nightly.app/Contents/MacOS/firefox --version Mozilla Firefox 61.0a1 ```  ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","joshunger","2018-04-26T16:25:22Z","2019-08-16T04:09:53Z"
"","5848","[Mac OS][C#] Safari Driver - Disable Images","OS: OS X Selenium Version: 3.11.2 Browser: Safari 11.1  Hi there,  How can i disable rendering of images in SafariDriver to save bandwidth?  Thanks","closed","","kenofori","2018-05-01T07:59:13Z","2019-08-16T04:09:34Z"
"","6658","'POST /session//moveto' was not found [Safari 12]","OS: macOS Mojave Selenium Version: selenium-webdriver@3.6.0 (nodeJS) Browser: Safari Browser Version: 12  Using protractor 5.4.1 I sent the following command to Safari to move the mouse and perform some clicks on the page:  ``` browser.driver.actions()             .mouseMove(protractorElement.getWebElement(), {x: 200, y: 0})             .perform(); ```  When running this against Safari 11 (on macOS High Sierra) the command works because the Safari driver for Safari 11 uses [JSON Wire Protocol](https://developer.apple.com/documentation/webkit/macos_webdriver_commands_for_safari_11_1_and_earlier).   When running this same command against Safari 12 (on macOS Mojave) the command fails with the following error message because Safari driver for Safari 12 uses [W3C endpoints](https://developer.apple.com/documentation/webkit/macos_webdriver_commands_for_safari_12_and_later)  ``` UnknownCommandError: The command 'POST /session//moveto' was not found.     at Object.throwDecodedError ([...]\node_modules\selenium-webdriver\lib\error.js:514:15)     at parseHttpResponse ([...]\node_modules\selenium-webdriver\lib\http.js:519:13)     at doSend.then.response ([...]\node_modules\selenium-webdriver\lib\http.js:441:30)     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: mouseMove     at thenableWebDriverProxy.schedule ([...]\node_modules\selenium-webdriver\lib\webdriver.js:807:17)     at actions.map.action ([...]\node_modules\selenium-webdriver\lib\actions.js:124:23)     at Array.map ()     at [...]\node_modules\selenium-webdriver\lib\actions.js:123:29     at TaskQueue.execute_ ([...]\node_modules\selenium-webdriver\lib\promise.js:3084:14)     at TaskQueue.executeNext_ ([...]\node_modules\selenium-webdriver\lib\promise.js:3067:27)     at asyncRun ([...]\node_modules\selenium-webdriver\lib\promise.js:2927:27)     at [...]\node_modules\selenium-webdriver\lib\promise.js:668:7     at      at process._tickCallback (internal/process/next_tick.js:188:7) From: Task: ActionSequence.perform     at ActionSequence.perform ([...]\node_modules\selenium-webdriver\lib\actions.js:122:33)    [...] //","closed","","pittgoose","2018-11-19T08:24:35Z","2019-08-15T05:09:42Z"
"","6250","Python RemoteDriver regression in version 3.14.0","OS: macOS Selenium Version: 3.14.0 (Python bindings) Browser:  Apple Safari Browser Version: 11.1.1 (13605.2.8)  ## Expected Behavior -  The RemoteDriver should be capable of sending multiple commands to the same session.  ## Actual Behavior -  The RemoteDriver fails to interact with a session following creation.  ## Steps to reproduce -  Given a file `repro.py`:  ```py from selenium import webdriver driver = webdriver.Remote('http://127.0.0.1:4444') driver.title ```  And a running instance of `safaridriver` via      $ safaridriver --port 4444  Version 3.13.0 executes the script with no errors. Version 3.14.0 reports the following error:      Traceback (most recent call last):       File ""repro.py"", line 3, in          driver.title       File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 341, in title         resp = self.execute(Command.GET_TITLE)       File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute         self.error_handler.check_response(response)       File ""/Library/Python/2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response         raise exception_class(value)     selenium.common.exceptions.WebDriverException: Message:   (The reported error message is truncated.)","closed","C-py,","jugglinmike","2018-08-04T02:27:45Z","2019-08-15T15:09:44Z"
"","6564","Files in Selenium-Java-3.14.0.zip shows modified date as “2/1/1985”","OS:  Windows 8.1 Selenium Version:  3.14.0  When i opened the zip file of Selenium-Java latest version (3.14.0), i observed that the modified date for all the files is shown as 2/1/1985 !  ## Expected Behavior - Modified date should be the date when latest zip is releases  ## Actual Behavior - Modified date for all files shown as “2/1/1985”.  ## Steps to reproduce - 1. Download and open Zip file for latest selenium (selenium-java-3.14.0.zip) available at ""https://www.seleniumhq.org/download/""  ![image](https://user-images.githubusercontent.com/17757149/47291433-38340c00-d621-11e8-9770-b93551f0434f.png)","closed","C-infra,","SameerAjitPatil","2018-10-22T12:11:15Z","2019-08-15T05:09:36Z"
"","6737","Setting of proxy on chrome browser dont work anymore","OS:  Windows 8.1 Browser:  Chrome Browser version:  70.0.3538.110  Browser Driver version: ChromeDriver 2.43,  Language c# Selenium Grid version : 3.141.59   I tried to change my browser ip address  using the code below , but it didnt  work,  i dont know if there is another new way to do this please advise   thanks      OpenQA.Selenium.Proxy _proxy = new OpenQA.Selenium.Proxy();                     _proxy.HttpProxy = 209.97.155.3:3128                     ChromeOptions options = new ChromeOptions();                     options.Proxy = _proxy;                       var driverService = ChromeDriverService.CreateDefaultService();                     driverService.HideCommandPromptWindow = true;                      var driver = new ChromeDriver(driverService, options, TimeSpan.FromSeconds(70));","closed","","vitalisc","2018-12-10T12:49:49Z","2019-08-15T03:09:35Z"
"","6650","[SEVERE] Driver will not wait longer than 60 seconds","OS:  Windows 8 Selenium Version:  3.1.41.0 Browser:  Chrome Browser Version:  70.0.3538.102  Issue : Please take a look at this screenshot http://prntscr.com/lhrr4s This happen almost  all the time both  navigating on a web page or clicking element on a web page  Everything are set to 60 seconds, which is not right, not everyone  have access to fast internet , i have tried many solutions i saw online to increase the timeout , but none worked , it will always stop at 60 seconds   Expected Behavior : selenium webdriver timeout to be dynamic so that users can choose the timeout that works for them, or if there is a  way to modify the timeout  please let me know","closed","","vitalisc","2018-11-13T12:52:27Z","2019-08-15T03:10:00Z"
"","6715","throws exception if element does not display","OS:  Windows 8 Browser: Chrome Browser version:  70.0.3538.110  Selenium version (if applicable): 3.141.59   here is my code sample   if (driver.FindElement(PLAYBUTTON).Displayed)              {                 while (driver.FindElement(PLAYBUTTON).Displayed)                  {                     driver.FindElement(PLAYBUTTON).Click();                     Thread.Sleep(3000);                                       }             }  what i tried to do above is , if the element is displayed then perform the while action but if not , it perform the action on the else statement . The  challenge here is that it throws exception  when the element is not found  please how do i achieve this  thanks","closed","","vitalisc","2018-12-02T16:16:05Z","2019-08-15T03:09:56Z"
"","6572","Unable to click at a specific position in a chart or on a canvas starting with selenium 3.5","OS:  Windows 7, 10 Selenium Version:  3.5+ Browser:  Chrome  We have an issue with the latest selenium server version, starting with 3.5. We can reproduce the issue when we try to interact with a chart or a canvas. So to identify the elements in a canvas and a chart we get a json from the client side that specifies the coordinates of the element and based on those we move the mouse to the element and click on it. This works perfectly with selenium-server 3.4 but if we try to upgrade the version all tests that are trying to interact with a chart and a canvas start failing. I've tried all the chromedriver versions and the issue is not related to the browser or the driver. Also, I don't get any error in the selenium console, by clicking on an element in a chart or canvas we should be able to see a new dialog and the tests are failing because the dialog is not visible.","closed","R-awaiting answer,","eusebiuplosnita","2018-10-24T11:14:11Z","2019-08-15T03:09:40Z"
"","6317","Chromedriver quit() method doesn't close all chrome.exe processes","OS:  Windows 7 (64-bit) Selenium Version:  3.14 Browser:  Chrome, Firefox  Browser Version:   Google Chrome 68.0.3440.106 (Official Build) (64-bit)  ## Expected Behavior - chromedriver.exe processes to be closed. geckodriver.exe processes to be closed.  ## Actual Behavior - Hello guys, since a month ago, we're expecting some kind of problems trying to kill the chromedriver.exe and geckodriver.exe processes.  We usually run several tests simultaneously and when the TestSuite ends, many chromedriver.exe / geckodriver.exe processes still there on the system.  This problem causes the system goes slower and slower, causing at the end the system crashes.  This is the message we're receiving from the driver:   Trace init: ``` Starting ChromeDriver 2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e) on port 36461 Only local connections are allowed. ago 21, 2018 1:59:03 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS ```   When we try to quit() the driver: ``` INFO: Unable to drain process streams. Ignoring but the exception being swallowed follows. org.apache.commons.exec.ExecuteException: The stop timeout of 2000 ms was exceeded (Exit value: -559038737) 	at org.apache.commons.exec.PumpStreamHandler.stopThread(PumpStreamHandler.java:295) 	at org.apache.commons.exec.PumpStreamHandler.stop(PumpStreamHandler.java:181) 	at org.openqa.selenium.os.OsProcess.destroy(OsProcess.java:135) 	at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:153) 	at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:223) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:95) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605) 	at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:448) 	at utils.Utils.quit(Utils.java:2783) 	at utils.Utils.guardarResultado(Utils.java:2816) 	at com.bbva.ebcf.pon.LimitePonMismoUsuarioFirmando.tearDown(LimitePonMismoUsuarioFirmando.java:163) 	at junit.framework.TestCase.runBare(TestCase.java:140) 	at junit.framework.TestResult$1.protect(TestResult.java:110) 	at junit.framework.TestResult.runProtected(TestResult.java:128) 	at junit.framework.TestResult.run(TestResult.java:113) 	at junit.framework.TestCase.run(TestCase.java:124) 	at junit.framework.TestSuite.runTest(TestSuite.java:243) 	at junit.framework.TestSuite.run(TestSuite.java:238) 	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)  ago 22, 2018 9:31:43 AM org.openqa.selenium.os.OsProcess destroy SEVERE: Unable to kill process java.lang.ProcessImpl@70eecdc2 ```  This is not happening every single time, for example, if we try to reproduce the error in oir IDE's it is almost impossible. It seems that is something related whith too many chrome processes running at the same time (My guess).  This is the method we call in every single test we run (in @After ) we close and quit the driver:  ``` 	public static void quitDriver(WebDriver driver) 	{  		try 		{  			driver.close(); 		} 		catch(Exception e1) 		{ 			 		}  		try 		{ 			driver.quit(); 		} 		catch(Exception e) 		{  		}  	} ```  And this is the way we start the driver:  ``` 	System.setProperty(""webdriver.chrome.driver"", ""lib/chromedriver.exe"");  	String downloads = new File(""downloads"").getAbsolutePath();				 	HashMap chromePrefs = new HashMap(); 	chromePrefs.put(""profile.default_content_settings.popups"", 0); 	chromePrefs.put(""download.default_directory"", downloads);	 	chromePrefs.put(""download.prompt_for_download"", false); 	chromePrefs.put(""download.directory_upgrade"", true);  	ChromeOptions options = new ChromeOptions(); 	options.setExperimentalOption(""prefs"", chromePrefs); 	options.addArguments(""enable-automation""); 	options.addArguments(""start-maximized""); 	options.addArguments(""disable-popup-blocking""); 	options.addArguments(""disable-default-apps"");  	//options.addArguments(""--no-sandbox""); 	options.addArguments(""ignore-certificate-errors""); 	 	LoggingPreferences logPrefs = new LoggingPreferences(); 	logPrefs.enable(LogType.PERFORMANCE, Level.ALL); 	 	options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs); 	options.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 	 	driver = new ChromeDriver(options); ```   We have tried almost everything (we are 5 testing engineers working on the same project) and the processes are still there.  ![image](https://user-images.githubusercontent.com/17066295/44455192-b7936800-a5fd-11e8-8eb5-e5c93e6eb516.png)  Windows can't kill the process with taskkill /f /im chromedriver.exe  ![image](https://user-images.githubusercontent.com/17066295/44455265-e27dbc00-a5fd-11e8-8a59-a1492aba5176.png)  So.... Please, if someone have some idea, we would appreciate it. We have read a lot, before opening this issue.  Thank you guys! Thank you community!","closed","OS-windows,","nemirof","2018-08-22T09:32:07Z","2019-08-14T19:09:59Z"
"","6548","Unable to start Firefox 62 with extensions","OS:  Windows 10 Selenium Version:  Selenium 3.14 Browser:  Firefox 62 Browser Version:  62.0.3 (64-bits) Geckodriver: 0.23, 0.22, 0.21, 0.20  ## Expected Behavior - Working firefox with extension enabled  ## Actual Behavior - No extensions enabled  ## Steps to reproduce - Create a Firefox driver using the follwoing code, and check if the extension is loaded  ``` public static IWebDriver GetFirefoxDriver()         {             Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);              var exePath = Assembly.GetExecutingAssembly().Location;             var directory = Path.GetDirectoryName(exePath);              Console.WriteLine(""Trying to start Firefox in directory: "" + directory);              FirefoxOptions ffOptions = new FirefoxOptions();             ffOptions.BrowserExecutableLocation = ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"";              FirefoxProfile profile = new FirefoxProfile();             profile.DeleteAfterUse = true;             profile.AddExtension(Path.Combine(directory, ""ublock.xpi""));              ffOptions.Profile = profile;             ffOptions.AcceptInsecureCertificates = true;                          var driver = new FirefoxDriver(directory, ffOptions);                          //1366×768             var padding = (ReadOnlyCollection)driver.ExecuteScript(""return [window.outerWidth-window.innerWidth, window.outerHeight-window.innerHeight];"");             driver.Manage().Window.Size = new Size(1366 + int.Parse(padding[0].ToString()), 768 + int.Parse(padding[0].ToString()));              return driver;         } ```","closed","D-firefox,","AndreSteenbergen","2018-10-17T12:38:42Z","2022-01-25T00:07:32Z"
"","6611","Capabilities not being passed to IEDriverServer in latest version","OS:  Windows 10 Selenium Version:  3.14.1 Browser:  Internet Explorer  Browser Version:   11.55.17763.0  Expected Behavior - When sending capability flags, they should be set on the driver Actual Behavior - Capabilities are never set  Steps to reproduce -  ``` from selenium import webdriver capabilities = webdriver.DesiredCapabilities.INTERNETEXPLORER.copy() capabilities['ie.ensureCleanSession'] = True driver = webdriver.Ie(executable_path='e:\\IEDriverServer.exe', capabilities=capabilities) print driver.capabilities ```   > {u'browserVersion': u'11', u'acceptInsecureCerts': False, u'se:ieOptions': {u'ie.browserCommandLineSwitches': u'', u'browserAttachTimeout': 0, u'nativeEvents': True, **u'ie.ensureCleanSession': False**, u'ignoreZoomSetting': False, u'ie.fileUploadDialogTimeout': 3000, u'ignoreProtectedModeSettings': False, u'requireWindowFocus': False, u'elementScrollBehavior': 0, u'initialBrowserUrl': u'http://localhost:61644/', u'enablePersistentHover': True, u'ie.forceCreateProcessApi': False}, u'timeouts': {u'pageLoad': 300000, u'implicit': 0, u'script': 30000}, u'browserName': u'internet explorer', u'setWindowRect': True, u'proxy': {}, u'pageLoadStrategy': u'normal', u'platformName': u'windows'}","closed","","vibaldem","2018-11-02T19:10:50Z","2019-08-15T06:09:54Z"
"","6428","chromedriver launches browser but doesnt do anything","OS:  Windows 10 Selenium Version:  3.14.0 Browser:  Google Chrome  Browser Version: 69.0.3497.81 (Official Build) (32-bit) Driver Version: ChromeDriver 2.42  I am using jupyter notebook to run my code.  Trying to launch browser and direct to any site. Tested with www.google.ca. ``` from selenium import webdriver driver = webdriver.Chrome() driver.get('www.google.ca') ``` Browser will launch with 'data:,' in the url and will not do anything else. It will just be there until I manually close it at which point I get a SessionNotCreatedException.   It was working fine until the latest chrome update about two weeks prior. Any idea on whats wrong?","closed","","AingharanU","2018-09-19T15:38:19Z","2019-08-15T10:10:02Z"
"","6301","GridException. Cannot extract a capabilities from the request. When create RemoteWebDriver by RemoteSessionSettings","OS:  Windows 10 Selenium Version:  3.14 for .net ![2018-08-17 12_32_47-billing_tests d__git_billingservice test - _ui test_packages config - jetbr](https://user-images.githubusercontent.com/13627447/44259273-ba671500-a219-11e8-8210-d0f8d974c8de.jpg) Geckodriver Version: 0.21.0 Browser:  Firefox Browser Version:  61.0.2 (64-bit)  ## Log -  2018-08-17 12:05:20.853:WARN:osjs.HttpChannel:qtp1627821297-17: /wd/hub/session java.io.IOException: org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request: {""capabilities"":{""alwaysMatch"":{""browserName"":""firefox"",""moz:firefoxOptions"":{""prefs"":{""security.sandbox.content.level"":5,""plugin.state.flash"":2,""permissions.default.desktop-notification"":2,""browser.defaultbrowser.notificationbar"":""false"",""dom.webnotifications.enabled"":""false"",""toolkit.cosmeticAnimations.enabled"":""false"",""layout.animated-image-layers.enabled"":""false"",""browser.suppress_first_window_animation"":""false""}},""marionette"":true,""enableVNC"":true}}} ## Expected Behavior - Created RemoteWebdriver instance. ## Actual Behavior - GridException: Cannot extract a capabilities from the request ## Steps to reproduce - 1. Create FirefoxOptions like `{   ""browserName"": ""firefox"",   ""moz:firefoxOptions"": {     ""prefs"": {       ""security.sandbox.content.level"": 5,       ""plugin.state.flash"": 2,       ""permissions.default.desktop-notification"": 2,       ""browser.defaultbrowser.notificationbar"": ""false"",       ""dom.webnotifications.enabled"": ""false"",       ""toolkit.cosmeticAnimations.enabled"": ""false"",       ""layout.animated-image-layers.enabled"": ""false"",       ""browser.suppress_first_window_animation"": ""false""     }   },   ""marionette"": true,   ""enableVNC"": true }`  2. Create instanse RemoteSessionSettings, sending to constructor FirefoxOptions ![2018-08-17 12_30_42-billing_tests d__git_billingservice test - d__git_plarium wi webdriver support](https://user-images.githubusercontent.com/13627447/44265694-5c91f780-a230-11e8-9f36-53669a17eb6d.jpg)  3. Try create RemoteWebDriver, use instanse RemoteSessionSettings as desiredCapabilities arg. ![2018-08-17 12_31_28-billing_tests d__git_billingservice test - c__users_v gurov_ rider2018 1_confi](https://user-images.githubusercontent.com/13627447/44259193-8be93a00-a219-11e8-9abe-7f9469f95480.jpg)","closed","","gur2048","2018-08-17T09:33:38Z","2019-08-15T15:09:41Z"
"","6136","Spelling mistake/Text Change","OS:  Windows 10  Selenium Version: 3.1.1, IDE  Browser:  Chrome   Browser Version:  67.0.3396.99 (64-bit)   ## Steps to reproduce -  When recording a session, where there is a Command that is 'open', click on that line. Then click on 'Reference' and under the description for open url - Opens a URL and waits for teh page to load before proceeding. This accepts both relative and absolutes URLs.  Just a spelling mistake for the which is down as teh.  ![screenshot_1](https://user-images.githubusercontent.com/33258849/42517113-e3db8c80-8456-11e8-9242-f0fb9d0ad436.png) ![screenshot_2](https://user-images.githubusercontent.com/33258849/42517114-e3f95e18-8456-11e8-9fe1-06b37c13ecc7.png)","closed","","mattyb6","2018-07-10T14:45:22Z","2019-08-15T19:09:48Z"
"","6473","C# - Chrome Browser Resizing not working as expected!","OS:  Windows Selenium Version:  3.14 Browser:  Chrome Browser Version:  69.0.3497.92 ChromeDriver: 2.42.0.1  We have a wrapper class around selenium and I am detecting that browser resizing is not working as expected.  C# - Unit test fails:             _driver.Navigate().GoToUrl(url);             var size = new System.Drawing.Size(500, 500);             _driver.Manage().Window.Size = size;                         Assert.AreEqual(new System.Drawing.Size(500, 500), _driver..Manage().Window.Size, ""The browser size was not changed as expected!"");  Error Message: The browser size was not changed as expected!   Expected: {Width=500, Height=500}   But was:  {Width=605, Height=500}  Will continue to research and its not high priority for me but maybe others.  I was working properly on Chrome 64 with selenium 3.12.1 & ChromeDriver 2.37.0.  Thanks,  Jason T.","closed","","jtorres006","2018-10-02T16:54:57Z","2019-08-15T09:09:37Z"
"","6108","Python and headless Firefox - Broken Pipe Error","OS:  Ubuntu 16.04 (64-bit) Selenium Version:  3.13.0 Python Version: 3.5.2 Browser: Mozilla Firefox 60.0.2 - GeckoDriver 0.21.0 (64-bit)  ## Expected Behavior - Headless firefox webdriver should normally load the web page with the command browser.get(""https://somewebpage.com"")  ## Actual Behavior - browser.get(url) throws a BrokenPipeError and doesn't load the web page but it works on the second time if you rapidly give the command again    ## Steps to reproduce - ~~~~ import time from selenium import webdriver  fox_opt=webdriver.FirefoxOptions() fox_opt.add_argument('--headless') with webdriver.Firefox(firefox_options=fox_opt) as browser:     time.sleep(10)     browser.get(""https://www.google.com"")   #Here you get a broken pipe error     browser.get(""https://www.google.com"")   #But now everything goes fine ~~~~","closed","","glumia","2018-07-03T07:57:36Z","2019-08-15T20:09:42Z"
"","6431","Add the option for Safari 12 Webdriver to use '--legacy' argument","OS:  OSX High Sierra Selenium Version:  3.14.0 Browser:  Safari 12  The implementation of the Safari 12  WebDriver now supports the W3C endpoints **by default**, which may be causing issues if you're using a Framework like Watir, which aren't compatible yet: https://developer.apple.com/documentation/webkit/macos_webdriver_commands_for_safari_12_and_later  Browser Version:  Version 12.0 (13606.2.11)  ## Expected Behavior - Add the ability to pass ""--legacy"" flag, if user wants to stay with JSON Wire Protocol  ## Actual Behavior - no option currently available","closed","","charlesmorelle84","2018-09-20T00:01:33Z","2019-08-14T16:09:58Z"
"","5868","selenium-java.3.8.1 download with error version dependencies jar?","OS:  OSX Selenium Version:  3.8.1 Browser:  firefox  Here is content of my project pom file.  ``               org.seleniumhq.selenium             selenium-java             3.8.1  `` But when maven have been resolved and download, the version of jar file downloaded is different from  selenium-java pom file.  Here is the content of  selenium-java pom file. ``             org.seleniumhq.selenium       selenium-api       3.8.1                        org.seleniumhq.selenium       selenium-chrome-driver       3.8.1                        org.seleniumhq.selenium       selenium-edge-driver       3.8.1                        org.seleniumhq.selenium       selenium-firefox-driver       3.8.1                        org.seleniumhq.selenium       selenium-ie-driver       3.8.1                        org.seleniumhq.selenium       selenium-opera-driver       3.8.1                        org.seleniumhq.selenium       selenium-remote-driver       3.8.1                        org.seleniumhq.selenium       selenium-safari-driver       3.8.1                        org.seleniumhq.selenium       selenium-support       3.8.1             ``  Here is screenshots of my project jar file.  ![47449be0-897a-4984-98f8-0cf373832c58](https://user-images.githubusercontent.com/19347423/39760082-fadfd980-5306-11e8-837b-19c81823e939.png)  Any help would be appreciated","closed","C-java,","EvanDylan","2018-05-08T13:32:02Z","2019-08-16T02:09:47Z"
"","6030","Click not executing upon React Js platform","OS:  Mac \ Windows Browser: Chrome 66.0.3359.181 Chrome driver 2.40 Selenium: 3.12.0 React JS version: V16  Since we upgraded react Js version to 16, driver.click() not perform actual selection, the element found but the click taken affectively. I tried by xpath, id, selector. Sending keys is also working.","closed","","omerovadia","2018-06-17T10:25:39Z","2019-08-15T22:09:40Z"
"","6461","Selenium: how to open the chrome with javascript disabled","OS:  Linux Ubuntu 18.04.1 LTS Selenium Version:  Selenium 5.6.0 Browser: Chrome version 69.0.3497.100 (Official Build) (64-bit)  I need to open the Chrome without javascript (with javascript disabled). I managed with Firefox, but no with Chrome. It is my example on Firefox: ``` var webdriver = require('selenium-webdriver'),     firefox = require('selenium-webdriver/firefox'),     By = webdriver.By,     until = webdriver.until;   const options = new firefox.Options().setPreference('javascript.enabled', false);  const driver = new webdriver     .Builder()     .forBrowser('firefox')     .setFirefoxOptions(options)     .usingServer()     .build();  searchTest(driver);  function searchTest(driver) {   driver.get('');    driver.sleep(2000).then(function() {     driver.getTitle().then(function(title) {       if(title === 'my tittle') {         console.log('Test passed');       } else {         console.log('Test failed');       }       //driver.quit();     });   }); } ``` Could someone help me with this issue?  Thanks a lot!","closed","","livyson","2018-09-28T13:46:45Z","2019-08-15T09:09:48Z"
"","6238","execute_async_script after time.sleep causes [Errno 32] Broken pipe","OS:  Linux  Selenium Version:  selenium-3.13.0 Browser:  Firefox Browser Version:  Mozilla Firefox 61.0.1  When sleeping the thread for more then 5 seconds and calling execute_async_script, the function errors with [Errno 32] Broken pipe after script timeout ended without the callback value. Same code works on macos.  ## Expected Behavior execute_async_script returns the callback from the script without any errors.  ## Actual Behavior execute_async_script waits for script timeout then returns with [Errno 32] Broken pipe.  ## Steps to reproduce       from selenium import webdriver     from selenium.webdriver.support.ui import WebDriverWait     import time          driver = webdriver.Firefox()          driver.get('http://example.com')     time.sleep(6)          try:         ret = driver.execute_async_script(""var callback = arguments[arguments.length - 1];setTimeout(function(){callback('done')}, 7000)"")         print('ret '+ ret)     except Exception as e:         print(e) [Errno 32] Broken pipe","closed","","traffisco","2018-08-02T06:12:19Z","2019-08-15T17:09:36Z"
"","5864","Grid doest not work for Chromium in Selenium 3.11","OS:  LINUX Selenium Version:  3.11 Browser:  Chromium  I've tried to perform a test using Selenium grid with Chromium. The test goes just fine with all other browsers, but i have to test it with chromium. The test didn't work (didn't even opened chromium when instantiating RemoteWebDriver) in selenium 3.11. But when i remove the 3.11 version one and install Selenium 3.5, the test goes just fine  PS: The test also works when i open my virtual machine (where i m actually running the test) and test it manually (independent of the selenium version).  Browser Version:  65.0.3325.181  Browser Capabilities:  ``` def chromium_caps(browser, platform=None):     cm_opt = webdriver.ChromeOptions()     cm_opt.binary_location = '/usr/bin/chromium-browser'     cm_caps = DesiredCapabilities.CHROME.copy()     cm_caps.update(cm_opt.to_capabilities())     cm_caps['browserName'] = browser.lower()     cm_caps['platform'] = platform     return cm_caps ```  in Selenium 3.11 the test is expected to go just fine, however it shows an error like this   **WebDriverException: Message: Error forwarding the new session cannot find : Capabilities {browserName: chromium, version: }**  **My grid looks like this** ![image](https://user-images.githubusercontent.com/33036566/39711107-1b957e7c-51f5-11e8-9ae3-93b2fd272b79.png)   # REPRO CASE  - use the capabilities provided to instantiate a RemoteWebDriver, using selenium 3.11 and chromedriver 2.38 - try to run any test with `caps['BrowserName'] = 'chromium'`","closed","","WhiteSummeRK","2018-05-07T12:26:54Z","2019-08-16T03:09:40Z"
"","6102","Unable to launch Safari Technology preview from Selenium in Java","OS:  High Sierra Selenium Version:  3.12 Browser:  Safari Technology Preview 59?  SafariOptions options = new SafariOptions(); 		 options.setUseTechnologyPreview(true); 		WebDriver driver = new SafariDriver(options); 		driver.get(""http://www.google.com"");   Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not create a session: A browser with name 'safari' version '(null)' could not be found on the system. Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:14.902Z' System info: host: 'administrators-MacBook-Pro-4.local', ip: 'fe80:0:0:0:1809:1dd4:6ca6:235b%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.5', java.version: '1.8.0_171' Driver info: driver.version: SafariDriver remote stacktrace:  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:60) 	at com.qa.test.BrowserTest.main(BrowserTest.java:31)","closed","R-awaiting answer,","zaheerakhter","2018-07-02T06:18:36Z","2019-08-15T16:09:43Z"
"","6546","Timeout expired waiting for async script","OS:  **Window 10** Selenium Version: **3.6.0** Browser:  **Internet Explorer** Browser Version: **11.285.17134.0** Node version: **8.12.0** Programming language: **Typescript v3.0**  Hello! I have a several problems with WebDriver. 1. When I execute the following code:  ```typescript  test('IE: execute async js', async () => {         setDriverPath();         const driver = new Builder()             .forBrowser(""ie"")             .build();          const start = new Date().getTime();         await driver.executeAsyncScript(() => window.setTimeout(()=> console.log(""Hello!""), 500));         console.log('Elapsed time: ' + (new Date().getTime() - start) + ' ms');     });  function setDriverPath() {     const driversFolder = path.join(__dirname, ""../drivers"");     if (!process.env.PATH) {         process.env.PATH = driversFolder;     }     else if (!process.env.PATH.includes(driversFolder)) {         process.env.PATH += "";"" + driversFolder;     } };  ``` I get the following error: ![image](https://user-images.githubusercontent.com/33725995/47062394-fa3d7f00-d1ff-11e8-963e-2e57372c51ad.png)  For Chrome and Firefox, it works well.  2. When I use forceCreateProcessApi(true) Internet Explorer doesn't open the page. Code:  ```typescript     test(""IE: forceCreateProcessApi"", async () => {         setDriverPath();          const options = new ie.Options()             .forceCreateProcessApi(true)             .ensureCleanSession(true);          const driver = new Builder()             .forBrowser(""ie"")             .setIeOptions(options)             .build();          await driver.get(""www.google.com"");     });  ``` Link to project: https://github.com/Shukurdin-Aydarov/TestWebDriver","closed","C-nodejs,","d3-shukurdin-aidarov","2018-10-17T05:09:23Z","2019-08-14T15:09:51Z"
"","6098","Unable to handle the Authenticate window in IE11 - Windows 10","OS:   Windows 10 Selenium-Java Version:  3.12.0 Browser:  Internet Explorer 11  While trying to perform a basic Authentication to one of my application using selenium, the code is unable to detect the presence of Alert window. This was working fine with Windows 7 & IE 11. But when the OS got upgraded to Windows 10, application is indefinitely waiting on the line 'wait.until(ExpectedConditions.alertIsPresent());'.  I know this is a duplicate issue, but in most of the cases appending the username and password did the trick, but not in our case. 'driver.get(""http://:@mywebapp.com/someContext/page.jsp"");'  We tried all the approach mentioned in the following link and it dint worked. https://blog.ham1.co.uk/2016/03/05/selenium-allow-basic-auth-in-ie11/ Even after doing the registry changes, the authenticate window is popping up.   Code: ``` 	```  	DesiredCapabilities capability = DesiredCapabilities.internetExplorer(); 		capability.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS,true); 		capability.setCapability(InternetExplorerDriver.INITIAL_BROWSER_URL,""https://www.google.com/""); 		 		 		WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), capability); 		driver.manage().window().maximize(); 		 		driver.get(""http://mywebapp.com/someContext/page.jsp""); 		 		WebDriverWait wait = new WebDriverWait(driver, 10); 		wait.until(ExpectedConditions.alertIsPresent()); 		 		System.out.println(driver.switchTo().alert()); 	  		driver.close();   ``` ``` Error: Exception in thread ""main"" org.openqa.selenium.TimeoutException: Expected condition failed: waiting for alert to be present (tried for 10 second(s) with 500 milliseconds interval) 	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:81) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:271) 	at selenium.perfecto.test.SeleniumIE.main(SeleniumIE.java:56) Caused by: org.openqa.selenium.NoSuchWindowException: Unable to get browser (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 14 milliseconds","closed","","ranju4u6","2018-06-29T13:23:40Z","2019-08-15T16:10:04Z"
"","6155","Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 80070012 (\'There are no more files.\')","OS:   Windows Server 2016 Selenium Version:   3.4.0 Browser:   Internet Explorer 11  I have setup the selenium cluster with IE browser to test Nightwatch automation script on daily basis. I'm using 32 bit IE driver.   ISSUE: - Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 80070012 (\'There are no more files.\')   I'm getting the above error message and it requires me to restart my ec2 instance to get this error resolved.  I have configured the latest configuration suggested by selenium GitHub repository but no luck. appreciate your quick response. thanks in advance.","closed","","santhoshrenga","2018-07-13T07:41:12Z","2019-08-15T19:09:37Z"
"","5934","Grid 3.12.0 with Appium nodes -> Failed to check status of node: unexpected end of stream on Connection","OS:   Windows Server 2012 R2 Selenium Version:   3.12.0 Browser:   Appium Safari nodes 1.7.2   Hub config:  _{   ""port"": 4880,   ""servlets"": null,   ""withoutServlets"": null,   ""custom"": {},   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""registry"": ""org.openqa.grid.internal.DefaultGridRegistry"",   ""throwOnCapabilityNotPresent"": true,   ""role"": ""hub"",   ""cleanUpCycle"": 5000,   ""debug"": true,   ""timeout"": 120,   ""browserTimeout"": 90 }_  node/s config  _{   ""capabilities"": [     {       ""platformName"": ""ios"",       ""deviceName"": ""iPhone"",       ""browserName"": ""Safari"",       ""maxInstances"": 1     }   ],   ""configuration"": {     ""timeout"": 300,     ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""url"": ""http://uipmspiqat001.ipswich.mgsops.net:4493/wd/hub"",     ""host"": ""uipmspiqat001.ipswich.mgsops.net"",     ""port"": 4493,     ""maxSession"": 1,     ""register"": true,     ""registerCycle"": 5000,     ""hubPort"": 4880,     ""hubHost"": ""UIPWSPITES006""   } }_    I have a grid spinned up inside Windows server and a few appium nodes registered into this grid from inside Macmini's. I am randomly getting the following error:  From test log: ************************************************************************************************************ System.InvalidOperationException : cannot forward the request unexpected end of stream on Connection{uipmspiqat001.ipswich.mgsops.net:4492, proxy=DIRECT hostAddress=uipmspiqat001.ipswich.mgsops.net/10.203.48.87:4492 cipherSuite=none protocol=http/1.1} TearDown : System.InvalidOperationException : Session [7ca83036-de2d-499d-95d1-743b28a4319d] was terminated due to ***FORWARDING_TO_NODE_FAILED***    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Appium.AppiumDriver`1.get_Contexts()  This is fired when I am trying to take a screenshot on TearDown but the session had been already killed at that time.  So I switched grid into debug mode and found the following error.  From hub log ************************************************************************************************************ 12:04:29.244 ERROR [RequestHandler.process] - ***cannot forward the request unexpected end of stream on Connection{uipmspiqat001.ipswich.mgsops.net:4492, proxy=DIRECT hostAddress=uipmspiqat001.ipswich.mgsops.net/10.203.48.87:4492 cipherSuite=none protocol=http/1.1} java.io.IOException: unexpected end of stream on Connection{uipmspiqat001.ipswich.mgsops.net:4492, proxy=DIRECT hostAddress=uipmspiqat001.ipswich.mgsops.net/10.203.48.87:4492 cipherSuite=none protocol=http/1.1}*** 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:205) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105) 	at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:430) 	at org.openqa.grid.internal.TestSession.forward(TestSession.java:237) 	at org.openqa.grid.web.servlet.handler.RequestHandler.forwardRequest(RequestHandler.java:99) 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:133) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:86) 	at org.openqa.grid.web.servlet.DriverServlet.doGet(DriverServlet.java:64) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:530) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626) 	at java.lang.Thread.run(Unknown Source) Caused by: java.io.EOFException: \n not found: limit=0 content=… 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227) 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212) 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) 	... 53 more 12:04:29.258 DEBUG [ActiveTestSessions.getExistingSession] - Session [7ca83036-de2d-499d-95d1-743b28a4319d] was terminated due to FORWARDING_TO_NODE_FAILED 12:04:29.262 DEBUG [ActiveTestSessions.getExistingSession] - Session [7ca83036-de2d-499d-95d1-743b28a4319d] was terminated due to FORWARDING_TO_NODE_FAILED   can anyone guide me how to resolve this issue and what could be the problem please?","closed","R-awaiting answer,","mcopjan","2018-05-23T12:56:40Z","2019-08-15T16:09:37Z"
"","6053","Weird behaviour with Selenium's Click() method","OS:   Windows 7 Ultimate SP1 Selenium Version:   3.12.1 Browser:   Chromedriver/GoogleChrome  Browser Version:   2.40.565498 of Chromedriver / Latest one, downloaded it yesterday (20th June 2018)  ## Expected Behavior - Should click on the specified element.  ## Actual Behavior - Sometimes it opens a whole new web page that isn't relevant anywhere on the current page. Clicks on a different element on the same page. (Both elements are static and there shouldn't be a conflict)  ## Steps to reproduce - No need. Fixed.   ## Also  I am aware that there was a similar issue on this GitHub, but the issue didn't help my case. Link to that issue: https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/5404","closed","","rb123454321","2018-06-21T10:19:29Z","2019-08-15T21:10:03Z"
"","6032","IE11 Remote WebDriver Issue -- Error forwarding the new session cannot find : Capabilities","OS:   Windows 7 Selenium Version:   3.10.0 Browser:   IE 11  Trying to execute my code via Remote WebDriver + IE 11. Grid Configuration:  Hub Running in Linux machine: java -jar selenium-server-standalone-2.48.2.jar -role hub   Node Running in Windows Machine: java -Dwebdriver.chrome.driver=IEDriverServer.exe -jar selenium-server-standalone-2.48.2.jar -role node -hub __http://localhost:4444/grid/register -port 4446 -browser ""browserName=internet explorer,version=11,platform=WINDOWS""  Code:  System.setProperty(""webdriver.ie.driver"", ""c:/hub/IEDriverServer.exe""); 			InternetExplorerOptions options = new InternetExplorerOptions();			options.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 			log.info(""Creating object of "" + browser); 			driver = new InternetExplorerDriver(options); 			log.info(""IE Browser Instance is Launched""); 			//log.info(""Creating object of "" + browser); 			log.info(""IE Browser Instance is Launched""); 			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); 			 			DesiredCapabilities dc = DesiredCapabilities.internetExplorer(); 			dc.setBrowserName(""internet explorer""); 			dc.setPlatform(Platform.WINDOWS); 			dc.setVersion(""11""); 			dc.setCapability(""webdriver.ie.driver"", ""c:/hub/IEDriverServer.exe""); 			dc.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 			dc.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 			dc.setCapability(""acceptInsecureCerts"", true); 			dc.setCapability(""acceptSslCerts"", true); 			dc.setCapability(CapabilityType.ForSeleniumServer.ENSURING_CLEAN_SESSION, true); 			dc.setCapability(InternetExplorerDriver.ENABLE_PERSISTENT_HOVERING, true); 			dc.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 			 			driver = new RemoteWebDriver(new URL(""http://111.111.1.12:4444/wd/hub""), dc); 			driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);   Error Console:  FAILED CONFIGURATION: @BeforeClass setUp org.openqa.selenium.WebDriverException: Error forwarding the new session cannot find : Capabilities [{webdriver.ie.driver=c:/hub/IEDriverServer.exe, ensureCleanSession=true, acceptSslCerts=true, enablePersistentHover=true, acceptInsecureCerts=true, browserName=internet explorer, ignoreProtectedModeSettings=true, version=11, platform=WINDOWS}] Command duration or timeout: 15 milliseconds Build info: version: '3.10.0', revision: '176b4a9', time: '2018-03-02T19:03:16.397Z' System info: host: 'L-PBG466P', ip: '10.53.251.14', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_161' Driver info: driver.version: RemoteWebDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:138) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) 	at com.wvo.automation.core.TestBase.selectBrowser(TestBase.java:129) 	at com.wvo.automation.core.TestBase.init(TestBase.java:66) 	at com.wvo.salepoint.scripts.Monitoring.setUp(Monitoring.java:32) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138) 	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107) 	at org.testng.TestRunner.privateRun(TestRunner.java:767) 	at org.testng.TestRunner.run(TestRunner.java:617) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) 	at org.testng.SuiteRunner.run(SuiteRunner.java:240) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) 	at org.testng.TestNG.run(TestNG.java:1057) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) Caused by: org.openqa.grid.common.exception.GridException: Error forwarding the new session cannot find : Capabilities [{webdriver.ie.driver=c:/hub/IEDriverServer.exe, ensureCleanSession=true, acceptSslCerts=true, enablePersistentHover=true, acceptInsecureCerts=true, browserName=internet explorer, ignoreProtectedModeSettings=true, version=11, platform=WINDOWS}] 	at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:115) 	at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83) 	at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:499) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257) 	at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) 	at java.lang.Thread.run(Thread.java:748)","closed","","sushmithaguntupalli","2018-06-18T02:06:20Z","2019-08-15T04:09:41Z"
"","6437","timeout no more 10 minutes","OS:   Windows 7 Selenium Version:   2.33 Browser:   Chrome 64.0.3282.119  I can't increase timeout waiting load page more 10 minutes. I see issue #4874, but its dont help me. I'm use contructor (directory, option, timespan). I try timespan.FromHours but 10 minutes, not more. Please, help me.","closed","R-awaiting answer,","AwesomeAwesomeBest","2018-09-22T15:12:21Z","2019-08-15T01:09:50Z"
"","6367","Selenium do not launch Firefox browser","OS:   Windows 10     Selenium Web driver v3.14,  Selenium FireFox Driver v0.21,   IDE Visual Studio 2017 15.5.7   Browser:   Firefox Browser Version:   61.0.2 (64-bit)   ## Steps to reproduce -  Open VS and paste current Code :   ``` string profileP = @""C:\Users\Iam\AppData\Roaming\Mozilla\Firefox\Profiles\ksj27pw6.Myprof""; FirefoxOptions options = new FirefoxOptions(); options.AddArguments(""-profile"", profileP); FirefoxDriver browser = new FirefoxDriver(options);  // crush  ```  FF opened correct, with current profile, but then throw this error :  > OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://localhost:57637/session timed out after 60 seconds.'","closed","","IlyaDhtvzGhbltn","2018-09-05T12:24:25Z","2019-08-15T12:10:02Z"
"","5912","Specflow Generator error","OS:   Windows 10 Specflow for Visual Studio 2015 version 2017.1.14  Selenium and packages Versions:    ""NUnit"" version=""3.6.1"" targetFramework=""net452""  ""Selenium.Firefox.WebDriver"" version=""0.16.1"" targetFramework=""net452"" ""Selenium.Support"" version=""3.4.0"" targetFramework=""net452""  ""Selenium.WebDriver"" version=""3.4.0"" targetFramework=""net452"" ""Selenium.WebDriver.ChromeDriver"" version=""2.38.0"" targetFramework=""net452"" ""Selenium.WebDriver.IEDriver"" version=""3.4.0"" targetFramework=""net452"" ""SpecFlow"" version=""2.1.0"" targetFramework=""net452"" ""SpecFlow.Plus.Excel"" version=""1.4.2"" targetFramework=""net452"" ""SpecRun.Runner"" version=""1.5.2"" targetFramework=""net452"" ""SpecRun.SpecFlow"" version=""1.5.2"" targetFramework=""net452""   Actual Behavior:   After updating a feature file and rebuilding the solution, the following errors are received. Solution is working before, not sure what happened why it suddenly throws these issues.   Missing [assembly:GeneratorPlugin] attribute in SpecFlow.Plus.Excel.SpecFlowPlugin.dll #error TechTalk.SpecFlow.Generator #error Server stack trace:  #error    at TechTalk.SpecFlow.Generator.Plugins.GeneratorPluginLoader.LoadPlugin(PluginDescriptor pluginDescriptor) #error    at TechTalk.SpecFlow.Generator.GeneratorContainerBuilder.LoadPlugin(PluginDescriptor pluginDescriptor, IGeneratorPluginLoader pluginLoader, GeneratorPluginEvents generatorPluginEvents) #error    at TechTalk.SpecFlow.Generator.GeneratorContainerBuilder.LoadPlugins(ObjectContainer container, IGeneratorConfigurationProvider configurationProvider, SpecFlowConfigurationHolder configurationHolder, GeneratorPluginEvents generatorPluginEvents) #error    at TechTalk.SpecFlow.Generator.GeneratorContainerBuilder.CreateContainer(SpecFlowConfigurationHolder configurationHolder, ProjectSettings projectSettings) #error    at TechTalk.SpecFlow.Generator.TestGeneratorFactory.CreateGenerator(ProjectSettings projectSettings) #error    at System.Runtime.Remoting.Messaging.StackBuilderSink._PrivateProcessMessage(IntPtr md, Object[] args, Object server, Object[]& outArgs) #error    at System.Runtime.Remoting.Messaging.StackBuilderSink.SyncProcessMessage(IMessage msg) #error Exception rethrown at [0]:  #error    at System.Runtime.Remoting.Proxies.RealProxy.HandleReturnMessage(IMessage reqMsg, IMessage retMsg) #error    at System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke(MessageData& msgData, Int32 type) #error    at TechTalk.SpecFlow.Generator.Interfaces.ITestGeneratorFactory.CreateGenerator(ProjectSettings projectSettings) #error    at TechTalk.SpecFlow.IdeIntegration.Generator.AppDomain.RemoteAppDomainTestGeneratorFactory.CreateGenerator(ProjectSettings projectSettings) #error    at TechTalk.SpecFlow.IdeIntegration.Generator.GeneratorServices.CreateTestGenerator() #error    at TechTalk.SpecFlow.IdeIntegration.Generator.IdeSingleFileGenerator.GenerateCode(String inputFilePath, String inputFileContent, GeneratorServices generatorServices, ProjectSettings projectSettings) #error    at TechTalk.SpecFlow.IdeIntegration.Generator.IdeSingleFileGenerator.Generate(String inputFilePath, String inputFileContent, GeneratorServices generatorServices, CodeDomHelper codeDomHelper, ProjectSettings projectSettings)","closed","","Jenizah","2018-05-18T03:00:32Z","2019-08-16T01:09:52Z"
"","6419","CEF desktop application closes right after launching due to chrome crashing","OS:   Windows 10 Selenium Version:   latest as of sept 2018 Browser:   Chrome  Browser Version:   Version 69.0.3497.92 (Official Build) (64-bit)  ## Expected Behavior - launch cef application so i can run automated tests with selenium   ## Actual Behavior - `Starting ChromeDriver 2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5) on port 2424 Only local connections are allowed. Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: exited normally   (chrome not reachable)   (The process started from chrome location C:\Users\Muhammad Zaib\AppData\Roaming\LiquidSky\LiquidSkyClient.exe is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 4.18 seconds Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'DESKTOP-VBCSP1B', ip: '10.50.128.64', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.2' Driver info: driver.version: ChromeDriver 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:122) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:127) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:543) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:125) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at WindowSetUp.main(WindowSetUp.java:47) `  ## Steps to reproduce - ` class WindowSetUp  {          public static void main(String[] args) throws MalformedURLException {             // Path to the ChromeDriver executable.             System.setProperty(""webdriver.chrome.driver"", ""C:\\Users\\Muhammad Zaib\\AppData\\Roaming\\LiquidSky\\chromedriver.exe"");               ChromeOptions options = new ChromeOptions();               // Path to the CEF executable.             File chromium = new  File (""C:\\Users\\Muhammad Zaib\\AppData\\Roaming\\LiquidSky\\LiquidSkyClient.exe"");            // ChromeOptions option = new ChromeOptions();             options.setBinary(chromium);             options.addArguments(""remote-debugging-port=12388"");             options.addArguments(""--no-sandbox"");             WebDriver driver = new ChromeDriver(options);             driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);         }             static void sleep(int time) {             try { Thread.sleep(time); } catch (InterruptedException e) {}         }  }`","closed","","MuhammadzaibLiquidsky","2018-09-17T17:32:22Z","2019-08-15T11:09:50Z"
"","6598","Edge WebDriverException: Cannot start the driver service on http://localhost:64301/","OS:   Windows 10 Selenium Version:   .net Selenium.WebDriver package 3.14.0  MicrosoftWebDriver: Release 17134 Version: 6.17134 | Edge version supported: 17.17134  Browser:   Microsoft Edge  Browser Version:   Edge 41.16299.15.0  Language: C#  Expected Behavior - Create a webDriver instance for Microsoft Edge.  ## Actual Behavior - OpenQA.Selenium.WebDriverException: OpenQA.Selenium.WebDriverException: Cannot start the driver service on http://localhost:64301/  ## Steps to reproduce - // path to MicrosoftWebDriver in system path.  // First Attempt: EdgeDriverService service = EdgeDriverService.CreateDefaultService(@""C:\public\data\trunk\AutomatedTesting\eBusinessSeleniumTest\packages\currentEdgeDriver""); WebDriver = new EdgeDriver(service);  // second attempt:  WebDriver = new EdgeDriver();  Both have exactly the same results.","closed","D-edge,","SCarlAdams","2018-10-30T14:41:18Z","2019-08-14T15:09:53Z"
"","6132","Web driver tries to hit async_script end point which does not exist and gives unknown command error","OS:   Linux RHEL 6.9 Selenium Version:   3.13.0 Browser:   Firefox  Browser Version:   60.1.0  ## Expected Behavior - Protractor tests run seamlessly  ## Actual Behavior -   11:14:05.129 INFO [SeleniumServer.boot] - Welcome to Selenium for Workgroups.... 11:14:05.129 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444 11:16:27.774 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: firefox, count: 1, moz:firefoxOptions: {args: [--safe-mode], log: {level: trace}}} 11:16:27.776 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService) 1531131387801   geckodriver     INFO    geckodriver 0.21.0 1531131387805   geckodriver     INFO    Listening on 127.0.0.1:3067 1531131387990   mozrunner::runner       INFO    Running command: ""/usr/bin/firefox"" ""-marionette"" ""--safe-mode"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile.epfwZK9oGQqN"" 1531131387991   geckodriver::marionette DEBUG   Waiting 60s to connect to browser on 127.0.0.1:39675 1531131388228   addons.xpi      WARN    Can't get modified time of /usr/lib64/firefox/browser/features/aushelper@mozilla.org.xpi 1531131388361   addons.xpi-utils        WARN    addMetadata: Add-on aushelper@mozilla.org is invalid: [Exception... ""Component returned failure code: 0x80520006 (NS_ERROR_FILE_TARGET_DOES_NOT_EXIST) [nsIFile.isFile]""  nsresult: ""0x80520006 (NS_ERROR_FILE_TARGET_DOES_NOT_EXIST)""  location: ""JS frame :: resource://gre/modules/addons/XPIInstall.jsm :: loadManifestFromFile :: line 924""  data: no] Stack trace: loadManifestFromFile()@resource://gre/modules/addons/XPIInstall.jsm:924 syncLoadManifestFromFile()@resource://gre/modules/addons/XPIProvider.jsm:938 addMetadata()@resource://gre/modules/addons/XPIProvider.jsm -> resource://gre/modules/addons/XPIProviderUtils.js:1167 processFileChanges()@resource://gre/modules/addons/XPIProvider.jsm -> resource://gre/modules/addons/XPIProviderUtils.js:1523 checkForChanges()@resource://gre/modules/addons/XPIProvider.jsm:3302 startup()@resource://gre/modules/addons/XPIProvider.jsm:2194 callProvider()@resource://gre/modules/AddonManager.jsm:253 _startProvider()@resource://gre/modules/AddonManager.jsm:728 startup()@resource://gre/modules/AddonManager.jsm:892 startup()@resource://gre/modules/AddonManager.jsm:2976 observe()@jar:file:///usr/lib64/firefox/omni.ja!/components/addonManager.js:63 1531131388362   addons.xpi-utils        WARN    Could not uninstall invalid item from locked install location 1531131388552   Marionette      DEBUG   Received observer notification profile-after-change Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 84: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 84: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 93: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 93: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 102: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 102: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 68: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 68: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 88: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 75: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 75: Having multiple  in  isn't supported and may not work as expected 1531131388599   Marionette      DEBUG   Received observer notification command-line-startup 1531131388600   Marionette      DEBUG   Received observer notification nsPref:changed 1531131388663   Marionette      DEBUG   Received observer notification domwindowopened 1531131388732   Marionette      DEBUG   Safe mode detected, supressing dialog Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 84: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 84: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 93: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 93: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 102: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 102: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 68: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 68: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 88: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 75: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 75: Having multiple  in  isn't supported and may not work as expected 1531131389908   Marionette      DEBUG   Received observer notification sessionstore-windows-restored 1531131389936   addons.xpi      WARN    Can't get modified time of /usr/lib64/firefox/browser/features/aushelper@mozilla.org.xpi Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 84: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 84: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 93: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 93: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 102: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/30-metric-aliases.conf"", line 102: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 33: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 59: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 68: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 68: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 79: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/40-nonlatin.conf"", line 88: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 23: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 39: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 56: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 66: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 75: Having multiple  in  isn't supported and may not work as expected Fontconfig warning: ""/etc/fonts/conf.d/45-latin.conf"", line 75: Having multiple  in  isn't supported and may not work as expected 1531131390220   Marionette      DEBUG   Setting recommended pref apz.content_response_timeout to 60000 1531131390221   Marionette      DEBUG   Setting recommended pref browser.download.panel.shown to true 1531131390221   Marionette      DEBUG   Setting recommended pref browser.EULA.override to true 1531131390221   Marionette      DEBUG   Setting recommended pref browser.offline to false 1531131390222   Marionette      DEBUG   Setting recommended pref browser.pagethumbnails.capturing_disabled to true 1531131390222   Marionette      DEBUG   Setting recommended pref browser.search.update to false 1531131390222   Marionette      DEBUG   Setting recommended pref toolkit.cosmeticAnimations.enabled to false 1531131390222   Marionette      DEBUG   Setting recommended pref browser.tabs.disableBackgroundZombification to false 1531131390223   Marionette      DEBUG   Setting recommended pref browser.tabs.warnOnCloseOtherTabs to false 1531131390223   Marionette      DEBUG   Setting recommended pref browser.tabs.warnOnOpen to false 1531131390223   Marionette      DEBUG   Setting recommended pref browser.usedOnWindows10.introURL to 1531131390223   Marionette      DEBUG   Setting recommended pref browser.urlbar.suggest.searches to false 1531131390224   Marionette      DEBUG   Setting recommended pref browser.urlbar.userMadeSearchSuggestionsChoice to true 1531131390224   Marionette      DEBUG   Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false 1531131390224   Marionette      DEBUG   Setting recommended pref dom.disable_open_during_load to false 1531131390224   Marionette      DEBUG   Setting recommended pref dom.file.createInChild to true 1531131390224   Marionette      DEBUG   Setting recommended pref dom.max_chrome_script_run_time to 0 1531131390225   Marionette      DEBUG   Setting recommended pref dom.max_script_run_time to 0 1531131390225   Marionette      DEBUG   Setting recommended pref extensions.getAddons.cache.enabled to false 1531131390225   Marionette      DEBUG   Setting recommended pref extensions.shield-recipe-client.api_url to 1531131390225   Marionette      DEBUG   Setting recommended pref extensions.webservice.discoverURL to http://%(server)s/dummy/discoveryURL 1531131390226   Marionette      DEBUG   Setting recommended pref network.http.prompt-temp-redirect to false 1531131390226   Marionette      DEBUG   Setting recommended pref network.http.speculative-parallel-limit to 0 1531131390226   Marionette      DEBUG   Setting recommended pref security.fileuri.strict_origin_policy to false 1531131390227   Marionette      DEBUG   Setting recommended pref security.notification_enable_delay to 0 1531131390227   Marionette      DEBUG   Setting recommended pref signon.autofillForms to false 1531131390227   Marionette      DEBUG   Setting recommended pref signon.rememberSignons to false 1531131390274   Marionette      DEBUG   New connections are accepted 1531131390275   Marionette      INFO    Listening on port 39675 1531131390295   geckodriver::marionette DEBUG   Connected to Marionette on 127.0.0.1:39675 1531131390303   Marionette      DEBUG   Accepted connection 0 from 127.0.0.1:51384 1531131390306   Marionette      TRACE   0 -> [0,1,""WebDriver:NewSession"",{""browserName"":""firefox"",""capabilities"":{""desiredCapabilities"":{""browserName"":""firefox""}}}] JavaScript error: jar:file:///usr/lib64/firefox/omni.ja!/components/nsUrlClassifierListManager.js, line 65: NS_ERROR_XPC_GS_RETURNED_FAILURE: Component returned failure code: 0x80570016 (NS_ERROR_XPC_GS_RETURNED_FAILURE) [nsIJSCID.getService] JavaScript error: jar:file:///usr/lib64/firefox/omni.ja!/components/nsUrlClassifierListManager.js, line 65: NS_ERROR_XPC_GS_RETURNED_FAILURE: Component returned failure code: 0x80570016 (NS_ERROR_XPC_GS_RETURNED_FAILURE) [nsIJSCID.getService] 1531131390344   Marionette      DEBUG   Register listener.js for window 2147483649 1531131390361   Marionette      TRACE   0","closed","R-awaiting answer,","suryavir","2018-07-09T17:40:46Z","2019-08-15T15:10:03Z"
"","6384","Better string interpolation for execute_script.","OS:   Linux Selenium Version:   3.13.0 Browser:   N/A  If we want to pass a number of arguments from Python to JavaScript, it would be nice to not have to remember the order. f-strings example: `driver.execute_script(f""var arg = {hello}; if (!arg) { arg='default'; } document.title = arg;"")`  That currently returns a syntax error. JavaScript uses a lot of brackets too so it's hard to say exactly how it would work.","closed","","neatville","2018-09-08T16:12:01Z","2019-08-15T12:09:49Z"
"","5881","[3.12.0] JavaScript Error: ""b is null""","OS:   Linux Selenium Version:   3.12.0 Browser:   Firefox 47.0.1  The following error started happening in a bunch of tests since 3.12.0. Only on FF 47.0.1, on Chrome it doesn't happen. We're using Capybara 3.0.3 on JRuby.  ``` [JavaScript Error: ""b is null"" {file: ""file:///home/boris/project/features/build/webdriver-profile20180510-2668-9f3blf/extensions/fxdriver@googlecode.com/components/synthetic-mouse.js"" line: 10294}]'[JavaScript Error: ""b is null"" {file: ""file:///home/boris/project/features/build/webdriver-profile20180510-2668-9f3blf/extensions/fxdriver@googlecode.com/components/synthetic-mouse.js"" line: 10294}]' when calling method: [wdIMouse::move]       # [remote server] file:///home/boris/project/features/build/webdriver-profile20180510-2668-9f3blf/extensions/fxdriver@googlecode.com/components/command-processor.js:13148:in `WebElement.clickElement'       # [remote server] file:///home/boris/project/features/build/webdriver-profile20180510-2668-9f3blf/extensions/fxdriver@googlecode.com/components/command-processor.js:13388:in `DelayedCommand.prototype.executeInternal_/k'       # [remote server] file:///home/boris/project/features/build/webdriver-profile20180510-2668-9f3blf/extensions/fxdriver@googlecode.com/components/command-processor.js:13393:in `DelayedCommand.prototype.executeInternal_'       # [remote server] file:///home/boris/project/features/build/webdriver-profile20180510-2668-9f3blf/extensions/fxdriver@googlecode.com/components/command-processor.js:13335:in `DelayedCommand.prototype.execute/","closed","D-firefox,","boris-petrov","2018-05-10T10:41:16Z","2019-08-15T20:09:40Z"
"","6039","Chrome failed to start: exited abnormally","OS:   CentOS Linux release 7.5.1804 (Core)  Selenium Version:   selenium     3.12.0  Browser:   google-chrome-stable  Browser Version:   Google Chrome 67.0.3396.87 (64bit)  ## Expected Behavior - I want to start Chrome  The code is this:  from selenium import webdriver browser = webdriver.Chrome('/django/chromedriver')  ## Actual Behavior -      browser = webdriver.Chrome('/django/chromedriver')   File ""/usr/lib/python3.4/site-packages/selenium/webdriver/chrome/webdriver.py"", line 75, in __init__     desired_capabilities=desired_capabilities)   File ""/usr/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 156, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 245, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 314, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python3.4/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally   (Driver info: chromedriver=2.9.248304,platform=Linux 3.10.0-862.3.2.el7.x86_64 x86_64 ## Steps to reproduce - python: I use python3.4  Installation method: yum install google-chrome-stable  ChromeDriver version: ChromeDriver 2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb)  I print log information get one WARNING information: [1.006][WARNING]: PAC support disabled because there is no system implementation  but,I don't know how to solve this problem  In addition,  the system currently in use is cloned and the previous system has a problem.   thanks ~","closed","","a365541453","2018-06-19T02:24:43Z","2019-08-15T22:09:44Z"
"","6088","unknown error: DevToolsActivePort file doesn't exist","OS:   ``` Linux gitlab-runner1 3.16.0-6-amd64 #1 SMP Debian 3.16.56-1+deb8u1 (2018-05-08) x86_64 GNU/Linux ``` Selenium Version:   ``` selenium-webdriver 3.13.0 (ruby) ``` Browser:   ``` Google Chrome ``` Browser Version:   ``` 67.0.3396.99 (64-bit) ```  ## Expected Behavior - it shouldn't fail, all versions before 3.13.0 works as expected  ## Actual Behavior - ``` unknown error: DevToolsActivePort file doesn't exist   (Driver info: chromedriver=2.40.565383 (76257d1ab79276b2d53ee976b2c3e3b9f335cde7),platform=Linux 3.16.0-6-amd64 x86_64) ```  ## Steps to reproduce - can't reproduce with selenium-webdriver 3.12.0, 3.11.0, 2.53.4 (headless) can't reproduce with selenium-webdriver 3.13.0 (without headless) it fails with selenium-webdriver 3.13.0 (headless)  I registered a chrome driver with these options: ``` Capybara.register_driver :chrome do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     'chromeOptions' => {       'args' => ['headless', 'no-sandbox', 'disable-gpu', 'window-size=1920,1080']     }   )    Capybara::Selenium::Driver.new(app, browser: :chrome, desired_capabilities: capabilities) end ```  any idea what could be wrong? here's the changelog for 3.13.0 https://github.com/SeleniumHQ/selenium/commit/5dfab8acb231a248f297ad8be83dd6b6d52d4fe0#diff-9e3f4f69757d07f6a0d2af4f1f2a1103","closed","","ahorek","2018-06-27T22:25:50Z","2019-08-15T20:10:03Z"
"","6197","Safari: Unable to upload File using file chooser window, error: 'This Safari window is remotely controlled by an automated test.'","OS:   10.13.4 (High Sierra)  Selenium Version:   3.12.0  Browser:   Safari (11.1)  I am trying to automate an application that requires us to choose a file from the Select file window. (Please note, there is no text box /input field where we can give the path of the file)  We are using AutoIt / Robot class for other browsers.  But for Safari we are unable to even open the File chooser window. Safari blocks it.  Is there any workaround for the same?  Attached is the screen shot of the error","closed","","sumanthurs","2018-07-24T03:44:32Z","2019-08-15T18:09:34Z"
"","6009","Issue when nativeEvents:false capability is set","OS:   **Windows 7, 8** Browser:    **Internet Explorer 9.0, 10.0**  Hi,  We are facing an issue when **_nativeEvents:false_** capability is set for Windows/IE combination.  Problem: We have a scenario where we need to click on a button which we are able to perform only when nativeEvents:false capability is set. By setting this capability we are facing an issue at succeeding steps in the execution where we are supposed to handle an alert. we are unable to get the response from that alert when this capability is set and the execution aborts. Tried by removing the nativeEvents:false capability and able to handle the alert but the click on the button is failing.  Please suggest if there is any way to handle this kind of issues where both the click and alert can be handled.  Thanks & Regards","closed","D-IE,","ppanuganti","2018-06-11T13:39:14Z","2019-08-15T21:09:49Z"
"","5967","getting  error while run normal web page on eclipse its some driver issue","OS:    Selenium Version:    Browser:","closed","","Mayank1208","2018-05-31T15:52:06Z","2019-08-16T00:09:47Z"
"","6079","Java 1.7 Remote WebDriver using IE11","OS: Windows 7 Selenium Version: 2.52.0 Browser: IE 11  Trying to execute my code via Remote WebDriver + IE 11. Grid Configuration:  Hub Running in Linux machine: java -jar selenium-server-standalone-2.52.0.jar -role hub  Node Running in Windows Machine: java -Dwebdriver.ie.driver=IEDriverServer.exe -jar selenium-server-standalone-2.52.0.jar -role node -hub http://localhost:4444/grid/register -port 4446 -browser ""browserName=internet explorer,version=11,platform=WINDOWS""  Code:                         DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer(); 			capabilities.setBrowserName(""internet explorer""); 			capabilities.setPlatform(Platform.WINDOWS); 			driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), capabilities);  Error Console: org.openqa.selenium.WebDriverException: session null does not exist (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 7 milliseconds Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:06:42' os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_79' Session ID: null Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{platform=ANY, sessionId=a17c0016-0e3a-4818-a959-bafa7c6acf36, capabilities={timeouts={pageLoad=300000, implicit=0, script=30000}, browserVersion=11, platformName=windows, browserName=internet explorer, proxy={}, se:ieOptions={ignoreProtectedModeSettings=true, elementScrollBehavior=0, ignoreZoomSetting=false, enablePersistentHover=true, requireWindowFocus=false, ie.ensureCleanSession=false, initialBrowserUrl=http://localhost:12321/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.fileUploadDialogTimeout=3000, ie.browserCommandLineSwitches=}, unhandledPromptBehavior=dismiss, setWindowRect=true, pageLoadStrategy=normal, acceptInsecureCerts=false}}] Command duration or timeout: 197 milliseconds Build info: version: '2.52.0', revision: '4c2593cfc3689a7fcd7be52549167e5ccc93ad28', time: '2016-02-11 11:22:43'  os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_79' Session ID: 994ddd11-9d3f-447d-8bd3-e5e1e37f71dd Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{platform=ANY, cssSelectorsEnabled=true, javascriptEnabled=true, sessionId=a17c0016-0e3a-4818-a959-bafa7c6acf36, capabilities={timeouts={pageLoad=300000, implicit=0, script=30000}, browserVersion=11, platformName=windows, browserName=internet explorer, proxy={}, se:ieOptions={elementScrollBehavior=0, ignoreProtectedModeSettings=true, enablePersistentHover=true, ignoreZoomSetting=false, ie.ensureCleanSession=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:12321/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.fileUploadDialogTimeout=3000, ie.browserCommandLineSwitches=}, setWindowRect=true, unhandledPromptBehavior=dismiss, acceptInsecureCerts=false, pageLoadStrategy=normal}, webdriver.remote.sessionid=994ddd11-9d3f-447d-8bd3-e5e1e37f71dd, takesScreenshot=true}] 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:316) 	at com.wvo.automation.core.TestBase.getUrl(TestBase.java:170) 	at com.wvo.automation.core.TestBase.init(TestBase.java:72) 	at com.wvo.salepoint.scripts.NewContract.setUp(NewContract.java:41) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:606) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138) 	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107) 	at org.testng.TestRunner.privateRun(TestRunner.java:767) 	at org.testng.TestRunner.run(TestRunner.java:617) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) 	at org.testng.SuiteRunner.run(SuiteRunner.java:240) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) 	at org.testng.TestNG.run(TestNG.java:1057) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) Caused by: org.openqa.selenium.remote.ScreenshotException: Screen shot has been taken Build info: version: '2.52.0', revision: '4c2593cfc3689a7fcd7be52549167e5ccc93ad28', time: '2016-02-11 11:22:43' os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:138) 	... 29 more Caused by: org.openqa.selenium.WebDriverException: session null does not exist (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 7 milliseconds Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:06:42' os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_79' Session ID: null Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{platform=ANY, sessionId=a17c0016-0e3a-4818-a959-bafa7c6acf36, capabilities={timeouts={pageLoad=300000, implicit=0, script=30000}, browserVersion=11, platformName=windows, browserName=internet explorer, proxy={}, se:ieOptions={ignoreProtectedModeSettings=true, elementScrollBehavior=0, ignoreZoomSetting=false, enablePersistentHover=true, requireWindowFocus=false, ie.ensureCleanSession=false, initialBrowserUrl=http://localhost:12321/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.fileUploadDialogTimeout=3000, ie.browserCommandLineSwitches=}, unhandledPromptBehavior=dismiss, setWindowRect=true, pageLoadStrategy=normal, acceptInsecureCerts=false}}] Build info: version: '2.52.0', revision: '4c2593cfc3689a7fcd7be52549167e5ccc93ad28', time: '2016-02-11 11:22:43' os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: EventFiringWebDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:526) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:316) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:606) 	at org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:103) 	at com.sun.proxy.$Proxy1.get(Unknown Source) 	at org.openqa.selenium.support.events.EventFiringWebDriver.get(EventFiringWebDriver.java:163) 	at org.openqa.selenium.remote.server.handler.ChangeUrl.call(ChangeUrl.java:40) 	at org.openqa.selenium.remote.server.handler.ChangeUrl.call(ChangeUrl.java:1) 	at java.util.concurrent.FutureTask.run(FutureTask.java:262) 	at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) 	at java.lang.Thread.run(Thread.java:745)","closed","R-awaiting answer,","sushmithaguntupalli","2018-06-27T02:21:41Z","2019-08-15T20:09:52Z"
"","6027","can't create remote driver to use with selenium grid","OS: selenium grid: Linux client where test runs: OSX  Selenium Version:   selenium grid: 3.12.0 python binding version: 3.12.0  I am not able to create a remote web driver using python.  ``` >>> from selenium import webdriver >>> driver =  webdriver.Remote(command_executor='http://myhub-url/wd/hub') Traceback (most recent call last):   File """", line 1, in    File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 156, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 245, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 314, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message:   ``` Is there anything I am doing wrong? Please let me know if you need any information.","closed","","gaurav517","2018-06-15T08:23:26Z","2019-08-15T22:09:49Z"
"","6554","Unable to browser.manage().window().maximize with Chrome under macOS High Sierra","OS: macOS High Sierra 10.13.6  Selenium Version: 3.14.0  Browser: Chrome 70.0.3538.67 (Official Build)  Expected Behavior -  When test starts, maximize the browser window.  Actual Behavior -  Chrome never maximizes nor changes size beyond the 'default' window size that the application shows when initially installed.  Even after launching Chrome manually and resizing the window to be larger (which is remembered during subsequent restarts), the Chrome window is still the smaller size at start.  When the test fails, here is the output:     Failed: unknown error: failed to change window state to maximized, current state is normal       (Session info: chrome=70.0.3538.67)       (Driver info: chromedriver=2.43.600229 (3fae4d0cda5334b4f533bede5a4787f7b832d052),platform=Mac OS X 10.13.6 x86_64)    Stack:     WebDriverError: unknown error: failed to change window state to maximized, current state is normal       (Session info: chrome=70.0.3538.67)       (Driver info: chromedriver=2.43.600229 (3fae4d0cda5334b4f533bede5a4787f7b832d052),platform=Mac OS X 10.13.6 x86_64)         at Object.checkLegacyResponse (/pathToMyCode/node_modules/selenium-webdriver/lib/error.js:546:15)         at parseHttpResponse (/pathToMyCode/node_modules/selenium-webdriver/lib/http.js:509:13)         at doSend.then.response (/pathToMyCode/node_modules/selenium-webdriver/lib/http.js:441:30)         at          at process._tickCallback (internal/process/next_tick.js:188:7)     From: Task: WebDriver.manage().window().maximize()         at thenableWebDriverProxy.schedule (/pathToMyCode/node_modules/selenium-webdriver/lib/webdriver.js:807:17)         at Window.maximize (/pathToMyCode/node_modules/selenium-webdriver/lib/webdriver.js:1686:25)         at UserContext. (/pathToMyCode/specs/smoke_test_spec.js:194:35)         at /pathToMyCode/node_modules/jasminewd2/index.js:112:25         at new ManagedPromise (/pathToMyCode/node_modules/selenium-webdriver/lib/promise.js:1077:7)         at ControlFlow.promise (/pathToMyCode/node_modules/selenium-webdriver/lib/promise.js:2505:12)         at schedulerExecute (/pathToMyCode/node_modules/jasminewd2/index.js:95:18)         at TaskQueue.execute_ (/pathToMyCode/node_modules/selenium-webdriver/lib/promise.js:3084:14)         at TaskQueue.executeNext_ (/pathToMyCode/node_modules/selenium-webdriver/lib/promise.js:3067:27)         at asyncRun (/pathToMyCode/node_modules/selenium-webdriver/lib/promise.js:2974:25)     From: Task: Run beforeAll in control flow         at UserContext. (/pathToMyCode/node_modules/jasminewd2/index.js:94:19)     From asynchronous test:      Error         at Suite. (/pathToMyCode/specs/smoke_test_spec.js:193:5)         at Object. (/pathToMyCode/specs/smoke_test_spec.js:186:1)         at Module._compile (module.js:573:30)         at Object.Module._extensions..js (module.js:584:10)         at Module.load (module.js:507:32)         at tryModuleLoad (module.js:470:12)  Attempted Workarounds -  I tried adding '--start-fullscreen' to the chromeOptions/args parameter but when Chrome launches it goes full screen for a second and then resizes itself back to the smaller window.  The only resize that is going on (which isn't occurring) is in the beforeAll function and it is just this: browser.manage().window().maximize();  I have confirmed that the maximize does work fine on Chrome 70 under CentOS 7 and Windows 10 so the problem does appear to be OS X specific.  Obviously I wonder if this is the type of thing that may be related to 70 having just come out over the last couple of days but not being 100% sure of that fact, I figured I'd go ahead and report it anyway just in case its an indicator of a bigger problem.","closed","","cwbuege","2018-10-18T16:50:04Z","2019-08-15T07:10:03Z"
"","6198","Safari: Unable to upload File using file chooser window, error: 'This Safari window is remotely controlled by an automated test.'","OS: 10.13.4 (High Sierra)  Selenium Version: 3.12.0  Browser: Safari (11.1)  I am trying to automate an application that requires us to choose a file from the Select file window. (Please note, there is no text box /input field where we can give the path of the file)  We are using AutoIt / Robot class for other browsers.  But for Safari we are unable to even open the File chooser window. Safari blocks it.  Is there any workaround for the same?  Attached is the screen shot of the error","closed","","poorvikamahesh","2018-07-24T03:46:50Z","2019-08-15T17:10:01Z"
"","6334","Unable to set cookie in the headles browser of ububtu.","org.openqa.selenium.WebDriverException: unable to set cookie   (Session info: headless chrome=67.0.3396.99)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 4.9.85-38.58.amzn1.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'ec2-pci-common-ami.skava.com', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.85-38.58.amzn1.x86_64', java.version: '1.8.0_92' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.35.528139 (47ead77cb35ad2..., userDataDir: /tmp/.org.chromium.Chromium...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 67.0.3396.99, webStorageEnabled: true} Session ID: a10301d6a7771f33edc2bbba26bf408f 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions.addCookie(RemoteWebDriver.java:675) 	at com.skava.framework.action.SeleniumActionEngine.addCookie(SeleniumActionEngine.java:1782) 	at com.skava.reusable.components.GeneralComponents.launchUrl(GeneralComponents.java:17) 	at com.skava.testcases.SECOM_11035.SECOM_11035_checkPriceTypesTabElements(SECOM_11035.java:21) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) 	at java.lang.Thread.run(Thread.java:745)","closed","R-awaiting answer,","Freakishmahesh","2018-08-27T17:01:47Z","2019-08-15T11:09:45Z"
"","6702","org.openqa.selenium.SessionNotCreatedException: session not created from disconnected: unable to connect to renderer   (Session info: chrome=69.0.3497.92)   (Driver info: chromedriver=2.44.609545 (c2f88692e98ce7233d2df7c724465ecacfe74df5),platform=Mac OS X 10.13.5 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 2.58 seconds Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'MyMacPro', ip: 'fe80:0:0:0:80f:598d:12ad:19e7%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.5', java.version: '10.0.1' Driver info: driver.version: ChromeDriver","org.openqa.selenium.SessionNotCreatedException: session not created from disconnected: unable to connect to renderer   (Session info: chrome=69.0.3497.92)   (Driver info: chromedriver=2.44.609545 (c2f88692e98ce7233d2df7c724465ecacfe74df5),platform=Mac OS X 10.13.5 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 2.58 seconds Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'MyMacPro', ip: 'fe80:0:0:0:80f:598d:12ad:19e7%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.5', java.version: '10.0.1' Driver info: driver.version: ChromeDriver  I tried with upgrading/down grading chrome and Chromedriver, still getting same issue  Request to help me on this?","closed","","rnagabandi","2018-11-28T16:22:49Z","2019-08-15T04:09:42Z"
"","6048","selenium-webdriver gem 3.13.0 was not published","Nothing is broken, just that the gem was version was updated in https://github.com/SeleniumHQ/selenium/commit/361e9b3222248d8606eebfc569c782cca7e1a5a6 to 3.13.0 one week ago, but the gem was not published to [rubygems](https://rubygems.org/gems/selenium-webdriver).","closed","","eloyesp","2018-06-20T16:42:29Z","2019-08-15T22:09:35Z"
"","6296","Error: Do not know how to build driver: phantomjs; did you forget to call usingServer(url)?","nodejs selenium ``` 		var chromeDriver = require('chromeDriver'); 		var webdriver = require('selenium-webdriver'); 		var phantomjs = require('phantomjs');  		var By = webdriver.By;   		var driver = new webdriver.Builder()         .forBrowser('phantomjs')         .build(); ``` Error: Do not know how to build driver: phantomjs; did you forget to call usingServer(url)?  package.json:      ""chromedriver"": ""^2.41.0"",     ""selenium-webdriver"": ""^4.0.0-alpha.1"",     ""phantomjs"": ""^2.1.7"",  I even tried: ``` var driver = new webdriver.Builder() 		  .withCapabilities({""phantomjs.binary.path"":'C:\\Users\\sebas\\PycharmProjects\\websockets-chat\\node_modules\\phantomjs\\lib\\phantom\\bin\\phantomjs.exe'}) 		  .forBrowser('phantomjs') 		  .build(); ``` After running: `npm install phantomjs` Logs: ``` `:\Users\sebas\PycharmProjects\websockets-chat>npm install phantomjs npm WARN deprecated phantomjs@2.1.7: Package renamed to phantomjs-prebuilt. Please update 'phantomjs' package references to 'phantomjs-prebuilt' npm WARN deprecated node-uuid@1.4.8: Use uuid module instead npm WARN deprecated tough-cookie@2.2.2: ReDoS vulnerability parsing Set-Cookie https://nodesecurity.io/advisories/130 npm WARN deprecated hoek@2.16.3: The major version is no longer supported. Please update to 4.x or newer npm WARN notice [SECURITY] hoek has the following vulnerability: 1 moderate. Go here for more details: https://nodesecurity.io/advisories?search=hoek&version=2.16 .3 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info. npm WARN notice [SECURITY] tough-cookie has the following vulnerabilities: 1 high, 1 moderate. Go here for more details: https://nodesecurity.io/advisories?search =tough-cookie&version=2.2.2 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info. npm WARN notice [SECURITY] debug has the following vulnerability: 1 low. Go here for more details: https://nodesecurity.io/advisories?search=debug&version=0.7.4 -  Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info. npm WARN notice [SECURITY] tunnel-agent has the following vulnerability: 1 moderate. Go here for more details: https://nodesecurity.io/advisories?search=tunnel-ag ent&version=0.4.3 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info. npm WARN notice [SECURITY] request has the following vulnerability: 1 moderate. Go here for more details: https://nodesecurity.io/advisories?search=request&versio n=2.67.0 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info. npm WARN notice [SECURITY] concat-stream has the following vulnerability: 1 moderate. Go here for more details: https://nodesecurity.io/advisories?search=concat-s tream&version=1.5.0 - Run `npm i npm@latest -g` to upgrade your npm version, and then `npm audit` to get more info.  > phantomjs@2.1.7 install C:\Users\sebas\PycharmProjects\websockets-chat\node_modules\phantomjs > node install.js  PhantomJS not found on PATH Downloading https://github.com/Medium/phantomjs/releases/download/v2.1.1//phantomjs-2.1.1-windows.zip Saving to C:\Users\sebas\AppData\Local\Temp\phantomjs\phantomjs-2.1.1-windows.zip Receiving...   [====================================----] 90% Received 17767K total. Extracting zip contents Removing C:\Users\sebas\PycharmProjects\websockets-chat\node_modules\phantomjs\lib\phantom Copying extracted folder C:\Users\sebas\AppData\Local\Temp\phantomjs\phantomjs-2.1.1-windows.zip-extract-1534429036594\phantomjs-2.1.1-windows -> C:\Users\sebas\P ycharmProjects\websockets-chat\node_modules\phantomjs\lib\phantom Writing location.js file Done. Phantomjs binary available at C:\Users\sebas\PycharmProjects\websockets-chat\node_modules\phantomjs\lib\phantom\bin\phantomjs.exe npm WARN websockets-chat@1.0.0 No repository field. npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents): npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})  + phantomjs@2.1.7 added 40 packages in 28.435s `  ```","closed","","Sebastian-Nielsen","2018-08-16T14:25:49Z","2019-08-15T15:09:46Z"
"","6011","update PyPI links in Python docs","new PyPI is is available... this PR updates links to it.  The old location currently redirects there, but will be decommissioned eventually, so best we point to the new location.  For details on the new PyPI, see:   * https://pythoninsider.blogspot.ca/2018/04/new-pypi-launched-legacy-pypi-shutting.html  ----  - [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","cgoldberg","2018-06-11T15:57:13Z","2018-06-11T16:28:39Z"
"","6084","unable to handle  ssl certification error for IE 11","My trying to handle SSL error with the help of below code in my app but fails to continue to browser.  capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); capabilities.setCapability(CapabilityType.ACCEPT_INSECURE_CERTS, true);  Using selenium version 3.5.3  IE driver =2.45 /3.12.0","closed","D-IE,","JeffGaly","2018-06-27T15:23:07Z","2019-08-15T20:10:02Z"
"","6106","[nightwatchjs] Tests are running fine on Chrome but getting errors while running on Firefox..","My Tests are running fine on Chrome but getting errors while running it on firefox. I am using nightwatch.js framework. My nightwatch.js file is given below.  firefox version - "" 60.0.2 (64-bit) "", chrome Version 66.0.3359.181 nightwatch v0.9.21, node v8.11.1 ""selenium-standalone"": ""^6.11.0"",     {   ""src_folders"": [     ""test/tests""   ],   ""output_folder"": ""test/reports"",   ""custom_commands_path"": """",   ""custom_assertions_path"": """",   ""page_objects_path"": """",   ""globals_path"": """",   ""selenium"": {     ""start_process"": true,     ""server_path"": ""C:\\Users\\PhpstormProjects\\N@G\\firefoxjob\\Charminar\\node_modules\\selenium-standalone\\.selenium\\selenium-server\\3.8.1-server.jar"",     ""log_path"": """",     ""port"": 4444,     ""cli_args"": {       ""webdriver.chrome.driver"": ""C:\\Users\\PhpstormProjects\\N@G\\firefoxjob\\Charminar\\node_modules\\selenium-standalone\\.selenium\\chromedriver\\2.37-x64-chromedriver"",       ""webdriver.gecko.driver"": ""C:\\Users\\PhpstormProjects\\N@G\\firefoxjob\\Charminar\\node_modules\\selenium-standalone\\.selenium\\geckodriver\\0.20.1-x64-geckodriver""     }   },   ""test_settings"": {     ""default"": {       ""launch_url"": ""http://localhost"",       ""selenium_port"": 4444,       ""selenium_host"": ""localhost"",       ""silent"": true,       ""screenshots"": {         ""enabled"": true,         ""on_failure"": true,         ""on_error"": true,         ""path"": ""test/screenshots""       },       ""desiredCapabilities"": {         ""browserName"": ""firefox"",         ""javascriptEnabled"": ""1"",         ""acceptSslCerts"": true,         ""trustAllSSLCertificates"": true,         ""acceptInsecureCerts"": true,         ""marionette"": true,         ""elementScrollBehavior"": 1       },       ""moz:firefoxOptions"": {         ""args"": [           ""window-size=1600, 1000"",           ""disable-infobars"",           ""disable-notifications"",           ""use-fake-device-for-media-stream"",           ""use-fake-ui-for-media-stream"",           ""--log"",           ""debug""         ],         ""prefs"": {           ""dom.ipc.processCount"": 8         }       },       ""log"": {         ""level"": ""trace""       }     },     ""chrome"": {       ""desiredCapabilities"": {         ""browserName"": ""chrome"",         ""javascriptEnabled"": true,         ""acceptSslCerts"": true,         ""handlesAlerts"": true,         ""cssSelectorsEnabled"": true,         ""databaseEnabled"": true,         ""rotatable"": true,         ""chromeOptions"": {           ""args"": [             ""window-size=1600, 1000"",             ""disable-infobars"",             ""disable-notifications"",             ""use-fake-device-for-media-stream"",             ""use-fake-ui-for-media-stream""           ]         },         ""loggingPrefs"": {           ""browser"": ""ALL"",           ""performance"": ""ALL""         }       }     }   } }       Mainly switchWindow(), moveToElement, Back commands were not working in firefox.    Any suggestions or solution for this??  Thanks in advance.","closed","","NagarajuAkkepelli","2018-07-03T06:55:57Z","2019-08-15T20:09:45Z"
"","6573","Adding visibility, invisibility and toBeClickable conditions.","My team needed to adapt the java selenium code into node coe, and we needed support to three java existing conditions in our scripts: `ExpectedConditions::elementToBeClickable`, `ExpectedConditions::visibilityOfElementLocated` and `ExpectedConditions::invisibilityOfElementLocated` . I created an Until.js module extension to add those functions so that we didn't need too much changes on ours scripts. I decided to make this Pull Request to provide my code.  I was using async/await with those functions, but rewrited using Promise to follow the line of implementation that node's Until.js uses.   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6573)","closed","C-nodejs,","vanilsonbr","2018-10-24T19:12:12Z","2021-05-09T18:54:26Z"
"","6730","Unable to load existing Chrome profile","My environment - Python 3.6.1 - Selenium 3.141.0 - Chrome driver 2.44 - OS Ubuntu 18.04.1 LTS  Issue: I want to load existing Chrome profile, since it will not ask me to answer security question.  I have read many stackoverflow answers and put the code together as shown below, but get the error below.  ```python from selenium import webdriver  #since many topic said /Default/ should be excluded from user-data-dir, so I remove it def build_driver():     options = webdriver.ChromeOptions()     options.add_argument('user-data-dir=/home/nopp/.config/google-chrome/')     #desired_caps = options.to_capabilities()     #desired_caps['platform'] = 'Linux'     return webdriver.Chrome(executable_path=chromedriver,chrome_options=options)  #then I call the function above obj_driver = build_driver() ```  The Chrome browser is open with my default profile, but It has error below. ```python /home/nopp/anaconda3/envs/tf/lib/python3.6/site-packages/ipykernel_launcher.py:6: DeprecationWarning: use options instead of chrome_options  --------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last)  in        1 kill_chromedriver() ----> 2 obj_driver = build_driver()   in build_driver()       4     #desired_caps = options.to_capabilities()       5     #desired_caps['platform'] = 'Linux' ----> 6     return webdriver.Chrome(executable_path=chromedriver,chrome_options=options)  ~/anaconda3/envs/tf/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py in __init__(self, executable_path, port, options, service_args, desired_capabilities, service_log_path, chrome_options, keep_alive)      79                     remote_server_addr=self.service.service_url,      80                     keep_alive=keep_alive), ---> 81                 desired_capabilities=desired_capabilities)      82         except Exception:      83             self.quit()  ~/anaconda3/envs/tf/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py in __init__(self, command_executor, desired_capabilities, browser_profile, proxy, keep_alive, file_detector, options)     155             warnings.warn(""Please use FirefoxOptions to set browser profile"",     156                           DeprecationWarning, stacklevel=2) --> 157         self.start_session(capabilities, browser_profile)     158         self._switch_to = SwitchTo(self)     159         self._mobile = Mobile(self)  ~/anaconda3/envs/tf/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py in start_session(self, capabilities, browser_profile)     250         parameters = {""capabilities"": w3c_caps,     251                       ""desiredCapabilities"": capabilities} --> 252         response = self.execute(Command.NEW_SESSION, parameters)     253         if 'sessionId' not in response:     254             response = response['value']  ~/anaconda3/envs/tf/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)     319         response = self.command_executor.execute(driver_command, params)     320         if response: --> 321             self.error_handler.check_response(response)     322             response['value'] = self._unwrap_value(     323                 response.get('value', None))  ~/anaconda3/envs/tf/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)     240                 alert_text = value['alert'].get('text')     241             raise exception_class(message, screen, stacktrace, alert_text) --> 242         raise exception_class(message, screen, stacktrace)     243      244     def _value_or_default(self, obj, key, default):  WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=2.42.591071 (0b695ff80972cc1a65a5cd643186d2ae582cd4ac),platform=Linux 4.15.0-42-generic x86_64) ``` Is there any guide to start `webdriver` with my default Chrome profile that has all password, credentials stored.","closed","","noppGithub","2018-12-05T14:52:45Z","2019-08-15T03:09:50Z"
"","6103","Urllib3","Moving to `urllib3` to help us work through some of the `keep-alive`  issue that we have when using the stdlib. Let me know your thoughts","closed","C-py,","AutomatedTester","2018-07-02T14:12:20Z","2020-07-16T20:48:43Z"
"","5821","unable to perform drag and Drop using selenium in IE browser","moveTargetOutOfBoundException.Requested mouseMovementOut of view port.Getting the error when trying to performMoveToElement in ie browser using selenium","closed","","AbhiRaj93","2018-04-24T11:15:57Z","2019-08-16T04:10:02Z"
"","6566","element not interactable exception while clicking in C#","Meta - OS: Windows 10 Selenium Version: 3.14.0 Browser: Chrome Language: C#  There is very strange behavior while clicking a simple element in C# bindings. Every time I am trying to click the element I am seeing the OpenQA.Selenium.ElementNotVisibleException : element not interactable exception. I am sure the element is present as I tried with waiting before the interaction also.  **I tried the same setup and element using the Java binding and everything looks fine and I am able to click without any issue.**  Following is the exception : `Message: OpenQA.Selenium.ElementNotVisibleException : element not interactable   (Session info: chrome=69.0.3497.100)   (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 10.0.14393 x86_64) `  I tried with tha java Script (IJavaScriptExecutor) also and I am able to click with out an issue and Only issue is with Click() method.  Using this xpath: //div[@data-offset='0']//span[@title='Click to add to basket']  Expected Behavior - The element should be clickable.  Actual Behavior - Throws exception while clicking.  Steps to reproduce - I can not provide the URL to reproduce the issue as the URL is internal but following is the screenshot with the HTML showing the element for the reference. ![click-issue-with-webdriver](https://user-images.githubusercontent.com/4025540/47295692-91e00a80-d610-11e8-9c9d-d63bcd69df7d.PNG)","closed","R-awaiting answer,","pgaria","2018-10-22T13:40:24Z","2019-08-15T03:09:41Z"
"","6833","File download in a new tab causes chrome to close","Meta - OS: Windows 7 enterprise Selenium Version: Selenium.WebDriver v3.5.2 Selenium.WebDriver.ChromeDriver 2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a) Browser: Chrome Version 71.0.3578.98 (Official Build) (64-bit)   Expected Behavior - Attempting to download a file using a ChromeDriver. The website being ""driven"" opens a new tab on button click, which then triggers a download of a XLSX file. Then the browser remains open to continue further steps. This works as expected in firefox.  Actual Behavior - Once file download is completed the new tab closes then the browser also closes which causes the next steps/tests to fail with chrome not reachable exception. Caused by: org.openqa.selenium.WebDriverException: chrome not reachable","closed","","Shebeok","2019-01-10T07:21:47Z","2019-08-15T00:09:43Z"
"","6827","HTTP OPTIONS method activated","Meta - OS: any Selenium Version: any, including 3.141.59 Browser: any  Expected Behavior - HTTP OPTIONS method disabled  Actual Behavior - HTTP OPTIONS method activated on Selenium Hub port  Steps to reproduce - >telnet localhost 4444 OPTIONS / HTTP/1.0  HTTP/1.1 200 OK Date: Tue, 08 Jan 2019 15:52:29 GMT Allow: GET, HEAD, POST, TRACE, OPTIONS Server: Jetty(9.4.z-SNAPSHOT)  Connection closed by foreign host.  We use Selenium in a Production environment and the Selenium Hub doesn't pass the vulnerability audit due to HTTP OPTIONS method activated  Is there a way to disable that HTTP method when starting the Selenium Hub?","closed","R-awaiting answer,","joegrasse","2019-01-08T15:56:35Z","2019-08-14T16:09:38Z"
"","6790","sendKeys(Keys.chord(Keys.COMMAND,""t"")) does not works in MAC OS","Meta OS: OSX Selenium Version: 3.6.0, IntelliJ 2018.2.5 Browser: Chrome Browser Version: Version 71.0.3578.98 (64bit) Chromedriver Version: latest   Expected Behavior Key.chord should mark, copy and paste Text in an input-field with Keys.chord(Keys.COMMAND, ""a"") etc. I tried it with webelement.sendKeys(Keys.chord(Keys.COMMAND, ""t"")), and with Actions actions = new Actions(driver); actions.sendKeys(selectedElement, Keys.chord(Keys.COMMAND, ""t""));  Actual Behavior it does nothing, no error in log  Steps to reproduce System.setProperty(""webdriver.chrome.driver"", ""./src/main/resources/chromedriver_2_33""); Webdriver driver = new ChromeDriver(); driver.get(""https://www.google.de""); WebElement searchbar = driver.findElement(By.className(""gsfi"")); searchbar.click(); searchbar.sendKeys(""abcdef""); searchbar.sendKeys(Keys.chord(Keys.COMMAND, ""t""));","closed","OS-mac,","AutomationObject","2018-12-27T08:32:25Z","2021-09-05T08:08:38Z"
"","6685","Merge Selenium IDE to the monorepo","Merge Selenium IDE to the monorepo","closed","help wanted,","barancev","2018-11-25T16:50:33Z","2022-06-13T00:13:38Z"
"","6406","Support find by image as part of Selenium? Follow what Appium offers?","Maybe this is beyond scope of Selenium in that Selenium tries to keep things simple and barebones, whereas it makes more sense to have for (graphics heavy) mobile automation.  However, I don't see why it couldn't be considered for making as part of core Selenium WebDriver that could work across browsers and OS platforms with the right low level UI automation implementation for this.  See https://github.com/appium/appium/issues/943 and a recent blog post about the implementation now available to the public: https://appiumpro.com/editions/32 & https://appiumpro.com/editions/33.  Could be useful for Selenium against graphics heavy websites.","closed","I-enhancement,","daluu","2018-09-13T16:07:40Z","2019-08-14T15:09:45Z"
"","5906","Update chromeOptions key for capabilities","Make selenium webdriver compatible to latest selenium (> 3.8) and chrome versions.  See https://github.com/SeleniumHQ/selenium/pull/4622  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","florianmutter","2018-05-17T12:16:31Z","2018-05-18T17:20:41Z"
"","6781","Can't start safaridriver via CI","MacOS version: 10.14.2 Selenium version: 3.141.0 Safari Technology Preview version: 72 Safari version: 12.0.2 --- I'm trying to run tests in Safari or Safari Technology Preview via Jenkins on another MacBook and get this error: ``` from selenium.webdriver import Safari, Chrome, Firefox      @pytest.fixture()     def web_driver(request, chrome_options, firefox_options):         driver_name = _driver_name(request)              if driver_name == 'Chrome':             selected_driver = Chrome()         elif driver_name == 'Firefox':             selected_driver = Firefox()         elif driver_name == 'Safari': >           selected_driver = Safari(executable_path=SAFARI_PATH) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  .tox/py36-stage/lib/python3.6/site-packages/selenium/webdriver/safari/webdriver.py:57:  in __init__     self.service.start() .tox/py36-stage/lib/python3.6/site-packages/selenium/webdriver/common/service.py:98:  in start     self.assert_process_still_running() _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   self =       def assert_process_still_running(self):         return_code = self.process.poll()         if return_code is not None:             raise WebDriverException(                 'Service %s unexpectedly exited. Status code was: %s' >               % (self.path, return_code)             ) E           selenium.common.exceptions.WebDriverException: Message: Service  /Applications/Safari Technology Preview.app/Contents/MacOS/safaridriver  unexpectedly exited.  Status code was: 1  ``` But if I run tests locally with the Safari or Safari Technology Preview driver, then everything is fine","closed","","VladimirPodolyan","2018-12-21T18:35:04Z","2019-08-15T01:09:49Z"
"","5974","Add before/after getText events","Listener was adjusted to handle before/after getText method calls are being made  - [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Add before/after getText listener events","closed","","mpanin","2018-06-01T22:08:45Z","2018-06-04T09:07:20Z"
"","6025","Java Selenium 3.12.0 - okhttp3 does not work properly time to time","Lang: Java Selenium Version:  3.12.0 Browser:  Chrome and Firefox  Browser Version:   latest versions Chrome 67..... 64bit Firefox 60.0.2 64 bit  Driver: chromedriver 2.40 win32 geckodriver-v0.20.1-win64.zip  After update selenium from 3.11.0 to 3.12.0 I started getting errors time to time from following code webDriver.getWindowHandle(); http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/WebDriver.html#getWindowHandle--  Can this problem occured with update okhttp from 3.9.1 to 3.10.0 in following commit https://github.com/SeleniumHQ/selenium/commit/e6a056f6c32c541c30d8bdd062195be221e0cf13 or https://github.com/SeleniumHQ/selenium/commit/fe48fc4cbf2edd0d4ea2eaee03061ac9ce95c304  Example code: [code.txt](https://github.com/SeleniumHQ/selenium/files/2105121/code.txt)  Stacktrace: at com.onevizion.guitest.AbstractSelenium.openBrowserAndLogin(AbstractSelenium.java:855) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85) at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517) at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140) at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104) at org.testng.TestRunner.privateRun(TestRunner.java:771) at org.testng.TestRunner.run(TestRunner.java:621) at org.testng.SuiteRunner.runTest(SuiteRunner.java:357) at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352) at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310) at org.testng.SuiteRunner.run(SuiteRunner.java:259) at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199) at org.testng.TestNG.runSuitesLocally(TestNG.java:1124) at org.testng.TestNG.run(TestNG.java:1032) at com.onevizion.guitest.TestNgRunOne.main(TestNgRunOne.java:49) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:294) at java.lang.Thread.run(Thread.java:745) Caused by:  at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:564) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) at org.openqa.selenium.remote.RemoteWebDriver.getWindowHandle(RemoteWebDriver.java:463) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.openqa.selenium.remote.Augmenter$CompoundHandler.invoke(Augmenter.java:194) at org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$8V9VhAFo.getWindowHandle(Unknown Source) at com.onevizion.guitest.AbstractSelenium.openBrowserAndLogin(AbstractSelenium.java:845) ... 28 more Caused by: java.io.IOException: unexpected end of stream on Connection{127.0.0.1:5555, proxy=DIRECT hostAddress=/127.0.0.1:5555 cipherSuite=none protocol=http/1.1} at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:205) at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) at okhttp3.RealCall.execute(RealCall.java:77) at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) ... 37 more Caused by: java.io.EOFException: \n not found: limit=0 content=… at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227) at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212) at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) ... 55 more","closed","C-grid,","kovalev007","2018-06-15T07:17:09Z","2019-08-15T19:09:39Z"
"","6638","Segfault on Jenkins using Chrome","Kinda looks like it's not even getting to the Chrome driver in the stack trace, so I figured I'd at least ask.  This doesn't occur too often, but catching it and dealing with it is difficult.  ## Meta - OS:  Jenkins ver. 1.651 Selenium Version:   selenium-webdriver-3.14.0 Browser:   Chrome  Browser Version:   Latest, I think.  ## Expected Behavior - selenium-webdriver should start  ## Actual Behavior - Segfault  ## Steps to reproduce - Unsure  ## Stack info - [2018-10-26 21:48:15][test_selenium] Setting up DISPLAY=:23 [2018-10-26 21:48:15][test_selenium] using CHROME driver [2018-10-26 21:48:15][test_selenium] Thread: provisioning local chrome driver [2018-10-26 21:48:15][test_selenium] -- Control frame information ----------------------------------------------- [2018-10-26 21:48:15][test_selenium] c:0024 p:---- s:0127 e:000126 CFUNC  :require [2018-10-26 21:48:15][test_selenium] c:0023 p:0012 s:0122 e:000121 BLOCK  /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependenci [2018-10-26 21:48:15][test_selenium] c:0022 p:0057 s:0119 e:000118 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependenci [2018-10-26 21:48:15][test_selenium] c:0021 p:0017 s:0113 e:000112 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependenci [2018-10-26 21:48:15][test_selenium] c:0020 p:0026 s:0107 e:000106 TOP    /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/ [FINISH] [2018-10-26 21:48:15][test_selenium] c:0019 p:---- s:0104 e:000103 CFUNC  :require [2018-10-26 21:48:15][test_selenium] c:0018 p:0012 s:0099 e:000098 BLOCK  /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependenci [2018-10-26 21:48:15][test_selenium] c:0017 p:0057 s:0096 e:000095 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependenci [2018-10-26 21:48:15][test_selenium] c:0016 p:0017 s:0090 e:000089 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependenci [FINISH] [2018-10-26 21:48:15][test_selenium] c:0015 p:0009 s:0084 e:000083 BLOCK  /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/ [FINISH] [2018-10-26 21:48:15][test_selenium] c:0014 p:---- s:0081 e:000080 CFUNC  :delete [2018-10-26 21:48:15][test_selenium] c:0013 p:0012 s:0076 e:000075 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/ [2018-10-26 21:48:15][test_selenium] c:0012 p:0018 s:0065 e:000062 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/ [FINISH] [2018-10-26 21:48:15][test_selenium] c:0011 p:---- s:0054 e:000053 CFUNC  :new [2018-10-26 21:48:15][test_selenium] c:0010 p:0120 s:0049 e:000048 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/ [2018-10-26 21:48:15][test_selenium] c:0009 p:0020 s:0043 e:000042 METHOD /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver. [2018-10-26 21:48:15][test_selenium] c:0008 p:0100 s:0038 e:000037 METHOD /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:334 [2018-10-26 21:48:15][test_selenium] c:0007 p:0029 s:0033 e:000032 METHOD /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:305 [2018-10-26 21:48:15][test_selenium] c:0006 p:0074 s:0029 e:000028 BLOCK  /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:194 [2018-10-26 21:48:15][test_selenium] c:0005 p:0033 s:0026 e:000025 METHOD /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:310 [2018-10-26 21:48:15][test_selenium] c:0004 p:0013 s:0015 e:000014 METHOD /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:189 [2018-10-26 21:48:15][test_selenium] c:0003 p:0082 s:0011 e:000010 METHOD /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:150 [2018-10-26 21:48:15][test_selenium] c:0002 p:0008 s:0006 e:000005 BLOCK  /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:103 [FINISH] [2018-10-26 21:48:15][test_selenium] c:0001 p:---- s:0003 e:000002 (none) [FINISH] [2018-10-26 21:48:15][test_selenium]  [2018-10-26 21:48:15][test_selenium] -- Ruby level backtrace information ---------------------------------------- [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:103:in `block in run' [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:150:in `start_driver' [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:189:in `create_driver' [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:310:in `with_retries' [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:194:in `block in create_driver' [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:305:in `chrome_driver' [2018-10-26 21:48:15][test_selenium] /mnt/canvas/spec/selenium/test_setup/selenium_driver_setup.rb:334:in `ruby_chrome_driver' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver.rb:86:in `for' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/common/driver.rb:44:in `for' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/common/driver.rb:44:in `new' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/chrome/driver.rb:35:in `initialize' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/chrome/driver.rb:67:in `create_capabilities' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/chrome/driver.rb:67:in `delete' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/chrome/driver.rb:67:in `block in create_capabilities' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:292:in `require' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:258:in `load_dependency' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:292:in `block in require' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:292:in `require' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote.rb:21:in `' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:292:in `require' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:258:in `load_dependency' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:292:in `block in require' [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/activesupport-5.1.6/lib/active_support/dependencies.rb:292:in `require' [2018-10-26 21:48:15][test_selenium]  [2018-10-26 21:48:15][test_selenium] -- Machine register context ------------------------------------------------ [2018-10-26 21:48:15][test_selenium]  RIP: 0x00007f7cd59a382d RBP: 0x0000000015b5c198 RSP: 0x00007f7cc3080c40 [2018-10-26 21:48:15][test_selenium]  RAX: 0x00000000fffffffd RBX: 0x0000000000008211 RCX: 0x0000000000000053 [2018-10-26 21:48:15][test_selenium]  RDX: 0x0000000000000000 RDI: 0x0000000002959772 RSI: 0x00007f7cd5aeb34b [2018-10-26 21:48:15][test_selenium]   R8: 0x0000000000000000  R9: 0x0000000000000000 R10: 0x00007f7cd59f1cc0 [2018-10-26 21:48:15][test_selenium]  R11: 0x0000000000000009 R12: 0x0000000000004552 R13: 0x0000000000000009 [2018-10-26 21:48:15][test_selenium]  R14: 0x000000000000000b R15: 0x00007f7cd5aeb34b EFL: 0x0000000000010206 [2018-10-26 21:48:15][test_selenium]  [2018-10-26 21:48:15][test_selenium] -- C level backtrace information ------------------------------------------- [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_vm_bugreport+0x528) [0x7f7cd5f52748] vm_dump.c:684 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_bug_context+0xd0) [0x7f7cd5dd6420] error.c:506 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(sigsegv+0x3e) [0x7f7cd5ec617e] signal.c:907 [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6 [0x7f7cd599ecb0] [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6(getenv+0xad) [0x7f7cd59a382d] [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6 [0x7f7cd5a869d6] [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6(__res_maybe_init+0x125) [0x7f7cd5a88065] [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6 [0x7f7cd5a37ef4] [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6(getaddrinfo+0xfd) [0x7f7cd5a3b96d] [2018-10-26 21:48:15][test_selenium] /usr/lib/x86_64-linux-gnu/libpq.so.5 [0x7f7cc813a433] [2018-10-26 21:48:15][test_selenium] /usr/lib/x86_64-linux-gnu/libpq.so.5(PQconnectStart+0x44) [0x7f7cc813d124] [2018-10-26 21:48:15][test_selenium] /usr/lib/x86_64-linux-gnu/libpq.so.5(PQconnectdb+0xe) [0x7f7cc813d14e] [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/pg-1.0.0/lib/pg_ext.so(gvl_PQconnectdb_skeleton+0xc) [0x7f7cc837b9cc] gvl_wrappers.c:13 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_thread_call_without_gvl+0x42) [0x7f7cd5f03f92] thread.c:1319 [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/pg-1.0.0/lib/pg_ext.so(gvl_PQconnectdb+0x29) [0x7f7cc837be29] gvl_wrappers.c:14 [2018-10-26 21:48:15][test_selenium] /mnt/canvas_cache/dependencies/ruby-2.4.1-rails51-full-bundle/ruby/2.4.0/gems/pg-1.0.0/lib/pg_ext.so(pgconn_init+0x57) [0x7f7cc8384757] pg_connection.c:272 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call0_body.constprop.139+0x1ca) [0x7f7cd5f4744a] vm_eval.c:132 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_call0+0x1b8) [0x7f7cd5f48238] vm_eval.c:62 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_class_new_instance+0x21) [0x7f7cd5e48a71] object.c:1896 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_cfunc+0xf1) [0x7f7cd5f34f41] vm_insnhelper.c:1752 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_yield_values+0x233) [0x7f7cd5f44fb3] vm.c:1032 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_yield_with_cfunc.isra.114.constprop.155+0x9b) [0x7f7cd5f38e1b] vm_insnhelper.c:2460 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_yield+0x385) [0x7f7cd5f4b165] vm.c:1037 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_ary_each+0x3d) [0x7f7cd5d6299d] array.c:1824 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call0_body.constprop.139+0x1ca) [0x7f7cd5f4744a] vm_eval.c:132 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_call0+0x1b8) [0x7f7cd5f48238] vm_eval.c:62 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_iterate0+0xd3) [0x7f7cd5f35373] vm_eval.c:1173 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_block_call+0x2b) [0x7f7cd5f368bb] vm_eval.c:1236 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(enum_each_with_index+0x44) [0x7f7cd5dc91d4] enum.c:2215 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_cfunc+0xf1) [0x7f7cd5f34f41] vm_insnhelper.c:1752 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2e00) [0x7f7cd5f3fc70] insns.def:967 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_call0+0x1b8) [0x7f7cd5f48238] vm_eval.c:62 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_class_new_instance+0x21) [0x7f7cd5e48a71] object.c:1896 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_cfunc+0xf1) [0x7f7cd5f34f41] vm_insnhelper.c:1752 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_vm_call+0x30) [0x7f7cd5f477c0] vm_eval.c:62 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_cfunc+0xf1) [0x7f7cd5f34f41] vm_insnhelper.c:1752 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2e00) [0x7f7cd5f3fc70] insns.def:967 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_block_from_c_unsplattable+0xeb) [0x7f7cd5f440ab] vm.c:1101 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_invoke_proc+0xbb) [0x7f7cd5f4420b] vm.c:1126 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_opt_call+0x9c) [0x7f7cd5f4556c] vm_insnhelper.c:1979 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_method+0xe3) [0x7f7cd5f45b33] vm_insnhelper.c:2292 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_block_from_c_unsplattable+0xeb) [0x7f7cd5f440ab] vm.c:1101 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_invoke_proc+0xbb) [0x7f7cd5f4420b] vm.c:1126 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_opt_call+0x9c) [0x7f7cd5f4556c] vm_insnhelper.c:1979 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_method+0xe3) [0x7f7cd5f45b33] vm_insnhelper.c:2292 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(rb_call0+0x1b8) [0x7f7cd5f48238] vm_eval.c:62 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(send_internal+0xce) [0x7f7cd5f486de] vm_eval.c:952 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_cfunc+0xf1) [0x7f7cd5f34f41] vm_insnhelper.c:1752 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_method+0xe3) [0x7f7cd5f45b33] vm_insnhelper.c:2292 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2e00) [0x7f7cd5f3fc70] insns.def:967 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_block_from_c_unsplattable+0xeb) [0x7f7cd5f440ab] vm.c:1101 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_invoke_proc+0xbb) [0x7f7cd5f4420b] vm.c:1126 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_opt_call+0x9c) [0x7f7cd5f4556c] vm_insnhelper.c:1979 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_method+0xe3) [0x7f7cd5f45b33] vm_insnhelper.c:2292 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_block_from_c_unsplattable+0xeb) [0x7f7cd5f440ab] vm.c:1101 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_invoke_proc+0xbb) [0x7f7cd5f4420b] vm.c:1126 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_opt_call+0x9c) [0x7f7cd5f4556c] vm_insnhelper.c:1979 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_method+0xe3) [0x7f7cd5f45b33] vm_insnhelper.c:2292 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_block_from_c_unsplattable+0xeb) [0x7f7cd5f440ab] vm.c:1101 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_invoke_proc+0xbb) [0x7f7cd5f4420b] vm.c:1126 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_call_opt_call+0x9c) [0x7f7cd5f4556c] vm_insnhelper.c:1979 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec_core+0x2179) [0x7f7cd5f3efe9] insns.def:1066 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_exec+0x87) [0x7f7cd5f43377] vm.c:1727 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_iseq_block_from_c+0x3a9) [0x7f7cd5f43f09] vm.c:969 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(invoke_block_from_c_unsplattable+0xeb) [0x7f7cd5f440ab] vm.c:1101 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(vm_invoke_proc+0xbb) [0x7f7cd5f4420b] vm.c:1126 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(thread_start_func_2+0x76e) [0x7f7cd5f00d0e] thread.c:577 [2018-10-26 21:48:15][test_selenium] /home/ubuntu/.rvm/rubies/ruby-2.4.1/bin/../lib/libruby.so.2.4(thread_start_func_1+0xd0) [0x7f7cd5f011f0] thread_pthread.c:887 [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libpthread.so.0(start_thread+0xc4) [0x7f7cd5752184] [2018-10-26 21:48:15][test_selenium] /lib/x86_64-linux-gnu/libc.so.6(clone+0x6d) [0x7f7cd5a6603d]","closed","","Ardena","2018-11-09T03:12:37Z","2019-08-15T05:10:01Z"
"","6330","Ruby bindings: Security vulnerability in rubyzip 1.2.1","Just FYI  I know it sounds like a deja-vu because of https://github.com/SeleniumHQ/selenium/issues/3728 but there's actually a separate issue with the library on version 1.2.1 listed on the NIST db: [CVE-2018-1000544](https://nvd.nist.gov/vuln/detail/CVE-2018-1000544)  The patch is not out yet but this is the thread where they are discussing it on rubyzip repo: https://github.com/rubyzip/rubyzip/pull/371  I tried to see if there's an alternative for this library but it doesn't seem to be any so even switching library (its usage is quite contained in the ruby bindings) is not an option.","closed","C-rb,","rhymes","2018-08-25T13:40:38Z","2019-08-15T09:09:52Z"
"","6031","Null pointer exception in data provider","java.lang.NullPointerException 	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:150) 	at org.testng.internal.Parameters.handleParameters(Parameters.java:430) 	at org.testng.internal.Invoker.handleParameters(Invoker.java:1270) 	at org.testng.internal.Invoker.createParameters(Invoker.java:985) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1075) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108) 	at org.testng.TestRunner.privateRun(TestRunner.java:774) 	at org.testng.TestRunner.run(TestRunner.java:624) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312) 	at org.testng.SuiteRunner.run(SuiteRunner.java:261) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140) 	at org.testng.TestNG.run(TestNG.java:1048) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)","closed","","sharmi123456","2018-06-17T15:49:19Z","2019-08-14T08:09:48Z"
"","6142","java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker","java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker  code snippet:  public class FirstSeleniumTest {  WebDriver driver = null; String baseURL = ""https://mail.google.com/"";  @BeforeMethod public void setup() throws InterruptedException { 	String currentDir = System.getProperty(""user.dir""); 	System.setProperty(""webdriver.chrome.driver"", currentDir + ""\\executabledrivers\\chromedriver.exe""); 	driver = new ChromeDriver(); 	driver.get(baseURL); 	Thread.sleep(4000); }  @Test public void seleniumTest1() throws InterruptedException { 	System.out.println(""seleniumTest1""); 	driver.findElement(By.id(""identifierId"")).sendKeys(""testautomation"");  	Thread.sleep(2000);  }  @AfterMethod public void tearDown() { 	driver.close(); 	driver.quit(); } }  OS: Windows  Browser: Chrome  Browser Version: 66.0.3359.181 (Official Build) (64-bit)  Expected Behavior - Chrome browser has to be launched Actual Behavior - Getting exception: java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker Steps to reproduce - Execute above script","closed","","srinivasgoud-n","2018-07-11T09:11:07Z","2019-08-15T19:09:45Z"
"","6141","java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker","java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker  code snippet:  public class FirstSeleniumTest {  	WebDriver driver = null; 	String baseURL = ""https://mail.google.com/"";  	@BeforeMethod 	public void setup() throws InterruptedException { 		String currentDir = System.getProperty(""user.dir""); 		System.setProperty(""webdriver.chrome.driver"", currentDir + ""\\executabledrivers\\chromedriver.exe""); 		driver = new ChromeDriver(); 		driver.get(baseURL); 		Thread.sleep(4000); 	}  	@Test 	public void seleniumTest1() throws InterruptedException { 		System.out.println(""seleniumTest1""); 		driver.findElement(By.id(""identifierId"")).sendKeys(""testautomation"");  		Thread.sleep(2000);  	}  	@AfterMethod 	public void tearDown() { 		driver.close(); 		driver.quit(); 	}  }  OS:  Windows  Browser:  Chrome  Browser Version:  66.0.3359.181 (Official Build) (64-bit)  ## Expected Behavior - Chrome browser has to be launched  ## Actual Behavior - Getting exception: java.lang.IllegalAccessError: tried to access method com.google.common.util.concurrent.SimpleTimeLimiter.(Ljava/util/concurrent/ExecutorService;)V from class org.openqa.selenium.net.UrlChecker  ## Steps to reproduce - Execute above script","closed","R-awaiting answer,","srinivasgoud-n","2018-07-11T07:45:17Z","2019-08-14T21:09:58Z"
"","6187","It might be child of iframe & it is not supported currently.","it might be child of iframe/svg/pseudo/comment & it don't support xpath so xpath can't be generated for this element. OS:     Browser Version:   Version 67.0.3396.99 (Official Build) (64-bit)  ## Expected Behavior -  Element should get inspect  ## Actual Behavior - giving error for remote debugging   it might be child of iframe/svg/pseudo/comment & it don't support xpath so xpath can't be generated for this element. ## Steps to reproduce -","closed","","shital17jun","2018-07-20T08:52:47Z","2019-08-15T18:09:41Z"
"","5929","can't started the instance of IE11","it looks that IEDriverServer was not listening on specific port. but I was ready for environment.  Web Driver: latest System: win 10 64 Browser: IE 11 Driver version: IEDriverServer 3.9 x64  ![default](https://user-images.githubusercontent.com/12881971/40340109-f66ee4fa-5daf-11e8-9c06-b8149c9e339a.PNG)  ![screenshot from 2018-05-18 17-24-58](https://user-images.githubusercontent.com/12881971/40340115-faf9c42c-5daf-11e8-97c3-d0d465903f14.png)  ![2](https://user-images.githubusercontent.com/12881971/40340185-4b41f616-5db0-11e8-8958-dbbe063b8fbe.PNG)  ![screenshot from 2018-05-22 11-09-34](https://user-images.githubusercontent.com/12881971/40340266-a3d86e4a-5db0-11e8-9af1-00ee143083d2.png)","closed","C-nodejs,","sltruman","2018-05-22T03:07:38Z","2019-08-15T22:10:03Z"
"","6322","Request: timeline or roadmap for future releases","Is there consensus on when new releases are meant to be shipped? `4.0.0-alpha1` is 7 months old and there are some juicy features that have gone in since then.  Would be great to have some documentation here on what we can expect.","closed","C-infra,","JoshuaKGoldberg","2018-08-23T20:07:00Z","2020-05-05T21:20:35Z"
"","6272","SelectElement and ng-select","Is it possible to use Selenium for `ng-select` elements? Previously on a site `select` elements were presented, but recently they were replaced by `ng-select` ones. My code relies on `SelectElement` class which doesn't support `ng-select`.  In particular I need `Options` property provided by `SelectElement`. Is there a way to operate by `ng-select` with Selenium?","closed","","melanchall","2018-08-11T11:58:12Z","2019-08-15T16:09:42Z"
"","6191","Pass found elements to the EventListener's afterFind method","Instead of passing null, pass found element(s) to the afterFindElement(s) method.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","baflQA","2018-07-23T10:02:27Z","2018-07-24T10:43:45Z"
"","6500","[Ruby] Make Chrome driver aware of geolocation API","Include the `HasLocation` module to Chrome driver (Ruby) so that we can use the neat API to set a pre-defined location.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6500)","closed","","sidonath","2018-10-09T19:34:35Z","2019-03-01T06:56:25Z"
"","6740","Please add docs/release notes to explain why Third Party dependencies have been massively slashed","In the [selenium-server-standalone-3.141.0.jar](http://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.0.jar) (and 3.141.5/3.141.59), there's been a massive cut in the included 3rd party dependencies, slashing the size of the JAR in half (20mb => 10mb).  I confirmed by looking at the pom that indeed many dependencies such as htmlunit have been removed.  Can you add docs somewhere (e.g. release notes), explaining why this happened, and what, if any, impact it will have?  For example, perhaps they are no longer used in Selenium 3 but no one realized it.","closed","","gwtuser","2018-12-10T22:41:52Z","2019-08-15T02:09:59Z"
"","6012","In selenium how to access warnings window for information not found?","In python 3 and selenium I have this program to enter codes in a website and store the information returned: ```  from selenium import webdriver  profile = webdriver.FirefoxProfile() browser = webdriver.Firefox(profile)  # Site that is accessed browser.get('https://www.fazenda.sp.gov.br/SigeoLei131/Paginas/ConsultaDespesaAno.aspx?orgao=')  # Select year 2018 browser.find_element_by_xpath('/html/body/form/div[3]/table/tbody/tr[2]/td/table/tbody/tr[2]/td/table/tbody/tr[1]/td[2]/select/option[1]').click()  # Enter the code 07022473000139 browser.find_element_by_xpath('//*[@id=""ctl00_ContentPlaceHolder1_rblDoc_0""]').click() browser.find_element_by_xpath('//*[@id=""ctl00_ContentPlaceHolder1_txtCPF""]').send_keys('07022473000139') browser.find_element_by_xpath('//*[@id=""ctl00_ContentPlaceHolder1_btnPesquisar""]').click()  # Stores the information found company = browser.find_element_by_xpath('/html/body/form/div[3]/table/tbody/tr[2]/td/table/tbody/tr[3]/td/div/table/tbody/tr[2]/td[1]').text value = browser.find_element_by_xpath('/html/body/form/div[3]/table/tbody/tr[2]/td/table/tbody/tr[3]/td/div/table/tbody/tr[2]/td[2]').text  # Go back one screen to do another search browser.find_element_by_xpath('//*[@id=""ctl00_ContentPlaceHolder1_btnVoltar""]').click() ```  I  have a list of codes to search the site in the field: ""CNPJ/CPF/Inscrição genérica/UGE favorecida :""  In this list I have already discovered that some codes do not exist in the site database (I do not know how many do not exist). And when I type a code that does not exist (like '07022473000136') a window opens on the site with the message ""Não existe Credor com o filtro informado"" and I can only continue by pressing the OK button  I did not find this warning message in the site code, so I still do not know how to handle it  Please, would anyone know how to test whether or not the code exists in selenium? And if not, how do I press the OK button to continue?","closed","","reichaves","2018-06-11T23:07:55Z","2019-08-15T23:09:43Z"
"","5989","Add executing custom command to Chrome Python bindings","implement send_command_and_get_result interface, so we can control chrome via devtools protocol commands.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","zhangwenqiang00","2018-06-04T09:24:32Z","2018-06-25T00:32:37Z"
"","6738","open a new browser windows","im inside a test and i wanna add a command in a specific location, so, I insert a new command and click rec, and selenium open a new browser window, in the old selenium don't have this type of issue","closed","","snape43","2018-12-10T15:40:50Z","2019-08-15T02:10:03Z"
"","6433","Python bindings: BadStatusLineErrors when using selenium grid and keepalive connections","If you start up a remote webdriver pointed at a selenium grid with Hub and nodes with keep_alive = True you can end up with errors on quit. This seems to be only happen on remote grids. If use selenium grid  ``` Traceback (most recent call last):   File ""test_it.py"", line 23, in      tmp.quit()   File ""/home/user/selenium_env/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 689, in quit     self.execute(Command.QUIT)   File ""/home/user/selenium_env/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 310, in execute     response = self.command_executor.execute(driver_command, params)   File ""/home/user/selenium_env/local/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 466, in execute     return self._request(command_info[0], url, body=data)   File ""/home/user/selenium_env/local/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 490, in _request     resp = self._conn.getresponse()   File ""/usr/lib/python2.7/httplib.py"", line 1136, in getresponse     response.begin()   File ""/usr/lib/python2.7/httplib.py"", line 453, in begin     version, status, reason = self._read_status()   File ""/usr/lib/python2.7/httplib.py"", line 417, in _read_status     raise BadStatusLine(line) httplib.BadStatusLine: '' ```  This typically happens when you have a long wait between the last request and the quit. Pretty rare, but it can happen if you are verifying things outside of the test. This code will re-create the issue, provided you have a selenium gird with nodes setup. It doesn't seem to happen with a local standalone server. which makes me think it might be something timing out between the grid and nodes, but the default times i've seen in all those settings seem very high, and not something we have overriden.  ``` from selenium import webdriver from time import sleep  host = ""1.2.3.4"" port = ""4444"" url = ""http://{0}:{1}/wd/hub"".format(host, port)  caps = { ""browserName"": ""chrome"",     ""version"": """",     ""platform"": ""ANY"",     ""javascriptEnabled"": True,     ""chrome.switches"" : '--headless',     ""chrome.binary"" : '/opt/google/chrome/chrome',     ""chromeOptions"" : {         ""binary"" : '/opt/google/chrome/chrome',         ""args"" : ['--headless', '--no-sandbox','--window-size=1600,1200']         } }  tmp = webdriver.Remote(command_executor=url, desired_capabilities=caps, keep_alive=True) tmp.get('https://www.google.com') sleep(50) tmp.quit() ``` If you change keep_alive=False this will pass.","closed","","twiggy","2018-09-20T19:10:22Z","2019-08-15T11:09:37Z"
"","5883","In Testng.xml one of the class is not executing in the sequence it always executes at last","Iam facing one strange issue. Iam keeping all test cases in testng.xml and keeping parameter preserve-order= true but out of 15 test cases one of the test case is present in the middle but it always executes at last. can i get help from any one??  I have converted xml file as .txt file and attached it. In that testng.txt file this class  	always executest last. Can you guys help me iam struck with this issue.    [testng.txt](https://github.com/SeleniumHQ/selenium/files/1991795/testng.txt)","closed","","Pradeep1-MK","2018-05-10T13:37:59Z","2019-08-16T02:09:50Z"
"","6294","ChromeOptions will be ignored","I've tried to start the chromeDriver with headless arguments:  `System.setProperty(""webdriver.chrome.driver"",  ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"");   ChromeOptions chromeOptions = new ChromeOptions(); chromeOptions.addArguments(""headless"",""disable-gpu""); ChromeDriver driver = new ChromeDriver(chromeOptions); driver.get(""http://www.google.com""); System.out.println(driver.getTitle());`  Unfortunately the browser will be startet in normal mode:  [7976:1824:0816/095500.996:ERROR:configuration_policy_handler_list.cc(92)] Unknown policy: AdditionalLaunchParameters [7976:1824:0816/095500.996:ERROR:configuration_policy_handler_list.cc(92)] Unknown policy: DnsPrefetchingEnabled [7976:1824:0816/095500.996:ERROR:configuration_policy_handler_list.cc(92)] Unknown policy: PasswordManagerAllowShowPasswords [7976:10612:0816/095501.690:ERROR:browser_gpu_channel_host_factory.cc(121)] Failed to launch GPU process.  My chromeOptions seems to be ignored. I'm using the latest Selenium 3.14.0 version.","closed","","shakuZZa76","2018-08-16T08:26:04Z","2019-08-15T15:09:47Z"
"","6002","Running Selenium headless on Ubuntu server using Python","I've been trying to get a Django test that uses selenium to run using firefox on a server getting issues running it headless. StackOverflow post [here](https://stackoverflow.com/questions/50719283/selenium-python-cant-connect-with-headless-firefox).","closed","","sam-thecoder","2018-06-07T07:44:37Z","2019-08-15T23:09:52Z"
"","5869","Shadow DOM traversal support","I've been gradually trying to push support of shadow DOM v1 into selenium (see #4230, #5762).  However, we are still missing one major piece: traversal.   There needs to be some ability to traverse shadow DOM when calling `FindElement` and what not.  So maybe we can discuss some possible implementations here?  What we can't/shouldn't do: * Alter how existing selectors work (CSS, XPath, etc. they should all behave as they do now) * Implement deprecated things like `/deep/` * Implement our own selector syntax/mechanism  The way I see this working is that we should **treat the DOM as we would in the browser**, meaning there will _not_ be a way to select a deep element in one call:  ``` element   .FindElement(By.CssSelector(""foo""))   .ShadowRoot?   .FindElement(By.CssSelector(""bar"")); ```  Which, in the browser, would be structured the same (no shortcuts):  ```js element   .querySelector('foo')   .shadowRoot   .querySelector('bar'); ```  So maybe we just need to implement `ShadowRoot` on `WebElement`? Which can be `null` (just like in the browser).","closed","I-enhancement,","43081j","2018-05-08T17:40:35Z","2021-11-02T00:06:08Z"
"","6221","Selenium return the same html","I'm using Selenium for get the html of a website, I created a class that implement this logic: ``` public class NetworkHelper {     private ChromeDriver driver;      ///      /// Constructor.     ///      /// Instantiate the driver.     public NetworkHelper(ChromeDriver driver)     {         this.driver = driver;     }      ///      /// Get the html of the website.     ///      /// Link of the site.     /// Get a string which contains the html of the site.     public string GetHtml(Uri url)     {         driver.Navigate().GoToUrl(url);         return driver.PageSource;     } } ``` and then in the main: ``` public static async Task Main(string[] args) {     //Configure the option for headless browser.     var chromeOpts = new ChromeOptions();     chromeOpts.AddArguments(""headless"");      var chromeDriverService = ChromeDriverService.CreateDefaultService();     ChromeDriver driver = new ChromeDriver(chromeDriverService, chromeOpts);     var networkHelper = new SWP.Helpers.NetworkHelper(driver);      //Execute the requests:     string html = networkHelper.GetHtml(new Uri(""http://www.oddsportal.com/soccer/usa/mls/chicago-fire-new-york-city-CAl0LCJs/#1X2;2""));      html = networkHelper.GetHtml(new Uri(""http://www.oddsportal.com/soccer/usa/mls/chicago-fire-new-york-city-CAl0LCJs/#1X2;3"")); } ``` now the first request contains the correct html but the second request (which have an url that end with: ;3) return the same html of the first request. A strange thing is that: if I revert the link I get the correct html for the first request (which in the example is the second), and an incorrect html for the second request (which is the first in the example) What I did wrong?","closed","R-awaiting answer,","serdam55","2018-07-30T07:30:11Z","2019-08-15T17:09:47Z"
"","6484","Webdriver: ExpectedConditions.invisibilityOf is not working in ChromeDriver","I'm using ExpectedConditions.InvisibilityOfElementLocated to check the invisibility of one of the element and this works perfectly in Mozilla (geckodriver), the code only proceeds after the element can no longer be found, however, this does not happen with ChromeDriver .. the element is still present but it seems to ignore the line of code asking to wait .  ### Meta - OS: Windows 10 Selenium Version: 3.14.0   Language: C# .NET Framework  DotNetSeleniumExtras.WaitHelpers : 3.11.0 Browser: Chrome Browser Version:  69.0.3497.100 (Official Build) (64-bit) ChromeDriver Version: 2.42   ### Scenario -  It is necessary that the code wait until the element is not visible to continue with the execution, since the other lines of code depend on this wait ...  `var test1= wait.Until(SeleniumExtras.WaitHelpers.ExpectedConditions.InvisibilityOfElementLocated(By.ClassName(""_1l3ap""))); ` ### Actual Behavior - While using the wait.until(SeleniumExtras.WaitHelpers.ExpectedConditions.InvisibilityOfElementLocated(elementTobeInvisible)); the code should only probe after the element is no longer visible, as it occurs in Mozilla  ### Steps to reproduce - ``` var wait = new WebDriverWait(InstanceDriver, TimeSpan.FromSeconds(10));  var test1 =  wait.Until(SeleniumExtras.WaitHelpers.ExpectedConditions.InvisibilityOfElementLocated(By.ClassName(""_1l3ap""))); ```","closed","","gabernardone","2018-10-05T01:27:31Z","2019-08-15T08:09:59Z"
"","6757","UnhandledAlertException: unexpected alert open: {Alert text : Save successfully.}","I'm facing below error while handling an alert pop up with Chrome driver.  Exception in thread ""main"" org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Save successfully.}  Scenario:  This is happening when two alerts appears immediately.  First alert pop up appears and I'm handling it with :  Alert alertf = driver.switchTo().alert(); alertf.accept();   Immediately the next alert appears and I have used wait and then implemented another alert Alert alert2 = driver.switchTo().alert(); alert2.accept();  But this fails.  Execution is stopping at 1st  alert.   Complete Error:  Exception in thread ""main"" org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Save successfully.}   (Session info: chrome=71.0.3578.98)   (Driver info: chromedriver=2.44.609538 (b655c5a60b0b544917107a59d4153d4bf78e1b90),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds: null Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:03.216Z' System info: host: 'KADALI7', ip: '15.75.149.101', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.1' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609538 (b655c5a60b0b54..., userDataDir: C:\Users\kadali\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:2130}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 71.0.3578.98, webStorageEnabled: true} Session ID: 2175d3b0d47212f94e61f6e71c8ca535 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:172) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:4","closed","","pradeepkadali27","2018-12-15T15:28:46Z","2019-08-15T01:10:00Z"
"","6022","Missing folders when installing selenium on Python through Amazon Linux EC2 and pipenv","I'm attempting to install the python distribution of Selenium to be run an AWS Lambda. The Selenium package is being installed and built through the [docker-lambda](https://github.com/lambci/docker-lambda) python images. When using the the [docker-lambda python 3.6 run image](https://github.com/lambci/docker-lambda/tree/master/python3.6/run) and installing via `pipenv run pip3 install -Ur requirements.txt` I notice that the selenium package did not install all of its required folders/files (checkout the missing webdriver folders).   Actual:   When I installed **without** pipenv, `pip3 install -Ur requirements.txt` the entire selenium module is installed correctly.  Expected:   Does anyone know the reason why `pipenv pip3 install` incorrectly installs the package. Is it checking for something in the background that standard `pip3 install` does check for?","closed","","S-Cardenas","2018-06-14T18:22:42Z","2019-08-15T22:09:41Z"
"","6417","Cannot start the driver service on http://localhost:","I would kindly like to ask for help an issue I have running selenium on on a windows server without an interface, I get the following error: Cannot start the driver service on http://localhost:49906/    at OpenQA.Selenium.DriverService.Start()    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeOptions options)","closed","R-awaiting answer,","ThatoMolefe","2018-09-17T09:33:50Z","2019-08-15T10:10:01Z"
"","6047","Implicitlywait() fails to wait for an element","I wish to make my page to wait for 3 minutes which will do a process of generating reports about 2 to 3 minutes. I tried using implicitlyWait(),ExplicitWait() ,scriptwait(),pageloadtimeout ()but nothing works as page gets loaded to next step without waiting for 3 minutes.  Note :I dont wish to use thread.sleep() . Any suggestions will be useful .","closed","","JeffGaly","2018-06-20T14:01:55Z","2019-08-15T22:09:37Z"
"","5846","/java/client/test/org/openqa/selenium/chrome:chrome failed with exit code: 32","I was trying to run Chromedriver tests from SleniumHQ project sources on my Linux box.  I built the project for the target chrome  ./go chrome  then run the Chromedriver tests ./go test_chrome  tests started to run and at some point test failed with the following error message:  TESTS FAILED: 2 FAILURES Failed target: //java/client/test/org/openqa/selenium/chrome:chrome FAIL org.openqa.selenium.chrome.ChromeDriverTests go aborted! /usr/local/google/home/khachatryan/SeleniumHQ/selenium/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex test --stamp-build=detect //java/client/test/org/openqa/selenium/chrome:chrome failed with exit code: 32 /usr/local/google/home/khachatryan/SeleniumHQ/selenium/rake-tasks/buck.rb:85:in `block in buck_cmd' /usr/local/google/home/khachatryan/SeleniumHQ/selenium/rake-tasks/buck.rb:69:in `buck_cmd' /usr/local/google/home/khachatryan/SeleniumHQ/selenium/rake-tasks/buck.rb:162:in `block in (root)' /usr/local/google/home/khachatryan/SeleniumHQ/selenium/rake-tasks/buck.rb:88:in `buck_cmd' /usr/local/google/home/khachatryan/SeleniumHQ/selenium/rake-tasks/buck.rb:158:in `block in (root)' Tasks: TOP => test_chrome => //java/client/test/org/openqa/selenium/chrome:chrome:run  Chromedriver path is set in the PATH  Could you please help me to understand what is error 32 and why test execution was aborted?","closed","","ArthurGIT2017","2018-04-30T23:22:25Z","2019-08-16T03:10:02Z"
"","6436","System.InvalidOperationException : Session [(null externalkey)] not available and is not among the last 1000 terminated sessions. Active sessions are[ext. key 9fdb9bdb-1ffa-4529-aa4c-9a26584d4ae1]","I was trying to connect appium(1.9) node using selenium 3.14 but it is failing because of (Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.) not available error. Device setup information: OS: Mac OS El Capitan 10.11.6 Selenium Version: 3.14 Browser: Safari Appium:1.9 Following things I did: •	Ran selenium hub on windows machine:  java -jar selenium-server-standalone-3.14.0.jar -host 10.82.88.147  -role hub  •	Ran Appium node on Mac Mini with following attributes: 	{  	  ""capabilities"": [  	  {  	      ""browserName"": ""safari"",  	      ""maxInstances"": 1,  	      ""platform"":""MAC"",  	      ""seleniumProtocol"": ""WebDriver"",  	      ""automationName"": ""XCUITest""  	  }  	],  	""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",  	  ""url"": ""http://10.177.255.145:4444/wd/hub"",  	  ""host"": ""10.177.255.145"", //node ip  	  ""port"": 4444, //node port  	  ""maxSession"": 5,  	  ""register"": true,  	  ""registerCycle"": 5000,  	  ""role"": ""node"",  	  ""hub"": ""http://10.82.88.147:4444"",  	  ""hubPort"": 4444,  	  ""hubHost"": ""10.82.88.147"",  	  ""debug"": false,  	  ""servlets"" : [],  	  ""withoutServlets"": [],  	  ""custom"": {}  	}   •	Ran following Selenium test on hub. o	IWebDriver driver = null; DesiredCapabilities capabilities = new DesiredCapabilities(); o	        capabilities.SetCapability(""browserName"",""safari""); o	        capabilities.SetCapability(""platformName"", ""iOS""); o	        capabilities.SetCapability(""platform"", ""MAC"");         o	        capabilities.SetCapability(""platformVersion"", ""10.1""); o	        capabilities.SetCapability(""automationName"", ""XCUITest"");      o	         capabilities.SetCapability(""deviceName"", ""iPhone 7""); o	        Uri url = new Uri(""http://10.82.88.147:4444/wd/hub""); o	        driver = new IOSDriver(url, capabilities, TimeSpan.FromSeconds(180));          o	        driver.Navigate().GoToUrl(""https://www.google.com""); o	        driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(10)); o	        driver.Navigate().GoToUrl(""https://www.facebook.com""); o	        Console.WriteLine(driver.Title);  In MacMini, I can see IOS emulator open and safari browser open but it is not redirecting specified page(“https://www.google.com”) in code , it just simply stays in welcome page. Please see attached logs.  [ [logs.txt](https://github.com/SeleniumHQ/selenium/files/2406549/logs.txt) ](url)","closed","","saigovindu","2018-09-21T17:00:44Z","2019-08-15T10:09:47Z"
"","6496","WebDriver Issue","I was trying run my selenium automation code using java in a Tomcat server. It works fine when I run using javac but when it gets run on Tomcat as a jar It shows ""com.google.common.base.Preconditions.checkState(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V|"" this as a log. Here my selenium-chrome driver is placed in desktop of my local machine and path is defined (Tomcat is also a local server)","closed","","Someskumarasamy","2018-10-09T06:24:09Z","2019-08-15T08:09:56Z"
"","6289","Safari web driver 2.48 with Safari 11.1.0 and Version: Oxygen.3a Release (4.7.3a)","I was trying a simple test automation and I have downloaded the JAR from the Selenium from http://selenium-release.storage.googleapis.com/index.html?path=2.53/.   The code is as below: import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.safari.SafariDriver;  public class IndeedTest {  	public static void main(String[] args) throws InterruptedException { 		// TODO Auto-generated method stub 		 		WebDriver driver=new SafariDriver(); 		driver.get(""https://www.google.com""); 		driver.findElement(By.name(""q"")).sendKeys(""download selenium""); 		Thread.sleep(2000); 		driver.findElement(By.name(""btnK"")).click();  	}  }   I am not able to connect to the safari browser.The error I get is as below: INFO: Stopping Safari Aug 15, 2018 3:56:30 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Stopping server Aug 15, 2018 3:56:30 PM org.openqa.selenium.safari.SafariDriverServer stop INFO: Stopping server Aug 15, 2018 3:56:30 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutdown complete Aug 15, 2018 3:56:30 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutting down Aug 15, 2018 3:56:30 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Stopping server Aug 15, 2018 3:56:30 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutdown complete Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10071 ms Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03' System info: host: 'Jhon-MacBook-Pro.local', ip: '195.164.0.13', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_111' Driver info: driver.version: SafariDriver 	at org.openqa.selenium.safari.SafariDriverCommandExecutor.start(SafariDriverCommandExecutor.java:121) 	at org.openqa.selenium.safari.SafariDriver.startClient(SafariDriver.java:76) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:62) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:42) 	at IndeedTest.main(IndeedTest.java:10)","closed","","namrata2929","2018-08-15T20:23:57Z","2019-08-15T15:09:54Z"
"","6570","timeout configuration in grid2 hub.json","I want to know about the ""timeout"" configuration in grid2 hub.json, if the grid2 will kill the chrome.exe and chromedriver.exe process when the time exceed. ![image](https://user-images.githubusercontent.com/17002975/47344504-3af33780-d6db-11e8-9dd5-130a13f82176.png)","closed","","wck821829906","2018-10-23T07:49:40Z","2019-08-15T07:09:53Z"
"","5921","why is the WebElement.clear() not working in IE9?","I used to clear an input's value and it's not working in IE 9. but it's working in Firefox.","closed","","sltruman","2018-05-21T03:56:44Z","2019-08-16T01:09:48Z"
"","6043","Gecko: Loading unused old webdriver which is not necessary","I use the C# driver, latest version.  When The Geckodriver starts it calls FirefoxExtension.Install() which unpacks a ZIP file into a Temp directory, modifies the files, packs them again, converts them to base64 and loads them into Firefox.  All this is completely unnecessary when the Gecko driver is used. The function Install() should not be called when FirefoxOptions.UseLegacyImplementation is false.","closed","C-dotnet,","Elmue","2018-06-19T13:28:53Z","2019-08-15T21:09:38Z"
"","5880","when polling log of web by driver.get_log(), memory increase very fast","I use selenium to driver a chrome to scrape a websocket web. Here is my code:  whlie True:      messages = driver.get_log('performanced')      .....      analysis the messages      .....       if Flag = True: ### after some time           break  It works well for me. Only problem is the memory increase very fast. It seems that every time of running driver.get_log('performanced')  will  occupy memory. And the memory never release until the process stopped. How can I make the memory occupied  release?  ## Meta - OS: Windows 7 Selenium Version: 3.11.0 Browser:  chrome Browser Version:   65.0.3325.181(64-bit)","closed","","pxpwoa","2018-05-10T07:39:00Z","2019-08-16T02:09:52Z"
"","5911","Is there a feature to provide x509 cert and key to login to a site?","I use selenium as a testing framework in [winnaker](https://github.com/target/winnaker), recent spinnaker versions have feature to login using a x509 Cert instead of username/password login.  Is there support for X509 certs in selenium or the webdriver framework?","closed","","medyagh","2018-05-17T21:23:13Z","2019-08-16T01:09:53Z"
"","6264","Since 3.14 I can't use proxy anymore","I use proxy (on windows and Linux) to contact my selenium grid. Before 3.14 I used environnement variable `http_proxy` but with 3.14 it does not work anymore. It seems to be the swap from httplib to urllib3.   For now I downgraded Selenium 3.14 to 3.13 but do you think  it is possible to include proxy in 3.14?","closed","C-py,","bloudman","2018-08-09T09:21:22Z","2021-09-05T08:21:40Z"
"","6467","Can't specify test target OSX 10.14 Mojave with Capabilities ""platform"": ""MOJAVE"" or ""macos 10.14"" on Selenium Grid","I understand this is a recent update to MacOS but just wanted get this on the roadmap if it hasn't been tackled already. Thanks :)  ## Environments __OS:__  OSX __Selenium Version:__  Selenium server standalone","closed","OS-mac,","aengwall","2018-10-01T18:54:53Z","2019-08-15T07:09:35Z"
"","6844","Selenium Python test failed with this error: WebDriverException","I run my code on MacOS 10.14.1  the test is for Safari browser, it opens Safari and navigates to the url but then immediately closes and I got error. This is my code: ``` from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import Select from selenium.common.exceptions import NoSuchElementException from selenium.common.exceptions import NoAlertPresentException import unittest import time import re from friends import Friends   class TestAddGroup(unittest.TestCase):     def setUp(self):         self.driver = webdriver.Safari()         self.driver.implicitly_wait(30)         self.base_url = ""https://www.team-united.com/""         self.verificationErrors = []         self.accept_next_alert = True ``` and I'm getting this error:  ``` selenium.common.exceptions.WebDriverException: Message:  ../../../.local/share/virtualenvs/python_my_address_book-7a6KC1M-/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py:242: WebDriverException ```","closed","","contorax","2019-01-12T08:03:08Z","2019-08-15T00:09:38Z"
"","6273","SeleniumHQ website missing 3.14.0 update","I realise this is not a selenium functional issue, but the website is still pointing to 3.13.0 as the latest version, and would be great if it could be updated to 3.14.0 with release notes.","closed","","jsa34","2018-08-11T19:45:10Z","2019-08-15T16:09:39Z"
"","5965","[Meta] Mark selenium-google-code-issue-archive repo as archived","I landed on https://github.com/seleniumhq/selenium-google-code-issue-archive from an SO link, but I figured it might be good to actual lock/archive the repo to prevent new ones being created there https://help.github.com/articles/about-archiving-repositories/","closed","C-infra,","nschonni","2018-05-30T20:16:09Z","2021-09-05T10:02:42Z"
"","6278","What to use instead of Desired capabililities for a generic framework","I just updated selenium in a base framework i use to create browsers and plug in application POM sets.  I'm getting the warning that DesiredCapabilities is obsolete and I should use browser specific options instead.  Below is a cut down version of my code where I pull data from the app settings (set by build server not tests) to specify which browser, configuration and in what environment to run.  How would I go about using specific browser options as with this setup I can cast to a desired capabilities and add settings where they are available whereas the only way i see with browser specific options is to do similar but for each browser type which im not keen on doing.   Is there a better way I could do this, what is the recommended approach in this scenario?  `           ///          /// Creates a new automation instance.         ///          /// The configuration settings for the browser driver.         public Driver(DriverConfig driverConfig)         {             DriverConfig = driverConfig;             ICapabilities caps = new DesiredCapabilities();              //generic Desktop Browser config:             if (DriverConfig.BrowserName != """")             { ((DesiredCapabilities)caps).SetCapability(""browserName"", DriverConfig.BrowserName); }             else             { }             if (DriverConfig.Version != """")             { ((DesiredCapabilities)caps).SetCapability(""version"", DriverConfig.Version); }             else             { }             if (DriverConfig.Platform != """")             { ((DesiredCapabilities)caps).SetCapability(""platform"", DriverConfig.Platform); }             else             { }              //Create browser on remote machine             Instance = new RemoteWebDriver(new Uri(DriverConfig.BrowserExecutionAddress), caps);              // Maximise the window for consistency             Instance.Manage().Window.Maximize();              // Go to the start URL             Instance.Navigate().GoToUrl(DriverConfig.BrowserStartURL);         }`   My run settings are picked up from the app settings which are specified by the build server to test only the desired browsers, below is a small snippet. `          ///               /// From the application setting ""browser"". Name of the desired browser to be automated.                      ///          public string Browser => ConfigurationManager.AppSettings[""browser""];          ///          /// From the application setting ""version"". Version of the desired browser.         ///          public string Version => ConfigurationManager.AppSettings[""version""];          ///                                      /// From the application setting ""platform"". Platform on which to run i.e. Windows 10.         ///          public string Platform => ConfigurationManager.AppSettings[""platform""]; `","closed","C-dotnet,","liamharries","2018-08-14T09:31:51Z","2019-08-15T05:09:35Z"
"","6651","Why selenium giving error in linux not in windows?","I have posted this problem in gecko driver platform but people say that I should open an issue in selenium.  Now can anyone please help me in there? I have no idea what going on. Before, I was facing an error i.e. `timeout messages` so I decided to update gecko driver and now I am facing this new error which is related to selenium.  ``` 1542089607023 mozrunner::runner INFO Running command: ""/usr/bin/firefox"" ""-marionette"" ""-headless"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile.fRfvMg71TRrU""  1542089607025 geckodriver::marionette DEBUG Waiting 60s to connect to browser on 127.0.0.1:35957 *** You are running in headless mode. 1542089613255 Marionette DEBUG Received observer notification profile-after-change  1542089614720 Marionette DEBUG Received observer notification command-line-startup 1542089614721 Marionette DEBUG Received observer notification nsPref:changed JavaScript error: jar:file:///usr/lib/firefox-esr/omni.ja!/components/addonsInfo.js, line 91: SyntaxError: ""0""-prefixed octal literals and octal escape sequences are deprecated; for octal literals use the ""0o"" prefix instead  1542089623464 Marionette DEBUG Received observer notification sessionstore-windows-restored  1542089626909 Marionette DEBUG Setting recommended pref apz.content_response_timeout to 60000  1542089626910 Marionette DEBUG Setting recommended pref browser.download.panel.shown to true  1542089626911 Marionette DEBUG Setting recommended pref browser.EULA.override to true  1542089626912 Marionette DEBUG Setting recommended pref browser.offline to false  1542089626913 Marionette DEBUG Setting recommended pref browser.pagethumbnails.capturing_disabled to true 1542089626917 Marionette DEBUG Setting recommended pref browser.search.update to false 1542089626919 Marionette DEBUG Setting recommended pref toolkit.cosmeticAnimations.enabled to false 1542089626924 Marionette DEBUG Setting recommended pref browser.tabs.disableBackgroundZombification to false  1542089626925 Marionette DEBUG Setting recommended pref browser.tabs.warnOnCloseOtherTabs to false 1542089626926 Marionette DEBUG Setting recommended pref browser.tabs.warnOnOpen to false  1542089626927 Marionette DEBUG Setting recommended pref browser.usedOnWindows10.introURL to  1542089626930 Marionette DEBUG Setting recommended pref browser.urlbar.suggest.searches to false  1542089626930 Marionette DEBUG Setting recommended pref browser.urlbar.userMadeSearchSuggestionsChoice to true  1542089626939 Marionette DEBUG Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false  1542089626940 Marionette DEBUG Setting recommended pref dom.disable_open_during_load to false  1542089626940 Marionette DEBUG Setting recommended pref dom.file.createInChild to true  1542089626941 Marionette DEBUG Setting recommended pref dom.max_chrome_script_run_time to 0  1542089626942 Marionette DEBUG Setting recommended pref dom.max_script_run_time to 0  1542089626949 Marionette DEBUG Setting recommended pref extensions.getAddons.cache.enabled to false  1542089626949 Marionette DEBUG Setting recommended pref extensions.shield-recipe-client.api_url to  1542089626950 Marionette DEBUG Setting recommended pref extensions.webservice.discoverURL to http://%(server)s/dummy/discoveryURL  1542089626951 Marionette DEBUG Setting recommended pref network.http.prompt-temp-redirect to false  1542089626951 Marionette DEBUG Setting recommended pref network.http.speculative-parallel-limit to 0  1542089626952 Marionette DEBUG Setting recommended pref security.fileuri.strict_origin_policy to false  1542089626955 Marionette DEBUG Setting recommended pref security.notification_enable_delay to 0  1542089626956 Marionette DEBUG Setting recommended pref signon.autofillForms to false  1542089626957 Marionette DEBUG Setting recommended pref signon.rememberSignons to false  1542089627181 Marionette DEBUG New connections are accepted  1542089627182 Marionette INFO Listening on port 35957  1542089627239 Marionette DEBUG Accepted connection 0 from 127.0.0.1:36432  1542089627252 geckodriver::marionette DEBUG Connection established on 127.0.0.1:35957. Waiting for Marionette handshake  1542089627276 geckodriver::marionette DEBUG Connected to Marionette  1542089627302 Marionette TRACE 0 -> [0,1,""WebDriver:NewSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox""}]  1542089627303 Marionette WARN TLS certificate errors will be ignored for this session  1542089627876 Marionette DEBUG Register listener.js for window 2147483649  1542089627915 Marionette TRACE 0","closed","","agrawalsmart7","2018-11-13T14:18:25Z","2019-08-15T05:09:53Z"
"","6538","[IE-Driver] ""Error executing JavaScript"" when accessing TextContent attribute on re-inserted element","I have encountered this issue in some custom tests while making an update from v3.4.- to v3.14.0 in order to support latest IE versions.   When attempting to call `IWebElement.GetAttribute` on an element which is removed and re-inserted with JavaScript, the TextContent of the element is ""Error executing JavaScript"".   I suspect it has something to do with this (in IEDriver [ChangeLog](https://github.com/SeleniumHQ/selenium/blob/master/cpp/iedriverserver/CHANGELOG)) ``` v3.14.0.9 =========  * Added ability to return text of JavaScript errors. Until this change,    if the IE driver encountered an error in a user's JavaScript, there was    no way to return the actual error text. This change fixes that. The text    of the JavaScript error will be returned so it can be used as part of    the exception thrown by the language bindings. ```  ## Meta - OS:  Windows 10 Selenium Version: 3.4.0 -> 3.14.0 Browser:  IE Browser Version:  11.285.17134.0 Bindings: C# with custom in house Python wrapper for reliability   ## Expected Behavior - Prior to the update, on attribute access of the element, A StaleElementReferenceException is raised. Our custom wrapper catches any Stale pointer exceptions, and re-selects for that element. The element is now ""fresh"" and attribute access works as expected.   ## Actual Behavior - Accessing text attribute on a re-inserted element does not raise StaleElementReferenceException.  Instead, ""Error executing JavaScript"" is returned.  ## Steps to reproduce - 1. Open a testing HTML with a single div 2. Select first div in Selenium => pointer 3. Remove that div by JS  ![image](https://user-images.githubusercontent.com/9387665/46955111-24f0d180-d060-11e8-9302-7c445d7ce21e.png) 4. Re-insert ![image](https://user-images.githubusercontent.com/9387665/46955152-42be3680-d060-11e8-83da-e8748af207a2.png) 5. Access pointer text attribute by `GetAttribute(""textContent"")`","closed","I-stale,","justinttl","2018-10-15T14:07:52Z","2021-12-04T00:06:27Z"
"","5923","Not able to launch any URL on IE11 using Selenium Webdriver 2.53.1 on Windows Server 2016 machine","I have been trying to execute my test scripts on IE11 using selenium 2.53.1 and Java on Windows Server 2016 machine but it is giving **SessionNotFoundException** , on the other hand, the same code is working fine on IE11 on Windows 8.1. I have added registry key as well as did the required changes in Internet Options. Is there any issue with running scripts on Windows Server or it is as same as executing on Windows 8.1 or Windows 7?  **Exact Issue** org.openqa.selenium.remote.SessionNotFoundException: session null does not exist (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 5 milliseconds Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09' System info: host: 'EC2AMAZ-CCND6VF', ip: '10.252.11.113', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{capabilities={proxy={}, acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0, ie.ensureCleanSession=true, elementScrollBehavior=0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:47243/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, ignoreProtectedModeSettings=true}, timeouts={implicit=0, pageLoad=300000, script=30000}, browserName=internet explorer, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss, platformName=windows, setWindowRect=true}, sessionId=83876ead-304d-464b-a7c1-fd13bb53ea75, platform=ANY}] Session ID: null","closed","D-IE,","anurag2893","2018-05-21T07:51:48Z","2019-08-15T23:09:34Z"
"","5963","Unable to open browser in selenium, throws a “null” message","I have a framework that uses POM model and I have used a Utils folder structure which has DriverFactory,Constant and ReadConfigFile java files that configures and opens the browser. (code below)  Now before I did this (introducing the Utils package) the code was running fine and after introducing the Utils package i am getting ""Unable to load browsernull"" exception.  Not sure what is causing the problem. I am using a Mac machine.   Constant.java file:     ```  package Utils;      public class Constant {      public final static String CONFIG_PROPERTIES_DIRECTORY = ""properties/config.properties"";      public final static String GECKO_DRIVER_DIRECTORY = System.getProperty(""user.dir"")+""CucumberFramework/src/test/java/Resources/geckodriver"";      public final static String CHROME_DRIVER_DIRECTORY = System.getProperty(""user.dir"")+""CucumberFramework/src/test/java/Resources/chromedriver"";       }  ``` DriverFactory.java file:     ```  package Utils;      //import com.sun.java.util.jar.pack.Instruction;     import com.sun.tools.javac.code.Attribute;     import org.openqa.selenium.WebDriver;     import org.openqa.selenium.chrome.ChromeDriver;     import org.openqa.selenium.firefox.FirefoxDriver;     import org.openqa.selenium.remote.DesiredCapabilities;     import org.openqa.selenium.support.PageFactory;     import pageObjects.AddIssuePage;     import pageObjects.Login_Page;      import java.util.concurrent.TimeUnit;      public class DriverFactory {          public static WebDriver driver;         public static Login_Page login_page;         public static AddIssuePage addIssuePage;           public WebDriver getDriver() {                      try                     {                         ReadConfigFile file = new ReadConfigFile();                 String browserName = file.getBrowser();                 switch (browserName) {                      case ""firefox"":                          if (null == driver) {                             System.setProperty(""webdriver.geckodriver"", Constant.GECKO_DRIVER_DIRECTORY);                             DesiredCapabilities capabilities = DesiredCapabilities.firefox();                             capabilities.setCapability(""marionette"", true);                             driver = new FirefoxDriver();                          }                         break;                      case ""chrome"":                          if (null == driver) {                              System.setProperty(""webdriver.chromedriver"", Constant.CHROME_DRIVER_DIRECTORY);                             driver = new ChromeDriver();                          }                         break;                  }             } catch (Exception e)              {                 System.out.println(""Unable to load browser"" + e.getMessage());              } finally                     {                 driver.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);                 login_page = PageFactory.initElements(driver, Login_Page.class);             }              return driver;         }     } ```  ReadConfigFile.java file:  ``` package Utils;  import java.io.IOException; import java.io.InputStream; import java.util.Properties;  public class ReadConfigFile {      protected InputStream input = null;     protected Properties prop = null;      public ReadConfigFile () {          try {             ReadConfigFile.class.getClassLoader ().getResourceAsStream (Constant.CONFIG_PROPERTIES_DIRECTORY);             prop = new Properties();             prop.load(input);          } catch (IOException e) {             e.printStackTrace();          }     }      public String getBrowser(){          if (prop.getProperty(""browser"") == null)                 return "" "";          return prop.getProperty(""browser"");      }  } ``` Stacktrace:  ``` java.lang.NullPointerException     at Utils.DriverFactory.getDriver(DriverFactory.java:63)     at Steps.MasterHooks.setup(MasterHooks.java:11)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at cucumber.runtime.Utils$1.call(Utils.java:40)     at cucumber.runtime.Timeout.timeout(Timeout.java:16)     at cucumber.runtime.Utils.invoke(Utils.java:34)     at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)     at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)     at cucumber.runtime.Runtime.runHooks(Runtime.java:212)     at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202)     at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40)     at cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)     at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)     at cucumber.runtime.Runtime.run(Runtime.java:122)     at cucumber.api.cli.Main.run(Main.java:36)     at cucumber.api.cli.Main.main(Main.java:18)  java.lang.NullPointerException     at Utils.DriverFactory.getDriver(DriverFactory.java:63)     at Steps.MasterHooks.setup(MasterHooks.java:11)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at cucumber.runtime.Utils$1.call(Utils.java:40)     at cucumber.runtime.Timeout.timeout(Timeout.java:16)     at cucumber.runtime.Utils.invoke(Utils.java:34)     at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)     at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:224)     at cucumber.runtime.Runtime.runHooks(Runtime.java:212)     at cucumber.runtime.Runtime.runBeforeHooks(Runtime.java:202)     at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40)     at cucumber.runtime.model.CucumberScenarioOutline.run(CucumberScenarioOutline.java:46)     at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)     at cucumber.runtime.Runtime.run(Runtime.java:122)     at cucumber.api.cli.Main.run(Main.java:36)     at cucumber.api.cli.Main.main(Main.java:18)   Process finished with exit code 1  ``` MasterHooks  ``` package Steps;  import Utils.DriverFactory; import cucumber.api.java.After; import cucumber.api.java.Before;  public class MasterHooks extends DriverFactory {      @Before     public void setup() {         driver = getDriver();      }      @After     public void tearDown() {          if (driver != null) {             driver.quit();         }     } }  ```","closed","C-java,","mohand1714","2018-05-30T10:37:31Z","2019-08-16T00:09:48Z"
"","5964","Protractor coniiguration not working","I get the below error message and it is after executing the commands 1) webdriver-manager update,  2) webdriver-manager start and  3) protractor conf.js.  ``` (node:4155) [DEP0022] DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead. [14:50:37] I/launcher - Running 1 instances of WebDriver[14:50:37] I/hosted - Using the selenium server at http://localhost:4444/wd/hub [14:51:38] E/launcher - unknown error: DevToolsActivePort file doesn't exist(Driver info: chromedriver=2.39.562737 (dba483cee6a5f15e2e2d73df16968ab10b38a2bf),platform=Linux 4.4.0-127-generic x86_64)  (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.11 secondsBuild info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z'System info: host: 'shaik', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-127-generic', java.version: '1.8.0_171'Driver info: driver.version: unknown [14:51:38] E/launcher - WebDriverError: unknown error: DevToolsActivePort file doesn't exist(Driver info: chromedriver=2.39.562737 (dba483cee6a5f15e2e2d73df16968ab10b38a2bf),platform=Linux 4.4.0-127-generic x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.11 secondsBuild info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z'System info: host: 'shaik', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-127-generic', java.version: '1.8.0_171'Driver info: driver.version: unknownat  Object.checkLegacyResponse (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/error.js:546:15) at parseHttpResponse (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:509:13 )at doSend.then.response (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/http.js:441:30)at at process._tickCallback (internal/process/next_tick.js:160:7)From: Task: WebDriver.createSession() at Function.createSession (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver.js:769:24) at Function.createSession (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/chrome.js:761:15) at createDriver (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/index.js:170:33) at Builder.build (/usr/local/lib/node_modules/protractor/node_modules/selenium-webdriver/index.js:626:16) at Hosted.getNewDriver (/usr/local/lib/node_modules/protractor/built/driverProviders/driverProvider.js:53:33) at Runner.createBrowser (/usr/local/lib/node_modules/protractor/built/runner.js:195:43) at q.then.then (/usr/local/lib/node_modules/protractor/built/runner.js:339:29) at _fulfilled (/usr/local/lib/node_modules/protractor/node_modules/q/q.js:834:54) at self.promiseDispatch.done (/usr/local/lib/node_modules/protractor/node_modules/q/q.js:863:30) at Promise.promise.promiseDispatch (/usr/local/lib/node_modules/protractor/node_modules/q/q.js:796:13) [14:51:38] E/launcher - Process exited with error code 199 ```","closed","","donseenugmail","2018-05-30T11:41:07Z","2019-08-15T22:09:34Z"
"","6792","(Advanced) Webdriver: ExpectedConditions.invisibilityOf is not working as expected. Always throws an exception","I found the issue [5070](https://github.com/SeleniumHQ/selenium/issues/5070) but it was closed. Can you read the problem from this issue and give me the answer to my comment?   > If I understood correctly then point of the problem it  > ``` > @FindBy(id = ""some id"") > public static WebElement element; > ``` > ""element"" - it's not WebElement it just proxy to the element with id (""some id""). So it can't be used for > waiting. >  > Change: > > ExpectedConditions.invisibilityOf(element) > to  > > ExpectedConditions.invisibilityOf($(By.id(""some id"")))  > or  > > ExpectedConditions.invisibilityOf(driver.findElement(By.id(""some id""))) >  > it should help you. >  > If someone from SeleniumHD can explain to me why WebDriverWait working incorrectly with a proxy > (it the same library package and should not be any problem)  Thank you for advance","closed","R-awaiting answer,","Djuise","2018-12-28T13:47:49Z","2019-08-14T18:09:47Z"
"","6732","[Selenium Automation]: Unable to find elements inside iframe or find iframe in latest Chrome version and chrome Driver","I downgraded the chrome and chrome driver and the TC passed as iframe was able to be retrieved. Working on .net Framework.  Downgraded version info: Chrome driver - 2.36.540470 (2.38 will also work) Chrome - 65.0.3325.181 Selenium web driver - 3.13.1  Updated version where iframe/ iframe elements is not found: Chrome driver - 2.44.609538 Chrome - 70.0.3538.110 Selenium web driver - 3.14.1/3.13.1  The Chrome driver version 2.44 supports chrome v 69-71 as per https://sites.google.com/a/chromium.org/chromedriver/downloads. This driver is unable to retrieve iframe/iframe elements.  The Chrome driver version 2.43 seems to be working but only 50% of times.  Need inputs on how to resolve this issue or which version of chrome / chrome driver can be used to find elements inside iframe for automation runs.  Any leads with this issue will be of great help! Thank you.","closed","","betsyelsa7","2018-12-06T10:00:43Z","2019-08-15T03:09:48Z"
"","6846","How to save chrome user profile by selenium?","I doing make automation tools to save chrome user profile for my company by same config.  but selenium seem like cant do that.`webdriver.ChromeOptions` only do set chrome options when the program runing, but not save it which mean when open chrome again , everything is reset.  i tried used selenium to do that, following is my code. and also i tried used `execute_script` or `find_element_by_xpath` to simulation user setting action. but that's a lot job(cuz shadow element)  ```python options = webdriver.ChromeOptions() prefs = {   'profile.default_content_setting_values': {  'images': 2  } } options.add_experimental_option('prefs', prefs) options.add_argument('--profile-directory=Default') # options.add_argument('--profile-directory=Profile 1')  options.add_argument(r""user-data-dir=C:\Users\myname\AppData\Local\Google\Chrome\User Data"")  # Path to your chrome profile driver = webdriver.Chrome(executable_path=r""C:\Users\myname\Desktop\Selenium\drive\chromedriver.exe"",                           chrome_options=options) driver.get('chrome://settings/content/images?search=image') ```  so there have another way do batch processing chrome profile?","closed","","carl-jin","2019-01-12T14:01:58Z","2019-08-15T00:09:36Z"
"","6329","geckowebdriver stopped running","I developed my application in two steps  1- the first step I load a website into the browser, register all the session storage, local storage, take screen shot, etc... this step works fine. 2. the user has the option to click on a button in the browser. then he click 'Finish' button in my application. 3. The second step started here where I call a function to my driver from the previous session, then I call again the function to log all the session storage, local storage, take screen shot, etc...  in the middle of execution of step three, the process gecowedriver.exe is terminated, although some of my function managed to deal with it. and I receive the below error Exception in Tkinter callback Traceback (most recent call last):   File ""C:\python3.7.0\lib\urllib\request.py"", line 1317, in do_open     encode_chunked=req.has_header('Transfer-encoding'))   File ""C:\python3.7.0\lib\http\client.py"", line 1229, in request     self._send_request(method, url, body, headers, encode_chunked)   File ""C:\python3.7.0\lib\http\client.py"", line 1275, in _send_request     self.endheaders(body, encode_chunked=encode_chunked)   File ""C:\python3.7.0\lib\http\client.py"", line 1224, in endheaders     self._send_output(message_body, encode_chunked=encode_chunked)   File ""C:\python3.7.0\lib\http\client.py"", line 1016, in _send_output     self.send(msg)   File ""C:\python3.7.0\lib\http\client.py"", line 956, in send     self.connect()   File ""C:\python3.7.0\lib\http\client.py"", line 928, in connect     (self.host,self.port), self.timeout, self.source_address)   File ""C:\python3.7.0\lib\socket.py"", line 727, in create_connection     raise err   File ""C:\python3.7.0\lib\socket.py"", line 716, in create_connection     sock.connect(sa) ConnectionRefusedError: [WinError 10061] No connection could be made because the target machine actively refused it  ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","R-awaiting answer,","MadibaLab","2018-08-24T20:09:22Z","2019-08-15T13:10:03Z"
"","6388","Just a bug I found hope I helped you.","I created a random tests. While running one of the test I paused it in debugger and switched from Execute tab to Tests tab and ran the test with start button. What happened is that it whited-out. ![whited-out](https://user-images.githubusercontent.com/41435915/45297821-3dc11100-b50f-11e8-9aea-c5490bc9b9af.PNG)","closed","","Theexplor3r","2018-09-10T12:36:13Z","2019-08-15T12:09:46Z"
"","6838","Saucelab execution failed when i try to execute on IE11 on Windows","I created 1 jenkins job with sauce on demand plugin added to it In jenkin i have given value for webdriver as Windows 10 Internet Explorer 11 and in my code i have defined below capabilities  Class","closed","R-awaiting answer,","divyjain7688","2019-01-11T10:03:08Z","2019-08-14T18:09:42Z"
"","6569","Promise error Raspberry Pi and node.js running headless (no desktop)","I believe the problem is in part not running Xvfb but not sure how to do that in Node.JS  (node:7794) UnhandledPromiseRejectionWarning: Error: Server terminated early with status 2     at earlyTermination.catch.e (/home/pi/.node-red/node_modules/selenium-webdriver/remote/index.js:251:52)     at process._tickCallback (internal/process/next_tick.js:68:7)  var webdriver = require('selenium-webdriver'),   By = webdriver.By,   until = webdriver.until;  var firefox = require('selenium-webdriver/firefox'); require('geckodriver');   var firefoxOptions = new firefox.Options(); firefoxOptions.setBinary('/usr/bin/firefox'); firefoxOptions.headless();  const driver = new webdriver.Builder()    .forBrowser('firefox')    .setFirefoxOptions(firefoxOptions)    .build();  driver.get('https://www.google.com'); driver.findElement(By.name('q')).sendKeys('webdriver');  driver.sleep(1000).then(function() {   driver.findElement(By.name('q')).sendKeys(webdriver.Key.TAB); });  driver.findElement(By.name('btnK')).click();  driver.sleep(2000).then(function() {   driver.getTitle().then(function(title) {     if(title === 'webdriver - Google Search') {       node.warn('Test passed');     } else {       node.warn('Test failed');     }   }); });  driver.quit();","closed","C-nodejs,","nospam2k","2018-10-22T20:12:00Z","2019-08-14T23:09:40Z"
"","6768","Unable to drag and drop in the same canvas using chromedriver","I am using chromedriver to do the drag and drop in the same one canvas, but it doesn't work, so I come to look for help.  ## Environment  OS:  windows 10 Browser:  chrome Browser version:  70 Browser Driver version: 70 Language Bindings version:  Java 8  ## Script int x = 300; int y = 300; int xOffset = 400; int yOffset = 400; Actions actions = new Actions(driver); actions.moveByOffset(x, y).perform(); actions.clickAndHold().moveByOffset(xOffset, yOffset).release().build().perform();  The result of the script is just clicking the location of (x, y), no drag and drop behavior. I try to change the last line to ""actions.moveByOffset(xOffset, yOffset).contextClick().build().perform();"", it works. The location are not outside the canvas.","closed","R-awaiting answer,","zhuxysun","2018-12-18T11:47:34Z","2019-08-14T23:09:42Z"
"","5998","""WebDriverException: Message: chrome not reachable""  When loading chrome profile","I am unsure if i should post this issue here or at   ""If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help""  Hence I will be posting at both, but any help here is very much appreciated!  -------------------------------------------------- selenium version 2.53.6 ubuntu 16.04 python 2.7.15 on anaconda//jupyter notebook chromedriver 2.39  Trying to run headless chrome  If I:  ``` from selenium import webdriver  options = webdriver.ChromeOptions()  options.add_argument('--headless') driver = webdriver.Chrome(executable_path=""gdrive_path"", chrome_options=options) ```  it works fine However, i have a warsaw plugin installed, which by my understanding is on associated to the chrome profile. Hence i need to load it.  So, if i try:  from selenium import webdriver  ``` options = webdriver.ChromeOptions()  options.add_argument('--headless') options.add_argument(""--user-data-dir=/home/ubuntu/.config/google-chrome"") #Path to your chrome profile driver = webdriver.Chrome(executable_path=gdrive, chrome_options=options) ```  It shld work, but instead I get an error msg:  ``` --------------------------------------------------------------------------- WebDriverException                        Traceback (most recent call last)  in ()       4 options.add_argument('--headless')       5 options.add_argument(""user-data-dir=/home/ubuntu/.config/google-chrome"") #Path to your chrome profile ----> 6 w = webdriver.Chrome(executable_path=gdrive, chrome_options=options)  /home/ubuntu/anaconda2/lib/python2.7/site-packages/selenium/webdriver/chrome/webdriver.pyc in __init__(self, executable_path, port, chrome_options, service_args, desired_capabilities, service_log_path)      67                 command_executor=ChromeRemoteConnection(      68                     remote_server_addr=self.service.service_url), ---> 69                 desired_capabilities=desired_capabilities)      70         except:      71             self.quit()  /home/ubuntu/anaconda2/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in __init__(self, command_executor, desired_capabilities, browser_profile, proxy, keep_alive, file_detector)      88         self.error_handler = ErrorHandler()      89         self.start_client() ---> 90         self.start_session(desired_capabilities, browser_profile)      91         self._switch_to = SwitchTo(self)      92         self._mobile = Mobile(self)  /home/ubuntu/anaconda2/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in start_session(self, desired_capabilities, browser_profile)     175         if browser_profile:     176             capabilities['desiredCapabilities']['firefox_profile'] = browser_profile.encoded --> 177         response = self.execute(Command.NEW_SESSION, capabilities)     178         self.session_id = response['sessionId']     179         self.capabilities = response['value']  /home/ubuntu/anaconda2/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in execute(self, driver_command, params)     234         response = self.command_executor.execute(driver_command, params)     235         if response: --> 236             self.error_handler.check_response(response)     237             response['value'] = self._unwrap_value(     238                 response.get('value', None))  /home/ubuntu/anaconda2/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.pyc in check_response(self, response)     190         elif exception_class == UnexpectedAlertPresentException and 'alert' in value:     191             raise exception_class(message, screen, stacktrace, value['alert'].get('text')) --> 192         raise exception_class(message, screen, stacktrace)     193      194     def _value_or_default(self, obj, key, default):  WebDriverException: Message: chrome not reachable   (Driver info: chromedriver=2.39.562737 (dba483cee6a5f15e2e2d73df16968ab10b38a2bf),platform=Linux 4.4.0-1060-aws x86_64) ```  any advice?  Ty!","closed","","eloiup","2018-06-06T14:30:56Z","2019-08-15T23:09:55Z"
"","5828","Timeout: timed out error when using Selenium hub and node.","I am trying to run a series of tests against internet explorer on a remote machine. I have both Selenium hub and node running on that remote machine. When I trying running the tests from my local machine the tests fail and I get the following error: [localhost:2664] out: Traceback (most recent call last): [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/fuelserve/testing/login.py"", line 50, in setUp [localhost:2664] out:     desired_capabilities={'platform': 'WINDOWS','browserName': 'internet explorer', 'javascriptEnabled': True} [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__ [localhost:2664] out:     self.start_session(desired_capabilities, browser_profile) [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session [localhost:2664] out:     response = self.execute(Command.NEW_SESSION, parameters) [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 310, in execute [localhost:2664] out:     response = self.command_executor.execute(driver_command, params) [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 466, in execute [localhost:2664] out:     return self._request(command_info[0], url, body=data) [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 528, in _request [localhost:2664] out:     resp = opener.open(request, timeout=self._timeout) [localhost:2664] out:   File ""/usr/local/lib/python2.7/urllib2.py"", line 429, in open [localhost:2664] out:     response = self._open(req, data) [localhost:2664] out:   File ""/usr/local/lib/python2.7/urllib2.py"", line 447, in _open [localhost:2664] out:     '_open', req) [localhost:2664] out:   File ""/usr/local/lib/python2.7/urllib2.py"", line 407, in _call_chain [localhost:2664] out:     result = func(*args) [localhost:2664] out:   File ""/usr/local/lib/python2.7/urllib2.py"", line 1228, in http_open [localhost:2664] out:     return self.do_open(httplib.HTTPConnection, req) [localhost:2664] out:   File ""/usr/local/lib/python2.7/urllib2.py"", line 1201, in do_open [localhost:2664] out:     r = h.getresponse(buffering=True) [localhost:2664] out:   File ""/srv/fuelserve/venvs/branches-20180419-6994/lib/python2.7/site-packages/raven/breadcrumbs.py"", line 375, in getresponse [localhost:2664] out:     rv = real_getresponse(self, *args, **kwargs) [localhost:2664] out:   File ""/usr/local/lib/python2.7/httplib.py"", line 1121, in getresponse [localhost:2664] out:     response.begin() [localhost:2664] out:   File ""/usr/local/lib/python2.7/httplib.py"", line 438, in begin [localhost:2664] out:     version, status, reason = self._read_status() [localhost:2664] out:   File ""/usr/local/lib/python2.7/httplib.py"", line 394, in _read_status [localhost:2664] out:     line = self.fp.readline(_MAXLINE + 1) [localhost:2664] out:   File ""/usr/local/lib/python2.7/socket.py"", line 480, in readline [localhost:2664] out:     data = self._sock.recv(self._rbufsize) [localhost:2664] out: timeout: timed out   However, when I restart both the hub and node again the tests run normally. What would be causing this error ? Thanks.","closed","","MarkDabe","2018-04-25T14:51:51Z","2019-08-16T03:09:59Z"
"","5836","Web Driver Issue Find Element and Timeout not respected","I am trying to locate elements on the page but although I have set the timeout and used waits, it doesn't seem to respect this. It waits a couple of seconds before crashing and stating, unable to locate the element.   Am I using this incorrectly?  Packages:  >      >      >      >      >      >      >      >        ```             using (var a = ChromeDriverService.CreateDefaultService($@""{Directory.GetCurrentDirectory()}\Tools""))             {                 using (var driver = new ChromeDriver(a, new ChromeOptions(), TimeSpan.FromSeconds(10)))                 {                     driver.Manage().Cookies.DeleteAllCookies();                     driver.Manage().Timeouts().ImplicitWait = new TimeSpan(0, 0, 40);                     driver.Navigate().GoToUrl(""https://www.paypal.com"");                     driver.Manage().Window.Maximize();                     var wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));                     wait.Until(x => x.FindElement(By.Id(""email""))); //crashes here                      driver.FindElementById(""email"").Click();                 }             } ```  *UPDATE* Should also mention that even after adding a `Thread.Sleep` and the window has loaded, it can't locate the element. Looks like it doesn't have focus or a handle on the window opened..","closed","D-chrome,","OnamChilwan","2018-04-27T12:59:39Z","2019-08-16T02:09:59Z"
"","6061","Unable to install selenium ide plugin in old firefox browsers","I am trying to install selenium ide with old firefox version in mac.  When I am clicking selenium ide plug-in extension from google, it goes to new version of selenium ide and showing error message not supported for this browser version.  Can you please help me to install specific version of firefox and selenium ide. As I have many old scripts to execute as part of automation.   Latest version of selenium ide is not taking old scripts.   I have tried with firefox Firefox 28.0.dmg and 32.0.dmg","closed","","sreekumarthesun","2018-06-21T23:36:35Z","2019-08-15T21:09:57Z"
"","6290","Selenium web drive  with Oxygen.3a Release (4.7.3a) and 3.14 gecko driver on Mac OS 13.3","I am trying to implement the test case and the code is as below.I have added the latest JAR files for selenium and firefox 61.0 version.  import org.openqa.selenium.By; import org.openqa.selenium.firefox.FirefoxDriver; public class IndeedTest { 	 	public static void main(String[] args) { 		System.setProperty(""webdriver.gecko.driver"",""geckodriver.exe""); 		//It opens the firefox browser 		 		FirefoxDriver driver = new FirefoxDriver(); 		//Enetr the URL 		 		driver.get(""http://www.indeed.co.in""); 		 		driver.findElement(By.id(""what"")).clear(); 		driver.findElement(By.id(""what"")).sendKeys(""Selenium""); 		 		driver.findElement(By.id(""where"")).sendKeys(""Bangalore""); 		 		driver.findElement(By.id(""fj"")).click(); 		 		 	}  } The code is not executed as expected.This has the following error  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: /features/webcompat-reporter@mozilla.org.xpi 1534372102181	addons.xpi	DEBUG	Calling bootstrap method startup on webcompat-reporter@mozilla.org version 1.0.0 1534372102182	addons.xpi	DEBUG	Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/webcompat@mozilla.org.xpi 1534372102183	addons.xpi	DEBUG	Calling bootstrap method startup on webcompat@mozilla.org version 2.0 1534372102232	addons.manager	DEBUG	Registering shutdown blocker for XPIProvider 1534372102232	addons.manager	DEBUG	Provider finished startup: XPIProvider 1534372102232	addons.manager	DEBUG	Starting provider: LightweightThemeManager 1534372102232	addons.manager	DEBUG	Registering shutdown blocker for LightweightThemeManager 1534372102233	addons.manager	DEBUG	Provider finished startup: LightweightThemeManager 1534372102233	addons.manager	DEBUG	Starting provider: GMPProvider 1534372102466	addons.manager	DEBUG	Registering shutdown blocker for GMPProvider 1534372102467	addons.manager	DEBUG	Provider finished startup: GMPProvider 1534372102467	addons.manager	DEBUG	Starting provider: PluginProvider 1534372102467	addons.manager	DEBUG	Registering shutdown blocker for PluginProvider 1534372102468	addons.manager	DEBUG	Provider finished startup: PluginProvider 1534372102479	addons.manager	DEBUG	Completed startup sequence 1534372107763	addons.repository	DEBUG	No addons.json found. 2018-08-15 18:28:31.828 plugin-container[2424:105869] *** CFMessagePort: bootstrap_register(): failed 1100 (0x44c) 'Permission denied', port = 0x6e3f, name = 'com.apple.tsm.portname' See /usr/include/servers/bootstrap_defs.h for the error codes. 2018-08-15 18:28:38.438 plugin-container[2425:105949] *** CFMessagePort: bootstrap_register(): failed 1100 (0x44c) 'Permission denied', port = 0x9743, name = 'com.apple.tsm.portname' See /usr/include/servers/bootstrap_defs.h for the error codes. 2018-08-15 18:28:47.583 plugin-container[2426:106123] *** CFMessagePort: bootstrap_register(): failed 1100 (0x44c) 'Permission denied', port = 0x6b43, name = 'com.apple.tsm.portname' See /usr/include/servers/bootstrap_defs.h for the error codes. console.error: ""Could not write session state file "" (new Error(""_initWorker called too early! Please read the session file from disk first."", ""resource:///modules/sessionstore/SessionFile.jsm"", 335)) ""_initWorker/","closed","","namrata2929","2018-08-15T22:36:06Z","2019-08-15T15:09:53Z"
"","6318","dsiable  spdy","I am trying to disable spdy obn chrome webdriver using python. it is not giving me error and it does not work as If the command is not there        options.add_argument(""--use-spdy=off"")       options.add_argument(""start-maximized"")       options.binary_location = params[""root_dir""] + r'\browsers\Chrome\Application\Chrome.exe'        driver = webdriver.Chrome(executable_path=executable_path, chrome_options=options)  please note all other options are taking effect except for spdy.","closed","","MadibaLab","2018-08-22T18:51:00Z","2019-08-15T14:10:00Z"
"","6633","Selenium cannot make connetion firefox when options set Python","I am setting the profile of geckodriver by using Options   Expected: Open firefox with the profile assigned and remote control  Happining: Open the firefox with profile assigned but not able to remote control connection refused   ``` from selenium.webdriver.firefox.options import Options  options.add_argument(""-profile"") options.add_argument(""C:/Users//AppData/Roaming/Mozilla/Firefox/Profiles/ji8rbij6.test"")  browser=webdriver.Firefox(options=options) ```  Thanks in advance","closed","","digiboons","2018-11-08T15:46:43Z","2019-08-15T05:10:03Z"
"","6339","Unable to launch FireFox browser, getting error - org.openqa.selenium.WebDriverException: java.io.IOException: Unable to parse URL: http://localhost:13953/session","I am just trying to launch FireFox browser using webdriver but it is throwing below error-  org.openqa.selenium.WebDriverException: java.io.IOException: Unable to parse URL: http://localhost:13953/session Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:05:20.749Z' System info: host: 'LAPTOP-SV4CEKCD', ip: '192.168.1.80', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_131' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:103) 	at BasicDrivers.LaunchSite(BasicDrivers.java:12) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:309) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: java.io.IOException: Unable to parse URL: http://localhost:१३९५३/session 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:67) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 29 more","closed","","deepti111","2018-08-28T09:43:14Z","2019-08-15T14:09:34Z"
"","6722","Unable to locate element in IE11 using Selenium with C#","I am having a drop down box which will get enabled and disabled based on some previous data selection, When it gets disabled one attribute ""disabled"" will get added in DOM with value ""disabled"", but in IE11 i am always getting error ""Unable to find element with css selector == select[id=""releaseNo""][disabled=""disabled""].  Here one thing i observed is whenever i use attribute ""disabled"" , it is not working  Can anyone help on this issue, since i want to check the element is got disabled. ![screenshot_when_item is in disabled state](https://user-images.githubusercontent.com/31208286/49449535-1c677c80-f801-11e8-84e0-a1e43c869f11.PNG) ![screenshot_when_item is in enabled state](https://user-images.githubusercontent.com/31208286/49449536-1c677c80-f801-11e8-9972-c59b7f16fa08.PNG)","closed","","shiyaf","2018-12-04T14:44:14Z","2019-08-15T03:09:56Z"
"","6201","Issue 'Modal Dialog Present' happening after latest update with Internet Explorer 11 (KB4021558)","I am getting 'Modal dialog present' exception while running my test cases which was working fine till 23rd July. On 24th July, Microsoft rolled out an update KB4021558 regarding some vulnerability fix for IE 11. After this update, I am getting an exception while executing an AutoIT exe for handling a Windows-based pop-up.   Please see the configurations below.  OS : Windows 10 IE Driver : 3.13.0 (32 Bit) IE Version : IE 11.0.10240.17443 (KB4021558)  Is anyone having same issues with the latest IE update?  Any help would be highly appreciated.","closed","D-IE,","sanoopkarakkat","2018-07-25T06:32:33Z","2019-08-15T16:09:34Z"
"","6780","Getting ""Unable to add cookie to page"" exception when trying to add cookies","I am getting ""Unable to add cookie to page"" exception when trying to add cookies to IE driver.  Bindings -DotNet IEDriver - WebDriverIEDriver64.2.45.0.0 IE version - IE OS - Windows10 All protection modes are checked in IE options as well as enabling to accept cookies Please let me know if you need more info  **Code:**                     var IEoptions = new InternetExplorerOptions                     {                         IntroduceInstabilityByIgnoringProtectedModeSettings = true                     };                     driver = new InternetExplorerDriver(_IEDriverPath, IEoptions);  ==============================================================                 var cookie = new Cookie(cookieName, cookieValue);                  _driver.Manage().Cookies.AddCookie(cookie);  ===============================================================  **stacktrace:** Unable to add cookie to pageSystem.InvalidOperationException: Unable to add cookie to page    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteCookieJar.AddCookie(Cookie cookie)","closed","","okyrylenko","2018-12-21T18:32:33Z","2019-08-15T01:09:55Z"
"","6618","Seleium Can not Lauch Chrome Browser on Apache via mod_wsgi","I am developing a Django Project. I use a view named test_seleium_view() to lauch a Chrome Browser by Seleium. For demonstration purpose, my code is as simple as below:  ``` #urls.py # coding=utf-8 from __future__ import unicode_literals, absolute_import from django.conf.urls import url from .views import *  urlpatterns = [url(r'^test_seleium$',test_seleium_view,name='test_seleium'),] ``` ``` #test_seleium.py # coding=utf-8 from __future__ import unicode_literals, absolute_import import time from django.shortcuts import render_to_response from selenium import webdriver  def test_seleium_view(request):     chrome_options = webdriver.ChromeOptions()     chrome_options.add_argument(""--start-maximized"")     chrome_options.add_argument('--disable-extensions')     CHROME_DRIVER_PATH = r""C:\Program Files (x86)\chromedriver\chromedriver_win32_v2.43.exe""     driver = webdriver.Chrome(executable_path=CHROME_DRIVER_PATH, chrome_options=chrome_options)      driver.get('http://www.google.com')     time.sleep(5)     driver.quit()      return render_to_response('result.html',{'text': ""success""}) ``` When I visit http://127.0.0.1:8000/app_name/test_seleium on Django development server, everything is working fine, Seleium lauch a Chrome browser then open http://www.google.com wait for 5 seconds then close Chrome browser.  Then I take this Django project to my virtual machine(VMware Workstation, win 7 64bit installed) which installed Apache and mod_wsgi, when I visit http://my_vmware_virtual_host_ip:8000/app_name/test_seleium, it doesn't lauch Chrome browser, but after a while, the page show the text ""success"",just like test_seleium_view() had ran successfully, and there is a chrome.exe process on windows 7 background.  -->  ## Meta - OS:   Windows 7 64bit on VMware Virtual Machine VMware Workstation 15.0.0 build-10134415  Selenium Version:   Selenium 3.14.1  Browser:   Chrome  70.0.3538.77 64bit  Other Software: chromdriver win32_v2.43，win32_v2.42 Apache 2.4.37 Win64 mod_wsgi 4.6.5+ap24vc14-cp36-cp36m-win_amd64 python 3.6.4 64bit Django 2.0.7  ## Expected Behavior - In VMware virtual machine, when I open the url reffer to the Django View on a Chrome Browser, A new Chrome Browser is open then it open Google.com wait for 5 seconds then Chrome Browser will close, and the Django view page show text ""success"".  ## Actual Behavior - when I open the url reffer to the Django View on a Chrome Browser, nothing happen, no Chrome browser open, but after 5 seconds the Django view page still show text ""success""","closed","","GoTop","2018-11-04T03:17:04Z","2019-08-15T06:09:52Z"
"","6175","How to handle custom event using Selenium Nodejs driver?","I am actually trying to handle a custom event and when the event is successfully listened I want to access some variable from browser console from my script. Code I am trying is https://jsfiddle.net/82z4qcmu/5/ ,  But I am getting error saying ""element is not defined""","closed","","Surya97","2018-07-18T08:52:16Z","2019-08-15T18:09:55Z"
"","6535","[selenium-webdriver]ReadMe has a small problem.","https://www.npmjs.com/package/selenium-webdriver#usage  I have found a syntax error in this code.  ```javascript await driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN); ```  I think that ';' should be removed.","closed","C-docs,","tsumasakky","2018-10-15T06:29:28Z","2019-08-14T21:10:04Z"
"","6287","Update Jetty version due CVE-2018-12536","https://securitytracker.com/id/1041194  Jetty Versions affected:  9.2.x and older (all configurations)  9.3.x (all configurations)  9.4.x (all configurations)  Remediation:  Users of affected versions should plan upgrades based on their branch:  9.2.x - 9.2.25.v20180606 or later 9.3.x - 9.3.24.v20180605 or later 9.4.x - 9.4.11.v20180605 or later  In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system","closed","C-grid,","josemdv","2018-08-15T12:19:13Z","2019-08-15T05:09:41Z"
"","5986","Documentation correction for SSL","https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings#ssl-certificates  I could not get the given code example to work  ```ruby capabilities = Selenium::WebDriver::Firefox::Remote::Capabilities.firefox(accept_insecure_certs: true) driver = Selenium::WebDriver.for :firefox, desired_capabilities: :capabilities ```  This was the code that I got running (different module for Capabilities and corrected reference to `capabilities` local var.)  ```ruby capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(accept_insecure_certs: true) driver = Selenium::WebDriver.for :firefox, desired_capabilities: capabilities ```","closed","","bethesque","2018-06-04T01:10:59Z","2019-08-16T00:09:37Z"
"","6521","Wrong homebrew command in docs","https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver#quick-installation  The command is no longer `brew install chromedriver`. It's now `brew tap homebrew/cask && brew cask install chromedriver`.  Info on homebrew casks: https://github.com/Homebrew/homebrew-cask  I don't have wiki edit access so just flagging it here for someone who does.","closed","","ghiculescu","2018-10-10T20:13:38Z","2019-08-15T08:09:48Z"
"","6054","[dotnet] Refactor DefaultWait to better handle exceptions","https://github.com/SeleniumHQ/selenium/blob/90611adf87d70007c9dc519131232967bae44f4a/dotnet/src/webdriver/Support/DefaultWait%7BT%7D.cs#L178-L186  This could be written more simply (with [greater code efficiency](https://www.thomaslevesque.com/2015/06/21/exception-filters-in-c-6/)) using C# 6 `when` filters:  ```csharp  catch (Exception ex) when (this.IsIgnoredException(ex))  {       lastException = ex;   } ```  (if mini code changes like this are really preferred as PRs, despite the paperwork, I can oblige.)","closed","C-dotnet,","Arithmomaniac","2018-06-21T14:48:55Z","2020-06-24T23:08:39Z"
"","5928","Typo: s/decoding the from/decoding from the/","https://github.com/SeleniumHQ/selenium/blob/3ed89adfd2bf7ed12443fab5bb351619936a9061/java/client/src/org/openqa/selenium/remote/http/HttpRequest.java#L45  >  Get a query parameter. The implementation will take care of decoding the from percent encoding.","closed","","janosvitok","2018-05-21T21:12:21Z","2019-08-16T01:09:34Z"
"","6176","make ConnectionType searilize as integer","https://github.com/SeleniumHQ/mobile-spec/blob/master/spec-draft.md#device-modes expects connection type to be serialized to an integer as well as chromedriver does not accept currently sent string value.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","velma","2018-07-18T12:40:13Z","2018-07-26T15:19:44Z"
"","5884","Documentation for previous versions?","http://seleniumhq.github.io/selenium/docs/api/javascript/  This seems to be the documentation for the v4.0.0-alpha.1 release. How can I view the doc for v3.6.0?  Cheers!","closed","","maximedupre","2018-05-10T22:37:53Z","2019-08-16T02:09:47Z"
"","5851","Nightwatch does not work with firefox on selenium grid 3.7+","How to reproduce:  Install nightwatch v 0.19.20  Run docker-compose up with the following docker-compose.yml file:  ``` seleniumhub:   image: selenium/hub:3.11   ports:     - 4444:4444   environment:     - GRID_TIMEOUT=10  firefoxnode:   image: selenium/node-firefox:3.11   ports:     - 5900:5900   links:     - seleniumhub:hub ```  Run any test using a remote webdriver with the following desiredCapabilities: ``` ""desiredCapabilities"":{   ""browserName"": ""firefox"" } ``` The test will now crash, claiming to be unable to connect, with an error message akin to this:  ``` Error retrieving a new session from the selenium server  MyCoolTest   Connection refused! Is selenium server started?   MyCoolTest   { value:     { sessionId: '40bc120d-5ce5-4710-ac51-e01b1a61be3a',      capabilities:        { 'moz:profile': '/tmp/rust_mozprofile.j6a6rb2IUrXa',         rotatable: false,         timeouts: [Object],         pageLoadStrategy: 'normal',         'moz:headless': false,         'moz:accessibilityChecks': false,         'moz:useNonSpecCompliantPointerOrigin': false,         acceptInsecureCerts: false,         browserVersion: '59.0.2',         platformVersion: '4.13.0-39-generic',         'moz:processID': 139,         browserName: 'firefox',         platformName: 'linux',         'moz:webdriverClick': true,         'webdriver.remote.sessionid': '40bc120d-5ce5-4710-ac51-e01b1a61be3a' } } } ```  We can here see that the sessionID in the response from the request made by nightwatch is inside the value object and not on the top level as Nightwatch expects. I have tried editing the Nightwatch-code to look for the sessionID inside the value object, but all of our tests then fails elsewhere so there seems to be more compatability issues here as all of our tests works just fine when using selenium Grid 3.6.  When using chrome, the sessionID is on the top level of the response instead of being inside the value object  This has to be fixed somehow. Posting the same issue on the Nightwatch github as I am not sure which of you is to blame","closed","","metareven","2018-05-02T08:43:58Z","2019-08-16T04:09:36Z"
"","6364","How do I use Selenium to operate a browser that is open normally？","How do I use Selenium to operate a browser that is open normally? My current question is the x,y coordinates obtained in a normal browser, how to get xpath through selenium instead of opening a WebDriver. Or how to turn a normally open browser into a WebDriver.  maybe:             var shellWindows = new ShellWindows();             InternetExplorerDriver internetExplorerDriver = InternetExplorer;","closed","","once86","2018-09-05T07:25:37Z","2019-08-15T13:09:37Z"
"","6107","[nightwatchjs] how can we take a screenshot & PDF on failure in headless chrome while running in Linux shell","how can we take a screenshot & PDF on failure in headless chrome while running in Linux shell..  I am using Nightwatch.js as framework for my testing and this is my nightwatch.js file..   {   ""src_folders"" : [""test/tests""],   ""output_folder"" : ""reports"",   ""custom_commands_path"" : """",   ""custom_assertions_path"" : """",   ""page_objects_path"" : """",   ""globals_path"" : """",    ""selenium"" : {     ""start_process"" : true,     ""server_path"" : ""/headless/node_modules/selenium-standalone/.selenium/selenium-server/3.7.1-server.jar"",     ""log_path"" : """",     ""port"" : 4444,     ""cli_args"" : {       ""webdriver.chrome.driver"" : ""/headless/node_modules/selenium-standalone/.selenium/chromedriver/2.33-x64-chromedriver"",       ""webdriver.gecko.driver"" : ""/headless/node_modules/selenium-standalone/.selenium/geckodriver/0.19.1-x64-geckodriver"",       ""webdriver.edge.driver"" : """"     }   },    ""test_settings"" : {     ""default"" : {       ""selenium_port"" : 4444,       ""selenium_host"" : ""localhost"",       ""silent"": true,       ""screenshots"" : {         ""enabled"": true,         ""on_failure"": true,         ""on_error"": false,         ""path"": ""/headless/test/screenshots""       },       ""desiredCapabilities"": {         ""browserName"": ""chrome"",         ""javascriptEnabled"": true,         ""chromeOptions"" : {           ""binary"" :"""",           ""args"" : [             ""window-size=1600, 1000"",             ""--headless"",             ""--disable-gpu"",             ""--no-sandbox"",             ""disable-popup-blocking disable-translate""]         }       }     }   } }       Any suggestions for how to take screenshot and PDF's on failure..??","closed","","NagarajuAkkepelli","2018-07-03T06:56:32Z","2019-08-15T20:09:44Z"
"","5952","Selenium 3.12.0 and Internet Explorer 11 on windows 10","Hi, I tried to use RemoteWebDriver usind IE11 on windows 10 64b. My code:  ` DesiredCapabilities cap = DesiredCapabilities.internetExplorer(); 		 		WebDriver driver = new RemoteWebDriver(                  new URL(""http://localhost:4444/wd/hub""),                   cap); 		driver.get(""http://www.google.com""); 		 		Thread.sleep(5000); 		 		driver.close();`  Console: `Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Unable to create session from org.openqa.selenium.remote.NewSessionPayload@f4f92e Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z' System info: host: 'CPX-BA8ZZR18OR0', ip: 'XXX.XXX.XXX.XXX', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171' Driver info: driver.version: unknown Command duration or timeout: 0 milliseconds Build info: version: 'unknown', revision: '1969d75', time: '2016-10-18 09:43:45 -0700' System info: host: 'CPX-BA8ZZR18OR0', ip: 'XXX.XXX.XXX.XXX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: driver.version: RemoteWebDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:161) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:64) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:141) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:241) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:128) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155) 	at Test.main(Test.java:13) Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to create session from org.openqa.selenium.remote.NewSessionPayload@f4f92e Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z' System info: host: 'CPX-BA8ZZR18OR0', ip: 'XXX.XXX.XXX.XXX', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171' Driver info: driver.version: unknown Build info: version: 'unknown', revision: '1969d75', time: '2016-10-18 09:43:45 -0700' System info: host: 'CPX-BA8ZZR18OR0', ip: 'XXX.XXX.XXX.XXX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_151' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$4(NewSessionPipeline.java:75) 	at java.util.Optional.orElseThrow(Unknown Source) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$5(NewSessionPipeline.java:74) 	at java.util.Optional.orElseGet(Unknown Source) 	at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:72) 	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$1(WebDriverServlet.java:246) 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source) `  Can someone help? I download the IEDriver for Selenium 3.11.0, version x64","closed","D-IE,","lorenzomferrigno","2018-05-29T15:11:26Z","2019-08-15T21:09:47Z"
"","6695","Unable to write to Sharepoint people picker","Hi,  I am unable to write to/select people selector's objects/controls for Info-path form called in SharePoint Online. Here is the html code for this field ""Enter a name or email address..."".   People Picker - The People Picker control is a central component of SharePoint Server 2013. The control is connected to a repository so that you can find and select users, groups, and claims to assign permissions in a site.","closed","","rashmighub","2018-11-27T16:51:28Z","2019-08-15T04:09:49Z"
"","5913","process.env['PATH'] return undefined if the system environment key [PATH] is not strictly upcased","Hi,   In below code, when my system environment key [PATH] is written as **Path**, it cause process.env['PATH'] to return undefined. Can someone please take a look?  exports.findInPath = function(file, opt_checkCwd) {   let dirs = [];   if (opt_checkCwd) {     dirs.push(process.cwd());   }   dirs.push.apply(dirs, **process.env['PATH']**.split(path.delimiter));    let foundInDir = dirs.find(dir => {     let tmp = path.join(dir, file);     try {       let stats = fs.statSync(tmp);       return stats.isFile() && !stats.isDirectory();     } catch (ex) {       return false;     }   });    return foundInDir ? path.join(foundInDir, file) : null; };  ![image](https://user-images.githubusercontent.com/5183080/40228644-6c3b1ac6-5ac4-11e8-83c1-b661f47fcdf8.png)  ![image](https://user-images.githubusercontent.com/5183080/40228694-8bfedfb4-5ac4-11e8-9e5b-795fdfaa2f6c.png)   https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/io/index.js","closed","C-nodejs,","zzhengjian","2018-05-18T09:54:48Z","2021-09-05T08:08:29Z"
"","6018","Selenium webdriver reference is null for parallel execution for N unit","Hi, In order to run browsers for parallel,we have to the browser as static. So,that I declared the drivers as  public  IWebDriver Driver; while passing it to the webdriver interaction class it is throwing null.(object reference is not object.) sample of interactions code: public class BasicInteractions:Base     {         //private IWebDriver Driver;         public BasicInteractions(IWebDriver Driver)         {             Base bc = new Base();             this.Driver = bc.Driverclass();         }          #region Navigating to the URL         public void GoToURL(string url)         {             //openBrowser();                       Driver.Navigate().GoToUrl(url);         }         public void Refresh()         {             Driver.Navigate().Refresh();         }         public void ScrollBy(int scroll)         {             IJavaScriptExecutor js = (IJavaScriptExecutor) Driver;             js.ExecuteScript("" window.scrollBy(0, scroll);"");          }         public string GetCurrentURL()         {             return Driver.Url;         }         #endregion          #region sendkeys functionality         public void Type(By by, string value)         {             Driver.FindElement(by).SendKeys(value);         }  sample of base class:  public class Base     {         public  IWebDriver Driver;                           //public void openbrowser()         //{         //    //var dir = Path.GetDirectoryName(typeof(Base).Assembly.Location);         //    //Environment.CurrentDirectory = dir;         //    //string path = dir;         //    //Console.WriteLine(path);         //    //Driver = new ChromeDriver(path + @""\Assets"");         //    //Driver.Manage().Window.Maximize();         //}         public  IWebDriver Driverclass()         {             if (Driver == null)             {                 var dir = Path.GetDirectoryName(typeof(Base).Assembly.Location);                 Environment.CurrentDirectory = dir;                 string path = dir;                 Driver = new ChromeDriver(path + @""\Assets"");                 Driver.Manage().Window.Maximize();                 return Driver;             }             else             {                 return Driver;             }         } could post me a solution on this.","closed","","kumarbrandmuscle","2018-06-13T09:44:31Z","2019-08-15T22:09:58Z"
"","6195","ERROR: TypeError: Cannot read property 'until' of undefined","Hi, I'm getting  TypeError: Cannot read property 'until' of undefined  Regards","closed","R-awaiting answer,","mdasifazhar","2018-07-23T20:46:01Z","2019-08-15T03:10:03Z"
"","6359","unknown error: DevToolsActivePort file doesn't exist","Hi, I get unknown error: DevToolsActivePort file doesn't exist every day when trying to start 50 instances of InstaPy at the same time in the morning. I use --no-sandbox and --no-zygote.   Any ideas?","closed","","fgisslen","2018-09-04T06:59:29Z","2019-08-15T13:09:46Z"
"","5861","[rb] Atoms broken or not yet implemented ?","Hi,  While testing the latest dev version of selenium via capybara in ruby (with firefox), I had an error because in the file  selenium/rb/lib/selenium/webdriver/atoms.rb  In the function  def read_atom(function)         File.read(File.expand_path(""../atoms/#{function}.js"", __FILE__)) end  We look for *.js file in a directory that should be called atoms one level higher, but that directory does not exist in the current version of the package.  Is that something still to be implemented, or a bug ?   Thanks and Regards,  Sébastien","closed","C-rb,","janas-sebastien","2018-05-05T15:26:10Z","2019-08-16T03:09:43Z"
"","6105","uploading file is working fine in chrome but getting issues while running tests in firefox using nightwatch.js","hi,  while running selenium tests in firefox i am getting upload file issue using nightwatch.js. Here is the sample of my test..  uploadFile: function (file) {  this.browser.click(locators.dashboard.candidate.createResume); this.browser.pause(timeOut); this.browser.verify.urlContains(baseURL+'/#/candidate/create-resume'); this.browser.click(locators.createResume.chooseFileButton); this.browser.setValue(locators.createResume.chooseFileButton, require('path').resolve(__dirname + '/' + file)); }   my specifications: firefox version - "" 60.0.2 (64-bit) "", chrome Version 67.0.3396.99  nightwatch v0.9.21, node v8.11.1 ""selenium-standalone"": ""^6.11.0"",","closed","","NagarajuAkkepelli","2018-07-03T06:55:02Z","2019-08-15T20:09:46Z"
"","6007","error: cannot access Killable","Hi,  The code compilation is failing with ""error: cannot access Killable"" at the line  class FirefoxWebDriver extends FirefoxDriver{ ......  We have upgraded to Selenium 3.11 from 3.3.1. We are trying to run tests on chrome browser configured with selenium grid using Docker. I found that Killable class was removed. Kindly suggest if I need update any code changes.  Thanks.","closed","","achyutha526","2018-06-08T20:00:26Z","2019-08-15T23:09:46Z"
"","6400","W3C Selenium","Hi,  I can not find in the w3c specification how would be able to define the OS version that the browser would need to run on.  Is this covered at all by the spec?  Thank you!","closed","","DavidGangel","2018-09-12T13:46:31Z","2019-08-15T11:10:03Z"
"","6378","Getting Driver is not accessible for all webdrivers in Eclipse in MAC","Hi,  I am trying to run Selenium in Eclipse in MAC machine but getting “The type org.openqa.selenium.firefox.FirefoxDriver is not accessible” error message.  I am getting this error message in all web drivers.  Looks like am missing to set the path correctly?  Can someone please help?  Kanuj","closed","","kanuj16","2018-09-07T03:32:04Z","2019-08-15T12:09:58Z"
"","6092","Prometheus metrics for monitoring Selenium performance","Hi,  I added prometheus metrics colletion support to selenium grid (currently up to 3.11, merging currently to 3.13).  The integrated JMX interfaces did just not provide the information we wanted and we now have had an internal installation tunning nicely with prometheus metrics for a few months now.  Would you be interested to have this added to the mainline?   I would clean up things a bit and create a PR. This would also reduce my workload chasing selenium development and merging everything.  Please let me know what you think","closed","C-grid,","jabbrwcky","2018-06-28T12:58:57Z","2020-05-20T22:58:55Z"
"","6277","how to fix/control the issue ""org.openqa.selenium.UnhandledAlertException""","Hi,  Could you please help for this, it will some times happen such issue when i selenium the website page.  ## System  * Version:  0.21.0-win64 * Platform:  Linux 3.10.0-862.3.2.el7.x86_64 * Firefox:  61.0.1 * Selenium:  selenium-server-standalone-3.13.0   ## TestcaseException in thread ""main"" java.lang.reflect.InvocationTargetException     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoader.java:58) **Caused by: org.openqa.selenium.UnhandledAlertException: :**  Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'hkl2005830******', ip: '130.17******', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.3.2.el7.x86_64', java.version: '1.8.0_171' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 61.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 5344, moz:profile: C:\Users\43897129\AppData\L..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 6.3, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, webdriver.remote.sessionid: 9f3e151c-2a5b-4022-a6d7-cd8...} Session ID: 9f3e151c-2a5b-4022-a6d7-cd8c54b6dc7d *** Element info: {Using=id, value=ctl00_lblDisplay}     at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:120)     at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)     at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)     at org.openqa.selenium.By$ById.findElement(By.java:218)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)     at com.selm_hkex$1.apply(selm_hkex.java:128)     at com.selm_hkex$1.apply(selm_hkex.java:1)     at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)     at com.selm_hkex.main(selm_hkex.java:126)     ... 5 more","closed","","fireson-gor","2018-08-14T02:51:48Z","2019-08-15T16:09:36Z"
"","6001","Selenium Weddriver 3.12.1 : throw the error on the line ExecuteScript(""return jQuery.active == 0"")","Hi I upgrade the latest Selenium WebDriver and Chrome driver 2.39 in VS 20015 .   Selenium.WebDriver 3.12.1 Selenium.Support: 3.12.1  However, it throws the error on the following line.   bool isAjaxDone = ((bool)((IJavaScriptExecutor)_driver).ExecuteScript(""return jQuery.active == 0""));  Error message:  =OpenQA.Selenium.WebDriverException : unknown error: jQuery is not defined (Session info: chrome=67.0.3396.62) (Driver info: chromedriver=2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9),platform=Windows NT 10.0.16299 x86_64)  Go back to Selenium.WebDriver 3.11.2 ,Selenium.Support: 3.11.2 and it does not have any issue.  Any idea? Is it the known issue in Selenium.WebDriver 3.12.1?  Thanks,  Ray","closed","","toraylin","2018-06-06T21:40:11Z","2019-08-15T23:09:53Z"
"","6276","Null pointer Exception on doing element.getText() in appium","Hi I am getting **nullPointerException when i am doing getText() operation on element.**When i am debugging my code I saw that element is founded successfully but when i am doing  element.getText(),it gives me null pointer. Kindly help me resolving this issue.  //Screenshot Attached:","closed","","sukirti21","2018-08-13T14:52:31Z","2019-08-15T16:09:35Z"
"","5992","Not able to capture full screenshot after scrolling down on ubuntu using ashot","Hi guys, I need to take full screenshot of a web application by scrolling down. I have used Ashot to achieve same, check below code  final Screenshot screenshot = new AShot().shootingStrategy(ShootingStrategies.viewportRetina(100,0,0,2)).takeScreenshot(driver);         final BufferedImage image = screenshot.getImage();         try {             ImageIO.write(image, ""PNG"", new File(fileNameToCopy));         } catch (IOException e) {             e.printStackTrace();         }  This code is working well on my local (mac osx) however when i am running same code on jenkins server (ubuntu) the screenshot captured has some background black spaces. Attaching screenshots taken on both local and on jenkins server.  Could you pls tell me what could be the issue.  Thanks in advance.  environment details with screenshots mentioned below.   ## Meta - jenkins box details: OS:  Linux version 4.4.0-1055-aws  (Ubuntu 5.4.0-6ubuntu1~16.04.9)  Selenium Version:  3.5.3 Browser:  Mozilla Firefox 54.0 geckodriver: geckodriver-v0.17.0-linux64.tar.gz ![jenkins_ooredommappcataloguepageandroid_screenshot 1](https://user-images.githubusercontent.com/39795588/40960744-4cdcedaa-68be-11e8-83d3-34b4c26351f8.png)   local machine details OS:  macOS Sierra  Selenium Version:  3.5.3 Browser:  Mozilla Firefox 54.0 geckodriver: geckodriver-v0.17.0 ![local_ooredommappcataloguepageandroid_screenshot](https://user-images.githubusercontent.com/39795588/40960769-57db337e-68be-11e8-9b70-93b1e1e5dd3c.png)","closed","","swaradewarde","2018-06-05T07:08:06Z","2019-08-15T23:10:04Z"
"","6803","[Help Required]  How to change the rules of Content Security Policy through JavascriptExecutor in Selenium - Java?","Hi Everyone,  I have written a Java - Selenium Program to replace screenshots for App Store and Play Store. However, custom hosted URLs are not supported as input on the webpage because of the Content Security Policy on the web pages. I have used JavascriptExecutor in selenium to update the Image URLs in the webpages.   Please View the screenshot references below :   1.https://lh3.googleusercontent.com/EDDOO6HKwKHGISG6pCNSu65wDqckRPvzFQm6av2YF4SNSvcSk3mN6cJjBUPbIf_TiaFLQBTRVBF5r1doZabli0qC0v75dKeiyB8Py1neDCy8bOIC4N9XuSZCw9MyoOFy7BIniCrFJhy-kdU_lXZypYV9Opv4KX7_ndoI5RdSI_z73tZn0nFIhUTSiokUwvDC5DhozFcr2uq2f8iOMpvyu6S_nXVExUk_WxJb-Hg9Vp0_4VLxyzzOip2RN4OWCkW1GoIR5FTNjJ97NvcXnxtUgjxYygsTcrdtI94hhGy1d-yhBStede6Z4HuMO1AoFTf1LhZBAkQLZfx1-CQFiM0HMyrzVSR6biNUA_qMQ_2eEO2wbPAuCKsur-aw36ZZxT3_emuY8gs-ZTZI5phZYskMCJnnBCBYIrxwJFvBp86XfHqnpHDsJu9kw-7I1LLD_YJLh9otNElRrSILtQOIGQDVYMRf2-CxrNHI5vC_PwFDq2We1RrzVQIShJwp3S2cTcEgpCTLJZS6QSDKgaxgVqvqRBtvxgyg80I9jfnn1h3OapRaDzVHDXK6546nxr1_8ovIvBexPJj0DEvaSA7WM1iieCkCcAUMEIftr2DxMP6gswG98_Vfp4mgYb3EcETHSsyRi_3N4KsodWalCB0PYDjJAbsMR5BC7i5mlB4SiEFNahew-LzHdZFylm3rmZOB8t2v7zw97FhjjTYDXmkqIA=w2169-h1220-no  ---- 2.https://lh3.googleusercontent.com/oPnnk-NOsi2FplUuy5AOfCRKc_mP3GPvhoN4CYVjxD7vNpmHnBW2jgVL7ixZi-skdFJQE_C7erfhPL8JGgfhXAA0CPI5Di1UopDOm46BbgWg9ChqcfIrRxWGv3rK2XMb-Uixe56Z0MhizrvpuO5yQzLE_MaLC3ms-pK5h_9E7DVxrNOZpMtgU77gkZWplduDtWDgDBeCKgDdxM8p7FWzfUDr0jOumasAV0j2WklRs4twqym0knMgxfUgQN403dlbssirVk03OjbvlDFgH34xBZO8bWX3fjoxR2Zumczg5Bv4TTDapNmsvVqytyV9ZswyP_iYO0LYRKdW6wBiP2dtd8D7elBtVWpWCuE74dj9tENFsh7_Z7MOp-64mnNj_uQOzrMOKEMnnFbbyrREutQMyyeNzJ8s-FQL5EtTuAeEAeqEBRbhgT2iiYr7wzOi8KEHKUtAOnuMRMs9EpixadgXelIZiPeVZ2HvlrzmcO_5-D-0vNFbBOke0BJn_De1zv7wZFkTaVuuENgc9oqjvqJYK99g_KuHAnFZzYEkfCf0Bd_TCoWGKhMX08V_NiJbskN9XZl7HZbwaO8yRPeFqV3DyclR0MEHj3JNHeG4eAiwTeyQcAu5uGn-uh-VCKOTbT0wxI3aHhtMsiUv517OjCAVrhLg=w2169-h1220-no   I would like to change these audit rules. I would like to load images of any domain with http. I have researched upon this, looked through multiple solutions, but none of them work.  Please suggest me a workaround on this.  Thanks in advance.","closed","","sonali215","2019-01-01T15:10:49Z","2019-08-15T01:09:34Z"
"","6302","Error running a python script using selenium web driver","Hi everybody,  my script works very well when I use it at my offices (wifi connection). But when I get home and I use my personal wifi or any other wifi, it doesn't work...  Could you please help me ??  Current Behavior  ERROR [2018-08-11 21:31:18] [mehdidouache] Message: Can not connect to the Service /Users/Mehdi/Desktop/InstaPy/assets/chromedriver Traceback (most recent call last): File ""/Users/Mehdi/Desktop/InstaPy/instapy/instapy.py"", line 299, in set_selenium_local_session chrome_options=chrome_options) File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 62, in init self.service.start() File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/common/service.py"", line 102, in start raise WebDriverException(""Can not connect to the Service %s"" % self.path) selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service /Users/Mehdi/Desktop/InstaPy/assets/chromedriver","closed","","mehdi691","2018-08-17T10:40:42Z","2019-08-15T15:09:42Z"
"","5955","ffOptions.addPreference(""browser.link.open_newwindow"", 3); doesn't workatall","Hi Barancev,  I'm facing issue after tried using the following code FirefoxOptions options = new FirefoxOptions(); options.addPreference(""browser.link.open_newwindow"", 3); driver = new FirefoxDriver(options);  with latest version of geckodriver.  Please help me on this.  Thanks","closed","","jettysoft","2018-05-29T20:35:15Z","2019-08-16T00:09:44Z"
"","6605","Selenium fails to launch when running on a single cpu","Hi all,   After the recent update to v3.141.0 I've found that Selenium throws an exception when run on a single cpu.    During our CI process, I'm trying to run Protractor's webdriver-manager tool which depends on Selenium.  To use it you typically run webdriver-manager update to get the latest drivers, e.g. Selenium, Chromedriver, etc.  Then you run webdriver-manager start, which launches Selenium and Chromedriver etc.  The problem looks to happen during Jetty setup, in 'selenium/java/server/src/org/openqa/selenium/grid/server/BaseServerOptions.java' ln.61 where the max threads is set to 3 for single cpu systems  ## Meta - OS:  Fedora Linux Selenium Version:  3.141.0 Browser:  N/A Browser Version:  N/A  ## Expected Behavior - Selenium starts normally when run on a single cpu  ## Actual Behavior - Selenium throws an exception when run on a single cpu  ## Steps to reproduce -  Launch selenium on a system with a single cpu (we're using a vm), it should throw the following exception:  ```Exception in thread ""main"" java.lang.IllegalStateException: Insufficient configured threads: required=3 < max=3 for QueuedThreadPool[qtp707610042]@2a2d45ba{STARTED,3","closed","R-awaiting answer,","AndrewFinlay","2018-11-01T21:45:49Z","2019-08-15T06:09:37Z"
"","6164","Getting “java.net.SocketException: Software caused connection abort: recv failed” Exception while using Gecko driver 21.0","Hi All,  I’m using  Latest Gecko Driver-21.0  Firefox Version-61.0.1  Selenium Stand Server -3.13  I’m getting Exception “java.net.SocketException: Software caused connection abort: recv failed” while handling the child window  I’m getting the above issue at driver.getWindowhandles() Statement  Can anyone look into this","closed","R-awaiting answer,","TagoreRavindra","2018-07-16T11:52:13Z","2019-08-15T15:10:00Z"
"","6671","Task scheduler not launching powerbi report in chrome using Selenium script","Hi All,  I am trying to launch the powerbi report in chrome browser through Selenium script. its basically taking the username and password to launch the report in chrome browser. I created the console application and make the exe. Expected Behavior: 1. when we executed the exe manually then its should launch the powerbi report in chrome(username and password will be filled by script).  --> This is working fine.  2. When we scheduled the exe from task scheduler then exe should run and launch the powerbi report in chrome browser(username and password will be filled by script).  --> This should working but its not working.  Assumption for point 2: exe trying to sent the command to chrome browser in background but its not performing any action and throwing following error: Error: The HTTP request to the remote WebDriver server for URL timed out after 60 seconds.  Sample Code: Used following code.  IWebDriver driver = new ChromeDriver();                      driver.Navigate().GoToUrl(testreport);                     driver.FindElement(By.Id(""a12345"")).SendKeys(""abc"");                     driver.FindElement(By.Id(""idTestButton1"")).Click();                      Thread.Sleep(10000);                     AutoItX.Send(""abc"");                     AutoItX.Send(""{TAB}"");                     AutoItX.Send(""test123"", 1);                     AutoItX.Send(""{Enter}"");                      DateTime startTime = DateTime.UtcNow;  WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(120)); wait.Until(ExpectedConditions.ElementIsVisible(By.ClassName(""reprtname"")));  Thanks","closed","","ankittarsolia","2018-11-21T07:43:58Z","2019-08-15T04:10:02Z"
"","6335","Is there a way to map offset of x, y coordinates calculated from top-left 0, 0, to x, y coordinates that calculated from center point 0, 0.","Hi , I'm facing issue with the script that executes click on specific area in canvas properly on Chrome66 and Edge17 but failing with   ""org.openqa.selenium.interactions.MoveTargetOutOfBoundsException""  on Safari11 and  Firefox61 I did some investigation and it looks that offset x, y coordinates that I'm using to click on canvas is calculated from a center point of view (0,0) on latest Safari and Firefox. I spent hours trying  to map offset of x, y that calculated from top-left 0,0 and works on Chrome (see below) by calculating % of Width: 630 and Hight: 354 of element canvas but wasn't successful :(  Any help is welcome and very much appreciated!  I'm running Selenium: 3.14 and latest Web Browsers Driver   Here are the offsets that works on Chrome and Edge but fail on FF and Safari: ` ``` package com.utility.generic; public class CoordinateUtils extends BaseMethods { public static int getElementWidth(WebElement ele) {               int i = ele.getSize().getWidth();               return i;        } public static int getElementHeight(WebElement ele) {               int i = ele.getSize().getHeight();               return i;        } public static int getClickToContinueX(WebElement ele) {               double x = getElementWidth(ele) * 0.352;                int i = (int) x;               return i;        }  public static int getClickToContinueY(WebElement ele) {               double y = getElementHeight(ele) * 0.432;                int i = (int) y;               return i;        }   public static void standardClickToContinue(WebDriver IWebDriver1, WebElement WebElem) {               Log.info(""Clicking on the CLICK TO CONTINUE Scene to resume the Ad""); new Actions(IWebDriver1).moveToElement(WebElem, 0, 0).moveByOffset(getClickToContinueX(WebElem), getClickToContinueY(WebElem)).click().build().perform();               waitFor(1);               Log.info(""Clicked on the CLICK TO CONTINUE Scene to resume the Ad"");        } ```   And this is a INFO Logger CAP:  ``` RemoteTestNG] detected TestNG version 6.14.3 Capabilities {browserName: Safari Technology Preview} Aug 27, 2018 10:26:45 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C 27 Aug 2018 10:27:16  INFO logger - Clicking on the CLICK TO CONTINUE Scene to resume the Ad Aug 27, 2018 10:27:16 AM org.openqa.selenium.interactions.Actions moveToElement INFO: When using the W3C Action commands, offsets are from the center of element FAILED: launchBrowser org.openqa.selenium.interactions.MoveTargetOutOfBoundsException:  Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:05:20.749Z' System info: host: 'OBUSLOVICH-MBP2.local', ip: 'fe80:0:0:0:423:e05b:1c5c:b64c%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_181' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities {acceptInsecureCerts: false, browserName: Safari Technology Preview, browserVersion: 12.1, javascriptEnabled: true, platform: MAC, platformName: MAC, setWindowRect: true} Session ID: 097C7447-FF6A-4F35-84B0-BB69B16DD2FE ```","closed","","aglo65","2018-08-27T19:00:07Z","2019-08-15T11:09:46Z"
"","6763","Python - pytest - WebDriver - is not JSON serializable","Hey Guys,  I use: pytest==4.0.2 websocket-client==0.54.0 parse==1.9.0 selenium==3.14.1 psutil pywin32==224 pytest_bdd==3.0.1 pytest-html==1.19.0  I use page object model. I want to pass my driver to the constructor of the BasePage class. BasePage in turn is inherited by HomePage. ```` class BasePage:     def __init__(self, browser):         self.browser = browser ```` ```` class HomePage(BasePage):     def __init__(self, browser):         super().__init__(browser) ````  I invoke wedriver using pytest fixture. It seems like I can not pass driver to base class constructor. The final error is:  ```` def default(self, o):         """"""Implement this method in a subclass such that it returns         a serializable object for ``o``, or calls the base implementation         (to raise a ``TypeError``). ```` **But where should this be implemented? In the driver code? My base class?** ``` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  self = , command = 'findElement' params = {'sessionId': '537ad5c51c4e8b764d08118d6bcbafa3', 'using': , 'value': 'xpath'}      def execute(self, command, params):         """"""         Send a command to the remote server.              Any path subtitutions required for the URL mapped to the command should be         included in the command parameters.              :Args:          - command - A string specifying the command to execute.          - params - A dictionary of named parameters to send with the command as            its JSON payload.         """"""         command_info = self._commands[command]         assert command_info is not None, 'Unrecognised command %s' % command         path = string.Template(command_info[1]).substitute(params)         if hasattr(self, 'w3c') and self.w3c and isinstance(params, dict) and 'sessionId' in params:             del params['sessionId'] >       data = utils.dump_json(params)  C:\Users\...\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\remote\remote_connection.py:374: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  json_struct = {'sessionId': '537ad5c51c4e8b764d08118d6bcbafa3', 'using': , 'value': 'xpath'}      def dump_json(json_struct): >       return json.dumps(json_struct)  C:\Users\...\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\remote\utils.py:33: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  obj = {'sessionId': '537ad5c51c4e8b764d08118d6bcbafa3', 'using': , 'value': 'xpath'}, skipkeys = False ensure_ascii = True, check_circular = True, allow_nan = True, cls = None, indent = None, separators = None, default = None, sort_keys = False, kw = {}      def dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True,             allow_nan=True, cls=None, indent=None, separators=None,             default=None, sort_keys=False, **kw):         """"""Serialize ``obj`` to a JSON formatted ``str``.              If ``skipkeys`` is true then ``dict`` keys that are not basic types         (``str``, ``int``, ``float``, ``bool``, ``None``) will be skipped         instead of raising a ``TypeError``.              If ``ensure_ascii`` is false, then the return value can contain non-ASCII         characters if they appear in strings contained in ``obj``. Otherwise, all         such characters are escaped in JSON strings.              If ``check_circular`` is false, then the circular reference check         for container types will be skipped and a circular reference will         result in an ``OverflowError`` (or worse).              If ``allow_nan`` is false, then it will be a ``ValueError`` to         serialize out of range ``float`` values (``nan``, ``inf``, ``-inf``) in         strict compliance of the JSON specification, instead of using the         JavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``).              If ``indent`` is a non-negative integer, then JSON array elements and         object members will be pretty-printed with that indent level. An indent         level of 0 will only insert newlines. ``None`` is the most compact         representation.              If specified, ``separators`` should be an ``(item_separator, key_separator)``         tuple.  The default is ``(', ', ': ')`` if *indent* is ``None`` and         ``(',', ': ')`` otherwise.  To get the most compact JSON representation,         you should specify ``(',', ':')`` to eliminate whitespace.              ``default(obj)`` is a function that should return a serializable version         of obj or raise TypeError. The default simply raises TypeError.              If *sort_keys* is true (default: ``False``), then the output of         dictionaries will be sorted by key.              To use a custom ``JSONEncoder`` subclass (e.g. one that overrides the         ``.default()`` method to serialize additional types), specify it with         the ``cls`` kwarg; otherwise ``JSONEncoder`` is used.              """"""         # cached encoder         if (not skipkeys and ensure_ascii and             check_circular and allow_nan and             cls is None and indent is None and separators is None and             default is None and not sort_keys and not kw): >           return _default_encoder.encode(obj)  C:\Users\...\AppData\Local\Programs\Python\Python35-32\lib\json\__init__.py:230: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  self =  o = {'sessionId': '537ad5c51c4e8b764d08118d6bcbafa3', 'using': , 'value': 'xpath'}      def encode(self, o):         """"""Return a JSON string representation of a Python data structure.              >>> from json.encoder import JSONEncoder         >>> JSONEncoder().encode({""foo"": [""bar"", ""baz""]})         '{""foo"": [""bar"", ""baz""]}'              """"""         # This is for extremely simple cases and benchmarks.         if isinstance(o, str):             if self.ensure_ascii:                 return encode_basestring_ascii(o)             else:                 return encode_basestring(o)         # This doesn't pass the iterator directly to ''.join() because the         # exceptions aren't as detailed.  The list call should be roughly         # equivalent to the PySequence_Fast that ''.join() would do. >       chunks = self.iterencode(o, _one_shot=True)  C:\Users\...\AppData\Local\Programs\Python\Python35-32\lib\json\encoder.py:198: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  self =  o = {'sessionId': '537ad5c51c4e8b764d08118d6bcbafa3', 'using': , 'value': 'xpath'}, _one_shot = True      def iterencode(self, o, _one_shot=False):         """"""Encode the given object and yield each string         representation as available.              For example::                  for chunk in JSONEncoder().iterencode(bigobject):                 mysocket.write(chunk)              """"""         if self.check_circular:             markers = {}         else:             markers = None         if self.ensure_ascii:             _encoder = encode_basestring_ascii         else:             _encoder = encode_basestring              def floatstr(o, allow_nan=self.allow_nan,                 _repr=float.__repr__, _inf=INFINITY, _neginf=-INFINITY):             # Check for specials.  Note that this type of test is processor             # and/or platform-specific, so do tests which don't depend on the             # internals.                  if o != o:                 text = 'NaN'             elif o == _inf:                 text = 'Infinity'             elif o == _neginf:                 text = '-Infinity'             else:                 return _repr(o)                  if not allow_nan:                 raise ValueError(                     ""Out of range float values are not JSON compliant: "" +                     repr(o))                  return text                   if (_one_shot and c_make_encoder is not None                 and self.indent is None):             _iterencode = c_make_encoder(                 markers, self.default, _encoder, self.indent,                 self.key_separator, self.item_separator, self.sort_keys,                 self.skipkeys, self.allow_nan)         else:             _iterencode = _make_iterencode(                 markers, self.default, _encoder, self.indent, floatstr,                 self.key_separator, self.item_separator, self.sort_keys,                 self.skipkeys, _one_shot) >       return _iterencode(o, 0)  C:\Users\...\AppData\Local\Programs\Python\Python35-32\lib\json\encoder.py:256: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  self = , o =       def default(self, o):         """"""Implement this method in a subclass such that it returns         a serializable object for ``o``, or calls the base implementation         (to raise a ``TypeError``).              For example, to support arbitrary iterators, you could         implement default like this::                  def default(self, o):                 try:                     iterable = iter(o)                 except TypeError:                     pass                 else:                     return list(iterable)                 # Let the base class default method raise the TypeError                 return JSONEncoder.default(self, o)              """""" >       raise TypeError(repr(o) + "" is not JSON serializable"") E       TypeError:  is not JSON serializable  C:\Users\...\AppData\Local\Programs\Python\Python35-32\lib\json\encoder.py:179: TypeError ```","closed","","Vic152","2018-12-17T11:41:38Z","2019-08-15T02:09:43Z"
"","5946","HTTP PRoxy for anonymous browsing","Hello. I am using selenium-webdriver with the chrome driver on my ruby project. I want to use http proxies to make my browsing anonymous. I use that setting for it:      Selenium::WebDriver::Proxy.new(http: ""#{ip}:#{port}"")       driver = Selenium::WebDriver.for :chrome   but for some reason, the driver does not have the ip of the proxy, instead it has the server ip ... why?  Why is my http proxy not used/working?","closed","","Prutheus","2018-05-26T22:32:56Z","2019-08-16T00:09:57Z"
"","6767","RemoteWebDriver: Touch Actions are not working, exception “OpenQA.Selenium.WebDriverException”","Hello, i have a problem with TouchEvents and RemoteWebDriver. From our automation testing purposes I need to use RemoteWebDriver that is working through Appium server with VS Android Emulator.  So, after enormous time of googling and searching i made this code block, that gives me exception. **NOTES:**  **This code block does not contain waiters, because it's temporary block while investigating problem, used Thread Sleep as temporary wait Used locator for element is correct, click is working correctly**  ``` [TestMethod]     public void TestMethod1()     {         DesiredCapabilities capabilities = new DesiredCapabilities();         capabilities.SetCapability(""deviceName"", ""donatello"");         capabilities.SetCapability(""platformName"", ""Android"");         capabilities.SetCapability(""udid"", ""169.254.190.187:5555"");         capabilities.SetCapability(""platfomVersion"", ""6.0.0"");         capabilities.SetCapability(""browserName"", ""Browser"");          String baseURL = ""http://127.0.0.1:"";         String minorURL = ""/wd/hub"";         String port = ""4723"";          RemoteDriverWithTouchScreen driver = new RemoteDriverWithTouchScreen(new Uri(baseURL + port + minorURL), capabilities);          var touchActions = new OpenQA.Selenium.Interactions.TouchActions(driver);          driver.Navigate().GoToUrl(""page_url"");          touchActions             .SingleTap(driver.FindElement(By.XPath(""some_locator"")))             .Build()             .Perform();     }      public class RemoteDriverWithTouchScreen : RemoteWebDriver, IHasTouchScreen     {         public ITouchScreen TouchScreen => new RemoteTouchScreen(this);          public RemoteDriverWithTouchScreen(Uri url, ICapabilities cap) : base(url, cap)         {          }     } ``` Exception: OpenQA.Selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Could not proxy. Proxy error: Could not proxy command to remote server. Original error: 404 - ""unknown command: session/5390590e73f152540d99a9623e1dd19a/actions""    Selenium ver.: 3.4","closed","","Ttiimmii","2018-12-18T08:41:02Z","2019-08-15T02:09:36Z"
"","6697","Failed to set preferences: Unable to write Firefox profile: The process cannot access the file because it is being used by another process.","Hello, My setup is 10 Windows 8.1 VMs registered to another VM running hub. Node example: java -Dwebdriver.gecko.driver=c:\selenium\geckodriver.exe -jar selenium-server-standalone-3.141.59.jar -role node -hub http://10.0.80.5:4444/grid/register -port 6558 -browser browserName=firefox,platform=WINDOWS,maxInstances=3,applicationName=qaKmsFrontEnd5 -maxSession 3 -host il-AutoKmsNode5-qa  Hub: java -jar ./selenium-server-standalone-3.141.59.jar  -role hub -host 10.0.80.5 -port 4444  Also added to windows path the gekodriver location and FF location.  This is from the code:         fp = webdriver.FirefoxProfile()         fp.set_preference('browser.download.folderList', 2) # custom location         fp.set_preference('browser.download.manager.showWhenStarting', False)         fp.set_preference('browser.download.dir', localSettings.LOCAL_SETTINGS_TEMP_DOWNLOADS)         fp.set_preference('browser.helperApps.neverAsk.saveToDisk', 'video/mpeg,video/avi,video/MP2T,video/3gpp)         fp.update_preferences()  webdriver.Remote(browser_profile=fp,command_executor=localSettings.LOCAL_SETTINGS_SELENIUM_HUB_URL, desired_capabilities={'marionette':True,'browserName': hostBrowser.split(""_"")[1], 'requireWindowFocus':True, 'applicationName': localSettings.LOCAL_SETTINGS_SELENIUM_GRID_POOL})  The code worked for me, suddenly I got an exception: 'Message: Failed to set preferences: Unable to write Firefox profile: The process cannot access the file because it is being used by another process. (os error 32)'  See full log: https://tinyurl.com/y7c22t7x  Maybe it caused by automatic update of FF. I've updated everything to latest, and still getting the exception sometimes. It's not consistent, not in the same test and not the same VM.   Bottom line this is my current environment: OS: Windows 8.1 Browser: FF 61.0.1 (Also tried on the latest 63) 64bit Browser Driver version:  GeckoDriver 0.23 Python 3.5.2 Java Installed on Nodes (build 1.8.0_191-b12) Selenium Grid version: selenium-server-standalone-3.141.59.jar  Some ideas?","closed","D-firefox,","Sigalov","2018-11-27T17:40:37Z","2019-08-14T08:09:38Z"
"","6340","[QUESTION] Status of ""selenium-webdriver"" package?","Hello,  What is the status of ""selenium-webdriver"" package on npm? Its ""4.0.0-alpha1"" released 7 months ago. Is it still maintained? Which java binaries release it supports?  Thanks, Nickolay","closed","","canonic-epicure","2018-08-28T12:16:32Z","2019-08-15T14:09:36Z"
"","6394","[QUESTION] Status of ""selenium-webdriver"" npm package?","Hello,  I already asked this question in the #6340. I was then advised to post this question to the google-groups forum, where it has been left unanswered: https://groups.google.com/forum/#!topic/selenium-users/NZ9Qsp5as9w  It seems the google-groups is not monitored by the developers, so I'm repeating the question here again.  What is the status of ""selenium-webdriver"" package on npm? Its ""4.0.0-alpha1"" released 8 months ago. Is it still maintained? Which java binaries release it supports (latest is v3.14.0)?   If the package is not maintained anymore, it should be noted somewhere in the docs.  Thanks, Nickolay","closed","C-nodejs,","canonic-epicure","2018-09-11T18:14:14Z","2019-09-17T06:09:36Z"
"","6413","Support setting proxy for Safari WebDriver implementation","Hello,  As mentioned in https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/5051 proxy support is an important feature. Please add it to Safari Driver.  Thanks, Nickolay","closed","","canonic-epicure","2018-09-16T13:24:13Z","2019-08-15T11:09:53Z"
"","6560","Selinium Not able to open the website properly in selinium browser getting unable to Identify Your browser","Hello sir i am using selenium for automation purpose so i try to open www.whitepages.com using selenium as i am from india  this site is not opening here so i have used the vpn to open the site and in normal chrome and firefox  i am able to see the website properly but when i try use selenium then i am geeing error  which written    unable to Identify Your browser  ![mail](https://user-images.githubusercontent.com/29659630/47215812-5d760f80-d3c0-11e8-8ecd-d5f9f4700009.png) ![shot2](https://user-images.githubusercontent.com/29659630/47215816-60710000-d3c0-11e8-9200-8ca08375b4eb.png)","closed","","pradyadav","2018-10-19T11:29:53Z","2019-08-15T07:09:54Z"
"","6342","CKEditor 4/5 Support for all browser E2E","Hello Selenium Team & Community,     I am looking for a solution to provide CKEditor 4/5 support to a Angular Based Application. We use ng2-ckeditor as our plugin to provide ckeditor support and would like to know of a possible solution to a java or javascript base coded test scripts.","closed","","JSponaugle","2018-08-28T14:05:38Z","2019-08-15T14:09:38Z"
"","6478","Issue number of item during checkout","hello I would like to ask you a question please  on a site I extract all titles, prices, cities, categories. On the page there are 34 titles, prices etc.  Except that at times on some page the price element does not have 34 elements but 10 in my loop for x in range (len (title)): I have an indexing error but I would like to know how to get around this because I need to export to a csv file I use python, thanks you  `for x in range(len(bot.titre())):  			if ""Aujourd'hui, 21:45"" in bot.date()[x].text:  				break 			else:  				  				global d 				  				ligne = feuil1.row(d) 				ligne2 = feuil1.row(d) 				ligne3 = feuil1.row(d) 				ligne4 = feuil1.row(d) 				ligne5 = feuil1.row(d) 				 				 				  				d = d + 1 				 				ligne.write(0,bot.titre()[x].text) 				 				  				**_ligne2.write(1,bot.prix()[x].text)_**  					  				ligne3.write(2,bot.ville()[x].text) 				 				ligne4.write(3,bot.date()[x].text) 			 				ligne5.write(4,bot.categorie()[x].text)    				feuil1.col(0).width = 15000`  As you can see, I have a problem with the bot.price () function because it is this element that is sometimes missing from the list and gives an index error.","closed","","najbot","2018-10-03T16:25:45Z","2019-08-15T09:09:35Z"
"","6006","Error compilation","Hello guys,  I'm a beginner in python, I would like to use selenium to send msg by web whatsapp, but i don't know to solve this error.  OS - Win10x64 Python 3.6 Pycharm Community 2018.1.4 ![sem titulo](https://user-images.githubusercontent.com/23029893/41163366-d8128ee6-6b0e-11e8-8134-c9849022edac.png)  Thank everyone!","closed","C-py,","leocotes","2018-06-08T14:27:03Z","2019-08-15T23:09:49Z"
"","6223","Changing window with IE","Hello everyone,  I'm making a test that clicks on a button and launches a window to do some other tasks.  My test works perfectly with Firefox and Chrome. However, when it comes to IE (_version 11.0.9600_), the robot doesn't see the new window launched.  So when I call these 2 lines in order to change to window, ``` @{Windows}=    Get Window Names Select Window    @{Windows}[1]	 ```  It fails with this error: **List variable '@{Windows}' has no item in index 1**.  I've even put a` sleep 10 `after clicking a the boutton that launches the window but nothing seems to work.   Any recommandations please?","closed","","houesmalek","2018-07-30T08:35:58Z","2019-08-15T17:09:46Z"
"","6754","Feature not working on newer chromedrivers","Hello all,  I'm having selective trouble getting an infinite scroll event to trigger.   All of my devices are Ubuntu 16.04, and  I'm using the Python API. On my local node I use chrome-driver 2.25 and was able to get the feature to run correctly. On a remote node with chrome-driver 2.37 the event will not trigger. I updated the remote node to 2.45 and it still did not trigger, then I updated the local node to 2.45 and now it won't trigger either. What I believe is that there was an update somewhere after 2.25 that made it impossible for this event to function correctly.  The way this infinite page works is when you scroll to the bottom of the page then the application displays a full-page loader, then renders new data, then removes the full-page loader and is then ready to be triggered again.  What worked in 2.25 and the JavaScript console was to wait until the loader disappeared and then use:  ``` driver.execute_script('scrollTo(0, 0)') driver.execute_script('scrollTo(0, 1000000)') ```  This same code using chrome-driver 2.37 or 2.45 does not trigger the event. I've tried other methods, including: * Using using the **Visual Event** chrome extension to track down the element that has the scroll event, and then manually triggering with:   - `element.dispatchEvent(new Event('scroll'))`     + works in console, did not work with 2.25, 2.37 or 2.45. * Jumping to the` ` of the page, both with `ActionChains` and `driver.exeute_script`:   - `ActionChains(driver).moveToElement(driver.find_element_by_css_selector('footer'))`   - `driver.execute_script(""document.querySelector('footer').scrollIntoView()"")`     + works in console, did not work with 2.45 and did not test in 2.25 or 2.37. * Resizing the window to (500, 5000)   - Does not trigger the scroll event in 2.45 and did not test in 2.25 or 2.37.  It's interesting because the page will run the scroll event on initial load with any chrome-driver, but nothing I do in 2.37 or 2.45 will get it to fire after that.   **TL;DR:** The page's scroll event will trigger with chrome-driver 2.25, but not 2.37 or 2.45.   Any help or thoughts here would be greatly appreciated.","closed","","samhaaf","2018-12-14T23:05:24Z","2019-08-15T02:09:52Z"
"","6139","chrome extension","Hello I want to click chrome extension icon in chromedriver. can I do it using selenium?","closed","","GodStar88","2018-07-11T03:30:44Z","2019-08-15T19:09:47Z"
"","6547","""Protected Mode"" in the security settings from the Internet Explorer11","Hallo everybody,  I get always an error when I want to start the Internet Explorer with Selenium.  I already know the cause, why it doesn`t work. Selenium has a Problem with the security settings from my Internet Explorer.  In the security settings from my Internetexplorer are the protected mode in the four zones (Internet, Local internet, Trusted sites, Restricted sites) different, but when I want to start the Internet Explorer with selenium, they have to be all the same, enabled or disabled.  Now we come to my Problem: I am working in a company and I asked the administrator to change the ""protected mode"" for all zones in the security settings to the same value. He has changed the group policies, but we have a enterprise environment and that`s the reason why it still doesn`t work.  Does someone know, how to fix this problem? Which registry we have to change?  Best wishes  Ibush","closed","D-IE,","igabrrica","2018-10-17T12:06:47Z","2019-08-14T15:09:54Z"
"","6751","No modal dialog is currently open (Selenium::WebDriver::Error::NoSuchAlertError)","Guys, I'm currently working on a Rails 4.2 -> Rails 5.1 upgrade and I use Firefox 60.3 as my selenium browser. But lately I've experiencing an unusual type of error. Here it goes:  ``` No modal dialog is currently open (Selenium::WebDriver::Error::NoSuchAlertError) WebDriverError@chrome://marionette/content/error.js:178:5 NoSuchAlertError@chrome://marionette/content/error.js:423:5 GeckoDriver.prototype._checkIfAlertIsPresent@chrome://marionette/content/driver.js:3197:11 GeckoDriver.prototype.getTextFromDialog@chrome://marionette/content/driver.js:3160:3 despatch@chrome://marionette/content/server.js:293:20 execute@chrome://marionette/content/server.js:267:11 onPacket/","closed","C-rb,","alaxalves","2018-12-13T12:45:57Z","2019-08-15T02:09:38Z"
"","6805","Getting TimeoutException when initiating chrome browser in grid nodes","Getting TimeoutException when initiating chrome browser in grid nodes  Hi i am getting below exception when chrome browser is initiated in grid nodes. Here my environment setup is like below. First job1 test will run in jenkinns and job2 test will execute once api is done as a downstream. Here getting issue in jenkinns when job2  is triggered but i don't see any issue when i clicked on build now manually for job2. Issue with only when downstream job is triggered.  Jan 02, 2019 7:26:45 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Jan 02, 2019 7:26:45 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Jan 02, 2019 7:26:46 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Jan 02, 2019 7:26:46 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Jan 02, 2019 7:26:46 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS org.openqa.selenium.TimeoutException: timeout   (Session info: chrome=71.0.3578.98)   (Driver info: chromedriver=2.37.543627 (63642262d9fb93fb4ab52398be4286d844092a5e),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 300.04 seconds Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'S-S3-NODE08', ip: '10.43.39.163', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_191' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.37.543627 (63642262d9fb93fb4ab52398be4286d844092a5e), userDataDir=C:\Users\griduser\AppData\Local\Temp\scoped_dir4520_27923}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=71.0.3578.98, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=false, acceptInsecureCerts=false, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}] Session ID: 80af860a2f38cb4db1533caa9ea93e5e Command duration or timeout: 0 milliseconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)  Please help on this","closed","","SandeepK-GitHub","2019-01-02T08:18:19Z","2019-08-15T00:09:52Z"
"","6393","Remove usage of legacy ELEMENT pointer origin for actions","Geckodriver currently [needs a fallback](https://bugzilla.mozilla.org/show_bug.cgi?id=1489141) for deserializing the pointer origin because at least the Java implementation is still using the legacy `ELEMENT` identifier for pointer move primitives. Here an excerpt from the trace log:  ```         {           ""duration"": 100,           ""x"": 0,           ""y"": 0,           ""type"": ""pointerMove"",           ""origin"": {             ""ELEMENT"": ""cbd0b1e7-a456-4730-bf2b-b8ba7ec6aba1"",             ""element-6066-11e4-a52e-4f735466cecf"": ""cbd0b1e7-a456-4730-bf2b-b8ba7ec6aba1""           }         }, ```  This is not used by other bindings like Python anymore, and Java should also drop that at some point. @barancev and @shs96c, not sure when you actually want to do that?  As long as this hasn't been done we will keep the fallback in geckodriver.","open","help wanted,","whimboo","2018-09-11T13:45:16Z","2022-06-24T07:54:55Z"
"","6253","Gecko and Chrome dont work on Selenium python","from selenium import webdriver browser = webdriver.Chrome() browser = webdriver.Firefox() **chrome (https://chromedriver.storage.googleapis.com/2.9/chromedriver_linux64.zip) >>> browser = webdriver.Chrome() Traceback (most recent call last):   File """", line 1, in    File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/chrome/webdriver.py"", line 75, in __init__     desired_capabilities=desired_capabilities)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 156, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 251, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally   (Driver info: chromedriver=2.9.248304,platform=Linux 4.15.0-29-generic x86_64)  **Gecko(geckodriver-v0.21.0-linux64.tar.gz) Traceback (most recent call last):   File """", line 1, in    File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 167, in __init__     keep_alive=True)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 156, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 251, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 1","closed","C-py,","AjaxFB","2018-08-06T12:53:28Z","2019-08-15T16:09:58Z"
"","6375","[py] Add WPEWebKit driver","For the WPE port of WebKit  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6375)","closed","C-py,","carlosgcampos","2018-09-06T13:08:25Z","2020-03-11T13:54:11Z"
"","6606","update driver quit to kill processes for gecko/chrome","For killing chrome/gecko driver processes  Chromedriver quit() method doesn't close all chrome.exe  https://github.com/SeleniumHQ/selenium/issues/6317   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6606)","closed","","pizhanska","2018-11-01T22:18:11Z","2018-11-02T17:45:53Z"
"","6725","""chrome-driver:atoms"" start failing","Following command  `./go //javascript/chrome-driver:atoms` fails with  `BUILD FAILED: The rule //javascript/webdriver/atoms:all_js could not be found.`  It starts failing after commit https://github.com/SeleniumHQ/selenium/commit/e0d6e84444d38567bdc4ec15f3ffd910a2422720","closed","C-infra,","tbuldina","2018-12-04T19:51:02Z","2019-08-15T02:10:00Z"
"","6117","Using timeout from FirefoxBinary inside GeckoDriverService, XpiDriver…","Fixing method waitUntilAvailable in org.openqa.selenium.firefox.XpiDriverService and in org.openqa.selenium.firefox.GeckoDriverService (get timeout from FirefoxBinary)  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","grigaman","2018-07-05T12:46:36Z","2019-08-08T09:42:03Z"
"","6552","Adding support for OSX mojave to grid","Fixes: #6467  - [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6552)","closed","C-grid,","abidema","2018-10-18T04:26:01Z","2018-10-29T12:01:38Z"
"","6307","[java] Fixes#6174 Class cast exception in RemoteLocationContext.location()","Fixes#6174 Class cast exception in RemoteLocationContext.location()  - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","santhoshprem29","2018-08-20T12:22:58Z","2018-09-04T19:55:02Z"
"","6761","Fix node.js handling of multi-byte UTF8 characters","Fixes issue #6280, where the node.js API doesn't properly handle multi-byte UTF8 characters received from the driver.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6761)","closed","C-nodejs,","JohnChen0","2018-12-17T02:30:54Z","2019-05-20T19:42:46Z"
"","6281","Fix node.js handling of multi-byte UTF8 characters","Fixes issue #6280, where the node.js API doesn't properly handle multi-byte UTF8 characters received from the driver.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6281)","closed","C-nodejs,","JohnChen0","2018-08-14T15:44:50Z","2018-12-17T02:18:58Z"
"","6386","[Grid] Move console's View Config to Javascript","Fixes https://github.com/SeleniumHQ/selenium/issues/6311  This PR updates the Console Servlet's ""View Config"" logic to use Javascript, bringing the benefit of toggling Config Visibility without causing a page reload & jump to the top (which gets annoying when many nodes are connected).  Other changes: - Removes `?configDebug` parameter requirement - Hides Verbose Config by Default - Adds a link to Show Verbose Config - Moves Verbose Config builder into its own method - Adds padding beneath the config container (so that the Show Config link doesn't straddle the bottom of the browser window) ----- - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6386)","closed","C-grid,","dylanlive","2018-09-09T22:27:58Z","2018-09-24T18:56:31Z"
"","6692","Update RegistrationRequest.java","Fixes #6691  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6692)","closed","C-java,","matthewdoerksen","2018-11-26T19:01:34Z","2018-12-17T09:36:48Z"
"","6639","[Java] update BASE_SUPPORT_URL in WebDriverException","fixes #6636  `WebDriverException`, `StaleElementReferenceException`, `NoSuchElementException.java`, `StaleElementReferenceException.java` all display a link to the documentation.  This link currently 404's.  This change prepends `www.` to the domain name they so they properly redirect to the docs.   - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6639)","closed","","cgoldberg","2018-11-09T05:05:29Z","2018-11-10T14:12:55Z"
"","6321","Prepended command names in https error response reports for unknown commands","Fixes #6180.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6321)","closed","C-nodejs,","JoshuaKGoldberg","2018-08-23T16:59:36Z","2018-09-28T02:44:17Z"
"","6101","[rb] Upload file to browser when file detector set in w3c bridge","Fixes #6064  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","mskvn","2018-07-01T15:29:14Z","2018-07-11T13:25:33Z"
"","6095","Added new capabilities for safari driver: automaticInspection and automaticProfiling","Fixes #5307  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","email2vimalraj","2018-06-29T01:27:36Z","2018-07-15T02:32:26Z"
"","5919","WebDriver as context manager","Fixes #3266  Since there was nothing happening in #4078, I decided to create a new PR for this.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","jerry-git","2018-05-20T21:00:44Z","2018-05-31T14:28:29Z"
"","6581","Fix Eclipse classpaths","Fix the paths to the websocket libraries in Eclipse .classpath file.  Without this change you'll get the following errors when importing the project in Eclipse: ``` Project 'client' is missing required library: '/third_party/java/websocket/websocket-common-9.4.8.v20180619.jar' Project 'client' is missing required library: '/trunk/third_party/java/websocket/websocket-api-9.4.8.v20180619.jar' Project 'client' is missing required library: '/trunk/third_party/java/websocket/websocket-client-9.4.8.v20180619.jar' ```  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6581)","closed","","JohanBrorson","2018-10-26T11:12:08Z","2018-10-26T11:17:35Z"
"","6029","Fix test to work with newer byte-buddy","Fix test to work with newer byte-buddy  Unblocks byte-buddy update from 1.8.3 to 1.8.12+. 1.8.12 (at  least) requires the generated class has access to its super-interfaces, and will otherwise fail with messages like: java.lang.IllegalAccessError: class org.openqa.selenium.remote.RemoteWebDriver$ByteBuddy$CuMcRkYl cannot access its superinterface org.openqa.selenium.remote.BaseAugmenterTest$MagicNumberHolder  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","joshbruning","2018-06-15T21:49:30Z","2018-07-22T16:44:05Z"
"","6787","Enable support for browser_specific_settings in Firefox","Firefox supports `browser_specific_settings` as an alternative to `applications` because Chrome rejects addons with `applications` inside the manifest but supports the `browser_specific_settings` field.  This was originally introduced in [here](https://bugzilla.mozilla.org/show_bug.cgi?id=1262005) And you can see it inside the Firefox codebase [here](https://searchfox.org/mozilla-central/source/toolkit/mozapps/extensions/internal/XPIInstall.jsm#411) And supported by the Addons-linter [here](https://github.com/mozilla/addons-linter/blob/master/src/parsers/manifestjson.js#L256)  Both Firefox and the addons-linter give warnings if both `applications` and `browser_specific_settings` are present and give priority to `browser_specific_settings` Similarly, my change gives priority to `browser_specific_settings` but I did not add a warning.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6787)","closed","C-nodejs,","SebastienGllmt","2018-12-25T23:25:22Z","2019-06-25T03:45:33Z"
"","6130","For .net core nuget libs do not copy to bin folder","Error in  FileUtilities in Selenium .net  For .net core nuget libs do not copy to bin folder.  And WebDriver could not found chromedriver.exe  ```   ///          /// Gets the directory of the currently executing assembly.         ///          /// The directory of the currently executing assembly.         public static string GetCurrentDirectory()         { >>>>            Assembly executingAssembly = typeof(FileUtilities).Assembly; >>>>            string location =  Path.GetDirectoryName(executingAssembly.Location);             if (string.IsNullOrEmpty(location))             {                 // If there is no location information from the executing                 // assembly, we will bail by using the current directory.                 // Note this is inaccurate, because the working directory                 // may not actually be the directory of the current assembly,                 // especially if the WebDriver assembly was embedded as a                 // resource.                 location = Directory.GetCurrentDirectory();             }              string currentDirectory = location;              // If we're shadow copying, get the directory from the codebase instead             if (AppDomain.CurrentDomain.ShadowCopyFiles)             {                 Uri uri = new Uri(executingAssembly.CodeBase);                 currentDirectory = Path.GetDirectoryName(uri.LocalPath);             }              return currentDirectory;         } ```  Workaround: ``true``","closed","I-stale,","NikitaEgorov","2018-07-09T08:07:31Z","2021-12-05T00:07:25Z"
"","6777","Add new expected condition: element_to_be_unclickable","element_to_be_unclickable is the reverse of element_to_be_clickable. Instead of waiting for an element to be clickable, we wait and expect a web element to be unclickable but visible.  I have included a test that contains a button that disables itself after a certain time.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6777)","closed","C-py,","clarmso","2018-12-21T04:41:39Z","2019-04-18T18:20:50Z"
"","6482","Clicking element is not clickable","Element is not clickable other element would receive the click. But the receive element is parent element. Is it a bug or feature?  ![image](https://user-images.githubusercontent.com/6602376/46468210-67194800-c802-11e8-8206-93f6e26146fa.png)  ![image](https://user-images.githubusercontent.com/6602376/46468477-181fe280-c803-11e8-92a4-4ef49411a5b9.png)","closed","","buihoanghai","2018-10-04T11:11:01Z","2019-08-15T08:10:01Z"
"","5893","Values are Clearing or Trimming while entering text in textbox  using selenium with c#","During execution, fields like Text Formatted (""__/__/__"") and zip code (___-______) and some other fields are auto Clearing when I am using webElement.SendKeys(""02/02/2018"") or using Keyboard Strokes using Actions . if I am Providing Implicit WaitTime (Thread.Sleep(3000) Sometimes its not clearing but I don't want to give extra waitTime as I am already using Explicit WaitTime using WaitDriver. I tried using latest webdriver. Is there any solution please help me out.    Thanks  Srikanth Samala","closed","","SrikanthSamala","2018-05-14T08:36:00Z","2019-08-16T02:09:36Z"
"","6825","Element.getText() converting upperCase I to lower case i","Driver: chromedriver  Issue Description: I have a string in my web Page i.e displayed as Primary 1 Criteria (In Hex), if I get the text it is returning Primary 1 Criteria (in Hex). It is converting uppercase I to lowercase I. Capitalisation is implemented using CSS original Text is Primary 1 criteria (in hex):  $0.textContent ""Primary 1 criteria (in hex):"" $0.outerText ""Primary 1 Criteria (In Hex):"" $0.innerText ""Primary 1 Criteria (In Hex):""  Element HTML  Primary 1 criteria (in hex):","closed","","abhinav1708","2019-01-08T06:45:49Z","2019-08-15T00:09:54Z"
"","6131","Drag and drop issue","Drag and drop issue.  Issue: Drag and drop is not working.   Please find below code snippet:  String selectElement= ""testing""; WebElement source = driver.findElement(by.xpath(""//*[text()='""+selectElement+""']"")); WebElement source = driver.findElement(by.xpath(""(//div[@class='viewlet-svg'])[1]""));  Actions builder = new Actions(driver); builder.dragAndDrop(source, target).build().perform();","closed","R-awaiting answer,","srinivasgoud-n","2018-07-09T10:48:39Z","2019-08-15T16:09:49Z"
"","6354","Drag and drop not working in IE11","Drag and drop functionality not working in IE11. But I have tried the same to chrome browser it is working. Somebody please help me?  Please see below the code which is worked in chrome but not in IE11  Actions dragandDrop=action.dragAndDrop(from, to); dragandDrop.perform();","closed","D-IE,","rsdeepu","2018-08-31T08:15:49Z","2019-08-15T11:09:48Z"
"","6089","Java API to control network emulation","Do we have java api to control network throtlling?","closed","","sarthak2990","2018-06-28T06:08:48Z","2019-08-15T20:10:01Z"
"","5979","Be consistent with webdriver init kwarg service_log_path","Deprecate log_file for IE and log_path for Edge and Firefox.  Fixes #5725  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","jerry-git","2018-06-03T10:20:25Z","2018-08-12T00:09:30Z"
"","6338","selenium server without SSL or TLS 1.0 ?","Dears,  I did know that selenium server communicated with Firefox using SSL,  Is there any way change the protocol using TLS 1.1 or higher?  Thanks!!!","closed","","RyanChang0307","2018-08-28T03:53:21Z","2019-08-15T13:10:00Z"
"","6608","It can not run chrome with the newest version ChromeDriver 2.43 and selenium version 3.141","Dear all,   I have just run with  ChromeDriver 2.43, selenium version 3.141.0 and Version 70.0.3538.77 (Official Build) (64-bit) ==> Get error code:  ""org.openqa.selenium.WebDriverException: unknown error: failed to change window state to maximized, current state is normal         (Session info: chrome=70.0.3538.77)         (Driver info: chromedriver=2.43.600229 (3fae4d0cda5334b4f533bede5a4787f7b832d052),platform=Mac OS X 10.14.0 x86_64) (WARNING: The server did not provide any stacktrace information)       Command duration or timeout: 0 milliseconds""  Please check it Thanks","closed","","hieutrandn9889","2018-11-02T09:04:30Z","2019-08-15T06:09:58Z"
"","6520","[nodejs] add pollTimeout argument to wait() in WebDriver class","Currently, the poll timeout is constant and equal to 0. In this way polling is as fast as it can. Also, you can not customize this time.  In java this parameter is argument and by default is 200 ms.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6520)","closed","","CrispusDH","2018-10-10T16:57:43Z","2018-11-07T05:01:55Z"
"","6127","Enriching Hub Status to include Node info","Currently the end-point /grid/api/hub/status  does not provide information about the nodes  attached to it and also the busy/free status  per browser flavor on each of the nodes.  Enriching the end-point to provide node info  when invoked with the option  /grid/api/hub/status?configuration=nodes  Sample payload as below:  ```json {   ""nodes"": [     {       ""Id"": ""http://192.168.1.6:5555"",       ""browsers"": [         {           ""browser"": ""safari"",           ""slots"": {             ""busy"": 0,             ""total"": 1           }         },         {           ""browser"": ""chrome"",           ""slots"": {             ""busy"": 0,             ""total"": 5           }         },         {           ""browser"": ""firefox"",           ""slots"": {             ""busy"": 0,             ""total"": 5           }         }       ]     }   ],   ""success"": true } ```  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","krmahadevan","2018-07-07T10:04:20Z","2018-08-06T04:46:46Z"
"","5847","Which jar files are needed for an Apache Ant automation project for running the test_chrome target tests?","Could anybody please let me know which jar files are needed for an Apache Ant automation project for running the test_chrome target tests? The following jar files didn't work:  chrome.jar selenium.jar remote.jar tests.jar wait.jar interactions.jar junit-4-12.jar large-tests.jar gson-2.8.2.jar guava-23.6-jre.jar logging.jar test-base.jar chromedrivertests.jar ( renamed , changed the original file name ) ..  I get the following error while run ant test:  test:     [junit] Running org.openqa.selenium.chrome.ChromeDriverTests     [junit] Testsuite: org.openqa.selenium.chrome.ChromeDriverTests     [junit] Exception in thread ""main"" java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file org/openqa/selenium/AlertsTest     [junit] 	at java.lang.ClassLoader.defineClass1(Native Method)     [junit] 	at java.lang.ClassLoader.defineClass(ClassLoader.java:763)     [junit] 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)     [junit] 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)     [junit] 	at java.net.URLClassLoader.access$100(URLClassLoader.java:73)     [junit] 	at java.net.URLClassLoader$1.run(URLClassLoader.java:368)     [junit] 	at java.net.URLClassLoader$1.run(URLClassLoader.java:362)     [junit] 	at java.security.AccessController.doPrivileged(Native Method)     [junit] 	at java.net.URLClassLoader.findClass(URLClassLoader.java:361)     [junit] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     [junit] 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:336)     [junit] 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     [junit] 	at java.lang.Class.forName0(Native Method)     [junit] 	at java.lang.Class.forName(Class.java:349)     [junit] 	at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)     [junit] 	at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)     [junit] 	at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseSig(AnnotationParser.java:439)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseClassValue(AnnotationParser.java:420)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseClassArray(AnnotationParser.java:725)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseArray(AnnotationParser.java:531)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseMemberValue(AnnotationParser.java:355)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseAnnotation2(AnnotationParser.java:286)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseAnnotations2(AnnotationParser.java:120)     [junit] 	at sun.reflect.annotation.AnnotationParser.parseAnnotations(AnnotationParser.java:72)     [junit] 	at java.lang.Class.createAnnotationData(Class.java:3523)     [junit] 	at java.lang.Class.annotationData(Class.java:3512)     [junit] 	at java.lang.Class.getAnnotations(Class.java:3448)     [junit] 	at org.junit.runner.Description.createSuiteDescription(Description.java:124)     [junit] 	at org.junit.internal.runners.ErrorReportingRunner.getDescription(ErrorReportingRunner.java:28)     [junit] 	at org.junit.runners.Suite.describeChild(Suite.java:123)     [junit] 	at org.junit.runners.Suite.describeChild(Suite.java:27)     [junit] 	at org.junit.runners.ParentRunner.getDescription(ParentRunner.java:352)     [junit] 	at org.junit.runner.Runner.testCount(Runner.java:41)     [junit] 	at junit.framework.JUnit4TestAdapter.countTestCases(JUnit4TestAdapter.java:34)     [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:534)     [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1182)     [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:1033)     [junit] Testsuite: org.openqa.selenium.chrome.ChromeDriverTests     [junit] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 sec     [junit]      [junit] Testcase: BeforeFirstTest took 0 sec     [junit] 	Caused an ERROR     [junit] Forked Java VM exited abnormally. Please note the time in the report does not reflect the time until the VM exit.     [junit] junit.framework.AssertionFailedError: Forked Java VM exited abnormally. Please note the time in the report does not reflect the time until the VM exit.     [junit]      [junit] Running org.openqa.selenium.chrome.ChromeDriverTests     [junit] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 sec  BUILD FAILED","closed","","ArthurGIT2017","2018-04-30T23:35:19Z","2019-08-16T03:10:03Z"
"","6357","Assert with variable doesn't work in new IDE version 3.3.1","Command assert does not work any more with variable in the target. It works with the previous version 3.2.5. The variable value is considered undefined.  ## Meta - OS:  Windows 7 Selenium Version: IDE 3.3.1 Browser:  Firefox 62.0.1 and Chrome 68","closed","","julienb81","2018-09-03T08:34:48Z","2019-08-15T13:09:48Z"
"","6286","repair urllib3 can't set timeout!","cls._timeout should be  transfer to request when init urllib3.PoolManager  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","DevineLiu","2018-08-15T09:44:03Z","2018-08-15T12:56:35Z"
"","6480","Python. Fix ConnectionResetError in py/selenium/webdriver","Closes https://github.com/SeleniumHQ/selenium/issues/6438  This implements the solution proposed in https://github.com/SeleniumHQ/selenium/issues/6438#issuecomment-425709445 by @cgoldberg   - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6480)","closed","","rth","2018-10-03T18:09:49Z","2019-04-30T15:41:07Z"
"","6749","[javascript] equals should return the value of the assertion","closes #6748  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6749)","closed","","cnishina","2018-12-13T02:18:29Z","2018-12-15T15:43:37Z"
"","6186","Return 404 for non-existent routes","Closes #6126  Return 200 for “/“ Return 404 for everything else when a request for  non-existent resource is made to the hub/node.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","krmahadevan","2018-07-20T03:04:42Z","2018-07-26T16:58:36Z"
"","6158","A Hub API that can query all running sessions.","Closes #6070  The API can be accessed via  http:///grid/api/sessions.  Both GET and POST are supported and result in the same behavior.  A typical response can look like below (intentionally trimmed the capabilities to reduce verbosity)  ```json {   ""proxies"": [     {       ""proxyId"": ""http://192.168.1.6:5555"",       ""proxyRemoteHost"": ""http://192.168.1.6:5555"",       ""sessions"": {         ""status"": 0,         ""value"": [           {             ""id"": ""df8aa16d-1d52-2e43-b584-2f9df586b0f3"",             ""capabilities"": {}           },           {             ""id"": ""f85f5641-e6de-3642-913a-a45aafdb85ad"",             ""capabilities"": {}           }         ]       }     },     {       ""proxyId"": ""http://192.168.1.6:5556"",       ""proxyRemoteHost"": ""http://192.168.1.6:5556"",       ""sessions"": {         ""status"": 0,         ""value"": [           {             ""id"": ""f4df4fbd-96ee-e042-ab43-40a33698d1e9"",             ""capabilities"": {}           }         ]       }     }   ],   ""success"": true } ```  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-grid,","krmahadevan","2018-07-14T08:30:14Z","2018-07-30T14:26:27Z"
"","6220","Add ability to quiesce node","Closes #2070  This PR provides the following:  1. Expose an end-point on the Hub which lets a user quiesce a node. [ Quiesce = don’t route any more new session requests to a node and let the in-flight sessions run to completion ] via the URL   `/lifecycle-manager?action=quiescenode&proxyid=`  2. Add an optional argument to the end-point in (1) to also send a recycle signal to the node [ This would ensure that the Grid automatically shuts down a  quiesced node after the in-flight sessions have run  to completion ] via the URL  `/lifecycle-manager?action=quiescenode&proxyid=&autoshutdown=true`  3. Updated the default hub console to also indicate  if a particular node is “quiesced” or not.  4. If the user just uses (1) to quiesce a node, then  they need to shutdown the node on their own. So  exposed a new URL on the node to support this via the URL` /lifecycle-manager?action=shutdown`  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6220)","closed","C-grid,","krmahadevan","2018-07-29T14:47:45Z","2019-04-02T15:37:30Z"
"","6452","could add the match for https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/support/expected_conditions.py","class text_to_be_present_in_element_value_match(object):     """"""     An expectation for checking if the given text is present in the element's     locator, text     """"""     def __init__(self, locator, text_):         self.locator = locator         self.text = text_      def __call__(self, driver):         try:             element_text = _find_element(driver,                                          self.locator).get_attribute(""value"")             if element_text:                 str = re.findall(self.text, element_text)                 return str             else:                 return False         except StaleElementReferenceException:                 return False","closed","C-py,","mansonami","2018-09-27T06:06:26Z","2020-06-24T22:40:41Z"
"","5843","driver timeout trying to driver.get(url)","ChromeDriver 2.38.552522   in Java if you try to get to the page will be waiting for ever and the driver will timeout  expect to load the page and get a screenshot / download file  **driver.get(""https://bit.ly/2GEEBKO"");**","closed","","philippeantonietti","2018-04-30T16:58:29Z","2019-08-16T04:09:38Z"
"","5901","Getting [SEVERE]: Unable to receive message from renderer","chrome=66.0.3359.170 chromedriver=2.38 selenium version: '3.7.1  Getting following error: ================ [1526445895.501][SEVERE]: Unable to receive message from renderer Exception in thread ""main"" org.openqa.selenium.WebDriverException: disconnected: Unable to receive message from renderer   (Session info: chrome=66.0.3359.170)   (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)  Used Code: ======== 	System.setProperty(ChromeDriverService.CHROME_DRIVER_EXE_PROPERTY, ""C:\\Users\\sanojs\\Downloads\\chromedriver.exe""); 		ChromeDriverService chromeservice = new ChromeDriverService.Builder().build(); 		driver = new ChromeDriver(chromeservice); driver.get(""https://www.google.com/"");  		driver.findElement(By.id(""lst-ib"")).click(); 		driver.findElement(By.id(""lst-ib"")).sendKeys(""Ralue"");","closed","","sanojqa","2018-05-16T05:00:18Z","2019-08-16T01:10:00Z"
"","6353","Increase width used in Java window size tests","Chrome version 69 requires a larger minimum width than previous versions of Chrome (https://crbug.com/849784), and can cause some window size tests to fail. Increasing the size used in the tests to compensate.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohnChen0","2018-08-31T03:55:28Z","2018-09-04T20:52:40Z"
"","6584","Automation is not running since Chrome Driver got updated to 70.0.3538.77","Can't run my automation since Chrome browser got updated to 70.0.3538.77 on October 24, 2018 Initially logged a ticket here, but they said it's an issue related to Selenium, not chrome driver:  https://bugs.chromium.org/p/chromium/issues/detail?id=899036  Getting this error when trying to run my tests: (I'm on Mac OS, version: 10.13.6 )  ``` org.openqa.selenium.WebDriverException: unknown error: failed to change window state to maximized, current state is normal   (Session info: chrome=70.0.3538.77)   (Driver info: chromedriver=2.43.600229 (3fae4d0cda5334b4f533bede5a4787f7b832d052),platform=Mac OS X 10.13.6 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 132 milliseconds Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09' System info: host: 'US-C02WW0QRJG5L', ip: '172.28.190.133', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '10.0.2' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=MAC, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:49629}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.43.600229 (3fae4d0cda5334b4f533bede5a4787f7b832d052), userDataDir=/var/folders/2d/sl8z71vx5l505tllcm4_7hjw0000gp/T/.org.chromium.Chromium.xZh5zl}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=70.0.3538.77, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}] Session ID: f5ca82e10992c004bac2e3b6b5f5a99d 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:945) 	at com.morningstar.automation.base.core.AbstractTest.beforeMethod(AbstractTest.java:82) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:653) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) 	at org.testng.TestRunner.privateRun(TestRunner.java:767) 	at org.testng.TestRunner.run(TestRunner.java:617) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305) 	at org.testng.SuiteRunner.run(SuiteRunner.java:254) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) 	at org.testng.TestNG.run(TestNG.java:1057) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) ```","closed","","marywhite5","2018-10-26T15:16:52Z","2019-08-15T07:09:42Z"
"","6849","File download in a new tab causes chrome to close #6833","Can you please Reopen issue#6833. It happens even in 3.141.59. Sample code to reproduce the issue is provided below Meta - OS: Windows 7 enterprise Selenium Version: Selenium.WebDriver v3.141.59 Selenium.WebDriver.ChromeDriver 2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a) Browser: Chrome Version 71.0.3578.98 (Official Build) (64-bit)  Expected Behavior - Attempting to download a file using a ChromeDriver. The website being ""driven"" opens a new tab on button click, which then triggers a download of a file. Then the browser remains open to continue further steps. This works as expected in firefox. This works when I use ChromeDriver driver=new ChromeDriver(capabilities);. The browser closes when I assign ChromeDriver instance to WebDriver.  Actual Behavior - Once file download is completed the new tab closes then the browser also closes which causes the next steps/tests to fail with chrome not reachable exception. Caused by: org.openqa.selenium.WebDriverException: chrome not reachable  Edited to add the code with a public page to reproduce the issue. The code fails when it tries to find link 2 with chrome not reachable.  Code to reproduce:                  System.setProperty(""webdriver.chrome.driver"", ""webdrivers/chromedriver.exe""); 		DesiredCapabilities capabilities = new DesiredCapabilities(); 		capabilities.setJavascriptEnabled(true); 		capabilities.setCapability(""takesScreenshot"", true); 		capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 		capabilities.setCapability(CapabilityType.ACCEPT_INSECURE_CERTS, true); 		final ChromeOptions chromeOptions = new ChromeOptions(); 		HashMap chromePrefs = new HashMap(); 		chromePrefs.put(""profile.default_content_settings.popups"", 0); 		chromePrefs.put(""download.prompt_for_download"", false); 		chromePrefs.put(""download.directory_upgrade"", true); 		chromePrefs.put(""download.default_directory"", ""Downloads""); 		chromePrefs.put(""plugins.always_open_pdf_externally"", true); 		chromeOptions.setExperimentalOption(""prefs"", chromePrefs); 		capabilities.setCapability(ChromeOptions.CAPABILITY, chromeOptions);  		 		WebDriver driver=new ChromeDriver(capabilities);			 	 		driver.get(""https://angular.io/guide/quickstart""); 		By link1 = By.xpath(""//a[@href='generated/zips/cli-quickstart/cli-quickstart.zip']""); 		Thread.sleep(5000); 		WebElement element = driver.findElement(link1); 		System.out.println(""1""); 		element.click(); 		System.out.println(""2""); 		Thread.sleep(5000); 		System.out.println(""3""); 		By link2 = By.xpath(""//a[@href='guide/file-structure']""); 		System.out.println(""4""); 		WebElement element2 = driver.findElement(link2); 		System.out.println(""5""); 		element2.click(); 		System.out.println(""6"");","closed","R-awaiting answer,","Shebeok","2019-01-14T03:30:42Z","2019-08-14T23:09:59Z"
"","6316","[Feature Request] Add keep_alive flag to WebDriver's constructor","Browser in which feature is requested : Firefox Currently if we want to set keep_alive to false, we need to implement our own class along the lines of WebDriver class ( in [file](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/webdriver.py) ) and set keep_alive in RemoteWebDriver's constructor call. For ease of configuration, this should be available as a constructor parameter in WebDriver itself.  Thanks, Kislaya","closed","I-enhancement,","rkanine","2018-08-22T07:40:47Z","2019-08-15T11:09:41Z"
"","6424","Unable to run selenium scripts in parallel in IE 9","Browser : IE Windows: 7 Selenium version : Selenium-server-3.4 IE Driver version: 2.29 IE Version : 9  I am trying to open 2 sessions in IE for running my scripts in parallel. The selenium script types the values to be entered in both the sessions in one session and in the other session IE is launched and fails after that. Any idea regarding this?","closed","D-IE,","Priyaa25","2018-09-18T08:32:39Z","2019-08-15T06:09:44Z"
"","6135","Selenium(JAVA) - Handling notifications in mozilla firefox","Browser - Mozilla Firefox Selenium Version - 3.12 Test NG - version 6.14.2 OS - Windows 10 Browser - Mozilla Firefox (59.02)  Problem - The website throws notification and navigation is blocked without user action.We want selenium to take the action when notification box opens up. In the following code the method - openProfilePage() fails to execute because of selenium not taking action for the notification.  Code - package testngDemo;  import org.testng.annotations.Test; import org.testng.annotations.BeforeMethod; import java.util.concurrent.TimeUnit; import org.openqa.selenium.By; import org.openqa.selenium.Capabilities; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.firefox.internal.ProfilesIni; import org.testng.annotations.AfterMethod; import org.testng.annotations.DataProvider;  public class TestNgDemo {  WebDriver driver;   	      @Test(dataProvider = ""dp"",priority=1)  public void login(String username, String password) {  	WebElement u_name = driver.findElement(By.id(""email"")); 	u_name.sendKeys(username); 	 	WebElement p_word = driver.findElement(By.id(""pass"")); 	p_word.sendKeys(password); 	 	driver.findElement(By.id(""u_0_2"")).click(); 		 }  @test (priority = 0) public void openWebsite() { System.setProperty(""webdriver.gecko.driver"",""C:\\Marionette\\geckodriver.exe""); driver = new FirefoxDriver(); driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); driver.get(""https://www.facebook.com"");  }  @test(priority=2,dependsOnMethods=""login"") public void openProfilePage() { driver.findElement(By.className(""_1vp5"")).click(); }  @AfterMethod public void afterMethod() {  }  @dataProvider public Object[][] dp() { Object[][] data = new Object[1][2]; data[0][0]=""your_fb_username""; data[0][1]=""your_fb_password""; return data; } }","closed","D-firefox,","SudeeptMohan","2018-07-10T10:54:24Z","2019-08-14T07:09:52Z"
"","6204","Please expose stdout / stderror of the spawned server process","At the moment [`ServiceBuilder.prototype.setStdio`](https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/remote/index_exports_DriverService.Builder.html#setStdio) is only way one could configure where browsers `stdout` / `stderror` goes but that does not provide good way to consume output from the driver, at best one can forward output to a file and read from it but that is not ideal.  Underlying node API exposes `stdout` / `stderror` streams on child processes and it would be really nice if that could be exposed in some way.  I am trying to use `selenium-webdriver` to test Firefox web-extensions that output test results into stdout. I end up using workaround of forwarding `stdout` to a file and then watching and reading from that file (see https://github.com/mozilla/libdweb/blob/97d2229b7278a76c7828d1124af2c58741511383/test/setup.js#L53-L69 for details). Having access to actual stdout would have made this a lot less complicated and fragile.","closed","I-stale,","Gozala","2018-07-25T23:23:42Z","2021-12-05T00:07:26Z"
"","6065","Actions makes unsafe cast.","at org.openqa.selenium.interactions.Actions.release(Actions.java:293)  org.openqa.selenium.interactions.internal,Locatable  The Actions class makes an UNSAFE cast from WebElement to Locatable There is no type check and will cause a cast exception if instance of WebElement is not also instance of Locatable. Both of these interfaces are public and should not be cast as thought they were private  There should be a type check,   make WebElement extend Locatable, or   use the getLocation method on WebElement to create a Locatable lambda","closed","C-java,","HerbertMarshall","2018-06-22T19:44:12Z","2019-08-15T21:09:52Z"
"","6663","Introduce API for Distributed Tracing","At least on the server side. This should support both OpenCensus and OpenTracing","closed","C-java,","shs96c","2018-11-20T17:37:08Z","2019-08-14T17:09:39Z"
"","6471","Require an id to be set in Firefox web extension manifests","As mentioned in https://github.com/SeleniumHQ/selenium/pull/6463#discussion_r221901851:  > Whilst web extensions don't mandate an id, it appears that when installing extensions from the profile [Firefox will verify that the name of the file/directory containing the extension matches the id of the add-on](https://searchfox.org/mozilla-central/rev/819cd31a93fd50b7167979607371878c4d6f18e8/toolkit/mozapps/extensions/internal/XPIDatabase.jsm#2420-2422). This means that we effectively do require an id to be set in the manifest, and that we use it when writing to the profile directory. It may work by coincidence when the id matches the name@version format used here. It's worth testing with the other clients, but if this is the case then I believe we should require the id and raise an exception when it's not provided to avoid harder to debug issues with Firefox launching without the addon installed. Sorry for my earlier comment suggesting that we needed id to be optional, which was based on [this documentation](https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/manifest.json/applications).  ## Current client implementations ## Here is how the ruby bindings handle web extensions without an id (it doesn't even look for applications.gecko.id): https://github.com/SeleniumHQ/selenium/blob/07a18746ff756e90fd79ef253a328bd7dfa9e6dc/rb/lib/selenium/webdriver/firefox/extension.rb#L85-L91  The Java bindings looks for applications.gecko.id but does the same as the Ruby bindings in case it isn't set: https://github.com/SeleniumHQ/selenium/blob/ba32c5bc83272ff0e111fd4dccc40435700c6225/java/client/src/org/openqa/selenium/firefox/internal/FileExtension.java#L141-L155  The JavaScript bindings throw an error if applications.gecko.id is not defined:  https://github.com/SeleniumHQ/selenium/blob/3e99112a0d59878c6f31cc50fe8b0593c49e497f/javascript/node/selenium-webdriver/firefox.js#L172-L174  The Python bindings, as proposed in https://github.com/SeleniumHQ/selenium/pull/6463, exhibit the same behavior as the Java bindings: https://github.com/motin/selenium/blob/add-python-client-support-for-webextensions-in-firefox/py/selenium/webdriver/firefox/firefox_profile.py#L333-L339","closed","I-stale,","motin","2018-10-02T11:31:46Z","2021-12-04T00:06:26Z"
"","5824","org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10088 ms","Apr 24, 2018 6:26:53 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutdown complete org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10088 ms Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'EXIMR-IM-536', ip: '10.1.5.125', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_131' Driver info: driver.version: Driver 	at org.openqa.selenium.safari.SafariDriverCommandExecutor.start(SafariDriverCommandExecutor.java:121) 	at org.openqa.selenium.safari.SafariDriver.startClient(SafariDriver.java:76) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:62) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:53) 	at framework.driver.Driver.chooseDriver(Driver.java:262) 	at framework.driver.Driver.setDriver(Driver.java:71) 	at framework.driver.BaseTest.startExecution(BaseTest.java:50) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142) 	at org.testng.TestRunner.beforeRun(TestRunner.java:529) 	at org.testng.TestRunner.run(TestRunner.java:497) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76) FAILED CONFIGURATION: @BeforeTest startExecution(null) org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10088 ms Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'EXIMR-IM-536', ip: '10.1.5.125', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_131' Driver info: driver.version: Driver 	at org.openqa.selenium.safari.SafariDriverCommandExecutor.start(SafariDriverCommandExecutor.java:121) 	at org.openqa.selenium.safari.SafariDriver.startClient(SafariDriver.java:76) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:62) 	at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:53) 	at framework.driver.Driver.chooseDriver(Driver.java:262) 	at framework.driver.Driver.setDriver(Driver.java:71) 	at framework.driver.BaseTest.startExecution(BaseTest.java:50) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142) 	at org.testng.TestRunner.beforeRun(TestRunner.java:529) 	at org.testng.TestRunner.run(TestRunner.java:497) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)  FAILED CONFIGURATION: @BeforeClass launchApplicationUrl java.lang.NullPointerException 	at framework.controls.Controls.launchUrl(Controls.java:54) 	at com.apple.crm.pages.login.LoginPage.launchUrl(LoginPage.java:55) 	at com.apple.crm.pages.login.LoginPage.navigateToApplication(LoginPage.java:64) 	at com.apple.crm.extendedframework.Base.launchApplicationUrl(Base.java:37) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142) 	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)  FAILED CONFIGURATION: @BeforeMethod beforeMethod java.lang.NullPointerException 	at framework.controls.Controls.resetDriverTimeout(Controls.java:800) 	at framework.controls.Controls.isElementDisplayedWithoutCapturingLogs(Controls.java:1422) 	at com.apple.crm.utils.Commons.confirmWarningMessage(Commons.java:576) 	at com.apple.crm.extendedframework.Base.beforeMethod(Base.java:50) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:520) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)","closed","","charanpatnaik","2018-04-25T03:25:02Z","2019-08-16T04:10:03Z"
"","6224","Configuration error while running Appium (With Emulator or Android Device)","Appium Error :  Jul 30, 2018 1:45:55 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Attempting bi-dialect session, assuming Postel's Law holds true on the remote end Jul 30, 2018 1:45:55 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Falling back to original OSS JSON Wire Protocol. Jul 30, 2018 1:45:55 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Falling back to straight W3C remote end connection Exception in thread ""main"" java.lang.NoSuchMethodError: com.google.common.base.Throwables.throwIfUnchecked(Ljava/lang/Throwable;)V 	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:103) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42) 	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1) 	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:241) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:128) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:141) 	at io.appium.java_client.DefaultGenericMobileDriver.(DefaultGenericMobileDriver.java:38) 	at io.appium.java_client.AppiumDriver.(AppiumDriver.java:87) 	at io.appium.java_client.AppiumDriver.(AppiumDriver.java:111) 	at io.appium.java_client.android.AndroidDriver.(AndroidDriver.java:72) 	at base.main(base.java:33)    Code :  import java.io.File; import java.net.MalformedURLException; import java.net.URL;  import org.openqa.selenium.WebElement; import org.openqa.selenium.remote.DesiredCapabilities;  import io.appium.java_client.android.AndroidDriver; import io.appium.java_client.android.AndroidElement; import io.appium.java_client.remote.AndroidMobileCapabilityType; import io.appium.java_client.remote.MobileCapabilityType; import io.appium.java_client.remote.MobilePlatform;  public class base {  	public static void main(String[] args) throws MalformedURLException { 		// TODO Auto-generated method stub 		 		File appDir = new File(""src""); 		File app = new File(appDir, ""ApiDemos-debug.apk""); 		 		DesiredCapabilities cap = new DesiredCapabilities(); 		 		cap.setCapability(MobileCapabilityType.APP, app.getAbsolutePath()); 		cap.setCapability(MobileCapabilityType.DEVICE_NAME , ""emulator""); 		//cap.setCapability(MobileCapabilityType.APPIUM_VERSION, ""1.8.1""); 		//cap.setCapability(MobileCapabilityType.PLATFORM_NAME, MobilePlatform.ANDROID); 		//cap.setCapability(MobileCapabilityType.PLATFORM_VERSION, ""8.0""); 		cap.setCapability(MobileCapabilityType.BROWSER_NAME, ""Android""); 		//cap.setCapability(AndroidMobileCapabilityType.APP_PACKAGE,""io.appium.android.apis""); 		//cap.setCapability(AndroidMobileCapabilityType.APP_ACTIVITY, ""io.appium.android.apis.ApiDemos""); 		 	AndroidDriver driver = new AndroidDriver(new URL(""http://127.0.0.1:4723/wb/hub""),cap); 		 	}  }     Jars along with Appium 👍  selenium-java-3.0.1","closed","","yadav782","2018-07-30T08:40:32Z","2019-08-15T17:09:45Z"
"","6288","timeout when geting url in headless chrome","Anyone knows how to fix this?   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 332, in get     self.execute(Command.GET, {'url': url})   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message: timeout   (Session info: headless chrome=68.0.3440.106)   (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.15.0-32-generic x86_64)","closed","R-awaiting answer,","fgisslen","2018-08-15T20:23:29Z","2019-08-15T08:09:36Z"
"","6455","how to disable javascript after the a chrome widow is opend","any platform  we can disable javascript before creating a chrome widow but how to disable it after the chrome window is created?  for an example, the login page required javascript to work, and then I want to disable the javascript the get plain HTML source code from the server without any javascript is executed. Because javascript will modify the HTML DOM and stuff like that. thank you very much","closed","","WongYueKeung","2018-09-27T15:41:37Z","2018-09-28T01:31:13Z"
"","6284","How to use AndroidDriver or IOSDriver without DesiredCapabilities(which is deprecated)?","AndroidDriver and IOSDriver require to have DesiredCapabilities as input.  Now, as this is deprecated how can I use these drivers?  My code example: ``` DesiredCapabilities cap = new DesiredCapabilities();  cap.SetCapability(""deviceName"", ConfigReader(""DeviceID"")); cap.SetCapability(""udid"", ConfigReader(""DeviceID"")); cap.SetCapability(""platformName"", ""Android""); cap.SetCapability(""systemPort"", ""SystemPort""); cap.SetCapability(""language"", ConfigReader(""Language"")); cap.SetCapability(""locale"", ConfigReader(""Language""));  IWebDriver driver = new AndroidDriver(new Uri(uri), cap); ```  Can I get real example of alternative to this considering DesiredCapabilities deprecation?","closed","","JMelon","2018-08-15T05:51:36Z","2019-08-15T15:09:56Z"
"","6536","[py] verify command_executor ssl certificate by default","And expose get_certificate_bundle_path / set_certificate_bundle_path to allow customizing the certificate verification  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  fixes #6534  cc @AutomatedTester   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6536)","closed","C-py,","jerome-nexedi","2018-10-15T07:32:27Z","2020-04-03T20:46:58Z"
"","6522","[py] Subclass options classes from a common base class","An ABC was used to ensure that `to_capabilities` was implemented. This method allows us to pass just the options class to `RemoteWebDriver` and not have to worry about capabilities.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6522)","closed","","lmtierney","2018-10-11T00:16:46Z","2019-01-04T13:45:09Z"
"","5820","Fix issue where -host is not honored in all server modes.","Also increase the scope of -host to all roles [standalone, hub, and node]  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  --- Before this change ```shell $ java -jar selenium-standalone.jar -role hub --host {ip} ... ``` Actual: bind happens on `*` adapters ```shell $ netstat -an | grep 4444 tcp46      0      0  *.4444                 *.*                    LISTEN ```  Problem: Jetty does not honor `-host` unless you tell it to.  --- After this change ```shell $ java -jar selenium-standalone.jar -role hub -host {ip} ``` Actual: bind happens on `-host` adapter ```shell $ netstat -an | grep 4444 tcp46      0      0  {ip}.4444                 *.*                    LISTEN ```  --- This change exposes `-host` to `-role standalone` (default role) also, to fix the same issue.","closed","C-grid,","mach6","2018-04-24T00:56:22Z","2018-04-24T17:51:28Z"
"","6324","Make ExpectedConditions private helpers protected","Allow easier extension of the ExpectedConditions class by making private helper methods protected.  If a user would like to extend ExpectedConditions and write their own custom ExpectedConditions, they can benefit from writing the ExpectedCondition methods in the same style as the original ExpectedConditions, which includes the use of the helper methods for stylistic consistency.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","gwpantazes","2018-08-23T23:35:40Z","2018-08-23T23:41:53Z"
"","6157","Alert.sendKeys(String) always send text to first input box irrespective of cursor location","Alert.sendKeys(String) always send text to first input box irrespective of cursor location OS:  Win7 Selenium Version:  3.13.0 Browser:  IE11  I am trying to send username and password to security popup on IE11 but both values goes to username field only. Here is the code snippet. I will try to find a public website to reproduce this.  `Alert alert = driver.switchTo().alert(); 			Thread.sleep(2000); 			Robot r = new Robot(); 			alert.sendKeys(""username""); 			Thread.sleep(2000); 			r.keyPress(KeyEvent.VK_TAB); 			r.keyRelease(KeyEvent.VK_TAB); 			Thread.sleep(2000); 			alert.sendKeys(""password""); 			Thread.sleep(2000); 			alert.accept();`","closed","","akhanna38","2018-07-13T22:16:22Z","2019-08-15T19:09:34Z"
"","6772","Safari 12.0.2 not compatible","After updating to Safari 12.0.2 from version 12.0.1, I can no longer connect with a webdriver session.  STR: Be running Safari 12.0.2 selenium-webdriver version 3.141 watir gem version 6.16.0  Watir::Browser.new :safari  Unable to connect to driver.","closed","C-rb,","everly-blake","2018-12-19T21:15:58Z","2019-08-15T02:09:35Z"
"","6839","Build Error  After chrome update","After updating my chromedriver to the latest driver  i started getting build errors    1>------ Build started: Project:  Booster, Configuration: Debug Any CPU ------ 1>   Booster -> W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\ Booster.exe 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 1 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 2 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 3 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 4 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 5 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 6 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 7 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 8 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 9 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): warning MSB3026: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Beginning retry 10 in 1000ms. The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): error MSB3027: Could not copy ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". Exceeded retry count of 10. Failed. 1>W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\Selenium.WebDriver.ChromeDriver.targets(66,5): error MSB3021: Unable to copy file ""W:\Vb projects\ Booster\ Booster\packages\Selenium.WebDriver.ChromeDriver.2.45.0\build\..\driver\win32\chromedriver.exe"" to ""W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe"". The process cannot access the file 'W:\Vb projects\ Booster\ Booster\ Booster\bin\Debug\chromedriver.exe' because it is being used by another process. ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========     OS:!-- Windows 8.1? Browser: -- Chrome Browser version:  Browser Driver version:","closed","","vitalisc","2019-01-11T11:08:15Z","2019-08-15T00:09:40Z"
"","6453","Please have an up to date howto on at least how to open a webpage","After following this:  https://cat.ninja/using-selenium-with-headless-firefox-on-freebsd/  And many other tutorials I still cannot get what I need is that I want to get and save the content of a webpage using javascript, the way it looks like in the browser.  After spending hours on dead projects like console crawler and phantomjs I have found selenium, and it MIGHT be the solution for what I need but I still cannot get it to work.  OS: latest FreeBSD stable FreeBSD 11.2-RELEASE  pkg install py36-pip pip-3.6 install selenium pkg install geckodriver pkg install firefox-62.0.2,1  Example1:  ``` from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Firefox() driver.get(""http://www.python.org"") assert ""Python"" in driver.title elem = driver.find_element_by_name(""q"") elem.clear() elem.send_keys(""pycon"") elem.send_keys(Keys.RETURN) assert ""No results found."" not in driver.page_source driver.close()  ```  ``` Traceback (most recent call last):   File ""open.py"", line 1, in      from selenium import webdriver ImportError: No module named selenium ```  I try:  ``` python3.6 a.sel Traceback (most recent call last):   File ""a.sel"", line 5, in      br = webdriver.Firefox()   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/firefox/webdriver.py"", line 162, in __init__     keep_alive=True)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: Unable to find a matching set of capabilities   ``` Example 2  ``` from selenium import webdriver from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.keys import Keys  br = webdriver.Firefox() br.get('http://www.google.com/')  save_me = ActionChains(br).key_down(Keys.CONTROL)\          .key_down('s').key_up(Keys.CONTROL).key_up('s') save_me.perform() ```  Let's start it with that these are python, why on earth this is not mentioned anywhere that this is freaking python, why cannot at very least a simple example be provided for opening a god damn webpage?!?","closed","","daredevilbsd","2018-09-27T07:21:06Z","2019-08-15T09:09:55Z"
"","6571","Fix Java tests for clear color and range inputs","After calling clear method on color and range input elements, the resulting default values are not empty strings. This commit modifies the tests to fix that. It also makes these tests consistent with similar dotnet tests.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6571)","closed","","JohnChen0","2018-10-24T09:56:27Z","2018-10-26T11:23:27Z"
"","6181","Added a basic ServiceBuilder for Internet Explorer","Adds it to IE's `Driver` and allows it to be specified with a new `setIeService` in the general `Builder`.  Fixes #5983.  I'm very unfamiliar with all this, so other than verifying that it works locally, I haven't written tests. It looks pretty similar to the existing service builders, but confirmation would be nice!  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Edit: some test jobs pass, some fail. 🤷","closed","C-nodejs,","JoshuaKGoldberg","2018-07-19T05:10:10Z","2018-08-03T18:51:54Z"
"","6423","Improve Error Messages in ExpectedConditions","Addresses #6422. Adds locator context to conditions messages.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6423)","closed","C-java,","kunalgosar","2018-09-17T23:43:50Z","2018-09-23T22:28:35Z"
"","6709","adding missing command GetElementProperty","adding missing command GetElementProperty  - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6709)","closed","R-awaiting answer,","kambleaa007","2018-11-30T12:01:15Z","2019-06-23T17:15:06Z"
"","5904","Add verify argument to RemoteConnection constructor","Add verify argument to python RemoteConnection constructor to handle HTTPS certificate. Verify can be set to False to disable certificate check or can take a path to the CA pem file.  Fixes #5903  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5904)","closed","C-py,","MqllR","2018-05-16T15:55:31Z","2020-02-29T13:58:46Z"
"","6183","fix unable to disable native events on IE driver version 3.4+ issue","Add native events under se:ieOptions. Add disable native events function as the native event for ie is enabled by default  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","KentGu","2018-07-19T10:15:11Z","2018-07-24T10:18:26Z"
"","6580","Add attributeToBeNotEmpty method with locator arg","Add `attributeToBeNotEmpty` method to `ExpectedConditions` with locator argument, aside from the already existing method that takes a `WebElement` as an argument.  Add tests for the new method and also rename the tests for the already existing method to better conform with the naming of other tests in the class.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6580)","closed","C-java,","JohanBrorson","2018-10-26T09:18:35Z","2021-01-26T16:17:44Z"
"","6111","Request : Adding the possibility to access localStorage using node.js","According to the wiki (http://seleniumhq.github.io/selenium/docs/api/javascript/index.html) and all the test i made, it seems that it is impossible to access the localStorage on the client side (The localstorage that we access while pressing F12) , which is possible in all other languages. Could you add this functionnality please ?","closed","C-nodejs,","ghost","2018-07-04T12:28:40Z","2021-09-05T10:20:35Z"
"","6014","fix incorrect w3c action encoding in python client","according to the spec, the pointerType should be a pointer type, not an arbitrary name/id. correct me if I'm wrong @AutomatedTester but this seems like a bug.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","jlipps","2018-06-12T18:11:56Z","2018-06-25T00:27:21Z"
"","6421","Update ClickScrollingTest.java","According to documentation at https://developer.mozilla.org/en-US/docs/Web/API/Window/pageYOffset window.pageYOffset may not return integer value. With the following changes in below we are checking the type of returned object and assigning respectively the value of 'yOffset'  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","ArthurGIT2017","2018-09-17T22:47:42Z","2018-09-18T14:21:38Z"
"","6178","How to click links in excel file with selenium webdriver in python?","A question was posed upon me recently and I wasn't sure how to answer since I thought webdriver was best used for browser interactions. Is there a way to click links in excel documents using selenium/python?  My apologies if this is not the correct forum for such a question.","closed","","dmholb01","2018-07-18T15:09:14Z","2019-08-15T18:09:56Z"
"","6208","Smarter Travis Builds","A PR on Travis was auto-canceled when someone committed to Master, which makes it hard to know that the PR didn't break anything. I thought we used to have it so that tests were only run when changes from a particular folder.  It shouldn't be too difficult (though perhaps time consuming to make sure it works correctly) to add a conditional using something like `git diff --name-only HEAD~1` to check for what has changed to [these tasks](https://github.com/SeleniumHQ/selenium/blob/master/scripts/travis/script.sh) based on folder (python tests when changes in /py/*, ruby tests when changes in /rb/*, etc)  If we minimize what gets run, that should keep us from having to auto-cancel PR builds.","closed","C-infra,","titusfortner","2018-07-26T18:27:12Z","2019-08-14T13:10:03Z"
"","6094","Feature request: WebElement value property","`WebElement` objects do not support querying their `` elements’ `value` **properties**.  That other people desire this sort of functionality is evidenced by several Stack Overflow questions:  * http://stackoverflow.com/questions/7852287/ddg * https://stackoverflow.com/questions/17966800/how-to-get-the-value-from-input-tag-using-java-in-selenium-web-driver-when-the * https://stackoverflow.com/questions/36202689/selenium-webdriver-get-text-from-input-field * https://stackoverflow.com/questions/25832871/how-do-i-access-the-text-input-value-in-selenium-webdriver-mocha-tests  As @tjcrowder points out on several of these questions, querying a `value` DOM **property** is **not** the same as querying a `value` DOM **attribute**:  > `getAttribute(""value"")` is really how you do this?! That doesn't make any sense. There’s a big difference between the `value` attribute of an `input` element and its `value` property. Does Selenium do the horrible thing jQuery does and conflate them?   This is because [the `value` property is not reflected](https://stackoverflow.com/questions/6003819/what-is-the-difference-between-properties-and-attributes-in-html#6004028). When a user types into an `` element, it does not update its `value` attribute; it **only** updates its `value` property. This is important during testing of client-side validation or cascading of form-UI updating.  Currently, the only way to actually query an element’s value **property** is by executing a [client-side JavaScript script](https://stackoverflow.com/a/25584027/644104) such as `document.getElementById(‘elementID’).setAttribute(‘value’, 'new value for element')`. This is unnecessarily clunky; it prevents the use of an existing `WebElement` on the driver side.  `WebElement` should support querying its DOM Element’s `value` property directly using a `getValue` method, similarly to how it already supports getting its text using a `getText` method.","closed","","js-choi","2018-06-28T17:39:43Z","2019-08-15T20:09:55Z"
"","6418","ExpectedConditions.findElement(By by, WebDriver driver) (singular) calls WebDriver.findElements(By) (plural)","`ExpectedConditions.findElement(By by, WebDriver driver)` (singular) calls `WebDriver.findElements(By)` (plural) instead of `WebDriver.findElement(By)` (singular). So in the end `By.findElements(...)` (plural) is called, which could be way more expensive than it's singular variant. This problem might not concern ""internal"" `By` implementations, but it may concern others.","closed","C-java,","alex-stumpfl","2018-09-17T14:33:37Z","2019-08-15T11:09:43Z"
"","5933","Add until.urlContains null value check","`driver.getCurrentUrl()` can return `null` in some cases, which causes a `TypeError` instead of continuing to retry for the expected time.  This behavior was observed with remote IE11 on browserstack.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","wejendorp","2018-05-23T11:58:46Z","2018-07-16T17:22:16Z"
"","6450","chrome 69.0.3497.100 enable flash error","``` prefs = { 	""profile.default_content_setting_values.plugins"": 1, 	""profile.content_settings.plugin_whitelist.adobe-flash-player"": 1, 	""profile.content_settings.exceptions.plugins.*,*.per_resource.adobe-flash-player"": 1, 	""PluginsAllowedForUrls"": ""http://www.xxx"" }  ChromeOptions.add_experimental_option(""prefs"",prefs) ```  This command is no longer valid","closed","C-py,","nu1ee","2018-09-27T00:38:47Z","2019-08-15T09:09:58Z"
"","6479","Seleniun Dropdown menu select element","``` import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.support.ui.Select; import java.util.List;  public class HandlingLink { 	@Test 	public void Browser(){ 		System.setProperty(""webdriver.chrome.driver"", ""/Users/namrathakulkarni/Documents/SeleniumDrivers/chromedriver""); 		ChromeDriver oBrowser=new ChromeDriver(); 		 		oBrowser.get(""http://www.ebay.com""); 		 		oBrowser.findElement(By.id(""gh-ac"")).click(); 		oBrowser.findElement(By.id(""gh-ac"")).clear(); 		oBrowser.findElement(By.id(""gh-ac"")).sendKeys(""laptop""); 		 		oBrowser.findElement(By.id(""gh-btn"")).click(); 		//*[@id=""gh-as-a""] 		 		//Click on the link Advance 		oBrowser.findElement(By.linkText(""Advanced"")).click(); 		 		//Select the BOOK 		WebElement uiCategory=oBrowser.findElement(By.id(""e1-1"")); 		Select oCategoryDD=new Select(uiCategory); 		 		oCategoryDD.deselectByVisibleText(""Books"");    		 	} } ``` I am getting error in line 26 which is WebElement uiCategory=oBrowser.findElement(By.id(""e1-1"")); as WebElement cannot be resolved to a  type.Please suggest what to do","closed","","namrata2929","2018-10-03T17:17:16Z","2019-08-15T09:09:34Z"
"","6542","Python Selenium Firefox Profile Not Work","``` from selenium import webdriver  MY_PROFILE = ""D:\\FIREFOX_PROFILE""  FFP = webdriver.FirefoxProfile(MY_PROFILE)  print(FFP.profile_dir) # OUTPUT: C:\Users\ABC\AppData\Local\Temp\****\*** # But it should be OUTPUT: D:\FIREFOX_PROFILE  DRIVER = webdriver.Firefox(firefox_profile = FFP)  print(FFP.profile_dir) # OUTPUT: C:\Users\ABC\AppData\Local\Temp\****\*** # But it should be OUTPUT: D:\FIREFOX_PROFILE ```  How I user a profile, cookies, caches latter on. if there are any way to reuse the profile. I also create `RUN` -> `firefox.exe -p` and create a new profile, but I can't use that.  I am using:  - Selenium Version: 2.53.6 - Python Version: 3.4.4 - Firefox Version: Various(49.0.2 etc)  I also try with latest python 3.7.0 with latest selenium install on that but that also not work :(","closed","C-docs,","luckynegi100000001","2018-10-16T11:41:12Z","2019-08-15T08:09:34Z"
"","6642","Why geckodriver is not working in linux but good in Windows?","``` from List_of_index import  import os from selenium import webdriver from selenium.webdriver.firefox.options import Options](url) from selenium.common.exceptions import TimeoutException    `def drivers():` 	try: 		 		 		file = os.getcwd() 		location = file+'/'+'geckodriver.exe' 		 		os.environ['DIR'] = location 		CHROMEDRIVER_PATH = location  		firefox_options = Options()   		firefox_options .add_argument(""-headless"")   		driver = webdriver.Firefox(executable_path=CHROMEDRIVER_PATH, firefox_options = firefox_options )  		 		 		 		return driver 	except Exception as e: 		print e 	  def executing_functions(): 	driver = drivers() 	get_cwd = os.getcwd() 	 	new_dir = os.chdir('screenshots') 	for x in webarchive_urls401: 		driver.set_page_load_timeout(20) 		drivers_func(x, waybackurls401, driver) 	 	for y in webarchive_urls403: 		driver.set_page_load_timeout(20) 		drivers_func(y, waybackurls403, driver) 		 	driver.close()		 	os.chdir(get_cwd) def main(): 	executing_functions()  ``` And I am getting this error.  `geckodriver may have wrong permission?` Can any one please help me in there?. Will be great help.   The main function you need to focus on is **drivers()**","closed","","agrawalsmart7","2018-11-11T14:56:28Z","2019-08-15T05:09:58Z"
"","6412","Is AlertsTest.testShouldGetTextOfAlertOpenedInSetTimeout in Java test suite valid?","```   @Test   @Ignore(CHROME)   @Ignore(MARIONETTE)   @Ignore(SAFARI)   public void testShouldGetTextOfAlertOpenedInSetTimeout() {     driver.get(appServer.create(new Page()         .withTitle(""Testing Alerts"")         .withScripts(             ""function slowAlert() { window.setTimeout(function(){ alert('Slow'); }, 200); }"")         .withBody(             ""click me"")));      driver.findElement(By.id(""slow-alert"")).click();      // DO NOT WAIT OR SLEEP HERE.     // This is a regression test for a bug where only the first switchTo call would throw,     // and only if it happens before the alert actually loads.     Alert alert = driver.switchTo().alert();     try {       assertThat(alert.getText()).isEqualTo(""Slow"");     } finally {       alert.accept();     }   } ``` Why should `Alert alert = driver.switchTo().alert();` throw no exception?  The test was added more than 7 years ago, most browsers have never passed it, and now IE started to fail it too.  CC: @shs96c @jimevans","closed","C-java,","barancev","2018-09-16T11:26:33Z","2019-08-15T10:09:59Z"
"","6579","No default jsDelivr CDN file set","[This package](https://www.jsdelivr.com/package/npm/selenium-webdriver) doesn't have a [default file](https://www.jsdelivr.com/features#publishing-packages) set. You can set it via `jsdelivr`, `browser`, or `main` field in `package.json`","closed","I-stale,","basavarajsarci","2018-10-26T05:51:25Z","2021-12-04T00:06:30Z"
"","6052","Hello Guys iam getting following error while running TestNG .. Please suggest me what to do","[RemoteTestNG] detected TestNG version 6.14.2 Starting ChromeDriver (v2.9.248315) on port 26745 Jun 21, 2018 3:03:13 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS FAILED CONFIGURATION: @BeforeMethod Startup org.openqa.selenium.WebDriverException: java.net.SocketException: Connection reset Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'EC2AMAZ-QIBURUK', ip: '172.31.61.148', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.1' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:828) 	at Login.Startup(Login.java:19) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:520) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) Caused by: java.net.SocketException: Connection reset 	at java.base/java.net.SocketInputStream.read(Unknown Source) 	at java.base/java.net.SocketInputStream.read(Unknown Source) 	at okio.Okio$2.read(Okio.java:139) 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:237) 	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345) 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217) 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212) 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 32 more  SKIPPED: BillingV2Login org.openqa.selenium.WebDriverException: java.net.SocketException: Connection reset Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'EC2AMAZ-QIBURUK', ip: '172.31.61.148', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '10.0.1' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:828) 	at Login.Startup(Login.java:19) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:520) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)","closed","","SaravanaKumarssp","2018-06-21T09:39:39Z","2019-08-15T21:10:04Z"
"","6795","Node connectivity issue . (cannot reach the node for 2 tries)","[Mobile.txt](https://github.com/SeleniumHQ/selenium/files/2717193/Mobile.txt) [Mobile2.txt](https://github.com/SeleniumHQ/selenium/files/2717194/Mobile2.txt)  ## 🐛 Bug Report  Selenium Grid not working as expected. It is not connecting to nodes properly.  ## To Reproduce  Detailed steps to reproduce the behavior:  ## Expected behavior  I am trying to use Selenium Grid with appium. When i launch the hub and nodes the hub is throwing below error  19:06:20.586 INFO - Marking the node http://192.168.43.146:4726 as down: cannot reach the node for 2 tries 19:07:01.436 INFO - Unregistering the node http://192.168.43.146:4724 because it's been down for 60070 milliseconds 19:07:01.437 WARN - Cleaning up stale test sessions on the unregistered node http://192.168.43.146:4724 19:07:04.105 INFO - Registered a node http://192.168.43.146:4724 [Hub Log.txt](https://github.com/SeleniumHQ/selenium/files/2717187/Hub.Log.txt) [Node1 Log.txt](https://github.com/SeleniumHQ/selenium/files/2717188/Node1.Log.txt) [Node2 Log.txt](https://github.com/SeleniumHQ/selenium/files/2717189/Node2.Log.txt)  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Selenium Grid version (if applicable): 2.53.0","closed","R-awaiting answer,","rajkumar-cp","2018-12-30T13:45:55Z","2019-08-14T23:09:35Z"
"","6731","[ci] Fix ""Could not reserve enough space for 2097152KB object heap"" in Appveyor","[Buld now succeeds but tests still fail](https://ci.appveyor.com/project/native-api/selenium/builds/20800656), albeit for other reasons.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6731)","closed","","native-api","2018-12-05T22:16:19Z","2018-12-08T08:43:48Z"
"","6114","maven dependency selenium-java 3.13.0 not found","[## Meta - OS:  Windows 10 Selenium Version:  Selenium Java 3.13.0 Browser:  -  I create maven project in IDEA.   Paste dependency code from maven.central.                       org.seleniumhq.selenium             selenium-java             3.13.0           selenium-java 3.13.0 not found. With selenium java 3.12.0 all ok.","closed","","Tsyklop","2018-07-04T16:01:03Z","2019-08-15T20:09:37Z"
"","6207","SessionNotCreatedException, tab crashed","[![enter image description here][1]][1]  I'd like to test multiple mobile user agents with selenium and chrome. I'm using python 3.6 and trying to deploy to heroku. I'm using headless chrome=68.0.3440.75 chromedriver 2.40.565383 . Based on http://chromedriver.chromium.org/mobile-emulation :  	def create_chromedriver(ua=False): 	    options = webdriver.ChromeOptions() 	    CHROMEDRIVER_PATH = os.getenv('$HOME') or basedir+'/chromedriver.exe' 	    FLASK_CONFIG = os.getenv('FLASK_CONFIG')    	    if FLASK_CONFIG and FLASK_CONFIG == ""production"": 	        # CHROMEDRIVER_PATH = '/app/.chromedriver/bin/chromedriver' 	        CHROMEDRIVER_PATH = '/app/.chromedriver/bin/chromedriver' 	        GOOGLE_CHROME_SHIM = os.getenv('$GOOGLE_CHROME_SHIM') or 'no path found'  	        print(GOOGLE_CHROME_SHIM) 	        print(GOOGLE_CHROME_SHIM) 	        options.add_argument(""--headless"") 	        options.add_argument(""--disable-gpu"")  	    if ua: 	        print('ua block33')  	        mobile_emulation =  {""deviceName"": ""iPad Mini""} 	        options.add_experimental_option(""mobileEmulation"", mobile_emulation)  	    return webdriver.Chrome(executable_path=CHROMEDRIVER_PATH, chrome_options=options)    	def some_long_calculation(): 	    driver = create_chromedriver('test') 	    # driver = create_chromedriver() 	    print(driver.capabilities['version']) 	    print(driver.capabilities['version'])  	    driver.get(""https://www.yahoo.com/"") 	    	    print(1)  	    png = driver.get_screenshot_as_png() 	    driver.close()  	    # return 'a' 	    return png  On both windows locally and if I run on heroku with When I run this project on heroku  using 	      def some_long_calculation(): 	    # driver = create_chromedriver('test') 	    driver = create_chromedriver()  I get the expected yahoo screenshot  However using :      def some_long_calculation(): 	    driver = create_chromedriver('test')  results in:   	2018-07-26T15:08:21.448393+00:00 heroku[web.1]: State changed from starting to up 	2018-07-26T15:08:23.555153+00:00 app[web.1]: no path found 	2018-07-26T15:08:23.555197+00:00 app[web.1]: no path found 	2018-07-26T15:08:23.555199+00:00 app[web.1]: ua block33 	2018-07-26T15:08:25.772281+00:00 heroku[router]: at=info method=GET path=""/"" host=mobiletest16.herokuapp.com request_id=4f72f6b0-3d8f-418f-a01b-a0281c4f644d fwd=""54.86.59.209"" dyno=web.1 connect=0ms service=2219ms status=500 bytes=456 protocol=https 	2018-07-26T15:08:25.770879+00:00 app[web.1]: [2018-07-26 15:08:25,756] ERROR in app: Exception on / [GET] 	2018-07-26T15:08:25.770892+00:00 app[web.1]: Traceback (most recent call last): 	2018-07-26T15:08:25.770894+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/flask/app.py"", line 2292, in wsgi_app 	2018-07-26T15:08:25.770895+00:00 app[web.1]:     response = self.full_dispatch_request() 	2018-07-26T15:08:25.770897+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/flask/app.py"", line 1815, in full_dispatch_request 	2018-07-26T15:08:25.770899+00:00 app[web.1]:     rv = self.handle_user_exception(e) 	2018-07-26T15:08:25.770900+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/flask/app.py"", line 1718, in handle_user_exception 	2018-07-26T15:08:25.770902+00:00 app[web.1]:     reraise(exc_type, exc_value, tb) 	2018-07-26T15:08:25.770904+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/flask/_compat.py"", line 35, in reraise 	2018-07-26T15:08:25.770907+00:00 app[web.1]:     raise value 	2018-07-26T15:08:25.770908+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/flask/app.py"", line 1813, in full_dispatch_request 	2018-07-26T15:08:25.770910+00:00 app[web.1]:     rv = self.dispatch_request() 	2018-07-26T15:08:25.770911+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/flask/app.py"", line 1799, in dispatch_request 	2018-07-26T15:08:25.770913+00:00 app[web.1]:     return self.view_functions[rule.endpoint](**req.view_args) 	2018-07-26T15:08:25.770914+00:00 app[web.1]:   File ""/app/err_test.py"", line 115, in sanity_check 	2018-07-26T15:08:25.770916+00:00 app[web.1]:     png = some_long_calculation() 	2018-07-26T15:08:25.770918+00:00 app[web.1]:   File ""/app/err_test.py"", line 89, in some_long_calculation 	2018-07-26T15:08:25.770919+00:00 app[web.1]:     driver = create_chromedriver('test') 	2018-07-26T15:08:25.770921+00:00 app[web.1]:   File ""/app/err_test.py"", line 78, in create_chromedriver 	2018-07-26T15:08:25.770923+00:00 app[web.1]:     return webdriver.Chrome(executable_path=CHROMEDRIVER_PATH, options=options) 	2018-07-26T15:08:25.770925+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 75, in __init__ 	2018-07-26T15:08:25.770926+00:00 app[web.1]:     desired_capabilities=desired_capabilities) 	2018-07-26T15:08:25.770928+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 156, in __init__ 	2018-07-26T15:08:25.770929+00:00 app[web.1]:     self.start_session(capabilities, browser_profile) 	2018-07-26T15:08:25.770931+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 251, in start_session 	2018-07-26T15:08:25.770933+00:00 app[web.1]:     response = self.execute(Command.NEW_SESSION, parameters) 	2018-07-26T15:08:25.770934+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute 	2018-07-26T15:08:25.770936+00:00 app[web.1]:     self.error_handler.check_response(response) 	2018-07-26T15:08:25.770937+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response 	2018-07-26T15:08:25.770939+00:00 app[web.1]:     raise exception_class(message, screen, stacktrace) 	2018-07-26T15:08:25.770944+00:00 app[web.1]: selenium.common.exceptions.SessionNotCreatedException: Message: session not created exception 	2018-07-26T15:08:25.770946+00:00 app[web.1]: from tab crashed 	2018-07-26T15:08:25.770948+00:00 app[web.1]:   (Session info: headless chrome=68.0.3440.75) 	2018-07-26T15:08:25.770949+00:00 app[web.1]:   (Driver info: chromedriver=2.40.565383 (76257d1ab79276b2d53ee976b2c3e3b9f335cde7),platform=Linux 4.4.0-1019-aws x86_64) 	2018-07-26T15:08:25.771063+00:00 app[web.1]:  	2018-07-26T15:08:25.773980+00:00 app[web.1]: 10.30.235.45 - - [26/Jul/2018:15:08:25 +0000] ""GET / HTTP/1.1"" 500 291 ""https://dashboard.heroku.com/"" ""Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36""   You can download my project for both windows and heroku use at:      https://github.com/kc1/mobiletest  (keep in mind that if you deploy to heroku you have to set FLASK_CONFIG to production. Also you will need to add the 3 buildpacks shown in the screenshot.)       [1]: https://i.stack.imgur.com/UI0ua.png","closed","","kc1","2018-07-26T16:41:35Z","2019-08-15T17:09:54Z"
"","6627","Restored `-remoteHost` support and fix for nodes behind reverse proxy","1. Restored `-remoteHost` CLI option support, lost in revision: 2fb93404832400c5c02fdac6593b19d19e582d8d (@barancev ""Composition instead of inheritance in CLI options"") 2. Support for nodes behind reverse proxy (Cloud Foundry GoRouter in my case) https://github.com/SeleniumHQ/selenium/issues/5373  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6627)","closed","C-grid,","kinjelom","2018-11-07T00:23:50Z","2019-05-13T15:07:14Z"
"","6370","browserTimeout parameter and BROWSER_TIMEOUT reason are confusing and inconsistent","1. Parameter browserTimeout  does nothing (actually not used).      The last time it was used is pre-3.9 version in java/server/src/org/openqa/selenium/remote/server/DriverServlet.java, (file deleted in commit 0811736)   Currently both OKHttp and Apache use timeout with duration==3 hours which sometimes hangs test (for example, when Authentication required but not provided or when broconnection interrupted/died)  (Thats why test [BrowserTimeOutTest](https://github.com/SeleniumHQ/selenium/blob/2c1c44807773c32803702c31fd5513d505e2c8cb/java/server/test/org/openqa/grid/e2e/node/BrowserTimeOutTest.java#L42) is broken)  2. Hub continues to return error codes with message ""Session [...] was terminated due to BROWSER_TIMEOUT"" which is confusing and has nothing common with browserTimeout parameter.   Currently this error reason is returned by hub to clients (tests) after remote node returns 404 error - 'no such session',  See `TestSession#closeSessionIfNecessary` lines [301, 323, 330](https://github.com/SeleniumHQ/selenium/blob/213e229cebbbc162d88fe839aec8998906241475/java/server/src/org/openqa/grid/internal/TestSession.java#L301-L330)     But behavior is specific - During first request (after session is gone) client gets error ""no  such session"" (proxied by hub) but all subsequent requests  return error ""browser_timeout"": ```java  someCode();  // here session lost on node.  // (for ex., by newCommandTimeout or due --sessionOverride in appium)  try{    wd.findElement().getText()  // try to get title:  ""no such session"" } catch (WebDriverException e){   wd.getScreenshot()      // try to make screenshot: ""browser timeout""       } ```  Of cause wrong reason is not so critical issue but it significantly complicates process of grid environment configuration, logs analysing, investigation of error reasond etc.  **Proposed fix for item 1:**  when initialise proxy httpClient use `browserTimeout` parameter to instead of using default constant value (3h) for [apache](https://github.com/SeleniumHQ/selenium/blob/b8da61f55585a05c02c9f23e2e78cd2b1e746369/java/client/src/org/openqa/selenium/remote/internal/HttpClientFactory.java#L54:L61) and [okhttp](https://github.com/SeleniumHQ/selenium/blob/b8da61f55585a05c02c9f23e2e78cd2b1e746369/java/client/src/org/openqa/selenium/remote/internal/OkHttpClient.java#L122:L124) clients  **Proposed fix for item 2:**   *  use ""BROWSER_TIMEOUT"" reson only together with browserTimeout parameter (number of seconds a browser session is allowed to hang while a WebDriver command is running (example: driver.get(url))) * if required add another session termination reason, for example SessionTerminationReason.INVALID_SESSION_ID","closed","C-grid,","kool79","2018-09-05T20:15:30Z","2019-08-15T08:09:49Z"
"","5838","1","1 ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","HabtamuGessese","2018-04-28T01:58:17Z","2019-08-16T04:09:47Z"
"","6589","chromedriver 2.43  and  chrome 69 but from disconnected: unable to connect to renderer","/Library/Frameworks/Python.framework/Versions/3.7/bin/python3 ""/Users/bjhl/PycharmProjects/GUI Test/testcase/testMainCase.py"" /Users/bjhl/PycharmProjects/GUI Test/testcase/testMainCase.py:21: DeprecationWarning: use options instead of chrome_options   self.driver = webdriver.Chrome(chrome_options=option); Traceback (most recent call last):   File ""/Users/bjhl/PycharmProjects/GUI Test/testcase/testMainCase.py"", line 53, in      test.setUp();   File ""/Users/bjhl/PycharmProjects/GUI Test/testcase/testMainCase.py"", line 21, in setUp     self.driver = webdriver.Chrome(chrome_options=option);   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/chrome/webdriver.py"", line 81, in __init__     desired_capabilities=desired_capabilities)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: session not created from disconnected: unable to connect to renderer   (Session info: chrome=69.0.3497.81)   (Driver info: chromedriver=2.43.600229 (3fae4d0cda5334b4f533bede5a4787f7b832d052),platform=Mac OS X 10.13.2 x86_64)","closed","","wangxitao2273","2018-10-27T15:14:46Z","2019-08-15T06:09:56Z"
"","6600","Edge webdriver fails with error ""invalid capability"" on Windows 10 RS5 17763","-->  Browser Version:     ## Expected Behavior - No error ## Actual Behavior - Edge load fails with exception ""invalid capability""  ## Steps to reproduce - download webdriver for Win 10 RS5  IWebDriver driver = new EdgeDriver(""c:\test"");                 driver.Url = link;                 IWait wait = new OpenQA.Selenium.Support.UI.WebDriverWait(driver, TimeSpan.FromSeconds(60.00));                 wait.Until(driver1 => ((IJavaScriptExecutor)driver).ExecuteScript(""return document.readyState"").Equals(""complete""));","closed","D-edge,","gauravjoshi4u","2018-10-30T23:28:56Z","2019-08-15T00:09:39Z"
"","5849","Use https where possible","- Use https for all links, except for Oracle, which doesnt seem to have https - Update link for the buck build tool  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","romanzoller","2018-05-01T12:58:02Z","2018-05-06T16:11:53Z"
"","6836","Even in a root, cannot search element for specific frame.","- Chrome  Hi  This is just for a curious.  I sometimes got stuck in the case that can't search a element, because the element included in specific frame.   I was started to search element in a root, I don't make sense the concept we have to get driver move into the frame which has the element, and start to search.  Why don't selenium concept doesn't allow below Find_element_by_id(""AAA"") -> then get element even it's in the specific frame (descendants in tree)","closed","","skeksk91","2019-01-10T15:56:11Z","2019-08-15T00:09:47Z"
"","6596","added methods to get screen resolution of various devices","- Added methods to get screen resolution of various devices. - Chrome v-69 cannot be maximized using maximize function. This adjusts only the height of the window. A method is added to maximize the window in according to the screen resolution.    - [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6596)","closed","C-rb,","gowthamraj198","2018-10-30T08:57:51Z","2018-11-07T07:37:19Z"
"","6648","Fix Javadoc comment issues.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix Javadoc comment issues.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6648)","closed","","User253489","2018-11-12T23:48:22Z","2018-11-14T13:34:28Z"
"","6468","Fix Javadoc comment issues.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix Javadoc comment issues.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6468)","closed","","User253489","2018-10-02T00:57:00Z","2018-10-29T12:08:16Z"
"","5954","Fix comment issues.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix comment issues.","closed","C-java,","User253489","2018-05-29T19:46:26Z","2018-06-15T09:23:05Z"
"","6759","Fix comment and exception message issues.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) Fix comment and exception message issues.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6759)","closed","C-java,","User253489","2018-12-15T23:25:56Z","2021-01-26T15:56:58Z"
"","6151","Driver service timeout","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) After thinking on comments of PR #6117 I think that adding configurable timeout into DriverService.Builder is much better solution, because, in this case, custom timeout can be set for any driver. Also because FirefoxBinary.setTimeout was not used at all I removed it.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6151)","closed","C-java,","grigaman","2018-07-12T09:55:47Z","2019-08-08T09:30:52Z"
"","6635","Upgrade to JUnit 5 (vintage)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Using JUnit 5 Vintage allows us to run vintage JUnit tests (tests written in the JUnit 4 style) on the new JUnit Platform. Therefore someone doesn't need to upgrade pre-JUnit 5 tests itself yet.  See https://www.baeldung.com/junit-5-migration: > JUnit Vintage aids in the migration of JUnit tests by running JUnit 3 or JUnit 4 tests within the JUnit 5 context.  Also https://junit.org/junit5/docs/current/user-guide/#dependency-metadata-junit-vintage > JUnit Vintage test engine implementation that allows to run vintage JUnit tests, i.e. tests written in the JUnit 3 or JUnit 4 style, on the new JUnit Platform.  JUnit 5 releases: https://github.com/junit-team/junit5/releases  Why upgrade? So frameworks that use selenium can also upgrade to JUnit 5 without conflicting dependencies.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6635)","closed","","mkurz","2018-11-08T20:11:44Z","2018-11-08T20:35:25Z"
"","6240","Disable overlapping tests","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Turns out we function the same way (per spec) as Firefox/Chrome for these tests by checking that an element is not obscured before sending click.","closed","","InstyleVII","2018-08-02T19:55:00Z","2018-08-03T20:48:14Z"
"","6704","fix and use ephemeral port from platform","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This solves the port negotiation problem on linux (and maybe other platforms). #1630   The removed code leads to the result that `FIRST_PORT` and `LAST_PORT` is both set to 1024 which always returns 1024. In fact we should trust the ephemeral ports reports by the detector. With the min and max we just assure a valid port range.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6704)","closed","C-java,","tflori","2018-11-29T20:42:05Z","2021-10-04T18:16:25Z"
"","6398","Remove 2 non-boolean and add a few missing boolean attributes","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This removes `draggable` and `spellcheck` from the list of boolean attributes because they are actually enumerated attributes.  Also adds in a few missing boolean attributes.   Should fix Issue #6396","closed","D-atoms,","twalpole","2018-09-12T05:52:56Z","2018-09-18T19:49:00Z"
"","5977","Add awaitable method for Support.UI.DefaultWait","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This makes it possible to wait asynchronously until something occurs based on the Task-based Asynchronous Pattern recommended by Microsoft.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/5977)","closed","C-dotnet,","njahs","2018-06-02T18:22:00Z","2022-07-20T18:18:54Z"
"","6373","[rb] Dispatch form ""submit"" event on window to prevent a form double submission (#6361)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This fixes the Ruby bindings for issue #6361.","closed","","whimboo","2018-09-06T12:09:12Z","2018-09-06T12:57:44Z"
"","6374","[cs] Dispatch form ""submit"" event on window to prevent a form double submission (#6361)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This fixes the dotnet binding for issue #6361.","closed","","whimboo","2018-09-06T12:44:54Z","2018-09-07T07:36:41Z"
"","6163","adding the EpectedCondition invisibility_of_element","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This adds a `invisibility_of_element` to compliment the existing `invisibility_of_element_located` ExpectedCondition. It also makes both methods use the same logic where either a locator or a `WebElement` can be given to them to evaluate.  If people are happy with this approach I am happy to follow up giving other similar pairs the same treatment. I also did not see the documentation in this repository, so don't know where to add that. Pointers in that direction would be appreciated.","closed","C-py,","larkost","2018-07-16T02:38:03Z","2018-10-12T18:00:07Z"
"","6531","adding a css_classes property to WebElement","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This add a `css_classes` property to the Python WebElement that returns a list of the classes on that element (or an empty list if there is none). I find myself doing this over and over in my code, and `.get_attribute('class').split()` gets annoying after a while.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6531)","closed","","larkost-fetch","2018-10-12T22:02:24Z","2018-10-13T03:07:03Z"
"","6242","Enable unexpected alert tests in Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  These tests should now pass in Edge in the public insiders flight that just went out so enabling them.","closed","","InstyleVII","2018-08-02T20:04:08Z","2018-08-03T20:47:19Z"
"","6483","IEDriver: set noProxy settings for Global and per process proxy","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  There was a [`TODO:`](https://github.com/SeleniumHQ/selenium/commit/08a118bd6fb8609445d256e62f9eef0ae7eb4b88#diff-e2d3c36ba0efce4127d29ffbea53ba0aR172) in the code about actually setting the noProxy (proxy bypass) settings in IEDriver. This PR addressed setting both the global registry proxy bypass setting, and the per process proxy bypass setting.  fix #6086   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6483)","closed","","kuceb","2018-10-04T22:42:59Z","2019-02-25T19:37:30Z"
"","6034","Add status as property on webdriver","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  The Python implementation is missing the call on the endpoint `/status` as documented here: https://www.w3.org/TR/webdriver/#status Coming from Appium, I need to use this endpoint for checking the server version, mentioned as 'additional meta info' in the spec.","closed","C-py,","olescheller","2018-06-18T11:55:59Z","2018-09-18T03:08:04Z"
"","5970","Enable Get Element Property tests in Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  The Get Element Property tests work for the W3C version of Edge, so enabling them to get credit.","closed","","InstyleVII","2018-06-01T02:18:23Z","2018-06-04T19:39:41Z"
"","5957","Fixed quit command for default state","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  The checks that determine whether EdgeDriver should use /shutdown or terminate the process were failing when UseSpecCompliantProtocol wasn't set to a value. The flag is a nullable bool, where null/true means the driver should run in W3C mode while false means the driver should run in JWP mode. The check was checking both for a value and for true, but since a null state has no value it failed the check and fell back to the JWP Quit path which calls /shutdown (which doesn't exist in W3C mode for MicrosoftWebDriver.exe).  The fix changes the logic such that it validates when the flag is set to false, as that is the only time the JWP Quit path should be used, in the other two cases (null/true) it should use the W3C Quit path and terminate the process.","closed","","InstyleVII","2018-05-30T01:35:42Z","2018-05-31T17:46:00Z"
"","6241","Disable alert tests for Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Spoke with Brandon and same thing here, we don't fire alerts here so these should be ignored.","closed","","InstyleVII","2018-08-02T20:00:55Z","2018-08-03T20:49:59Z"
"","6711","[py] WebDriverWait: document until and until_not","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  See https://stackoverflow.com/questions/53514703/wait-for-element-and-return-it and specifically https://stackoverflow.com/questions/53514703/wait-for-element-and-return-it#comment93898809_53514792 for context.  Considered autogenerating the docstrings from java API, but seeing how vastly different the two bindings are, very little from the Java docs can actually be reused.  I couldn't find any other docstrings with markup; chose ReST markup ([as opposed to Google or NumPy](https://stackoverflow.com/questions/3898572/what-is-the-standard-python-docstring-format) one) because `sphinx.ext.napoleon` is not enabled in https://github.com/SeleniumHQ/selenium/blob/master/py/docs/source/conf.py which suggests that Selenium doesn't endorse either of the latter.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6711)","closed","C-py,","native-api","2018-12-01T11:27:24Z","2019-02-06T16:21:34Z"
"","6525","Adding support for the legacy safaridriver option","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Safaridriver's current implementation of the w3c spec is missing proxy settings. This PR provides the ability to set the `--legacy` option, and use JWP instead.  As much as I'd like to just stick to w3c, there are too many tests that depend on the proxy settings.  Once Safaridriver's w3c implementation is more robust, we could consider dropping it, but for now this is helpful.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6525)","closed","C-java,","joventuraz","2018-10-12T03:11:04Z","2018-10-30T20:34:14Z"
"","6409","added table elements","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Often there are **tables** on web-pages and I like to easily handle them. I build these classes and  have been using this helper/wrapper over several projects. I like to contribute it for the dot-net solution and hope it will establish for the other language bindings too.  Usage example: ``` theTable = new Table(WebDriver.FindElement(locator)) theTable.BodyRows[3].DataCells[8].Text theTable.HeaderRows[0].HeaderCells[1].WebElement ```   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6409)","closed","C-dotnet,","dibagga","2018-09-14T09:40:49Z","2021-01-24T16:27:32Z"
"","6270","Disabling test in Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Looks like this isn't in the spec and is disabled for all other browsers so disabling it for Edge as well.","closed","","InstyleVII","2018-08-10T22:32:39Z","2018-08-13T18:44:41Z"
"","6214","Skip keyboard tests in Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  It looks like these tests conflict with the spec per conversation with our dev. We match Firefox here. May need to change the spec if we want this to work but for now skipping. According to the spec, when you do a keyDown action for a character, we should fire a DOM event for that exact character, regardless of the shift key state, so you should be getting ""ab"".   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6214)","closed","C-dotnet,","InstyleVII","2018-07-27T19:08:24Z","2020-07-12T20:10:44Z"
"","6133","Made WebDriver extend AutoCloseable","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I found a [previous closed PR about this](https://github.com/SeleniumHQ/selenium/pull/650), but I would like to open this up to more discussion since I still do not understand why making it implement AutoCloseable would break the method contract. Overall implementing the interface would be helpful to users since IDEs would give a warning to close the driver if it is never closed.","closed","","sbhat98","2018-07-09T22:34:41Z","2018-07-10T04:24:08Z"
"","6168","fixed spelling mistake from 'uisng' to 'using'.","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I fixed the spelling. I don't know if you need or not, but I think better it has right spelling. Thanks.","closed","","Jongkeun","2018-07-17T00:56:11Z","2018-07-17T13:54:05Z"
"","6075","Fix windowSize option in Firefox in Javascript","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Hi guys.   ""--window-size"" is for screenshots only in Firefox, not the size of the Firefox window itself.  ""--width"" and ""--height"" are the proper way to set the dimensions of a Firefox window from the CLI.  Proof: ```bash firefox -h | grep screenshot  --screenshot [] Save screenshot to  or in working directory.  --window-size width[,height] Width and optionally height of screenshot. ```  Works (after my change): ```bash firefox --width=1920 --height=1080 ```  Doesn't work (before my change): ```bash firefox --window-size=1920,1080 ```","closed","","rodmcnew","2018-06-26T20:24:43Z","2020-11-23T09:47:03Z"
"","5971","Enable multiple tests in Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Found more tests that used to fail due to crashes/hangs that now work in Edge so re-enabling them to get credit.","closed","","InstyleVII","2018-06-01T02:53:36Z","2018-06-04T19:39:38Z"
"","6078","Fixes empty options merge [fixes #6071]","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fixes #6071   but i don't feel good about this code actually.  `options[Options::KEY].empty?`  checking for key here feels dirty to me 🤔  I like changing return of `as_json` to `opts ? {KEY => opts} : {}` more, but not sure if even empty `goog:chromeOptions` is required   Also I tried to refactor specs related to `custom desired capabilities` to be more DRY, lmk if it worths it","closed","","artplan1","2018-06-26T23:00:13Z","2018-07-01T06:21:54Z"
"","6368","Dispatch form ""submit"" event on window to prevent a form double submission","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fix for issue #6361 for the Python bindings.","closed","","whimboo","2018-09-05T13:52:04Z","2018-09-06T12:57:32Z"
"","6209","Disable screenshot tests for Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Edge (like Chrome/Firefox/IE) only takes a screenshot of the viewport and not the entire page which causes these 5 tests to fail. Added ignores for Edge for these tests.","closed","","InstyleVII","2018-07-26T20:53:05Z","2018-07-27T17:50:39Z"
"","6271","Disabling insercure cert cookie tests","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Disabling these tests as they require supporting the Insecure Certificate capability which Edge doesn't support currently. Once we do support it we should enable these tests to run/validate the scenario.","closed","","InstyleVII","2018-08-10T22:36:41Z","2018-08-13T18:44:03Z"
"","6269","Enable and skip tests in Edge","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Currently Edge doesn't support insecure SSL certificates so a test validating that has been disabled. Likewise we now pass a page loading test that we didn't so enabled that.","closed","","InstyleVII","2018-08-10T22:20:18Z","2018-08-13T18:45:10Z"
"","6245","Fix Locatable interface import","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  A lot of the classes was still using deprecated Locatable interface from the `org.openqa.selenium.interactions.internal.Locatable` package.  I replaced the imports to `org.openqa.selenium.interactions.Locatable` package.  With this commit ""java.lang.ClassCastException: wrapper.Element cannot be cast to org.openqa.selenium.interactions.internal.Locatable"" exception should be fixed.","closed","","baflQA","2018-08-03T09:31:01Z","2018-09-04T19:59:59Z"
"","6415","Enusre generated pause has duration to workaround geckodriver 0.22 issue","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  `geckodriver` 0.22 incorrectly requires `pause` actions to have a `duration` setting - https://github.com/mozilla/geckodriver/issues/1375.  This breaks using the actions API with multiple devices (keyboard and mouse) since pauses without a duration parameter are automatically inserted.  This PR works around the issue by setting the duration to 0 in the auto-inserted pauses.  Obviously it would be better if geckodriver was fixed version 0.22 pulled and 0.23 (or 0.22.1) released however in the meantime this would fix things.","closed","C-rb,","twalpole","2018-09-16T18:03:43Z","2018-09-18T08:21:08Z"
"","6785","make isPromise() return boolean value for null and undefined cases","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  - Currently isPromise() returns non boolean for the cases like following isPromise(null) // returns null isPromise(undefined) // returns undefined  - Modified to return boolean value explicitly for the cases mentioned above   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6785)","closed","C-nodejs,","Jayasankar-m","2018-12-24T17:28:51Z","2021-04-07T16:45:01Z"
"","6599","add a way to set download path for chrome headless to work","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  **In Progress**    --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6599)","closed","","BernardoSilva","2018-10-30T16:45:53Z","2018-10-30T17:28:53Z"
"","5999","Updated ChromeDriver docs","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ### What has been done - Changed `chromedriver` to `ChromeDriver` in `ChromeDriverService.java` - Fixed small issues in docs in `ChromeDriverService.java` and `ChromeOptions.java`","closed","C-docs,","stia-na","2018-06-06T17:47:10Z","2018-06-15T09:15:01Z"
"","6172","[py] fix: drag and drop by offset broken (#6171)","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   See #6171 for what this fixes.","closed","C-py,","Herst","2018-07-17T13:00:20Z","2018-07-17T14:42:51Z"
"","6815","[py] Add WebKitGTK to API docs","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6815)","closed","","carlosgcampos","2019-01-04T13:35:18Z","2019-01-04T14:16:19Z"
"","6765","Consistent wording for options that can't be found","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6765)","closed","","labkey-tchad","2018-12-17T22:55:50Z","2018-12-18T02:24:14Z"
"","6724","[py] Fix typo in description of WebDriver class","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6724)","closed","","Herst","2018-12-04T16:38:45Z","2018-12-04T16:55:42Z"
"","6670","Fix #6669 by adding missing command GetElementProperty","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6670)","closed","C-dotnet,","hejhj","2018-11-21T05:59:54Z","2018-11-22T07:15:27Z"
"","6628","Installing Requests in Python","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6628)","closed","","kinjelom","2018-11-07T09:28:26Z","2018-11-07T16:00:10Z"
"","6617","[java] Implement equals() and hashCode() in `Select` element wrapper","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6617)","closed","C-java,","valfirst","2018-11-03T21:08:39Z","2018-11-14T13:33:22Z"
"","6616","[java] Implement `WrapsElement` by `Select` element wrapper","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6616)","closed","C-java,","valfirst","2018-11-03T19:11:50Z","2018-11-07T16:45:34Z"
"","6615","[java] Add missing @Override annotation","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6615)","closed","C-java,","valfirst","2018-11-03T19:07:36Z","2018-12-28T14:10:34Z"
"","6614","[java] Clean up","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6614)","closed","C-java,","valfirst","2018-11-03T19:02:11Z","2018-12-28T13:58:53Z"
"","6582","Check for webextension using browser.extension instead of runtime","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6582)","closed","","corevo","2018-10-26T12:04:19Z","2018-10-26T12:45:47Z"
"","6501","[java] Simplify and refactor Select element wrapper","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6501)","closed","","valfirst","2018-10-09T21:07:40Z","2018-10-29T12:26:05Z"
"","6355","w3c issue with `def rect(self):`","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","VladimirPodolyan","2018-08-31T19:14:57Z","2018-11-11T20:59:09Z"
"","6236","[py] Fix doc of URL-related ExpectedCondition","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","Herst","2018-08-01T15:06:14Z","2018-08-01T17:49:33Z"
"","6203","Update README.md","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","muba00","2018-07-25T14:22:52Z","2018-07-25T14:25:34Z"
"","6189","constant default_move_duration prevents appium to override it","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","prakharrr","2018-07-20T17:33:17Z","2018-07-27T14:12:14Z"
"","6179","Code refactoring (Minor clean-up)","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","krmahadevan","2018-07-19T03:05:59Z","2018-07-26T16:59:15Z"
"","6112","Add cause when JsonException occurs","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","f-lopes","2018-07-04T14:33:56Z","2018-07-10T11:16:38Z"
"","6021","Update README.md","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","muba00","2018-06-14T13:25:11Z","2018-07-05T12:31:44Z"
"","5990","Use anonymous GitHub API when GITHUB_TOKEN is not set","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","davehunt","2018-06-04T09:50:23Z","2018-06-04T19:53:51Z"
"","5944","Added ability to direct headless chrome to save files in ruby Driver","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-rb,","pelly","2018-05-24T18:09:45Z","2018-05-25T08:11:31Z"
"","5918","Clean up","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","valfirst","2018-05-20T15:49:48Z","2018-05-25T07:41:31Z"
"","5917","Implement HasCapabilities by EventFiringWebDriver","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","valfirst","2018-05-20T12:40:35Z","2018-06-26T20:44:33Z"
"","6137","Restore missing error class and limit error class lookup scope - Fixes Issue 6122","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This restores the `::Selenium::WebDriver::Error::TimeoutError` class  which appears to have been accidentally removed in https://github.com/SeleniumHQ/selenium/commit/ee29dab24791ac1f7a5c7a35f3b185d53228e1d0#diff-1828458d7e816f8e53b81cf1952df377 .  This caused the error lookup code to incorrectly return the class `::TimeoutError`.  The error lookup code has also been updated to only look for error classes in the `::Selenium::WebDriver::Error` namespace.","closed","C-rb,","twalpole","2018-07-10T18:36:51Z","2018-07-30T19:13:36Z"
"","6162","fix port leaking by changing keepconnectionalive flag to false.","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  More info: https://github.com/SeleniumHQ/selenium/issues/4162   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6162)","closed","C-dotnet,","kenhan168","2018-07-16T00:34:56Z","2020-09-26T00:20:50Z"
"","6051","Change Chrome to Firefox in a couple of comments within Firefox classes","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Changed Chrome to Firefox in a couple of comments within Firefox classes.","closed","","jakedurand","2018-06-21T09:10:51Z","2018-06-23T23:14:06Z"
"","6558","Bug 6541","- [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6558)","closed","C-java,","abidema","2018-10-19T03:53:39Z","2021-01-25T20:27:08Z"
"","6425","Update ClickScrollingTest.java","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","ArthurGIT2017","2018-09-18T16:49:26Z","2018-09-18T17:19:32Z"
"","5895","Update LICENSE","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","VijendraEAtech","2018-05-14T12:04:47Z","2018-05-15T14:43:56Z"
"","6231","Fixed null pointer exception when managed element is not found","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Hi, First public pull request so please let me know if/what I have done wrong.  Basically I was getting an unknown crash in some of my tests, and took it upon myself to track it down. Debugging the running test, showed the line following my change was throwing an exception due to null being passed it. To me it makes sense that if the error code coming out of the function is not success, we should be returning that error code there and then rather than trying to continue and causing a crash.  Changes: The command_executor has a chance to return an error code of ENOSUCHELEMENT. This leaves the element_wrapper object equal to null. Which ends up throwing an exception on the next like of code when it tries to use the element. This in turn causes a crash in IEDriver and it shuts down.","closed","","HomelessFreak","2018-07-31T14:37:02Z","2018-07-31T15:02:24Z"
"","6631","[py] Fixing/tidying docstring","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6631)","closed","","earendil","2018-11-07T23:39:23Z","2018-11-09T22:18:03Z"
"","6485","[java] support --jwp and --w3c driver executable args in EdgeDriverService","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6485)","closed","C-java,","nbquestnb","2018-10-05T21:43:57Z","2020-04-06T12:17:39Z"
"","6550","[rb] Use id in manifest json for firefox extension if exists","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Try to solve this issue https://github.com/SeleniumHQ/selenium/issues/6471  Similar modification as python https://github.com/SeleniumHQ/selenium/pull/6463   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6550)","closed","C-rb,","tadashi0713","2018-10-17T23:00:34Z","2019-05-03T02:06:36Z"
"","6843","Move all remote uploaded files to the same directory so remote IE works with multiple file upload","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Currently remote IE can't send multiple files to a an `` field because it requires all files to be from the same directory.  With the way remote file upload currently works each file is uploaded to it's own temporary directory.  This PR changes that behavior to leave all upload files in a single directory.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6843)","closed","R-awaiting answer,","twalpole","2019-01-11T22:51:15Z","2021-11-18T19:50:58Z"
"","6841","Allow execution of CDP commands when using Chrome","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Allow access to send CDP commands when using Chrome browser.  @titusfortner What do you think of something just very basic like this?   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6841)","closed","","twalpole","2019-01-11T18:43:16Z","2019-01-12T01:11:18Z"
"","6698","Migrate build from buck to bazel","- [ ] General   - [ ] Stamp builds correctly - [ ] Java   - [x] Export to Maven Central   - [ ] Java 9 modules   - [ ] Package zips for java - [ ] Python   - [x] Create `py_import` to import wheels   - [ ] Python wheel creation","closed","C-infra,","shs96c","2018-11-27T18:34:16Z","2021-09-05T09:44:03Z"
"","6817","Create web-test-scripts","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6817)","closed","","awaiskhalil","2019-01-05T14:48:58Z","2019-01-05T20:10:39Z"
"","6328","incognito on firefox webdriver",", I am trying to turn on Incognito on firefox. I am using         options = Options()     options.add_argument('-private'). the browser  is opened in incognito mode but after loading the website , it is become normal again.  ## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","MadibaLab","2018-08-24T16:53:36Z","2019-08-15T14:09:53Z"
"","6470","[FR] Be able to install python bindings from Github using pip","**TL;DR** Due to the way we build this project you can't install from Github. You will either need to use the version on pypi or clone the repo and follow the build steps.  **Long version** We are currently dependent on this pending PR: https://github.com/SeleniumHQ/selenium/pull/6463, thus we have added the following to [requirements.txt](https://pip.readthedocs.io/en/1.1/requirements.html#git): ``` -e git://github.com/motin/selenium.git@add-python-client-support-for-webextensions-in-firefox#egg=selenium&subdirectory=py ```  This however results in a broken package, yielding errors like:  ``` __________________________________ ERROR ... __________________________________ ... .tox/py36/src/selenium/py/selenium/webdriver/__init__.py:18: in      from .firefox.webdriver import WebDriver as Firefox  # noqa .tox/py36/src/selenium/py/selenium/webdriver/firefox/webdriver.py:29: in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver .tox/py36/src/selenium/py/selenium/webdriver/remote/webdriver.py:26: in      from .webelement import WebElement .tox/py36/src/selenium/py/selenium/webdriver/remote/webelement.py:43: in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8') /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/pkgutil.py:591: in get_data     return loader.get_data(resource_name) /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/pkgutil.py:255: in get_data     return open(pathname, ""rb"").read() E   IOError: [Errno 2] No such file or directory: '.../.tox/py36/src/selenium/py/selenium/webdriver/remote/getAttribute.js' ```  ## Meta - OS:  OSX Selenium Version:  PR  ## Expected Behavior -  No difference in behavior or functionality than when not installed directly from github.  ## Actual Behavior -  Selenium runs into issue with missing files in the package.  ## Steps to reproduce -  1. Install python bindings from Github [using pip](https://pip.readthedocs.io/en/stable/reference/pip_install/#vcs-support):  ``` pip install -e git://github.com/SeleniumHQ/selenium.git#egg=selenium&subdirectory=py ```  2. Attempt to use selenium in your project as usual, for instance access the remote webdriver:  ``` from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver ```  ## Notes  The same error has previously been observed [here](https://github.com/SeleniumHQ/selenium/issues/3290) and [here](https://github.com/seleniumhq/selenium/issues/2949#issuecomment-269207595).  It is possible to workaround this by followed the build instructions here https://github.com/SeleniumHQ/selenium/wiki/Python-Bindings#development and then manually copying the built package contents to the `site-packages/selenium/` folder.","closed","","motin","2018-10-02T10:30:52Z","2019-08-15T09:09:40Z"
"","6369","[Request] DotNet DefaultWait{T}: Add async version of Until method","**Regarding DotNet Selenium.Support.UI.DefaultWait.**  It would be nice if an async version of the [`DefaultWait.Until(condition)`](https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Support/DefaultWait%7BT%7D.cs#L142) method (`public async Task UntilAsync(Func condition)`) could be added.  Essentially the code should be exactly the same with the following changes: - The return type should be `Task` - The method signature should be marked as `async` - [`Thread.Sleep(this.sleepInterval);`](https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Support/DefaultWait%7BT%7D.cs#L201) should be changed to `await Task.Delay(this.sleepInterval);` - The new method should be added to the [`IWait`](https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Support/IWait%7BT%7D.cs) interface","closed","","yngndrw-sage","2018-09-05T16:47:24Z","2019-08-15T13:09:36Z"
"","6630","[SEVERE]: Timed out receiving message from renderer","**OS:**   Windows 10 **Selenium Version:**   selenium-server-standalone-3.14.0 for java (using maven) **Browser:**   Google chrome Version 70.0.3538.77 (Official Build) (64-bit) **driver:**   ChromeDriver 2.43  I know so many people have been asking for a solution for this issue, tickets and threads everywhere but still no obvious solution neither obvious source of this problem. I am using the lastest versions of requirements. i made sure (hopefully) there are no compatibility issues.  **Issue :**  _[1541586055.743][SEVERE]: Timed out receiving message from renderer: 299.359_  Happening randomly at the start of the test after calling for `driver.get(url)` without throwing any exception, it just freezes , i should either use ui to manually refresh the browser or just restart the test, or it will just keep hanging like this forever. I want to know if it is a selenium bug or chromedriver bug or an issue with chrome browser or there's something wrong with the way i use it.   btw : i have been looking for a solution for a long time now, and i have tried every solution i have found in any thread in any forum, in vain.. Details: I have been using selenium java for a while now , first started using it locally on my computer using chromedriver webdriver , i've always had this issue then switched to using remote webDriver but nothing changed it is still happening the same old way.  if there's anything that i should provide please tell me.  Here are my chromeOptions: `options.addArguments(""--no-sandbox""); 					options.addArguments(""--disable-dev-shm-usage""); 					options.addArguments(""--aggressive-cache-discard""); 					options.addArguments(""--disable-cache""); 					options.addArguments(""--disable-application-cache""); 					options.addArguments(""--disable-offline-load-stale-cache""); 					options.addArguments(""--disk-cache-size=0""); 					// options.addArguments(""--headless""); 					options.addArguments(""--disable-gpu""); 					options.addArguments(""--dns-prefetch-disable""); 					options.addArguments(""--no-proxy-server""); 					options.addArguments(""--log-level=3""); 					options.addArguments(""--silent""); 					options.addArguments(""--disable-browser-side-navigation""); 					options.setPageLoadStrategy(PageLoadStrategy.NORMAL); 					options.setProxy(null);`","closed","","Owklolz","2018-11-07T10:49:29Z","2019-08-14T15:09:58Z"
"","5854","The suggestions for react js auto suggest input box does not appear when a test is run in IE11 via webdriver","**OS**:  Windows 10Pro 64 Bit **Selenium Web Driver version**: 3.11.2   **Selenium WebDriver IEDriver version:** 3.11.1 **Browser:**  Internet Explorer 11 **Browser Version:** 11.64.16299.0 (Test runs in 32bit) **IDE :** Visual Studio 2017  **Issue:**: If I run automated test using Chrome driver on a react js auto suggest input box then:  1. I can enter the text via send keys without clicking the input box. 2. When I enter a text then suggestions corresponding to the entered text appear.  But when I run same automated test in IE11 then:  1. I can enter the text via send keys only when I click the input box first otherwise not. 2. When text is entered no suggestions appear. If I manually type in the browser controlled by the test then too options appear.  Also if I directly go to the input box manually in IE11 I can see the options.  I can not provide you link to my application since it is an internal application but you can use this url which has same react js auto suggest input component which is used in our application:  **https://codepen.io/moroshko/pen/GEPoQW**  ## Expected Behavior -  When an automated test is run on IE11 then in IE: 1. I should be able to enter the text via send keys without clicking the input box. 2. When I enter a text then suggestions corresponding to the entered text appear while running automated test.  ## Actual Behavior -  When an automated test is run on IE11 then in IE: 1. I can enter the text via send keys only when I click the input box first otherwise not. 2. When text is entered no suggestions appear. If I manually type in the browser controlled by the test then too options appear.  ## Steps to reproduce -  Use link:  **https://codepen.io/moroshko/pen/GEPoQW**  Run an automated test using Chrome Webdriver and enter text 'ja' using send keys then options Java & Java Script will appear.  Run same test in IE11 then you won't be able to enter the text 'ja' until you click the input box first. Once you click the input box then even though the automated test has finished typing the text there wont be any suggestions.  Please note the input box is in a Iframe so you need to switch to the IFrame first. Below are the selectors I used:          private readonly By _demoIframe = By.CssSelector(""iframe[id*=iFrameKey]"");         private readonly By _demoInput = By.CssSelector(""input[type=text][role=combobox][placeholder*=Type]"");         private readonly By _suggestionList = By.CssSelector(""[role=listbox][class*=suggestions-list]"");         private readonly By _suggestionOption= By.CssSelector(""li[role=option]"");  Please let me know if you need any other information.","closed","D-IE,","nitinv0078","2018-05-03T01:21:26Z","2021-09-05T08:27:36Z"
"","6764","DevToolsActivePort file doesn't exist (Driver info: chromedriver=2.45.615291,platform=Windows NT 6.1.7601 SP1 x86_64)","**Issue Description ============** Chromedriver fails to spin up Chrome browser when tests are run (sequentially). Out of 100 tests typically such failures would impact 10-20 tests. I've tried various chromedriver and chrome versions but none of them seems to make the issue any better.  Since this is an intermittent issue I'm unable to provide a 100% reproducible case, but hope the exception stack trace and other details below helps.   **Bindings and Versions ===============** Chrome Version -  71.0.3578.80 ""Selenium.Support"" version=""3.10.0"" targetFramework=""net461""   ""Selenium.WebDriver"" version=""3.10.0"" targetFramework=""net461""  ""Selenium.WebDriver.ChromeDriver"" version=""2.45.0"" targetFramework=""net461""    **Exception Details  ============** **Exception Message** : unknown error: DevToolsActivePort file doesn't exist (Driver info: chromedriver=2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387),platform=Windows NT 6.1.7601 SP1 x86_64)  **Exception StackTrace** : at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse) at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout) at OpenQA.Selenium.Chrome.ChromeDriver..ctor(String chromeDriverDirectory, ChromeOptions options, TimeSpan commandTimeout) at Common.BaseHooks.GetSeleniumDriver(TimeSpan commandTimeout)   Exception Source : WebDriver   **Code which instantiates Chromedriver Instance :**  ==================================         ChromeOptions chromeOptions = new ChromeOptions(); 	chromeOptions.Proxy = proxy; 	chromeOptions.BinaryLocation = PathHelper.GetBrowserAbsolutePath(browser); 	chromeOptions.AddArgument(""--start-maximized"");  	chromeOptions.AddArgument(""--disable-infobars"");  	chromeOptions.AddArgument(""--disable-extensions"");  	chromeOptions.AddArgument(""--disable-gpu""); 					 	chromeOptions.AddArgument(""--disable-dev-shm-usage"");  	chromeOptions.AddArgument(""--no-sandbox""); 	chromeOptions.AddUserProfilePreference(""download.default_directory"", downloadDirectory); 	chromeOptions.AddUserProfilePreference(""download.prompt_for_download"", false); 	chromeOptions.AddUserProfilePreference(""disable-popup-blocking"", ""true"");				 					 	driver = new ChromeDriver(AssemblyDirectory, chromeOptions, commandTimeout)   **The next line from where the exception is being thrown is :	driver.Manage().Window.Maximize();**  					 Attached is the test log from the execution, PFA.  ![image](https://user-images.githubusercontent.com/33328317/50104552-53259580-01f8-11e9-9cce-2e8dfc821688.png)","closed","C-dotnet,","chakraborty-rupam","2018-12-17T17:41:15Z","2019-08-15T01:10:01Z"
"","6120","org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 80070012 ('There are no more files.')","**Error:**  org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 80070012 ('There are no more files.') for URL 'http://localhost:47167/'  **Stack Trace:**  [INFO] [WebDriverFactory] [getWebdriver] Browser type is: InternetExplorer   Started InternetExplorerDriver server (64-bit) 3.13.0.0 Listening on port 47167 Only local connections are allowed  org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 80070012 ('There are no more files.') for URL 'http://localhost:47167/' Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z' System info: host: 'LUSMIN-F00Q46Y', ip: '***.**.**.***', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '10.0.1' Driver info: driver.version: unknown remote stacktrace:  	at com.tcs.saf.base.BaseTest.startWebDriverClient(BaseTest.java:495) 	at com.tcs.saf.base.BaseTest.beforeMethod(BaseTest.java:258) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:520) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) FAILED CONFIGURATION: @BeforeMethod beforeMethod org.openqa.selenium.WebDriverException: Could not start a new session. Possible causes are:  	 1. Selenium Grid is not proprly set up 	 2. Drivers are not properly added to the path  	 3. Port mentioned in the Grid properties file is different from port in which Remote server has started Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z' System info: host: 'LUSMIN-F00Q46Y', ip: '172.28.93.162', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '10.0.1' Driver info: driver.version: unknown 	at com.tcs.saf.base.BaseTest.startWebDriverClient(BaseTest.java:496) 	at com.tcs.saf.base.BaseTest.beforeMethod(BaseTest.java:258) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:520) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)  SKIPPED CONFIGURATION: @AfterMethod afterMethod SKIPPED: Reflect_PE_Saved_Changes_TEST org.openqa.selenium.WebDriverException: Could not start a new session. Possible causes are:  	 1. Selenium Grid is not proprly set up 	 2. Drivers are not properly added to the path  	 3. Port mentioned in the Grid properties file is different from port in which Remote server has started Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z' System info: host: 'LUSMIN-F00Q46Y', ip: '172.28.93.162', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '10.0.1' Driver info: driver.version: unknown 	at com.tcs.saf.base.BaseTest.startWebDriverClient(BaseTest.java:496) 	at com.tcs.saf.base.BaseTest.beforeMethod(BaseTest.java:258) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.base/java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:520) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)  **OS:**  Windows 7 Enterprise **Selenium Version:**  3.13.0 **IE Webdriver Version:** 3.13.0  (64-bit)  **Browser:**  Internet Explorer  **Browser Version:** 11.0.9600.19035CO (64-bit)  **Java:** 10.0.1 **Eclipse:** Photon Release 4.8.0  **Steps to reproduce** The selenium scripts are failing with the above error most of the time some time it works but most of the times it doesn't below is my code for instantiating the IE browser   ``` if (browserType.equalsIgnoreCase(""InternetExplorer"")) { 			try {				 				System.setProperty(""webdriver.ie.driver"", curProj+""\\drivers\\IEDriverServer.exe"");				 				InternetExplorerOptions options = new InternetExplorerOptions();				 				//options.destructivelyEnsureCleanSession(); 				options.introduceFlakinessByIgnoringSecurityDomains(); 				//options.ignoreZoomSettings(); 				options.requireWindowFocus(); 				//options.withInitialBrowserUrl(""about:blank""); 				webdriver = new InternetExplorerDriver(options);				 				logger.info(""getWebDriver - Setting webdriver.ie.driver system property as: "" + System.getProperty(""webdriver.ie.driver""));				 			} catch(IllegalStateException e) { 				logger.error(""The path to the driver executable must be set by the webdriver.ie.driver system property. "",e.fillInStackTrace()); 				throw new IllegalStateException(""The path to the driver executable must be set by the webdriver.ie.driver system property.""); 			} 		} ```","closed","","vishruth143","2018-07-05T23:11:30Z","2019-08-15T19:09:59Z"
"","5915","WebDriver Grid - Node setting ""-timeout 0"" for 3.12 version closes the browser immediately. For 3.11 it was OK","**Environment:** **OS:**  Windows 7 **Selenium Version:**  3.12.0 **Browser:**  Internet Explorer 11 **WebDriver Grid is using**  Steps: 1. Start hub:   > java -jar selenium-server-standalone-3.12.0.jar -role hub -timeout 0 -browserTimeout 60000 -newSessionWaitTimeout -1 -debug  2. Start node: > java -jar selenium-server-standalone-3.12.0.jar -role node -hub http://localhost:4444/grid/register -browser ""browserName=internet explorer,maxInstances=1,version=11"" -timeout 0 -browserTimeout 60000 -debug  3. IEDriverServer.exe was added to system variable:  > c:\>IEDriverServer.exe -v IEDriverServer.exe 3.12.0.0 (32-bit)  4. Start the following code:  ```      @Test   	public void testIE11 () throws MalformedURLException, InterruptedException {   		URL hubUrl = new URL(""http://127.0.0.1:4444/wd/hub"");   		RemoteWebDriver webDriver = new RemoteWebDriver(hubUrl, new InternetExplorerOptions());   		webDriver.get(""https://google.com"");   		Thread.sleep(10000);   	} ```  As a result: IE browser is opened and then immediately closed.  **The following error is displayed in console:** ```  [INFO] ------------------------------------------------------- [INFO]  T E S T S [INFO] ------------------------------------------------------- [INFO] Running com.test.IE11 [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 7.579 s","closed","C-grid,","dmitryyu","2018-05-18T16:59:38Z","2019-08-15T20:09:47Z"
"","6173","Cannot start the driver service on http://localhost:64929/","**Details:** **OS :** Windows 10 Selenium Version:  3.12 webdriver  **Browser :**  Chrome  **Browser Version :**  62 and 67  **Script :** C# with Specflow  Actually I'm running the test using spec runner, and I'm doing parallel execution,  If i run tests on 3 threads, Initial 3 or 4 tests running fine on 3 threads,  after that my tests hanged like anything, finally I'm getting below error message, Cannot start the driver service on localhost :(  please help me how to fix this, I saw many ppl are facing on firefox but I'm facing with Chrome.  **Error Logs:**  [ERROR] Test my Test Name, 1: **Cannot start the driver service on    http://localhost:6**29/**   OpenQA.Selenium.WebDriverException: Cannot start the driver service on http://localhost:62**29/      at OpenQA.Selenium.DriverService.Start()      at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)      at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)      at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)      at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilitie   s)      at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)     Thanks! Elango","closed","C-dotnet,","Elangopalakrishnan","2018-07-17T15:03:10Z","2019-08-14T06:09:40Z"
"","6427","Clean up remote connection to better use urllib3.","* Poolmanager should not be created on every call, move to a class variable for keep-alive and not keep-alive. * Remove some extra code that attempts to check for attributes to keep backwards compatability;   HTTPResponse from urllib.response does that work no need to duplicate. * add a close method to clean up the connection pool. Refactored a large   portion of code into its own method to clean up init function  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/6427)","closed","C-py,","kamaroyl","2018-09-19T13:42:30Z","2021-01-25T15:28:51Z"
"","6586","tried it with 3.14 too, same result. Please re-open the issue . Thanks","> Version 3.4.0 is out of date, please upgrade, latest version is 3.14 at the moment.  _Originally posted by @NiksVij in https://github.com/SeleniumHQ/selenium/issues/6585#issuecomment-433479974_","closed","","NiksVij","2018-10-26T17:20:09Z","2019-08-15T07:09:41Z"
"","6458","Unable to modify download directory or some setting after create a widow","#This issue comes up with all plantform as long as u using selenium  Hi, I used this selenium for many years, there r some issue I would like to share and hope someone can come out and fix this important issue. for example, we are testing a webpage using PHP with facebook/webdriver Before we create a window, we can put some setting inside the DesiredCapabilities options, and then create a chrome window, or tab. Is it easy to set download directory, disable javascript and stuff like that before we create a chrome window. After that we will be not able to change that setting via chromedriver. However, we still can change those setting by open setting page on chrome and do it manually. The point for us to using chromedriver is lots of action operate on chrome can be done automatically like testing. In my case, there is a login page that requires javascript to show, and when it comes to another page, I want to disable the javascript to see what data actually did  server sent to the browser(raw Http response data), so we can find out bug and fix it, but if the javascript is enabled, it will change the DOM content, and we cant see. Steps to reproduce (if relevant, you MUST provide a simplified HTML page or just make a simple javascript, when the window is loaded ready, change the content of the webpage, execute getPageSource(),  and you cannot see raw data sent from server anymore.  Plz allow us to change the DesiredCapabilities setting again after we create a chrome process.","closed","","WongYueKeung","2018-09-27T22:33:37Z","2019-08-15T09:09:53Z"
"","6350","Firefox don't save sessions, cookies and cache in profile","### System  - Platform: Windows 10, 64 bit - Firefox: 61.0.2 With Geckodriver-v0.21.0 - Selenium.Support version=3.14.0  - Selenium.WebDriver version= 3.14.0 - Language: C#   I am using firefox for an automation which I need to keep login always active, ie .. keep the session, cookies etc .. I'm setting a default user for selenium not to create temporary, but it seems like Firefox ignores and clears session, cookies, history, everything .. every time it is terminated .. In the chrome driver is working perfectly informing a default profile, but unfortunately I can not use the chrome.  I tried everything and researched a lot, but all solutions were flawed.  I tried to copy the generated files in the user temporary and play to the profile that I set as default  ``` > C:\Users\gabriels\AppData\Local\Temp  to C:\Users\gabriels\AppData\Local\Mozilla\Firefox\Profiles\1wdna3dp.Whats ``` I tried using FirefoxProfiles  ``` var profile = new FirefoxProfile(@""C:\Users\gabriels\AppData\Local\Mozilla\Firefox\Profiles\1wdna3dp.Whats"");  var firefoxOptions = new FirefoxOptions {    Profile = profile };  ``` I tried using SetPreference  `firefoxOptions.SetPreference(""-profile"", @""C:\Users\gabriels\AppData\Local\Mozilla\Firefox\Profiles\1wdna3dp.Whats"");`  Nothing seems to work, firefox always ignores my sessions and every time I run the driver, all logins, passwords, sessions are clean. I have no idea what to do more","closed","","gabernardone","2018-08-30T17:17:36Z","2019-08-15T13:09:57Z"
"","6343",".sendKeys() throws ENAMETOOLONG with long strings in Chrome v68 on OSX","### Meta OS: OSX 10.13.6  Selenium Version: 2.53.2  Browser: Chrome  Browser Version: v68.0.3 (64-bit)  ### Command  The text is generated randomly by chancejs  ``` element(by.css('.class-name')).clear().sendKeys(    'Faseazo athem hib neftikeb ri he bejzog siw lupruwwah tak ka fuzdujif. Pegizliw berik bit otif bunma vobezol te talgico liude ev ajupazos fewe vupfewif ezaniw rioghu ciszap hahomor memjudiz. Feog von aba buosif riji negal gembini mug gife giw kiho guwlegom za hasuj judtid aci.' ); ```  ### Expected Behavior The string is input into a textarea in Chrome v68 on OSX without any issues.  ### Actual Behavior sendKeys throws ENAMETOOLONG if the string is input all at once. It seems as if the textarea in the OSX Chrome webdriver is being treated like an input of type=text.  ### Steps to reproduce Using nodejs generate a large string (>300 chars) s and call .sendKeys(s) on a textarea or input  This testcase triggers the failure on my local machine and on BrowserStack.  Issue related by [#2164](https://github.com/SeleniumHQ/selenium/issues/2164)  ### Error description  ``` Error: ENAMETOOLONG: name too long, stat 'Faseazo athem hib neftikeb ri he bejzog siw lupruwwah tak ka fuzdujif. Pegizliw berik bit otif bunma vobezol te talgico liude ev ajupazos fewe vupfewif ezaniw rioghu ciszap hahomor memjudiz. Feog von aba buosif riji negal gembini mug gife giw kiho guwlegom za hasuj judtid aci.'     at Error (native) From: Task: WebElement.sendKeys()     at WebElement.sendKeys (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/webdriver.js:2185:43)     at actionFn (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:89:44)     at Array.map (native)     at actionResults.getWebElements.then (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:461:65)     at ManagedPromise.invokeCallback_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:1376:14)     at TaskQueue.execute_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:3084:14)     at TaskQueue.executeNext_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:3067:27)     at asyncRun (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:2927:27)     at /var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:668:7     at process._tickCallback (internal/process/next_tick.js:109:7)Error     at ElementArrayFinder.applyAction_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:459:27)     at ElementArrayFinder.(anonymous function) [as sendKeys] (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:91:29)     at ElementFinder.(anonymous function) [as sendKeys] (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:831:22)     at /var/lib/jenkins/workspace/surveyMaking/support/helpers/maker.js:866:66     at elementArrayFinder_.then (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:804:32)     at ManagedPromise.invokeCallback_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:1376:14)     at TaskQueue.execute_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:3084:14)     at TaskQueue.executeNext_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:3067:27)     at asyncRun (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:2927:27)     at /var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:668:7Error     at ElementArrayFinder.applyAction_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:459:27)     at ElementArrayFinder.(anonymous function) [as getAttribute] (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:91:29)     at ElementFinder.(anonymous function) [as getAttribute] (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:831:22)     at /var/lib/jenkins/workspace/surveyMaking/support/helpers/maker.js:868:5     at elementArrayFinder_.then (/var/lib/jenkins/workspace/surveyMaking/node_modules/protractor/built/element.js:804:32)     at ManagedPromise.invokeCallback_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:1376:14)     at TaskQueue.execute_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:3084:14)     at TaskQueue.executeNext_ (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:3067:27)     at asyncRun (/var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:2927:27)     at /var/lib/jenkins/workspace/surveyMaking/node_modules/selenium-webdriver/lib/promise.js:668:7 ```","closed","C-nodejs,","djom202","2018-08-28T16:06:26Z","2022-01-27T00:06:54Z"
"","6804","make IHasCapabilitiesDictionary as public interface","### IHasCapabilitiesDictionary interface is an internal interface. this cause a null reference exception when implementing ICapabilities interface  the following code (line 1108, RemoteWebDriver) `IHasCapabilitiesDictionary capabilitiesObject = legacyCapabilities as IHasCapabilitiesDictionary;`  tries to cast ICapabilities as IHasCapabilitiesDictionary which cannot be done because this interface is internal.  please, either make it public or enforce the capabilities dictionary under ICapabilities interface and remove the IHasCapabilitiesDictionary casting  note: this can be done by override `GetLegacyCapabilitiesDictionary` & `GetCapabilitiesDictionary`, but I still consider this as an issue","closed","","sroei","2019-01-01T19:28:01Z","2019-08-15T00:10:04Z"
"","6760","Extract XPath from element","## 🚀 Feature Proposal I propose to add a field `xpath` to elements: ```python element.xpath ```  ## Motivation I automatically generate xpaths for future extraction of elements by xpath.  ## Example In Python: ```python element = browser.find_element_by_name('p') print(f""xpath: {element.xpath}"" ```","closed","","rominf","2018-12-16T17:54:35Z","2019-08-15T01:09:56Z"
"","6746","Add WebDriver Capability APIs to support launching browsers in ""Responsive Design Mode""","## 🚀 Feature Proposal Firefox and Chrome now have ""responsive design"" mode, which allows them to emulate specific handheld devices such as the iPhone.  This is more than just using a specific screen size, as it involves touch and user agent emulation.  Basically, the browser closely emulates how it would run on the selected device.  ## Motivation  This would allow cross-platform testing using a single test harness.  Specifically, it would allow automation of tests that target mobile platforms.  I've not had much luck sending key sequences to attempt to toggle Responsive Design Mode, and even if it worked, I'd have no way of selecting the device, as Selenium can't manipulate the ""chrome"" widgets that determine the device - browser controls outside the HTML.  ## Example  Some pseudocode for using the new APIs might be:  DesiredCapabilities capabilities = DesiredCapabilities.firefox(); capability.setResponsiveDesignPlatform(Platform.IPhone); driver = new FirefoxDriver(capabilities);  Then, driver.get() would open the browser in responsive design mode.","closed","I-enhancement,","gwtuser","2018-12-11T17:42:48Z","2021-09-05T08:08:38Z"
"","6690","dotnet: Make DriverService more easily extensible","## 🚀 Feature Proposal  Making some minor accessibility modifier changes and adding property accessors to some private fields to make DriverService (and perhaps subclasses) more readily extensible.  I am happy to do the changes myself in-line with contributor guidelines, just want a green light in principle before I bother.  ## Motivation  Being able to run individual tests under different credentials (with for e.g. nUnit generic fixtures), with proper user impersonation not basic http auth means having to launch the browser process as that user, so it will handle NTLM etc.  I appreciate it's not Selenium's job to worry about platform and use-case specific things such as impersonation and NTLM auth, which is why the only change I propose is to make the classes more readily extensible so that people may easily make their own override for `DriverService.Start()`.  ## Example  Using a framework such as nUnit which allows decoration of tests with multiple attributes for differing scenarios, it would then be possible to have a suite of tests which run under different user accounts all from the same code base, with no extra config considerations for the CI environment.","closed","C-dotnet,","FuchsiaSoft","2018-11-26T14:58:46Z","2019-08-15T02:09:56Z"
"","6851","XML parsing Dependency migration","## 🚀 Feature Proposal  I would like to suggest to migrate to [fast-XML-parser](https://github.com/NaturalIntelligence/fast-xml-parser).  Benchmark  ![FXP vs xml2js](https://raw.githubusercontent.com/NaturalIntelligence/fast-xml-parser/master/static/img/fxpv3-vs-xml2jsv0419_chart.png)","closed","","amitguptagwl","2019-01-14T13:33:10Z","2019-08-15T00:09:35Z"
"","6789","Wiki Updates","## 🚀 Feature Proposal  I have made a bunch of minor edits to the wiki (formatting, and occasionally punctuation/grammar—not content).  Almost all the edits are to ensure that fenced code blocks all have syntax highlighting.  (It makes reading examples so much more pleasant!)  I also added inline backticks for things like the names of classes or methods.  I have published my edits in a cloned repository here:  https://github.com/Zearin/selenium-wiki  ## Motivation  Whenever I come across (or start using) a project, I like to help their documentation if I can.  I am kind of obsessive about the small stuff in documentation, because it almost always adds up to a not-so-small impact on the reader.  ## Example  View my repository: https://github.com/Zearin/selenium-wiki","closed","C-docs,","Zearin","2018-12-26T20:16:07Z","2019-08-14T23:09:42Z"
"","6674","JavaScript Client - command cancellation","## 🚀 Feature Proposal  Add an API to cancel command that is waiting for the response.  ## Motivation  There is sometimes a need to stop the running a series of commands in testing or when automating the browser. Currently I will have to wait for the current running command to finish before stop otherwise code waiting to process the command response would leak.  ## Example  - stop a workflow/test - cancel the command after a client side timeout","closed","I-stale,","oddui","2018-11-22T04:11:41Z","2021-12-04T00:06:31Z"
"","6729","Add ability to control the mouse wheel with ActionChains class","## 🚀 Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","ouam","2018-12-05T14:02:02Z","2019-08-15T03:09:50Z"
"","6693","can support QQBroswer?","## 🚀 Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","guohuanyang","2018-11-27T06:01:58Z","2019-08-15T04:09:51Z"
"","6807","dotnet - Adding a static getter to the 'By' class for extension methods.","## 🚀 Feature Proposal  **Note: Applies to dotnet only**  Add a static getter property of type `By` (or an empty class) on the `OpenQA.Selenium.By` class to allow third parties to write static extension methods targeting that property.  ## Motivation  When subclassing [`OpenQA.Selenium.By`](https://seleniumhq.github.io/selenium/docs/api/dotnet/html/T_OpenQA_Selenium_By.htm)(under remarks) it recommends using static methods for instantiation instead of constructors and it would be nice to have static getter property like `By.Custom` as a target for extension methods. `MyCustomByClass.MyCustomBy(...)` would become `By.Custom.MyCustomBy(...)`. This would (in my opinion) help keep things a bit more organized when subclassing By.  ## Example  Note: In these examples the property is named Custom since I can't think of a better name (maybe `By.From` or `By.With`?).  ### With a custom extension property.  `public class LoginComponent : ILoadableComponent` `{` `    ...` `    By remainLoggedInSelector = By.FromCssSelector(...);` `    By userNameInputSelector = By.FromCssSelector(...);` **`    By passwordInputSelector = By.Custom.MyCustomByA(...);`","closed","I-stale,","alexHayes08","2019-01-02T22:22:15Z","2021-12-04T00:06:31Z"
"","6733","selenium-server node run with -browser , get error: unknown error: DevToolsActivePort file doesn't exist.   Must install Xvfb","## 💬 selenium-server node run with -browser , get error: unknown error: DevToolsActivePort file doesn't exist.    After install Xvfb, it works ok. Why?  ### OS: Docker, CentOS 7 + jdk1.8 ### Chrome: 70 ### chrome-driver: 2.44 ### selenium: 3.141.59  #### Way1: By this way, it works ok: ``` java -jar selenium-server-standalone-3.141.59.jar -role node -hub http://127.0.0.1:5555/grid/register -maxSession 15 ``` ------------------ #### Way2: But if i add `-browser `, then it works fail : ``` java -jar selenium-server-standalone-3.141.59.jar -role node -hub http://127.0.0.1:5555/grid/register -maxSession 15 -browser browserName=chrome,maxInstances=10,platform=LINUX ``` get error: ``` org.openqa.selenium.WebDriverException:  unknown error: Chrome failed to start: exited abnormally   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=2.44.609551 (5d576e9a44fe4c5b6a07e568f1ebc753f1214634),platform=Linux 3.10.0-514.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 178 milliseconds  ```  After install `Xvfb`,  Way2 works ok.    Test Code: ```         DesiredCapabilities capability = DesiredCapabilities.chrome();         capability.setBrowserName(""chrome"");         capability.setPlatform(Platform.LINUX);          ChromeOptions chromeOptions = new ChromeOptions();         chromeOptions.addArguments(""--headless"", ""--no-sandbox"", ""--disable-gpu"", ""--window-size=1290,1080"",""--disable-dev-shm-usage"");         chromeOptions.addArguments(""--disable-extensions"");         capability.setCapability(""chromeOptions"", chromeOptions); ```","closed","","ljppttfn","2018-12-07T02:21:36Z","2019-08-15T03:09:47Z"
"","6832","I couldn't succeed './go //javascript/atoms:test:run'","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  I'm trying to build `selenium` project by following the README.md I succeeded `./go build`. but I couldn't succeed `./go //javascript/atoms:test:run` It has errors like that.  ``` python buckw kill python buckw build --stamp-build=detect --deep //javascript/atoms:test Starting new Buck daemon... [2019-01-10 15:05:45.131][error][command:null][tid:13][com.facebook.buck.io.watchman.WatchmanFactory] Watchman's stderr:  2019-01-10T15:05:45,131: [] while computing statefile: failed to create C:\Users\XXX_X~1\AppData\Local\Temp/???-state:  Invalid argument  [2019-01-10 15:05:45.131][error][command:null][tid:13][com.facebook.buck.io.watchman.WatchmanFactory] Error 1 executing get-sockname BUILD FAILED: The rule //javascript/atoms:test could not be found. Please check the spelling and whether it exists in D:\Workspace\selenium\javascript\atoms\BUCK. DOWNLOADED 0 ARTIFACTS, 0.00 BYTES, 0.0% CACHE MISS BUILDING: FINISHED IN 1.2s BUILD FAILED go aborted! python buckw build --stamp-build=detect --deep //javascript/atoms:test failed with exit code: 5 D:/Workspace/selenium/rake-tasks/buck.rb:52:in `block in buck_cmd' D:/Workspace/selenium/rake-tasks/buck.rb:36:in `buck_cmd' D:/Workspace/selenium/rake-tasks/buck.rb:227:in `block in (root)' ArgumentError: unknown encoding name - MS949 ``` What weird I think was `XXX_X~1`. That's not my username.  I don't know why they was going to try to make folder at the path.  it's windows10 64bit and I installed BUCK and Watchman.  Let me know where I should look in if there is someone who know what it is.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Jongkeun","2019-01-10T07:10:14Z","2019-08-15T00:09:41Z"
"","6708","view-source (""ctrl+u"" equivalent) not supported in python Selenium","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  I searched every where but I am not able to get page source from python Selenium Driver, I am talking about **view-source:https://githhub.com/** equivalent not the current DOM (inspect element).  driver.page_source gives only the current page source as viewed from the browser, but I want the page source as is sent by the server, unmodified by javascripts.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ketankr9","2018-11-30T11:59:24Z","2019-08-15T04:09:33Z"
"","6753","NoSuchSessionException","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","skAutomation12","2018-12-14T16:42:57Z","2019-08-15T02:09:44Z"
"","6707","page have cross domain iframe inside iframe i able to switch first iframe but unable to access its elements","## 💬 Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","pranaynagpure321","2018-11-30T09:36:18Z","2019-08-15T04:09:34Z"
"","6726","Linux chromedriver version:2.44 , chrome version:70,selenium-webdriver 3.141.59 gives DevToolsActivePort file doesn't exist error","## 💬 Questions and Help  ### OS: Docker, CentOS 7 + jdk1.8 ### Chrome: 70 ### chrome-driver: 2.44 ### selenium: 3.141.59  By this way, it works ok: ``` java -jar selenium-server-standalone-3.141.59.jar ``` ------------------ But selenium run with hub + node, in a same docker container, diff directory: ``` java -jar selenium-server-standalone-3.141.59.jar -role hub -port 5555 -timeout 30 -browserTimeout 60  java -jar selenium-server-standalone-3.141.59.jar -role node -hub http://127.0.0.1:5555/grid/register -maxSession 15 -browser browserName=chrome,version=70.0,maxInstances=10,platform=LINUX ```   code: ``` chromeOptions.addArguments(""--no-sandbox"",""--disable-dev-shm-usage"",""--headless"",""--disable-gpu"",""--disable-extensions""); ```  Question: why still get error: ``` org.openqa.selenium.WebDriverException:  unknown error: Chrome failed to start: exited abnormally   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)   (Driver info: chromedriver=2.44.609551 (5d576e9a44fe4c5b6a07e568f1ebc753f1214634),platform=Linux 3.10.0-514.el7.x86_64 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 178 milliseconds  ```","closed","","ljppttfn","2018-12-05T06:55:49Z","2019-08-15T03:09:55Z"
"","6820","sizzle.h generated location","## 💬 Questions and Help  ### i'd like to know the exact location of sizzle.h file.  - in Rakefile ``` : file ""cpp/iedriver/sizzle.h"" => [ ""//third_party/js/sizzle:sizzle:header"" ] do   cp ""build/third_party/js/sizzle/sizzle.h"", ""cpp/iedriver/sizzle.h"" end : ```  - sizzel.h in iedriver cpp project ``` selenium/cpp/iedriver/Generated/sizzle.h ``` The generated file location is ""selenium/cpp/iedriver/sizzle.h"". The cpp included file is ""selenium/cpp/iedriver/Generated/sizzle.h"". The generated file is not compiled.  What is right?","closed","","otkeri","2019-01-07T07:16:57Z","2019-08-15T00:09:53Z"
"","6850","selenium jar","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","roshan000","2019-01-14T11:36:34Z","2019-08-15T00:09:36Z"
"","6788","loggingPrefs","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","zokei-oba","2018-12-26T11:03:15Z","2019-08-15T01:09:42Z"
"","6758","no more message","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","CA-Y","2018-12-15T23:03:31Z","2019-08-15T02:09:48Z"
"","6745","Advanced User Interactions API","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","aprots991","2018-12-11T14:07:01Z","2019-08-15T02:09:58Z"
"","6744","webdriver.chrome.driver","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","luis-wang","2018-12-11T13:52:49Z","2019-08-15T02:09:57Z"
"","6739","setCookie","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","robbiewareham","2018-12-10T16:54:43Z","2019-08-15T02:10:02Z"
"","6720","language","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","haiwenli-tinklabs","2018-12-03T09:07:31Z","2019-08-15T03:09:58Z"
"","6712","send Keys","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","mrpaulqa","2018-12-01T23:23:26Z","2019-08-15T03:10:02Z"
"","6706","webdriver","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","51gordon","2018-11-30T06:45:04Z","2019-08-15T04:09:37Z"
"","6705","thread safe","## 💬 Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.herokuapp.com/) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","51gordon","2018-11-30T06:44:10Z","2019-08-15T04:09:36Z"
"","6806","When will the v 3.141.59 gem going to be published?","## 💬 Questions and Help","closed","","sundus-y","2019-01-02T20:33:45Z","2019-08-15T00:10:02Z"
"","6734","Hovering Not supported on IE11 browser with Selenium 3.141.59","## 💬 Hovering Not supported on IE11 browser with Selenium 3.141.59   Hover Function not working in selenium web driver for IE 11 browser.  Tried the possible ways to overcome this scenarios like JavaScript, actions and few IE setting configuration. Since our code will execute over Jenkins we didn't try with Robot class.  Kindly help us, if you have idea to perform Hover on IE11 browser with selenium web driver","closed","","Raamkumarayaveeran","2018-12-07T12:18:01Z","2019-08-15T03:09:46Z"
"","6769","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: refox/browser/features/e10srollout@mozilla.org.xpi","## 💬 Empty firefox browser is launching but url is not getting entered  Here is the code public class Demo1 {  	public static void main(String[] args) 	{ 		System.setProperty(""webdriver.gecko.driver"", ""/home/blubirch/workspace/Alpha/software/geckodriver""); 		WebDriver driver=new FirefoxDriver(); 		driver.get(""https://www.flipkart.com"");  	} }  os ubuntu 16.04 firefox version 51.0.1 selenium 3.141.59, 3.14.0, 2.53.1  please help with the issue","closed","","rohithkr18","2018-12-19T06:37:40Z","2019-08-15T02:09:37Z"
"","6771","PhantomJS cannot register as a node in 3.141","## 💥 Regression Report  We're hitting this issue with PhantomJS 1.9.8, but the latest GhostDriver w/ PhantomJS2 may have the same issue connecting since it uses the `wd` role as well: https://github.com/detro/ghostdriver/blob/7cf96db846e336a1a6dd9da891399902985dd57e/src/hub_register.js#L71  I know PhantomJS (especially the version we use: `1.9.8`) is old an unsupported but it worked great up to 3.14.0. We rely on PhantomJS to regression test our libraries against old browsers that don't have modern web APIs.  Would it be possible to relax the checks added in https://github.com/SeleniumHQ/selenium/commit/6ec1d7659df8f1835d68168df3a182cddc9d8329 to allow the connection from PhantomJS using the `wd` role name?  ``` org.openqa.grid.common.exception.GridConfigurationException: Error with the JSON of the config : Unable to load node configuration from org.openqa.selenium.json.JsonInput@56bab22f because it contains configuration for 'wd' role 	at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:386) 	at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:357) 	at org.openqa.grid.web.servlet.RegistrationServlet.mapV2Configuration(RegistrationServlet.java:135) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:94) 	at org.openqa.grid.web.servlet.RegistrationServlet.doPost(RegistrationServlet.java:70) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:748) Caused by:  java.lang.RuntimeException: Unable to load node configuration from org.openqa.selenium.json.JsonInput@56bab22f because it contains configuration for 'wd' role 	at org.openqa.grid.internal.utils.configuration.json.NodeJsonConfiguration.loadFromJson(NodeJsonConfiguration.java:41) 	at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:362) 	at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:357) 	at org.openqa.grid.web.servlet.RegistrationServlet.mapV2Configuration(RegistrationServlet.java:135) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:94) 	at org.openqa.grid.web.servlet.RegistrationServlet.doPost(RegistrationServlet.java:70) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:865) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:146) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1242) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:144) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:503) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:364) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:260) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:103) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) 	at org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) 	at java.lang.Thread.run(Thread.java:748) ```  ## Last working Selenium version  Worked up to version: 3.14.0  Stopped working in version: 3.141.0  ## To Reproduce  Create a docker container for PhantomJS: * download https://raw.githubusercontent.com/querymetrics/docker-phantomjs/master/Dockerfile * `docker build --build-arg PHANTOM_JS_VERSION=1.9.8-linux-x86_64 -t phantomjs198_image .` * `docker run -it -p 8910:8910 -p 9000:9000 phantomjs198_image /usr/local/bin/phantomjs --webdriver=127.0.0.1:8910 --webdriver-selenium-grid-hub=http://[IP OF YOUR SELENIUM HUB]:4444`  PhantomJS will fail to connect.  ## Expected behavior  Expect PhantomJS to be able to register as a node.   ## Environment  OS: OSX Browser: PhantomJS Browser version: 1.9.8 Browser Driver version: GhostDriver  Selenium Grid version (if applicable): 3.141.0","closed","C-grid,","querymetrics","2018-12-19T16:07:42Z","2020-05-20T22:57:32Z"
"","6786","OkHttpClient.Factory() lacks constructor with socketTimeout and readTimeout","## 💥 Regression Report  OkHttpClient.Factory() lacks constructor with socketTimeout and readTimeout This constructor was removed here: https://github.com/SeleniumHQ/selenium/commit/04f6621  The reason to reduce timeouts is the following: we have selenium hub and nodes running in the cloud. Google has preemption. This means machines can be taken down for some time and we don't know whether it'll happen or not. In case connection was established and then node was lost, we’ll wait 3 hours for the timeout to happen. 3 hours is the default read timeout for HttpCommandExecutor  This issue was discussed here (and later the same day): https://seleniumhq.slack.com/archives/C0ABCS03F/p1545424892040600   ## Last working Selenium version  Worked up to version: This functionality was available in 3.14 but was removed later.   Stopped working in version: 3.141.x  ## To Reproduce  Try to set up `OkHttpClient.Factory` with socketTimeout and readTimeout. Right now it's impossible. ``` OkHttpClient.Factory clientFactory = new OkHttpClient.Factory(Duration.ofMillis(connectionTimeout), Duration.ofMillis(socketTimeout)); HttpCommandExecutor executor = new HttpCommandExecutor(new HashMap(), hubUrl, clientFactory); webDriver = new RemoteWebDriver(executor, option); ```   Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  any Browser: any Browser version: any Browser Driver version: any Language Bindings version:  3.141.59 Selenium Grid version (if applicable):  3.141.59","closed","C-java,","KroArtem","2018-12-24T23:10:30Z","2021-09-05T08:27:34Z"
"","6676","[JavaScript] Loading extensions from file in Chrome doesn't work in 4.0.0-alpha.1","## 💥 Regression Report  Loading a Chrome extension in 4.0.0-alpha.1 doesn't work, it throws ```unknown error: cannot process extension #1 from unknown error: cannot base64 decode```    ## Last working Selenium version  Worked up to version: 3.6.0  Stopped working in version: 4.0.0-alpha.1  ## To Reproduce Loading an extension like:  ```  chromeOptions.addExtensions(       path.resolve(moduleRootPath, 'vendor', 'browsertime-extension.crx')    ); ``` doesn't work.  See https://github.com/sitespeedio/browsertime/blob/master/lib/chrome/webdriver/index.js#L100-L105  Detailed steps to reproduce the behavior:  ## Expected behavior  You should be able to load extensions from file in Chrome.  ## Test script reproducing this issue (when applicable)  I think this was introduced here: https://github.com/SeleniumHQ/selenium/commit/9976795d0357aa19f95d6c73c9f203449e182fbf#diff-cc4a7b2914982158b85fcd2ff2a60ea2  I can have a go to see if I can fix it the coming days, if I get the environment working.  ## Environment  OS: OS X Browser: Chrome Browser version:  70.0.3538.10 Browser Driver version:  ChromeDriver 2.43 Language Bindings version: JavaScript 4.0.0-alpha.1 Selenium Grid version (if applicable):","closed","C-nodejs,","soulgalore","2018-11-22T10:46:45Z","2021-12-25T00:06:57Z"
"","6727","java.lang.ClassCastException occuring in 3.14, 3.141.5, 3.141.59 but working fine till 3.13.0","## 💥 Regression Report  ## Failure Error  Running TestSuite Testing in Browserie Started InternetExplorerDriver server (32-bit) 3.141.0.0 Listening on port 27497 Only local connections are allowed Dec 05, 2018 1:53:07 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 46.995 sec","closed","","arunvincy","2018-12-05T10:11:54Z","2019-08-15T03:09:53Z"
"","6808","ServicedSession cause OutofMemory","## 🐛 Bug Report Use selenium standalone server to create remote webdriver, open and close website, close the webdriver continuously. After about 6 days, the standalone server  OutOfMemory and coredump.  There are about 520000 ServicedSession object referenced by JMXBean, that caused the OOM. ![oom](https://user-images.githubusercontent.com/4019176/50631642-0f64b700-0f80-11e9-8885-70e05e2fc934.png)  I created webdriver with following java code. ``` RemoteWebDriver driver = null; 	    URL seleniumHub = new URL(""http://"" + hub + "":4444/wd/hub""); 	    tlog.logp(Level.INFO, CLASS, METHOD, ""Hub URL: "" + hub); 	     	    while(driver == null) { 	        count++; 	        try { 	            driver = new RemoteWebDriver(seleniumHub, capabilities); 	        } catch(Exception ex) { 	           	                throw ex; 	         } 	    } ```  From the sourcecode of org.openqa.selenium.grid.session.remote.ServicedSession , I can see that it's registered in to JMX server in the constructor.  ```  public ServicedSession(       DriverService service,       Dialect downstream,       Dialect upstream,       SessionCodec codec,       SessionId id,       Map capabilities) {     super(downstream, upstream, codec, id, capabilities);      this.service = service;      new JMXHelper().register(this); } ```  But it's not unregistered in the stop function. ``` public void stop() {     // Try and kill the running session. Both W3C and OSS use the same quit endpoint     try {       HttpRequest request = new HttpRequest(HttpMethod.DELETE, ""/session/"" + getId());       HttpResponse ignored = new HttpResponse();       execute(request, ignored);     } catch (IOException e) {       // This is fine.     }      service.stop(); } ```  ## Environment  OS: Ubuntu 16.0.4 Browser:  Firefox  Browser version: 60.4.0ESR Browser Driver version: GeckoDriver 0.23  Language Bindings version: Java 3.141.59 Selenium Grid version (if applicable): 3.141.59 standalone server","closed","R-awaiting answer,","xiaospider","2019-01-03T09:57:44Z","2019-08-15T00:09:58Z"
"","6871","Change event not firing on inputs during playback","## 🐛 Bug Report Selenium IDE tests which type into input fields do not fire the change event during playback in the IDE.  In the case of the ""type"" command it will trigger a change event for the initial clear but will not trigger the change event after finishing the typing.  In the case of ""send keys"" no change event is triggered at all.  If the same test is run using webdriver using the side-runner these fire as expected.  ## To Reproduce Type into any input field that has only a change event listener attached to it and then shift focus to another field.   ## Expected behavior When the focus shifts from one element to another the change event handler should fire.  In the example side file this is expected to show the value of the input to the right in a span.  ## Project file reproducing this issue (highly encouraged) [Selenium OnChange.zip](https://github.com/SeleniumHQ/selenium-ide/files/2751621/Selenium.OnChange.zip)  ## Environment  OS: Windows 10 Selenium IDE Version:  3.4.4  Browser: Firefox Browser Version: 64.0","closed","D-atoms,","mcclellanmj","2019-01-12T02:33:55Z","2019-08-14T22:09:56Z"
"","6845","I can't get page source.","## 🐛 Bug Report My code is:  import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions;  public class Test {      public static void main(String[] args) {         System.setProperty(""webdriver.chrome.driver"", ""D:\\ChromeDriver\\chromedriver.exe"");         ChromeOptions options = new ChromeOptions();         options.addArguments(""--headless"");         ChromeDriver driver = new ChromeDriver(options);         driver.get(""http://ccc.spdb.com.cn/news/qgxhd/"");         try {             Thread.sleep(1000);         } catch (InterruptedException e) {             e.printStackTrace();         }         System.out.println(driver.getPageSource());         driver.quit();     }  }  ## To Reproduce The result is : Starting ChromeDriver 2.45.615291 (ec3682e3c9061c10f26ea9e5cdcf3c53f3f74387) on port 6315 Only local connections are allowed. 一月 12, 2019 3:40:02 下午 org.openqa.selenium.remote.ProtocolHandshake createSession 信息: Detected dialect: OSS ``  ## Expected behavior The page source of ""http://ccc.spdb.com.cn/news/qgxhd/"".   ## Environment  OS: Windows 7 Browser: Chrome Browser version: 71.0.3578.98 Browser Driver version: ChromeDriver 2.45 Language Bindings version: Java 3.14.0  Selenium Grid version (if applicable):","closed","","fengbin8606","2019-01-12T08:10:43Z","2019-08-14T23:09:47Z"
"","6835","firefox.Options. setPreference() not a function","## 🐛 Bug Report Hi, I've been referencing  [this](https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/firefox.html) docs, wich seams incorrect.  I've been trying to set the firefox driver path, but when testing  i've come across this:  It says in the [`firefox.Options`](https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/firefox_exports_Options.html) docs that a method called  `.setPreference(key, value)` exists but when called it says it is not defined.   Are they intended to exist? Or is that docs outdated?  If so where could I find info in how to set the driver path?  _PD: I can attach more info if needed!_  ## Environment OS:  Windows 8 Browser: Firefox Browser version: 63.0.1 (32-bit) Browser Driver version: 0.23.0  EDIT: I'm using version: `3.6.0` of selenium-webdriver","closed","C-nodejs,","nombrekeff","2019-01-10T14:36:56Z","2019-08-14T23:09:37Z"
"","6784","Custom log is broken","## 🐛 Bug Report Custom format of log is not supported, according to the following code it accepts only array format log. https://github.com/SeleniumHQ/selenium/blob/b62378814139566f6fcc4814d1243dd8b845eda0/javascript/node/selenium-webdriver/lib/webdriver.js#L1587   ## To Reproduce Try log `object` in custom chromedriver binary and try to read it using `webdriver.manage().logs()` command. It will fail because it's not an array.  ## Expected behavior It should accept all formats.  ## Environment  OS: OS X 10.10 Browser: Chrome Browser version: 70.0","closed","","farhan-sauce","2018-12-24T17:19:11Z","2019-08-15T00:10:03Z"
"","6791","Unable to run Safari Technology Preview with Selenium standalone server","## 🐛 Bug Report According to this commit (6e09f51a5ff1debfe67e7fb1c5cbd21426c1c143) you should be able to switch between Safari and Safari Technology Preview by using the respective browser name ([""Safari Technology Preview""](https://github.com/SeleniumHQ/selenium/blob/b62378814139566f6fcc4814d1243dd8b845eda0/java/client/src/org/openqa/selenium/safari/SafariOptions.java#L52)). https://github.com/SeleniumHQ/selenium/blob/b62378814139566f6fcc4814d1243dd8b845eda0/java/client/src/org/openqa/selenium/safari/SafariOptions.java#L195  It seems whatever you specify as capabilities is discarded and reset upon creation of new `SafariOptions` instance: https://github.com/SeleniumHQ/selenium/blob/b62378814139566f6fcc4814d1243dd8b845eda0/java/client/src/org/openqa/selenium/safari/SafariOptions.java#L72-L75  Simply put, it does not respect the specified `browserName` value.  ## To Reproduce  1. Enable safaridriver ``` /usr/bin/safaridriver --enable ``` 2. Start Selenium standalone server ``` selenium-standalone start ``` 3. Initiate new session with ""Safari Technology Preview"" ``` curl -d '{ ""capabilities"": { ""alwaysMatch"": { ""browserName"": ""Safari Technology Preview"" }, ""firstMatch"": [ {} ] }, ""desiredCapabilities"": { ""browserName"": ""Safari Technology Preview"" } }' http://localhost:4444/wd/hub/session ```  ### Logs ``` org.openqa.selenium.SessionNotCreatedException: Unable to create session from {   ""desiredCapabilities"": {     ""browserName"": ""Safari Technology Preview""   },   ""capabilities"": {     ""firstMatch"": [       {         ""browserName"": ""Safari Technology Preview""       }     ]   } } Build info: version: '3.141.0', revision: '2ecb7d9a', time: '2018-10-31T20:22:52' System info: host: 'MBP', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_131' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$4(NewSessionPipeline.java:76)     at java.util.Optional.orElseThrow(Optional.java:290)     at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$5(NewSessionPipeline.java:75)     at java.util.Optional.orElseGet(Optional.java:267)     at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:73)     at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65)     at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:235)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:748) ```  ## Expected behavior Upon specifying ""Safari Technology Preview"" as `browserName` when running Selenium standalone server, it should utilize the corresponding **safaridriver** [executable](https://github.com/SeleniumHQ/selenium/blob/b62378814139566f6fcc4814d1243dd8b845eda0/java/client/src/org/openqa/selenium/safari/SafariDriverService.java#L54-L55) located within the Technology Preview application.  ## Environment OS: macOS High Sierra 10.13.6 Browser: Safari Browser version: Technology Preview release 72 (12.1, 13607.1.17.1) Browser Driver version:  Language Bindings version: Standalone server 3.141.59  ## Additional context As alternative there is the **deprecated** [`safari.options.technologyPreview`](https://github.com/SeleniumHQ/selenium/blob/b62378814139566f6fcc4814d1243dd8b845eda0/java/client/src/org/openqa/selenium/safari/SafariOptions.java#L62-L63) (desired) capability which *does* work, however does not comply with [W3C standard for capabilities](https://www.w3.org/TR/webdriver/#capabilities), unlike the previously removed vendor-prefixed [`se:safari:techPreview`](https://github.com/SeleniumHQ/selenium/commit/6e09f51a5ff1debfe67e7fb1c5cbd21426c1c143#diff-f930e22d8cf73d03d0a773484d738c1fL68) capability.  This imposes a problem when using an implementation to communicate with Selenium, which has strict compliance with W3C standard (e.g. webdriverio) and/or does not allow you to specify `desiredCapabilities` different than `capabilities`.","closed","C-grid,","cuki","2018-12-27T16:32:16Z","2021-10-28T00:05:59Z"
"","6834","webdriver request is pending and other actions can't be performed","## 🐛 Bug Report A site contains popup that is written in JS, that appears after clicking on a specific button element. After clicking that button, the popup will appear and disables clicking on any other element in the page behind it (it is possible to click on the popup), also it holds the request of the click until user interacts with the popup.  While using geckodriver, after clicking on the element that triggers the popup, i can interact with the popup (e.g. send another click function). While in other drivers (i.e chromedriver) the 1st click request is pending and won't finish until the popup times out or until i manually click on it.   ## Expected behavior  chromedriver should not wait for the request to end and continue to the next action (same as geckodriver)  ## Test script or set of commands reproducing this issue  Python: driver.find_element_by_id('my_button').click() # will cause the popup to appear driver.switch_to.frame('popup_frame') driver.find_element_by_id('continue_button').click()  The 1st click action won't be finished and stay pending  ## Environment  OS: MacOS / Win10 / Linux Browser: Chrome Browser version: Version 71.0.3578.98 Browser Driver version: chromedriverVersion 2.45.615355 Language Bindings version: Python 3.6 Selenium Grid version (if applicable): N/A","closed","","gs202","2019-01-10T13:49:20Z","2019-08-15T00:09:46Z"
"","6741","Chrome 71 [ClearText does not work for REACT input box]","## 🐛 Bug Report  While running test against a REACT webpage on Chrome 71 + Windows 10, 'clear text' command does not clear the input box contents.    ## To Reproduce    Detailed steps to reproduce the behavior:  [In Chrome 71 + Windows 10]   1. Open URL- [https://foxhound87.github.io/mobx-react-form-demo/dem](https://foxhound87.github.io/mobx-react-form-demo/dem) 2. Use 'Clear Text' command (POST /session//element//clear)  ## Expected behavior  The text should be cleared from the text box.  ## Test script or set of commands reproducing this issue  **You can use the following GIST to replicate the issue-** [https://gist.github.com/ckzgraphics/418cf54ed3a60f057fcc0834e9bef010](https://gist.github.com/ckzgraphics/418cf54ed3a60f057fcc0834e9bef010)  **BrowserStack Session [executed on REACT webpage][FAILED]-** [a21750b06f9ec90ccc35c62c7f83da534bb7b253](https://automate.browserstack.com/builds/dc03f2ef4188580b1aecf0ae6ec06dbded367de4/sessions/a21750b06f9ec90ccc35c62c7f83da534bb7b253?auth_token=29ff3749fe7566965c459d223a3743c4b840b97ffb394ed2a98a81282a274026)  **Selenium Logs (for the above session)-** [https://gist.github.com/ckzgraphics/1968040180812899dc771df69ff5f7eb](https://gist.github.com/ckzgraphics/1968040180812899dc771df69ff5f7eb)  **BrowserStack Session [executed on SIMPLE webpage][PASSED]-** [e3f6831f153a002d874a6fcc50ee37f8feeaadb2](https://automate.browserstack.com/builds/dc03f2ef4188580b1aecf0ae6ec06dbded367de4/sessions/e3f6831f153a002d874a6fcc50ee37f8feeaadb2?auth_token=fbd3805fe5163e2c54f009f96f8f2aa3dc1a80829b84eaaa12af3b2db2087e56)  **Selenium Logs (for the above session)-** [https://gist.github.com/ckzgraphics/1589742d8ca96836018237e1057548e9](https://gist.github.com/ckzgraphics/1589742d8ca96836018237e1057548e9)  ## Environment  **OS:** Windows 10 **Browser:** Chrome **Browser version:** 71 **Browser Driver version:** 2.44  **Language Bindings version:** java version ""1.8.0_161"" Java(TM) SE Runtime Environment (build 1.8.0_161-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)  **Selenium Grid version (if applicable):** 3.14.0","closed","","ckzgraphics","2018-12-11T05:17:12Z","2019-08-14T10:09:52Z"
"","6828","IE driver returns error in the Allow header","## 🐛 Bug Report  When the IE Webdriver encounters a 405 error it puts the error in the `Allow` header of the response.   ## To Reproduce  Any command that will result in a 405 method not found error. I did this by running an IE Webdriver and directly sending requests to it.  For example: POST /session/1fa97acb-bd6e-4886-8719-6d02b2a2ee9e/execute  ## Expected behavior  The error should be in the body of the response, not the Allow header  ## Environment  OS: Windows Browser: IE Browser version: 11 Browser Driver version: 4.14 Language Bindings version: webdriver.io 4.14.1 Selenium Grid version (if applicable): None","closed","","estk","2019-01-10T00:08:44Z","2019-08-15T00:09:45Z"
"","6799","BinaryLocation property not used to find binary on chrome options","## 🐛 Bug Report  When the binary location is set to either the directory of the chromedriver.exe or the path to the chromedriver.exe the exception for driver not found is raised.  ## Reproduce  Have the chromedrive.exe in a path where it is not found by the deafaut settings Construct the ChromeDriver with ChromeOptions where the property BinaryLocation is set to the path or directory of the exe The error is thrown  Detailed steps to reproduce the behavior:  ## Expected behavior  The property BinaryLocation is used to find the exe  ## Environment  OS: Windows 10 Browser: Chrome Language Bindings version: Dotnet","closed","","LeGaryGary","2018-12-31T13:01:51Z","2019-08-15T01:09:35Z"
"","6686","InsecureRequestWarning: Unverified HTTPS request is being made","## 🐛 Bug Report  When I use py binding to open the browser with remote_url='https://' the following warning is always displayed when making a request.  `/usr/lib/python2.7/site-packages/urllib3/connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings`  It requires certificates to verify. The recommendation how to handle this is described at https://urllib3.readthedocs.io/en/latest/user-guide.html#ssl  ``` http = urllib3.PoolManager( ...     cert_reqs='CERT_REQUIRED', ...     ca_certs=certifi.where()) ```  However there is no way to manager this, no way to pass parameters, etc, please have a look at   https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/remote_connection.py#L401  ## To Reproduce  The same issue is described at https://stackoverflow.com/questions/51995537/remote-selenium-grid-over-https-is-not-working  ## Expected behavior  SSL connection is expected to be be verified without warnings.  ## Environment  OS: Linux / Win Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: py 3.141.0 Selenium Grid version (if applicable): 3.141.59","closed","","xeagle2","2018-11-25T21:39:36Z","2019-08-14T11:10:03Z"
"","6678","Closing a new windows and switching back causes NoSuchWindowException","## 🐛 Bug Report  When I switch to a newly opened window and close it I cannot switch back to the main window (which still is displayed).  ## To Reproduce  1. Trigger an action which opens a new window, which is the second window. 2. Switch to it and close it with Selenium API. 3. Try to switch back the the previous window.  This will generate a NoSuchWindowException although the window still exists on the desktop.  ## Expected behavior  I want to be able to switch back to the original window in such a case.  The described behavior looks like a bug to me.  ## Test script or set of commands reproducing this issue  // some action which triggers that the new window opens getDriver().switchTo().window(handleOfNewlyOpenedSecondWindow).close(); getDriver().switchTo().window(handleOfFirstWindowWhichIsStillDisplayed);  ## Environment  OS: Windows 7 Browser: Chrome Browser version: 70.0.3538.110 Browser Driver version: ChromeDriver 2.44 Language Bindings version: Java Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","tictac-freshmint","2018-11-23T09:47:21Z","2019-08-14T23:09:39Z"
"","6691","RegistrationRequest's fromJson ignores customized GridNodeConfiguration","## 🐛 Bug Report  When converting a test object to/from JSON the GridNodeConfiguration (which is exported as ""configuration"") fails to be read back in and added to the re-built node.   ## To Reproduce  Simply export a customized RegistrationRequest (e.g. using a custom proxy class) as JSON and use RegistrationRequest.fromJson(Map raw) to attempt to deserialize a GridNodeConfiguration that has been customized - it will not be present in the new RegistrationRequest.  ## Fix  Two possible options based on an instanceof check: 1) If ""configuration"" is an instanceof GridNodeConfiguration, cast and pass it to the constructor of RegistrationRequest. 2) Assign request.configuration the value (cast to GridNodeConfiguration).  ## Environment  OS: N/A Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: Java 3.141.59 Selenium Grid version (if applicable): N/A","closed","C-java,","matthewdoerksen","2018-11-26T18:51:32Z","2019-08-15T02:09:46Z"
"","6840","Selenium IDE (Chrome 3.4.4) store text fails if there is no value","## 🐛 Bug Report  Using Store Text command in selenium IDE (Chrome v3.4.4), if there is a value it correctly stores the value, if there is no value then it fails to find the element.  ## To Reproduce  I'm trying to store the phone number of a customer (its not guaranteed to be there). Html is like  If there is no text:     Tel No              Command: store text target: xpath=//tr[td='Tel No']/td[2]/span value: custTel This fails with the error: Failed: Implicit Wait timed out after 30000ms  I would expect this to succeed and store an empty string.  As if there is text:     Tel No        07770 123456      Command: store text target: xpath=//tr[td='Tel No']/td[2]/span value: custTel This stores the value correctly.  I logged this on stack overflow and someone has confirmed this is a chrome bug as it works in kantu.  https://stackoverflow.com/questions/54132443/selenium-ide-store-text-fails-if-there-is-no-value  OS: Windows 10 Browser: Chrome Version 69.0.3497.100 Selenium Chrome 3.4.4","closed","","Andy802","2019-01-11T17:14:22Z","2019-08-14T23:09:46Z"
"","6826","Certain exceptions cause WebDriver to become unresponsive","## 🐛 Bug Report  Under certain circumstances when an Exception is thrown within Python in seemingly unrelated code, the Firefox/WebDriver instance becomes unresponsive & it is not possible to close open Firefox instances.  When called, `driver.quit()` returns `None`, but does not close the active Firefox instance. Additionally, `driver.close()` also doesn't close the browser instance & instead produces the following error: ``` urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='127.0.0.1', port=61067): Max retries exceeded with url: /session/5385f593-7782-4073-996e-b226f0e9dc4e/window (Caused by NewConnectionError(': Failed to establish a new connection: [WinError 10061] No connection could be made because the target machine actively refused it',)) ```  If in the ""Test Script"" below, I enter either a valid or invalid URI, then the browser closes as expected. In the event of an invalid URI, selenium throws a `selenium.common.exceptions.InvalidArgumentException`, but this is caught & terminates normally. Similarly, if I replace the `input` statement with, `raise KeyboardInterrupt()` or `raise EOFError()` then the browser is also closed as expected.  Using `pdb`, the expected path of execution seems to be followed. I posted this on SO yesterday to see if I was just expecting / doing something incorrectly, but the post didn't get any bites: https://stackoverflow.com/questions/54069341/exception-prevents-webdriver-from-responding-properly  ## To Reproduce  Run the ""Test Script"" below; this example seems to be reflective of the issue I'm running into.  When prompted for input, rather the entering a string, press `Ctrl+C` to send the `SIGINT`. During the `input` statement on my machine, this raises an `EOFError()`.  ## Expected behavior  Execution should be halted when the `EOFError` is raised & flow resumes at the `except` statement. It will then `pass`, and continues in the `finally` statement & the browser instance is closed by either `driver.close()` or `driver.quit()`.  ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver import pdb  try: 	#pdb.set_trace() 	driver = webdriver.Firefox(executable_path='./bin/geckodriver.exe') 	variable = input(""Enter something or Ctrl+C: "") 	driver.get(variable) except Exception as e: 	pass finally: 	driver.close() 	driver.quit() ```  Within my real code environment, I've wrapped my script in a similar `try except finally` statement, and similarly, after certain exceptions are thrown in seemingly unrelated statements the `driver` object stops responding as expected. This seemed to be the minimum amount of code which produced the same error.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 64.0 Browser Driver version: GeckoDriver v0.23.0 Language Bindings version: Python 3.6.4 Selenium Version: 3.141.0","closed","C-py,","Thenakedgun","2019-01-08T08:26:08Z","2019-08-14T15:09:59Z"
"","6783","WebElement.location throwing error Safari","## 🐛 Bug Report  Trying to compare elements.location['y'] in Safari throws error. If you need more information, please let me know.    ## To Reproduce   Python 3.7, Django 2.1  ``` from django.contrib.staticfiles.testing import StaticLiveServerTestCase from django.test import TestCase from selenium import webdriver from selenium.common.exceptions import WebDriverException from selenium.webdriver.remote.webelement import WebElement   class FunctionalTestTest(StaticLiveServerTestCase):          def setUp(self):         self.browser = webdriver.Safari()               def tearDown(self):         self.browser.quit()               def test_test_app(self):         self.browser.get(self.live_server_url + '/_test')                  hello_div = self.browser.find_element_by_id(             'hello_div'         )                  goodbye_div = self.browser.find_element_by_id(             'goodbye_div'         )                  self.assertLess(             hello_div.location['y'],             goodbye_div.location['y']         ) ``` ``` from django.shortcuts import render   def test_page(request):     return render(request, '_test_app/test_page.html') ```  ```         Hello!     Goodbye!     ```   Detailed steps to reproduce the behavior:  ## Expected behavior  I am trying to compare locations of WebElements. I have used Firefox until it stopped working recently. Switched to Safari, now I get this issue. Also, the Safari browser does not quit after the test ends. The window closes, but the app remains open.  ## Test script or set of commands reproducing this issue  python3 manage.py test _test_app.tests  ``` Creating test database for alias 'default'... System check identified no issues (0 silenced). E ====================================================================== ERROR: test_test_app (_test_app.tests.FunctionalTestTest) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""/Users/------/Software/------/_test_app/tests.py"", line 30, in test_test_app     hello_div.location['y'],   File ""/Users/------/Software/------/------_venv/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py"", line 536, in location     ""y"": round(old_loc['y'])} KeyError: 'y'  ---------------------------------------------------------------------- Ran 1 test in 9.700s  FAILED (errors=1) Destroying test database for alias 'default'... ```  ## Environment  OS:  macOS Mojave 10.14.2 Browser:  Safari Browser version:  Version 12.0.2 (14606.3.4) Browser Driver version:  Apple's Driver Language Bindings version:  Python 3.141.0 Selenium Grid version (if applicable):","closed","","Spleeding1","2018-12-22T17:49:55Z","2019-08-14T22:10:03Z"
"","6755","Chrome can be opened using IE instance or Firefox instance","## 🐛 Bug Report  This piece of code is opening chrome and accessing the web page though IE instance or Firefox instance is created, as the path is pointed to chromedriver.exe. There must be a checking whether the correct driver has opened. In other combinations/vice versa combinations  it is not occurring and the chrome is prohibited from occurring.   Detailed steps to reproduce the behavior: import java.io.File;  import org.openqa.selenium.By; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.ie.InternetExplorerDriver;  public class Main {  	public static void main(String[] args){ 		 		String path = System.getProperty(""user.dir"") 				+ File.separator 				+""drivers"" 				+File.separator 				+""chromedriver.exe""; 		 		System.setProperty(""webdriver.ie.driver"", path); 		InternetExplorerDriver driver = new InternetExplorerDriver(); 		 		//OR 		 		//System.setProperty(""webdriver.gecko.driver"", path);		 		//FirefoxDriver driver = new FirefoxDriver();		 		 		driver.get(""https://www.google.com""); 		driver.findElement(By.name(""q"")).sendKeys(""google""); 		driver.quit();  	}  }  ## Expected behavior Chrome should not open. A clear and concise description of what you expected to happen. Should have thrown an error like other cases, "" org.openqa.selenium.SessionNotCreatedException: Unable to find a matching set of capabilities"" ## Test script or set of commands reproducing this issue import java.io.File;  import org.openqa.selenium.By; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.ie.InternetExplorerDriver;  public class Main {  	public static void main(String[] args){ 		 		String path = System.getProperty(""user.dir"") 				+ File.separator 				+""drivers"" 				+File.separator 				+""chromedriver.exe""; 		 		System.setProperty(""webdriver.ie.driver"", path); 		InternetExplorerDriver driver = new InternetExplorerDriver(); 		 		//OR 		 		//System.setProperty(""webdriver.gecko.driver"", path);		 		//FirefoxDriver driver = new FirefoxDriver();		 		 		driver.get(""https://www.google.com""); 		driver.findElement(By.name(""q"")).sendKeys(""google""); 		driver.quit();  	}  } Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Webdriver version:","closed","","chirantan2012","2018-12-15T02:47:00Z","2019-08-14T23:09:44Z"
"","6683","RemoteWebDriver InvalidCastException with DriverOptions - C# Webdriver version 3.141.0","## 🐛 Bug Report  There appears to be an issue with initialising the RemoteWebDriver with DriverOptions in Selenium version 3.141.0  System.InvalidCastException: 'Unable to cast object of type 'System.String' to type 'System.Collections.Generic.Dictionary`2[System.String,System.Object]'.'  This is attempting to create a RemoteWebDriver session in Browserstack -( in the example, the credentials I have replaced with 'xxxxxx' but the code still displays the error.)   ## To Reproduce  The code below reproduces the error exactly at the line: ```  driver = new RemoteWebDriver(new Uri(""http://hub.browserstack.com/wd/hub/""), chromeOptions); ```  The stack trace shows: ```  at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)\r\n   at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, DriverOptions options) ``` ``` class Program {     static void Main(string[] args)     {         IWebDriver driver;         var chromeOptions = new ChromeOptions();         chromeOptions.AddAdditionalCapability(""browserstack.user"", ""xxxxxxxxxxxxxx"");         chromeOptions.AddAdditionalCapability(""browserstack.key"", ""xxxxxxxxxxxxxx"");         chromeOptions.AddAdditionalCapability(""browser"", ""Chrome"");         chromeOptions.AddAdditionalCapability(""browser_version"", ""62.0"");         chromeOptions.AddAdditionalCapability(""os"", ""Windows"");         chromeOptions.AddAdditionalCapability(""os_version"", ""10"");         chromeOptions.AddAdditionalCapability(""resolution"", ""1024x768"");         driver = new RemoteWebDriver(new Uri(""http://hub.browserstack.com/wd/hub/""), chromeOptions);          driver = new RemoteWebDriver(           new Uri(""http://hub-cloud.browserstack.com/wd/hub/""), chromeOptions         );         driver.Navigate().GoToUrl(""http://www.google.com"");         Console.WriteLine(driver.Title);          IWebElement query = driver.FindElement(By.Name(""q""));         query.SendKeys(""Browserstack"");         query.Submit();         Console.WriteLine(driver.Title);          driver.Quit();     } } ```  I attempted to roll back to bindings version 3.9 and also replaced ChromeOptions with the obsolete DesiredCapabilities and the error no longer displayed.  Attempting to use DesiredCapabilities on version 3.141.0 produced the same error as before, only by rolling back, and also using DesiredCapabilities did this seem to work  i.e with Selenium Webdriver version 3.9 and:  ``` var caps = new DesiredCapabilities();                          caps.SetCapability(""browser"", ""Chrome"");             caps.SetCapability(""browser_version"", ""62.0"");             caps.SetCapability(""os"", ""Windows"");             caps.SetCapability(""os_version"", ""10"");             caps.SetCapability(""resolution"", ""1024x768"");             caps.SetCapability(""browserstack.user"", ""xxxxxxxxxxxxxxxxxxx"");             caps.SetCapability(""browserstack.key"", ""xxxxxxxxxxxxxxxx"");              driver = new RemoteWebDriver(               new Uri(""http://hub-cloud.browserstack.com/wd/hub/""), caps             ); ``` Was successful, and no error was displayed ## Environment  OS: Any - but Windows 10 in example Browser: Any, but example is Chrome 62 Browser version: 62.0 Browser Driver version: - on Browserstack Language Bindings version: C# 3.141.0","closed","","peterhughes0","2018-11-23T14:25:40Z","2019-08-15T04:09:56Z"
"","6701","javadoc for org.openqa.selenium.Timeouts.pageLoadTimeout incorrect","## 🐛 Bug Report  The internet explorer driver crashes with a buffer overflow when setting the page_load_timeout to -1 from Java. The javadoc on [states](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/WebDriver.Timeouts.html#pageLoadTimeout-long-java.util.concurrent.TimeUnit-) that a timeout can be negative for infinite loading. Since the Geckodriver throws and InvalidArgumentException on setting a negative number, I think the javadoc should be amended, however I did not expect an internet explorer driver to crash when trying something (appearently) illegal as an end user.  ## To Reproduce When calling `driver.manage().timeouts().pageLoadTimeout(-1, TimeUnit.SECONDS);` from Java (Selenium 3.14, either an InternetExplorerDriver or a RemoteWebDriver as driver), the driver dies with a windows message saying ""Command line server for the IE driver has stopped working"".   ## Expected behavior  I expect an org.openqa.selenium.InvalidArgumentException to be thrown (on the java bindings side) when supplying an invalid value.  ## Test script or set of commands reproducing this issue      import java.util.concurrent.TimeUnit;          import org.openqa.selenium.ie.InternetExplorerDriver;          public class IETimeout {          	public static void main(String[] args) {     		InternetExplorerDriver driver = new InternetExplorerDriver();     		driver.manage().timeouts().pageLoadTimeout(-1, TimeUnit.SECONDS);     	}     } This expects the iedriverserver.exe to be present in the folder from which it is started.  ## Environment  OS: Windows Server 2012R2, 6.3.9600.2.0.0.272.7 Browser: Internet Explorer  Browser version: 11.0.9600.19155 (shouldn't be relevant) Browser Driver version: Internet Explorer Driver 3.14.0, 32bit Language Bindings version: Java 3.14 Selenium Grid version (if applicable): No grid used ## Logging Not sure if it makes it easier: [IEServerlog.log](https://github.com/SeleniumHQ/selenium/files/2624192/IEServerlog.log)","closed","C-docs,","daanbuursen","2018-11-28T11:34:40Z","2019-08-14T15:09:57Z"
"","6837","ActionChains.reset_actions() does not reset actions.","## 🐛 Bug Report  The ActionChains.reset_actions() does not reset actions.  This is similar to issue  #6138 which has been closed.  ## To Reproduce  Run the following code from the command line in Python ``` from time import sleep  from selenium import webdriver from selenium.webdriver import ActionChains   def action_chains_test():     driver = webdriver.Firefox()     driver.get('https://developer.mozilla.org/en-US/')      input = driver.find_element_by_id('home-q')      mouse = ActionChains(driver)      for x in range(5):         mouse.click(input)         mouse.send_keys('0')         mouse.perform()         print('Input is %s' % input.get_property('value'))         sleep(3)         input.clear()         mouse.reset_actions()      driver.close()   if __name__ == ""__main__"":     action_chains_test()  ```  Detailed steps to reproduce the behavior:  Run the above file. It will type a `0`, pause, type two `0`s, pause, type three `0`s (mine overwrites itself because of the click, which for some reason behaves like a double click), etc.  reset_actions never has any effect.  ## Expected behavior  It should type a `0` into the input field, pause and then clear the input again. It should do this 5 times.  ## Test script or set of commands reproducing this issue  `python tmp.py`  ## Environment  OS: Linux pop-os 4.18.0-13-generic Browser: Firefox Browser version: 64.0 Browser Driver version: GeckoDriver 0.23.0 Language Bindings version: Python 3.141.0","closed","C-py,","jklingen92","2019-01-10T22:23:48Z","2019-08-14T06:10:02Z"
"","6770","Reached error page: about:neterror","## 🐛 Bug Report  The [Selenium example](https://github.com/lightbody/browsermob-proxy#using-with-selenium) form the readME throws the following error: 'Reached error page: about:neterror'.        // start the proxy     BrowserMobProxy proxy = new BrowserMobProxyServer();     proxy.start(0);      // get the Selenium proxy object     Proxy seleniumProxy = ClientUtil.createSeleniumProxy(proxy);      // configure it as a desired capability     DesiredCapabilities capabilities = new DesiredCapabilities();     capabilities.setCapability(CapabilityType.PROXY, seleniumProxy);      // start the browser up     WebDriver driver = new FirefoxDriver(capabilities);      // enable more detailed HAR capture, if desired (see CaptureType for the complete list)     proxy.enableHarCaptureTypes(CaptureType.REQUEST_CONTENT, CaptureType.RESPONSE_CONTENT);      // create a new HAR with the label ""yahoo.com""     proxy.newHar(""yahoo.com"");      // open yahoo.com     driver.get(""http://yahoo.com"");      // get the HAR data     Har har = proxy.getHar();       ## Environment  OS: OSX Browser: Firefox Browser version: 64.0 Browser Driver version: Geckodriver 0.23.0","closed","","PickHub","2018-12-19T10:21:27Z","2019-08-15T02:09:39Z"
"","6831","selenium is taking too much time (exactly 5 mins) to click an element or get an element","## 🐛 Bug Report  selenium is taking too much time (exactly 5 mins) to click an element or get an element  ## Environment  OS: OSX Browser: Chrome Browser version: latest Browser Driver version: 3.141.59 Selenium Grid version (if applicable):3.141.59","closed","R-awaiting answer,","Codude","2019-01-10T06:54:27Z","2019-08-14T18:09:43Z"
"","6735","Object of action class not working for multiple times","## 🐛 Bug Report  Object of action class not working for multiple times, which do not performed click. If we use same object for multiple click event, it throwing staleelementreference exception which does not mean. Same thing is working, if we use different objects for each separate click.   ## To Reproduce  -Use action click multiplr times anywhere with same object. Note: Found this issue for C# selenium version only.   ## Expected behavior  By single object, it should working properly.   ## Test script or set of commands reproducing this issue          class temp          {         [Test]         public void temps()         {             IWebDriver driver = new ChromeDriver();             driver.Url = ""http://google.com"";             Actions obj1 = new Actions(driver);             IWebElement temp1=  driver.FindElement(By.Name(""q""));             temp1.SendKeys(""Selenium"");             Thread.Sleep(1000);             obj1.MoveToElement(driver.FindElement(By.Name(""btnK""))).Click().Perform();             Thread.Sleep(3000);             try             {                 Actions obj2 = new Actions(driver);                 obj2.MoveToElement(driver.FindElement(By.XPath(""//a[@href='https://www.seleniumhq.org/']""))).Click().Perform();              **// If you try here, with obj1 which used just above. It will not work.**                        //obj1.MoveToElement(driver.FindElement(By.XPath(""//a[@href='https://www.seleniumhq.org/']""))).Click().Perform();             }             catch (Exception e)             {                 e.ToString();             }             Thread.Sleep(1000);         }        }   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 70.0.3538.110 - 64 Bit Browser Driver version: ChromeDriver 2.43 Language Bindings version: C# Selenium : 3.14","closed","","ishah09","2018-12-08T09:55:42Z","2019-08-15T03:09:43Z"
"","6742","Click not working for Openlayers 3 element in Windows 10 LTSB: IE11","## 🐛 Bug Report  In Windows 10 LTSB and IE11, clicking with selenium on Openlayers 3 canvas element does not produce the same result as human originated mouse click. With a selenium originated click, nothing happens( it's not random but consistently nothing happens). With Windows 7 & IE11 the same click was working OK -with the very same test code, and selenium&ie-driver versions. Also, with CEF, in both W7 and W10 the click is working.  We found a workaround for this problem: * by switching IE to the legacy event model the click started working ( MS changed the event model in W8, more about this can be found on www) * the registry setting is FEATURE_NINPUT_LEGACYMODE    ## To Reproduce  TDB. I will ask for a minimal reproduction set from  our devs. Please close this ticket until we provide this information, if that's your policy. (At this point my main contribution plan was to first share the finding and the workaround that we found.)  DesiredCapabilities: * NATIVE_EVENTS: default * ENABLE_PERSISTENT_HOVERING: false    Detailed steps to reproduce the behavior: TBD.  ## Expected behavior  Clicking with selenium should produce the same result as a real click.  ## Test script or set of commands reproducing this issue   TBD  ## Environment  OS: Windows 10 LTSB Browser:  IE11 Browser version:  Browser Driver version:  IEDriverServer: 3.2.0.0 Language Bindings version: selenium-java: 3.2.0  We also tested with latest IEDriverServer and selenium-java with no effect (, other than massively slower test execution.)","closed","D-IE,","karniemi","2018-12-11T08:29:37Z","2021-09-05T08:08:27Z"
"","6736","Cannot be saved in a normal format in chrome for win10","## 🐛 Bug Report  In chrome of win10, Selenium IDE only saves scripts with the suffix "".txt"". This prevents the script from being imported again.    ## To Reproduce    Just in chrome for win10,  open selenium and create a  project, then click the button of saving it will pop up a window. The save format in the lower right corner is just "".txt"".  When the opened project, it will not be found. Even if you select all files and find it, will reminder ""Error migrating project"" and ""Unknown file was received"".  ## Expected behavior  It will be saved as "".side"" formed.  ## Test script or set of commands reproducing this issue  This  problem occurs in the Selenium IDE, so no scripts are required for this problem  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 72.0.3626.7 Selenium Grid version (if applicable): 3.4.5","closed","","SmalBox","2018-12-09T06:38:17Z","2019-08-15T03:09:44Z"
"","6723","ECONNRESET may cause duplicate request even if the first succeeded","## 🐛 Bug Report  In certain environments a command request could raise `ECONNRESET` even if the command data has been already received and the `end` event processed. That causes the same command to be executed twice.    ## To Reproduce  This behaviour is reproducible with our custom WebDriver server implementation (Node JS). The server is configured with HTTPS and valid corporate SSL certificates. The WebDriver test runs on a development machine.  Detailed steps to reproduce the behavior:  Given the set-up above, when launching the test:  1. the `sendRequest` function in the module `node_modules/selenium-webdriver/http/index.js` is first called to create a new session 2. `response.on('data')` and `response.on('end')` for the request are fired and correctly processed 3. however, right after the `request.on('error')` is fired too with `e.code === ECONNRESET` 4. a delayed re-request is scheduled (using `setTimeout`)  This will cause that command to run twice and to create two sessions on the custom WebDriver server. Same applies to other WebDriver commands.  ## Expected behavior  Whenever the `end` event has been processed then a flag should exists which causes a following `ECONNRESET` event to be ignored. I applied a local fix by adding a `request.ignoreECONNRESET` flag and that makes my test run correctly:  ``` response.on('data', body.push.bind(body));     response.on('end', function() {       var resp = new httpLib.Response(           /** @type {number} */(response.statusCode),           /** @type {!Object} */(response.headers),           body.join('').replace(/\0/g, ''));       onOk(resp);       request.ignoreECONNRESET = true;     });   });    request.on('error', function(e) {     if (e.code === 'ECONNRESET') {       if (request.ignoreECONNRESET) {         console.log('response was received anyway. Ignoring ECONNRESET');         return;       }       console.log('Repeating request due to error');       setTimeout(function() {         sendRequest(options, onOk, onError, opt_data, opt_proxy);       }, 15);     } else { ```  ## Test script or set of commands reproducing this issue  The code above (without patch) doesn't handle the edge case where the specific error is fired even though the `onOk(resp)` handler has been already called for the request.  ## Environment  OS: Windows 10 Browser: Miscellaneous browsers on Smart TVs and consoles Browser version: Miscellaneous Browser Driver version: Custom Node JS implementation Language Bindings version: selenium-webdriver 3.6.0 up to 4.0.0 Alpha Selenium Grid version (if applicable): N/A","closed","C-nodejs,","hurrikam","2018-12-04T14:57:30Z","2021-09-05T08:08:27Z"
"","6812","MaxListenersExceededWarning: Possible EventEmitter memory leak detected","## 🐛 Bug Report  If I run my entire battery of Selenium tests through mocha, I always see this warning message (from Node) at the same exact spot:  ``` MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 exit listeners added. Use emitter.setMaxListeners() to increase limit ```  If I log the stack trace for the warning, I see this:  ``` MaxListenersExceededWarning Possible EventEmitter memory leak detected. 11 exit listeners added. Use emitter.setMaxListeners() to increase limit MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 exit listeners added. Use emitter.setMaxListeners() to increase limit     at _addListener (events.js:243:17)     at process.addListener (events.js:259:10)     at process.once (events.js:290:8)     at exec (...\node_modules\selenium-webdriver\io\exec.js:124:11)     at resolveCommandLineFlags.then.args (...\node_modules\selenium-webdriver\remote\index.js:219:25)     at process._tickCallback (internal/process/next_tick.js:68:7) ```  I'm invoking `driver.quit()` at the end of every test suite, so maybe the leak is somewhere inside Selenium?  ## To Reproduce  Run multiple test suites and tests all at once through mocha. Running a single test doesn't trigger the issue.  ## Expected behavior  No warnings.  ## Test script or set of commands reproducing this issue  I can't provide this as all of our tests are internal and proprietary.  ## Environment  OS: Multiple (Windows 10 and Linux) Browser: Chrome Browser version: 71.0.3578.98 Browser Driver version: ChromeDriver 2.43.600210 Language Bindings version: JavaScript 3.6.0","closed","I-stale,","kaiyoma","2019-01-04T01:29:20Z","2021-12-04T00:06:32Z"
"","6716","Unable to use Selenium when the page is loaded via pywb","## 🐛 Bug Report  I'm trying to click on a webpage, which is loaded via [pywb](https://github.com/webrecorder/pywb) so that all content gets recorded.   If I'm loading the page directly without pywb, I am able to click on a botton on the page from python. Trying to do the same with webrecorder, just errors out.    ## To Reproduce    1. Create a wayback-server with pywb 2. Open a webpage from selenium with the archive 3. Try to click on the ""Load earlier""-button via xpath   ## Expected behavior On the Webpage, the button gets clicked and more comments are loaded. (This is the case when the minds.com-url is directly loaded)  ## Actual behavior Script just errors out and the button hasn't been clicked  Traceback (most recent call last):   File """", line 1, in    File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webelement.py"", line 80, in click     self._execute(Command.CLICK_ELEMENT)   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webelement.py"", line 633, in _execute     return self._parent.execute(command, params)   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document   (Session info: chrome=70.0.3538.67)   (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.18.0-2-amd64 x86_64)   ## Test script or set of commands reproducing this issue ### pywb installation  $ pip install pywb $ wb-manager init archive $ wayback --record --live -a --auto-interval 30   ### script connecting to pywb  from selenium import webdriver from time import sleep from selenium.webdriver.common.by import By  driver = webdriver.Chrome() driver.get(""http://localhost:8080/archive/record/https://www.minds.com/newsfeed/800266828058890240"") (...) while driver.find_element(""xpath"",""//minds-comments/div/div""):     print(""click"")     driver.find_element(""xpath"",""//minds-comments/div/div"").click()     print(""sleep 3 sec"")     sleep(3) (...)   ## Environment  OS: Debian 4.18.10-2 Browser: Chromium Browser Driver version: chromedriver=2.41.578700 Language Bindings version: Python3 selenium==3.141.0 Selenium Grid version (if applicable):","closed","","Serkan-devel","2018-12-02T18:08:31Z","2019-08-15T03:09:59Z"
"","6689","Selenium IDE: Open Timeout waiting for all images to load","## 🐛 Bug Report  I recorded a selenium test via IDE on Firefox and every so often when I replay it (via selenese-runner in headless mode), it fails (timeout) on the first command ""open"" of the main URL.  Since I am collecting screenshots I can see that the page seems loaded but maybe not all resources (images, scripts) have completed.  This is annoying because my next command is to click on an link that I can see is available to click on the screenshot.  There should be a way to define if the open command should wait until all resources all loaded or not before proceeding to next command.  In this case I don't want to wait for the whole page to finish loading before clicking on an element I can check is already visible.    ## To Reproduce Any selenium script with a generic open command such as: open(""https://blitz.sapo.pt/"")  ## Expected behavior It should move to the next command as soon as open is emitted. If we want to wait for the page to load the next command can be waitForPageToLoad or if we want to wait for a certain element to be available we can use waitForElement..., etc.  ## Test script or set of commands reproducing this issue N/A  ## Environment  OS: Red Hat Enterprise Linux Server 7.5  Browser: Firefox (geckodriver) Browser version: 57.0.4 Browser Driver version: GeckoDriver 0.23","closed","","Redirts","2018-11-26T10:42:14Z","2019-08-15T03:09:42Z"
"","6766","Drag and drop is not working if the page got scroll","## 🐛 Bug Report  I need to drag a element from a position to another position but the droppable element is in bottom of the page so that i need to drag the element and scroll the page to the bottom and drop.   ## Note: The page got selected from the dragable element position to droppable element position  But it's not working in selenium.  ## Environment  OS: Windows, OSX Browser: Chrome Browser version: 67 Browser Driver version: e.g.: ChromeDriver 2.34 Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.8.1","closed","R-awaiting answer,","KDsankar","2018-12-18T05:24:12Z","2019-08-14T23:09:43Z"
"","6719","SocketTimeoutException instead of","## 🐛 Bug Report  I am using Selenium with TestNG on a UI application developed in angular. When selenium polls for an element NOT present in the UI, the execution hangs for 3 hours and finally java.net.SocketTimeoutException is thrown.   We had seen this on earlier versions of Selenium as well (3.4). The main problem this issue causes us is the 3 hour wait. The screenshot taken after failure would be of the login page as the UI session times out in 2 hours and redirects. (We cannot change the 2 hour session timeout because this is an important testing criteria). So we are left clueless to the actual state of the UI (whether the browser has frozen etc.).  ## Expected behavior  We expect org.openqa.selenium.NoSuchElementException and the 3 hour wait not to happen.  ## Environment  OS: Windows 7 Browser: Chrome Browser version: 70.0.3538.110 (Official Build) (64-bit) Browser Driver version: Chrome driver 2.36.540470 Language Bindings version: Java 1.8.0_31  ## Stacktrace  2018-11-30T00:30:47,336 [INFO ] ###Sensitive content hidden### :         is navigation successful (###Sensitive content hidden###)? Nov 30, 2018 3:30:51 AM org.openqa.selenium.support.ui.ExpectedConditions findElement WARNING: WebDriverException thrown by findElement(By.xpath: //div[@class='titlebar']//div[text()='###Sensitive content hidden###']) org.openqa.selenium.WebDriverException: java.net.SocketTimeoutException: Read timed out Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: '###Sensitive content hidden###', ip: '###Sensitive content hidden###', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_31' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:349) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementsByXPath(RemoteWebDriver.java:428) 	at org.openqa.selenium.By$ByXPath.findElements(By.java:348) 	at org.openqa.selenium.remote.RemoteWebDriver.findElements(RemoteWebDriver.java:310) 	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:895) 	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44) 	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:183) 	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:180) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:260) 	at ###Sensitive content hidden### 	at org.aspectj.runtime.reflect.JoinPointImpl.proceed(JoinPointImpl.java:149) 	at ###Sensitive content hidden### 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:483) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112) 	at org.testng.TestRunner.privateRun(TestRunner.java:756) 	at org.testng.TestRunner.run(TestRunner.java:610) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218) 	at org.testng.TestNG.runSuites(TestNG.java:1133) 	at org.testng.TestNG.run(TestNG.java:1104) 	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281) 	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75) 	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121) 	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)  Caused by: java.net.SocketTimeoutException: Read timed out 	at java.net.SocketInputStream.socketRead0(Native Method) 	at java.net.SocketInputStream.read(SocketInputStream.java:150) 	at java.net.SocketInputStream.read(SocketInputStream.java:121) 	at okio.Okio$2.read(Okio.java:140) 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:237) 	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:355) 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227) 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:215) 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)","closed","","sighil","2018-12-03T08:13:32Z","2019-09-07T08:09:35Z"
"","6842","move() should not use default offsets=0","## 🐛 Bug Report  https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/input.js#L397  ```js   move({x = 0, y = 0, duration = 100, origin = Origin.VIEWPORT}) {     return {type: Action.Type.POINTER_MOVE, origin, duration, x, y};   } ``` Using the default of `0` here is not correct for [JSON wire protoctol drivers](https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidmoveto). The code has to allow undefined to be passed in because the no-offset case does not mean zero offset. ------------ POST /session/:sessionId/moveto  Move the mouse by an offset of the specificed element. If no element is specified, the move is relative to the current mouse cursor. **If an element is provided but no offset, the mouse will be moved to the center of the element.** If the element is not visible, it will be scrolled into view. URL Parameters: :sessionId - ID of the session to route the command to. JSON Parameters:  - element  {string} Opaque ID assigned to the element to move to, as described in the WebElement JSON Object. If not specified or is null, the offset is relative to current position of the mouse. - xoffset - {number} X offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element. - yoffset - {number} Y offset to move to, relative to the top-left corner of the element. If not specified, the mouse will move to the middle of the element. ------------","closed","C-nodejs,","johnjbarton","2019-01-11T19:29:28Z","2021-09-05T08:08:26Z"
"","6762","How to Selenium 3.14 remove base64 string. Terminal is completly flooded","## 🐛 Bug Report  Hello! I used selenium 3.11 and when I run code with custom firefox profile - browser startup 3-5sec and console of selenium was clean from flood text.  But when I using 3.14 Selenium is output to console all base64 code of my custom profile and I am waiting 1-2 minutes before firefox is running. How can I disable this console output hell ? Thanks!","closed","","VereschakSun","2018-12-17T09:01:04Z","2019-08-15T02:09:45Z"
"","6823","Unable to register Appium node in grid","## 🐛 Bug Report  Grid cannot register Appium node using capabilities (not desiredCapabilities).  ## Grid Log: ``` WARN:osjs.HttpChannel:qtp1908143486-19: /wd/hub/session java.io.IOException:  org.openqa.grid.common.exception.GridException: Cannot extract a capabilities from the request:  {     ""capabilities"":{         ""alwaysMatch"":{             ""platformName"":""Android"",""platformVersion"":""9.0.0"",""deviceName"":""Pixel 2"",""browserName"":""chrome""},         ""firstMatch"":[{}]     },     ""desiredCapabilities"":{         ""platformName"":""Android"",""platformVersion"":""9.0.0"",""deviceName"":""Pixel 2"",""browserName"":""chrome""     } } ```  and more ``` java.lang.IllegalArgumentException: Illegal key values seen in w3c capabilities:  [chromeDriverPort, chromeOptions, deviceName, newCommandTimeout, platformVersion, systemPort, udid] ```  ## To Reproduce  1. Run grid `java -Dselenium.LOGGER.level=ALL -jar ./selenium-server-standalone-3.141.59.jar -role hub` 2. Create session with body: ``` {   capabilities: {     alwaysMatch: {         platformName: 'Android',         platformVersion: '9.0.0',         deviceName: 'Pixel 2',         browserName: 'chrome'     },     firstMatch: [ {} ]   },   desiredCapabilities: {     platformName: 'Android',     platformVersion: '9.0.0',     deviceName: 'Pixel 2',     browserName: 'chrome'   } } ```  ## Expected behavior  should be possible to create session having **capabilities** with Appium specific properties in body, like: platformName: 'Android, iOS', platformVersion, deviceName, udid, chromeDriverPort, systemPort, chromeOptions, newCommandTimeout, and others.  ## Environment  OS: OSX Selenium Grid version: 3.141.59  ## Additional Information   Issue was found using webdriverio 5.x.x  https://github.com/webdriverio/webdriverio/issues/3252  more discussion here https://github.com/webdriverio/webdriverio/pull/3259  sample wdio config to easily reproduce the issue: ```   hostname: '127.0.0.1',   port: 4444,   maxInstances: 1,   capabilities: [{     platformName: 'Android',     platformVersion: '9.0.0',     deviceName: 'Pixel 2',     browserName: 'chrome',   }],   specs: [ './test/specs/**/*.js' ],   framework: 'mocha' } ```  ## Working scenarios  - body with browser specific properties in **capabilities**: ``` {   capabilities: {     alwaysMatch: {         browserName: 'chrome'     },     firstMatch: [ {} ]   },   desiredCapabilities: {     browserName: 'chrome'   } } ``` - body with Appium specific properties in **desiredCapabilities** ``` {   desiredCapabilities: {     platformName: 'Android',     platformVersion: '9.0.0',     deviceName: 'Pixel 2',     browserName: 'chrome'   } } ```","closed","","xlenz","2019-01-07T20:53:48Z","2019-08-15T00:09:57Z"
"","6687","Issue with Reading data from Excel Sheet when Excel functions are used to modify the required data","## 🐛 Bug Report  From Excel want to read the Date as data for my application. The date as condition that one date should be Today's (current) date and another 30 days advance to the current date. So I'm using Cell Function to make data live. But I observed when data is read from webdriver its reading the function value as input data.  Hope needs some fix for the code to read teh cell content instead of Function.    Detailed steps to reproduce the behavior:  It should read the date generated using Excel Function. Used Function is Excel:  =(TODAY)  ## Test script or set of commands reproducing this issue  1. Create an Excel file and format Cell Type as Custom. 2. Set Date format as mmm dd, yyyy (Eg. Nov 26, 2018). 3. For the cell use Excel Function to created current date (=(TODAY)). 4.  Create a Selenium script to read the data formatted above cells.  Note: Using 'String' variable type to read the cell data (Eg. String strStartdate)  Issue: The data read as =(TODAY) instead of reading the actual date.  ## Environment  OS:  10 Browser:  Chrome Browser version:  Version 70 Browser Driver version:  Language Bindings version:  JAVA jdk 1.8,  Selenium Grid version (if applicable):   NA  ![selenium_issue](https://user-images.githubusercontent.com/7704253/49003139-5c868980-f187-11e8-8c40-6de11a8b5838.jpg)","closed","","vickeekulkarni","2018-11-26T08:58:13Z","2019-08-15T04:09:57Z"
"","6750","grid documentation: I needed to remove docker and virbr0 (kvm) network interfaces","## 🐛 Bug Report  For a real selenium grid (on two real physical computers, no VMs), to get the linux node use the right network interface, I had to remove from it the docker and vibr0 (kvm) network interfaces.  Can this info be added to the grid documentation? Not everybody is a networking expert. Is it possible to fix this so that the node uses the correct network interface?  ## To Reproduce  on my home network: hub (a Macbook laptop):  java -jar selenium-server-standalone-3.141.59.jar -role hub node (Kubuntu 18.04 with docker and kvm installed):  java -Dwebdriver.chrome.driver=./chromedriver -Dwebdriver.firefox.driver=./geckodriver -jar selenium-server-standalone-3.141.59.jar -role node -hub http://192.168.0.171:4444/grid/register -port 5555  The hub output showed that the node got registered and on http://192.168.0.171:4444/grid/console I could see the usual info. Running my maven command on the macbook to run a simple test failed.  In the hub output I saw ""marking the node as down because it can't be reached for 2 tries"" and it registered again (continually if I recall correctly). In the hub output I noticed that the node was registered with an ip different from 192.168.0.xxx and on the node the command ifconfig showed me that this was the ip of docker network interface. So on the node I stopped docker and disabled it (systemctl stop docker and systemctl disable docker and reboot) and then I restarted the node command. The node then registered on the hub with the ip of virbr0 interface (in the past I had installed kvm on it). With three commands from https://ciberciti.biz/faq/linux-kvm-disable-virbr0-nat-interface I removed that interface as well. Then the node could connect to the grid with its normal network interface 192.168.0.xxx and my maven command could successfully run with browsers getting launched on the node.   ## Expected behavior  The command to run the node should use the ""normal"" network interface, not blindly picking docker or virbr0 interfaces. Somewhere on stackoverflow I read that these things are not a selenium issue but a matter of network configuration. I doubt every selenium user is a networking expert. Please add this info somewhere to the grid documentation so that others can benefit from it too.  (also my apologies for my other bad report the other day about this, yesterday I was feverish and had a bad headache)","closed","C-docs,","DieterRogiest","2018-12-13T10:31:00Z","2019-08-15T01:09:54Z"
"","6775","Cannot set cookies before navigating to page.","## 🐛 Bug Report  Cookie cannot be set before navigating to a page. org.openqa.selenium.InvalidCookieDomainException: Document is cookie-averse  is thrown.   navigating to the page before setting the cookie defeats the purpose of trying to set cookies. also navigating, set the cookie and then re-navigating is only extending the execution time. <  ## To Reproduce 1.have valid cookie 2.create a new driver 3.try to set the cookie  ## Expected behavior  cookie is set  ## Test script or set of commands reproducing this issue  Cookie ck = read cookie from file  @BeforeClass public void setUp() {     driver = new FirefoxDriver();     driver.driver.manage().addCookie(ck); }  ## Environment These are irrelevant as this most likely does depend on any of the below, but here you go anyway  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","bogdanrizea","2018-12-20T09:26:47Z","2019-08-15T01:10:02Z"
"","6684","Chrome setting startup page is invalid.","## 🐛 Bug Report  Chrome setting startup page is invalid.  ## To Reproduce  ## Expected behavior  Once the browser is open, go directly to https://www.seleniumhq.org/.  ## Test script or set of commands reproducing this issue  ```python from time import sleep  from selenium import webdriver  options = webdriver.ChromeOptions() options.add_argument('--homepage=https://www.seleniumhq.org/')  chrome_driver = 'Driver/chromedriver' driver = webdriver.Chrome(executable_path=chrome_driver, chrome_options=options) sleep(3) driver.quit() ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: e.g.: 70.0.3538.110 Browser Driver version: e.g.: ChromeDriver 2.43 Language Bindings version: e.g.: Python 3.6.7 Selenium Grid version (if applicable): e.g.: 3.141.0","closed","","taiyuanhang","2018-11-24T12:13:45Z","2019-08-15T04:09:58Z"
"","6816","org.jruby.exceptions.RaiseException: (ArgumentError) unknown encoding name - UTF8","## 🐛 Bug Report  At build time, jruby throws an error. ``` C:\selenium\selenium-3.10.0>go build --trace Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 Parsing cpp/build.desc Parsing cpp/iedriverserver/build.desc Parsing dotnet/docs/build.desc Parsing dotnet/test/remote/build.desc Parsing dotnet/test/support/build.desc Parsing dotnet/test/webdriverbackedselenium/build.desc Parsing ide/build.desc Parsing ide/main/build.desc Parsing ide/plugins/csharp-format/build.desc Parsing ide/plugins/groovy-format/build.desc Parsing ide/plugins/java-format/build.desc Parsing ide/plugins/perl-format/build.desc Parsing ide/plugins/php-format/build.desc Parsing ide/plugins/python-format/build.desc Parsing ide/plugins/ruby-format/build.desc Parsing javascript/build.desc Parsing javascript/android-atoms/build.desc Parsing javascript/atoms/build.desc Parsing javascript/atoms/fragments/build.desc Parsing javascript/chrome-driver/build.desc Parsing javascript/firefox-driver/build.desc Parsing javascript/ie-driver/build.desc Parsing javascript/jsunit/build.desc Parsing javascript/node/build.desc Parsing javascript/remote/build.desc Parsing javascript/safari-driver/build.desc Parsing javascript/selenium-atoms/build.desc Parsing javascript/selenium-core/build.desc Parsing javascript/watir-atoms/build.desc Parsing javascript/webdriver/build.desc Parsing javascript/webdriver/atoms/build.desc Parsing javascript/webdriver/atoms/fragments/build.desc Parsing javascript/webdriver/atoms/fragments/inject/build.desc Parsing javascript/webdriver/atoms/inject/build.desc Parsing py/build.desc Parsing rb/build.desc org.jruby.exceptions.RaiseException: (ArgumentError) unknown encoding name - UTF8         at org.jruby.RubyFile.expand_path(org/jruby/RubyFile.java:816)         at RUBY.define_build_task(C:/selenium/selenium-3.10.0/rake-tasks/crazy_fun/mappings/ruby.rb:160)         at RUBY.handle(C:/selenium/selenium-3.10.0/rake-tasks/crazy_fun/mappings/ruby.rb:153)         at RUBY.block in create_tasks(C:/selenium/selenium-3.10.0/rake-tasks/crazy_fun.rb:71)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.block in create_tasks(C:/selenium/selenium-3.10.0/rake-tasks/crazy_fun.rb:70)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.block in create_tasks(C:/selenium/selenium-3.10.0/rake-tasks/crazy_fun.rb:64)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.create_tasks(C:/selenium/selenium-3.10.0/rake-tasks/crazy_fun.rb:61)         at RUBY.(C:/selenium/selenium-3.10.0/rakefile:100)         at org.jruby.RubyKernel.load(org/jruby/RubyKernel.java:973)         at RUBY.(root)(uri:classloader:/gems/rake-10.5.0/lib/rake/rake_module.rb:1)         at RUBY.load_rakefile(uri:classloader:/gems/rake-10.5.0/lib/rake/rake_module.rb:28)         at RUBY.block in raw_load_rakefile(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:689)         at RUBY.load_rakefile(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:94)         at RUBY.standard_exception_handling(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176)         at RUBY.block in load_rakefile(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:93)         at RUBY.run(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:77)         at RUBY.standard_exception_handling(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176)         at RUBY.(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:75)         at org.jruby.RubyKernel.load(org/jruby/RubyKernel.java:973)         at RUBY.(uri:classloader:/gems/rake-10.5.0/bin/rake:33) Parsing third_party/closure/build.desc Parsing third_party/firebug/build.desc Parsing third_party/jruby/build.desc Parsing third_party/js/sizzle/build.desc Parsing third_party/js/wgxpath/build.desc ** Invoke build (first_time) ** Invoke all (first_time) ** Invoke selenium-java (first_time) ** Invoke //java/client/src/org/openqa/selenium:selenium (first_time) ** Execute //java/client/src/org/openqa/selenium:selenium org.jruby.exceptions.RaiseException: (ArgumentError) unknown encoding name - UTF8         at org.jruby.RubyFile.expand_path(org/jruby/RubyFile.java:816)         at RUBY.download(C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:16)         at RUBY.buck_cmd(C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:57)         at RUBY.block in (root)(C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:260)         at RUBY.block in execute(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:240)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.execute(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:235)         at RUBY.block in invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:179)         at RUBY.mon_synchronize(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214)         at RUBY.invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172)         at RUBY.block in invoke_prerequisites(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.invoke_prerequisites(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199)         at RUBY.block in invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178)         at RUBY.mon_synchronize(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214)         at RUBY.invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172)         at RUBY.block in invoke_prerequisites(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.invoke_prerequisites(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199)         at RUBY.block in invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178)         at RUBY.mon_synchronize(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214)         at RUBY.invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172)         at RUBY.block in invoke_prerequisites(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.invoke_prerequisites(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199)         at RUBY.block in invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178)         at RUBY.mon_synchronize(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214)         at RUBY.invoke_with_call_chain(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172)         at RUBY.invoke(uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:165)         at RUBY.invoke_task(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:150)         at RUBY.block in top_level(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106)         at org.jruby.RubyArray.each(org/jruby/RubyArray.java:1735)         at RUBY.block in top_level(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106)         at RUBY.run_with_threads(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:115)         at RUBY.top_level(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:100)         at RUBY.block in run(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:78)         at RUBY.standard_exception_handling(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176)         at RUBY.run(uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:75)         at RUBY.(uri:classloader:/gems/rake-10.5.0/bin/rake:33)         at org.jruby.RubyKernel.load(org/jruby/RubyKernel.java:973)         at RUBY.(uri:classloader:/META-INF/jruby.home/bin/rake:1) python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex kill python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium PARSING BUCK FILES... 3.2s (100%) CREATING ACTION GRAPH: FINISHED IN 0.3s Build failed: No system compiler found. Did you install the JRE instead of the JDK?     When running .     When building rule //java/client/src/org/openqa/selenium:beta. DOWNLOADED 0 ARTIFACTS, 0.00 BYTES BUILDING: FINISHED IN 3.6s (100%) 7/36 JOBS, 2 UPDATED, 5.6% CACHE MISS BUILD FAILED Exception `RuntimeError' at C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:85 - python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:85 - python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:85 - python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:85 - python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 Exception `#' at C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:85 - python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 go aborted! python C:/selenium/selenium-3.10.0/buck-out/crazy-fun/0c687e0a193b409b8b59b08b8db36b4177b28eaa/buck.pex build --stamp-build=detect --deep //java/client/src/org/openqa/selenium:selenium failed with exit code: 1 C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:85:in `block in buck_cmd' org/jruby/RubyIO.java:4902:in `popen3' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/jruby/open3_windows.rb:74:in `popen3' C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:69:in `buck_cmd' C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:260:in `block in (root)' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:75:in `run' uri:classloader:/gems/rake-10.5.0/bin/rake:33:in `' org/jruby/RubyKernel.java:973:in `load' uri:classloader:/META-INF/jruby.home/bin/rake:1:in `' ArgumentError: unknown encoding name - UTF8 org/jruby/RubyFile.java:816:in `expand_path' C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:16:in `download' C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:57:in `buck_cmd' C:/selenium/selenium-3.10.0/rake-tasks/buck.rb:260:in `block in (root)' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:240:in `block in execute' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:235:in `execute' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:179:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:201:in `block in invoke_prerequisites' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:199:in `invoke_prerequisites' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:178:in `block in invoke_with_call_chain' uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:214:in `mon_synchronize' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:172:in `invoke_with_call_chain' uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:165:in `invoke' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:150:in `invoke_task' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' org/jruby/RubyArray.java:1735:in `each' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:106:in `block in top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:115:in `run_with_threads' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:100:in `top_level' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:78:in `block in run' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:176:in `standard_exception_handling' uri:classloader:/gems/rake-10.5.0/lib/rake/application.rb:75:in `run' uri:classloader:/gems/rake-10.5.0/bin/rake:33:in `' org/jruby/RubyKernel.java:973:in `load' uri:classloader:/META-INF/jruby.home/bin/rake:1:in `' Tasks: TOP => build => all => selenium-java => //java/client/src/org/openqa/selenium:selenium ```  ## To Reproduce >go build  ## Expected behavior jruby says that the above issue has been resolved in the latest version. https://github.com/jruby/jruby/issues/4546  ## Environment  OS:  Windows 10  Selenium Grid version (if applicable):  3.10.0","closed","R-awaiting answer,","otkeri","2019-01-05T06:11:26Z","2019-08-14T18:09:41Z"
"","6811","WebDriverException error message","## 🐛 Bug Report  A clear and concise description of what the bug is.  **A** exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:52098/session/d599f3eaccd3414b8e9922007c8b3ee0/element/0.9150696802032856-146/enabled. The status of the exception was UnknownError, and the message was: Only one usage of each socket address (protocol/network address/port) is normally permitted Only one usage of each socket address (protocol/network address/port) is normally permitted  Should instead say: **An** exception with a null response ...    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","R-awaiting answer,","JAffleck","2019-01-03T19:56:57Z","2019-08-14T18:09:40Z"
"","6809","POST /session//moveto did not match a known command","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce  Detailed steps to reproduce the behavior:  1.  Clone https://github.com/cambiph/se-debug.git 2. Perform `npm install` 3. Start the docker containers using `docker-compose up` 4. Run `grunt builddocker`  ## Expected behavior  A clear and concise description of what you expected to happen.  Firefox browser is opened and `www.angular.io`is loaded. Then, the mouse is moved to the element with classname `card-text-container`  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  See above  ## Environment  Latest build from https://hub.docker.com/u/selenium/ Protractor version used is the latest beta which includes the latest selenium JS bindings (4.0.0-alpha1) More details can be found in the Twitter discussion: https://twitter.com/shs96c/status/1078794260265218048","closed","C-nodejs,","cambiph","2019-01-03T11:30:17Z","2021-09-05T08:08:35Z"
"","6797","firefox profile gets overridden when creating driver","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  I am trying to create a firefox profile and so downloads go to a specified folder and there is no prompt asking to specify download location, but the setting in the profile gets overriden when driver is created.Below is the code snippet used.  FirefoxOptions options = new FirefoxOptions(); 			FirefoxProfile firefoxProfile=new FirefoxProfile(); 			firefoxProfile.setPreference(""browser.download.folderList"", 2); 			firefoxProfile.setPreference(""browser.download.manager.showWhenStarting"", false); 			firefoxProfile.setPreference(""browser.download.dir"", getDownloadPath()); 			firefoxProfile.setPreference(""browser.helperApps.neverAsk.openFile"", 					""text/csv,application/x-msexcel,application/excel,application/x-excel,application/vnd.ms-excel,image/png,image/jpeg,text/html,text/plain,application/msword,application/xml,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet""); 			firefoxProfile.setPreference(""browser.helperApps.neverAsk.saveToDisk"", 					""text/csv,application/x-msexcel,application/excel,application/x-excel,application/vnd.ms-excel,image/png,image/jpeg,text/html,text/plain,application/msword,application/xml,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet""); 			firefoxProfile.setPreference(""browser.helperApps.alwaysAsk.force"", false); 			firefoxProfile.setPreference(""browser.download.manager.alertOnEXEOpen"", false); 			firefoxProfile.setPreference(""browser.download.manager.focusWhenStarting"", false); 			firefoxProfile.setPreference(""browser.download.manager.useWindow"", false); 			firefoxProfile.setPreference(""browser.download.manager.showAlertOnComplete"", false); 			firefoxProfile.setPreference(""browser.download.manager.closeWhenDone"", false); 			firefoxProfile.setAcceptUntrustedCertificates(true); 			firefoxProfile.setAssumeUntrustedCertificateIssuer(false); 			options.setProfile(firefoxProfile); 			options.addCapabilities(capabilities); FirefoxDriver firefox = new FirefoxDriver(options.toCapabilities());   ## Expected behavior  The expectation is that file is downloaded automatically without displaying prompt in the specified location.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 7 Browser: Firefox Quantum Browser version: 63.0.3 64 bit Browser Driver version: GeckoDriver 0.23.0 Language Bindings version: Java 1.8 Selenium version:3.5.2 Selenium Grid version (if applicable): NA","closed","","Shebeok","2018-12-31T06:06:34Z","2019-08-15T01:09:36Z"
"","6699","Not use PhantomJS in version 3.141.0","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","bloomder","2018-11-27T20:33:52Z","2019-08-15T04:09:47Z"
"","6675","selenium keyword not working in Linux 7.5 for robot framework","## 🐛 Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","Rohit2387","2018-11-22T08:49:23Z","2019-08-15T04:10:00Z"
"","6778","When [If]'s [End] is just before [While]'s [End], the [While] loop is never repeated.","## 🐛 Bug Report  A clear and concise description of what the bug is :  The bug concerns an [**If**] command inside a [**While**] command. Specifically, it happens when [**If**]'s [**End**] is just before [**While**]'s [**End**], that is, when the two **End** commands are not separated by any other command.  I haven't tested the opposite (While inside If) , but you may want to check it too.    ## To Reproduce    **Detailed steps to reproduce the behavior:**  ![image](https://user-images.githubusercontent.com/45966855/50325565-ed7e2580-04e5-11e9-97b7-8d9c3be55749.png)  ## Expected behavior  A clear and concise description of what you expected to happen : The [**While**] loop is never repeated. If you separate the two **End**s by any command (I tried **echo | hello**) , everything becomes fine and the bug doesn't occur. ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windows 7 64 bits Browser:  Chrome Browser version:  71 Browser Driver version:  2.45 Language Bindings version:  I don't know, please tell me how to check this version. Selenium Grid version (if applicable):","closed","","YecineM","2018-12-21T05:00:08Z","2019-08-15T01:09:57Z"
"","6819","[py] 'GET' can't have body","## 🐛 Bug Report  'GET' can't have body.  https://github.com/SeleniumHQ/selenium/blob/a920faac5532175843c6a135f1f2dd621d8016c3/py/selenium/webdriver/remote/remote_connection.py#L393  Needed in https://github.com/appium/python-client/issues/311  ### Background * https://github.com/SeleniumHQ/selenium/issues/6250 * https://github.com/SeleniumHQ/selenium/commit/c88ac018489ebfe7366c7da8fc2fded963b2fe2d  ## Expected behavior  'GET' can accept body.","closed","","ki4070ma","2019-01-07T06:54:49Z","2019-08-15T00:10:00Z"
"","6773","when the page is switched, the page stops loading.","## 🐛 Bug Report  ### Environment OS:  OSX Browser:  Chrome Browser version: Version 71.0.3578.98 (Official Build) (64-bit) Language Bindings version: Python 3.7 Selenium version 3.13.0  ### Question I have already raised this issue in stackoverflow [https://stackoverflow.com/questions/53848923/selenium-webdriver-stop-loading-when-switching-pages](url)  gif link [https://user-images.githubusercontent.com/19711721/50255923-e8aa6a80-042e-11e9-9b05-82c07829c041.gif](url) to the code and operation of the demo project  Test code: ` url = 'https://www.google.com/` `  wait = WebDriverWait(driver, 10)`   `driver.get(url)`   `wait.until(EC.visibility_of_element_located((By.XPATH, '//*[@id=""gsr""]')))`   `open_youtube_js = 'window.open(""https://www.youtube.com"")'     driver.execute_script(open_youtube_js)`   `driver.switch_to.window(driver.window_handles[-1])` **At this time, when I perform any operation(for example `print(driver.current_url)` or `WebDriverWait`), it will cause second page stop loading.**    after running the line of switch to window, any subsequent actions will cause the page to stop loading(gif image has effect view).  The same code, I tried to work properly in Safari, This problem seems to only appear in Chrome.","closed","","SnowStorm-L","2018-12-20T08:23:46Z","2019-08-15T02:09:34Z"
"","6774","when the page is switched, the page stops loading.","## 🐛 Bug Report  ### Environment OS:  OSX Browser:  Chrome Browser version: 71.0.3578.98 (Official Build) (64-bit) ChromeDriver version: 71.0.3578.33 Language Bindings version: Python 3.7 Selenium version 3.13.0  ### Question I have already raised this issue in stackoverflow [https://stackoverflow.com/questions/53848923/selenium-webdriver-stop-loading-when-switching-pages](url)  gif link [https://user-images.githubusercontent.com/19711721/50255923-e8aa6a80-042e-11e9-9b05-82c07829c041.gif](url) to the code and operation of the demo project  Test code: ` url = 'https://www.google.com/` `  wait = WebDriverWait(driver, 10)`   `driver.get(url)`   `wait.until(EC.visibility_of_element_located((By.XPATH, '//*[@id=""gsr""]')))`   `open_youtube_js = 'window.open(""https://www.youtube.com"")'     driver.execute_script(open_youtube_js)`   `driver.switch_to.window(driver.window_handles[-1])` **At this time, when I perform any operation(for example `print(driver.current_url)` or `WebDriverWait`), it will cause second page stop loading.**    after running the line of switch to window, any subsequent actions will cause the page to stop loading(gif image has effect view).  The same code, I tried to work properly in Safari, This problem seems to only appear in Chrome.","closed","","SnowStorm-L","2018-12-20T08:24:16Z","2019-08-15T01:10:03Z"
"","6177","Remove Sizzle and jQuery 1.4.1 as well as all non-native Xpath engines","## Why? Using the browser's native APIs (e.g. [document.evaluate](https://developer.mozilla.org/en-US/docs/Web/API/Document/evaluate) and [document.querySelectorAll](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll)) will reduce the dependencies on old third party code, making it easier for the IDE to pave the way to WebDriver based playback (Sizzle for that matter uses [non-standard css capabilities](https://github.com/jquery/sizzle/wiki#additions), non-compatible with WebDriver).   And because Mozilla is cracking down on jQuery 1 - 2 users. >Hello, > >You’re receiving this message because you’re an add-on developer registered on AMO (addons.mozilla.org) and and you are using jQuery 2.x in at least one of your add-ons. We want to inform you about the upcoming deprecation of that version. > >jQuery 2.x is no longer maintained and contains vulnerabilities that could lead to security issues in add-ons. Effective immediately, the validation process will warn you if jQuery 2.x is found during the submission of a new version or add-on. After September 1, 2018, no new submissions using jQuery 2.x will be accepted. > >Please upgrade to jQuery 3.x as soon as possible. Refer to the upgrade guide at https://jquery.com/upgrade-guide/3.0/ for more information. > >Regards, > >The Add-ons Team  Since [htmlutils.js](https://github.com/SeleniumHQ/selenium/pull/6177/files#diff-3ced8e380800cd7858d11aa54bd0043b) comes bundled with jQuery 1.4.1 and Sizzle, after September 1st, we will no longer be able to publish new versions on AMO.  - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","I-needs investigation,","corevo","2018-07-18T13:35:22Z","2018-08-02T08:16:14Z"
"","6476","when invoke IWebElement property Location in WebView it is automatically scrolled into view","## The problem  When I'm trying to invoke property Location for IWebElement(will call it Element further) in WebView, and Element is not visible but exists in the dom (for example last list instance) -> Element is scrolled to the top of container automatically (I successfully switch to WEBVIEW and found Elemement)   ## Environment  * Appium version 1.9.0 * macbook Sierra: * Node.js version 8.11.4 * Device under test iPhone 6+ Ios 10.3 * Real device Hybrid App  ## Details  If necessary, describe the problem you have been experiencing in more detail.  ## Link to Appium logs  [debug] [MJSONWP] Calling AppiumDriver.getAttribute() with args: [""innerHTML"",""5148"",""d6f95fdb-47ff-48ca-b7fc-bad0b7de0f1b""] [debug] [XCUITest] Executing command 'getAttribute' [debug] [RemoteDebugger] Executing 'get_attribute_value' atom in default context [debug] [RemoteDebugger] Garbage collecting with 5000ms timeout [debug] [RemoteDebugger] Unable to collect garbage at this time [debug] [RemoteDebugger] Sending javascript command (function(){return function(){var g=this;functi... [debug] [RemoteDebugger] Sending WebKit data: {""method"":""Runtime.evaluate"",""params"":{""objectGroup"":""console"",""includeCommandLineAPI"":true,""doNotPauseOnExceptionsAndMuteConsole"":true,""expression"":""(function(){return function(){var g=this;functi... [debug] [RemoteDebugger] Webkit response timeout: 5000 [debug] [RemoteDebugger] Received WebKit data: '{""result"":{""result"":{""type"":""string"",""value"":""{\""status\"":0,\""value\"":\""\u003C!----\u003E\u003Cdiv ngcontent-c16=\\\""\\\"" class=\\\""c-full-width\\\""\u003E\u003Cbc-qpl-base-item ngcontent-c16=\\\""...' [debug] [RemoteDebugger] Found method 'Runtime.evaluate' for '408' message [debug] [RemoteDebugger] Received result for atom 'get_attribute_value' execution: ""","closed","","vatsikmax","2018-10-03T10:55:39Z","2019-08-15T08:09:39Z"
"","6603","FirefoxProfile not found","## Thanks - OS:  hub,node=Win7  Selenium Version:  3.8.1  Browser:  Firefox  Browser Version:  59    Caused by: org.openqa.selenium.WebDriverException: Error forwarding the new session resource /org/openqa/selenium/firefox/webdriver_prefs.json relative to org.openqa.selenium.firefox.FirefoxProfile not found. Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'dx-crawler36.dx', ip: '10.11.0.224', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-358.el6.x86_64', java.version: '1.8.0_73' Driver info: driver.version: unknown    org.openqa.selenium.WebDriverException: Error forwarding the new session resource /org/openqa/selenium/firefox/webdriver_prefs.json relative to org.openqa.selenium.firefox.FirefoxProfile not found. Command duration or timeout: 15 milliseconds         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)         at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)         at java.lang.reflect.Constructor.newInstance(Constructor.java:422)         at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)         at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)         at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$0(JsonWireProtocolResponse.java:53)         at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$2(JsonWireProtocolResponse.java:91)         at org.openqa.selenium.remote.ProtocolHandshake.lambda$0(ProtocolHandshake.java:123)         at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)         at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)         at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126)         at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498)         at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485)         at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)         at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152)         at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)         at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)         at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73)         at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:219)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:142)         at com.rong360.crawler.mobile.webdriver.CrawlerRemoteWebDriver.(CrawlerRemoteWebDriver.java:13)         at com.rong360.crawler.mobile.webdriver.DriverBuilder.createNewFirefoxDriver(DriverBuilder.java:85)         at com.rong360.crawler.mobile.service.impl.chinamobile.AnhuiMobileLoginServiceImpl.login(AnhuiMobileLoginServiceImpl.java:56)         at com.rong360.crawler.mobile.service.impl.chinamobile.AnhuiMobileLoginServiceImpl$$FastClassBySpringCGLIB$$10b0a5e1.invoke()         at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)         at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:717)         at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)         at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:85)         at com.rong360.crawler.mobile.annotation.LoginRequestInterceptor.around(LoginRequestInterceptor.java:48)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)","closed","R-awaiting answer,","liangrengongzuoshi","2018-11-01T12:35:56Z","2019-08-15T03:09:36Z"
"","5958","Getting connection refused error while executing Selenium + Firefox test case using SSH (OpenSSH) on Windows","## System  Software installed: •	Operating System : Windows 10 (64-bit) •	Selenium (3.7.1) with java-client 6.0.0-Beta2 •	GeckoDriver (0.20.1 – 64bit) •	Firefox 58.0b9 (64-bit) •	Apache-Maven-3.3.9 •	TestNG (6.11) •	OpenSSH (Windows) •	Putty with Plink (for Command line execution for SSH)  ## Testcase  Steps to reproduce: 1.	Create maven project  (e.g Name: AutomationTestProject) 2.	Add sample selenium test case (as mentioned below)         @Test(groups = { ""SSH"" }, description = ""1101: google3"") 	public void google4SSHTesting() throws InterruptedException, IOException {  		System.setProperty(""webdriver.gecko.driver"", ""D:\\AutomationTestProject\\setupfiles\\Fusion\\geckodriver.exe""); 		System.setProperty(FirefoxDriver.SystemProperty.DRIVER_USE_MARIONETTE, ""true"");  		LoggingPreferences loggingPrefs = new LoggingPreferences(); 		loggingPrefs.enable(LogType.BROWSER, Level.ALL); 		loggingPrefs.enable(LogType.CLIENT, Level.ALL); 		loggingPrefs.enable(LogType.DRIVER, Level.ALL); 		loggingPrefs.enable(LogType.PERFORMANCE, Level.ALL); 		loggingPrefs.enable(LogType.PROFILER, Level.ALL); 		loggingPrefs.enable(LogType.SERVER, Level.ALL); 		DesiredCapabilities desiredCapabilities = new DesiredCapabilities(); 		desiredCapabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 		desiredCapabilities.setCapability(CapabilityType.LOGGING_PREFS, loggingPrefs);  		FirefoxOptions options = new FirefoxOptions(); 		options.setAcceptInsecureCerts(true); 		options.setLogLevel(FirefoxDriverLogLevel.TRACE); 		options.merge(desiredCapabilities);  		WebDriver driver = new FirefoxDriver(options); 		driver.get(""http://www.google.com""); 		Thread.sleep(5000); 		driver.quit(); 	} 3.	Create TestNG file for above test case 4.	Create POM file for test case execution triggering 5.	Clean and build the project.  Execution Test Cases Using SSH (Command line): 1.	Open command prompt on Windows machine. 2.	Navigate to putty folder for plink command execution (as mentioned below).          **plink -ssh -X uesr123@172.27.30.52 -pw testpwd@123 ""cmd /c cd /d 'D:\AutomationTestProject' '&&' mvn exec:java""**  3.	Above command will establish the SSH connection on Windows machine and triggering POM file execution. Note: SSH execution will be done in background (it will start GeckoDrive and Firefox Browser in background, for verification you can check it Task Manager).  ## Stacktrace  D:\PuTTY>plink -ssh -X usersa@172.25.30.52 -pw testpassword@123 ""cmd /c cd /d 'D:\AutomationTestProject' '&&' mvn exec:java"" [INFO] Scanning for projects... [WARNING] [WARNING] Some problems were encountered while building the effective model for com.package.automation:MavenTestProject:jar:0.0.1-SNAPSHOT [WARNING] 'build.plugins.plugin.(groupId:artifactId)' must be unique but found duplicate declaration of plugin org.apache.maven.plugins:maven-compiler-plugin @ line 160, column 12 [WARNING] [WARNING] It is highly recommended to fix these problems because they threaten the stability of your build. [WARNING] [WARNING] For this reason, future Maven versions might no longer support building such malformed projects. [WARNING] [INFO] [INFO] ------------------------------------------------------------------------ [INFO] Building MavenTestProject 0.0.1-SNAPSHOT [INFO] ------------------------------------------------------------------------ [INFO] [INFO] >>> exec-maven-plugin:1.2.1:java (default-cli) > validate @ MavenTestProject >>> [INFO] [INFO]","closed","C-java,","navinchandrac","2018-05-30T08:42:13Z","2019-08-15T23:09:39Z"
"","6464","selenuim server node 3.14.0 failed to start new session for Edge","## selenium server node failed to start new session for edge OS:  Windows 10  Selenium Version:  3.14.0  Browser:  Edge    Browser Version:   44.17763.1.0 WebDriver version: 10.0.17763  ## Expected Behavior - New session starts for edge browser. ## Actual Behavior - Node fails to create new session with error in log: ``` [04:37:59.452] - Listening on http://127.0.0.1:33791/  [04:37:59.452] - Listening on http://[::1]:33791/  [04:37:59.936] - Invalid capabilities  The following JSON wire protocol command endpoint is not allowed when server is running in W3C mode. GET /shutdown ``` ## Steps to reproduce - 1) Run selenium-standalone-server.jar on VM1  java -jar selenium-server-standalone-3.14.0.jar -debug -role hub 2) Run selenium-standalone-server.jar on VM2 as Edge node java ""-Dwebdriver.edge.driver=C://Windows/System32/MicrosoftWebDriver.exe""  ""-Dwebdriver.edge.driver=C://selenium/driverlog"" -jar selenium-server-standalone-3.14.0.jar -debuf -role node -nodeConfig edge_node_config.json edge_node_config.json contents: ``` js {   ""browserTimeout"": 0,   ""capabilities"": [     {       ""browserName"": ""MicrosoftEdge"",       ""browserVersion"": ""44.17743.1.0"",       ""maxInstances"": 1,       ""plaftormName"": ""win10"",       ""platform"": ""WIN10"",       ""platformName"": ""WIN10"",       ""seleniumProtocol"": ""WebDriver""     }   ],   ""custom"": {   },   ""debug"": true,   ""downPollingLimit"": 2,   ""enablePlatformVerification"": false,   ""host"": ""192.168.1.36"",   ""hubHost"": ""192.168.1.42"",   ""hubPort"": 4444,   ""id"": ""http://192.168.1.36:7890"",   ""maxSession"": 5,   ""nodePolling"": 5000,   ""nodeStatusCheckTimeout"": 5000,   ""port"": 7890,   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""register"": true,   ""registerCycle"": 5000,   ""remoteHost"": ""http://192.168.1.36:7890"",   ""role"": ""node"",   ""servlets"": [   ],   ""timeout"": 1800,   ""unregisterIfStillDownAfter"": 60000,   ""withoutServlets"": [   ] } ```  So this probably related to one of last changes which supported --jwp & --w3c args for MicrosoftWebDriver, but if I manually add --jwp flag to executable path it will fail create instance of EdgeDriverService. Is there any way to strictly define which arguments should be passed to executable of EdgeDriver?","closed","D-edge,","nbquestnb","2018-10-01T12:07:12Z","2021-09-05T08:34:53Z"
"","6562","[Request] Implement By.custom(String) so that we can find elements using AI via Testdotai.","## Requirement -  Expand By class to support a ""custom"" method accepting the string ""`:`"" that maps the elements already ""trained"" with the classifier.  ## Background - During SeleniumConf Chicago I went to Jason Arbon's talk and as many in the audience I got amazed by the whole idea of using AI to find elements in a mobile application using Appium.  So I went to their office hours and asked if they have started any support for Selenium, but their answer was they haven't started anything although it's on their plans to integrate with Selenium as well.  I spent some time searching for any open issues related to this request and I didn't find anything, but if I duplicated somebody's request, feel free to close this one with a reference to that issue.  I noticed that in By.java the java doc reads ""_In order to create your own locating mechanisms, it is possible to subclass this class and override the protected methods as required, though it is expected that all subclasses rely on the basic finding mechanisms provided through static methods of this class_"".  However, I think that given Appium's last version included a new method to support Test.ai Classifier Plugin, everyone using Selenium would get similar benefits if By class gets a new method implemented by the Selenium community instead of having everyone creating different subclasses to accomplish the same goal.  ## References -  Although many of you may have heard Jason's talk at the conference and maybe you're already in touch with him, here I'm adding a few references about the Test.ai Classifier Plugin for Appium: * Repository in Github: https://github.com/testdotai/appium-classifier-plugin * Jason's article in Medium: https://medium.com/testdotai/adding-ai-to-appium-f8db38ea4fac?sk * Jason's talk at the SeleniumConf Chicago: https://youtu.be/qjwbi6ZqYXA?t=12197  ## Note about me -  I'm just a user of Selenium (java) and I have been pushing its use to implement our automated UI tests at work since 2012. I heard about Test.ai for the first time at the conference and I got immediately caught by the potential of the tool and I'd love if I could have it implemented for Selenium too.  Of course, I haven't committed a line of code for the Selenium project so I feel a little shy to send this request in the first place, but I think I would be able to help with this if I get some help in setting up my environment with go and getting someone to pair to discuss ideas and reviewing my code.  If you think someone with more experience in the project should implement this new extension, I still want to contribute to the project, so feel free to contact me back with ideas.  Thanks!","closed","I-enhancement,","eabedrapo","2018-10-21T05:17:13Z","2020-04-25T08:18:29Z"
"","6660","RemoteWebDriver use exist sessionId","## RemoteWebDriver  platform: selenium-remote-driver  Selenium Version:  3.14.0  How to new a RemoteWebDriver with exist session ID? there is no constructor   for ""new RemoteWebDriver(URL,sessionId)"".  here is a ugly code ```  public class ReusableRemoteWebDriver extends RemoteWebDriver implements Serializable {   public ReusableRemoteWebDriver(URL remoteAddress, String oldSessionId) throws ConnectException {     super(remoteAddress, new DesiredCapabilities());     waitForRemoteBrowserReady(remoteAddress);     this.setSessionId(oldSessionId);     this.oldSessionId = oldSessionId;     if (this.getCommandExecutor() instanceof org.openqa.selenium.remote.HttpCommandExecutor) {       try {         HttpCommandExecutor executor =  this.getCommandExecutor();         Feild field =  org.openqa.selenium.remote.HttpCommandExecutor.class.getDeclaredField(""commandCodec"");         field.setAccessible(true);         field.set(executor, new JsonHttpCommandCodec());         Feild field2  = org.openqa.selenium.remote.HttpCommandExecutor.class.getDeclaredField(""responseCodec"");         field2.setAccessible(true);         field2.set(executor, new JsonHttpCommandCodec());       } catch (IllegalArgumentException var3) {            } catch (IllegalAccessException var4) {             }     }      this.startSession(new DesiredCapabilities());     } ``` the code may not work in the future.  ## Expect provide a constructor ""new RemoteWebDriver(URL,sessionId)"", officially","closed","","youwi","2018-11-20T02:33:35Z","2019-08-15T04:10:01Z"
"","6848","[Suggestion] Starting a service in Python bindings is slow","## Question  In my opinion, retrying interval to start the Service in Python bindings is a little too long. We have to wait at least one second. So that, it's good that shorten the retrying interval. Does anyone have a good idea?  ## Motivation As you see in the below, we have to wait 1 second because of `time.sleep(1)` to start the Service. I think it's so long.  https://github.com/SeleniumHQ/selenium/blob/11c25d75bd7ed22e6172d6a2a795a1d195fb0875/py/selenium/webdriver/common/service.py#L131-L135 https://github.com/SeleniumHQ/selenium/blob/11c25d75bd7ed22e6172d6a2a795a1d195fb0875/py/selenium/webdriver/common/service.py#L97-L104","closed","C-py,","iwasa-kosui","2019-01-13T15:59:00Z","2021-09-05T08:21:43Z"
"","6255","[PYTHON] Inside the same tag only one element is scraped","## Python OS:   macOS 10.13.4 Selenium Version:   idk, the latest Browser:   Firefox Headless   Hi, i'm scraping amazon deals webpage and i want to grab elements such as title, price, url , image etc... the title and the image url are bot inside a  tag:  ` `  i scraped them both doing ``` img_layer = dealImage.find_element_by_xpath(""//img[1]"") title = img_layer.get_attribute(""alt"")  urlimg = img_layer.get_attribute(""src"")  ``` but printing them it prints a white line for title, and the correct url for urlimg Browser Version:   idk  ## Expected Behavior - both elements printed ## Actual Behavior - only urlimg gets printed ## Steps to reproduce - ``` driver.get(""AMAZON DEALS PAGE"") 	wait = WebDriverWait(driver, 100) 	wait.until(EC.presence_of_element_located((By.ID, 'dealImage'))) 	for offerta in driver.find_elements_by_class_name(""dealTile""): 		dealImage = offerta.find_element_by_id(""dealImage"") 		url = dealImage.get_attribute(""href"") 		img_layer = dealImage.find_element_by_xpath(""//img[1]"") 		titolo = img_layer.get_attribute(""alt"") 		urlimg = img_layer.get_attribute(""src"") 		print title                  print urlimg ```","closed","","frbuccoliero","2018-08-07T20:48:30Z","2019-08-15T16:09:52Z"
"","6673","UnhandledPromiseRejectionWarning: NoSuchSessionError: invalid session id while quitting the driver.","## NoSuchSessionError: invalid session id * OS:   macOS High Sierra  * Selenium Version:  selenium-webdriver: ^4.0.0-alpha.1  *Browser:   Google Chrome  I am running integration tests using Cucumber and Selenium. All tests are passing but still getting `UnhandledPromiseRejectionWarning: NoSuchSessionError: invalid session id`.   I have figured out that it's happening while calling `this.driver.quit()` in After hook. I have checked the driver's sessionId, it's same in **Before** and **After** hooks. Does anyone have any idea how to fix this issue?  I have posted this issue on stackoverflow but no luck. this is the link [NoSuchSessionError: invalid session id](https://stackoverflow.com/questions/53078373/unhandledpromiserejectionwarning-nosuchsessionerror-invalid-session-id-seleniu)  Package Versions Used: selenium-webdriver: ^4.0.0-alpha.1 chromedriver: ^2.42.0 cucumber: ^5.0.1","closed","C-nodejs,","last-stand","2018-11-21T14:12:03Z","2019-08-14T15:09:54Z"
"","6194","The browser appears to have exited before we could connect.","## Meta: OS: Debian GNU/Linux 9 Selenium Version:  3.13.0 Browser:  Firefox  ## Browser Version:   60.1.0 (linux 64bit)  ## Expected Behavior: Run Firefox from Selenium  ## Actual Behavior:  ``` Traceback (most recent call last):   File ""selen.py"", line 8, in      driver = webdriver.Firefox(firefox_binary=binary, capabilities=capabilities)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 187, in __init__     self.binary, timeout)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/extension_connection.py"", line 52, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/firefox_binary.py"", line 73, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/firefox_binary.py"", line 104, in _wait_until_connectable     ""The browser appears to have exited "" selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details. ```  ## Steps to reproduce - Install latest version of below packages: Selenium: 3.13.0 Firefox: 60.1.0-esr geckodriver: 0.21.0 debian: 9  The python code:  ``` from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary  binary = FirefoxBinary('/root/firefox/firefox-bin') driver = webdriver.Firefox(firefox_binary=binary)  driver.get('http://seleniumhq.org/')  print driver.title  driver.quit() ```  Returns error below:  `selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 255`  And the code below:  ``` from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary  capabilities = webdriver.DesiredCapabilities().FIREFOX capabilities[""marionette""] = False  binary = FirefoxBinary('/root/firefox/firefox-bin') driver = webdriver.Firefox(firefox_binary=binary, capabilities=capabilities)  driver.get('http://seleniumhq.org/')  print driver.title  driver.quit() ```  Returns error below:  ``` Traceback (most recent call last):   File ""selen.py"", line 8, in      driver = webdriver.Firefox(firefox_binary=binary, capabilities=capabilities)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 187, in __init__     self.binary, timeout)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/extension_connection.py"", line 52, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/firefox_binary.py"", line 73, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/firefox_binary.py"", line 104, in _wait_until_connectable     ""The browser appears to have exited "" selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details. ``` I even ran this code with `headless` option, it didn't work either and gave the above error.  What is the issue? how should I solve this problem? Is this because of version mismatch between packages?","closed","D-marionette,","alirezastack","2018-07-23T11:49:25Z","2019-08-15T18:09:35Z"
"","6590","WebDriverException: Message: newSession on Firefox 63.0","## Meta: ### OS:   Ubuntu 16.04.5 LTS  ### Selenium Version:   3.14.1  ### Browser:   Firefox  ### Browser Version:   Mozilla Firefox 63.0  ### Browser Add-ons: uBlock Origin To Google Translate Hoxx VPN Proxy Easy Youtube Video Downloader Express Facebook Container HTTPS Everywhere Greasemonkey Enhancer for YouTube™ DuckDuckGo Privacy Essentials Web Developer 1-Click Downloader (Video or Photo) Violentmonkey English (GB) Language Pack WebRTC Leak Shield User-Agent Switcher and Manager Search by Image - Reverse Image Search No Coin Cookie Editor Dark Theme for Google™ Bloody Vikings! Neat URL Country Flags & IP Whois Tomato Clock View Page Archive & Cache Swift Selection Search Downloads sidebar Open in Reader View Download Notifications WebRTC Protect English (South African) Language Pack Two Factor Authenticator File Icon for GitHub, GitLab and Bitbucket English (CA) Language Pack Breached  ### Geckodriver Version: 0.16.1  ### Python Version: Python 3.5.2  ## Expected Behavior:  Should work like on older version.  ## Actual Behavior: Browser opens and  error occurs.   #### Traceback: ```python Traceback (most recent call last):   File ""selenium_fix.py"", line 2, in      driver = webdriver.Firefox()   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 174, in __init__     keep_alive=True)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: newSession  ```  #### geckodriver.log: ``` 1540670869060	geckodriver	INFO	Listening on 127.0.0.1:37515 1540670883143	geckodriver::marionette	INFO	Starting browser /usr/lib/firefox/firefox.sh with args [""-marionette""] 1540670885498	Marionette	DEBUG	Received observer notification profile-after-change 1540670885970	Marionette	DEBUG	Received observer notification command-line-startup 1540670885970	Marionette	DEBUG	Received observer notification nsPref:changed 1540670885970	Marionette	DEBUG	Init aborted (running=false, enabled=true, finalUIStartup=false)  (firefox:24638): Gtk-WARNING **: Theme parsing error: :1:34: Expected ')' in color definition  (firefox:24638): Gtk-WARNING **: Theme parsing error: :1:77: Expected ')' in color definition 1540670886872	Marionette	DEBUG	Received observer notification toplevel-window-ready 1540670893145	Marionette	DEBUG	Received observer notification sessionstore-windows-restored 1540670893146	Marionette	DEBUG	Waiting for delayed startup... 1540670893362	Marionette	DEBUG	Setting recommended pref app.normandy.api_url to  1540670893362	Marionette	DEBUG	Setting recommended pref app.update.disabledForTesting to true 1540670893363	Marionette	DEBUG	Setting recommended pref security.turn_off_all_security_so_that_viruses_can_take_over_this_computer to true 1540670893364	Marionette	DEBUG	Setting recommended pref browser.safebrowsing.passwords.enabled to false 1540670893365	Marionette	DEBUG	Setting recommended pref toolkit.cosmeticAnimations.enabled to false 1540670893366	Marionette	DEBUG	Setting recommended pref browser.urlbar.suggest.searches to false 1540670893369	Marionette	DEBUG	Setting recommended pref datareporting.policy.dataSubmissionPolicyAccepted to false 1540670893369	Marionette	DEBUG	Setting recommended pref dom.disable_beforeunload to true 1540670893369	Marionette	DEBUG	Setting recommended pref dom.file.createInChild to true 1540670893436	Marionette	INFO	Listening on port 43927 1540670893436	Marionette	DEBUG	Remote service is active 1540670893453	Marionette	DEBUG	Accepted connection 0 from 127.0.0.1:53854 1540670893516	Marionette	TRACE	0 -> [0,1,""newSession"",{""acceptInsecureCerts"":true,""browserName"":""firefox"",""capabilities"":{""desiredCapabilities"":{""acceptInsecureCerts"":true,""browserName"":""firefox""}}}] 1540670893518	Marionette	TRACE	0","closed","","PaziewskiCezary","2018-10-27T19:36:37Z","2019-08-14T06:09:59Z"
"","6096","Python-[selenium.webdriver.support.expected_conditions] Source code for text_to_be_present_in_element(object) and text_to_be_present_in_element_value(object) exists and works but need to enable the documentation","## Meta - Source code for `text_to_be_present_in_element(object)` and `text_to_be_present_in_element_value(object)` exists and works but need to enable the documentation  OS:  N/A  Selenium Version:  Selenium 3.9 Documentation  Browser:  N/A  Browser Version:  N/A  ## Expected Behavior - Though the following expected_conditions are functional and works well:  - `text_to_be_present_in_element(object)` - `text_to_be_present_in_element_value(object)`  But they are not present in the documentation.  ## Actual Behavior -  Documentation for `text_to_be_present_in_element(object)` and `text_to_be_present_in_element_value(object)` must be enabled.  ## Steps to reproduce -  MCVE: [How to extract data from the following html?](https://stackoverflow.com/questions/50906710/how-to-extract-data-from-the-following-html/50906829#50906829)","closed","C-py,","Debanjan-B","2018-06-29T12:13:20Z","2019-08-15T20:09:35Z"
"","6656","Selenium:Python Client- minimize_window(self) function need to be W3C compliant.","## Meta - Selenium:Python Client- [`minimize_window(self)`](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/webdriver/remote/webdriver.html#WebDriver.minimize_window) function need to be W3C compliant. OS:  All Selenium Version:  3.14.0  Browser:  NA  Browser Version:  NA  ## Expected Behavior - The function definition for [`maximizing`](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/webdriver/remote/webdriver.html#WebDriver.maximize_window) the window was adjusted as per the _W3C Recommended Specification_ as follows:      def maximize_window(self):         """"""         Maximizes the current window that webdriver is using         """"""         params = None         command = Command.W3C_MAXIMIZE_WINDOW         if not self.w3c:             command = Command.MAXIMIZE_WINDOW             params = {'windowHandle': 'current'}         self.execute(command, params)          So, the function definition for [`minimizing`](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/webdriver/remote/webdriver.html#WebDriver.minimize_window) the window should have updated as per the _W3C Recommended Specification_  ## Actual Behavior - The function defination for[ `minimizing`](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/webdriver/remote/webdriver.html#WebDriver.minimize_window) the window is still pending to be W3C compliant within the Python Client as is still defined as:      def minimize_window(self):         """"""         Invokes the window manager-specific 'minimize' operation         """"""         self.execute(Command.MINIMIZE_WINDOW)  ## Steps to reproduce -","closed","","Debanjan-B","2018-11-16T10:43:07Z","2019-08-15T05:09:46Z"
"","6119","-Dselenium.LOGGER.level=WARNING don't work, you can't set logging level.","## Meta - linux, mac, logging level OS:   Linux (Ubuntu) and MAC OS Selenium Version:  3.10 - 3.13.0  ## Expected Behavior - `2018-07-05 17:52:03.122:INFO::main: Logging initialized @390ms to org.seleniumhq.jetty9.util.log.StdErrLog 2018-07-05 17:52:03.297:INFO:osjs.Server:main: jetty-9.4.7.v20170914, build timestamp: 2017-11-21T23:27:37+02:00, git hash: 82b8fb23f757335bb3329d540ce37a2a2615f0a8 2018-07-05 17:52:03.338:WARN:osjs.SecurityHandler:main: ServletContext@o.s.j.s.ServletContextHandler@57536d79{/,null,STARTING} has uncovered http methods for path: / 2018-07-05 17:52:03.351:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@57536d79{/,null,AVAILABLE} 2018-07-05 17:52:03.395:INFO:osjs.AbstractConnector:main: Started ServerConnector@1c3a4799{HTTP/1.1,[http/1.1]}{0.0.0.0:4444} 2018-07-05 17:52:03.396:INFO:osjs.Server:main: Started @664ms` ## Actual Behavior - INFO::main: Logging initialized @640ms to org.seleniumhq.jetty9.util.log.StdErrLog ## Steps to reproduce -  Run the following commands :   MAC OS:  java -Dwebdriver.chrome.driver=chromedriver2.40_mac -Dselenium.LOGGER.level=WARNING -jar selenium-server-standalone-3.13.0.jar  LINUX:  java -Dwebdriver.chrome.driver=chromedriver2.40_linux -Dselenium.LOGGER.level=WARNING -jar selenium-server-standalone-3.13.0.jar","closed","C-java,","petrisorionel","2018-07-05T14:55:05Z","2019-08-15T19:09:58Z"
"","6046","py, is_url_connectable check for port , but just localhost url","## Meta - is_url_connectable check for port , but just localhost url OS:  **any SO** Selenium Version:  **Python 3.12.0** Browser:  **any browser** Browser Version:  **doesn't apply**  ## Expected Behavior -  Can check from utils package if an url is connectable to specific **host** *(hostname or ip)* with method `is_url_connectable(port)` adding new parameter `host` ?  or   ¿Maybe rename method to `is_port_connectable` ?  ## Actual Behavior   **Can't** check from utils package if an url is connectable to specific **host** *(hostname or ip)* with method `is_url_connectable(port)`  ## Steps to reproduce -  I have 2 selenium GRIDs working, one at localhost and one at remote IP , why can't use this function to check boths grids, local and remote.  1. Go to original file here and check before to start testcase: https://github.com/SeleniumHQ/selenium/blob/d1f4f5056e58121cea5b132081bec69e66a742dd/py/selenium/webdriver/common/utils.py#L116-L136 3. Execute this testcase ``` python >>> from selenium.webdriver.common.utils import is_url_connectable >>> is_url_connectable(""4444"") False >>> is_url_connectable(""http://ntz-qa.tk:11000"") False >>> is_url_connectable(11000) True ```  ---  Notes:   * Tried to use `find_connectable_ip` but isn't working as expected too, so can't use to resolve my problem ``` python >>> from selenium.webdriver.common.utils import find_connectable_ip >>> find_connectable_ip(""http://qalab.tk:11000"") >>> find_connectable_ip(""http://qalab.tk"") >>> find_connectable_ip(""http://qalab.tk"", port=11000) >>> # was expecting return ip here :( ```  ---  *i can PR this if community are agree :)*","closed","C-py,","netzulo","2018-06-20T13:07:19Z","2019-08-14T18:10:03Z"
"","6363","Python:Selenium 3.13 documentation:Selenium Client Driver - Discrepancy in documentation and source code","## Meta - Discrepancy in the `Python:Selenium 3.13 documentation:Selenium Client Driver` _documentation_ and _source code for_ **selenium.webdriver.firefox.webdriver** as follows:  - [selenium.webdriver.firefox.webdriver](https://seleniumhq.github.io/selenium/docs/api/py/webdriver_firefox/selenium.webdriver.firefox.webdriver.html#module-selenium.webdriver.firefox.webdriver) mentions:        class selenium.webdriver.firefox.webdriver.WebDriver(firefox_profile=None, firefox_binary=None, timeout=30, capabilities=None, proxy=None, executable_path='geckodriver', options=None, log_path='geckodriver.log', firefox_options=None, service_args=None, desired_capabilities=None)  - Where as [sourcecode](https://seleniumhq.github.io/selenium/docs/api/py/_modules/selenium/webdriver/firefox/webdriver.html#WebDriver) mentions:        def __init__(self, firefox_profile=None, firefox_binary=None,                  timeout=30, capabilities=None, proxy=None,                  executable_path=""geckodriver"", options=None,                  log_path=""geckodriver.log"", firefox_options=None):  The two parameters mentioned in the documentation **service_args=None** and **desired_capabilities=None** are missing in the source code.  OS:  All Selenium Version:  3.13 Browser:  N/A  Browser Version:  N/A  ## Expected Behavior - Documentation and source code should be identical.  ## Actual Behavior - Documentation and source code are not identical.  ## Steps to reproduce - N/A","closed","","Debanjan-B","2018-09-04T14:12:32Z","2019-08-15T13:09:41Z"
"","6097","[Selenium Java v3.13.0] Release notes mentions allowing GSON to be   removed from our dependencies but gson-2.8.4 still present","## Meta - [Release notes](https://raw.githubusercontent.com/SeleniumHQ/selenium/master/java/CHANGELOG) mentions `allowing GSON to be   removed from our dependencies` but **gson-2.8.4** still present in _Selenium Java Clients_.  OS:  Windows Selenium Version:  3.13.0 Browser:  N/A  Browser Version:  N/A  ## Expected Behavior - **gson-2.8.4** shouldn't have been included in the _Selenium Java Clients v3.13.0_.  ## Actual Behavior - **gson-2.8.4**  have been included in the _Selenium Java Clients v3.13.0_.  ## Steps to reproduce -  gson-2.8.4 ![gson-2 8 4](https://user-images.githubusercontent.com/26503213/42092137-74c2e116-7bc5-11e8-8515-50814be04a97.png)","closed","C-java,","Debanjan-B","2018-06-29T12:24:41Z","2020-06-24T22:48:02Z"
"","5830","Wrong documentation for method numberOfElementsToBeMoreThan() of class org.openqa.selenium.support.ui.ExpectedConditions","## Meta - Selenium Version:     Javadoc for class org.openqa.selenium.support.ui.ExpectedConditions -> method numberOfElementsToBeMoreThan() is wrong. This seems to be a typo It seems the javadoc is exactly same as what is for the method numberOfElementsToBe() and the author forgot to edit it.  ## Actual Javadoc - public static ExpectedCondition numberOfElementsToBeMoreThan(By locator,                                                                                          java.lang.Integer number) **An expectation for checking number of WebElements with given locator** Parameters: locator - used to find the element number - **used to define exact number of elements** Returns: Boolean **true when size of elements list is equal to defined** ## Expected Behavior - public static ExpectedCondition numberOfElementsToBeMoreThan(By locator,                                                                                          java.lang.Integer number) **An expectation for checking number of WebElements with given locator being more than defined number** Parameters: locator - used to find the element number - **used to define minimum number of elements** Returns: Boolean **true when size of elements list is more than defined**  ## Steps to reproduce -  https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/support/ui/ExpectedConditions.html#numberOfElementsToBeMoreThan-org.openqa.selenium.By-java.lang.Integer-  https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/support/ui/ExpectedConditions.html  https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/support/ui/ExpectedConditions.java","closed","C-docs,","JENISKAVADIYA","2018-04-25T16:53:18Z","2019-08-16T03:09:38Z"
"","6574","IEServerDriver PageLoadTimeout after closing one ModelDialog triggers a new ModelDialog.","## Meta - OS: Windows 8.1 Selenium Version: selenium-java latest (3.14.0) IEDriverServer Version(s) - Win32 3.14.0 Browser: Internet Explorer Browser Version: 11.0.9600.19101  ## Expected Behavior -  Expect the disappearance of the Modal Dialog to allow the test to continue, even if the application under test immediately opened a new Model Dialog.  ## Actual Behavior -  Clicking a button that closes the dialog eventually fails with a `TimeoutException: Timed out waiting for page to load`.   Looking in the [IEServerlog.log](https://github.com/SeleniumHQ/selenium/files/2513650/IEServerlog.log) it repeats a loop around `HtmlDialog::Wait`  ``` iedriver\iecommandexecutor.cpp(801) Creating wait thread with deferred response of `{ ""value"" : null }` iedriver\iecommandexecutor.cpp(558) Entering IECommandExecutor::WaitThreadProc iedriver\iecommandexecutor.cpp(181) Entering IECommandExecutor::OnWait iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser iedriver\htmldialog.cpp(126) Entering HtmlDialog::Wait iedriver\htmldialog.cpp(100) Entering HtmlDialog::IsValidWindow iedriver\htmldialog.cpp(188) Entering HtmlDialog::GetTopLevelWindowHandle iedriver\htmldialog.cpp(193) Entering HtmlDialog::GetActiveDialogWindowHandle iedriver\htmldialog.cpp(188) Entering HtmlDialog::GetTopLevelWindowHandle iedriver\iecommandexecutor.cpp(829) Entering IECommandExecutor::IsAlertActive iedriver\htmldialog.cpp(193) Entering HtmlDialog::GetActiveDialogWindowHandle iedriver\htmldialog.cpp(188) Entering HtmlDialog::GetTopLevelWindowHandle iedriver\iecommandexecutor.cpp(843) No alert handle is found iedriver\iecommandexecutor.cpp(801) Creating wait thread with deferred response of `{ ""value"" : null }` [...] ``` ## Steps to reproduce -  See [Attached code](https://gist.github.com/JonathanHallKJR/adefa242cbdda98b30ba48ad82b4b3d3#file-seleniumbugreport-java-L51)  While running it serves 3 pages: * http://localhost:8080/ - main Page with test button and textarea for log messages. * http://localhost:8080/popup/promptWindow - first dialog. * http://localhost:8080/popup/areYouSure - second dialog.  Expected Flow would be: 1. User clicks Test button on the main page.   * which opens a first dialog with `window.showModalDialog` passing a callback function in via `window.dialogArguments[0]`. 2. User clicks a button on the first dialog.    * which triggers calls to `window.close()` then `callback(answer)`   * first callback logs the answer and opens the second modal dialog.    :warning: NOTE: When running in automation this is where it fails to detect the first dialog has gone. 3. User clicks a button on the second dialog.   * which triggers calls to `window.close()` then `callback(answer)`   * second callback logs the answer.  ## Analysis Originally discovered while testing a real application in which the automation would fail during a `driver.getWindowHandles()` (after the `element.click()`).  The IEDriverServer logs then showed a similar `HtmlDialog::Wait` loop above with a different deferred response.  :warning: If you catch the TimeoutException and call `driver.getWindowHandles()` there are **three** window handles returned despite only two being visible to the user.  It may be possible to fix this in the application under test since the either of the following prevent replication (however the code as is works for humans and is only causing problems for automation). 1. If the callback doesn't trigger a new `window.showModalDialog`. 2. If the callback is called before `window.close()` (but two dialogs are open at the same time)","closed","","JonathanHallKJR","2018-10-25T06:57:29Z","2019-08-15T07:09:43Z"
"","6527","IEDriverServer crashes with element.getCssValue(""z-index"")","## Meta - OS: Windows 8.1 Selenium Version:  selenium-java latest (3.14.0)  IEDriverServer Version(s) - Win32 3.14.0 Browser:  Internet Explorer Browser Version:  11.0.9600.19101  ## Expected Behavior - Expect the z-index value to be returned and to be able to continue using driver for subsequent calls.  ## Actual Behavior - IEDriverServer crashes a java.net.ConnectException is thrown.  Attached [log.3.14.txt](https://github.com/SeleniumHQ/selenium/files/2471760/log.3.14.txt)  ## Steps to reproduce The following code triggered the issue.  ```java     public static void main(String[] args ) {         Handler c = new ConsoleHandler();         c.setLevel(Level.ALL);         Logger logger = Logger.getLogger(RemoteWebDriver.class.getName());         logger.setLevel(Level.ALL);         logger.addHandler(c);          System.setProperty(""webdriver.ie.driver.loglevel"",""TRACE"");          final WebDriver driver = new InternetExplorerDriver();         driver.get(""https://www.google.com"");         final WebElement element = driver.findElement(By.xpath(""//input[@name='q']""));         System.out.println(element.getCssValue(""z-index""));         driver.quit();     } ```  ## Analysis Discovered while upgrading IEDriverServer, so tried a few versions to narrow down the issue.  :heavy_check_mark:  IEDriverServer.exe version 3.8.0  - Works as expected. :heavy_check_mark:  IEDriverServer.exe version 3.10.0  - Works as expected. :heavy_multiplication_x: IEDriverServer.exe version 3.11.0 - Replicates issue. :heavy_multiplication_x: IEDriverServer.exe version 3.14.0 (Latest) - Replicates issue.  :heavy_multiplication_x: The `element.getCssValue` call fails with ""z-index"" or ""zIndex""  :heavy_check_mark:  but works for other properties (eg ""width"" which returns a string)  :warning: While investigating the last log message before Exception (`CreateAnonymousFunction`) and debugging the anonymous function with IE Developer Tools. I could see it was returning an integer value, for z-index, changing that to a string meant the call returned without error.","closed","","JonathanHallKJR","2018-10-12T06:04:24Z","2019-08-15T08:09:43Z"
"","5887","Unable to create new remote session - Internet Explorer","## Meta - OS: Windows 8.1 OS Version: 6.3 Java Version: 1.8.0_171 Selenium Version: 3.12.0 Browser: Internet Explorer Browser Version: 11.0.9600.19003 Executables used: IEDriverServer 3.12.0 (32-bits and 64bits)  ## Actual Behavior - When i try execute codecept i get the following error:  ``` c:\codeception\vendor\bin>codecept run --env ie Codeception PHP Testing Framework v2.4.1 Powered by PHPUnit 7.1.4 by Sebastian Bergmann and contributors.  ←[1mAcceptance (ie) Tests (1) ←[22m--------------------------------------------- --------- ←[31;1mE←[39;22m ←[35;1mFirstCest:←[39;22m Frontpage works --------------------------------------------------------------------------------   ←[1mUnit Tests (0) ←[22m-------------------------------------------------------- --------- --------------------------------------------------------------------------------    Time: 194 ms, Memory: 10.00MB  There was 1 error:  --------- 1) ←[35;1mFirstCest:←[39;22m Frontpage works ←[37;41;1m Test ←[39;49;22m tests\acceptance\FirstCest.php:frontpageWorks ←[37;41;1m                         ←[39;49;22m ←[37;41;1m  [Facebook\WebDriver\Exception\SessionNotCreatedException] Unable to create session from org.openqa.selenium.remote.NewSessionPayload@332e93a5 Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.9 36Z' System info: host: 'LPT-FA3423', ip: '192.168.105.108', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_171' Driver info: driver.version: unknown  ←[39;49;22m ←[37;41;1m                         ←[39;49;22m #1  C:\codeception\vendor\facebook\webdriver\lib\Exception\WebDriverException.ph p:154 #2  C:\codeception\vendor\facebook\webdriver\lib\Remote\HttpCommandExecutor.php: 320 #3  C:\codeception\vendor\facebook\webdriver\lib\Remote\RemoteWebDriver.php:126 #4  C:\codeception\vendor\symfony\event-dispatcher\EventDispatcher.php:212 #5  C:\codeception\vendor\symfony\event-dispatcher\EventDispatcher.php:44  ←[37;41mERRORS!←[0m ←[37;41mTests: 1←[0m←[37;41m, Assertions: 0←[0m←[37;41m, Errors: 1←[0m←[37;41m.← [0m  ```  ## Steps to reproduce -  1. Run Selenium `c:\codeception\vendor\bin\tests>java -jar ""selenium-server-standalone-3.12.0.jar""` 2.  Run Driver `c:\codeception\vendor\bin\tests>IEDriverServerX64.exe` or `c:\codeception\vendor\bin\tests>IEDriverServerX64.exe` 3. Run Codecept `c:\codeception\vendor\bin>codecept run --env ie`  **acceptance.suite.yml**  ``` class_name: AcceptanceTester env:     chrome:        modules:         enabled:           - WebDriver         config:           WebDriver:                url: 'https://localhost/'                browser: chrome                port: 5555     firefox:        modules:         enabled:           - WebDriver         config:           WebDriver:                url: 'https://localhost/'                browser: firefox                port: 5555                ignoreSslErrors: true                sslProtocol: any                debug: true     ie:        modules:         enabled:           - WebDriver         config:           WebDriver:                url: 'https://localhost/'                browser: iexplore                port: 4444 ```","closed","","PeterJason","2018-05-11T15:45:39Z","2019-08-14T09:09:46Z"
"","5892","Getting ""Unable to receive message from renderer"" in chrome","## Meta - OS: Windows 7 Selenium Version: 3.7.1 Browser: Chrome Browser Version: 66 Chrome driver version : 2.35 (tried 2.38 version too)  Following are the errors: ================ org.openqa.selenium.WebDriverException: disconnected: **Unable to receive message from renderer**   (Session info: chrome=66.0.3359.170)   (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:01:39.354Z' System info: host: 'RVSKCH19LT', ip: '169.254.96.120', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_92' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.38.552522 (437e6fbedfa876..., userDataDir: C:\Users\sanojs\AppData\Loc...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 66.0.3359.170, webStorageEnabled: true} Session ID: ac61ff07cfc0e337b6d74131628d0224 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:279) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83) 	at com.test.all.TestSuiteClass.Module_TestCase1(TestSuiteClass.java:110) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:744) 	at org.testng.TestRunner.run(TestRunner.java:602) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380) 	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39) 	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:414) 	at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source)","closed","","sanojqa","2018-05-14T06:41:54Z","2019-08-16T01:10:00Z"
"","6193","Click is Not Getting Performed","## Meta - OS: Windows 7  Selenium Version: Selenium 3.13  Browser: Internet Explorer  Browser Version: 11.0.9600.1908015 (64 Bit) and 10.0.9200.17609 (64 Bit)  Driver : IEDriverServer 3.12; IEDriverServer 3.13  ## Expected Behavior - Performing some steps on [this ](https://glip.com/hp_b5)url  ## Actual Behavior - While performing action, click is highlighting object but click action is not getting performed.  ## Steps to reproduce - Steps :: 1> open [This](https://glip.com/hp_b5) 2> Click on ""Product"" 3> Click on ""Facebook link Icon"" situated on the Bottom right corner on the page. (A  New Window Opens, Don't switch on this) 4> Click on ""Pricing"" // Here click is not getting performed if above window is on top, While clicking by javascript it is getting pass.  Please find below code to reproduce the problem:: ```` DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer(); 		capabilities.setCapability(""native events"", false); 		capabilities.setCapability(""requireWindowFocus"", true); 		capabilities.setCapability(""ignoreProtectedModeSettings"", true); 		capabilities.setCapability(""unexpectedAlertBehaviour"", ""ignore"");		      capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 		capabilities.setCapability(""handlesAlerts"", false); ```  		WebDriver driver = new InternetExplorerDriver(capabilities);  		driver.get(""https://glip.com/hp_b5""); 		System.out.println(""Title is as :: "" + driver.getTitle());  		// click on product 		driver.findElements(By.xpath(""/html/body/div[2]/header/div/nav/ul/li[1]/a"")).get(0).click();  		Thread.sleep(5000);  		// click on facebook 		// driver.findElements(By.xpath(""/html/body/div[2]/footer/div/div[2]/ul/li[1]"")).get(0).click(); 		WebElement ele1 = driver.findElement(By.xpath(""/html/body/div[2]/footer/div/div[2]/ul/li[1]"")); 		new IECrashIssue2().scrollIntoView(ele1); 		ele1.click();  		Thread.sleep(5000);  		// click on pricing 		List ele = driver.findElements(By.xpath(""/html/body/div[2]/header/div/nav/ul/li[2]/a"")); 		System.out.println(ele.size()); // Action is not performed here, It is clicking by javascript 		ele.get(0).click();  		// JavascriptExecutor jse = (JavascriptExecutor) driver; 		// jse.executeScript(""arguments[0].click();"", ele.get(0));  		Thread.sleep(15000); 		driver.close(); 		driver.quit(); 	}  	public void scrollIntoView(WebElement ele) { 		System.out.println(""scrollIntoView""); 		try { 			((JavascriptExecutor) Finder.findWebDriver()).executeScript(""arguments[0].scrollIntoView()"", ele); 		} catch (Exception e) { 			Log.debugErr(e); 		} 	}`","closed","D-IE,","TARIFABBAS","2018-07-23T11:04:58Z","2019-08-15T14:09:41Z"
"","6140","IEDriverServer: Did not find any dialogs after dialog timeout","## Meta - OS: Windows 10 & Windows 7 Selenium Version: 3.12 Browser: Internet Explorer 11 IEDriverServer: 3.12.0.4, 3.13.0.2 (32-bit)  I randomly get timeout when trying to upload file with IE. Screenshot is created shortly after timeout where dialog can be seen. I have tried to increase file upload dialog timeout, but it did not help (it did wait longer).  Is there any idea what to do, to get more info or workaround? Is it possible that sometimes dialog is opened from another IE process than expected or something like that?  ## Expected Behavior - Selected file to upload.  ## Actual Behavior - Random timeout: sendkeyscommandhandler.cpp(169) Clicking upload button and starting to handle file selection dialog sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(312) Found no dialogs as children of parent window sendkeyscommandhandler.cpp(572) Did not find any dialogs after dialog timeout  ## Steps to reproduce - Upload file many times?","closed","D-IE,","LightBit","2018-07-11T06:26:51Z","2019-08-14T13:09:41Z"
"","6621","Selenium + IE11 + Outlook web: IEDriverServer crashed after click on Setting Button from Outlook web","## Meta - OS: Windows 10  Browser: Internet Explorer 11 C#, NUnit, Selenium WebDriver    ## Expected Behavior - After click on Settings button It should be possible to continue do some actions on the page  ## Actual Behavior - After click on Setting button - IEDriverServer is stopped working and no any other actions can be executed I've executed my script from VS by NUnit (script is implemented with C# and Selenium WebDriver) After Click on 'More mail Actions' for email IE is crashed and script is also failed with the following output: ## Output - Message: System.Reflection.TargetInvocationException : Exception has been thrown by the target of an invocation.   ----> OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL http://localhost:65204/session/1c48d735-6c80-435e-8faa-7dc6a4fe024b/element/4504e080-4c71-47d1-8390-3db745daef10/click timed out after 60 seconds.   ----> System.Net.WebException : The request was aborted: The operation has timed out.  Notice: this output I've got after any actions for opened email in outlook ( reply, forward, settings etc)  ## Steps to reproduce - Go to https://outlook.office.com/owa/ Login as User Open some email from Inbox folder Click 'More mail Actions' button Try to click 'Get Add-Ins' from sub menu  ## The part of code - Controls defined:         // More Mail Actions Button         [FindsBy(How = How.XPath, Using = ""//button[contains(@aria-label, 'More mail actions') and           @role='menuItem']"")]         public IWebElement MoreMailActionsButton { get; set; }          // Get Add-Ins Button         [FindsBy(How = How.XPath, Using = ""//span[text()='Get Add-ins']"")]         public IWebElement GetAddInsButton { get; set; }  Actions: MoreMailActionsButton.Click(); GetAddInsButton.Click();","closed","R-awaiting answer,","oprilepin","2018-11-05T17:00:24Z","2019-08-14T15:09:51Z"
"","5972","executeAsyncScript blocks other actions from occuring","## Meta - OS: Windows 10 Selenium Version: selenium-webdriver@4.0.0-alpha.1 Browser: Firefox (GeckoDriver) Browser Version: 59  ## Expected Behavior -  Suppose you have a long-running script injected into the page:  ```javascript const doLongWork = async (browser) => {     await browser.executeAsyncScript((callback) => {         setTimeout(callback, 3000);     }); }; ```  ...and while this runs, you'd like to do other things:  ```javascript const myActions = async (browser) => {     const pendingLongWork = doLongWork(browser);           await (await browser.findElement(By.className(""myClass""))).click();      await pendingLongWork; }; ```  I would expect that the existence of a pending `executeAsyncScript` call wouldn't block other actions from occurring in the meantime.  ## Actual Behavior -  Other asynchronous WebDriver calls such as `.findElement` and `.click` block until the pending `executeAsyncScript`'s callback is fired.  ## Steps to reproduce -  1. Create a new browser object 2. Run the `myActions` method above, including `doLongWork`  ## Use case -  For example, https://stackoverflow.com/questions/37271745/is-it-possible-to-observe-postmessages-using-webdriver-js.  Edit: also found https://stackoverflow.com/questions/37052804/selenium-async-script-in-own-thread-blocks-other-scripts?rq=1  It can be useful to poll with long-running scripts for events on the page.","closed","","JoshuaKGoldberg","2018-06-01T03:19:26Z","2019-08-16T00:09:38Z"
"","5984","Missing .headless() equivalent for Edge (Node)","## Meta - OS: Windows 10 Selenium Version: selenium-webdriver@4.0.0-alpha.1 Browser: Edge Browser Version: *  ## Expected Behavior -  Chrome and Firefox allow a `.headless()` method to indicate the browser should run in headless mode.  ## Actual Behavior -  [`edge.js`](https://github.com/SeleniumHQ/selenium/blob/e060906bbdbd954da21883f7f6fdd71cb48db3dd/javascript/node/selenium-webdriver/edge.js) has no mention of ""headless"" at all.","closed","C-nodejs,","JoshuaKGoldberg","2018-06-03T21:49:10Z","2019-08-16T00:09:38Z"
"","5983","Missing ServiceBuilder equivalent for IE (Node)","## Meta - OS: Windows 10 Selenium Version: selenium-webdriver@4.0.0-alpha.1 Browser:  Internet Explorer Browser Version:  11  ## Expected Behavior -  I'd like to configure a custom driver location for `IEDriverServer.exe`. Other browsers export a `ServiceBuilder` you can use:  ```javascript const seleniumFirefox = require(""selenium-webdriver/firefox"");  builder.setFirefoxService(new seleniumFirefox.ServiceBuilder(""./path/to/geckoDriver.exe"")); ```  ## Actual Behavior -  No equivalent `ServiceBuilder` class or method that allows a custom path to `IEDriverServer.exe` is provided.  [`locateSynchronously`](https://github.com/SeleniumHQ/selenium/blob/e060906bbdbd954da21883f7f6fdd71cb48db3dd/javascript/node/selenium-webdriver/ie.js#L311) only allows checking for the user's path.  Relevant: https://stackoverflow.com/questions/35587825/internet-explorer-driver-without-the-need-of-path-variable","closed","OS-windows,","JoshuaKGoldberg","2018-06-03T20:22:21Z","2019-08-15T16:10:02Z"
"","6568","Impossible to create Appium Native Driver in selenium-webdriver of version 4.0.0-alpha1 (nodejs)","## Meta - OS: Windows 10 Selenium Version: 4.0.0-alpha1 (nodejs) Browser: Appium Native (Andoid 7 Emulator)  ## Expected Behavior - Create an AndroidDriver  ## Actual Behavior - ```js (node:10872) UnhandledPromiseRejectionWarning: TypeError: Target browser must be a string, but is ; did you forget to call forBrowser()?     at Builder.build (node_modules\selenium-webdriver\index.js:574:13)     at AndroidNativeExample.js:23:6 ```  ## Steps to reproduce - ```js const capabilities = new Capabilities(); capabilities.set('platformName', 'Android'); capabilities.set('deviceName', 'Android Emulator'); capabilities.set('platformVersion', '7.0'); capabilities.set('app', 'http://saucelabs.com/example_files/ContactManager.apk'); capabilities.set('clearSystemFiles', true); capabilities.set('noReset', true);  const driver = await new Builder()     .withCapabilities(capabilities)     .usingServer('http://127.0.0.1:4723/wd/hub')     .build(); ```  ## How to fix - `build` method of `Builder` class uses next code ```js if (typeof browser !== 'string') {       throw TypeError(           `Target browser must be a string, but is ;` +           ' did you forget to call forBrowser()?');     } ``` I propose to replace it with ```js if (typeof browser !== 'string' && !capabilities.get('app')) {       throw TypeError(           `Target browser must be a string, but is ;` +           ' did you forget to call forBrowser()?');     } ```","closed","I-stale,","astappiev","2018-10-22T17:27:08Z","2021-12-04T00:06:28Z"
"","5852","Unable to open IE 11 using selenium","## Meta - OS: Windows 10 Selenium Version: 3.11.0 Browser: Internet Explorer Browser Version: 11  Expected Behavior - With standalone selenium hub & node on Windows 10, IE 11 should launch with the latest IEDriverServer.  Actual Behavior - The node fails with:  Unable to create new remote session. desired capabilities = Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}], required capabilities = Capabilities [{}]\nBuild info: version: 'unknown', revision: '5234b32', time: '2017-03-10 09:00:17 -0800'\nSystem info: host: '#######', ip: '##.#.##.###', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171'\nDriver info: driver.version: InternetExplorerDriver","closed","","NikhilAnadkar","2018-05-02T09:51:00Z","2019-08-16T04:09:35Z"
"","6059","Internet Explorer and Chrome respond to isDisplayed() differently","## Meta - OS: Windows 10 Selenium Version: 3.11.0 Browser: IE11, Chrome Browser Version: IE: 11.1.029.15063.0 (64-bit) Chrome: Version 67.0.3396.87 (Official Build) (64-bit)  ## Expected Behavior Chromedriver and IEServerDriver should always give the same result when `isDisplayed()` is run agains the same element.  ## Actual Behavior In Chrome we get `false`. In IE we get `true`. (The expected behavior is `false`. What a shocker, Internet Explorer is causing problems.)  ## Steps to reproduce See [this repository](https://github.com/GitSage/selenium-is-displayed-ie-bug) for an SSCCE. In short, given this html:  ```    	 		 			 		 	    ```  Test whether the button is displayed in both IE and Chrome:  ``` const {Builder, By} = require('selenium-webdriver');  (async () => { 	let locator = By.id('should-not-be-displayed');  	let ieDriver = await new Builder() 		.forBrowser('internet explorer') 		.build();  	await ieDriver.get('http://127.0.0.1:8080/selenium_bug.html'); 	await ieDriver.navigate().refresh(); // ie likes to cache the page even between sessions 	let isDisplayedIE = await ieDriver.findElement(locator).isDisplayed();  	console.log(`IE isDisplayed    : ${isDisplayedIE}`);  	let chromeDriver = await new Builder() 		.forBrowser('chrome') 		.build();  	await chromeDriver.get('http://127.0.0.1:8080/selenium_bug.html'); 	let isDisplayedChrome = await chromeDriver.findElement(locator).isDisplayed();  	console.log(`Chrome isDisplayed: ${isDisplayedChrome}`);  	await ieDriver.quit(); 	await chromeDriver.quit(); })(); ```  This outputs:  ``` IE isDisplayed    : true Chrome isDisplayed: false ```  Every part of this html must be as it is for the bug to occur. Specifically, the html must follow these rules:  * A grandparent div hides the button with the styles `height: 0; overflow: hidden;` * A parent div is `display: flex;` * The button is `position: relative;` * The button contains a span with `style=""position: absolute; left: 0; top: 0; bottom: 0; right: 0;""` (see [this related bug](https://github.com/SeleniumHQ/selenium/issues/6058))","closed","I-stale,","ben-yocum","2018-06-21T21:18:59Z","2021-12-06T00:07:08Z"
"","6020","Selenium IDE - Cannot clone/duplicate tests. Instructions in #6276 don't work.","## Meta - OS: Windows 10 Selenium Version:  IDE 3.0.3  Browser:   Chrome 67.0.3396.87 (Official Build) (64-bit) Firefox 60.0.2 (64bit)  ## Expected Behavior - Objective: Duplicate a test case and alter a few params. Issue 6276 from archive (https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/6276#issuecomment-192136639) states that we should either:  1. Select all the commands in the test case and copying them (ctrl-C or Command-C or Edit->Copy) and pasting them in a new test case! **Expected:** IDE would allow you to *Select all the commands in the test case*  or   2. You can also go to the ""source"" view and copying all the text there and paste it in a new one.  **Expected:** *Source View* to exist or, when loading a .side file, IDE would warn you the IDs are duplicated and *offer the option* to fix that (assigning new IDs to all elements)  ## Actual Behavior - 1. You cannot select more than one command (test step). and 2. When you copy and paste JSON elements, the IDs are duplicated. IDE stops working correctly. Displays all tests selected. Changes in one test is replicated to all other tests, etc  ## Steps to reproduce - ### For case 1 1. Open Selenium IDE 2. Create 3 test steps (content doesnt matter) 3. Copy all commands - **ISSUE* You cannot select more than one command.  ### For case 2 1. Open Selenium IDE 2. Create 3 test steps (content doesnt matter) 3. Save project to a .side file 4. Open the file in a text (JSON) editor 5. Duplicate a Test 6. Save file 7. Load on IDE - **ISSUE** IDE stops working correctly. Displays all tests selected. Changes in one test is replicated to all other tests, etc","closed","","lucianobargmann","2018-06-14T12:18:51Z","2019-08-15T22:09:54Z"
"","6234","Message: OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL when using Chrome Headles","## Meta - OS: Windows 10 Selenium Version:  3.13.1 Browser:  Chrome Headless  Browser Version:  68.0.3440.84 64bit  ## Expected Behavior - Tests run in Headless mode ## Actual Behavior -  ## Steps to reproduce - I am starting chromedriver like this:  ``` public static IWebDriver GetDriver()         {             var driverName = ConfigurationManager.AppSettings[""Driver""];             IWebDriver driver;              switch (driverName.ToLowerInvariant())             {                 case ""chrome"":                     var options = new ChromeOptions();                      if (ConfigurationManager.AppSettings[""Headless""] == ""true"")                     {                         options.AddArgument(""window-size=1920,1080"");                         options.AddArgument(""headless"");                         options.AddArgument(""disable-gpu"");                         options.AddArgument(""no-sandbox"");                     }                      driver = new ChromeDriver(options);                     break;                 default:                     throw new NotImplementedException();             }              return driver;         }  ```  When I use Chrome standalone everything works ok. When use headless I get timeout: ![image](https://user-images.githubusercontent.com/37550896/43522841-d1c68b26-959a-11e8-9407-7336587f3684.png)  ![image](https://user-images.githubusercontent.com/37550896/43522999-4efde030-959b-11e8-8744-fb969b3c8a6d.png)","closed","D-chrome,","ghost","2018-08-01T12:56:59Z","2020-05-20T23:02:58Z"
"","6662","Wrong user agent header in shutdown request","## Meta - OS: Ubuntu Linux 18.x Selenium Version: Latest available revision on `master`: cb8aa77853496e052c61bbed3952d8c86ef247af Browser: Chrome Browser Version:   70.x Driver variant: Ruby  ## Expected Behavior - When the Selenium driver shuts down, it should send a shutdown request with `User-Agent: selenium/`.  ## Actual Behavior - When the Selenium driver shuts down, it sends a shutdown request with `User-Agent: Ruby`.  ## Steps to reproduce - I haven't been able to write one. Will provide if anyone is interested, but I believe that I have found the specific line where the user agent isn't being set correctly:  https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/common/service.rb#L128","closed","C-rb,","mzedeler","2018-11-20T15:44:36Z","2019-08-14T12:09:38Z"
"","6104","Selenium Python bindings logging has hanged between 3.12.0 and 3.13.0","## Meta - OS: Ubuntu 18.04 LTS with Python 2.7.15 Selenium Version: 3.12.0 and 3.13.0 Browser: Chrome 67.0.3396.99  ## Expected Behavior - When I have this code: ``` import logging  from selenium import webdriver  logging.basicConfig(level=logging.DEBUG) driver = webdriver.Chrome() driver.get(""http://www.python.org"") driver.save_screenshot('~/tmp.png') driver.quit() ``` Then in Selenium 3.12.0, the logging will log the messages to the Chromedriver direction and generic `selenium.webdriver.remote.remote_connection:Finished Request` message when response is received.  ## Actual Behavior  But in Selenium 3.13.0 logging will also log the response messages received from the Chromedriver and the `selenium.webdriver.remote.remote_connection:Finished Request` message.   This causes logs to be quite big when example `save_screenshot`method is called, because the response message contains the coded screen shot. In [Selenium 3.12.0](https://github.com/SeleniumHQ/selenium/files/2156518/selenium3-12-0.log) log size is about 1.3Kb and in [Selenium 3.13.0](https://github.com/SeleniumHQ/selenium/files/2156519/selenium3-13-0.log) log size is about 176Kb, which is almost 90 times more. Was the change indented (and permanent) and I should reserve (a lot) more space for my tests runs? Or was this by accident and could be fixed in the next release?  ## Steps to reproduce - Run the code snipped from above.","closed","C-py,","aaltat","2018-07-02T19:33:17Z","2019-08-15T16:09:57Z"
"","6073","Can't handle Modal window with Edge Driver","## Meta - OS: Ubuntu 16.04.1 Selenium Version:  3.12.0 Browser:  Edge 16.16299  I am writing tests and there are some places that when I click on a button, a new browser (as in New modal window) will be opened. I have already handled them by using webDriver.switchTo().window(windowHandle), and it works fine on 3 browsers Chrome, Firefox and Internet Explorer 11.  Now I am trying to run these tests on Microsoft Edge. It works as expected, except when it comes to modal windows:  - When I let the tests run to the point I click on the button, I saw that the Modal Window was opened and disappeard in a blink, it was not in the background as well.  - When I debug the tests to the click() action, then the Modal window was opened and stayed there after the click(), and the tests could continue.  This is how I create EdgeDriver. I use Remote Driver: ``` EdgeOptions options = new EdgeOptions();             webDriver = new RemoteWebDriver(new URL(remoteURL), options); ``` This is click action: ``` webDriver.findElement(By.name(""firstReport"")).click(); ``` This is html of this button:         ![download](https://user-images.githubusercontent.com/12949146/41925628-6d65386a-796d-11e8-8359-4502a5163415.png) I also tried with JavaScriptExecutor and Actions, but the same result. it seems like when the tests run, something modifies display property but I am not sure if it is Selenium or EdgeDriver  I already created a ticket for Edge Team, but I would like to ask here if someone knows a solution for it","closed","","louis57","2018-06-26T16:22:33Z","2019-08-15T21:09:37Z"
"","6315","Setting Desired Capability using SafariOptions.setUseTechnologyPreview(true) stop working in selenium 3.14","## Meta - OS: macOS Sierra 10.12.6 Selenium Version: v3.14 (Java client) Browser: Safari Technology Preview Browser Version: Release 43 (Safari 11.1, WebKit 12605.1.12)  ## Expected Behavior - I've been running my tests that required clicking on canvas with the following configuration till the test env got updated to Selenium 3.14 DesiredCapabilities capability = new DesiredCapabilities();  			if (browser.equalsIgnoreCase(""safari"")) { 				capability.setCapability(""browserstack.safari.driver"", ""2.48""); 				capability.setCapability(""browserstack.safari.enablePopups"", true); 				SafariOptions sOptions = new SafariOptions(); 				sOptions.setUseTechnologyPreview(true); 				SafariOptions.fromCapabilities(capability);","closed","C-java,","aglo65","2018-08-21T21:42:22Z","2019-08-15T13:09:51Z"
"","5985","Missing .headless() equivalent for Safari (Node)","## Meta - OS: macOS * Selenium Version: selenium-webdriver@4.0.0-alpha.1 Browser: Safari Browser Version: *  ## Expected Behavior -  Chrome and Firefox allow a `.headless()` method to indicate the browser should run in headless mode.  ## Actual Behavior -  [`safari.js`](https://github.com/SeleniumHQ/selenium/blob/e060906bbdbd954da21883f7f6fdd71cb48db3dd/javascript/node/selenium-webdriver/safari.js) has no mention of ""headless"" at all.","closed","C-nodejs,","JoshuaKGoldberg","2018-06-03T21:52:31Z","2019-08-15T21:09:51Z"
"","6074","Firefox headless mode windowSize() option doesn't work","## Meta - OS: Mac OS  Selenium Version: 4.0.0-alpha.1  Browser: Firefox (using GeckoDriver)   Browser Version:  61.0   ## Expected Behavior - Setting the window size when running Firefox in headless mode should set it to the given height and width. This is necessary because the web app I'm working with has buttons that are out of view if opened at a certain resolution. This is how I'm instantiating the WebDriver: ``` javascript const {Builder, By, Key, until} = require('selenium-webdriver'); const firefox = require('selenium-webdriver/firefox'); const url = process.env.PIXEL_URL;  var browser = null;  beforeAll(async () => {     let options = new firefox.Options()             .headless()             .addArguments('--window-size=1920,1200');             // .windowSize({width: 1920, height: 1200}); // this didn't work either         browser = await new Builder()             .forBrowser('firefox')             .setFirefoxOptions(options)             .build();      await browser.get(url);  } ``` I'm using [this](http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/firefox_exports_Options.html) as a guide for which methods I can use.  ## Actual Behavior - The window is opened at 1024x617 resolution, which causes some of my buttons to be out of view resulting in my test failing due to the following error: ``` MoveTargetOutOfBoundsError: (196.01667022705078, 787.1000061035156) is out of bounds of viewport width (1024) and height (617) ```  ## Steps to reproduce -  Create a `new Builder()` with `setFirefoxOptions()` options including `headless()` and `windowSize({width: 1920, height: 1200})`.  The headless browser should now be at a 1920x1200 resolution, but is instead at a fixed resolution.","closed","","EricHanLiu","2018-06-26T18:38:52Z","2019-08-15T21:09:35Z"
"","6481","selenium/webdriver/remote only works one time 'because another element  obscures it'","## Meta - OS: Linux Centos 7 64-bit  Selenium Version:   Driver v0.22.0 (https://www.seleniumhq.org/download) Browser:   Firefox 60.2.Oesr (64-bit)  ## Expected Behavior - Firefox should work all the time w/o issues  ## Actual Behavior - Firefox can only run through workflow 1 time after system reboot. On the 2nd run it fails due to some concurrency/lock problem, although there is only version of the web driver suppose to be running on the system.  Here is section of the stacktrace that is relevant to webdriver libraries: ```   File ""/home/qa-user/workspace/git/qa/automation/lib/veriflow_qa_gui_resilience.py"", line 40, in click_on_first_device_in_memory_utilization_table     driver.find_element_by_xpath(""//*[@id='utilization-component']/div/div[2]/table/tbody/tr[1]/td[1]/a/strong"").click()   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py"", line 80, in click     self._execute(Command.CLICK_ELEMENT)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webelement.py"", line 633, in _execute     return self._parent.execute(command, params)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.ElementClickInterceptedException: Message: Element  is not clickable at point (489.16668701171875,914.7833251953125) because another element  obscures it ``` here is list of processes on the system at the time when failure took place:  ``` $ ps -ef | grep firefox qa-user   6728  6714  0 14:53 pts/0    00:00:09 /usr/lib64/firefox/firefox -marionette TRACE -foreground -no-remote -profile /tmp/rust_mozprofile.5jkvIUDVBlQz qa-user   6809  6728  1 14:53 pts/0    00:00:31 /usr/lib64/firefox/firefox -contentproc -childID 1 -isForBrowser -intPrefs 74:0| -boolPrefs 5:1|61:1|301:0| -stringPrefs 287:36;c36f9224-e1a2-471d-90de-166dbbfa0a4f| -schedulerPrefs 0001,2 -greomni /usr/lib64/firefox/omni.ja -appomni /usr/lib64/firefox/browser/omni.ja -appdir /usr/lib64/firefox/browser 6728 tab qa-user   6934  6728  0 14:53 pts/0    00:00:00 /usr/lib64/firefox/firefox -contentproc -childID 2 -isForBrowser -intPrefs 42:0|44:0|74:0| -boolPrefs 5:1|61:1|278:0|301:0| -stringPrefs 287:36;c36f9224-e1a2-471d-90de-166dbbfa0a4f| -schedulerPrefs 0001,2 -greomni /usr/lib64/firefox/omni.ja -appomni /usr/lib64/firefox/browser/omni.ja -appdir /usr/lib64/firefox/browser 6728 tab ``` after browser was closed, firefox processes goes into    ``` $ ps -ef | grep firefox qa-user   6728  6714  0 14:53 pts/0    00:00:09 [firefox]  ```  what else was noticed is that if list of  firefox processes grows at tens of those,  it can cause ""firefox killed by SIGSEGV"" event  there is not much in messages from Firefox webdriver log other then this   location: ""JS frame :: resource://gre/modules/addons/XPIInstall.jsm :: loadManifestFromFile :: line 924""  data: no] Stack trace: loadManifestFromFile()@resource://gre/modules/addons/XPIInstall.jsm:924  ``` 1537979866659   mozrunner::runner       INFO    Running command: ""/usr/bin/firefox"" ""-marionette"" ""TRACE"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofile.xV259tuD256R"" 1537979867164   addons.xpi      WARN    Can't get modified time of /usr/lib64/firefox/browser/features/aushelper@mozilla.org.xpi 1537979867311   addons.xpi-utils        WARN    addMetadata: Add-on aushelper@mozilla.org is invalid: [Exception... ""Component returned failure code: 0x80520006 (NS_ERROR_FILE_TARGET_DOES_NOT_EXIST) [nsIFile.isFile]""  nsresult: ""0x80520006 (NS_ERROR_FILE_TARGET_DOES_NOT_EXIST)""  location: ""JS frame :: resource://gre/modules/addons/XPIInstall.jsm :: loadManifestFromFile :: line 924""  data: no] Stack trace: loadManifestFromFile()@resource://gre/modules/addons/XPIInstall.jsm:924 syncLoadManifestFromFile()@resource://gre/modules/addons/XPIProvider.jsm:938 addMetadata()@resource://gre/modules/addons/XPIProvider.jsm -> resource://gre/modules/addons/XPIProviderUtils.js:1167 processFileChanges()@resource://gre/modules/addons/XPIProvider.jsm -> resource://gre/modules/addons/XPIProviderUtils.js:1523 checkForChanges()@resource://gre/modules/addons/XPIProvider.jsm:3302 startup()@resource://gre/modules/addons/XPIProvider.jsm:2194 callProvider()@resource://gre/modules/AddonManager.jsm:253 _startProvider()@resource://gre/modules/AddonManager.jsm:728 startup()@resource://gre/modules/AddonManager.jsm:892 startup()@resource://gre/modules/AddonManager.jsm:2976 observe()@jar:file:///usr/lib64/firefox/omni.ja!/components/addonManager.js:63 1537979867312   addons.xpi-utils        WARN    Could not uninstall invalid item from locked install location 1537979869013   addons.xpi      WARN    Can't get modified time of /usr/lib64/firefox/browser/features/aushelper@mozilla.org.xpi 1537979869233   Marionette      INFO    Listening on port 45507 1537979869328   Marionette      WARN    TLS certificate errors will be ignored for this session ```  ## Steps to reproduce - 1. Reboot Centos 7 VM 2. Run set of integration tests against Veriflow Application UI 1st time - both Chrome & Firefox PASS 3. Run set of integration tests against Veriflow Application UI 2nd time - Chrome PASS and Firefox FAIL workaround (as of now): reboot Centos 7 VM","closed","","ryangurazov","2018-10-03T23:05:20Z","2019-08-15T08:10:04Z"
"","6434","Selenium Standalone responds OK to delete session before terminating the driver","## Meta - OS: Linux Selenium Version: 3.14.0 Browser: Chrome Browser Version: 71.0.3553.0  ## Expected Behavior - When Selenium Standalone receives a request to delete a session, it should delete the session, terminate the remote webdriver if necessary, and then respond to the request.  ## Actual Behavior - Selenium Standalone responds 200 OK before terminating the driver.  ## Steps to reproduce -  1. Start `selenium-server-standalone-3.14.0.jar` 2. Create a new Chrome session (`POST /session`) 3. Delete the session (`DELETE /session/`) 4. Immediately kill Selenium Standalone after receiving 200 5. `chromedriver` is left behind (with PPID set to 1)  If in step 4 we wait a few seconds after receiving the response before killing Selenium Standalone, `chromedriver` will be terminated.  (The steps above need to be executed programmatically because of timing.)","closed","","Hexcles","2018-09-20T20:43:44Z","2019-08-15T02:09:47Z"
"","6657","E: unable to locate package chromium-chromedriver","## Meta - OS: Kali Linux 2018.3 Selenium Version:  3.8 Browser: Chrome   ## Expected Behavior - successfully install  ## Actual Behavior - I'm trying to install chromedriver in Kali Linux. I followed the step in the Debian based Linux distro guide of entering   `sudo apt-get install chromium-chromedriver`   However, when I run it, I get an error that says   `Reading package lists... Done` `Building dependency tree` `Reading state information... Done` `E: Unable to locate package chromium-chromedriver`  please let me know how if you need anything else.   ## Steps to reproduce - In a newly installed version of Kali Linux 3.8, open up terminal and type `sudo apt-get install chromium-chromedriver`","closed","","cottons1618","2018-11-16T19:19:14Z","2019-08-15T05:09:45Z"
"","6165","Issue with running webdriverio tests in parallel with selenium grid","## Meta - OS: docker for mac Selenium Version: 3.11.0 Browser:  Chrome  ## Expected Behavior - Should be able to run parallel tests with selenium grid  ## Actual Behavior - Tests start to fail as soon as number of chrome nodes become more than 2  ## Steps to reproduce - I am running webriverio ui tests with mocha framework in selenium grid. The selenium grid set up is done using docker-compose. I am only using chrome nodes in selenium grid.   My tests start to fail when the number of chrome nodes becomes more than 2. I am specifying same value for ‘maxInstances’ property in test runner and ‘NODE_MAX_INSTANCES’ in docker-compose.yml. Using vnc viewer, I see that it launches same number of parallel browser as mentioned in ‘maxInstances’ property (3, in this case). But tests start to fail when parallel browser count becomes more than 2. I have a total of 12 test spec files grouped in as many test suites.  I don’t understand why this is happening only with increase in number of nodes. The final error shown in logs is session terminated due to BROWSER_TIMEOUT.  Please find attached my test container logs. I have set logging level to ‘verbose’. I have also attached logs for successful test run when only 1 chrome node is part of grid.   [parallelTestsSuccess.pdf](https://github.com/SeleniumHQ/selenium/files/2197666/parallelTestsSuccess.pdf) [parallelTestFailures.pdf](https://github.com/SeleniumHQ/selenium/files/2197667/parallelTestFailures.pdf)  **docker-compose.yml:** version: '3' services:   app:     image: jobz_web_employer     build:       context: .       dockerfile: Dockerfile.app     environment:     - NODE_ENV=production     - CONFIG_ENV=staging     - CONFIG_CUSTOM_API=https://blah.de     restart: always    seleniumhub:     image: ""selenium/hub:3.11.0""     container_name: shub     restart: always     ports:     - 4444:4444     environment:     - GRID_MAX_SESSION=""20""     - GRID_BROWSER_TIMEOUT=100     - GRID_TIMEOUT=90    chromenode:     image: ""selenium/node-chrome-debug:3.11.0""     container_name: chrome     restart: always     ports:     - 5900     depends_on:     - seleniumhub     environment:     - HUB_PORT_4444_TCP_ADDR=hub     - HUB_PORT_4444_TCP_PORT=4444     - NODE_MAX_INSTANCES=3     - NODE_MAX_SESSION=3     links:     - jobz_web_employer_proxy:blah.blah.de     - seleniumhub:hub        jobz_web_employer_proxy:     image: jobz_web_employer_proxy     build:       context: .       dockerfile: Dockerfile.proxy     ports:     - 80:80     restart: always     depends_on:     - app     links:     - app    tests:     image: jobz_web_employer     command: yarn wdio     environment:     - NODE_ENV=production     - CONFIG_ENV=staging     - PORT=80     depends_on:     - seleniumhub     links:     - seleniumhub:hub  My test runner (**wdio.ci.conf.js**) is below: exports.config = merge(wdioConf.config, {   host: 'shub',   port: 4444,   capabilities: [     {       browserName: 'chrome',       maxInstances: 3,       chromeOptions: {         args: [           '--disable-blink-features=BlockCredentialedSubresources',           '--window-size=1024,768',           '--no-sandbox'         ]       }     }   ],   baseUrl: 'http://blah:80'","closed","","pk-saxena","2018-07-16T13:02:52Z","2019-08-15T18:10:01Z"
"","6382","Chrome crashes when changing domain name","## Meta - OS: Debian 9.5 Stretch Selenium Version: selenium-webdriver-3.14.0 Browser: Chromium Browser Version: 69.0.3497.81-1~deb9u1  ## Expected Behavior -  No crash  ## Actual Behavior -  ```sh Selenium::WebDriver::Error::WebDriverError:  chrome not reachable    (Session info: headless chrome=69.0.3497.81)    (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.9.0-8-amd64 x86_64) # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok' # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize' # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/http/common.rb:84:in `new' # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/http/common.rb:84:in `create_response' ```  ## Steps to reproduce -  Change domain name during tests.","closed","","n-rodriguez","2018-09-08T14:32:16Z","2019-08-15T12:09:53Z"
"","6381","Chrome crashes when changing domain name","## Meta - OS: Debian 9.5 Stretch Selenium Version: selenium-webdriver-3.14.0 Browser: Chromium Browser Version: 69.0.3497.81-1~deb9u1  ## Expected Behavior -  No crash  ## Actual Behavior -  ```sh Selenium::WebDriver::Error::WebDriverError:  chrome not reachable    (Session info: headless chrome=69.0.3497.81)    (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.9.0-8-amd64 x86_64) # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok' # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize' # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/http/common.rb:84:in `new' # /cache/nicolas/concerto/wip-test-french-site/ruby/2.5.0/gems/selenium-webdriver-3.14.0/lib/selenium/webdriver/remote/http/common.rb:84:in `create_response' ```  ## Steps to reproduce -  Change domain name during tests.","closed","","n-rodriguez","2018-09-08T08:58:44Z","2019-08-15T12:09:52Z"
"","6472","It's possible to prevent left pane for resize when i move mouse cursor between IDE?","## Meta - OS: Archlinux (4.18.10-arch1-1-ARCH)  Selenium Version: 3.3.1, IDE    Browser: Firefox      Browser Version:  62.0.2 (64-bit)   ## Expected Behavior - Left Pane(Tests pane) keep horizontal size when i move the mouse cursor between the panes  ## Actual Behavior - Left Pane resizing every time i place mouse cursor on another pane ## Steps to reproduce - Move mouse cursor between the panes   It's not a big thing, but this it's bothering me","closed","","Yrds","2018-10-02T16:42:52Z","2019-08-15T09:09:41Z"
"","5925","Can't save a screenshot of the SVG file","## Meta - OS: Arch Linux Selenium Version:  3.12.0-1 Browser:  Firefox Browser Version: 60.0.1 (64-bit) geckodriver Version: 0.20.0  ## Expected Behavior - A screenshot of the rendered SVG.  ## Actual Behavior - `selenium` creates a zero size file.  ## Steps to reproduce - ```python #!/usr/bin/env python3.6  from selenium.webdriver import Firefox from selenium.webdriver.common.by import By from selenium.webdriver.common.keys import Keys from selenium.webdriver.firefox.options import Options from selenium.webdriver.support import expected_conditions as expected from selenium.webdriver.support.wait import WebDriverWait  if __name__ == ""__main__"":     options = Options()     options.add_argument('-headless')     driver = Firefox(executable_path='geckodriver', firefox_options=options)     wait = WebDriverWait(driver, timeout=10)     driver.get('https://upload.wikimedia.org/wikipedia/commons/0/02/SVG_logo.svg')     driver.save_screenshot('screenshot.png')     driver.quit() ```  Links to local SVG files produce the same error. This code works fine with HTML.  geckodriver.log: ``` 1526910879710	geckodriver	INFO	geckodriver 0.20.0 1526910879715	geckodriver	INFO	Listening on 127.0.0.1:35109 1526910880750	mozrunner::runner	INFO	Running command: ""/usr/bin/firefox"" ""-marionette"" ""-headless"" ""-profile"" ""/tmp/rust_mozprofile.E7MT0rgLQ95V"" *** You are running in headless mode. 1526910881934	Marionette	INFO	Listening on port 37957 1526910881958	Marionette	WARN	TLS certificate errors will be ignored for this session 1526910882363	addons.xpi	WARN	Exception running bootstrap method shutdown on activity-stream@mozilla.org: [Exception... ""Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIObserverService.removeObserver]""  nsresult: ""0x80004005 (NS_ERROR_FAILURE)""  location: ""JS frame :: resource://activity-stream/lib/SnippetsFeed.jsm :: uninit :: line 185""  data: no] Stack trace: uninit()@resource://activity-stream/lib/SnippetsFeed.jsm:185 onAction()@resource://activity-stream/lib/SnippetsFeed.jsm:201 _middleware/ jar:file:///usr/lib/firefox/browser/features/activity-stream@mozilla.org.xpi!/bootstrap.js:169 callBootstrapMethod()@resource://gre/modules/addons/XPIProvider.jsm:4436 observe()@resource://gre/modules/addons/XPIProvider.jsm:2287 GeckoDriver.prototype.quit()@driver.js:3300 despatch()@server.js:293 execute()@server.js:267 onPacket/","closed","","RazrFalcon","2018-05-21T13:59:18Z","2019-08-16T01:09:46Z"
"","6219","Documentation on how to produce Geckodriver trace level logs using the Node bindings missing","## Meta - OS: All  Selenium Version:   3.6.0 selenium-webdriver from npm + Geckodriver Browser:   Firefox  Browser Version:   Recent versions (61+ for instance)  ## Expected Behavior -  It's allegedly possible to [set log levels for the Geckodriver via `{""moz:firefoxOptions"": {""log"": {""level"": ""...""}}}`](https://searchfox.org/mozilla-central/source/testing/geckodriver/doc/TraceLogs.md) and I expect to be able to set this Firefox option in some intuitive manner, or else in a manner explained by documentation.   For instance: ```     const firefox = require(""selenium-webdriver/firefox"");     const webdriver = require(""selenium-webdriver"");     const profile = new firefox.Profile();     profile.setPreference('marionette', true);     profile.setPreference('marionette.logging', 'TRACE');     const options = new firefox.Options();     options.setProfile(profile);     const builder = new webdriver.Builder()       .forBrowser(""firefox"")       .setFirefoxOptions(options); ```  Or: ```     const firefox = require(""selenium-webdriver/firefox"");     const webdriver = require(""selenium-webdriver"");     const profile = new firefox.Profile();     const options = new firefox.Options();     options.setProfile(profile);     const builder = new webdriver.Builder()       .forBrowser(""firefox"")       .withCapabilities({""moz:firefoxOptions"": {""log"": {""level"": ""trace""}}})       .setFirefoxOptions(options); ```  Or: ```     const firefox = require(""selenium-webdriver/firefox"");     const webdriver = require(""selenium-webdriver"");     const logging = require(""selenium-webdriver/lib/logging"");     const options = new firefox.Options();     options.setProfile(profile);     const loggingPreferences = new logging.Preferences();     loggingPreferences.setLevel(logging.Type.DRIVER, ""trace"");     options.setLoggingPreferences(loggingPreferences);     const builder = new webdriver.Builder()       .forBrowser(""firefox"")       .setFirefoxOptions(options); ```  ## Actual Behavior -  The above examples does not work and documentation on how to do this via the JavaScript API are missing from these sources: https://www.npmjs.com/package/geckodriver#use-it-by-setting-webdriver-capabilities https://seleniumhq.github.io/docs/drivers.html#driver_specific_capabilities https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/firefox.html https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/firefox_exports_Options.html https://github.com/SeleniumHQ/selenium/issues https://github.com/mozilla/geckodriver/issues  For all other bindings, there are issues containing solutions on how to produce Geckodriver trace level logs:   * .NET: https://github.com/SeleniumHQ/selenium/issues/4855  * Java: https://github.com/SeleniumHQ/selenium/issues/3943, https://github.com/SeleniumHQ/selenium/issues/3002  * Ruby: https://github.com/SeleniumHQ/selenium/issues/3433  * Python: https://github.com/mozilla/geckodriver/issues/1015   The closest thing to documentation is [this example for Chrome](https://github.com/SeleniumHQ/selenium/blob/3e99112a0d59878c6f31cc50fe8b0593c49e497f/javascript/node/selenium-webdriver/chrome.js#L63-L76), but attempting the same for Firefox using geckodriver has proved fruitless.   There is also this SO question, but it is not yet been answered: https://stackoverflow.com/questions/48782242/turn-on-logging-for-gecko-driver-in-selenium-node-js  ## Steps to reproduce -  1. Be asked to produce trace level logs for the Geckodriver in order to report a new issue against https://github.com/mozilla/geckodriver 2. Fail in this endeavour  ## Other  Note: From https://github.com/mozilla/geckodriver/issues/362#issuecomment-274888779 we know that this documentation is out of scope for the Geckodriver project itself.  A related issue is https://github.com/SeleniumHQ/selenium/issues/2632, where the following is mentioned: > Some bindings, i.e. for Node.js, supports exposing stdout/stderr but only by modifying a class constructor’s argument. When we tell users “to run geckodriver with the -vv flag” they often have no idea where to start.","closed","I-stale,","motin","2018-07-29T13:05:24Z","2021-12-05T00:07:28Z"
"","6537","[selenium-webdriver-js] 'driver.wait' throws error when passing 'until.alertIsPresent'","## Meta - OS: **Windows 10** Selenium-webdriver: **3.6.0** Browser: **Firefox x64** Browser Version:  **62.0.3** Geckodriver Version: **0.20.1**  ## Expected Behavior - Okey im trying to waint until an alert is present, using: `driver.wait(until.alertIsPresent())` The problem is it throws the following error, although im passing in a condition:  ``` TypeError: Wait condition must be a promise-like object, function, or a Condition object     at Driver.wait (...\node_modules\selenium-webdriver\lib\webdriver.js:928:13) ```  ## Actual Behavior - I would expect it to work as it says in the docs, maybe im doing something wrong. Or versions are not correct.  ## Steps to reproduce - 1. Create firefox builder 2. Build driver 3. Open page that shows an alert 4. Set the wait until alert present 5. Throws unexpected error   ## Additional info - If I print the result of `until.alertIsPresent()` it shows: ```js WebElementCondition {   description_: 'Waiting for element to be located By(css selector, .FriendRequestAdd.addButton)',   fn: [Function] } ```     If more info is needed, I will suply it.","closed","C-nodejs,","nombrekeff","2018-10-15T12:02:20Z","2019-08-14T15:09:50Z"
"","6391","No space symbols after send_keys (on Debian OS)","## Meta - OS:  Xfce 4.12  Selenium Version:  3.14  Browser:  Chrome   Browser Version:  69.0.3497.81 (64-bit) Chrome driver Version: 2.41   ## Expected Behavior - Entered text with space symbols ## Actual Behavior - Entered text is without space symbols ## Steps to reproduce -   > from selenium import webdriver > from selenium.webdriver.common.keys import Keys > txt = ""hello! This is robot"" > driver = webdriver.Chrome() > driver.get(""http://www.python.org"") > elem = driver.find_element_by_id(""id-search-field"") > elem.send_keys(txt) > driver.save_screenshot('screenie.png') > driver.close()  NOTE: with Firefox GeckoDriver - space symbols are typed and displayed correctly.  NOTE: with same Chrome driver, but on Ubuntu/Mint - no problem","closed","","chevi","2018-09-11T06:08:52Z","2019-08-15T12:09:40Z"
"","5997","IE 11 ""Unable to find element with xpath == //input[@id='lst-ib']"" error","## Meta - OS:  Windows7  Selenium Version:  selenium-java-3.12.0, IEDriverServer_x64_3.12.0, Java\jdk-10.0.1  Browser:  Internet Explorer   Browser Version:  IE 11.0.9600.19002   ## Expected Behavior - Sending keys ""a text"" on google search text box ## Actual Behavior - Started InternetExplorerDriver server (64-bit) 3.12.0.0 Listening on port 7725 Only local connections are allowed Jun. 06, 2018 4:02:01 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Exception in thread ""main"" org.openqa.selenium.NoSuchElementException: Unable to find element with xpath == //input[@id='lst-ib'] For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:03.216Z' System info: host: 'W00000PC0S6APQ', ip: '10.190.235.43', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '10.0.1' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: true, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: true, ignoreZoomSetting: true, initialBrowserUrl: http://localhost:7725/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}} Session ID: 34f22f93-226c-4397-bca9-4356f001bd5c *** Element info: {Using=xpath, value=//input[@id='lst-ib']} 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.base/java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:317) 	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:419) 	at org.openqa.selenium.By$ByXPath.findElement(By.java:353) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:309) 	at RunTest.Openbrowser(RunTest.java:63) 	at RunTest.main(RunTest.java:38) ## Steps to reproduce -   /* 	  * Pre-requisite: Protected Mode is not disabled and enabled consistently for all zones due to security setting. Added the 2 registry keys BFCACHE for  64bit instances of IE for a local 64bit machine. */    import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.ie.InternetExplorerDriverService; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait; import java.io.File;   public class RunTest { 	 	private static String driverpath = new String(""C:\\Data\\IEDriverServer_x64_3.12.0\\IEDriverServer.exe""); 	private static String targetURL = new String(""http://www.google.com""); 	 	public static void main(String[] args) { 				 		Openbrowser ();	 		 	} 	 	private static void Openbrowser() { 		 		DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer(); 		capabilities.setCapability(""ie.ensureCleanSession"", true); 		capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);                 capabilities.setCapability(""ignoreProtectedModeSettings"", true); 		capabilities.setCapability(""ignoreZoomSetting"", true); 		capabilities.setJavascriptEnabled(true); 		 		File file = new File(driverpath); 		System.setProperty(""webdriver.ie.driver"", file.getAbsolutePath()); 		 		InternetExplorerDriverService service = new InternetExplorerDriverService.Builder()         .usingDriverExecutable(new File(driverpath))         .usingAnyFreePort()         .build(); 		 		@SuppressWarnings(""deprecation"") 		InternetExplorerDriver driver = new InternetExplorerDriver(service, capabilities); 		driver.switchTo().defaultContent(); 		 		driver.get(targetURL); 		driver.findElement(By.xpath(""//input[@id='lst-ib']"")).sendKeys(""a text"");   		 	} 	 	  }","closed","","wewewherewhere","2018-06-06T07:02:36Z","2019-08-15T23:09:59Z"
"","6385","running chrome-headless is too slow than non-headless.","## Meta - OS:  windows7  Selenium Version:  3.5.3  Browser:  Chrome   ## Expected Behavior - open a website by using chrome-headless is faster than non-headless ## Actual Behavior - running chrome-headless is too slow than non-headless. ## Steps to reproduce - my code is :  				  if(headless==null||headless.isEmpty()||headless.equalsIgnoreCase(""false"")){ 					  logger.info(""----------headless close------------""); 				  }else if(headless.equalsIgnoreCase(""true"")){ 					  options.addArguments(""--headless"");                                           options.addArguments(""--disable-gpu""); 				  }    BTW :   I want to know is the selenium version problem... or is it the options setting problem???  i need someone help please ....","closed","","HarryMai","2018-09-09T17:33:01Z","2019-08-15T12:09:48Z"
"","5856","Could not connect to Selenium Server in 40 seconds. Please make sure Selenium Server is running. in windows7","## Meta - OS:  windows7  Selenium Version:    Browser:  chrome   Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","ancy-joseph","2018-05-03T06:31:54Z","2019-08-16T03:09:49Z"
"","6062","wrong action actions.MoveToElement(element).Click()","## Meta - OS:  windows10 Selenium Version:  2.53.1 Browser:  Chrome 67   I have a problem.  I think this issue is because of chrome 67.   This problem did not appear before chrome 65?   for example :   IWebElement element in (IEnumerable)driver.FindElements(By.CssSelector(""ul.lst_total > li.bx > div.total_wrap > a.api_txt_lines""));  if it is x = 17, y = 1714, width = 320, height = 30,   chrome is  working scroll down about y.   but,  Click event is working wrong. not exactly position. click other position.  How can i fix it?","closed","C-dotnet,","LeBronPark","2018-06-22T02:17:36Z","2019-08-15T18:09:50Z"
"","6299","Screenshot failure with python's http requests (working with java)","## Meta - OS:  WINDOWS-7 Selenium Version:  3.12.0 Browser:  All  ## Expected Behavior -  Requesting a screenshot of google's homepage with a GET http request.  ## Actual Behavior -  504 GATEWAY TIMEOUT (after a 10sec wait)  All other commands look to work.  ## Steps to reproduce - ```python from selenium import webdriver from selenium.webdriver.remote.remote_connection import RemoteConnection  selenium_grid_url = ""http://gravitee-selenium.com/wd/hub"" # Create a desired capabilities object as a starting point. capabilities = capabilities = {'browserName': 'chrome', 'version': 'latest'} executor = RemoteConnection(selenium_grid_url, resolve_ip=False) driver = webdriver.Remote(desired_capabilities=capabilities,                           command_executor=executor) driver.get(""https://google.fr"") print(driver.save_screenshot(""./toto.png"")); #print(driver.current_url) ``` This code is supposed to do a screenshot of Google's homepage through a Gravitee.io gateway. The same process works when we do it with java or when we use directly the URL ""http://gravitee-selenium.com/wd/hub/$SESSION_ID/screenshot"" in a browser (either firefox or chrome). We seriously have no idea of what's happening. If somebody has any clue, it would be really helpful. Thanks !","closed","C-py,","ZircZag","2018-08-17T08:06:17Z","2019-08-14T18:09:38Z"
"","5859","Running RemoteWebDriver on a secure connection","## Meta - OS:  Windows, OSX, Linux Selenium Version:  3.10 Browser:  All browsers Browser Version:  All versions  ## Question - Often times, it is required that standalone webdriver server is running on a machine that is accessible to the public internet and webdriver commands are being issued from another machine (in our case from a docker container). These webdriver commands might contain sensitive urls, usernames and passwords which if transmitted through HTTP would be vulnerable to sniffing and other security concerns.  Is it possible to run the RemoteWebDriver behind a HTTPS connection so that the communication from a remote machine is secure?  I looked at the documentation and couldn't find one related to this. Note: this is not about accessing a HTTPS website using webdriver, but accessing the RemoteWebDriver itself using a more secure HTTPS protocol rather than HTTP.","closed","I-enhancement,","kart","2018-05-04T22:03:17Z","2019-08-15T01:09:53Z"
"","6557","JavaScript atom bot.action.clear generates blur event twice","## Meta - OS:  Windows, OSX, and Linux Selenium Version:  3.14.0 Browser:  Chrome Browser Version:  69.0.3497.100  ## Expected Behavior - After calling JavaScript atom bot.action.clear to clear a text input element, the blur event handler attached to the element is called once.  ## Actual Behavior - The blur event handler is called twice.  According to https://github.com/SeleniumHQ/selenium/blob/selenium-3.14.0/javascript/atoms/action.js#L100, the blue event handler is first called explicitly by      bot.events.fire(element, bot.events.EventType.BLUR);  And then it is called again when the element loses focus due to      bot.action.LegacyDevice_.focusOnElement(body)  ## Steps to reproduce -  Create an HTML file with the following contents: ```   count = 0; document.getElementById('t').addEventListener('blur', () => ++count, true);  ```  Then run the following Python code with ChromeDriver 2.43 (which uses the JavaScript atom mentioned above to implement element clear command): ``` from selenium import webdriver  driver = webdriver.Chrome() driver.get(URL-to-the-above-HTML-file) text = driver.find_element_by_id('t') text.click() text.clear()  print('count=' + str(driver.execute_script('return count'))) driver.quit() ```  The above code prints ""count=2"", showing that the blue event handler is called twice.","closed","D-atoms,","JohnChen0","2018-10-18T22:17:58Z","2019-08-14T12:09:53Z"
"","5841","IEDriver: driver.FindElements return HTTP request timed out after 60 seconds","## Meta - OS:  Windows Server 2016 DataCenter  Selenium Version:   Selenium.WebDriver v.3.11.12 C# Selenium.Support  v.3.11.12 C#  Browser:   Internet Explorer 11.1198.14393.0  Selenium.WebDriver.IEDriver 3.11.1  ## Expected Behavior - driver.FindElements(byEl) returns list with all matching instance if there is no such element return an empty list  ## Actual Behavior - driver.FindElements(byEl)   returns: The HTTP request to the remote WebDriver server for URL http://localhost:61317/session/aaa8ca5c-e6a0-441f-9abc-1c50e9466cab/elements timed out after 60 seconds.'  I don't have problems if I use Chrome driver.","closed","D-IE,","sisillV","2018-04-29T13:20:36Z","2019-08-16T00:09:35Z"
"","6414","InternetExplorerDriver can't retrieve browser logs","## Meta - OS:  Windows Server 2016 Selenium Version:  3.11.0 Browser:  InternetExplor  Browser Version:  internet explorer 11  ## Expected Behavior - WebDriver should be able to retrieve browser logs from InternetExplorer  ## Actual Behavior - WebDriver is throwing exceptions for when either method of the `org.openqa.selenium.logging.Logs` interface is used with `InternetExplorerDriver`  ## Steps to reproduce - Running the following code with InternetExplorerDriver (which otherwise works fine) throws exceptions (see comments) ```java         Set logTypes =  webDriver.manage().logs().getAvailableLogTypes(); /* This throws :  java.lang.ClassCastException: com.google.common.collect.Maps$TransformedEntriesMap cannot be cast to java.util.List 	at org.openqa.selenium.remote.RemoteLogs.getAvailableLogTypes(RemoteLogs.java:108) */         LogEntries logEntries = driver.manage().logs().get(""browser"");         logEntries.getAll().forEach(entry -> System.out.println(entry.toString())); /* The above throws:    org.openqa.selenium.UnsupportedCommandException: malformed response to remote logs command Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'rhba-qe-jenkins.rhev-ci-vms.eng.rdu2.redhat.com', ip: '172.16.127.16', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown  	at org.openqa.selenium.remote.RemoteLogs.getRemoteEntries(RemoteLogs.java:83)  	at org.openqa.selenium.remote.RemoteLogs.get(RemoteLogs.java:77) */ ```","closed","D-IE,","jhrcek","2018-09-16T17:29:12Z","2019-08-15T09:10:02Z"
"","6086","IEDriver ignores noProxy settings","## Meta - OS:  Windows Server 2012 R2  Selenium Version:  3.13 (Java) Browser:  Internet Explorer Browser Version:  11.0.9600.18978  ## Expected Behavior - Specifying a list of addresses to bypass the configured proxy with setNoProxy() should work with IEDriver, but it does not.  ## Actual Behavior - IEDriver does not acknowledge noProxy, but the ChromeDriver works as expected.  ## Steps to reproduce - ``` String myProxy = ""myproxy.example.com:80""; String myNoProxy = "".example.com, .xyz.com"";  Proxy proxy = new Proxy(); proxy.setHttpProxy(myProxy); proxy.setSslProxy(myProxy); proxy.setNoProxy(myNoProxy);  InternetExplorerOptions options = new InternetExplorerOptions(); options.usePerProcessProxy(); options.setProxy(proxy);  WebDriver driver = new InternetExplorerDriver(options); driver.get(""https://example.com""); driver.quit(); ```","closed","D-IE,","goldeelox","2018-06-27T17:34:07Z","2019-08-14T21:09:42Z"
"","6341","[Feature Request] remove hard coded ""Connection: Close"" for using persistent connection with geckodriver","## Meta - OS:  Windows Server  Selenium Version:  3.14.0  Browser:  Firefox  Browser Version:  61.0  because geckodriver in verion 0.21.0 now supports http keep_alive connections, the selenium standalone server should now also support keep_alive connections to avoid TCP connection spamming. For this, i kindy request to remove the hard coded ""Connection: close"" code from PassThrough.java:    https://github.com/SeleniumHQ/selenium/blob/33e2d10233291eabbaf8405ca7d704e44e4cf664/java/server/src/org/openqa/selenium/grid/session/remote/Passthrough.java#L86 https://github.com/SeleniumHQ/selenium/blob/33e2d10233291eabbaf8405ca7d704e44e4cf664/java/server/src/org/openqa/selenium/grid/session/remote/Passthrough.java#L87  or, at least, make keep_alive connections configurable.  ## Expected Behavior - for one running test, the connection from the Selenium Server to the geckodriver should be persistent and be reused.   ## Actual Behavior - For every command sended from the test to the browser, the selenium server opens a new tcp connection. After opening and using for one single command, every Connection stays in the TIME_WAITE state for 4 minutes. For complex selenium tests (using 3 parallel test-builds with more than 30 tests each build), after some time we get more than 5000 connections at the keep_alive state and sometimes the following error when the selenium server tries to open a new connection for the next command:  ` 10:38:19.214 INFO - I/O exception (java.net.BindException) caught when processing request to {}->http://127.0.0.1:7057: Address already in use: connect `","closed","","astmaih","2018-08-28T12:27:10Z","2019-08-15T10:09:51Z"
"","6332","Not correctly move pointer to the position inside of element in bridge mode.","## Meta - OS:  Windows 8  Selenium Webdriver:   4.0.0-alpha.1  Browser:  Chrome    Browser Version:  68.0.3440.106   ## Expected Behavior - I am trying move pointer to the position inside of canvas element in bridge mode. ## Actual Behavior - Pointer moved to the center of canvas element. ## Steps to reproduce - ``` const Webdriver = require('selenium-webdriver'); const Capabilities = require('selenium-webdriver/lib/capabilities').Capabilities;  var capabilities = new Capabilities(); capabilities.set('browserName', 'chrome'); var browser = new Webdriver.Builder()     .withCapabilities(capabilities)     .build();  browser.get(host)     .then(() => {         browser.findElement(by.tagName('canvas'))         .then(elem =>{             browser                 .actions({                     bridge:true                 })                 .move({                     origin: elem,                     x:10,//for example                     y:10                 })                 .click()                 .perform()         })     }); ```  ## How I fix it - selenium/javascript/node/selenium-webdriver/lib/input.js row: 1148 x and y returned float. Simple parseInt() resolve this problem. ## Documentation - http://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html You write: ""6. For W3C actions, move offsets relative to a WebElement are interpretted relative to the center of an element's first client rect in the viewport. For legacy actions, element offsets are relative to the top-left corner of the element's bounding client rect. When translating actions to the legacy protocol in bridge mode, an extra command must be inserted to translate move offsets from one frame of reference to the other. This extra command conributes to the overall latency issue outlined in point 1.""  BUT you alredy do it in selenium/javascript/node/selenium-webdriver/lib/input.js; row: 1144 and no extra command must be inserted to translate move offsets.","closed","C-nodejs,","ahmoleg","2018-08-27T08:12:26Z","2021-09-05T08:08:28Z"
"","6348","Chromedriver doesnt start on Windows startup","## Meta - OS:  windows 7, 10 Selenium Version:   3.x Browser:   Chrome   Issue Description: I'm using Selenium chromeDriver on Vb.net. Using Windows 7 and 10 i have a strange problem. If i set the app for start with Windows start, i got a crash app in this line:  .AddExtensions  But if i start the app manually once Windows has started all is running fine. The code is:  Dim options As New OpenQA.Selenium.Chrome.ChromeOptions Dim service As ChromeDriverService = ChromeDriverService.CreateDefaultService() service.HideCommandPromptWindow = True options.AddExtensions(""ExtensionFoo.crx"")  ## Expected Behavior - Must start correctly when i start the app automaticly on windows startup.  ## Actual Behavior - When app start with windows automaticly, app crashes.  ## Steps to reproduce - With this code as VB.net project  Dim options As New OpenQA.Selenium.Chrome.ChromeOptions Dim service As ChromeDriverService = ChromeDriverService.CreateDefaultService() service.HideCommandPromptWindow = True ---> options.AddExtensions(""ExtensionFoo.crx"")","closed","R-awaiting answer,","StepIg","2018-08-30T07:00:55Z","2019-08-15T10:09:57Z"
"","5878","Unable to Launch new chrome Instance instead it is opening as a Tab in existing Chrome session and not able to launch URL","## Meta - OS:  Windows 7 Enterprise Selenium Version:  3.12 / 3.7 Browser:  Chrome Chrome Driver : 2.38 / 2.37  Starting ChromeDriver 2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb) on port 34404 Only local connections are allowed. Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: crashed   (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 61.69 seconds Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'NZ8035WP9338', ip: '10.238.54.117', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_144' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at SelTestPrg.main(SelTestPrg.java:22) Starting ChromeDriver 2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb) on port 34404 Only local connections are allowed. Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: Chrome failed to start: crashed   (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 61.69 seconds Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'NZ8035WP9338', ip: '10.238.54.117', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_144' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at SelTestPrg.main(SelTestPrg.java:22)","closed","","NarenderNukala","2018-05-09T23:16:34Z","2019-08-16T02:09:43Z"
"","6237","Actions moveByOffset(x,y) does not work on openlayers 4","## Meta - OS:  Windows 7 Enterprise  Selenium Version:  3.13.0  Browser:  Firefox,chrome    Browser Version:  61.0.1(64 bit)   ## Expected Behavior -the webdriver should click on the all the polygons or on the points . first  the driver should move from its center (0,0) and click on the point through moveByOffset(x,y);   ## Actual Behavior -the driver is clicking at center but not on other point or polygons trough movebyOffset(x,y);  ## Steps to reproduce - ``` try { 		 			driver.get(""http://localhost:8090/demo/""); 			System.out.println(""demo opened""); 			Thread.sleep(15000); 			WebElement can = driver.findElements(By.tagName(""canvas"")).get(0); 			Actions builder = new Actions(driver); 		 			builder.moveToElement(can,0,0).click().perform(); 			Thread.sleep(12000); 			WebElement eler1x = driver 					.findElement(By.xpath(""/html/body/div[2]/div/div/div/div[3]/div/div/div[17]/div"")); 			String val1 = eler1x.getText(); 			System.out.println(val1); 			WebElement eler1y = driver 					.findElement(By.xpath(""/html/body/div[2]/div/div/div/div[3]/div/div/div[19]/div"")); 			String val2 = eler1y.getText(); 			System.out.println(val2); 			double x1 = Double.parseDouble(val1); 			double y1 = Double.parseDouble(val1); 			int r2x1 = (int) x1;         	int r2y1 = (int) y1;         	builder.moveByOffset(r2x1, r2y1);         	builder.click().build().perform(); 			System.out.println(""executed""); 		} catch (Exception e) { 			System.out.println(e); 		} ```","closed","R-awaiting answer,","ramanamuttana","2018-08-01T16:02:59Z","2019-08-15T10:09:56Z"
"","6148","Selenium IE driver is not retaining session when opens multiple IE windows through automated script","## Meta - OS:  Windows 7 and Windows 10  Selenium Version:   2.47.1  Browser: Internet Explorer - 11     Browser Version:    IE -11.0.9600.19035 ## Expected Behavior - Newly opened window should retain the session (credential information provided in parent window). ## Actual Behavior - Credentials are getting lost. Newly opened window again asks for the credentials. ## Steps to reproduce -  I followed the below points:- Required Configuration The IEDriverServer exectuable must be downloaded and placed in your PATH. On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value. The value can be on or off, as long as it is the same for every zone. To set the Protected Mode settings, choose ""Internet Options..."" from the Tools menu, and click on the Security tab. For each zone, there will be a check box at the bottom of the tab labeled ""Enable Protected Mode"". Additionally, ""Enhanced Protected Mode"" must be disabled for IE 10 and higher. This option is found in the Advanced tab of the Internet Options dialog. The browser zoom level must be set to 100% so that the native mouse events can be set to the correct coordinates. For Windows 10, you also need to set ""Change the size of text, apps, and other items"" to 100% in display settings. For IE 11 only, you will need to set a registry entry on the target computer so that the driver can maintain a connection to the instance of Internet Explorer it creates. For 32-bit Windows installations, the key you must examine in the registry editor is HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BFCACHE. For 64-bit Windows installations, the key is HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Internet Explorer\Main\FeatureControl\FEATURE_BFCACHE. Please note that the FEATURE_BFCACHE subkey may or may not be present, and should be created if it is not present. Important: Inside this key, create a DWORD value named iexplore.exe with the value of 0.  The code tries to connect to RemoteWebdriver. it tries to launch multiple courses in a parent window. CODE:- ------------ browserCapabilities= DesiredCapabilities.internetExplorer();            browserCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); browserCapabilities.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, true); browserCapabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);  browserCapabilities.setCapability(InternetExplorerDriver.INITIAL_BROWSER_URL, url); driver = new RemoteWebDriver( new URL(REMOTE_HUB),browserCapabilities); driver.navigate().to(url);  driver.manage().window().maximize();    String scriptcurriculum = ""javascript: var launchID=document.getElementById('"" + curriculumButton + ""');"" +""if(null!=launchID) {document.getElementById('"" + curriculumButton + ""').getElementsByTagName('button')[0].click();}"";             ((JavascriptExecutor) driver).executeScript(scriptcurriculum);  Now it loses the session and ask me to enter credentials in new window.  The same code works perfectly for Firefox and Chrome","closed","D-IE,","Rialakshmi","2018-07-11T20:09:22Z","2019-08-14T09:09:51Z"
"","5837","Element drag/Move not working. No action performed","## Meta - OS:  Windows 7  Selenium Version:  3.11.0 Browser:  Chrome 66.0.3359.139 Chromedriver version:  ChromeDriver 2.38   ## Expected Behavior - When I run  `Actions builder = new Actions(driver); WebElement element = driver.findElement(By.id(""hplogo"")); builder.dragAndDropBy(element,100, 100).build().perform();` I expect to see how element is dragged and dropped By offset 100, 100  ## Actual Behavior - Nothing happens. No exceptions. If I click in browser window during dragAndDropBy execution,  I can observe that element blinks under cursor.  ## Steps to reproduce - Manual execution Navigate to www.google.com Drag and drop element logo by offset 100, 100  Automated execution driver.get(""http://www.google.com""); WebElement element = driver.findElement(By.id(""hplogo"")); builder.dragAndDropBy(element,100, 100).build().perform();`","closed","","JurisPanfilo","2018-04-27T13:40:36Z","2019-08-16T03:10:00Z"
"","6261","IE crashes when retrieving http-only session cookies on IE Driver 3.14","## Meta - OS:  Windows 7 Selenium Version:  IEDriver v3.14 (32-bit) Browser:  Internet Explorer v.11.0.9600.13035 (32-bit)  ## Expected Behavior - Cookies are returned by the API.  ## Actual Behavior - The GET request to '**/session/[session-id]/cookie**' is stuck on executing. WebdriverIO was used as test framework but this works on other browsers and a simple curl request reproduces the issue as well (curl -X GET http://127.0.0.1:5555/session/[session-id]/cookie). Reproduces on sites with http-only & session cookies (e.g. https://www.next.co.uk/ - see the example below).  Show IE Driver Log T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\server.cc(242) Process request with: URI: /session/02df7de6-5112-4eb7-8518-47bea7b97262/cookie HTTP verb: GET body: {} T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\server.cc(331) Entering Server::DispatchCommand T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\server.cc(661) Entering Server::LookupCommand D 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\server.cc(340) Command: GET /session/02df7de6-5112-4eb7-8518-47bea7b97262/cookie {} T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\server.cc(456) Entering Server::LookupSession T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(131) Entering IECommandExecutor::OnSetCommand T 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize D 2018-08-08 16:38:55:852 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""getAllCookies"", ""locator"" : { ""sessionid"" : ""02df7de6-5112-4eb7-8518-47bea7b97262"" }, ""parameters"" : {} } T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(142) Entering IECommandExecutor::OnExecCommand T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(666) Entering IECommandExecutor::DispatchCommand T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(829) Entering IECommandExecutor::IsAlertActive T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\browser.cpp(714) Entering Browser::GetActiveDialogWindowHandle T 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\browser.cpp(218) Entering Browser::GetContentWindowHandle D 2018-08-08 16:38:55:853 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(843) No alert handle is found T 2018-08-08 16:38:55:854 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser T 2018-08-08 16:38:55:854 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser T 2018-08-08 16:38:55:854 c:\projects\webdriver\cpp\iedriver\documenthost.cpp(74) Entering DocumentHost::GetCurrentUrl T 2018-08-08 16:38:55:854 c:\projects\webdriver\cpp\iedriver\browser.cpp(138) Entering Browser::GetDocument I 2018-08-08 16:38:55:854 c:\projects\webdriver\cpp\iedriver\browser.cpp(142) No child frame focus. Focus is on top-level frame T 2018-08-08 16:38:55:875 c:\projects\webdriver\cpp\iedriver\browser.cpp(627) Entering Browser::GetDocumentFromWindow T 2018-08-08 16:38:55:882 c:\projects\webdriver\cpp\iedriver\cookiemanager.cpp(95) Entering CookieManager::GetCookies T 2018-08-08 16:38:55:882 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(105) Entering HookProcessor::Initialize T 2018-08-08 16:38:55:882 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(201) Entering HookProcessor::CreateReturnPipe D 2018-08-08 16:38:55:882 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(236) Created named pipe \\.\pipe\IEDriverPipe6488 T 2018-08-08 16:38:55:882 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(164) Entering HookProcessor::InstallWindowsHook T 2018-08-08 16:38:55:883 c:\projects\webdriver\cpp\iedriver\cookiemanager.cpp(409) Entering CookieManager::SendGetCookieMessage T 2018-08-08 16:38:55:883 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(258) Entering HookProcessor::PushData T 2018-08-08 16:38:55:888 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(284) Entering HookProcessor::PullData D 2018-08-08 16:38:55:888 c:\projects\webdriver\cpp\iedriver\hookprocessor.cpp(290) Waiting for connection from browser via named pipe T 2018-08-08 16:38:55:888 c:\projects\webdriver\cpp\iedriver\cookiemanager.cpp(438) Entering CookieManager::ThreadProc   ## Steps to reproduce - Just try to retrieve the cookies from a site (make sure there are HTTP-only session cookies as well - see the example):  ```javascript browser.url('https://www.next.co.uk/'); let cookies = browser.cookie(); // gets all cookies - GET request to /session/[session-id]/cookie ```","closed","","savsav","2018-08-08T13:42:48Z","2019-08-15T16:09:51Z"
"","6038","div with tabindex=""-1"" can't receive keyboard events in IEDriverServer 3.12.0","## Meta - OS:  Windows 7 Selenium Version:  3.11, IEDriverServer 3.12.0 Browser:  Internet Explorer Browser Version:  11.0.9600.17126  ## Expected Behavior - In IEDriverServer 3.11.1, I can have something in the DOM like: `click` and call: `self.driver.find_element_by_id(""target"").send_keys(Keys.ENTER)`  ## Actual Behavior - When I updated to IEDriverServer 3.12.0, the above behavior was regressed. Now, when I try to call send_keys, I get an ElementNotInteractableException with the message: > Element cannot be interacted with via the keyboard because it is not focusable  Note that changing tabindex to ""0"" does not yield an ElementNotInteractableException.  ## Steps to reproduce - Page source: https://jsfiddle.net/6r7dtk3h/  Assuming your test class has setup code that instantiates a driver for IE and gets the above page, run the following test case: ``` from selenium.webdriver.common.keys import Keys    def testClick(self):     self.driver.find_element_by_id(""target"").click()     self.driver.find_element_by_id(""target"").send_keys(Keys.ENTER) ```  This should demonstrate the behavior documented above. The click will succeed, but send_keys will yield an ElementNotInteractableException.","closed","D-IE,","mtrea","2018-06-18T21:36:56Z","2022-07-08T12:22:31Z"
"","6349","alert is read only - exception thrown","## Meta - OS:  windows 7 Selenium Version:   selenium ide 3.1.1.0 Browser:   Firefox  -->  Browser Version:   61.0.2  ## Expected Behavior - Works without exception ## Actual Behavior - TypeError: """"alert"" is read-only"" in modifyWindowToRecordPopUpDialogs in moz-extension://708ac0eb-73ae-49c3-934c-66b490b06697/assets/record.js:43776:249 ## Steps to reproduce -  open a web console and look what it writes.","closed","C-ide,","fabianfrz","2018-08-30T07:54:05Z","2019-08-15T13:09:58Z"
"","6212","Selenium Scripts are not stable with Firefox browser","## Meta - OS:  Windows 7 Selenium Version:   3.3.1 Browser:   Firefox & IE  Browser Version:   Firefox 52.2.1(32 bit) ( geckodriver0.15) & IE11  ##Issue: Designed scripts are working fine in IE browser but when we run the same in firefox then scripts are not working in stable. Firefox browser is launched, url passed & logged in then its not wait for page to load. I have used explicit wait in most of places & also i used waitforpageto load explicit wait.   Used **return document.readystate** to wait until page get loads but it return **'complete'** while loading the page itself. But everything working fine & stable in IE.   Only these stability issue is occurred in firefox. Do i need to add any desiredcapabilities for this issue?   **Mousehover & double click are not working in firefox with geckodriver0.15 & selenium 3.3.1.**   ## Expected Behavior - Script should run in stable & browser should wait for explicit wait  ## Actual Behavior - Browser is not waiting for explicit wait. Mousehover is not working in firefox 52.2.1 with geckodriver0.15 & selenium 3.3.1","closed","","Anbuchozhan","2018-07-27T06:39:37Z","2019-08-15T17:09:50Z"
"","6601","Unable to click on kento grid using Selenium","## Meta - OS:  Windows 7  Selenium Version: WebDriver   Browser:  IE   Browser Version:     ## Expected Behavior - Unable to click on kento grid using Selenium  We are trying to click on the identified object in Kento grid.  ## Actual Behavior - It is getting identified but unable to click on it. ## Steps to reproduce -","closed","","sabeerna","2018-10-31T11:07:52Z","2019-08-15T06:09:59Z"
"","6192","IEDriverServer Crashing With Selenium 3.13 on Windows 7","## Meta - OS:  Windows 7  Selenium Version:  Selenium 3.13  Browser:  Internet Explorer  Browser Version:  11.0.9600.1908015 (64 Bit) and 10.0.9200.17609 (64 Bit)   Driver : IEDriverServer 3.12; IEDriverServer 3.13  ## Expected Behavior -  Performing some steps on [this ](https://glip.com/hp_b5)url  ## Actual Behavior - While performing click IEDriver is getting crash. Soetimes it is giving Element not clickable exception.  ## Steps to reproduce - Steps :: 1> open [This](https://glip.com/hp_b5) 2> Click on ""Product"" 3> Click on ""Facebook link Icon"" situated on the Bottom right corner on the page. 4> Exception occurs while clicking on the obove link and IEDriver crashing.   Please find below code to reproduce the problem:: ``` DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer(); 		capabilities.setCapability(""native events"", true); 		// capabilities.setCapability(""requireWindowFocus"", true); 		capabilities.setCapability(""ignoreProtectedModeSettings"", true); 		capabilities.setCapability(""unexpectedAlertBehaviour"", ""ignore""); 		capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); 		capabilities.setCapability(""handlesAlerts"", false);  		WebDriver driver = new InternetExplorerDriver(capabilities);  		driver.get(""https://glip.com/hp_b5""); 		System.out.println(""Title is as :: "" + driver.getTitle());  		// click on product 		driver.findElements(By.xpath(""/html/body/div[2]/header/div/nav/ul/li[1]/a"")).get(0).click(); 		if (args.length > 1) 			Thread.sleep(5000);  		// click on facebook                 // Crashing At This Time 		// driver.findElements(By.xpath(""/html/body/div[2]/footer/div/div[2]/ul/li[1]"")).get(0).click(); 		driver.findElement(By.xpath(""/html/body/div[2]/footer/div/div[2]/ul/li[1]"")).click();  		Thread.sleep(5000);  		// click on pricing 		List ele = driver.findElements(By.xpath(""/html/body/div[2]/header/div/nav/ul/li[2]/a"")); 		System.out.println(ele.size()); 		ele.get(0).click();  		// JavascriptExecutor jse = (JavascriptExecutor) driver; 		// jse.executeScript(""arguments[0].click();"", ele.get(0));  		Thread.sleep(15000); 		driver.close(); 		driver.quit(); ```   **It is working fine with both driver on windows 10**","closed","D-IE,","TARIFABBAS","2018-07-23T10:47:08Z","2019-08-15T14:09:40Z"
"","6405","Deleteallcookies causes internet explorer to crash","## Meta - OS:  windows 7  Selenium Version:  3.14.0  Browser:  IE 11   Browser Version:  11.0.9600.19035 64bit   ## Expected Behavior - calling deleteAllCookies deletes successfully   ## Actual Behavior - IE crashes  ## Steps to reproduce -   Call deleteAllCookies during page transition causes IE crash with report 'APPCRASH'","closed","","jsa34","2018-09-13T14:08:50Z","2019-08-15T07:09:37Z"
"","6387","WebDriver execute JavaScript No response for a long time. This is occasionally present.","## Meta - OS:  windows 7  Selenium Version:  3.14.0  Browser:  Chrome    Browser Version:  68   ## Expected Behavior - return performance.timing.loadEventEnd; ## Actual Behavior - No response for a long time ## Steps to reproduce -","closed","","JackWangAndRose","2018-09-10T09:27:13Z","2019-08-15T12:09:44Z"
"","5867","Selenium Click is not working with IE11 in windows 7","## Meta - OS:  windows 7  Selenium Version:  3.10  Browser:  Internet Explorer   ## Expected Behavior -Should click on Success POPUp close button.  ## Actual Behavior -Inconsistently clicking on Popup close button.  ## Steps to reproduce -","closed","C-java,","vsplvid","2018-05-08T12:20:25Z","2019-08-16T02:09:53Z"
"","6543","Not able to enter authentication pop up through autoit , if current open page url is different than the one for which credentials are required.","## Meta - OS:  windows 7  Selenium Version:   3.14 Browser:     Firefox Selenium code: public class Test2 {     public static void main(String[] args) throws InterruptedException {         try {             ProfilesIni profile = new ProfilesIni();             FirefoxProfile testprofile = profile.getProfile(""debanjan"");             DesiredCapabilities dc = DesiredCapabilities.firefox();             dc.setCapability(FirefoxDriver.PROFILE, testprofile);             FirefoxDriver driver = new FirefoxDriver(dc);             driver.manage().window().maximize();             driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);              driver = new FirefoxDriver();             driver.navigate().to(""https://myintracomm.ec.europa.eu/en/Pages/welcome.aspx"");             Runtime.getRuntime().exec(""H:\\Officialdata1\\AUTOITScript\\HandlePopUp.exe"");}         catch(Exception e){}} AUTOIT CODE: Send(""USER"") Send(""{TAB}"") Send(""PASSWORD"") Send(""{ENTER}"")  Browser Version:  62.0.3(64BIT)  Expected Behavior -With autoit script,authentication details should be entered Actual Behavior -Username and password is still not getting entered  ## Steps to reproduce - 1.Open firefox browser with selenium code and observe whether credentials are getting entered in authentication required pop up or not.  Additional note: Inmy company when I open firefox browser, it opens some intracomm url along with authentication required pop for proxy network if you enter credentials then only you can proceed further.  I want to open url either in same tab or in new tab after entering username and password","closed","R-awaiting answer,","rupam25","2018-10-16T15:08:48Z","2019-08-15T08:09:35Z"
"","6067","Selenium 3.5.3 screen shots are not working consistently (Chrome headless)","## Meta - OS:  Windows 10.0.14393  Selenium Version:  3.5.3  Browser:  Chrome   Browser Version:  67   ## Expected Behavior - Selenium screen shots should work consistently ## Actual Behavior - Selenium screen shots are not working consistently - randomly the screen shot is a full black image - it seems the Chrome headless selenium driver instance take incorrectly screen shots from a regular opened chrome Chrome session instance ## Steps to reproduce - run two test robots testing the same application in loop for more than 24 hours, one with Chrome headless an the other with regular Chrome using the Chrome driver 2.37 1) Randomly the screen shots are a full black image 2) When a error (alert) occur on headless robot session the screen shot is take from the regular Chrome robot session","closed","","indsoftselenium","2018-06-25T10:40:54Z","2019-08-15T21:09:51Z"
"","6371","IEDriverServer.exe: Starting from version 3.5.0, screenshot only takes the visible part.","## Meta - OS:  Windows 10, version 1803 Selenium Version:  IEDriverServer.exe 3.5.0 or later Browser:  Internet Explorer Browser Version:  11.228.17134.0 (32-bit)  ## Expected Behavior - Using 32-bit IEDriverServer.exe, taking web page screenshot should save the whole page screenshot. IEDriverServer.exe version 3.4.0 or before could correctly save the whole page screenshot.  ## Actual Behavior - Starting from IEDriverServer.exe version 3.5.0, it only saves the visible part of the web page, not the entire whole page.  ## Steps to reproduce - In PowerShell,     $s=[OpenQA.Selenium.ITakesScreenshot] $webDriver;     $s.GetScreenshot().SaveAsFile($filename,[OpenQA.Selenium.ScreenshotImageFormat]::Png);  ## 32-bit or 64-bit -  My machines are all 32-bit. No ideas about it on 64-bit.  Thanks.","closed","","ghost","2018-09-06T01:30:50Z","2019-08-15T13:09:35Z"
"","6358","Selenium latest Webdriver not supporting Chrome(V-68) in Windows 10(V-1803) ,Session timed out while launching the chrome and doesnot navigates to respective URl","## Meta - OS:  Windows 10(V-1803)  Selenium Version: Latest(3.5.1) ChromeDriver 2.41 Browser:Chrome Version -68(64 -bit)  **## Expected Behavior -** Browser should launch and navigate to respective URl provided  ## Actual Behavior - Selenium latest Webdriver not supporting Chrome(V-68) in Windows 10(V-1803)   Below is the exception message and stack trace: Message : The HTTP request to the remote WebDriver server for URL http://localhost:53184/session timed out after 60 seconds. StackTrace :    at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options, TimeSpan commandTimeout)  kindly let us know if any solution for the above exception","closed","R-awaiting answer,","manyamdeepa","2018-09-03T09:26:06Z","2019-08-14T23:09:38Z"
"","6519","MIME type lost when using SendKeys() to upload an xlsx file","## Meta - OS:  Windows 10 x86 Selenium Version:  2.53 Browser:  Chrome Browser Version:  69.0.3497.92   ## Expected Behavior - SendKeys() (using LocalFileDetector) forwards my file properly to an  element, with its MIME type intact. ## Actual Behavior - When sending an xlsx file, the MIME type is lost and the client page cannot validate the file using its type. ## Steps to reproduce - ```csharp var input = _driver.FindElementByCssSelector(""input""); input.SendKeys(@""C:\myfile.xlsx"");` ```","closed","","alprema","2018-10-10T12:12:09Z","2019-08-15T07:09:45Z"
"","6166","ERR_NAME_NOT_RESOLVED on heroku with mobile testing","## Meta - OS:  Windows 10 working vs cedar 14 stack heroku not working Selenium Version:  selenium==3.13.0 Browser:  Chrome https://github.com/heroku/heroku-buildpack-chromedriver chromedriver v2.40  I'd like to test multiple mobile user agents with selenium and chrome. I'm using python 3.6 and deploying to heroku. Based on http://chromedriver.chromium.org/mobile-emulation , I have:      def some_long_calculation():         driver = create_chromedriver('kkk')         # driver = create_chromedriver()              driver.get(""https://www.yahoo.com/"")         .....  and :  	def create_chromedriver(ua=False): 	    options = webdriver.ChromeOptions() 	    CHROMEDRIVER_PATH = os.getenv('$HOME') or basedir+'/chromedriver.exe' 	    FLASK_CONFIG = os.getenv('FLASK_CONFIG')  	    if ua:  	        mobile_emulation = {""deviceName"": ""Nexus 5""} 	        options.add_experimental_option(""mobileEmulation"", mobile_emulation)   	    if FLASK_CONFIG and FLASK_CONFIG == ""production"": 	        CHROMEDRIVER_PATH = '/app/.chromedriver/bin/chromedriver' 	        GOOGLE_CHROME_SHIM = os.getenv('$GOOGLE_CHROME_SHIM') or 'no path found' 	        options.binary_location = '/app/.apt/usr/bin/google-chrome-stable'  	        options.add_argument('--disable-gpu') 	        options.add_argument('--no-sandbox')  	    return webdriver.Chrome(executable_path=CHROMEDRIVER_PATH, options=options)    If I run it locally with the mobile browser enabled It works as expected:   [![enter image description here][2]][2]   If I run it on heroku with the mobile browser enabled :  [![enter image description here][3]][3]  Then I tried it on heroku with the mobile user disabled I get:  [![enter image description here][1]][1]  So at least I know the setup is working as far as chrome and chromedriver.   heroku Logs:  	2018-07-15T17:37:53.967643+00:00 app[web.1]:     driver = create_chromedriver('kkk') 	2018-07-15T17:37:53.967637+00:00 app[web.1]:     png = some_long_calculation() 	2018-07-15T17:37:53.967645+00:00 app[web.1]:   File ""/app/app/main/cl.py"", line 120, in create_chromedriver 	2018-07-15T17:37:53.967640+00:00 app[web.1]:   File ""/app/app/main/cl.py"", line 123, in some_long_calculation 	2018-07-15T17:37:53.967648+00:00 app[web.1]:     return webdriver.Chrome(executable_path=CHROMEDRIVER_PATH, options=options) 	2018-07-15T17:37:53.967651+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 75, in __init__ 	2018-07-15T17:37:53.967654+00:00 app[web.1]:     desired_capabilities=desired_capabilities) 	2018-07-15T17:37:53.967656+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 156, in __init__ 	2018-07-15T17:37:53.967659+00:00 app[web.1]:     self.start_session(capabilities, browser_profile) 	2018-07-15T17:37:53.967661+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 251, in start_session 	2018-07-15T17:37:53.967669+00:00 app[web.1]:     response = self.command_executor.execute(driver_command, params) 	2018-07-15T17:37:53.967664+00:00 app[web.1]:     response = self.execute(Command.NEW_SESSION, parameters) 	2018-07-15T17:37:53.967667+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 318, in execute 	2018-07-15T17:37:53.967672+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 472, in execute 	2018-07-15T17:37:53.967674+00:00 app[web.1]:     return self._request(command_info[0], url, body=data) 	2018-07-15T17:37:53.967677+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/site-packages/selenium/webdriver/remote/remote_connection.py"", line 496, in _request 	2018-07-15T17:37:53.967679+00:00 app[web.1]:     resp = self._conn.getresponse() 	2018-07-15T17:37:53.967682+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/http/client.py"", line 1331, in getresponse 	2018-07-15T17:37:53.967685+00:00 app[web.1]:     response.begin() 	2018-07-15T17:37:53.967687+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/http/client.py"", line 297, in begin 	2018-07-15T17:37:53.967695+00:00 app[web.1]:     line = str(self.fp.readline(_MAXLINE + 1), ""iso-8859-1"") 	2018-07-15T17:37:53.967690+00:00 app[web.1]:     version, status, reason = self._read_status() 	2018-07-15T17:37:53.967698+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/socket.py"", line 586, in readinto 	2018-07-15T17:37:53.967692+00:00 app[web.1]:   File ""/app/.heroku/python/lib/python3.6/http/client.py"", line 258, in _read_status 	2018-07-15T17:37:53.967700+00:00 app[web.1]:     return self._sock.recv_into(b) 	2018-07-15T17:37:53.967712+00:00 app[web.1]: ConnectionResetError: [Errno 104] Connection reset by peer   How can I fix this?     [1]: https://i.stack.imgur.com/32ObW.png   [2]: https://i.stack.imgur.com/fSGZY.png   [3]: https://i.stack.imgur.com/eVP8Z.png","closed","","kc1","2018-07-16T14:28:09Z","2019-08-15T17:09:59Z"
"","5876","Unable to create new service: ChromeDriverService","## Meta - OS:  Windows 10 Hub, Ubuntu 18.04 Node Selenium Version:  3.12.0 Browser:  chromedriver Browser Version:  2.38.552522 (64 bit) ## Expected Behavior -  Chromedriver opens and navigates to http://www.google.com on Linux virtual machine node after being initiated from Java code on Windows 10 hub  ## Actual Behavior - org.openqa.selenium.SessionNotCreatedException: Unable to create new service: ChromeDriverService ## Steps to reproduce - 1. Set up an Ubuntu 18.04 virtual machine on a Windows 10 host 2. Begin selenium hub on host with  ```java -jar selenium-server-standalone-3.12.0.jar -role hub``` 3. Begin selenium node on Ubuntu machine with  ```java -Dwebdriver.chrome.driver="""" -jar selenium-server-standalone-3.12.0.jar -role node -hub http://:4444/grid/register``` 4. Run the following code on the host machine  ```Java @Test public void test() throws MalformedURLException { 	DesiredCapabilities desCap = DesiredCapabilities.chrome(); 	desCap.setPlatform(Platform.LINUX); 	WebDriver remoteWebDriver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), desCap); 	remoteWebDriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS); 	remoteWebDriver.get(""http://www.google.com""); 	remoteWebDriver.close(); } ```","closed","OS-linux,","Lastrellik","2018-05-09T19:25:58Z","2019-08-15T10:09:44Z"
"","5865","Unable to create new session in Windows 10 Home","## Meta - OS:  Windows 10 Home  Selenium Version:  3.11.0  Browser:  Chrome  Browser Version:  66.0.3359.139  ## Expected Behavior - Create successfully Chrome session.  ## Actual Behavior - Unable to create new session.  ## Steps to reproduce - - Start driver : java -jar -Dwebdriver.gecko.driver=""chromedriver-Windows"" ""selenium-server-standalone-3.11.0.jar""  - Go to http://localhost:4444/  - Create new session.  ![screenshot_4](https://user-images.githubusercontent.com/33948097/39741764-4aef0f5a-52c5-11e8-9e36-6dc1f9b4e925.png)  Please help me to resolve this.  Thank you.","closed","","Sondt88","2018-05-08T06:40:19Z","2019-08-16T01:09:59Z"
"","6309","Failed to use driver.add_cookie: selenium.common.exceptions.InvalidArgumentException: Message: Missing 'name' parameter","## Meta - OS:  Windows 10 and Kali 2018.2 Selenium Version:   3.14 Browser:   Firefox 61.0.2 x64 and Chrome  ## Expected Behavior - It was supposed to load the cookies into the request  ## Actual Behavior - ``` Traceback (most recent call last):   File "".\facemembers.py"", line 13, in      browser.add_cookie(cookies_dict)   File ""C:\Users\Avell\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 882, in add_cookie     self.execute(Command.ADD_COOKIE, {'cookie': cookie_dict})   File ""C:\Users\Avell\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 320, in execute     self.error_handler.check_response(response)   File ""C:\Users\Avell\AppData\Local\Programs\Python\Python37-32\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: Missing 'name' parameter ```  Code: ``` from selenium import webdriver page = 'https://web.facebook.com/groups/XXXXXXXXXXXXXXX/members/' cookies_dict = {'fr':'33LKFQhckx8mGrMUlE.AWXpnaLnjFGNeVTnjRHuQWhKVNw.BbDdVC.q0.AAA.0.0.BbdxgP.AWWkiPIU', 's':'hd3W7oQewTUO0Fpmr3Si3lo', 'w':'920x793', 'datr':'hd3W_nuEw45z4hYE8u3x_xM', 'c_use':'00020831689959', 'x':'3%3AZ4Yd9BOPffF3vA%3A2%3A1534531599%3A2894%3A5516', 'p':'', 'ac':'534531610492%2F3', 'presenc':'DvF3EtimeF1534531612EuserFA21B20831689959A2EstateFDt3F_5b_5dG534531612574CEchFDp_5f1B20831689959F10CC'} #cookies_dict = dict(fr='0LKFQhckx8mGrMUlE.AWXpnaLnjFGNeVTnjRHuQWhKVNw.BbDdVC.q0.AAA.0.0.BbdxgP.AWWkiPIU', s='hd3W7oQewTUO0Fpmr3Si3lo', w='920x793', datr='hd3W_nuEw45z4hYE8u3x_xM', c_use='00020831689959', x='3%3AZ4Yd9PO0BOPffF3vA%3A2%3A1534531599%3A2894%3A5516', p='', ac='534531610492%2F3', presenc='DvF3EtimeFdfdgf1534531612EuserFA21B20831689959A2EstateFDt3F_5b_5dG534531612574CEchFDp_5f1B208316899fghghf59F10CC')  browser = webdriver.Firefox() browser.get(page) browser.add_cookie(cookies_dict) ```  Note: The cookie values are different than tha actual values for safety porpouses. Note2: I tried to add the cookies with the two different formats ({'':''} and dict()), but same behavior.","closed","","ualvesdias","2018-08-20T16:20:55Z","2019-08-15T15:09:36Z"
"","5872","Selenium Java 3.11.0 Unable to go to the designated site","## Meta - OS:  Windows 10 64bit Selenium Version:  3.11.0 Browser:  Firefox Browser Version:  59.0.3 64 bit  I use the latest client code to start the Firefox browser, unable to navigate, that is, no effect.  ## Expected Behavior - Navigate to Google ## Actual Behavior - Open the browser and stop ## Steps to reproduce - here is my code ${org.seleniumhq.selenium.version} = 3.11.0  		 			 				org.seleniumhq.selenium 				selenium-java 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-server 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-api 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-support 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-firefox-driver 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-remote-driver 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-chrome-driver 				${org.seleniumhq.selenium.version} 			  			 				org.seleniumhq.selenium 				selenium-firefox-driver 				${org.seleniumhq.selenium.version} 			  			 				junit 				junit 				${junit.version} 				test 			 		 	 ----------------------------------------------------- package com.everyone.selenium.common.test;  import java.io.File;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions; import org.openqa.selenium.firefox.FirefoxBinary; import org.openqa.selenium.firefox.FirefoxBinary.Channel; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxDriverLogLevel; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.opera.OperaDriver; import org.openqa.selenium.remote.DesiredCapabilities;  public class BrowserSessionTest {  	public static void main(String[] args) { 		System.setProperty(""java.net.preferIPv4Stack"", ""true""); 		System.setProperty(""webdriver.gecko.driver"",""D:\\MySoftware\\Firefox\\firefox.exe""); 		String pathToBinary = ""D:\\MySoftware\\Firefox\\firefox.exe""; 		FirefoxBinary firefoxBinary = new FirefoxBinary(new File(pathToBinary)); 		FirefoxOptions options = new FirefoxOptions(); 		options.setBinary(firefoxBinary); 		options.setLogLevel(FirefoxDriverLogLevel.TRACE); 		WebDriver webDriver = new FirefoxDriver(options); 		webDriver.get(""http://www.google.com""); 		webDriver.close(); 	}  }","closed","","ifanjiaxing","2018-05-09T08:27:56Z","2019-08-16T02:09:56Z"
"","6211","Browser not invoking getting error The driver executable does not exist at path","## Meta - OS:  Windows 10 64 bit Selenium Version:   Eclipse: oxygen 3a Java version 1.8.4 64 bit  Browser:  Chrome Chrome driver installed latest -->   ## Expected Behavior - Browser should invoke and hit the given url  ## Actual Behavior - Below error is displayed Exception in thread ""main"" java.lang.IllegalStateException: The driver executable does not exist: C:\workspace\Intro\‪‪D:\chromedriver\chromedriver.exe 	at com.google.common.base.Preconditions.checkState(Preconditions.java:585) 	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:137) 	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:132) 	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35) 	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:156) 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:346) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:91) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at pacakage1.seleniumintro.main(seleniumintro.java:12)   ## Steps to reproduce - code: package pacakage1;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class seleniumintro {  	public static void main(String[] args) { 		// TODO Auto-generated method stub  System.setProperty(""webdriver.chrome.driver"",""‪‪D:\\chromedriver\\chromedriver.exe""); 				WebDriver driver = new ChromeDriver(); 				 				driver.get(""http://google.com"");  			}  		}","closed","","priyankakul07","2018-07-27T06:37:12Z","2019-08-14T16:09:52Z"
"","5886","Taking screenshots on SauceLabs using ""report"" (Geb framework) prevents successful execution","## Meta - OS:  Windows 10 - SauceLabs  Selenium Version:  3.9.1  Browser:  IE11   Browser Version:  11.103   ## Expected Behavior - Successful test execution while screenshots are taken. ## Actual Behavior - I experience a strange behavior during test execution using IE11 on Win10. There is a strange surge, bump, vibration or bounce every couple of seconds. This strange short vibration is experienced during the whole execution. This prevents running all our tests using IE11. The exact same test is running perfectly fine in a k8s environment inside the company using Chrome. We figured out with SauceLabs Support that if “report” is not used this strange behavior disappears. EDGE works fine with the same test using “report”. ## Steps to reproduce - Run tests using the Geb framework (http://www.gebish.org) on IE11 / Windows 10","closed","","rnemeth1980","2018-05-11T13:31:03Z","2019-08-16T02:09:46Z"
"","6492","Can not start session because of invalid character in USER_AGENT string","## Meta - OS:  Windows 10 (Locale TR) Selenium Version:  3.14.0 Browser:  N/A Browser Version:  N/A Driver info: driver.version: FirefoxDriver os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_144'  ## Expected Behavior - Start Firefox window and Open the URL  ## Actual Behavior - Gets exception and Can not start   Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:05:20.749Z' System info: host: 'SAMSUNG-PC', ip: '192.168.1.220', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_144' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:569) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:103) 	at com.bozdemir.download.bistbulten.Test.main(Test.java:30) Caused by: java.lang.IllegalArgumentException: Unexpected char 0x131 at 23 in User-Agent value: selenium/3.14.0 (java wındows) 	at okhttp3.Headers$Builder.checkNameAndValue(Headers.java:352) 	at okhttp3.Headers$Builder.add(Headers.java:290) 	at okhttp3.Request$Builder.addHeader(Request.java:196) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:85) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:101) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	... 5 more  ## Steps to reproduce - ```     	WebDriver driver = new FirefoxDriver(); 	 // And now use this to visit Google         driver.get(""http://www.google.com""); ```  on a Turkish windows 10 machine generates exception.","closed","C-java,","bozdemir84","2018-10-07T22:35:54Z","2019-08-14T15:09:45Z"
"","6497","Unable to set selenoid specific capabilities in C#","## Meta - OS:  Windows 10 & Linux  Selenium Version:   Selenium.WebDriver 3.14.0  Browser:   Firefox & Chrome  Browser Version:   Firefox 60.0 64-bit Chrome 66.0 64-bit  ## Expected Behavior - Ability to set capabilities for `selenoid`  ## Actual Behavior - `warning CS0618: 'DesiredCapabilities.SetCapability(string, object)' is obsolete: 'Use of DesiredCapabilities has been deprecated in favor of browser-specific Options classes'`  ## Steps to reproduce - n/a  ## Description:  How should capabilities for `selenoid` be set in C# now when `DesiredCapabilities` is deprecated?   The documentation does not mention this use case as far as I can see.  E.g. enabling VNC, which we currently do using `DesiredCapabilities` ```csharp var cap = new DesiredCapabilities() cap.SetCapability(""enableVNC"", configuration.EnableVNC); Driver = new RemoteWebDriver(uri, cap); ``` [Selenoid capabilities docs](https://aerokube.com/selenoid/latest/#_special_capabilities)","closed","","gustafj","2018-10-09T10:44:59Z","2019-08-15T08:09:54Z"
"","5941","Chrome driver returns platform and platformName as XP on Win10 machine","## Meta - OS:  Windows 10  x64 Selenium Version:   3.12.0 Browser:   Chrome   Browser Version:   66.0.3359.181 x64  ## Expected Behavior - platform and platformName should return the correct value. Ideally win10. ## Actual Behavior - driver.capabilities.getPlatform() and driver.capabilities.asMap().get(""platformName"") returns ""XP"" value. ## Steps to reproduce - See https://bugs.chromium.org/p/chromedriver/issues/detail?id=2435 issue","closed","","AlexanderPoleschuk","2018-05-24T15:27:12Z","2019-08-16T00:09:41Z"
"","6180","parseHttpResponse should indicate which command is unsupported","## Meta - OS:  Windows 10 Selenium Version: selenium-webdriver@4.0.0-alpha.1 Browser: For testing, Internet Explorer Browser Version: 11  ## Expected Behavior -  When your browser driver doesn't support a command, it can be useful to know _which_ command isn't supported.  ## Actual Behavior -  Here's the report you get:  ``` UnsupportedOperationError: Error 404: Not Found     Not Found        at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:558:11)       at Executor.execute (node_modules/selenium-webdriver/lib/http.js:468:26) ```  Tracing this down, `let value = httpResonse.body.replace(/\r\n/g, '\n');` could have `command.getName() + ': '` prepended. I can do that if you don't mind?  ## Steps to reproduce -  Send a `close` command to `IEDriverServer.exe`.  I'm accomplishing this by using `jest-webdriver` and `jest-dev-server`.","closed","C-nodejs,","JoshuaKGoldberg","2018-07-19T05:01:30Z","2019-08-15T09:09:54Z"
"","6454","Selenium IDE Window - width auto adjusts","## Meta - OS:  Windows 10 Selenium Version: 3.3.1   Browser: Google Chrome Browser Version: 69.0.3497.100 (64-bit)  ## Expected Behavior - The Selenium IDE Windows remain at a fixed width  ## Actual Behavior - Selenium IDE Window containing the Tests / Test Suites / Executing changes width when the mouse moves over it. It makes the main window readjust so it is difficult to click on commands.  ## Steps to reproduce - Move mouse over the left window. Move the mouse to the main window.  ![capture1](https://user-images.githubusercontent.com/33250281/46132896-3308ba80-c237-11e8-8911-89eeb6ba46d7.png)  ![capture2](https://user-images.githubusercontent.com/33250281/46132871-271cf880-c237-11e8-98fa-3ac4cc412d81.PNG)","closed","","ClaireHut42","2018-09-27T08:26:41Z","2019-08-15T09:09:57Z"
"","6320","webdriver FireFox in selenium always opens a blank tab and new IE tab.","## Meta - OS:  Windows 10 Selenium Version: 3.14.0   Browser:  Firefox Browser Version:  geckodriver-v0.21.0-win64  ## Expected Behavior - Open website on firefox ``` # import the webdriver from selenium import webdriver  # set exe path and open the browser. driver = webdriver.Firefox() # open website driver.get(""http://google.com"") ```  ## Actual Behavior - Open blank tab and IE tab. The same with this questtion:  https://stackoverflow.com/questions/47942677/webdriver-in-selenium-opens-a-new-internet-explorer-tab-in-firefox  I tried all the answers in that topic but still no hope.  Do you have any solutions ?","closed","","Khoa-NT","2018-08-23T09:06:54Z","2019-08-15T14:09:57Z"
"","6184","Erroneous log on hub (Marking the node http://192.168.137.1:5566 as down: cannot reach the node for 2 tries) and connection timeout on grid console","## Meta - OS:  Windows 10 Selenium Version: 3.13.0  Browser:  Chrome  Browser Version:  Version 67.0.3396.99 (Official Build) (64-bit)   ## Expected Behavior -Node should be registered successfully  ## Actual Behavior - Erroneous log on hub (Marking the node http://192.168.137.1:5566 as down: cannot reach the node for 2 tries) and connection timeout on grid console  ## Steps to reproduce -1.Start hub by using :   java -jar selenium-server-standalone-3.13.0.jar -role hub                                        2.start node by using : java -Dwebdriver.chrome.driver=""D:\chromedriver.exe"" -jar selenium-server-standalone-3.13.0.jar -role webdriver -hub http://192.168.1.3:4444/grid/register -port 5566                                      3.Launch grid console by using: http://192.168.1.4:4444/grid/console   ![gridconsole](https://user-images.githubusercontent.com/41361533/42959553-dedb9b60-8ba6-11e8-869e-ec6bc6da41fa.png)","closed","","mishrasanjeetr","2018-07-19T17:26:55Z","2019-08-15T18:09:36Z"
"","6023","Feature Request","## Meta - OS:  Windows 10 Selenium Version:  Selenium IDE 3.0.3.0 Browser:   Firefox  ## Feature Request - Ability to drag and drop tests within a test suite into a specific order before running the entire suite.    This would be a great feature since a lot of objects have to be created in a specific order in projects.","closed","","MStahl15","2018-06-14T20:19:29Z","2019-08-15T22:09:53Z"
"","6567","`getRect` failed for AndroidDriver using selenium-webdriver of version 4.0.0-alpha1 (nodejs)","## Meta - OS:  Windows 10 Selenium Version:  4.0.0-alpha1 (nodejs) Browser:  Appium Native (Andoid 7 Emulator)  ## Expected Behavior - As both methods `getSize` and `getPosition` were removed from `Window` class in version 4, the only way to get size is to use `getRect` method. ```js const rect = await driver.manage().window().getRect(); -> {width: 400, height: 600, left: 0, top: 0} ```  ## Actual Behavior - Throws next error: ```js WebDriverError: Method is not implemented     at Object.checkLegacyResponse (node_modules\selenium-webdriver\lib\error.js:585:15)     at parseHttpResponse (node_modules\selenium-webdriver\lib\http.js:533:13)     at Executor.execute (node_modules\selenium-webdriver\lib\http.js:468:26) ``` Following logs of selenium driver, it sacessfully executes `getSize` method, but fails on `getPosition`. So, I gues it should use position `0:0` when driver is not supported the command. ``` [HTTP]  GET /wd/hub/session/5d3a7cf1-9dde-4924-8318-7ef04c75e9d3/window/current/position {} [HTTP]","closed","","astappiev","2018-10-22T17:19:04Z","2019-08-15T06:09:50Z"
"","5973","[python] throws “ No connection could be made because the target machine actively refused it” error without using quit","## Meta - OS:  Windows 10 Selenium Version:  3.6.0 Browser:  PhantomJS  Browser Version:  2.1.1 (64 bit) Python : 3.5  ## Expected Behavior -  Shouldn't throw the error as i didn't even used quit() method  ## Actual Behavior - selenium python throws **“ No connection could be made because the target machine actively refused it”** error even without using quit ## Steps to reproduce - Use following code to reproduce the problem ```Python from selenium import webdriver import time import os  class Account:     def __init__(self,client):         self.client = client         self.foo()      def foo(self):         self.client.get(""https://google.com"")  class User:     def __init__(self,id):         self.id = id      def search(self,account):         account.client.get(""https://wwww.google.com"")   client = webdriver.PhantomJS() a = Account(client) a.foo()  while True:     someid = input(""Input id : "")     u = User(someid)     u.search(a)     while True:         try:             u.search(a)             os.system(""cls"")             print(""Started.... press ctrl+c to stop"")             time.sleep(1)         except KeyboardInterrupt:             break     if input(""Search more? (y/n)"").lower() == ""n"":         break ``` The error :     >  No connection could be made because the target machine actively refused it  is been thrown in the second iteration of first while (when i stops inside loop and allow continuation of first loop)    **Log :** [ghostdriver.log](https://github.com/SeleniumHQ/selenium/files/2060963/ghostdriver.log)","closed","","Sreyas-Sreelal","2018-06-01T04:12:30Z","2019-08-16T00:09:45Z"
"","6528","Holding non-modifier key crashes Selenium in .NET","## Meta - OS:  Windows 10 Selenium Version:  3.14.0 Browser:  Any  Unable to hold a non-modifier key down. Because of [SingleKeyAction.cs#L46](https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Interactions/SingleKeyAction.cs#L45). Even though it isn't used in my case. I also cannot find anything about holding down keys is only limited to modifier keys. Please correct me if I'm wrong.   I'm happy to provide a PR that would fix my case.   ## Expected Behavior - Holds down the specified key in my example the space key.   ## Actual Behavior - Throws exception: `key must be a modifier key (Keys.Shift, Keys.Control, Keys.Alt, Keys.Meta, Keys.Command, Keys.LeftAlt, Keys.LeftControl, Keys.LeftShift)`  ## Steps to reproduce -  Use this `Actions.KeyDown(Keys.Space);`","closed","C-dotnet,","Matthiee","2018-10-12T09:28:07Z","2021-09-05T08:31:31Z"
"","6499","requireWindowFocus set as a Capability does not set that ieOption.requireWindowFocus when InternetOptions is initialized with DesiredCapabilties","## Meta - OS:  WIndows 10 Selenium Version:  3.14 Browser:  Internet Explorer 11 Browser Version:  11.665.16299.0CO   When I set the capability of requireWindowFocus as a .setCapability(entry, value):  and then start webdriver as new InternetExplorerDriver(new InternetExplorerOptions()); the capability does not get set in the driver.  Java Code that worked in selenium 3.12, but not in selenium 3.14:  DesiredCapabilities desiredCapabilities= new DesiredCapabilities().internetExplorer(); desiredCapabilities.setPlatform(Platform.WINDOWS); InternetExplorerOptions ieOptions = new InternetExplorerOptions(desiredCapabilities);  ieOptions.setCapability(""requireWindowFocus"", true);  this.driver = new InternetExplorerDriver(ieOptions);  Java Code that works in 3.14: InternetExplorerOptions ieOptions = new InternetExplorerOptions();  ieOptions.setCapability(""requireWindowFocus"", true);  this.driver = new InternetExplorerDriver(ieOptions);  Is this a supposed to act this way in the new selenium release in 3.14?","closed","C-java,","ivanvandessel","2018-10-09T18:29:04Z","2019-08-15T07:10:05Z"
"","6498","/GET/session/{session id}/element/{element id}/equals/{other id} is not a W3C conformant command","## Meta - OS:  Windows 10 Selenium Version:  3.14 Browser:  Firefox  Browser Version:  64.0a1  ## Expected Behavior - Most Selenium bindings call /equals/{other id} in certain cases. Speaking of .NET bindings I previously submitted [issue 6129](https://github.com/SeleniumHQ/selenium/issues/6129) a few months ago, thinking that the equals command was part of the W3C standard and should work or at least provide a shim.  ## Actual Behavior - The reason for this is that [the W3C standard doesn't have any /element{id}/equals/ command](https://www.w3.org/TR/webdriver1/#list-of-endpoints).  However all the implementations rely on it one way or another: - [relevant Java bindings](https://github.com/SeleniumHQ/selenium/blob/07a18746ff756e90fd79ef253a328bd7dfa9e6dc/java/client/src/org/openqa/selenium/remote/http/AbstractHttpCommandCodec.java#L169) - [relevant Python bindings](https://github.com/SeleniumHQ/selenium/blob/c88ac018489ebfe7366c7da8fc2fded963b2fe2d/py/selenium/webdriver/remote/remote_connection.py#L212) - [relevant C++ bindings](https://github.com/SeleniumHQ/selenium/blob/ef87df83b084406800c456b673c692c475f43d28/cpp/webdriver-server/server.cc#L771) - [relevant .NET bindings](https://github.com/SeleniumHQ/selenium/blob/07a18746ff756e90fd79ef253a328bd7dfa9e6dc/dotnet/src/webdriver/Remote/W3CWireProtocolCommandInfoRepository.cs#L118) - [relevant Javascript bindings](https://github.com/SeleniumHQ/selenium/blob/07a18746ff756e90fd79ef253a328bd7dfa9e6dc/javascript/webdriver/http/http.js#L272)  This results in  ``` 1531119112888   webdriver::server       DEBUG   -> GET /session/9676b5a3-4619-456d-95dc-f85d7677a56b/element/17729eda-aec3-4c7a-835c-27223f038b0b/equals/9d0b339f-811b-4079-b30d-5d0d886fbd81 1531119112888   webdriver::server       DEBUG","closed","","curtisy1","2018-10-09T12:59:35Z","2019-08-15T07:10:08Z"
"","6291","Command.GET_LOCAL_STORAGE_KEYS can't get any localstorage?","## Meta - OS:  windows 10 Selenium Version:  3.14 Browser:  chrome 67 Browser Version:   67.0.3396.62  in command.py (\selenium\webdriver\remote\command.py) file ,I find those commands about localstorage or sessionstorage，such as：GET_LOCAL_STORAGE_ITEM、GET_LOCAL_STORAGE_KEYS， so，I want to use those command to get localstorage,I write python script like: ``` print(chrome.execute(Command.GET_LOCAL_STORAGE_KEYS)) ``` but response is : {u'status': 0, u'sessionId': u'e0be945d85d7938378a00ea21e234dae', u'value': []} actually，in web browser , I can get some localstorage.  the chrome desired_capabilities： ``` {u'takesScreenshot': True, u'acceptSslCerts': False, u'networkConnectionEnabled': False, u'mobileEmulationEnabled': False, u'unexpectedAlertBehaviour': u'', u'applicationCacheEnabled': False, u'locationContextEnabled': True, u'goog:chromeOptions': {u'debuggerAddress': u'localhost:58762'}, u'rotatable': False, u'acceptInsecureCerts': False, u'hasTouchScreen': False, u'platform': u'Windows NT', u'version': u'67.0.3396.62', u'nativeEvents': True, u'handlesAlerts': True, u'takesHeapSnapshot': True, u'javascriptEnabled': True, u'databaseEnabled': False, u'browserName': u'chrome', u'webStorageEnabled': True, u'browserConnectionEnabled': False, u'cssSelectorsEnabled': True, u'chrome': {u'chromedriverVersion': u'2.41.578737 (49da6702b16031c40d63e5618de03a32ff6c197e)', u'userDataDir': u'C:\\Users\\Administrator\\AppData\\Local\\Temp\\scoped_dir18392_8926'}, u'setWindowRect': True, u'pageLoadStrategy': u'normal'} {u'status': 0, u'sessionId': u'e0be945d85d7938378a00ea21e234dae', u'value': []} ``` the 'webStorageEnabled' is true，so why i can't get any localstorage?","closed","","fengguangke","2018-08-16T02:46:07Z","2019-08-15T15:09:48Z"
"","6129","Calling IndexOf() on a Collection throws NotImplementedException","## Meta - OS:  Windows 10 Selenium Version:  3.13.1 .NET Browser:  Firefox Browser Version:  63.0a1 (2018-07-08) (64-bit)  ## Expected Behavior - Since the element was found in the Collection, a proper index should be returned when calling ```Collection.IndexOf(element);```.  ## Actual Behavior - A System.NotImplementedException is thrown. ``` 1531119112888   webdriver::server       DEBUG   -> GET /session/9676b5a3-4619-456d-95dc-f85d7677a56b/element/17729eda-aec3-4c7a-835c-27223f038b0b/equals/9d0b339f-811b-4079-b30d-5d0d886fbd81 1531119112888   webdriver::server       DEBUG","closed","C-dotnet,","curtisy1","2018-07-09T07:00:26Z","2019-08-15T08:09:52Z"
"","6121","ElementClickInterceptedException is too verbose","## Meta - OS:  Windows 10 Selenium Version:  3.12.0 Browser:  Internet Explorer  ## Expected Behavior - Exception text should be brief.  ## Actual Behavior - Exception text includes thousands of lines of output.  ```` Element not clickable at point (1769,639). Other element would receive the click:","closed","D-IE,","ccarmannt","2018-07-06T15:26:44Z","2019-08-15T12:09:36Z"
"","5951","Click is Passed But Action is not Performed on element using gecko driver !","## Meta - OS:  Windows 10 Selenium Version:  3.12 Browser:  Firefox ? Browser Version:  60.0.1 (64-bit)  ## Expected Behavior - Element Should Clicked.  ## Actual Behavior - Click Action is not Performed on element  ## Steps to reproduce - Open website https://www.shop.com/  Click on Drop down where All Department is by default chosen inside search text box Click on Drop-down to open drop-down list click  Cameras Option inside list  Click is Passed but Action is not performed.","closed","D-firefox,","Sbhatia55","2018-05-29T13:56:28Z","2019-08-15T21:09:44Z"
"","5945","IE: Clear() call fails for javascript validated text input field","## Meta - OS:  Windows 10 Selenium Version:  3.11/3.12 Browser: Internet Explorer Browser Version: 11.431.16299.0  ## Expected Behavior - Calling Clear() on an IWebElement representing a text field should empty the field.  ## Actual Behavior - Calling Clear() on an IWebElement representing a text field does not empty the field.  It appears that this problem only occurs for text fields that have an attached javascript behavior that validates/repopulates the field when it loses focus.  This problem does not occur using the latest ChromeDriver (2.38.0.1), but does with the IEDriver (3.11.0/3.12.0). The IEDriver works correctly at version 3.8.0.  ## Steps to reproduce - C# test:  ```` 		public void EnterDate_Test() 		{ 			var ied = new InternetExplorerDriver(); 			var uri = new Uri(""c:\\temp\\html\\default.html""); 			ied.Navigate().GoToUrl(uri.AbsoluteUri); 			var input = ied.FindElementById(""doctor""); 			input.Clear(); 		} ````  HTML source:  ````         Cloudy with a chance of Brimstone 	 	  function whosit() { 	    window.document.getElementById(""doctor"").value = new Date().toLocaleTimeString() 	  } 	   	  function whatsit() { 	    window.document.getElementById(""doctor"").value = new Date().toLocaleTimeString() 	  } 	           Something something      	   	     ````","closed","","ccarmannt","2018-05-25T13:31:25Z","2019-08-16T00:09:58Z"
"","5966","[14596:10928:0531/174034.867:ERROR:install_util.cc(589)] Unable to create registry key HKLM\SOFTWARE\Policies\Google\Chrome for reading result=2  [14452:3972:0531/170507.354:ERROR:install_util.cc(597)] Unable to read registry value HKLM\SOFTWARE\Policies\Google\Chrome\MachineLevelUserCloudPolicyEnrollmentToken for writing result=2","## Meta - OS:  Windows 10 Selenium Version:  3.11.0  Browser:  Chrome  Chrome driver: 2.39.562718  Browser Version:  Version 67.0.3396.62 (Official Build) (64-bit)  ## Expected Behavior - Chrome should open smoothly without any error and url has to be navigated  ## Actual Behavior - Chrome browser is getting launched but navigation is not working. ## Steps to reproduce - Create a chrome driver object and navigate to url.  ## Debug log -  https://gist.github.com/gittadesushil/1c7e49e05316600c3cb9c2ab4dade6ad","closed","","gittadesushil","2018-05-31T11:52:03Z","2019-08-15T01:09:43Z"
"","6229","Server returned HTTP response code: 405 in IE11 Driver when using getTabIds/switchTab","## Meta - OS:  Windows 10 Selenium Version:  3.11.0 Browser:   Internet Explorer IEDriver server version:  3.13.0.5 Browser Version:  11.0.9600.19078 (64-bit)   ## Expected Behavior - This API work well in IE11 ## Actual Behavior - Error: java.io.IOException: Server returned HTTP response code: 405 for URL: http://localhost:46906/session/97c7f754-8172-4aef-baf9-0a6ec6e08eee/window_handles running internet explorer (v11) Error: An unknown server-side error occurred while processing the command.     at Object.getTabIds (E:\Octans\Configuration-test\F18.8\garoon\tests\tcb-selenium\node_modules\wdio-sync\build\index.js:349:27)  ## Steps to reproduce - I have got a failure when running browser.getTabIds(); API in IE11, could you please have some advice? ``` Script:         browser.url('http://webdriver.io');         const tabIds = browser.getTabIds();         browser.switchTab(tabIds[1]);  ``` I use Grid to implement: ------------------------- Log from Hub: -------------------   C:\GRID>java -jar selenium-server-standalone-3.11.0.jar -role hub 18:36:40.685 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.11.0', revision: 'e59cfb3' 18:36:40.687 INFO [GridLauncherV3$2.launch] - Launching Selenium Grid hub on port 4444 2018-07-31 18:36:41.034:INFO::main: Logging initialized @603ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:36:41.192 INFO [Hub.start] - Selenium Grid hub is up and running 18:36:41.192 INFO [Hub.start] - Nodes should register to http://10.192.8.5:4444/grid/register/ 18:36:41.192 INFO [Hub.start] - Clients should connect to http://10.192.8.5:4444/wd/hub 18:36:44.542 INFO [DefaultGridRegistry.add] - Registered a node http://10.192.8.5:7777 18:40:13.462 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: internet explorer, handlesAlerts: true, javascriptEnabled: true, locationC ontextEnabled: true, loggingPrefs: org.openqa.selenium.logging..., maxInstances: 1, requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.13.1}, rotatable: true, vers ion: 11} 18:40:13.466 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {webdriver.ie.driver=C:/Program Files (x86)/Internet Explorer/iexplore.exe, server:CONFIG_UUID=9 5c55c53-df36-471e-85e0-b207a61ac316, seleniumProtocol=WebDriver, browserName=internet explorer, ignoreProtectedModeSettings=true, maxInstances=10, platformName=WINDOWS, version=11, plat form=WINDOWS}    Log from Node: -------------------   C:\GRID>java -Dwebdriver.ie.driver=""C:/GRID/IEDriverServer_latest.exe"" -jar selenium-server-standalone-3.11.0.jar -role node -hub http://10.192.8.5:4444/grid/register -nodeConfig ""C:/GR ID/nodeconfig_IE11_local.json"" 18:36:43.994 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.11.0', revision: 'e59cfb3' 18:36:43.997 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 7777 2018-07-31 18:36:44.133:INFO::main: Logging initialized @441ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:36:44.260 INFO [SeleniumServer.boot] - Welcome to Selenium for Workgroups.... 18:36:44.260 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 7777 18:36:44.260 INFO [GridLauncherV3$3.launch] - Selenium Grid node is up and ready to register to the hub 18:36:44.265 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 18:36:44.265 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://10.192.8.5:4444/grid/register 18:36:44.548 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 18:36:44.590 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 18:40:13.560 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: internet explorer, handlesAlerts: true, javascriptEnabled: true, locationContextEnabled: tr ue, loggingPrefs: org.openqa.selenium.logging..., maxInstances: 1, requestOrigins: {name: webdriverio, url: http://webdriver.io, version: 4.13.1}, rotatable: true, version: 11} 18:40:13.562 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.ie.InternetExplorerDr iverService) Started InternetExplorerDriver server (32-bit) 3.13.0.5 Listening on port 46906 Only local connections are allowed 18:40:14.570 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 18:40:14.585 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 97c7f754-8172-4aef-baf9-0a6ec6e08eee (org.openqa.selenium.ie.InternetExplorerDriverService) 18:40:20.196 INFO [ActiveSessions$1.onStop] - Removing session 97c7f754-8172-4aef-baf9-0a6ec6e08eee (org.openqa.selenium.ie.InternetExplorerDriverService)","closed","","lttrung112","2018-07-31T11:56:52Z","2019-08-15T16:09:40Z"
"","6267","Devexpress SpinEdit","## Meta - OS:  Windows 10 Selenium Version:  3.1.0, Chrome IDE Browser:  Chrome  Browser Version:  Version 68.0.3440.106 (Official Build) (64-bit)  ## Expected Behavior - Go to ""https://demos.devexpress.com/aspxeditorsdemos/ASPxSpinEdit/Features.aspx"" Do a Selenium Chrome IDE Test on the First and third Spin Editors Start Recording: Command ""Type"" Target ""id=ContentHolder_ASPxSpinEdit1_I"" //This is the First Spin Editor or Target ""id=ContentHolder_ASPxSpinEdit3_I"" //This is the Third Spin Editor Value ""11"" Finish Recording Run the Tests: Expected Behavior is that the test fills the Spin Editors  ## Actual Behavior - Same as above  But the Run the Tests: Actual Behavior is that the test leaves the Spin Editors empty   ## Steps to reproduce - Follow the Expected Behavior Steps  Thanks and Best Regards, Ivan","closed","","ivanb000","2018-08-10T07:58:11Z","2019-08-15T16:09:41Z"
"","5891","Getting chromedriver issue ""java.lang.IllegalStateException"" in chrome driver initialization","## Meta - OS:  Windows 10 Selenium Version:  3.0.1 Browser:  Chrome   Version 66.0.3359.170 (Official Build) (64-bit) Code: System.getProperty(""webdriver.chrome.driver"", ""C:\\Users\\Durgesh\\Documents\\work_area\\eclipse_workspace\\Automation\\src\\test\\resources\\executables\\chromedriver.exe""); driver = new ChromeDriver();  Issue: java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html 	at com.google.common.base.Preconditions.checkState(Preconditions.java:199) 	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109) 	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32) 	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137) 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:120) 	at testCases.DeleteThis.run(DeleteThis.java:20) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:580) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)","closed","","d-rai","2018-05-13T05:01:50Z","2019-08-16T02:09:37Z"
"","6000","Unhandled 'error' event after long sleep","## Meta - OS:  Windows 10 Selenium Version:  12.0.6 Browser:  Google Chrome  Browser Version:  Version 66.0.3359.181 (64-bit) Dev Env: JetBrains WebStorm 2017.3.3  ## Expected Behavior - Protractor automation script to start. ## Actual Behavior - Hang, see console log below. ""C:\Program Files\JetBrains\WebStorm 2017.2.4\bin\runnerw.exe"" ""C:\Program Files\nodejs\node.exe"" C:\Users\wrodriguez\AppData\Roaming\npm\node_modules\protractor\built\cli.js D:/wrodriguez/Auto_Access/conf.js [13:56:42] I/launcher - Running 1 instances of WebDriver [13:56:42] I/hosted - Using the selenium server at http://localhost:4444/wd/hub  Went to restart webdriver and got error after CTRL+C 13:29:40.179 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 13:29:40.203 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 8b0be3fc32b88c2e9425f12a013967a8 (org.openqa.selenium.chrome.ChromeDriverService) 13:31:45.403 INFO [ActiveSessions$1.onStop] - Removing session 8b0be3fc32b88c2e9425f12a013967a8 (org.openqa.selenium.chrome.ChromeDriverService) 13:41:56.394 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: chrome, chromeOptions: {args: [--start-maximized]}, count: 1} 13:41:56.395 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9) on port 34860 Only local connections are allowed. 13:41:58.566 INFO [ProtocolHandshake.createSession] - Detected dialect: OSS 13:41:58.597 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session f3f92ca331b6d2036fd1a4b06cf4a556 (org.openqa.selenium.chrome.ChromeDriverService) 13:44:05.948 INFO [ActiveSessions$1.onStop] - Removing session f3f92ca331b6d2036fd1a4b06cf4a556 (org.openqa.selenium.chrome.ChromeDriverService) 13:52:32.896 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: chrome, chromeOptions: {args: [--start-maximized]}, count: 1} 13:56:42.500 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: chrome, chromeOptions: {args: [--start-maximized]}, count: 1} 13:53:11.494 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: chrome, chromeOptions: {args: [--start-maximized]}, count: 1} 13:57:36.699 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 13:57:36.692 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) 13:57:36.699 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) Starting ChromeDriver 2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9) on port 28792 Only local connections are allowed. Starting ChromeDriver 2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9) on port 7939 Only local connections are allowed. Starting ChromeDriver 2.39.562718 (9a2698cba08cf5a471a29d30c8b3e12becabb0e9) on port 41384 Only local connections are allowed. [13:57:36] I/start - Staying alive until the Selenium Standalone process exits [13:57:37] I/start - Staying alive until the Selenium Standalone process exits events.js:160       throw er; // Unhandled 'error' event       ^  Error: read ECONNRESET     at exports._errnoException (util.js:1020:11)     at TCP.onread (net.js:568:26) Terminate batch job (Y/N)? ^C  ## Steps to reproduce - The only thing I can think of that I changed, between working normally and not behaving, was having set a 5 minute sleep (browser.sleep(300000);). I was having issues with angular time outs in one script vs an other which works just fine with the same dialog, tried slowing it down to figure out what was going on. 1. run failing script 2. run same script with 5 min sleep before failure 3. let failure occur 4. Rerun script and kill ctrl+c 5. Kill webdriver ctrl+c Hopefully get error.","closed","","wrodr2013","2018-06-06T21:13:40Z","2019-08-15T23:09:54Z"
"","5822","is_displayed method Issue","## Meta - OS:  Windows 10 Selenium Version:   3.11.0 Browser: Firefox 59.0.2 (64-bit) geckodriver 0.20.1  ## Expected Behavior -  ``` element=driver.find_element_by_id(""loginID"") boolean = element.is_displayed() ```  ## Actual Behavior -  ``` element=driver.find_element_by_id(""loginID"") boolean = element.is_displayed() ``` TypeError: 'NoneType' object has no attribute '__getitem__'  ## Steps to reproduce - Use remote webdriver with my setup.","closed","C-py,","victor-ab","2018-04-25T02:08:30Z","2019-08-16T04:09:58Z"
"","6274","Adjust the log_path DeprecationWarning's stack level","## Meta - OS:  Windows 10 Selenium Version:   Browser:  Firefox Browser Version: 63.0a1  ## Expected Behavior -  That the `DeprecationWarning` added in #5979 sets an appropriate [stacklevel](https://docs.python.org/2/library/warnings.html#warnings.warn), so that the warning references the offending caller, and not the file + line number of where the `logger.warn()` is called.  ## Actual Behavior -  `stacklevel` not used, so the stack trace doesn't point at the offending caller:  ```         if log_path: >           warnings.warn('use service_log_path instead of log_path', DeprecationWarning) E           DeprecationWarning: use service_log_path instead of log_path ../../../venv/lib/python2.7/site-packages/selenium/webdriver/firefox/webdriver.py:104: DeprecationWarning ```  ## Steps to reproduce -  Update a project using pytest-selenium 1.13 from selenium 3.13.0 to 3.14.0 with DeprecationWarnings as errors. eg: mozilla/treeherder#3872 https://travis-ci.org/mozilla/treeherder/jobs/411325051#L947","closed","C-py,","edmorley","2018-08-12T00:07:18Z","2019-08-15T11:09:42Z"
"","6327","Selenium automating the manually opened browsers too along with the automation browser instance","## Meta - OS:  Windows 10  Selenium-java:  3.13.0  Browser:  Chrome - Version 68, Firefox  Version 64     ## Expected Behavior -  When i run automation it should run on a particular browser instance  ## Actual Behavior -  It is running automation on the automation browser instance as well as the browser which i opened same URL for manual inspection purpose.  ## Steps to reproduce -  open the URL in firfox browser manually , and run the automation on chrome.","closed","R-awaiting answer,","Nagasatish558","2018-08-24T11:30:40Z","2019-08-15T13:09:56Z"
"","6365","Rect is undefined error","## Meta - OS:  Windows 10  Selenium Version:  v3.14.0  Browser:  Firefox Delevoper edition  Browser Version:  63.0b2 (64-bit)  ## Issue description -  I'm working with kendo MVC. On kendo grids I've got CRUD actions and few of them are using modal. When this modal has more than 1 tabstrip the issue appears. For example I've got 2 tabstrips with kendo dropdown, numericbox etc. When I change value I need to focus them - did it with MoveToElement() method, and till the first tabstrip is on everything is ok, but on the second one I can't focus my element.  Code:                      js.ExecuteScript(""$('#ShopAccount').children('.k-grid-toolbar').children('.k-grid-add').click()""); //click add button              //first tabstrip             js.ExecuteScript(""$('#Shop').val(4)""); //set value on a dropdown             IWebElement shop = driver.FindElement(By.XPath(""//*[@id='tabstrip-1']/div[1]/div[2]/span[1]"")); //find dropdown's element             action.MoveToElement(shop).Click().Perform(); //focusing action                          driver.FindElement(By.XPath(""//*[@id='tabstrip']/ul/li[2]"")).Click(); //go to a second tabstrip              js.ExecuteScript(""$('#PriceLevel').val(1)""); //set value on a dropdown on second tab             IWebElement priceLevel = driver.FindElement(By.XPath(""//*[@id='tabstrip-2']/div[1]/div[2]/span"")); //first dropdown's element             action.MoveToElement(priceLevel).Perform(); //moving to element             action.Click().Perform(); //focus this el  ## Expected Behavior -  Focus kendo's elements like dropdown, numericbox  ## Actual Behavior -  Getting an error that rect is undefined  ## Steps to reproduce -  After moving to second tab, line:  **action.MoveToElement(priceLevel).Perform(); //moving to element**  Giving me an error  > TypeError: rect is undefined. Can't access property 'x' of it.  I checked in console and the properties x and y exist. Stack trace is not telling much but:  > SeleniumTests.dll!SeleniumTests.Ebay.EbayAccounts.AccountAdd() Line 53","closed","R-awaiting answer,","paprotti","2018-09-05T07:48:05Z","2019-08-15T13:09:34Z"
"","5940","WebElement.isDisplayed throws an exception on custom WebDriver implementations","## Meta - OS:  Windows 10  Selenium Version:  selenium-webdriver 3.6.0 (npm)  Browser: Chrome   Browser Version:  66.0.3359.181 (Official Build) (64-bit)     ## Expected Behavior - Given a custom WebDriver implementation, the WebElement.isDisplayed command should execute correctly when invoked on an existing element.  ## Actual Behavior -  Given a custom WebDriver implementation running the WebElement.isDisplayed command on an existing element, runs a script in the browser which results in the following exception: 'Argument to isShown must be of type Element'  ## Steps to reproduce - - Have a custom WebDriver implementation which supports the ExecuteScript command as well as all the basic ones (via HTTP protocol) - Run a simple test which find an element on a page - Call the WebElement.isDisplayed() method on the test element - The Selenium Node JS bindings will execute the script (via the Execute Script command) located under the NPM module 'selenium-webdriver/lib/atoms/is-displayed.js) - The script throws the exception reported above  NOTE: I've debugged the stack trace in Chrome and the last function, which should correspond to:  https://github.com/SeleniumHQ/selenium/blob/master/javascript/atoms/dom.js#L454  is receiving an object containing a WebElement reference rather than a DOM element, whcih I guess is the expected argument?  1) The script running in the browser is minified so it's hard to understand what's happening. 2) Based on the official WebDriver specs the server should be allowed to define its own command endpoint so I guess the selenium binding should first try to hit the endpoint and then run its own script as an alternative","closed","C-nodejs,","hurrikam","2018-05-24T13:32:31Z","2019-08-15T18:10:02Z"
"","5920","""StoreEval"" command does not work. ""Help""","## Meta - OS:  Windows 10  Selenium Version:  Selenium IDE v3.0.1  Browser:  Google Chrome   Browser Version:  Version 66.0.3359.181 (Official) 64-bit   ## Expected Behavior - I am using the ""storeEval"" command for the following target, ""${value1}+${value2}"" and using the value ""result"" ie the variables were expected to receive the values, sum and place in the ""result"" value. ## Actual Behavior - Selenium informs that it does not know the command ""storeEval"", but if I put the ""store"" command only the value ""result"" appears the number of variable 1 followed by + and the variable 2. ## Steps to reproduce - I'm running the following Test:  I am using the following website to test - http://grupovirtuous.com.br  1. Command   open     Target   /matkids/game.php     Value  2. Command   click at     Target   name=name     Value   85.9  3. Command   type     Target   name=name     Value   Cardoso  4. Command   click at     Target   name=sends     Value   67.14  5. Command   store text     Target   //td[2]/font/b      Value   value1  6. Command   store text     Target   //tr[2]/td/font/b     Value   value2  7. Command   click at     Target   name=response     Value   19,14  8. Command   storeEval     Target   ${value1}+${value2}     Value   result  9. Command   type     Target   name=response     Value   ${result}  10. Command   click at       Target   name=sends        Value   19,6  11. Command   assert text       Target   //p[2]/font/b        Value   You\N hit!!!  All pass, but step 8 fails because Selenium informs that the command ""storeEval"" is not recognized.  OBS: I'm sorry for the English, because I had to use google translator because I speak Portuguese.   Download the .side file and open it using the Selenium IDE for Mozila or Chrome and see how it works. Link - https://mega.nz/#!XUQXhLjK!-6kTY6s7fjA6KK_uWVDLC7V2Jgr4fVbG8cRzxS7gp04 [Soma_ger.zip](https://github.com/SeleniumHQ/selenium/files/2020834/Soma_ger.zip)","closed","","cardoson1","2018-05-20T23:31:18Z","2019-08-16T01:09:49Z"
"","6256","Textarea with zero height and width cannot be interacted with via keyboard","## Meta - OS:  Windows 10  Selenium Version:  IE Driver 3.13.0.0  Browser:  Internet Explorer   Browser Version:  IE 11.492.16299.0 64 bit   ## Expected Behavior - Entering text into a `textarea` with zero width and height should work, as it does in the other browsers.  ## Actual Behavior - WebDriver throws: ``` Element cannot be interacted with via the keyboard because it is not displayed. ```   ## Steps to reproduce -  ```html      ```","closed","D-IE,","greyhillman","2018-08-07T23:36:42Z","2021-09-05T08:10:38Z"
"","6282","IDE clicking links opening 2 tabs and comment usage severely changed","## Meta - OS:  Windows 10  Selenium Version:  3.2 IDE  Browser:  Firefox   Browser Version:  61.0.2 (64-bit)   ## Expected Behavior - External Links to open one page, blank commands or commands with just comments continue test ## Actual Behavior - External Links to open 2 pages , blank commands or commands with just comments fail test ## Steps to reproduce -  example commands:  {       ""id"": ""8b361480-6900-499b-9528-b4a96dc8100a"",       ""comment"": """",       ""command"": ""clickAt"",       ""target"": ""css=#dataTable1 > tbody > tr.child > td > div > div:nth-child(2) > em > em > strong:nth-child(7) > strong > p > a"",       ""targets"": [],       ""value"": """"     }  this is the link it opens:  href=""http://docquery.fec.gov/cgi-bin/fecimg/?201606109017556842""  this command set as follows will cause a failure where previously it wouldn't.  {       ""id"": ""645bcd21-32c1-4624-8dbe-8c4877cef97f"",       ""comment"": ""Tests top of page stuff"",       ""command"": """",       ""target"": """",       ""targets"": [],       ""value"": """"     }","closed","","modnar1226","2018-08-14T19:37:54Z","2019-08-15T15:09:58Z"
"","6659","Firefox: Load a fake webcam video file with media.navigator.streams.fake flag","## Meta - OS:  Windows 10  Selenium Version:  3.141.59  Browser:  Firefox  Browser Version:  63   ## Expected Behavior - Use a video file for media.navigator.streams.fake flag, like chrome option --use-file-for-fake-video-capture=path/to/video.y4m  ## Actual Behavior - Only show the multiple color video default to 'simulate' a webcam  ## Steps to reproduce - FirefoxOptions options = new FirefoxOptions(); options.addPreference(""media.navigator.streams.fake"", true); options.addPreference(""media.navigator.permission.disabled"", true); this.webDriver = new FirefoxDriver(options);  What do I need to add?","closed","","Darkensses","2018-11-19T18:12:27Z","2019-08-15T05:09:40Z"
"","6523","problem with find_element_by_xpath","## Meta - OS:  Windows 10  Selenium Version:  3.14.1  Browser:  Chrome   Browser Version:  69.0.3497.100   ## Expected Behavior - Get the element  ## Actual Behavior -no such element: Unable to locate element: {""method"":""xpath"",""selector"":""./div""} Driver info: chromedriver=2.42.591088 ## Steps to reproduce -  req_url = 'https://www.hindawi.com/journals/aaa/contents/1' driver = webdriver.Chrome() driver.get(req_url) content = driver.find_element_by_id(""content"") content.find_element_by_xpath(""./div"")","closed","","senlinyan","2018-10-11T16:01:38Z","2019-08-15T08:09:47Z"
"","6446","Can not access localhost:4444/grid/register","## Meta - OS:  Windows 10  Selenium Version:  3.14.0  Browser:  N/A   Browser Version:     ## Expected Behavior - Should be able to access the /grid/register page. ## Actual Behavior - I get the below error when going to /grid/register.  Same error shows in the cmd window I used to start the hub.  HTTP ERROR 500 Problem accessing /grid/register/. Reason:      Server Error Caused by: org.openqa.selenium.json.JsonException: Expected to read a START_MAP but instead have: END. Last 0 characters read:  Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z' System info: host: 'CFSQA752319LT1', ip: '165.150.2.177', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:289) 	at org.openqa.selenium.json.JsonInput.beginObject(JsonInput.java:219) 	at org.openqa.selenium.json.MapCoercer.lambda$apply$1(MapCoercer.java:64) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$null$6(JsonTypeCoercer.java:142) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:123) 	at org.openqa.selenium.json.Json.toType(Json.java:60) 	at org.openqa.selenium.json.Json.toType(Json.java:50) 	at org.openqa.grid.web.servlet.RegistrationServlet.process(RegistrationServlet.java:83) 	at org.openqa.grid.web.servlet.RegistrationServlet.doGet(RegistrationServlet.java:64) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687) 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) 	at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:143) 	at org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168) 	at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473) 	at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166) 	at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155) 	at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) 	at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) 	at org.seleniumhq.jetty9.server.Server.handle(Server.java:530) 	at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347) 	at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256) 	at org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279) 	at org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102) 	at org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247) 	at org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708) 	at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626) 	at java.lang.Thread.run(Unknown Source)  ## Steps to reproduce -  Performed: java -jar selenium-server-standalone-3.1.0.jar -role hub   After that completed I tried to access http://165.150.2.136:4444/grid/register/   (Also tried the current version 3.14.0)","closed","R-awaiting answer,","BryanN0919","2018-09-26T05:27:05Z","2019-08-15T02:09:40Z"
"","6200","Empty classifier in selenium-java, selenium-remote-driver artifact and others lead to errors with maven-dependency-plugin","## Meta - OS:  Windows 10  Selenium Version:  3.13.0  Browser:  -  Browser Version:  -   ## Expected Behavior - In a Tycho Project (Mavenization for Eclipse) when using selenium-java artifact as dependency and trying to copy this and its transitive dependency with the help of the maven-dependency-plugin (version 3.1.1) to disk it all should be copied correctly. ## Actual Behavior - In a Tycho Project (Mavenization for Eclipse) when using selenium-java artifact as dependency and trying to copy this and its transitive dependency with the help of the maven-dependency-plugin (version 3.1.1) to disk it fails because it can't handle empty classifier defined in pom.xml of selenium-java.  Error is `[ERROR] Internal error: org.eclipse.core.runtime.AssertionFailedException: The Maven artifact to be added to the target platform is not stored at the required location on disk: required ""D:\local_maven_repository\net\bytebuddy\byte-buddy\1.8.3\byte-buddy-1.8.3-.jar"" but was ""D:\local_maven_repository\net\bytebuddy\byte-buddy\1.8.3\byte-buddy-1.8.3.jar"" -> [Help 1] org.apache.maven.InternalErrorException: Internal error: org.eclipse.core.runtime.AssertionFailedException: The Maven artifact to be added to the target platform is not stored at the required location on disk: required ""D:\local_maven_repository\net\bytebuddy\byte-buddy\1.8.3\byte-buddy-1.8.3-.jar"" but was ""D:\local_maven_repository\net\bytebuddy\byte-buddy\1.8.3\byte-buddy-1.8.3.jar""`  Solution for fix: Simply remove all occurances of ` or ` of all dependencies within the pom.xml of selenium-java, selenium-remote-driver. Or is there a reason to have this?  I know this is actually a Tycho problem not handling empty classifier correctly, but I think the removal of all empty classifier is easier to do.. I just wanted to ask.  ## Steps to reproduce - Create a new tycho project with a pom (packaging eclipse-plugin) and add   ` 	 		 			org.apache.maven.plugins 			maven-dependency-plugin 			3.1.1 			 				 					copy-libs 					process-resources 					 						copy-dependencies 					 					 						false			 						runtime 						pom 						lib 						false 						false 					 				 			 		 	   	 		org.seleniumhq.selenium 		selenium-java 		3.13.0 	 `","closed","","Tkuco","2018-07-24T07:59:56Z","2019-08-15T17:09:52Z"
"","6457","Problem with a table html element inside a updatepanel","## Meta - OS:  Windows 10  Selenium Version:  3.12.1  Browser:  Internet Explorer   Browser Version:  11.483.15063.0   ## Expected Behavior - Returns a IWebElement of type html table.  ## Actual Behavior - WebDriver returns null when search at html table element inside a update panel in aspx page. This occours only when a hmlt table contains more than one row, when contains only one row, the problem doesn't appears.  ## Steps to reproduce - Create a IWebElement object using element.FindElement(By.Id("""")); when html element as table inside a aspx page updatepanel.","closed","R-awaiting answer,","SamirGoes","2018-09-27T20:21:28Z","2019-08-15T06:09:47Z"
"","6041","Webdriver Exception - Selenium Webdriver Java < Urgent >","## Meta - OS:  Windows 10  Selenium Version:  3.12.0 (latest)  Browser:  Chrome   Browser Version:  67.0.3396.87(64-bit)   ## Expected Behavior - It supposed to keep running as usual.  ## Actual Behavior - When I run my automation it gets stuck and stops working on random parts of the code, and sends back webdriver exception. Checked if the element has changed and it didn't. I'm trying to find it using xpath but also tried id, class name, link text, and tag name.... Now I'm losing my mind because of it, I just can't understand why it happens it doesn't make any sense. Just now I tried it twice and it stopped in two different locations. I can't send a link to the page but, if anyone could help me it would be great!","closed","","YakirSA","2018-06-19T08:32:19Z","2019-08-15T22:09:42Z"
"","5994","bug: getText from table does return empty text","## Meta - OS:  Windows 10  Selenium Version:  3.12.0  Browser:  Firefox, Chrome   Browser Version:  Firefox 60.0.1 (64-Bit) / Chrome 67.0.3396.62 (64-Bit)   ## Expected Behavior -  Gets all texts from all rows from the first column  ## Actual Behavior -  Does not get a text from the column where the scroll bar lies above  ## Steps to reproduce -  Run the Snippet provided by  [snippet.zip](https://github.com/SeleniumHQ/selenium/files/2072436/snippet.zip)  and see the result:  ``` arrays first differed at element [14]; expected: but was: 	at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:55) 	at org.junit.Assert.internalArrayEquals(Assert.java:532) 	at org.junit.Assert.assertArrayEquals(Assert.java:283) 	at org.junit.Assert.assertArrayEquals(Assert.java:298) 	at Snippet.verifyBug(Snippet.java:40) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206) Caused by: org.junit.ComparisonFailure: expected: but was: 	at org.junit.Assert.assertEquals(Assert.java:115) 	at org.junit.Assert.assertEquals(Assert.java:144) 	at org.junit.internal.ExactComparisonCriteria.assertElementsEqual(ExactComparisonCriteria.java:8) 	at org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:53) 	... 27 more ```","closed","","mseele","2018-06-05T13:04:34Z","2019-08-15T23:10:01Z"
"","5987","WebDriverException: cannot forward the request For input string.","## Meta - OS:  WINDOWS 10  Selenium Version:  3.12.0  Browser:  Firefox    Browser Version:  60.0.1, 62.0a1 (64-bit) (with geckodriver 0.20.1)   ## Expected Behavior - Executing this Js code on browser (`stashStatsScript`), calling a RTCPeerConnection's getStats() function, then put the result into a global variable: ```       appController.call_.pcClient_.pc_.getStats()          .then(data => {            window.KITEStats = [...data.values()];           }); ``` with `((JavascriptExecutor) webDriver).executeScript(stashStatsScript);`  I've been using this code for more than 6 months without any problem, until firefox 60 and 62. I expect  the values to be stashed in window.KITEStats to retrieve later on, and this should work on any of these OS: Windows 10, OS X 10.13 (high Sierra), Ubuntu 16.04 LTS. ## Actual Behavior - The code doesn't work on Windows 10 anymore (other OSs still work). I got this exception for both firefox 60 and 62 on Windows 10: ``` ERROR   2018-06-04 12:17:56,480 [main] org.webrtc.kite.apprtc.network.IceConnectionTest  - Exception in Tester: org.openqa.selenium.WebDriverException: cannot forward the request For input string: ""18446744073629740000"" Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'namvu', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.13.0-43-generic', java.version: '1.8.0_171' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 60.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 14260, moz:profile: C:\Users\cosmouser\AppData\..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 10.0, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, webdriver.remote.sessionid: eb717bc7-025d-45b7-965b-f90...} Session ID: eb717bc7-025d-45b7-965b-f90b3723e551 [Ljava.lang.StackTraceElement;@36fc695d ``` ## Steps to reproduce -  This was found with KITE @Cosmo : https://github.com/webrtc/KITE This is a simplified code of our test. You can find the full code on the public repository mentioned above.  ```  import org.openqa.selenium.By; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.MutableCapabilities; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxOptions; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.remote.CapabilityType; import org.openqa.selenium.remote.RemoteWebDriver;  import java.net.MalformedURLException; import java.net.URL; import java.util.ArrayList; import java.util.List; import java.util.Random;   public class test {    private static final String SELENIUM_SERVER_URL = ""http://192.168.2.2:4445/wd/hub"";   private final static String APPRTC_URL = ""https://appr.tc/r/"";    private static List webDriverList = new ArrayList();    public static void main(String[] args) {     MutableCapabilities capabilities = new MutableCapabilities();     capabilities.setCapability(CapabilityType.VERSION,""60"");     capabilities.setCapability(CapabilityType.PLATFORM_NAME,""WINDOWS"");     FirefoxProfile firefoxProfile = new FirefoxProfile();     firefoxProfile.setPreference(""media.navigator.streams.fake"", true);     FirefoxOptions firefoxOptions = new FirefoxOptions();     firefoxOptions.setProfile(firefoxProfile);     capabilities.merge(firefoxOptions);      try {       WebDriver webDriver1 = new RemoteWebDriver(new URL(SELENIUM_SERVER_URL), capabilities);       WebDriver webDriver2 = new RemoteWebDriver(new URL(SELENIUM_SERVER_URL), capabilities);       webDriverList.add(webDriver1);       webDriverList.add(webDriver2);         Random rand = new Random(System.currentTimeMillis());       long channel = Math.abs(rand.nextLong());        for (WebDriver webDriver : webDriverList) {         webDriver.get(APPRTC_URL + channel);         webDriver.findElement(By.id(""confirm-join-button"")).click();       }       Thread.sleep(2000);       for (WebDriver webDriver : webDriverList) {         Object stats = getStatOnce(webDriver);       }        for (WebDriver webDriver : webDriverList) {         webDriver.quit();       }      } catch (MalformedURLException e) {       e.printStackTrace();     } catch (InterruptedException e) {       e.printStackTrace();     }    }     public static Object getStatOnce(WebDriver webDriver) throws InterruptedException{     String stashStatsScript =             ""  appController.call_.pcClient_.pc_.getStats()"" +                     ""    .then(data => {"" +                     ""      window.KITEStats = [...data.values()];"" +                     ""    });"" ;     String getStashedStatsScript = ""return window.KITEStats;"";      ((JavascriptExecutor) webDriver).executeScript(stashStatsScript);     Thread.sleep(1000);     return ((JavascriptExecutor) webDriver).executeScript(getStashedStatsScript);   } }  ```","closed","OS-windows,","namvuCosmo","2018-06-04T04:28:15Z","2019-08-15T23:09:44Z"
"","5935","""Element not clickable at point"" for material design input field when using IE","## Meta - OS:  Windows 10  Selenium Version:  3.12 and IEDriverServer version 3.12  Browser:  Internet Explorer   Browser Version:  11   ## Expected Behavior - Material Design input fields should be clickable with Selenium even if there is a label. ## Actual Behavior - Exception is being thrown when trying to click on such an element:  `ElementClickInterceptedException: Element not clickable at point (387,70). Other element would receive the click: Text...`  ## Steps to reproduce -  Please use the following simple HTML file which uses material design:  ```                                                         Text...                  ```  Please run the following code against it:  ``` System.setProperty(""webdriver.ie.driver"", """"); InternetExplorerOptions ieOptions = new InternetExplorerOptions(); ieOptions.setCapability(CapabilityType.HAS_NATIVE_EVENTS, true); ieOptions.setCapability(InternetExplorerDriver.ENABLE_PERSISTENT_HOVERING, true); ieOptions.setCapability(InternetExplorerDriver.REQUIRE_WINDOW_FOCUS, false); ieOptions.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, false); ieOptions.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, false); ieOptions.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); ieOptions.setCapability(CapabilityType.ELEMENT_SCROLL_BEHAVIOR, ElementScrollBehavior.TOP); ieOptions.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.ACCEPT); ieOptions.setCapability(""ie.fileUploadDialogTimeout"", 10000); InternetExplorerDriver driver = new InternetExplorerDriver(ieOptions);  driver.navigate().to(""file:///""); try {      Thread.sleep(1000); } catch (InterruptedException e) {      e.printStackTrace(); } driver.findElementById(""sample1"").click(); driver.quit(); ```  You can see that the space of the label is actually covering the input field which is probably why that exception is being thrown, manually I am still able to click on the input field though and Selenium should be able to as well.","closed","D-IE,","Chraneco","2018-05-23T14:55:09Z","2021-09-05T08:08:39Z"
"","6410","Unable to bring the node after upgrading the selenium server to 3.12","## Meta - OS:  Windows 10  Selenium Version:  3.12   After upgrading the selenium to version 3.12, I am not able to bring up the node server. throwing NPE on the options. Please find the error below that I get when I run RunLocal-Node.bat, to check if the node is up and running.  17:11:58.321 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.12. 0', revision: '7c6e0b3' 17:11:58.337 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 5556 Usage:  [options]   Options:     --debug, -debug        : enables LogLevel.FINE.       Default: false     --version, -version       Displays the version and exits.       Default: false     -browserTimeout        in seconds : number of seconds a browser session is allowed to       hang while a WebDriver command is running (example: driver.get(url)). If       the timeout is reached while a WebDriver command is still processing,       the session will quit. Minimum value is 60. An unspecified, zero, or       negative value means wait indefinitely.     -capabilities, -browser        : comma separated Capability values. Example: -capabilities       browserName=firefox,platform=linux -capabilities       browserName=chrome,platform=linux     -cleanUpCycle        in ms : specifies how often the hub will poll running proxies       for timed-out (i.e. hung) threads. Must also specify ""timeout"" option     -custom        : comma separated key=value pairs for custom grid extensions.       NOT RECOMMENDED -- may be deprecated in a future revision. Example:       -custom myParamA=Value1,myParamB=Value2     -downPollingLimit        : node is marked as ""down"" if the node hasn't responded after       the number of checks specified in [downPollingLimit].       Default: 2     -enablePlatformVerification       : Whether or not to drop capabilities that does not belong to       the current platform family. Defaults to true.     -host        IP or hostname : usually determined automatically. Most       commonly useful in exotic network configurations (e.g. network with VPN)       Default: 0.0.0.0     -hub        : the url that will be used to post the registration request.       This option takes precedence over -hubHost and -hubPort options.       Default: https://c9uat01.baplc.com:4445     -hubHost        IP or hostname : the host address of the hub we're attempting       to register with. If -hub is specified the -hubHost is determined from       it.     -hubPort        : the port of the hub we're attempting to register with. If       -hub is specified the -hubPort is determined from it.     -id        : optional unique identifier for the node. Defaults to the url       of the remoteHost, when not specified.     -jettyThreads, -jettyMaxThreads        : max number of threads for Jetty. An unspecified, zero, or       negative value means the Jetty default value (200) will be used.     -log        filename : the filename to use for logging. If omitted, will       log to STDOUT     -maxSession        max number of tests that can run at the same time on the node,       irrespective of the browser used       Default: 5     -nodeConfig        filename : JSON configuration file for the node. Overrides       default values       Default: D:\Selenium\Node-B\nodeBConf.json     -nodePolling        in ms : specifies how often the hub will poll to see if the       node is still responding.       Default: 5000     -nodeStatusCheckTimeout        in ms : connection/socket timeout, used for node ""nodePolling""       check.       Default: 5000     -port        : the port number the server will use.       Default: 5556     -proxy        : the class used to represent the node proxy. Default is       [org.openqa.grid.selenium.proxy.DefaultRemoteProxy].     -register       if specified, node will attempt to re-register itself automatically with       its known grid hub if the hub becomes unavailable.       Default: true     -registerCycle        in ms : specifies how often the node will try to register       itself again. Allows administrator to restart the hub without restarting       (or risk orphaning) registered nodes. Must be specified with the       ""-register"" option.       Default: 5000     -remoteHost        URL: Address to report to the hub. Used to override default       (http://:).     -role        options are [hub], [node], or [standalone].       Default: node     -servlet, -servlets        : list of extra servlets the grid (hub or node) will make       available. Specify multiple on the command line: -servlet       tld.company.ServletA -servlet tld.company.ServletB. The servlet must       exist in the path: /grid/admin/ServletA /grid/admin/ServletB     -timeout, -sessionTimeout        in seconds : Specifies the timeout before the server       automatically kills a session that hasn't had any activity in the last X       seconds. The test slot will then be released for another test to use.       This is typically used to take care of client crashes. For grid hub/node       roles, cleanUpCycle must also be set.     -unregisterIfStillDownAfter        in ms : if the node remains down for more than       [unregisterIfStillDownAfter] ms, it will stop attempting to re-register       from the hub.       Default: 60000     -withoutServlet, -withoutServlets        : list of default (hub or node) servlets to disable. Advanced       use cases only. Not all default servlets can be disabled. Specify       multiple on the command line: -withoutServlet tld.company.ServletA       -withoutServlet tld.company.ServletB java.lang.NullPointerException         at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.la mbda$fixUpCapabilities$0(GridNodeConfiguration.java:421)         at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java :372)         at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.j ava:1374)         at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)          at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.ja va:471)         at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java :708)         at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)          at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499 )         at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.fi xUpCapabilities(GridNodeConfiguration.java:431)         at org.openqa.grid.common.RegistrationRequest.(RegistrationRequest .java:103)         at org.openqa.grid.common.RegistrationRequest.build(RegistrationRequest. java:207)         at org.openqa.grid.internal.utils.SelfRegisteringRemote.(SelfRegis teringRemote.java:70)         at org.openqa.grid.selenium.GridLauncherV3$3.launch(GridLauncherV3.java: 312)         at org.openqa.grid.selenium.GridLauncherV3.launch(GridLauncherV3.java:12 2)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:82) Press any key to continue . . .                                                      ## Expected Behavior - Node should be up and running  ## Actual Behavior - Getting NullPointerException error   [nodecong.txt](https://github.com/SeleniumHQ/selenium/files/2382907/nodecong.txt)","closed","","Jayita09","2018-09-14T10:07:55Z","2019-08-15T11:09:55Z"
"","5840","Internet Explorer does not click on multiline links in an iframe","## Meta - OS:  Windows 10  Selenium Version:  3.11  Browser:  Internet Explorer  Browser Version:  11   ## Expected Behavior -  IE should successfully click on all kinds of links  ## Actual Behavior -  In some cases, IE driver incorrectly calculates the coordinates of link elements, causing IE to miss the intended click.  ## Steps to reproduce -  Two conditions must be true for this problem to appear: - The link is inside an iframe which is not located at the top left of the page - The link must be wrapped to at least two lines to have multiple clientrects.  You can use the following simple HTML to reproduce the problem:  main.html ```      ```  test.html ```  Test Test Test Test Test Test Test Test Test Test Test Test Test  ```  Selenium script ``` driver.Navigate().GoToUrl(""http://localhost:8000/main.html""); Thread.Sleep(3500); driver.SwitchTo().Frame(driver.FindElementById(""test"")); driver.FindElementByTagName(""a"").Click(); ```  The problem is that `Element.cpp` sets a property called `hasAbsolutePositionReadyToReturn` with these conditions which later on prevents taking the position of the iframe into account.","closed","D-IE,","Chraneco","2018-04-28T19:34:01Z","2021-09-05T08:27:36Z"
"","5943","Add capability to disable 'Save your password' message for Edge browser","## Meta - OS:  Windows 10  Selenium Version:  2.53.0  Browser:  Edge 15 / 16 / 17  Currently there is **no predefined capability to disable '_Save your password_' message for Edge** browser.   Browser Version:     ## Expected Behavior - There should a some capability which when used would disable 'Save your password' pop up  ## Actual Behavior - There is no such capability  ## Steps to reproduce -  1. Open a website which needs login credentials  2. Provide username 3. Provide password 4. Click login button 5. You will see 'Save your password' pop up displayed on the Edge browser  You can use the script from [this gist](https://gist.github.com/ckzgraphics/2faede4e5fffcd8315cfc591ab08e870) to reproduce the issue","closed","D-edge,","ckzgraphics","2018-05-24T18:00:28Z","2020-06-24T22:55:06Z"
"","6016","Unable to launch chrome headless in Grid","## Meta - OS:  Windows 10  Selenium Version:  2.13.0  Browser:  Chrome 67","closed","","lkkushan101","2018-06-13T08:34:16Z","2019-08-15T22:09:59Z"
"","6439","Selenium 2.9 record button is not working","## Meta - OS:  Windows 10  Selenium Version:   2.9.1  Browser:  Firefox   Browser Version:    56.0b10  ## Expected Behavior - Record button should record test case.  ## Actual Behavior - Record button is not record the test case.  ## Steps to reproduce - ![record issue](https://user-images.githubusercontent.com/43517807/45928816-5f86b300-bf67-11e8-8d1a-4efb300c367b.jpg)","closed","","Ranj1912","2018-09-23T14:02:18Z","2019-08-15T10:09:53Z"
"","5947","Selenium.WebDriver package won't install on C# Universal Windows project (NuGet)","## Meta - OS:  Windows 10  Selenium Version:   Selenium.WebDriver .NET bindings for the SElenium WebDriver API Version: Latest stable 3.12.0 (I have also tried previous versions)  Browser:   (not relevant)  Browser Version:   (not relevant)  Summary: I am attempting to use Selenium.WebDriver in my Visial c# Windows Universal application. However, I have been unsuccessful. I am getting the following error when trying to install the Selenium.WebDriver .NET bindings for the Selenium WebDriver API through the NuGet Package Manager: `Package restore failed. Rolling back package changes for 'NameOfApp'`  ## Expected Behavior - I expected to be able to install the selenium webdriver package. This works on my WPF application.  ## Actual Behavior - An error appears reading `Package restore failed. Rolling back package changes for 'NameOfApp'`. Making it seem impossible to install this package.  ## Steps to reproduce - 1. Open Visual Studio 2. File > New Project 3. Under Visual C#, Select ""Windows Universal"" 4. Select ""Blank App (Universal Windows)"" > Give a valid name for the project > Click OK 5. Select your target versions (I left them default) > Click OK At this point the project should be completed and opened... 6. Click ""Tools"" on the top toolbar > NuGet Package Manager > Manage NuGet packages for Solution... 7. Go to the updates tab and make sure all your packages are up to date 8. Go to ""Browse"" 9. Search for ""Selenium.WebDriver"" > Click the top one that is by ""Selenium Committers"" 10. Check the project to install it to > click ""Install"" Error will appear   Does anyone know of any workarounds for this? Am I doing something wrong? Is there something being done already to fix this?","closed","C-dotnet,","arroyoc","2018-05-27T17:25:06Z","2021-09-05T08:31:31Z"
"","5889","Allow custom drivers in the selenium-webdriver Node/JavaScript package","## Meta - OS:  Windows Selenium Version:  ""selenium-webdriver"": ""4.0.0-alpha.1"" Browsers:  Firefox (Gecko), Chrome  ## Expected Behavior -  In setting up user environments to work on a repository, it would be easier to not have to modify user paths to include downloaded drivers.   ## Actual Behavior -  This doesn't seem to be supported. I couldn't find an explicit mention of doing so in the docs or TypeScript typings.   ## Steps to reproduce -   I tried setting my `geckoDriver.exe` as the binary path:  ```javascript import { Builder, WebDriver } from ""selenium-webdriver""; import { Options } from ""selenium-webdriver/firefox"";  (async () => {     const driver = await new Builder()         .forBrowser(""firefox"")         .setFirefoxOptions(new Options().setBinary(""path/to/my/geckoDriver.exe""));      await driver.get(""http://localhost:3000""); })(); ```  ...but that threw an error:  ``` WebDriverError: Process unexpectedly closed with status 1        at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:550:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:542:13)       at Executor.execute (node_modules/selenium-webdriver/lib/http.js:468:26) ```","closed","C-nodejs,","JoshuaKGoldberg","2018-05-12T19:44:34Z","2019-08-16T02:09:39Z"
"","6408","java.net.SocketTimeoutException: Read timed out","## Meta - OS:  windows  Selenium Version:      org.seleniumhq.selenium   selenium-java   3.14.0   Browser Version:    chrome 68 ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -  java.net.SocketTimeoutException: Read timed out Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'I-7DE168F1', ip: '172.31.200.29', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_151' Driver info: driver.version: RemoteWebDriver org.openqa.selenium.WebDriverException: java.net.SocketTimeoutException: Read timed out Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'I-7DE168F1', ip: '172.31.200.29', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_151' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:485) ~[selenium-remote-driver-3.14.0.jar:?] 	at com.itesttech.arya.agent.task.RunStep.getNavigationStart(RunStep.java:258) ~[Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at com.itesttech.arya.agent.task.RunStep.waitPageLoaded(RunStep.java:195) [Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at com.itesttech.arya.agent.task.RunStep.run(RunStep.java:142) [Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at com.itesttech.arya.agent.task.RunCase.runListStep(RunCase.java:345) [Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at com.itesttech.arya.agent.task.RunCase.runCase(RunCase.java:159) [Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at com.itesttech.arya.agent.task.RunCase.call(RunCase.java:91) [Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at com.itesttech.arya.agent.task.RunCase.call(RunCase.java:29) [Arya-agent-1.0.1042-SNAPSHOT.jar:?] 	at java.util.concurrent.FutureTask.run(Unknown Source) [?:1.8.0_151] 	at java.lang.Thread.run(Unknown Source) [?:1.8.0_151] Caused by: java.net.SocketTimeoutException: Read timed out 	at java.net.SocketInputStream.socketRead0(Native Method) ~[?:1.8.0_151] 	at java.net.SocketInputStream.socketRead(Unknown Source) ~[?:1.8.0_151] 	at java.net.SocketInputStream.read(Unknown Source) ~[?:1.8.0_151] 	at java.net.SocketInputStream.read(Unknown Source) ~[?:1.8.0_151] 	at okio.Okio$2.read(Okio.java:140) ~[okio-1.14.1.jar:?] 	at okio.AsyncTimeout$2.read(AsyncTimeout.java:237) ~[okio-1.14.1.jar:?] 	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:355) ~[okio-1.14.1.jar:?] 	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227) ~[okio-1.14.1.jar:?] 	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:215) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) ~[okhttp-3.10.0.jar:?] 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) ~[okhttp-3.10.0.jar:?] 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) ~[okhttp-3.10.0.jar:?] 	at okhttp3.RealCall.execute(RealCall.java:77) ~[okhttp-3.10.0.jar:?] 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) ~[selenium-remote-driver-3.14.0.jar:?] 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) ~[selenium-remote-driver-3.14.0.jar:?] 	... 11 more","closed","C-java,","JackWangAndRose","2018-09-14T07:22:00Z","2019-08-15T06:09:46Z"
"","6128","AuthenticateUsing Feature required","## Meta - OS:  Windos 7  Selenium Version:  3.12  Browser: Internet Explorer   Browser Version:  11   ## Expected Behavior -  Authenticate Using function is one of the important feature which is being used in our application and widely used till 2.53.0. Since we planning to upgrade Selenium version and there are no good replacement of this feature we can not upgrade Selenium Version to the latest one. We uses testing in IE browser and this function is being used in all cases.  ## Actual Behavior - This feature need to be added back to latest version of WebDriver, so we can happily migrate to latest Selenium WebDriver version. Thank you. ## Steps to reproduce - Pop UP Authentication to a application at the time of url launch.","closed","","shossain786","2018-07-08T16:29:45Z","2019-08-15T18:09:37Z"
"","6553","use selenium by javascript!!!","## Meta - OS:  win7&10 Browser:  firefox、chrome、ie  Is there a way to detect if the browser is being manipulated by selenium and webdriver via JavaScript? I just want to know if there are some unique features in selenium that can be used by javascript to detect whether it is a real browser or an automation framework. just in order to against the bot.","closed","","ghost","2018-10-18T14:15:18Z","2018-10-18T16:35:49Z"
"","5826","invalid selector: Unable to locate an element with the xpath expression","## Meta - OS:  Win7   Selenium Version:   3.11.0 Browser:   chrome  Browser Version:     ## Expected Behavior -It should able to locate the element  ## Actual Behavior -invalid selector: Unable to locate an element with the xpath expression  ## Steps to reproduce - Xpath written  //*[name()='g'][@clip-path='url(https://cncqa.cora.genpact.ai/CoraCnC/Dashboard/#highcharts-c47ixxb-34)'] Note: i am able find the element in chrome xpathfinder, ##when i am running the script  it is getting failed with below mentioned error  org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression [//*[@class='highcharts-series highcharts-series-0 highcharts-tilemap-series highcharts-color-0 highcharts-tracker ']//*[name()='path'][@stroke='#f04d3b'] because of the following error: SyntaxError: Failed to execute 'evaluate' on 'Document': The string '[//*[@class='highcharts-series highcharts-series-0 highcharts-tilemap-series highcharts-color-0 highcharts-tracker ']//*[name()='path'][@stroke='#f04d3b']' is not a valid XPath expression.   (Session info: chrome=65.0.3325.181)   (Driver info: chromedriver=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'EDT-118', ip: '172.16.17.118', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.37.544315 (730aa6a5fdba15..., userDataDir: D:\Users\--\AppDat...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 65.0.3325.181, webStorageEnabled: true} Session ID: 41f1e34e768fa2ea8d481538d28a7712 *** Element info: {Using=xpath, value=[//*[@class='highcharts-series highcharts-series-0 highcharts-tilemap-series highcharts-color-0 highcharts-tracker ']//*[name()='path'][@stroke='#f04d3b']} Execution completed.","closed","","rahul769a","2018-04-25T10:50:01Z","2019-08-16T04:10:01Z"
"","6154","command line server for the IE driver has stopped working","## Meta - OS:  win7 Selenium Version:  3.12.1 Browser:  ie11  Browser Version:   11.0.9600.190351S 32-bit   ## Expected Behavior -  ## Actual Behavior - ""command line server for the IE driver has stopped working"" dialog appeared,and IEDriverServer.exe crashed randomly.  logs from iedriverserver I 2018-07-13 11:18:56:441 c:\projects\webdriver\cpp\iedriver\variantutilities.cpp(257) Unknown type of dispatch is found in result, assuming IHTMLElement I 2018-07-13 11:18:56:457 c:\projects\webdriver\cpp\iedriver\script.cpp(257) Exception message was: '088EC0FC' I 2018-07-13 11:18:56:458 c:\projects\webdriver\cpp\iedriver\script.cpp(258) Exception source was: '088E89DC' W 2018-07-13 11:18:56:468 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(293) Unable to get 14 found element  logs from client 2018-07-13 11:18:49,443 [4] INFO  SeleniumPolice.StatusCrawler: OpenQA.Selenium.WebDriverException: Error executing JavaScript    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.get_Displayed()    at OpenQA.Selenium.Support.UI.ExpectedConditions.c.b__8_1(IWebElement element)    at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source, Func`2 predicate)    at OpenQA.Selenium.Support.UI.ExpectedConditions.c__DisplayClass8_0.b__0(IWebDriver driver)    at OpenQA.Selenium.Support.UI.DefaultWait`1.Until[TResult](Func`2 condition)    at SeleniumPolice.StatusCrawler.FetchData() in E:\jiancezhan\2.0\gongan\selenium\SeleniumPolice\StatusCrawler.cs:line 243 2018-07-13 11:19:56,250 [4] INFO  SeleniumPolice.StatusCrawler: OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:60873/session/967bbda3-e503-4318-9d46-70b706b4280e/element/c81e7bde-1dad-4c68-b0a0-63e7b824e489/elements timed out after 60 seconds. ---> System.Net.WebException: The operation has timed out    at System.Net.HttpWebRequest.GetResponse()    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.FindElements(String mechanism, String value)    at OpenQA.Selenium.Remote.RemoteWebElement.FindElementsByTagName(String tagName)    at OpenQA.Selenium.By.c__DisplayClass22_0.b__1(ISearchContext context)    at OpenQA.Selenium.By.FindElements(ISearchContext context)    at OpenQA.Selenium.Remote.RemoteWebElement.FindElements(By by)    at SeleniumPolice.StatusCrawler.FetchData() in E:\jiancezhan\2.0\gongan\selenium\SeleniumPolice\StatusCrawler.cs:line 275","closed","D-IE,","CellOcean","2018-07-13T03:32:34Z","2019-08-15T15:10:01Z"
"","5948","v3.12.0: visit grid console will see""DefaultRemoteProxy unknown version,Failed to connect to ****""","## Meta - OS:  Win7  Selenium Version:  V3.12.0  Browser:     Browser Version:     ## Expected Behavior - monitor the Grid via ip(hub): 4444/grid/console, will see the node status list quickly, actually, from **V3.9.1 to V3.11.0 really work**.  ## Actual Behavior - show the node status list very slowly and in the top of each node unit will show a message ""DefaultRemoteProxy unknown version,Failed to connect to node**/***.***.***.***:5555  ## Steps to reproduce -  1 start hub by run bat     TITLE SELENIUM_HUB    set SERVER_PORT=4444   set JAR_NAME=selenium-server-standalone-3.12.0.jar   java -jar %JAR_NAME% -port %SERVER_PORT% -role hub -timeout 600 -browserTimeout 3600 2 start one node by run bat(**even though change the NODE_HOSTNAME from host name to host ip, still saw the same problem**)   TITLE SELENIUM_NODE  set HUB_NAME= ***.***.***.*** set NODE_HOSTNAME=*** set HUB_PORT=4444 set NODE_PORT=5555 set DRIVER_PATH_IE=C:\SeleniumGrid\IEDriverServer.exe set NODE_CHROME_EXE_PATH=C:/Program Files (x86)/Google/Chrome/Application/chrome.exe set DRIVER_PATH_CHROME=C:\SeleniumGrid\chromedriver.exe set DRIVER_PATH_FIREFOX=C:\SeleniumGrid\geckodriver.exe set JAR_NAME=selenium-server-standalone-3.12.0.jar set MAX_INSTANCES=3 set MAX_SESSION=3  java -Dwebdriver.chrome.driver=%DRIVER_PATH_CHROME% -Dwebdriver.ie.driver=%DRIVER_PATH_IE% -Dwebdriver.gecko.driver=%DRIVER_PATH_FIREFOX% -jar %JAR_NAME%  -maxSession %MAX_SESSION% -role node -browser ""browserName=internet explorer,maxInstances=%MAX_INSTANCES%,platform=WINDOWS"" -browser ""browserName=chrome,maxInstances=%MAX_INSTANCES%,chrome_binary=%NODE_CHROME_EXE_PATH%,platform=WINDOWS"" -browser ""browserName=firefox,maxInstances=%MAX_INSTANCES%,platform=WINDOWS"" -port %NODE_PORT% -host %NODE_HOSTNAME% -hub http://%HUB_NAME%:%HUB_PORT%/grid/register","closed","C-grid,","oceanchow","2018-05-28T06:29:00Z","2019-08-14T10:09:36Z"
"","6004","driver.findElements() can not get right result when called continuously","## Meta - OS:  win7  Selenium Version:  3.12.0  Browser:  Firefox   Browser Version:  60.0.1   ## Expected Behavior - driver.findElements() not get right result when called continuously; ## Actual Behavior -  ## Steps to reproduce -  when call like this the second result is same to first: List uniqueTextXpathWebElements = driver.findElements(By.xpath(uniqueTextXpath)); 		List containsTextXpathWebElements = driver.findElements(By.xpath(containsTextXpath)); 		logger.debug(""find {} element by containsTextXpath:{}"",containsTextXpathWebElements.size(),containsTextXpath); 		logger.debug(""find {} element by uniqueTextXpath:{}"",uniqueTextXpathWebElements.size(),uniqueTextXpath);   when call like this the second result is right  List uniqueTextXpathWebElements = driver.findElements(By.xpath(uniqueTextXpath)); 		SeleniumUtil.pause(Context.getSleepTime()); 		List containsTextXpathWebElements = driver.findElements(By.xpath(containsTextXpath)); 		logger.debug(""find {} element by containsTextXpath:{}"",containsTextXpathWebElements.size(),containsTextXpath); 		logger.debug(""find {} element by uniqueTextXpath:{}"",uniqueTextXpathWebElements.size(),uniqueTextXpath);","closed","R-awaiting answer,","sanqingshan","2018-06-08T08:50:48Z","2019-08-15T21:09:48Z"
"","6594","after driver.mange().setTimeouts() and driver.get(url) will get UnhandledPromiseRejectionWarning","## Meta - OS:  win10 Selenium Version:  nodejs 4.0.0-alpha.1 Browser:  chrome  Browser Version:     ## Expected Behavior - ```javascript (async function() {     let target = 'https://tieba.baidu.com/p/5887088983'     const chrome = require('selenium-webdriver/chrome')     const webdriver = require('selenium-webdriver')     const { Builder, By, Key, until } = require('selenium-webdriver');     let driver = await new Builder()         .forBrowser('chrome')         .build()     await driver.manage().setTimeouts({ implicit: 0, pageLoad: 3000, script: 3000 })     await driver.get(target)     console.log(1234)     await driver.quit() }()) ``` Because target url takes too long to load, I set pageLoad parameter to 3000 seconds to interrupt this page loading. I expect it will console 1234 after page loading, but it didn't. And I get an  UnhandledPromiseRejectionWarning.  ```javascript (node:169916) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TimeoutError: timeout   (Session info: chrome=70.0.3538.77)   (Driver info: chromedriver=70.0.3538.16 (16ed95b41bb05e565b11fb66ac33c660b721f778),platform=Windows NT 10.0.17134 x86_64) ```  ## Actual Behavior - I don't know how to do if I want to interrupt or set limit for a web page which takes too long to load in NodeJS.","closed","","tp6g04jp6","2018-10-29T13:12:19Z","2019-08-15T01:09:41Z"
"","5932","iedriver no longer treats the Windows Security Dialog (login box) as an alert on Windows 10","## Meta - OS:  Win10  Selenium Version:  3.12  Browser:  IE11  Browser Version:   11.192.16299.0  ## Expected Behavior - The following C# code runs against 32 bit version of IEDriverServer:  `var home = ""https://site.under.test.com/"";    driver = new InternetExplorerDriver(AppDomain.CurrentDomain.BaseDirectory);    driver.Url = home;     driver.Manage().Window.Maximize();   driver.Navigate().GoToUrl(home + ""secure/"");    var wait = new WebDriverWait(driver, new TimeSpan(0, 0, 30));    IAlert alertPopUp = wait.Until(ExpectedConditions.AlertIsPresent());   alertPopUp.SetAuthenticationCredentials(p0, p1);   alertPopUp.Accept();`  Expectation: Code execution flows to the code that deals with the alert  ## Actual Behavior - Code execution is blocked inside the call to GoToUrl() ## Steps to reproduce - Run the C# code above on Windows 10 against IE11","closed","D-IE,","james-grant-sbsa","2018-05-23T11:18:45Z","2021-09-05T08:10:39Z"
"","6225","Selenium not selecting multiple options On Edge Browser (Windows Build 17134)","## Meta - OS:  Win 10.0.17134  Selenium Version:  3.13.0  Browser:  Microsoft Edge 42.17134.1.0 Microsoft EdgeHtml 17.17134   Browser Version:  Microsoft Edge 42.17134.1.0                              Microsoft EdgeHtml 17.17134   ## Expected Behavior - select all options  ## Actual Behavior - Only selecting the last one.  ## Steps to reproduce -  Kindly run this script with selenium environment.   ``` import java.awt.AWTException; import java.util.Arrays; import java.util.List;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.edge.EdgeDriver; import org.openqa.selenium.support.ui.Select;  public class EdgeMultipleSelectFail {  	public static void main(String[] args) throws InterruptedException, AWTException {  		System.setProperty(""webdriver.edge.driver"", ""drivers/MicrosoftWebDriver.exe""); 		WebDriver driver = new EdgeDriver();  		driver.get(""https://html.com/attributes/select-multiple/""); 		 		WebElement element = driver.findElement(By.xpath(""//*[@id='post-291']/div/div[2]/select"")); 		Select selectData = new Select(element);  		try { 			String value = ""American flamingo;Andean flamingo;Chilean flamingo;Greater flamingo;James's flamingo;Lesser flamingo""; 			String[] values = value.split("";""); 			System.out.println(""********"" + Arrays.toString(values)); 			List option = element.findElements(By.tagName(""option"")); 			for (int i = 0; i < values.length; i++) { 				boolean match = false; 				try { 					for (WebElement webElement : option) { 						if (webElement.getText().equalsIgnoreCase(values[i])) { 							match = true; 							selectData.selectByVisibleText(values[i]); 							break; 						}  					} 					if (!match) { 						System.out.println(""No Match Found""); 					}  				} catch (Exception e) { 					System.out.println(""No Match Found 2""); 				} 			}  		} finally { 			System.out.println(""@@@SID: Inside finally""); 		}  		Thread.sleep(5000);  		System.out.println(""Let's fetch the selected option again""); 		List selectedOption = selectData.getAllSelectedOptions(); 		for (WebElement ele : selectedOption) { 			System.out.println(""After Selection: "" + ele.getText()); 		} 	} }  ```   I am trying to select all option of select tag using selenium.  It is working fine at chrome and IE. It is only happening in the case of Edge browser.  I tried to test it on other websites and getting the same response.","closed","","ahmadsayeed","2018-07-30T09:25:33Z","2019-08-14T21:09:44Z"
"","6049","DevToolsActivePort file doesn't exist - ChromeDriver through Selenium on Ubuntu Server","## Meta - OS:  Ubuntu Server 16.04  Selenium Version:  Java, 3.12.0  Browser:  ChromeDriver   Browser Version:  2.40   ## Expected Behavior -  Program starts a ChromeDriver succesfully: `WebDriver gamePageDriver = new ChromeDriver(chromeOptions);`  ## Actual Behavior -  `Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: DevToolsActivePort file doesn't exist   (Driver info: chromedriver=2.40.565383 (76257d1ab79276b2d53ee976b2c3e3b9f335cde7),platform=Linux 4.4.0-127-generic x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.12 seconds Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:03.216Z' System info: host: 'vultr.guest', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-127-generic', java.version: '1.8.0_171' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at colinrsmall.webscraper.WebScraper.scrape(WebScraper.java:262) 	at colinrsmall.webscraper.WebScraper.main(WebScraper.java:54)`  ## Steps to reproduce -  Following most steps here: https://fabianlee.org/2017/01/17/selenium-running-headless-automated-tests-on-ubuntu/  1. On a fresh Ubuntu Server 16.04 install:  > sudo apt-get install git openjdk-8-jdk maven -y > wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - > sudo sh -c 'echo deb http://dl.google.com/linux/chrome/deb/ stable main > /etc/apt/sources.list.d/google.list' > sudo apt-get update > sudo apt-get install -y xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic xvfb x11-apps imagemagick firefox google-chrome-stable  2. Copy latest chromedriver_linux64 version to convenient location  3. In a separate SSH session:  > /usr/binXvfb :99  4. Run any .jar creating a new ChromeDriver. In my case, I am using the --headless and --disable-dev-shm-usage (as suggested by previous issues on the topic) options, but the provided example in the link above uses no options and also fails to start.","closed","","colinrsmall","2018-06-20T19:08:49Z","2019-08-14T09:09:55Z"
"","6008","The client is gone for session ext. key 5981f0a1-9863-42ed-8edb-50e7c5e6628c, terminating","## Meta - OS:  Ubuntu OpenShift ( HUB Running here)  Selenium Version:  3.9.1  Browser:   IE 11 (running in Windows 7 OS)  We have hosted Selenium hub 3.9.1 in Openshift and attached a IE 11 node which is running in Windows 7 Node.  Few tests are passing successfully and few of them are failing with below error.  **My obervation:** When a any step running for more then 35 seconds then node (IE) is trying to send an session extension key bit Hub to extend the session but Selenium hub is not accepting that key to extent the session.   HUB Log:   1:32:48.706 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, se:CONFIG_UUID=12fc3659-21e4-4999-a30e-daddd4fbe523, browserName=internet explorer, unhandledPromptBehavior=dismiss, handlesAlerts=true, ignoreProtectedModeSettings=true, maxInstances=3, platformName=WINDOWS, version=11, platform=WINDOWS, unexpectedAlertBehaviour=dismiss} --   | 11:34:25.114 WARN - The client is gone for session ext. key 5981f0a1-9863-42ed-8edb-50e7c5e6628c, terminating     Error:  org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'rhel-jenkins-jnlp-maven-tn77r', ip: '10.117.44.20', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-514.26.2.el7.x86_64', java.version: '1.8.0_151' Driver info: driver.version: RemoteWebDriver Capabilities [{webdriver.remote.sessionid=5981f0a1-9863-42ed-8edb-50e7c5e6628c, acceptInsecureCerts=false, browserVersion=11, se:ieOptions={nativeEvents=true, browserAttachTimeout=0.0, ie.ensureCleanSession=false, elementScrollBehavior=0.0, enablePersistentHover=true, ie.browserCommandLineSwitches=, ie.forceCreateProcessApi=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:29168/, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000.0, ignoreProtectedModeSettings=false}, browserName=internet explorer, pageLoadStrategy=normal, javascriptEnabled=true, platformName=windows, setWindowRect=true, platform=ANY}] Session ID: 5981f0a1-9863-42ed-8edb-50e7c5e6628c 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:658) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694) 	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:382) 	at com.test.ui.eCRM.Util.PageObjectLibrary.neoScreenPrint(PageObjectLibrary.java:197) 	at com.test.applications.NeoScheduleCallBackSteps.iOpenAnAndOpportunity(NeoScheduleCallBackSteps.java:20) 	at ✽.And I open an ""In progress"" and ""Banking"" opportunity(src/test/resources/features/Sprint_20/US1212ScheduleCallBack.feature:60) Caused by: com.google.gson.JsonSyntaxException: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 22 path $ 	at com.google.gson.JsonParser.parse(JsonParser.java:65) 	at com.google.gson.JsonParser.parse(JsonParser.java:45) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:82) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:45) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694) 	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:382) 	at com.test.ui.eCRM.Util.PageObjectLibrary.neoScreenPrint(PageObjectLibrary.java:197) 	at com.test.applications.NeoScheduleCallBackSteps.iOpenAnAndOpportunity(NeoScheduleCallBackSteps.java:20) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at cucumber.runtime.Utils$1.call(Utils.java:40) 	at cucumber.runtime.Timeout.timeout(Timeout.java:16) 	at cucumber.runtime.Utils.invoke(Utils.java:34) 	at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38) 	at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37) 	at cucumber.runtime.Runtime.runStep(Runtime.java:300) 	at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44) 	at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39) 	at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44) 	at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.ExamplesRunner.run(ExamplesRunner.java:59) 	at org.junit.runners.Suite.runChild(Suite.java:128) 	at org.junit.runners.Suite.runChild(Suite.java:27) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.ScenarioOutlineRunner.run(ScenarioOutlineRunner.java:53) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:93) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:37) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.api.junit.Cucumber.run(Cucumber.java:98) 	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252) 	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141) 	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189) 	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165) 	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85) 	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115) 	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75) Caused by: com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 22 path $ 	at com.google.gson.stream.JsonReader.syntaxError(JsonReader.java:1568) 	at com.google.gson.stream.JsonReader.checkLenient(JsonReader.java:1409) 	at com.google.gson.stream.JsonReader.doPeek(JsonReader.java:542) 	at com.google.gson.stream.JsonReader.peek(JsonReader.java:425) 	at com.google.gson.JsonParser.parse(JsonParser.java:60) 	... 71 more","closed","R-awaiting answer,","narayannewworld","2018-06-11T12:58:57Z","2019-08-15T19:09:54Z"
"","6319","Webdriver does not get some non default desired capabilities","## Meta - OS:  Ubuntu 16.05 LTS  Selenium Version:  3.6.0  Browser:  Chrome    Browser Version:  67.0.3396.99 (64-bit)   Python Version: 2.7.12  Chrome Driver Version: 2.41  ## Expected Behavior - I can toggle the all values from desired capabilities. ## Actual Behavior - I can toggle `acceptInseureCerts` but cannot do so for `takesScreenshot` and `acceptSslCerts`.  Note that I have not enumerate all desired capabilities' values at this moment. ## Steps to reproduce -  I'd like to set `acceptSslCerts` and `takesScreenshot` to their non-default values.  The code first prints the desired capabilities that I was about to pass on to the web driver.  Then it prints the desired capabilities that the web driver got.  1. Download chromedriver from https://chromedriver.storage.googleapis.com/index.html?path=2.41/.  Save the chrome driver in ~/Downloads 2. Run the following Python snippet from the home directory. ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  capabilities = DesiredCapabilities.CHROME capabilities['acceptSslCerts'] = False capabilities['acceptInsecureCerts'] = True capabilities['takesScreenshot'] = False print ""Before: {}"".format(capabilities) driver = webdriver.Chrome(executable_path=r""Downloads/chromedriver"", desired_capabilities=capabilities) print ""After: {}"".format(driver.desired_capabilities) driver.quit() ```  Here is the output of the Python snippet: ``` Before: {'takesScreenshot': False, 'acceptSslCerts': False, 'acceptInsecureCerts': True, 'platform': 'ANY', 'browserName': 'chrome', 'version': ''} After: {u'takesScreenshot': True, u'acceptSslCerts': True, u'networkConnectionEnabled': False, u'mobileEmulationEnabled': False, u'unexpectedAlertBehaviour': u'', u'applicationCacheEnabled': False, u'locationContextEnabled': True, u'goog:chromeOptions': {u'debuggerAddress': u'localhost:33491'}, u'rotatable': False, u'acceptInsecureCerts': True, u'hasTouchScreen': False, u'platform': u'Linux', u'version': u'67.0.3396.99', u'nativeEvents': True, u'handlesAlerts': True, u'takesHeapSnapshot': True, u'javascriptEnabled': True, u'databaseEnabled': False, u'browserName': u'chrome', u'webStorageEnabled': True, u'browserConnectionEnabled': False, u'cssSelectorsEnabled': True, u'chrome': {u'chromedriverVersion': u'2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706)', u'userDataDir': u'/tmp/.org.chromium.Chromium.Gsvrm6'}, u'setWindowRect': True, u'pageLoadStrategy': u'normal'}  ``` I can toggle `acceptInseureCerts` but cannot do so for `takesScreenshot` and `acceptSslCerts`.","closed","","clarmso","2018-08-22T20:48:11Z","2019-08-15T14:09:59Z"
"","6609","Backward incompatible minor release selenium-3.141.0","## Meta - OS:  Ubuntu 16.04  Selenium Version:  selenium 3.141.0  Browser:  Chrome   Browser Version:  64.0.3282.167 (64-bit)   ## Expected Behavior -  `org.openqa.selenium.support.ui.Duration` was deprecated in Selenium 3.10.0 but still I expect it to be present in selenium-3.141.0 because it is a minor version change and also it is not in part of the internal package.  ## Actual Behavior -  `org.openqa.selenium.support.ui.Duration` was removed in selenium-3.141.0.  ## Steps to reproduce -   ``` dependencies {     compile('com.paulhammant:ngwebdriver:1.0')  } ``` `com.paulhammant:ngwebdriver:1.0` has as an open-ended dependency `org.seleniumhq.selenium:selenium-java:[3.0.1,)`  ```java java.lang.NoClassDefFoundError: org/openqa/selenium/support/ui/Duration  	at java.lang.Class.getDeclaredMethods0(Native Method) 	at java.lang.Class.privateGetDeclaredMethods(Class.java:2701) 	at java.lang.Class.getDeclaredMethods(Class.java:1975) 	at com.google.inject.spi.InjectionPoint.getInjectionPoints(InjectionPoint.java:688) 	at com.google.inject.spi.InjectionPoint.forInstanceMethodsAndFields(InjectionPoint.java:380) 	at com.google.inject.internal.ConstructorBindingImpl.getInternalDependencies(ConstructorBindingImpl.java:165) 	at com.google.inject.internal.InjectorImpl.getInternalDependencies(InjectorImpl.java:616) 	at com.google.inject.internal.InjectorImpl.cleanup(InjectorImpl.java:572) 	at com.google.inject.internal.InjectorImpl.initializeJitBinding(InjectorImpl.java:558) 	at com.google.inject.internal.InjectorImpl.createJustInTimeBinding(InjectorImpl.java:887) 	at com.google.inject.internal.InjectorImpl.createJustInTimeBindingRecursive(InjectorImpl.java:808) 	at com.google.inject.internal.InjectorImpl.getJustInTimeBinding(InjectorImpl.java:285) 	at com.google.inject.internal.InjectorImpl.getBindingOrThrow(InjectorImpl.java:217) 	at com.google.inject.internal.InjectorImpl.getProviderOrThrow(InjectorImpl.java:1009) 	at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:1041) 	at com.google.inject.internal.InjectorImpl.getProvider(InjectorImpl.java:1004) 	at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1054) 	at net.serenitybdd.core.Serenity.setupWebDriverFactory(Serenity.java:117) 	at net.serenitybdd.core.Serenity.initializeWithNoStepListener(Serenity.java:93) 	at cucumber.runtime.SerenityObjectFactory.newInstance(SerenityObjectFactory.java:68) 	at cucumber.runtime.SerenityObjectFactory.cacheNewInstance(SerenityObjectFactory.java:51) 	at cucumber.runtime.SerenityObjectFactory.getInstance(SerenityObjectFactory.java:41) 	at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60) 	at cucumber.runtime.HookDefinitionMatch.runStep(HookDefinitionMatch.java:17) 	at cucumber.runner.UnskipableStep.executeStep(UnskipableStep.java:22) 	at cucumber.api.TestStep.run(TestStep.java:83) 	at cucumber.api.TestCase.run(TestCase.java:58) 	at cucumber.runner.Runner.runPickle(Runner.java:80) 	at cucumber.runtime.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:140) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:68) 	at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:23) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:73) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:117) 	at cucumber.api.junit.Cucumber.runChild(Cucumber.java:55) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at cucumber.api.junit.Cucumber$1.evaluate(Cucumber.java:126) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) 	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) 	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.support.ui.Duration 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 52 more ```","closed","","maestrokame","2018-11-02T12:33:04Z","2019-08-15T06:09:57Z"
"","6161","http.client.CannotSendRequest: Request-sent","## Meta - OS:  ubuntu 14.04  Selenium Version:  selenium-3.13.0  Browser:  Firefox    Browser Version:  61.0.1 (64-bit)          File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 567, in execute_async_script     'args': converted_args})['value']   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/webdriver.py"", line 309, in execute     response = self.command_executor.execute(driver_command, params)   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/remote_connection.py"", line 460, in execute     return self._request(command_info[0], url, body=data)   File ""/usr/local/lib/python3.6/dist-packages/selenium/webdriver/remote/remote_connection.py"", line 483, in _request     self._conn.request(method, parsed_url.path, body, headers)   File ""/usr/lib/python3.6/http/client.py"", line 1239, in request     self._send_request(method, url, body, headers, encode_chunked)   File ""/usr/lib/python3.6/http/client.py"", line 1250, in _send_request     self.putrequest(method, url, **skips)   File ""/usr/lib/python3.6/http/client.py"", line 1108, in putrequest     raise CannotSendRequest(self.__state) http.client.CannotSendRequest: Request-sent","closed","C-py,","mhndm","2018-07-15T19:29:47Z","2019-08-15T11:09:44Z"
"","6222","log level to print url","## Meta - OS:  ubuntu  Selenium Version:  3.12.0  Browser:  Firefox   Browser Version:  latest   ## Expected Behavior -print url while accessing  ## Actual Behavior - Not printing url  ## Steps to reproduce - Previously, I used firefox-standalone 2.48.2 selenium docker and It used to print url while accessing it. ex. INFO - Executing: [get http://www.bbc.com/]  I am using latest selenium 3.12.0 version, its not printing these type of log.  Have tried below two propreties while running , which are not helping:  JAVA_OPTS=""-Dselenium.LOGGER.level=ALL  JAVA_OPTS=""-Djetty-logging.properties.LEVEL=DEBUG""  What log level should be used to get the similar line to be printed ?","closed","","dhirajforyou","2018-07-30T08:27:55Z","2019-08-15T17:09:44Z"
"","5903","Python RemoteConnection HTTPS connection","## Meta - OS:  RedHat 7.2 - Docker (base image alpine:3.4) Selenium Version:  version: '3.11.0', revision: 'e59cfb3' Browser:  Firefox Browser Version:  52.4.0 (64-bit)   My Selenium hub is behind a reverse proxy serving an HTTPS connection. I have to deal with an internal PKI and custom CA certificates with my Python Selenium scripts. No settings are available in RemoteConnection class to handle certificates or to ignore an untrusted connection.  ## Expected Behavior - ``` class BaseTest(TestCots):      def setUp(self):          executor = RemoteConnection('https://myhome.com:4444/wd/hub', verify='ca.pem', resolve_ip=False)          self.driver = webdriver.Remote(             command_executor=executor,             desired_capabilities=DesiredCapabilities.FIREFOX) ``` Or completely disable the certificate verification:  `executor = RemoteConnection('https://myhome.com:4444/wd/hub', verify=False, resolve_ip=False)`  ## Actual Behavior - There is no way in python-selenium for passing custom certificates inside the code.  I have already write a solution that I'll attach to this issue.","closed","C-py,","MqllR","2018-05-16T14:23:25Z","2021-09-05T08:21:44Z"
"","6042","fullScreen with firefox","## Meta - OS:  Raspberry pi 3 B+ armv7l, Raspbian ( Debian) 9 stretch  Selenium Version:   3.12.0  Browser:   Firefox-ESR with geckodriver v0.17.0  Browser Version:   Mozilla Firefox 52.8.1  ## Expected Behavior - Open firefox in full screen ## Actual Behavior - Firefox is opened but not in full screen  error log :   ``` Traceback (most recent call last):   File ""fi.py"", line 4, in      browser.fullscreen_window()   File ""/home/pi/.local/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 734, in fullscreen_window     self.execute(Command.FULLSCREEN_WINDOW)   File ""/home/pi/.local/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 314, in execute     self.error_handler.check_response(response)   File ""/home/pi/.local/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: fullscreenWindow ```   ## Steps to reproduce - With Python 3.5 and Python 2.7 http://selenium-python.readthedocs.io/api.html#selenium.webdriver.remote.webdriver.WebDriver.fullscreen_window  ``` from selenium import webdriver browser = webdriver.Firefox() browser.get('http://google.com') browser.fullscreen_window() ```","closed","","well-oo","2018-06-19T13:04:51Z","2019-08-14T06:09:53Z"
"","6526","Safaridriver defaults to w3c and breaks proxyType pac","## Meta - OS:  OSX  Selenium Version:   3.14.0 Browser:   Safari Browser Version:   12  ## Expected Behavior -  Setting `'proxyType': 'pac'` and `'proxyAutoconfigUrl': ` should work.  ## Actual Behavior -  Safaridriver is started and defaults to w3c, which does not have a complete implementation of the `proxy` spec. This causes `proxyAutoconfigUrl` to appear as an unknown key and the selenium server  throws an exception.  Setting the `--legacy` option allows Safaridriver to run in JWP and the proxy settings work as expected.  ## Steps to reproduce - Have Safari 12 installed. Start selenium-server-standalone-3.14.0.jar Run a test with the following caps: ``` }     'browserName': ""safari"",     'browserVersion': ""12"",     'proxy': {         'proxyType': 'pac',         'proxyAutoconfigUrl': 'http://localhost:8888' } ``` You should see this exception thrown: `org.openqa.selenium.InvalidArgumentException: Unknown key in 'proxy' capability: 'proxyAutoconfigUrl'`  I have provided this PR https://github.com/SeleniumHQ/selenium/pull/6525 with a potential fix for those who needs the proxy settings are ok with using JWP. Setting a porperty `webdriver.safari.legacy` adds the `--legacy` argument.","closed","","joventuraz","2018-10-12T03:24:29Z","2019-08-14T15:09:47Z"
"","6632","unknown command: goog/cdp/execute","## Meta - OS:  OSX Selenium Version:  selenium-webdriver (3.141.0) Browser:  Chrome  Browser Version:   Looks like it's using the latest Chrome release from a Debian package: https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/ruby/images/2.5.0-stretch/node-browsers/Dockerfile#L62-L76  Assuming that's 72.0.3602.2  ## Expected Behavior - To successfully set the `driver.browser.download_path`  ## Actual Behavior - Since upgrading from 3.14.0 to 3.141.0 we get the following failure on CircleCI with the `circleci/ruby:2.5.0-node-browsers` docker image. When we rollback to 3.14.0 all is good again.  ``` Selenium::WebDriver::Error::WebDriverError:        unexpected response, code=404, content-type=""text/plain""        unknown command: session/33427b05393b6b34815b0a386f36e05d/goog/cdp/execute ```  ## Steps to reproduce -  Run on CircleCI with `circleci/ruby:2.5.0-node-browsers`.  ``` From: /home/circleci/app/spec/support/capybara.rb @ line 12 :       9:   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(chromeOptions: {args: args})     10:   driver = Capybara::Selenium::Driver.new(app, browser: :chrome, desired_capabilities: capabilities)     11:   binding.pry  => 12:   driver.browser.download_path = DownloadHelper::PATH.to_s     13:   driver     14: end     15:     16: Capybara.javascript_driver = :chrome     17: Capybara.server = :puma, {Silent: true}  [1] pry(main)> DownloadHelper::PATH.to_s => ""/home/circleci/app/tmp/downloads/0""  [2] pry(main)> driver.browser.download_path = DownloadHelper::PATH.to_s  Selenium::WebDriver::Error::WebDriverError: unexpected response, code=404, content-type=""text/plain"" unknown command: session/2215cc5b53c0df4c7a20b977a8e0f9aa/goog/cdp/execute from /home/circleci/app/vendor/bundle/ruby/2.5.0/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/http/common.rb:91:in `create_response'  [3] pry(main)> driver.browser => # ```","closed","D-chrome,","trev","2018-11-08T05:10:05Z","2019-08-15T06:09:34Z"
"","6396","The getAttribute atom treats `draggable` as a boolean attribute when it is actually enumerated","## Meta - OS:  OSX Selenium Version:  Ruby 3.14.0 Browser:  Firefox & Chrome  The getAttribute atom treats the `draggable` attribute as boolean, when it is actually an enumerated attribute - https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable.  This makes it impossible to read the actual value of the attribute since it will always return `true` if the attribute exists. I experienced this using the ruby bindings via selenium-webdriver 3.14.0 but it will affect any binding using the getAttribute atom.","closed","D-atoms,","twalpole","2018-09-11T20:20:36Z","2019-08-15T11:09:40Z"
"","6239","Webdriver wait not working with selenium3.13.0 safaridriver","## Meta - OS:  OSX Selenium Version:  3.13.0  Browser:  Safari I am using explicit wait like below to check if element is clickable.  ``` WebDriverWait(driver, 30).until(         expected_conditions.element_to_be_clickable((By.CSS_SELECTOR, ""#search""))) ``` But I get error  ```   Message: The command 'GET /session/.../displayed' was not found. ``` If I use time.sleep() it works fine instead of explicir wait it works fine. I have initialized safari driver as  ``` from selenium.webdriver import Safari driver = Safari() ``` Here is stacktrace  ```   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/support/wait.py"", line 71, in until     value = method(self._driver)   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/support/expected_conditions.py"", line 283, in __call__     element = visibility_of_element_located(self.locator)(driver)   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/support/expected_conditions.py"", line 127, in __call__     return _element_if_visible(_find_element(driver, self.locator))   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/support/expected_conditions.py"", line 147, in _element_if_visible     return element if element.is_displayed() == visibility else False   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/remote/webelement.py"", line 490, in is_displayed     return self._execute(Command.IS_ELEMENT_DISPLAYED)['value']   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/remote/webelement.py"", line 628, in _execute     return self._parent.execute(command, params)   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/remote/webdriver.py"", line 314, in execute     self.error_handler.check_response(response)   File ""/Users/Library/Python/2.7/lib/python/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) WebDriverException: Message: The command 'GET /session/7.../displayed' was not found ```","closed","","sandykaka","2018-08-02T15:51:43Z","2019-08-15T17:09:34Z"
"","5831","The Switch To Window request is not translated correctly for geckodriver (Selenium 3.11.0)","## Meta - OS:  OSX  Selenium Version:  selenium-server-standalone-3.11.0  Browser: Firefox  Browser Version: 59.0.2 (64-bit)   ## Expected Behavior -  I am using NightwatchJS to drive a Firefox browser through Selenium Server. One task that is needed is switching the active window.  NightwatchJS sends commands to Selenium using the old JsonWireProtocol. These commands are translated somehow by Selenium into W3C WebDriver commands that are sent to the geckodriver for Firefox. This translation fails for the command known as ""POST /session/:sessionId/window"" in the JsonWireProtocol documentation:  https://github.com/SeleniumHQ/selenium/wiki/JsonWireProtocol#sessionsessionidwindow  The geckodriver application expects a property named ""handle"" in the parameters argument (in the POST request), but it gets a property named ""name"", similarly to the JsonWireProtocol POST request:  https://w3c.github.io/webdriver/webdriver-spec.html#switch-to-window  With Google Chrome, the same command works, presumably because chromedriver uses the old protocol, so that no translation is needed.  ## Actual Behavior -  For exemple, NightwatchJS will post this to Selenium to switch to the window with handle 2147483669 (captured with tcpdump):  ``` POST /wd/hub/session/6a857140-c0e3-e44e-a236-e976c1fff0c9/window HTTP/1.1 Content-Type: application/json; charset=utf-8 Content-Length: 21 Host: localhost:4444 Connection: close  {""name"":""2147483669""} ```  The result will be:  ``` HTTP/1.1 500 Server Error Connection: close Date: Wed, 25 Apr 2018 16:43:06 GMT Expires: Thu, 01 Jan 1970 00:00:00 GMT Cache-Control: no-cache Cache-Control: no-cache Expires: Thu, 01 Jan 1970 00:00:00 GMT Content-Type: application/json;charset=utf-8 Content-Length: 1266 Server: Jetty(9.4.7.v20170914)  {""state"":""invalid argument"",""sessionId"":null,""value"":{""additionalInformation"":""\nDriver info: driver.version: unknown"",""localizedMessage"":""Missing 'handle' parameter\nBuild info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z'\nSystem info: host: 'cpdstosem003.local', ip: 'fe80:0:0:0:8e8:a787:95f2:aa9f%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '1.8.0_25'\nDriver info: driver.version: unknown"",""systemInformation"":""System info: host: 'cpdstosem003.local', ip: 'fe80:0:0:0:8e8:a787:95f2:aa9f%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '1.8.0_25'"",""supportUrl"":null,""cause"":null,""stackTrace"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],""suppressed"":[],""message"":""Missing 'handle' parameter\nBuild info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:15.31Z'\nSystem info: host: 'cpdstosem003.local', ip: 'fe80:0:0:0:8e8:a787:95f2:aa9f%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '1.8.0_25'\nDriver info: driver.version: unknown"",""class"":""org.openqa.selenium.InvalidArgumentException"",""buildInformation"":null},""class"":""org.openqa.selenium.remote.Response"",""status"":61} ```  If tcpdump is used to capture the communication between Selenium and geckodriver, this exchange is seen for the same command:  ``` POST /session/ee990c9b-9ccf-7f4f-8543-7e7979a17ab0/window HTTP/1.1 Content-Type: application/json; charset=utf-8 Content-Length: 21 Host: localhost:23884 Connection: Keep-Alive Accept-Encoding: gzip User-Agent: okhttp/3.9.1  {""name"":""2147483669""}  HTTP/1.1 400 Bad Request Connection: close Content-Type: application/json; charset=utf-8 Cache-Control: no-cache Content-Length: 93 Date: Wed, 25 Apr 2018 16:48:48 GMT  {""value"":{""error"":""invalid argument"",""message"":""Missing 'handle' parameter"",""stacktrace"":""""}} ```  ## Steps to reproduce -  Perhaps the tcpdump traces are enough to illustrate the problem, but here is how to reproduce it.  Start a Selenium server listening to port 4444, for example by:  /usr/bin/java -Dwebdriver.gecko.driver=./geckodriver -jar ./selenium-server-standalone-3.11.0.jar -port 4444  Connect to port 4444 using curl or some other tool in order to establish a session. Then use the same tool to send the first POST request shown above (POST /wd/hub/session/6a857140-c0e3-e44e-a236-e976c1fff0c9/window HTTP/1.1 with content {""name"":""2147483669""}), adjusting the session ID to match the current session.  The window handle content could be adjusted to match an existing window handle in the session (as done below), but it is not necessary to reproduce the problem, as the geckodriver will not understand the ""name"" parameter that is sent after translation.  ``` curl -XPOST http://localhost:4444/wd/hub/session -d '{""desiredCapabilities"":{""browserName"":""firefox"",""javascriptEnabled"":true}}'  curl -XPOST http://localhost:4444/wd/hub/session/b40b7c56-7c7c-0243-83d1-881b70a24204/url -d '{""url"":""https://github.com/SeleniumHQ""}'  curl http://localhost:4444/wd/hub/session/b40b7c56-7c7c-0243-83d1-881b70a24204/window_handles  curl -XPOST http://localhost:4444/wd/hub/session/b40b7c56-7c7c-0243-83d1-881b70a24204/window -d '{""name"":""2147483649""}' ```  The last command is correctly formed according to the JsonWireProtocol specification but gives a format error. I realize that the semantics differ slightly between the two protocols (the name parameter means handle or name in the JsonWireProtocol, but there is no way of selecting a window by name in the WebDriver protocol), but one would assume the translation to work to the extent that it can, by allowing selection by handle.","closed","","OttoG","2018-04-25T17:15:33Z","2019-08-16T04:09:50Z"
"","6325","How Full Page Capture use javascript in Chrome?","## Meta - OS:  OSX  Selenium Version:  ""selenium-webdriver"": ""^4.0.0-alpha.1""  Browser:  Chrome","closed","","pyeongoh","2018-08-24T05:08:14Z","2019-08-15T13:09:43Z"
"","6232","Hide Driver Server Command Window - Python","## Meta - OS:  Observed in Windows 7 & 10 Selenium Version:  3.13.0 Browser:  Internet Explorer Browser Version:  11.09  In Python Selenium, it is not possible to hide the Command Prompt window for IEServerDriver.exe which runs in the background. For ""headless"" solutions, we would like to be able to define as a driver option the ability to make it hidden or visible by default. Some developers have made changes to their code to allow for this by editing service.py. See: https://stackoverflow.com/questions/48654427/hide-command-prompt-in-selenium-chromedriver and https://stackoverflow.com/questions/46520823/selenium-dont-work-after-exporting-to-exe-in-windowed-mode-in-pyinstaller  In the C# version, something like this has already been released: https://stackoverflow.com/questions/20711407/selenium-webdriver-phantomjs-c-sharp-always-opens-a-cmd-window#21949015  ## Expected Behavior - It would be nice if there was a supported driver option that can be specified to enable this functionality when needed.  ## Actual Behavior - Developers are not able to run IEServerDriver.exe invisible within a windowed Python Application.","closed","D-IE,","eliteprox","2018-07-31T14:50:46Z","2021-09-05T07:59:00Z"
"","6215","npm selenium-webdriver directs to SeleniumHQ/selenium","## Meta - OS:  META (this is a documentation issue)  Selenium Version:  ALL  Browser:  ANY   Browser Version:     ## Expected Behavior - [selenium-webdriver](https://www.npmjs.com/package/selenium-webdriver) should direct the user to source code which is a JavaScript project when they click to view the repository. ## Actual Behavior - Being on npmjs.com the user is directed to a non-JavaScript project, that is related to, but not the actual module the user is trying to get information about. The user arrives at his page instead: [Selenium](https://github.com/SeleniumHQ/selenium)  ## Steps to reproduce - 1. The user should be in a position that they need information about the selenium-webdriver npm package. 2. The should go to https://www.npmjs.com/package/selenium-webdriver to get that infomation. 3. The user should click the **repository link** on npmjs.com to view the source code of `selenium-webdriver` 3. The user is directed to the umbrella page of the project instead of the actual source code.    It's a bad experience to be looking for something as simple as the `engine` in the pakckage.json. Only to be dumped into the main project page to try to decipher how any of this giant ecosystem even organizes itself.","closed","","412andrewmortimer","2018-07-27T19:44:22Z","2019-08-15T17:09:42Z"
"","5850","Unable to verify the element in Headless browser","## Meta - OS:  macsOS high Sierra Selenium Version: 3.8.1 Browser:   Google Chrome  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  -->  Browser Version:  65(64-bit)   ## Expected Behavior - It should able to select element as its working fine when open for actual UI.  ## Actual Behavior - Its not able to select any element on the page.  ## Steps to reproduce - @BeforeMethod     public void setUp() throws Exception {         ChromeOptions chromeOptions = new ChromeOptions();         //todo Change your chrome driver path         System.setProperty(""webdriver.chrome.driver"",              ""/Users/snehal/Downloads/chromedriver"");         chromeOptions.addArguments(""--headless"");         driver = new ChromeDriver(chromeOptions);     }      @Test     public void testIssue() throws Exception {         // todo change it to test html page         driver.get(""https://stag.furlenco.com"");         WebDriverWait wait = new WebDriverWait(driver, 10);         wait.until(                 ExpectedConditions.presenceOfElementLocated(By.xpath(""//*[text='Bengaluru']"")));         System.out.println(                 ""Label text : "" + driver.findElement(By.xpath((""//*[text='Bengaluru']""))).getText());     }  }","closed","","snehalgajbhiye","2018-05-01T21:22:36Z","2019-08-16T04:09:35Z"
"","6448","Create a new initElements() method in PageFactory which allows a generic class and a FieldDecorator passed into it","## Meta - OS:  MacOS X High Sierra 10.13.6  Selenium Version:  3.14.0  Browser:  None, APPIUM native app testing  Selenium PageFactory has an initElements() method which allows to pass a generic as the page class.  However when using a FieldDecorator which is required when testing native apps with Appium, the initElements() method that contains a FieldDecorator only accepts a page class and not a generic.  I am able to make my own method to do this but have to copy the instantiatePage() method into my own code due to its access being private.  I end up making something like below...       private static  T initElements(WebDriver driver, Class pageClassToProxy) {         T page = instantiatePage(driver, pageClassToProxy);         PageFactory.initElements(new AppiumFieldDecorator(driver), page);         return page;     }      private static  T instantiatePage(WebDriver driver, Class pageClassToProxy) {         try {             try {                 Constructor constructor = pageClassToProxy.getConstructor(WebDriver.class);                 return constructor.newInstance(driver);             } catch (NoSuchMethodException var3) {                 return pageClassToProxy.newInstance();             }         } catch (InstantiationException | IllegalAccessException | InvocationTargetException var4) {             throw new RuntimeException(var4);         }     }`  It would be good if Selenium could support something like this themselves where I can use generic with AppiumFieldDecorator in a PageFactory.initElements() method  Thanks.","closed","I-stale,","chronicideas","2018-09-26T11:55:32Z","2021-12-05T00:07:31Z"
"","6623","Message: Can not connect to the Service chromedriver","## Meta - OS:  MacOS Sierra 10.12.6 Selenium Version:   3.141.0 Browser:  Chrome   Browser Version:  ChromeDriver 2.43   ## Expected Behavior - Open Chrome driver ``` from selenium import webdriver browser = webdriver.Chrome() browser.get('http://seleniumhq.org/') ``` ## Actual Behavior - ERROR  I always get the following error ``` WebDriverException: Message: Can not connect to the Service chromedriver ```  I also tried ``` from selenium import webdriver browser = webdriver.Chrome(PATH_TO_CHROME_DRIVER) browser.get('http://seleniumhq.org/') ``` with chromedriver in my work folder, and chromedriver in my /usr/local/bin/ but it still doesn't work....  Can someone help?","closed","C-py,","rbnali","2018-11-06T10:02:05Z","2019-08-14T06:09:51Z"
"","6561","Nav windows remain in dock after Mojave update","## Meta - OS:  MacOS Mojave 10.14  Selenium Version:  3.5.3  Browser:  Google Chrome    Browser Version:  69.0.3497.100    So, since i updated to Mojave in my Mac, i noticed that every time i run a test, the window nav that selenium opens remains in the dock after it's finished, like this:  [https://imgur.com/a/vHz2tv3](url)  I'm not sure if it's Selenium, WebDriver or what, but what i'm sure is that this behavior started after the OS update, so it might have something to do with Mojave?  ## Expected Behavior - Once the test is finished, the window nav closes  ## Actual Behavior -  Once the test is finished, the window nav closes but it remains in the dock, like in the photo.","closed","","ssorriba","2018-10-19T13:58:31Z","2019-08-14T10:10:02Z"
"","6297","Missing grid console image for Safari Technology Preview","## Meta - OS:  macOS High Sierra 10.13.6 Selenium Version:  3.14.0 Browser:  Safari Technology Preview Browser Version:  Release 63 (Safari 12.1, WebKit 13607.1.2.1)  ## Expected Behavior - The Selenium Grid Console should display an icon ![safari_preview](https://user-images.githubusercontent.com/3578664/44237206-4a9f4e80-a175-11e8-93d3-fb1954d8c374.png) for Safari Technology Preview browsers.   ## Actual Behavior - Get an href=""#"" for each browser instance instead of an \ tag. ## HTML Source - `Safari Technology Preview`  ## Grid Console Image -   This coincides with commit: https://github.com/SeleniumHQ/selenium/commit/0efc0be17cd616bb61ab7af4266dbf4b7d5665b9  ## Steps to reproduce - Launch a Selenium grid node with Capabilities {browserName: Safari Technology Preview, browserVersion: 63, technologyPreview: true}","closed","C-grid,","schmidtkp","2018-08-16T22:11:57Z","2019-08-15T12:09:56Z"
"","6426","SafariDriver Could not start server: must specify at least one configuration argument.","## Meta - OS:  MacOS High Sierra 10.13.6  Selenium Version: 3.14   Browser:  Safari  Browser Version: 11.1.2   ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce - Follow the instruction: https://developer.apple.com/documentation/webkit/testing_with_webdriver_in_safari  First I run 'safaridriver --enable', then I tried the code in the instruction and run 'python test_webkit.py', I get:  ~~~ objc[44085]: Class AMSupportURLConnectionDelegate is implemented in both /System/Library/PrivateFrameworks/EmbeddedOSInstall.framework/Versions/A/EmbeddedOSInstall (0x7fff91e09748) and /System/Library/PrivateFrameworks/MobileDevice.framework/Versions/A/MobileDevice (0x10f6a6eb0). One of the two will be used. Which one is undefined.  objc[44085]: Class AMSupportURLSession is implemented in both /System/Library/PrivateFrameworks/OSPersonalization.framework/Versions/A/OSPersonalization (0x7fff931379f0) and /System/Library/PrivateFrameworks/MobileDevice.framework/Versions/A/MobileDevice (0x10f6a6f00). One of the two will be used. Which one is undefined.  Could not start server: must specify at least one configuration argument. ~~~  So I tried to run '/usr/bin/safaridriver' and '/usr/bin/safaridriver -p 0' and get the same result. Which path should I chooose? Can anyone help?","closed","","yourSylvia","2018-09-19T04:08:56Z","2019-08-15T02:10:01Z"
"","6263","Exception when trying to get element's property with v3.14.0. Same code works with v3.13.0","## Meta - OS:  macOS 10.13.6  Selenium Version:  3.14.0 (Python bindings)  Browser:  AppiumForMac Browser Version:  1.1.0   ## Expected Behavior - Output a dictionary with element's width and height. With Selenium 3.13.0, the sample script prints some size: Main window size:  {'height': 633, 'width': 745}   ## Actual Behavior - Selenium 3.14.0 throws an exception with an empty message. The output:  Traceback (most recent call last):   File ""/Volumes/data/test_env/test_selenium.py"", line 21, in      size = main_wnd.size   File ""/Volumes/data/env_selenium_3.14.0/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py"", line 518, in size     size = self._execute(Command.GET_ELEMENT_SIZE)['value']   File ""/Volumes/data/env_selenium_3.14.0/lib/python3.7/site-packages/selenium/webdriver/remote/webelement.py"", line 628, in _execute     return self._parent.execute(command, params)   File ""/Volumes/data/env_selenium_3.14.0/lib/python3.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute     self.error_handler.check_response(response)   File ""/Volumes/data/env_selenium_3.14.0/lib/python3.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message:   The same issue happens with Python 2.7.15  ## Steps to reproduce - 1. Create a virtual environment (using virtualenv v16.0.0) with this command: virtualenv -p python3 _path_to_a_folder_ 2. Activate the created environment: source _path_to_a_folder_/bin/activate 3. Install Selenium (version 3.14.0 is the default for now): pip install selenium 4. Run AppiumForMac. It can be downloaded from here (section Beta 3): https://github.com/appium/appium-for-mac/releases 5. Make sure that TextEdit.app is not running. 6. Run script test_selenium.py [test_selenium.py.zip](https://github.com/SeleniumHQ/selenium/files/2273407/test_selenium.py.zip)","closed","C-py,","nisb","2018-08-09T08:41:09Z","2019-08-15T16:09:43Z"
"","6612","AbstractMethodError: HtmlUnitWebElement.getCoordinates()","## Meta - OS:  MacOS Selenium Version:  3.141.0 Browser: HtmlUnit Browser Version: 2.33 HtmlUnitDriver Version: 2.33.0  ## Steps to reproduce -  ```java HtmlUnitDriver driver = new HtmlUnitDriver(...); WebElement element = driver.findElement(...); new Actions(driver).doubleClick(element).perform(); ```  ## Result: I am getting technical error:  ```java java.lang.AbstractMethodError: org.openqa.selenium.htmlunit.HtmlUnitWebElement.getCoordinates()Lorg/openqa/selenium/interactions/Coordinates; 	at org.openqa.selenium.interactions.internal.MouseAction.getActionLocation(MouseAction.java:69) 	at org.openqa.selenium.interactions.internal.MouseAction.moveToLocation(MouseAction.java:76) 	at org.openqa.selenium.interactions.DoubleClickAction.perform(DoubleClickAction.java:42) 	at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:34) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:642) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:595) ```","closed","","asolntsev","2018-11-02T22:21:56Z","2019-08-15T06:09:53Z"
"","5829","Odd behavior in Node.js bindings","## Meta - OS:  macOS  Selenium Version:  4.0.0-alpha.1  Browser:  any   Browser Version:  any   The issue I am having is odd behavior from the Node.js bindings in terms of using the `wait()` function with `condition` being a function that returns a `Condition`. This pattern worked fine on 3.6, but presents unintuitive behavior in 4.0.0-alpha.1. I am able to prepare a pull request to address this odd behavior, I am just unsure of what should be the correct behavior of this pattern. Currently, it is immediately resolving the Promise with the success callback and not respecting a given timeout. If behavior should be consistent with 3.6, it should respect the timeout and only resolve when the condition is true and reject on timeout. If this pattern should be disallowed, then there should be a friendly exception thrown instead of silently assuming the condition is true and resolving the promise immediately.  I have an example snippet attached that reproduces this issue.  ```javascript ""use strict"";  var webdriver = require(""selenium-webdriver"");   var driver = new webdriver.Builder()     .forBrowser('chrome')     .build(); function checkTitle() {     driver.getTitle()     .then(function(title) {         console.log(""The title is: "" + title)     });     return webdriver.until.titleIs('Google'); }   function handleFailure(err) {      console.error('Something went wrong!\n', err.stack, '\n');      quitDriver(); }  function quitDriver() {     console.log(""WebDriver is about to close."");     driver.close(); }  driver.get('https://google.com');  let result = driver.wait(checkTitle, 1000).then(quitDriver, handleFailure); ```","closed","C-nodejs,","cameronroe-cbt","2018-04-25T16:39:00Z","2021-09-05T08:21:35Z"
"","6551","Fail to open an exist project which is saved before by Selenium IDE","## Meta - OS:  mac OSX Mojave 10.14 Selenium Version:  IDE Browser:  Chrome Browser Version:  Version 69.0.3497.100 (Official Build) (64-bit) ## Expected Behavior - Open an exist project which is saved before by Selenium IDE ## Actual Behavior - ![image](https://user-images.githubusercontent.com/10706160/47129513-27edfb00-d2c8-11e8-8050-2fc9a6ccd29b.png) ## Steps to reproduce - 1.Open Selenium IDE 2.Click open project 3.Select options to All Files 4.Click the project file 5.Click the Open button","closed","","ghost","2018-10-18T03:29:30Z","2019-08-15T07:10:04Z"
"","6344","Click on link (except the first one) which opens a new tab executed 5+ seconds","## Meta - OS:  Linux/Mac os Selenium Version:   3.12.0 Browser:  Chrome Browser Version: 67.0.3396.62 and 70.0.3535.0  ## Detailed information I ran into a problem when running my test in chrome. In the test I clicked links one after another which opens a new tab. And the strange thing that each subsequent click (except first) is performed 5+ seconds. My test code - https://pastebin.com/adiBqGNk. Log from my console: ``` Execution time (hr): 0s 616.269329ms Execution time (hr): 5s 429.178605ms Execution time (hr): 5s 492.508944ms ```  Log from selenium - https://pastebin.com/DqSZ2wj7 And a piece from the selenium log with a pause of 5 seconds looks like: ``` 2018-08-28T01:43:20.306510207Z [1535420600.306][DEBUG]: DEVTOOLS COMMAND Input.dispatchMouseEvent (id=46) { 2018-08-28T01:43:20.306514515Z    ""button"": ""none"", 2018-08-28T01:43:20.306518706Z    ""clickCount"": 0, 2018-08-28T01:43:20.306534622Z    ""modifiers"": 0, 2018-08-28T01:43:20.306538269Z    ""type"": ""mouseMoved"", 2018-08-28T01:43:20.306554021Z    ""x"": 210, 2018-08-28T01:43:20.306558541Z    ""y"": 488 2018-08-28T01:43:20.306562380Z } 2018-08-28T01:43:25.309820104Z [1535420605.310][DEBUG]: DEVTOOLS RESPONSE Input.dispatchMouseEvent (id=46) { ``` Video of test execution - https://youtu.be/cuYphdDuBq0  ## What is the expected behavior? I expect that none of the clicks will hang for 5+ seconds  ## Did this work before? Yes. It works in chromium@59, but in chromium@60+ it does not.  ## Does this work in other browsers? Yes. It works correctly (much faster) in firefox, edge, ...","closed","","DudaGod","2018-08-28T19:52:51Z","2019-08-15T14:09:35Z"
"","5927","Ruby bindings: @driver.manage.window.full_screen fails when using xvfb","## Meta - OS:  Linux, Ubuntu 16.04 Selenium Version:   selenium-webdriver [3.12.0] installed from RubyGems, using Geckodriver v0.20.1, downloaded from https://github.com/mozilla/geckodriver/releases/download/v0.20.1/geckodriver-v0.20.1-linux64.tar.gz Ruby version: 2.3 - 2.3.1-2~16.04.9 [deb from the official repo] Browser:   Firefox, 60.0.1+build2-0ubun [deb from the official repo]  ## Expected Behavior - For the below test code to run successfully.  ## Steps to reproduce - Consider this code snippet: ```ruby #!/usr/bin/ruby2.3 require ""json"" require ""selenium-webdriver"" gem ""test-unit"" require ""test/unit""  class Vconn1 < Test::Unit::TestCase    def setup     @profile = Selenium::WebDriver::Firefox::Profile.new     @caps = Selenium::WebDriver::Remote::Capabilities.firefox(:firefox_profile => @profile)      @base_url = ""https://google.com""     @driver = Selenium::WebDriver.for :firefox, desired_capabilities:@caps     # when uncommenting this and commenting @driver.manage.window.full_screen, it works     #@driver.manage.window.maximize     @driver.manage.window.full_screen       @accept_next_alert = true     @driver.manage.timeouts.implicit_wait = 30     @verification_errors = []   end      def teardown     @driver.quit     assert_equal [], @verification_errors   end      def test_vconn1     @driver.get(@base_url )     @driver.find_element(:id, ""lst-ib"").send_keys ""Selenium xvfb firefox full screen problem""     @driver.find_element(:name, ""btnK"").click     #sleep(120)   end      def element_present?(how, what)     @driver.find_element(how, what)     true   rescue Selenium::WebDriver::Error::NoSuchElementError     false   end      def alert_present?()     @driver.switch_to.alert     true   rescue Selenium::WebDriver::Error::NoAlertPresentError     false   end      def verify(&blk)     yield   rescue Test::Unit::AssertionFailedError => ex     @verification_errors","closed","","jessp01","2018-05-21T19:23:12Z","2019-08-16T01:09:45Z"
"","6306","Cannot compile/run Selenium with JDK 1.8 for version 3.14.0","## Meta - OS:  Linux Mint 18.1 XFCE Selenium Version:  3.14.0 Browser:  N/A Browser Version:  N/A  ## Expected Behavior - Selenium will compile in maven for a project using JDK 1.8  ## Actual Behavior - Maven throws errors saying that the selenium jars were compiled against ""53.0"" (JDK 1.9) and will require that JDK version to run.  This is done by way of the maven enforcer plugin, specifically ""enforce-bytecode-version"". Since I see no references in the docs, changelog/etc about requiring JDK 1.9 support, I can only assume that this latest build had its target JDK version changed by mistake. Here's the output you get:  `[INFO] --- maven-enforcer-plugin:1.4.1:enforce (enforce-bytecode-version) @ apptegic-selenium --- [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-opera-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-safari-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-api:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-ie-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-remote-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-firefox-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-firefox-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-edge-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-chrome-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [INFO] Restricted to JDK 1.8 yet org.seleniumhq.selenium:selenium-chrome-driver:jar:3.14.0:compile contains module-info.class targeted to 53.0 [WARNING] Rule 0: org.apache.maven.plugins.enforcer.EnforceBytecodeVersion failed with message: Found Banned Dependency: org.seleniumhq.selenium:selenium-opera-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-safari-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-api:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-ie-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-remote-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-firefox-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-firefox-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-edge-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-chrome-driver:jar:3.14.0 Found Banned Dependency: org.seleniumhq.selenium:selenium-chrome-driver:jar:3.14.0 `  ## Steps to reproduce - 1. Download maven 2. Include the ""selenium-server"" and ""selenium-chrome-driver"" modules in a pom.xml file. 3. Setup the maven enforcer plugin.  Here's a snippet showing how to enable this.  Alternatively you can just open the jar files and check the bytecode versions. `                             maven-enforcer-plugin                                                               enforce-versions                                                      enforce                                                                                                                                                     3.0                                                                                                       [1.8,1.9)                                                                                                                                                          enforce-bytecode-version                                                      enforce                                                                                                                                                     ${java.version}                                                                                           true                                                                                                                              org.codehaus.mojo                         extra-enforcer-rules                         1.0-beta-4                                                    `","closed","C-java,","glajchs","2018-08-19T02:59:22Z","2019-08-15T09:09:51Z"
"","5888","set_page_load_timeout() issue","## Meta - OS:  Linux 4.9.0-6-amd64 #1 SMP Debian 4.9.88-1 (2018-04-29) x86_64 GNU/Linux  Selenium Version:  3.12.0  Browser:  Chrome   Browser Version:  66.0.3359.139 (64-bit)  Code: Python ## Expected Behavior - Im using set_page_load_timeout () and TimeoutException to stop page load. I expected after processing the timeout exception i can continue to work with webdriver  ## Actual Behavior -  However, after processing the exclusion timeout all attempts at interaction with the driver end with a timout exception. I can not find items on the page, nor send a request to refresh the page. But web page is fully loaded.  ``` During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""/media/sf_C_DRIVE/presence.py"", line 28, in      driver.find_element_by_tag_name(""h1"")   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 523, in find_element_by_tag_name     return self.find_element(by=By.TAG_NAME, value=name)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 957, in find_element     'value': value})['value']   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 314, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.TimeoutException: Message: timeout   (Session info: chrome=66.0.3359.139)   (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Linux 4.9.0-6-amd64 x86_64) ``` ## Steps to reproduce - ``` driver.set_page_load_timeout(5) try:    driver.get(url) except TimeoutException:    driver.find_element_by_tag_name(""h1"") ```","closed","","SergeyRademes","2018-05-12T00:29:34Z","2019-08-16T02:09:41Z"
"","6138","ActionChains.reset_actions() does not actually reset stored actions for Firefox","## Meta - OS:  Linux (Ubuntu 16.04)  Selenium Version:  3.13.0  Browser:  Firefox  Browser Version:  61.0.1 (geckodriver 0.21.0)  ## Expected Behavior - ActionChains.reset_actions() rests actions stored on the remote end  ## Actual Behavior - ActionChains.reset_actions() does not reset actions stored on the remote end. Because of this issue, old actions stored  before running reset_actions() are prepended to new actions stored after running reset_actions()  ## Steps to reproduce - (Example with minimum code)  ```python from selenium import webdriver from selenium.webdriver import ActionChains from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  capabilities = DesiredCapabilities.FIREFOX.copy() driver = webdriver.Remote(command_executor='http://:4444/wd/hub', desired_capabilities=capabilities) driver.get('http://www.google.com') action_chains = ActionChains(driver) action_chains.send_keys('a').perform() action_chains.reset_actions() action_chains.send_keys('a').perform() ```  After the last line of the code, 'aa' will be sent instead of 'a'. This issue does not occur for Chrome.","closed","C-py,","yugokato","2018-07-10T18:56:43Z","2019-08-15T00:09:51Z"
"","6010","'UnreachableBrowserException: Error communicating with the remote browser. It may have died'  when using ExpectedConditions","## Meta - OS:  Linux  Selenium Version:  3.12.0 Browser:  Chrome Driver 2.39 Browser Version:  67.0.3396.62  ## Expected Behaviour When calling the following method: `    public void fluentWaitForElementToBeStale(WebElement element) {         FluentWait wait = (new FluentWait(webdriver)).withTimeout(30, TimeUnit.SECONDS).pollingEvery(1, TimeUnit.MILLISECONDS).ignoring(TimeoutException.class);         wait.until(ExpectedConditions.stalenessOf(element));     }` Like so: `fluentWaitForElementToBeStale(fluentWaitForElement(By.cssSelector(""[id*=sys_group_grid][title='Enter Text to Filter on Group Name']"")));` The code should run without error (as it did in previous versions of Selenium) ## Actual Behavior - On methods that use Expected Conditions, I'm seeing occasional errors as can be seen in the attached exception (with personal details removed)  [Exception.txt](https://github.com/SeleniumHQ/selenium/files/2090276/Exception.txt) I don't see this in 3.7.0  ## Steps to reproduce Create a series of Cucumber tests and add them to a Testng suite, run the suite in parallel with 5 threads","closed","D-chrome,","funnybutrandom","2018-06-11T14:09:27Z","2019-08-15T18:09:40Z"
"","6070","Exception when retrieving a list of sessions from a hub","## Meta - OS:  Linux Selenium Version:  Selenium Grid Hub v.3.12.0  ## Expected Behavior - When I make a GET /wd/hub/sessions request on a node I get the following response: ```json {""status"":0,""value"":[]} ``` If i would make this request to a hub I would expect a similar response.  ## Actual Behavior - When I make that same request to a hub I get the following error: ```json {     ""sessionId"": null,     ""status"": 13,     ""value"": {         ""class"": ""org.openqa.grid.common.exception.GridException"",         ""error"": ""unknown error"",         ""message"": ""Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]"",         ""stackTrace"": [             {                 ""className"": ""org.openqa.grid.internal.ActiveTestSessions"",                 ""fileName"": ""ActiveTestSessions.java"",                 ""lineNumber"": 120,                 ""methodName"": ""getExistingSession""             },             {                 ""className"": ""org.openqa.grid.internal.DefaultGridRegistry"",                 ""fileName"": ""DefaultGridRegistry.java"",                 ""lineNumber"": 380,                 ""methodName"": ""getExistingSession""             },             {                 ""className"": ""org.openqa.grid.web.servlet.handler.RequestHandler"",                 ""fileName"": ""RequestHandler.java"",                 ""lineNumber"": 241,                 ""methodName"": ""getSession""             },             {                 ""className"": ""org.openqa.grid.web.servlet.handler.RequestHandler"",                 ""fileName"": ""RequestHandler.java"",                 ""lineNumber"": 123,                 ""methodName"": ""process""             },             {                 ""className"": ""org.openqa.grid.web.servlet.DriverServlet"",                 ""fileName"": ""DriverServlet.java"",                 ""lineNumber"": 86,                 ""methodName"": ""process""             },             {                 ""className"": ""org.openqa.grid.web.servlet.DriverServlet"",                 ""fileName"": ""DriverServlet.java"",                 ""lineNumber"": 64,                 ""methodName"": ""doGet""             },             {                 ""className"": ""javax.servlet.http.HttpServlet"",                 ""fileName"": ""HttpServlet.java"",                 ""lineNumber"": 687,                 ""methodName"": ""service""             },             {                 ""className"": ""javax.servlet.http.HttpServlet"",                 ""fileName"": ""HttpServlet.java"",                 ""lineNumber"": 790,                 ""methodName"": ""service""             },             {                 ""className"": ""org.seleniumhq.jetty9.servlet.ServletHolder"",                 ""fileName"": ""ServletHolder.java"",                 ""lineNumber"": 860,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.servlet.ServletHandler"",                 ""fileName"": ""ServletHandler.java"",                 ""lineNumber"": 535,                 ""methodName"": ""doHandle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",                 ""fileName"": ""ScopedHandler.java"",                 ""lineNumber"": 143,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.security.SecurityHandler"",                 ""fileName"": ""SecurityHandler.java"",                 ""lineNumber"": 548,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.HandlerWrapper"",                 ""fileName"": ""HandlerWrapper.java"",                 ""lineNumber"": 132,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",                 ""fileName"": ""ScopedHandler.java"",                 ""lineNumber"": 190,                 ""methodName"": ""nextHandle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.session.SessionHandler"",                 ""fileName"": ""SessionHandler.java"",                 ""lineNumber"": 1595,                 ""methodName"": ""doHandle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",                 ""fileName"": ""ScopedHandler.java"",                 ""lineNumber"": 188,                 ""methodName"": ""nextHandle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ContextHandler"",                 ""fileName"": ""ContextHandler.java"",                 ""lineNumber"": 1253,                 ""methodName"": ""doHandle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",                 ""fileName"": ""ScopedHandler.java"",                 ""lineNumber"": 168,                 ""methodName"": ""nextScope""             },             {                 ""className"": ""org.seleniumhq.jetty9.servlet.ServletHandler"",                 ""fileName"": ""ServletHandler.java"",                 ""lineNumber"": 473,                 ""methodName"": ""doScope""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.session.SessionHandler"",                 ""fileName"": ""SessionHandler.java"",                 ""lineNumber"": 1564,                 ""methodName"": ""doScope""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",                 ""fileName"": ""ScopedHandler.java"",                 ""lineNumber"": 166,                 ""methodName"": ""nextScope""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ContextHandler"",                 ""fileName"": ""ContextHandler.java"",                 ""lineNumber"": 1155,                 ""methodName"": ""doScope""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.ScopedHandler"",                 ""fileName"": ""ScopedHandler.java"",                 ""lineNumber"": 141,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.handler.HandlerWrapper"",                 ""fileName"": ""HandlerWrapper.java"",                 ""lineNumber"": 132,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.Server"",                 ""fileName"": ""Server.java"",                 ""lineNumber"": 530,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.HttpChannel"",                 ""fileName"": ""HttpChannel.java"",                 ""lineNumber"": 347,                 ""methodName"": ""handle""             },             {                 ""className"": ""org.seleniumhq.jetty9.server.HttpConnection"",                 ""fileName"": ""HttpConnection.java"",                 ""lineNumber"": 256,                 ""methodName"": ""onFillable""             },             {                 ""className"": ""org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback"",                 ""fileName"": ""AbstractConnection.java"",                 ""lineNumber"": 279,                 ""methodName"": ""succeeded""             },             {                 ""className"": ""org.seleniumhq.jetty9.io.FillInterest"",                 ""fileName"": ""FillInterest.java"",                 ""lineNumber"": 102,                 ""methodName"": ""fillable""             },             {                 ""className"": ""org.seleniumhq.jetty9.io.ChannelEndPoint$2"",                 ""fileName"": ""ChannelEndPoint.java"",                 ""lineNumber"": 124,                 ""methodName"": ""run""             },             {                 ""className"": ""org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill"",                 ""fileName"": ""EatWhatYouKill.java"",                 ""lineNumber"": 247,                 ""methodName"": ""doProduce""             },             {                 ""className"": ""org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill"",                 ""fileName"": ""EatWhatYouKill.java"",                 ""lineNumber"": 140,                 ""methodName"": ""produce""             },             {                 ""className"": ""org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill"",                 ""fileName"": ""EatWhatYouKill.java"",                 ""lineNumber"": 131,                 ""methodName"": ""run""             },             {                 ""className"": ""org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread"",                 ""fileName"": ""ReservedThreadExecutor.java"",                 ""lineNumber"": 382,                 ""methodName"": ""run""             },             {                 ""className"": ""org.seleniumhq.jetty9.util.thread.QueuedThreadPool"",                 ""fileName"": ""QueuedThreadPool.java"",                 ""lineNumber"": 708,                 ""methodName"": ""runJob""             },             {                 ""className"": ""org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2"",                 ""fileName"": ""QueuedThreadPool.java"",                 ""lineNumber"": 626,                 ""methodName"": ""run""             },             {                 ""className"": ""java.lang.Thread"",                 ""fileName"": ""Thread.java"",                 ""lineNumber"": 748,                 ""methodName"": ""run""             }         ],         ""stacktrace"": ""org.openqa.grid.common.exception.GridException: Session [(null externalkey)] not available and is not among the last 1000 terminated sessions.\nActive sessions are[]\n\tat org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:120)\n\tat org.openqa.grid.internal.DefaultGridRegistry.getExistingSession(DefaultGridRegistry.java:380)\n\tat org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:241)\n\tat org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:123)\n\tat org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:86)\n\tat org.openqa.grid.web.servlet.DriverServlet.doGet(DriverServlet.java:64)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:687)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\tat org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:860)\n\tat org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:535)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:143)\n\tat org.seleniumhq.jetty9.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:190)\n\tat org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:188)\n\tat org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:168)\n\tat org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.nextScope(ScopedHandler.java:166)\n\tat org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n\tat org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n\tat org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.seleniumhq.jetty9.server.Server.handle(Server.java:530)\n\tat org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:347)\n\tat org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:256)\n\tat org.seleniumhq.jetty9.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:279)\n\tat org.seleniumhq.jetty9.io.FillInterest.fillable(FillInterest.java:102)\n\tat org.seleniumhq.jetty9.io.ChannelEndPoint$2.run(ChannelEndPoint.java:124)\n\tat org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:247)\n\tat org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.produce(EatWhatYouKill.java:140)\n\tat org.seleniumhq.jetty9.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:131)\n\tat org.seleniumhq.jetty9.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:382)\n\tat org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:708)\n\tat org.seleniumhq.jetty9.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:626)\n\tat java.lang.Thread.run(Thread.java:748)\n""     } } ```","closed","I-enhancement,","mgroenhoff","2018-06-26T12:04:25Z","2019-08-15T17:09:40Z"
"","6337","Cannot override default capabilities using webdriver.Firefox","## Meta - OS:  Linux  Selenium Version:  3.14.0  Browser: Firefox   Browser Version: 59.0.2   ## Expected Behavior -  The `acceptInsecureCerts` capability can be turned off by passing `capabilities` to `selenium.webdriver.Firefox`.  ## Actual Behavior -  `acceptInsecureCerts` is always `True`.  ## Steps to reproduce -   This seems like the obvious way to change the desired capability, but it doesn't change the default value -- the request fails:  ```python from selenium import webdriver  caps = webdriver.DesiredCapabilities.FIREFOX.copy() caps['acceptInsecureCerts'] = False  session = webdriver.Firefox(capabilities=caps) session.get(""https://self-signed.badssl.com/"") print(session.current_url) ```  Result (not what I expect -- it shouldn't accept the certificate): ```shell $ python ~/tmp/selenium_fails.py  https://self-signed.badssl.com/ ```  By changing the global default capabilities dict, you can change the setting, but I don't think this is what I'm meant to do: ```python from selenium import webdriver  webdriver.DesiredCapabilities.FIREFOX['acceptInsecureCerts'] = False  session = webdriver.Firefox() session.get(""https://self-signed.badssl.com/"") print(session.current_url) ```  Result (what I wanted): ```shell $ python ~/tmp/selenium_works.py  Traceback (most recent call last):   File ""/home/rick/tmp/selenium_works.py"", line 6, in      session.get(""https://self-signed.badssl.com/"")   File ""/home/rick/anaconda3/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 332, in get     self.execute(Command.GET, {'url': url})   File ""/home/rick/anaconda3/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute     self.error_handler.check_response(response)   File ""/home/rick/anaconda3/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InsecureCertificateException: Message:  ```  ## Possible diagnosis  Options uses the global DesiredCapabilities dictionary [here](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/options.py#L153).  This then overwrites the user-supplied capabilities argument [here](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/webdriver.py#L159)","closed","C-py,","ricklupton","2018-08-27T21:53:24Z","2019-08-15T14:09:37Z"
"","6171","[py] ActionChains.drag_and_drop_by_offset moving to absolute position","## Meta - OS:  Linux  Selenium Version:  3.13.0  ## Expected Behavior -  `ActionChains.drag_and_drop_by_offset` not being broken as described below, where instead of moving by an offset it might try to move by to a viewport location.  ## Actual Behavior -  For `ActionChains.drag_and_drop_by_offset` selenium tries to move the pointer to an absolute instead of a relative position when using a W3C driver, that's why e.g. when testing with Firefox you get a `MoveTargetOutOfBoundsException` when trying to move to the offset **(-10, -10)**.  ```py def drag_and_drop_by_offset(self, source, xoffset, yoffset):     """"""     Holds down the left mouse button on the source element,        then moves to the target offset and releases the mouse button.      :Args:      - source: The element to mouse down.      - xoffset: X offset to move to.      - yoffset: Y offset to move to.     """"""     if self._driver.w3c:         self.w3c_actions.pointer_action.click_and_hold(source) \                                        .move_to_location(xoffset, yoffset) \                                        .release()         for _ in range(3):             self.w3c_actions.key_action.pause()     else:         self.click_and_hold(source)         self.move_by_offset(xoffset, yoffset)         self.release()     return self ```  `PointerActions.move_to_location`: ```py def move_to_location(self, x, y):     self.source.create_pointer_move(origin='viewport', x=int(x), y=int(y))     return self ``` As you can see, it is meant for absolute positions.  ## Steps to reproduce -  Code such as: ```py ActionChains(driver)\      .drag_and_drop_by_offset(element, -10, -10)\      .perform() ```","closed","C-py,","Herst","2018-07-17T12:50:34Z","2019-08-15T18:09:59Z"
"","6056","Selenium TouchActions -> SingleTap doesn't work on iOS devices","## Meta - OS:  iOS OS Version: 11, 10.3 Selenium Version:  3.12.1 Selenium Language Bindings: C# (.NETCore 2.0.0) Browser:  Safari (on iOS) Device: iPhone X, iPhone 7 Browser Version:  N/A Environment where test was ran: BrowserStack Test page to reproduce: https://www.w3schools.com/Jsref/tryit.asp?filename=tryjsref_touchstart Additional Notes: Sample code below works perfectly on Android devices  ## Expected Behavior - SingleTap action should be performed.  ## Actual Behavior - SingleTap action doesn't work. No errors are displayed, however nothing happens  ## Steps to reproduce -  1. Access the test page 2. Tap on the paragraph indicated  ## Simple code to reproduce the issue - ``` //custom driver: public class CnxDriver : RemoteWebDriver, IHasTouchScreen     {         private ITouchScreen m_touchScreen;          public CnxDriver(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)             : base(commandExecutor, desiredCapabilities)         {         }          public CnxDriver(ICapabilities desiredCapabilities)             : base(desiredCapabilities)         {         }          public CnxDriver(Uri remoteAddress, ICapabilities desiredCapabilities)             : base(remoteAddress, desiredCapabilities)         {         }          public CnxDriver(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)             : base(remoteAddress, desiredCapabilities, commandTimeout)         {         }          public ITouchScreen TouchScreen => m_touchScreen ?? (m_touchScreen = new RemoteTouchScreen(this));          private static object Invoke(object o, string methodName, params object[] args)         {             var methodInfo = o.GetType().GetMethod(methodName, BindingFlags.NonPublic | BindingFlags.Instance);             if (methodInfo != null)             {                 return methodInfo.Invoke(o, args);             }             return null;         }          public IWebElement FindByXName(string locator)         {             return Invoke(this, ""FindElement"", ""xname"", locator) as IWebElement;         }          public static IWebElement FindByXName(IWebElement root, string locator)         {             var parentElement = root as RemoteWebElement;             return Invoke(parentElement, ""FindElement"", ""xname"", locator) as IWebElement;         }     } ```  ``` //start driver and run test [TestFixture] public class TestClass {         [Test]         public void TestStuff3()         {                 DesiredCapabilities caps = new DesiredCapabilities();                 caps.SetCapability(""browserstack.user"", );                 caps.SetCapability(""browserstack.key"", );                 caps.SetCapability(""browserstack.debug"", ""true"");                 caps.SetCapability(""real_mobile"", ""true"");                 caps.SetCapability(""device"", ""iPhone X"");                 caps.SetCapability(""os_version"", ""11.0"");                 caps.SetCapability(""os"", ""ios"");                 caps.SetCapability(""browser"", ""iphone"");                  IWebDriver driver = new CnxDriver(new Uri(""http://hub-cloud.browserstack.com/wd/hub/""), caps);                 WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(60));                  driver.Navigate().GoToUrl(""https://www.w3schools.com/Jsref/tryit.asp?filename=tryjsref_touchstart"");                  driver.SwitchTo().Frame(""iframeResult"");                  var element = wait.Until(d => d.FindElement(By.XPath("".//body/p[1]"")));                 Thread.Sleep(5000);                  var touchAction = new TouchActions(driver);                 touchAction.SingleTap(element).Perform();                  Thread.Sleep(5000);                 driver.Quit();         } } ```","closed","C-dotnet,","CosminGramada","2018-06-21T15:08:58Z","2021-09-05T09:12:45Z"
"","6159","Selenium Grid - SessionNotCreatedException: Unable to create new service: GeckoDriverService","## Meta - OS:  hub: Win10, node: ubuntu16.04.4  Selenium Version:  selenium-server-standalone-3.13.0.jar  Browser:  Firefox   Browser Version:  58.0.2   ## Expected Behavior - Open a Firefox browser in node and navigate to ""https://hk.yahoo.com/"" ## Actual Behavior - Throws exception on ""vmDriver = new RemoteWebDriver(new URL(""http://192.168.1.101:4444/wd/hub""), capability);"" as below  Jul 15, 2018 1:37:20 AM org.openqa.selenium.remote.DesiredCapabilities firefox INFO: Using `new FirefoxOptions()` is preferred to `DesiredCapabilities.firefox()` capability: Capabilities {acceptInsecureCerts: true, browserName: firefox, platform: LINUX, version: } Exception: org.openqa.selenium.SessionNotCreatedException: Unable to create new service: GeckoDriverService Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:19.891Z' System info: host: 'eason-VirtualBox', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.13.0-36-generic', java.version: '1.8.0_171' Driver info: driver.version: unknown Command duration or timeout: 555 milliseconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:123) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143) 	at test.SeleniumGridTest.runTest(SeleniumGridTest.java:50) 	at test.SeleniumGridTest.main(SeleniumGridTest.java:32) Caused by: org.openqa.selenium.SessionNotCreatedException: Unable to create new service: GeckoDriverService Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:19.891Z' System info: host: 'eason-VirtualBox', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.13.0-36-generic', java.version: '1.8.0_171' Driver info: driver.version: unknown Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:32:19.891Z' System info: host: 'LAPTOP-ROARHU82', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_172' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.server.ServicedSession$Factory.lambda$get$0(ServicedSession.java:134) 	at org.openqa.selenium.remote.server.ServicedSession$Factory.apply(ServicedSession.java:151) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$apply$12(ActiveSessionFactory.java:177) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:373) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.apply(ActiveSessionFactory.java:180) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$null$2(NewSessionPipeline.java:65) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.Collections$2.tryAdvance(Collections.java:4717) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.server.NewSessionPipeline.lambda$createNewSession$3(NewSessionPipeline.java:68) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.DistinctOps$1$2.accept(DistinctOps.java:175) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) 	at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Streams.java:405) 	at java.util.stream.Streams$ConcatSpliterator.tryAdvance(Streams.java:728) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.server.NewSessionPipeline.createNewSession(NewSessionPipeline.java:71) 	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:65) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$3(WebDriverServlet.java:247) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) vmDriver: null  ## Steps to reproduce - 		System.setProperty(""webdriver.gecko.driver"", ""/home/eason/JavaTest/geckodriver.exe""); //geckodriver-v0.21.0-linux64.tar.gz 		DesiredCapabilities capability = DesiredCapabilities.firefox(); 		capability.setBrowserName(""firefox"");  		capability.setPlatform(Platform.LINUX);   		//capability.setVersion(""58.0"");  //uncomment this line will throws another exception 		//capability.setCapability(,); 		WebDriver vmDriver = null; 		try { 			vmDriver = new RemoteWebDriver(new URL(""http://192.168.1.101:4444/wd/hub""), capability); 		} catch (Exception e) { 			System.out.print(""Exception: ""); 			e.printStackTrace(); 		} 		System.out.println(vmDriver.getTitle()); 		vmDriver.get(""https://hk.yahoo.com/"");","closed","","easonlauatgithub","2018-07-14T17:52:12Z","2019-08-15T18:10:04Z"
"","6420","[py] set_page_load_timeout() crashes with firefox: unknown field `sessionId` (v61 → v62 regression)","## Meta - OS:  Fedora  28 Selenium Version:  3.14 Browser:  Firefox Browser Version:  v62.0 selenium-python version: 3.7.0-3.fc28  ## Steps to reproduce -  Run selenium in containers (current :3 tag points to 3.14.0):       docker run -d -p 4444:4444 --name selenium-hub selenium/hub:3      docker run -d --link selenium-hub:hub selenium/node-firefox:3  Things generally work with Python: ``` # python >>> import selenium.webdriver >>> driver = selenium.webdriver.Remote(command_executor='http://10.111.112.10:4444/wd/hub', desired_capabilities={'browserName': 'firefox'}) >>> driver  >>> driver.get_window_size() {'width': 1224, 'height': 918} >>> driver.set_window_size(1400, 1200) >>> driver.get_window_size() {'width': 1400, 'height': 1200} ```  But trying to call `set_page_load_timeout()` fails: ``` >>> driver.set_page_load_timeout(90) Traceback (most recent call last):   File """", line 1, in    File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 830, in set_page_load_timeout     'type': 'page load'})   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 308, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown field `sessionId`, expected one of `implicit`, `pageLoad`, `script` at line 1 column 12 ```  This does not happen with other drivers like selenium/node-chrome:3 or MS Edge (https://docs.microsoft.com/en-us/microsoft-edge/webdriver), and it also still works with the (ancient) selenium/node-firefox:2.53.1.  The code around ""def execute()"" and ""def set_page_load_timeout"" doesn't seem to have changed at all in current upstream master: https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webdriver.py  So somehow firefox doesn't stomach the extra `sessionId` parameter that execute() adds.","closed","","martinpitt","2018-09-17T20:05:18Z","2019-08-15T11:09:51Z"
"","6216","Firefox doesn't work with selenium hub","## Meta - OS:  Fedora Selenium Version:  3.12.0 Browser:  Firefox Geckodriver Version: 0.21.0  Browser Version:   61.0.1  ## Expected Behavior - Firefox should start and run test  ## Actual Behavior - A firefox browser will start but it didn't open the url and do nothing.  Log in selenium hub will show receive a request and trying to create a new session on test slot Log in selenium node will show started new session. Can't see any execption in the hub or node For my test, I am using nightwatch, and the log show ""Error retrieving a new session from the selenium server  "" and ""Connection refused! Is selenium server started?""  But the test work well if I just start a standalone server without using hub. I want to know if I can run firefox on selenium hub ? ## Steps to reproduce - Here is my example : https://github.com/lieyike/Run-with-Selenium-hub Run on selenium hub (Test fail) 1.npm install  2.bash start-hub.sh 3.bash start-node.sh 4.npm run test  Only start standalone server (Test pass) if run will standalone or using nightwatch to start selenium, test will work 1.npm install  2.bash start-standalone.sh 3.npm run test  Nightwatch  standalone server (Test Pass) 1.edit  https://github.com/lieyike/Run-with-Selenium-hub/blob/master/nightwatch.conf.js#L9 start_process to true 2.npm run test","closed","","lieyike","2018-07-28T06:07:27Z","2019-08-15T13:09:52Z"
"","6254","selenium pageLoad timeOut  Bug","## Meta - OS:  centos6.5 Selenium Version:  3.14.0 Browser:  Firefox  Okhttp3 have default 20 times retry request, in RetryAndFollowUpInterceptor.java,it not catch pageLoad Request Timeout Exception。  Okhttp3有默认的20次重定向请求，当设置pageLoad超时属性时，浏览器返回的 Request Timeout 信息不能被Okhttp3捕获，导致页面超时设置无效。","closed","C-java,","pinggaimuir","2018-08-07T11:42:09Z","2019-08-15T16:09:56Z"
"","6540","throw Error(""Cannot set the selection end"");  when setting text in input with type email.","## Meta - OS:  any Selenium Version:  3.5 Browser:  any  ## Expected Behavior - The input field value should change to the appropriate text value entered like it does with other types or nontype input fields.  ## Steps to reproduce / Actual Behavior When attempting to sendKeys (Selenium IDE) on an input field of type email or number, the error of ""Cannot set the selection end"" is thrown.  ## How it is happening The sendKeys command calls the selection.js goog.dom.selection.setText function which checks for the ability to use selectionStart (via goog.dom.selection.useSelectionProperties_ function), which returns false, and thus throwing the error.  Per the W3 standards (https://www.w3.org/TR/html5/forms.html#the-input-element) the number/email input field types do not have IDL attributes selectionStart/selectionEnd. This is why goog.dom.selection.useSelectionProperties_ function returns false.  ## Possible solution Implement specific logic in selenium atoms for inputs that not have IDL attributes selectionStart/selectionEnd ( email and number )  and not check them for the ability to use selectionStart.  ## The same issue was raised over a year ago https://github.com/SeleniumHQ/selenium/issues/4361 Is there any progress in fixing this issue in WebDriver, Selenium IDE or SideeX ?","closed","R-awaiting answer,","MintLucky","2018-10-16T09:29:37Z","2019-08-15T06:09:42Z"
"","6146","Cosmetic issue on Selenium documentation","## Meta - OS:  Any  Selenium Version:  NA  Browser: All    Browser Version:  Any    ## Expected Behavior -  1. word '**on**' should be present between the words **doc3861** and **one** . 2. word **doc3861** should be in quotes because  ‘doc6148’ is also in single quotes.  ## Actual Behavior -  1. word '**on**' is **missing** between the words **doc3861** and **one**  2. word **doc3861** is not in quotes whereas word ‘doc6148’ is in single quotes.  ## Steps to reproduce - 1. Navigate to page/URL: https://www.seleniumhq.org/docs/06_test_design_considerations.jsp#introducing-test-design. 2. Move to section: 'Testing Dynamic Elements'  ![image](https://user-images.githubusercontent.com/41124825/42589499-c54d1050-855e-11e8-9626-c83866531d64.png)","closed","C-docs,","ankitpurii","2018-07-11T17:34:35Z","2019-08-15T10:09:37Z"
"","6116","Firefox timeout is not configurable in XpiDriverService","## Meta - OS:  any  Selenium Version:  3.13.0  Browser:  Firefox 52.6.0   Browser Version:     Could you please add the fix in org.openqa.selenium.firefox.XpiDriverService to method waitUntilAvailable (get timeout from FirefoxBinary): ``` @Override protected void waitUntilAvailable() throws MalformedURLException {    try {       URL status = new URL(getUrl().toString() + ""/status"");       long timeoutInMillis = binary.getTimeout();       new UrlChecker().waitUntilAvailable(timeoutInMillis, TimeUnit.MILLISECONDS, status);    } catch (UrlChecker.TimeoutException e) {       throw new WebDriverException(""Timed out waiting for driver server to start."", e);    } } ```  In this case there is possibility to set custom timeout for lunching Firefox I am using the next code to set it ``` FirefoxOptions options = new FirefoxOptions(); FirefoxBinary firefoxBinary = new FirefoxBinary(); firefoxBinary.setTimeout(SECONDS.toMillis(120)); options.setBinary(firefoxBinary); ```  Also the same fix could be added to org.openqa.selenium.firefox.GeckoDriverService  ``` ... public class GeckoDriverService extends DriverService { ...   private final long timeoutInMillis;   public GeckoDriverService(       File executable, int port,       ImmutableList args,       ImmutableMap environment) throws IOException {     super(executable, port, args, environment, long timeoutInMillis);     this.timeoutInMillis = timeoutInMillis;   } ...   @Override   protected void waitUntilAvailable() throws MalformedURLException {     PortProber.waitForPortUp(getUrl().getPort(), timeoutInMillis, TimeUnit.MILLISECONDS);   } ...   public static class Builder extends DriverService.Builder<     GeckoDriverService, GeckoDriverService.Builder> { ...   @Override   protected GeckoDriverService createDriverService(File exe, int port,                                                  ImmutableList args,                                                  ImmutableMap environment) {     try {       long timeoutInMillis = binary.getTimeout();       GeckoDriverService service = new GeckoDriverService(exe, port, args, environment, timeoutInMillis); ....     } ...   } ... } ``` Created pull request https://github.com/SeleniumHQ/selenium/pull/6117","closed","D-firefox,","grigaman","2018-07-05T09:30:15Z","2021-09-05T08:21:32Z"
"","6280","WebDriver API for node.js does not properly handle multi-byte UTF8 characters","## Meta - OS:  All Selenium Version:  JavaScript Node.js API v4.0.0-alpha.1 Browser:  Tested with Chrome, though the issue should apply to all browsers Browser Version:  68.0.3440.106 (64-bit)  ## Expected Behavior - While receiving a large amount of text from WebDriver, multi-byte UTF8 characters are decoded properly.  ## Actual Behavior - Some multi-byte UTF8 characters are not decoded properly, and are replaced by U+FFFD (replacement character).  The cause of the issue is around https://github.com/SeleniumHQ/selenium/blob/selenium-3.14.0/javascript/node/selenium-webdriver/http/index.js#L235. The raw bytes received from the driver are collected into an array of Buffer objects, and stored in the variable named `body`. Then the JavaScript `Array.join` method is used to convert the Buffer objects into strings and then concatenate them. However, the conversion to strings happens first, before the buffers are concatenated. If the boundary between two buffers happen to fall within a multi-byte UTF8 character, then that character can't be properly converted to string.  The Buffer objects need to be concatenated as raw bytes first, before conversion into string.  ## Steps to reproduce - See https://crbug.com/chromedriver/2539","closed","C-nodejs,","JohnChen0","2018-08-14T15:36:32Z","2019-08-14T10:10:00Z"
"","6613","Selenium went from version 3.14 to 3.141","## Meta - OS:  all  Selenium Version:  you tell me  Browser:  all   Browser Version:     ## Expected Behavior - I was hoping the version of Selenum after 3.14.0 would be 3.15.0 or perhaps 3.14.1 ## Actual Behavior - Selenium went from version 3.14 to 3.141. Is this for real? ## Steps to reproduce -  Check Maven Central for available versions:  https://search.maven.org/search?q=g:org.seleniumhq.selenium%20AND%20a:selenium-java&core=gav","closed","","SiKing","2018-11-02T23:22:05Z","2019-08-15T06:09:55Z"
"","6442","at a element, single click not woking but clicking two times works","## Meta - OS:  All  Selenium Version:  3.14  Browser:  All  Browser Version:  all  ## Expected Behavior -  click should work at first click  ## Actual Behavior - single click shows hover, two time clicks, clicks the element  ## Steps to reproduce - :- go to home page of starbuks.com and landsend.com :- at starbucks.com, click at coffehouse and at landsend.com, click at New, Women,Kids","closed","I-needs investigation,","sdhsmm","2018-09-25T05:54:32Z","2019-08-15T10:09:39Z"
"","6072","Python client has to check for a still active keep-alive connection before sending the command","## Meta - OS:  All  Selenium Version:  3.13.0  Browser:  Firefox   Browser Version:  All versions of Firefox   Since the release of geckodriver version 0.21.0 the keep-alive mode is supported, with the caveat (https://github.com/mozilla/geckodriver/issues/1304) that the timeout on the server side is set to only 5s. As result any command will fail which is send after a `time.sleep()` larger or equal to 5s. Here an example:  ```     driver.get(""http://example.org"")     time.sleep(6)     driver.find_element_by_tag_name(""h1"") ```  ## Expected Behavior - The Selenium client has to check for a valid and active connection before sending the request. It shouldn't result in an exception as shown below.  ## Actual Behavior - The next command after the 5s delay will fail with:  ``` ../../Users/henrik/.venvs/selenium/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:635: in execute_script     'args': converted_args})['value'] ../../Users/henrik/.venvs/selenium/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py:318: in execute     response = self.command_executor.execute(driver_command, params) ../../Users/henrik/.venvs/selenium/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:472: in execute     return self._request(command_info[0], url, body=data) ../../Users/henrik/.venvs/selenium/lib/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py:496: in _request     resp = self._conn.getresponse() /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py:1136: in getresponse     response.begin() /usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py:453: in begin     version, status, reason = self._read_status() _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  self =       def _read_status(self):         # Initialize with Simple-Response defaults         line = self.fp.readline(_MAXLINE + 1)         if len(line) > _MAXLINE:             raise LineTooLong(""header line"")         if self.debuglevel > 0:             print ""reply:"", repr(line)         if not line:             # Presumably, the server closed the connection before             # sending a valid response. >           raise BadStatusLine(line) E           BadStatusLine: '' ```","closed","I-defect,","whimboo","2018-06-26T13:21:33Z","2019-08-15T17:09:57Z"
"","6026","Request body does not contain required parameter 'capabilities'.","## Meta - OS:  10.13.4 OSX  Selenium Version:  3.6  Browser:  safari    I want to use safari technology preview instead of safari   Browser Version:  STP 58   ## Expected Behavior -  ## Actual Behavior -  > SessionNotCreatedError: Request body does not contain required parameter 'capabilities'. >     at Object.throwDecodedError (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/lib/error.js:514:15) >     at parseHttpResponse (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/lib/http.js:519:13) >     at doSend.then.response (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/lib/http.js:441:30) >     at  >     at process._tickCallback (internal/process/next_tick.js:188:7) > From: Task: WebDriver.createSession() >     at Function.createSession (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/lib/webdriver.js:769:24) >     at Function.createSession (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/safari.js:253:41) >     at createDriver (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/index.js:170:33) >     at Builder.build (/Users/starcwl/Documents/Project/ZiJing/Web/automation/node_modules/selenium-webdriver/index.js:660:16) >     at Object. (/Users/starcwl/Documents/Project/ZiJing/Web/automation/test.js:6:54) >     at Module._compile (module.js:652:30) >     at Object.Module._extensions..js (module.js:663:10) >     at Module.load (module.js:565:32) >     at tryModuleLoad (module.js:505:12) >     at Function.Module._load (module.js:497:3)  ## Steps to reproduce -  ``` let wd = require('selenium-webdriver'); let safari = require('selenium-webdriver/safari'); let opts = new safari.Options(); opts.setTechnologyPreview(true); let caps = opts.toCapabilities(); let driver = new wd.Builder().withCapabilities(caps).build();  ```      so how could I contain capabilities in request body?","closed","C-nodejs,","starcwl","2018-06-15T08:11:32Z","2019-08-14T16:09:59Z"
"","6167","webdriver.firefox.bin property is ignored","## Meta - OS:  **Windows 10** Selenium Version:  **Standalone 3.13.0** Browser:  **Firefox 61.0.1, Geckodriver 0.21.0** Browser Version:   **Firefox 61.0.1 64bit, Geckodriver 0.21.0**  ## Expected Behavior - According to https://github.com/SeleniumHQ/selenium/wiki/FirefoxDriver#important-system-properties, running selenium server in standalone mode with `webdriver.firefox.bin` property set should overwrite the path to Firefox binary.  ``` java -jar -Dwebdriver.gecko.driver=C:/latest/geckodriver.exe -Dwebdriver.firefox.bin=C:/latest/firefox.exe selenium-server-standalone-3.13.0.jar ```  I can confirm the `gecko.driver` property is respected, but `firefox.bin` is not.  ## Actual Behavior - Taken from Selenium Server stdout:  ``` 16:30:57.049 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.13.0', revision: '2f0d292'  16:30:57.049 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444 2018-07-16 16:30:57.133:INFO::main: Logging initialized @325ms to org.seleniumhq.jetty9.util.log.StdErrLog  16:30:57.505 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444    16:31:03.858 INFO [ActiveSessionFactory.apply] - Capabilities are: {""browserName"": ""firefox""}   16:31:03.858 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.firefox.GeckoDriverService)   1531755064043   geckodriver INFO geckodriver 0.20.11531755064043   geckodriver INFOListening on 127.0.0.1:47151  >>>>> 1531755064913   mozrunner::runner   INFO Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-profile"" ""C:\\Users\\TMP\\AppData\\Local\\Temp\\rust_mozprofile.Cl9EnxGqZEea""","closed","C-grid,","b71729","2018-07-16T15:50:57Z","2021-09-05T08:30:09Z"
"","6210","Selenium failing to locate Modal Dialog box","## Meta - OS:   Windows 7  Selenium Version:  3.13.0 Web Driver  Browser:  Firefox  I was automating Timesheet Entry in office, earlier after logging into the timesheet website the timesheet entry page used to load and automating was not a challenge, But now since goal setting has opened as part of appraisals, they have introcuded a modal dialog box, so as soon as I login into the timesheet website the modal dialog box opens. Though I tried clicking close button using its xpath and even by cssselector, selenium just fails to locate the element.  Next when I tried clicking button on the timsheet page which is beinf overridden by the modal dialog boz I got the below error  Code:  		WebDriverWait wait1 = new WebDriverWait(driver, 60); 		wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(""/html/body/form/div[3]/nav[2]/div[2]/ul[1]/li[1]/a/b"")));	(Locating timehseet daily button)	 		driver.findElement(By.xpath(""/html/body/form/div[3]/nav[2]/div[2]/ul[1]/li[1]/a/b"")).click(); 		driver.findElement(By.linkText(""Timesheet Weekly"")).click();  Error:  Element  is not clickable at point (115,57.5) because another element  obscures it  This means selenium can detect that modal dialog box is an element appearing on the main page  So i modified the code as below   		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS); 		Thread.sleep(10000);         WebDriverWait waitX = new WebDriverWait(driver, 30);         waitX.until(ExpectedConditions.visibilityOfElementLocated(By.id(""divMissTSCutOffAdvance""))).click(); 		WebDriverWait wait1 = new WebDriverWait(driver, 60); 		wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(""/html/body/form/div[3]/nav[2]/div[2]/ul[1]/li[1]/a/b"")));	(Locating timehseet daily button)	  Error: Selenium fails to locate element with id divMissTSCutOffAdvance  I have tried various methods to resolve it or find a work around but nothing worked. I even tried switching to new window using getWindowHandles method but failed, tried to use switch to alert as well thinking if it was being treated as a alert but nothing worked.  When I give some waiting time and try driver.switchTo().alert(); It throws error saying : No modal dialog is currently open   -->  Driver Version:  0.21.0 Gecko Driver (64-bit)  Browser Version:  Firefox 61.0.1 (64-bit)   ## EXPECTED BEHAVIOUR modal dialog box should be closed  ## Actual Behavior -selenium fails to locate the close button on modal dailog box  ## Steps to reproduce - I wanted to paste the entire script but since it contains my official company login credentials its not easy to do it  ![image](https://user-images.githubusercontent.com/41769090/43301818-040aebc8-9185-11e8-96e3-fac55efe9181.png)","closed","","Ashish20689","2018-07-27T04:41:13Z","2019-08-15T17:09:51Z"
"","6360","Screenshot failure : java.net.SocketTimeoutException: Read timed out.  This is occasional","## Meta - OS:   Windows 7   Selenium Version:  3.6  Browser:   Chrome68  chromedriver2.41  ## Actual Behavior - Screenshot failure : java.net.SocketTimeoutException: Read timed out.  This is occasional.  java.net.SocketTimeoutException: Read timed out Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z' System info:  os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_151' Driver info: driver.version: RemoteWebDriver org.openqa.selenium.WebDriverException: java.net.SocketTimeoutException: Read timed out Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T15:28:36.4Z' System info:  os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_151' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) ~[selenium-remote-driver-3.6.0.jar:?] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:586) ~[selenium-remote-driver-3.6.0.jar:?] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:643) ~[selenium-remote-driver-3.6.0.jar:?]","closed","","yimymo","2018-09-04T07:56:11Z","2019-08-15T13:09:45Z"
"","6314","IEDriverServer.exe process does not end after installing Microsoft Update (KB4339093).","## Meta - OS:   Windows 7 Selenium Version:  3.4.0 Browser:  IE 11.0.70 (KB4339093) IEDriverServer.exe  Version: 2.53.0  ## Expected Behavior -  When executing a junit test case using Selenium I expect the driver.quit(); method to kill the IEDriverServer.exe process.  ## Actual Behavior -  When executing a junit test case using Selenium the driver.quit(); method does not kill the IEDriverServer.exe process.  Any subsequent execution of the test is impacted as the driver does not quit properly.  Also the following warning is available to stdoutput -  `[THREAD ID=Forwarding quit on session b23d415b-e07c-44fe-bed9-234f1e0f5d3b to remote] 2018-08-21 15:37:41,393 DEBUG  o.a.h.i.c.PoolingHttpClientConnectionManager Connection released: [id: 2][route: {} ->http://localhost:33432][total kept alive: 0; route allocated: 0 of 2000; total allocated: 0 of 2000] [THREAD ID=Forwarding quit on session b23d415b-e07c-44fe-bed9-234f1e0f5d3b to remote] 2018-08-21 15:37:41,395 DEBUG  o.a.h.i.c.PoolingHttpClientConnectionManager Closing connections idle longer than 0  SECONDS Aug 21, 2018 3:37:57 PM org.openqa.selenium.os.ProcessUtils killWinProcess WARNING: Process refused to die after 10 seconds, and couldn't taskkill it org.openqa.selenium.os.ProcessUtils$ProcessStillAliveException: Timeout waiting for process to die         at org.openqa.selenium.os.ProcessUtils.waitForProcessDeath(ProcessUtils.java:67)         at org.openqa.selenium.os.ProcessUtils.killWinProcess(ProcessUtils.java:129)         at org.openqa.selenium.os.ProcessUtils.killProcess(ProcessUtils.java:81)         at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.destroyHarder(UnixProcess.java:246)         at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.access$200(UnixProcess.java:200)         at org.openqa.selenium.os.UnixProcess.destroy(UnixProcess.java:126)         at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:153)         at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:221)         at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:94)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:694)         at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:533)         at com.uhc.aarp.quality.ui.example.RichsTest.sampleTest(RichsTest.java:14)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)         at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)         at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)         at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)         at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)         at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)         at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)         at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)         at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)         at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)         at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)         at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)         at org.junit.runners.ParentRunner.run(ParentRunner.java:363)         at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)         at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)         at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:498)         at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)         at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)         at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)         at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)         at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75) Caused by: java.lang.InterruptedException         at java.lang.ProcessImpl.waitFor(ProcessImpl.java:451)         at org.openqa.selenium.os.ProcessUtils$ProcessWaiter.run(ProcessUtils.java:154)         at java.lang.Thread.run(Thread.java:745)  Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 44.305 sec","closed","C-java,","richman555","2018-08-21T20:09:30Z","2021-09-05T08:08:28Z"
"","6063","Unable to click on Alert at angular webapps","## Meta - OS:   Windows 10   Selenium Version:  3.11.0, webdriver  Browser:  Firefox, chrome   ## Expected Behavior - The popup/alert may be accept/dismiss  ## Actual Behavior - unable to click on both button  ## Steps to reproduce -  I am trying to click on Alert. Kindly help me with the code. Thanks in advance. Website runs on :  angular 6.0.4  popup can be found here: ""https://www.fincash.com/solutions/savings-plus/funds/cash"" kindly help. Below is the code   driver.get(""https://www.fincash.com/solutions/savings-plus/funds/cash"");         driver.findElement(By.xpath(""//label/div"")).click();         try {             WebDriverWait wait = new WebDriverWait(driver, 2);             wait.until(ExpectedConditions.alertIsPresent());             Alert alert = driver.switchTo().alert();             driver.findElement(By.xpath(""//button/span[contains(text(),'Yes')]"")).click();             // alert.accept(); alert.dismiss() ;  // i already tried this too         } catch (Exception e) {             //exception handling             e.printStackTrace();             log.info(""excepition caught"");         }","closed","","surajkakode","2018-06-22T08:25:50Z","2019-08-15T21:09:58Z"
"","6233","Unable to create new remote session for firefox(org.openqa.selenium.SessionNotCreatedException) I am using WebDriverManager to instantiate driver","## Meta - OS:   Windows 10 Selenium Version:   3.0.0, Eclipse IDE,  Browser:  Firefox 61.0 Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:91) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:141) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:241) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:128) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:259) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:247) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:242) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:238) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:127) 	at unified.automation.framework.Utility.TestInitialization.intializeTest(TestInitialization.java:34) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:564) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142) 	at org.testng.TestRunner.beforeRun(TestRunner.java:529) 	at org.testng.TestRunner.run(TestRunner.java:497) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)  Browser Version:  61  ## Expected Behavior - I am using WebDriverManager to set up FireFox driver,  e.g: WebDriverManager.firefoxdriver().setup(); 	WebDriver driver=new FirefoxDriver();    ## Actual Behavior - Chrome is working fine but Firefox has the above issue.  Any leads would Highly appreciated.","closed","","rajesha2016","2018-08-01T12:53:20Z","2019-08-15T17:09:38Z"
"","6068","Disable content security policy Safari","## Meta - OS:   Mac OS Selenium Version:  3.9.0 Browser:  Safari  Issue: Our web application is CSP enabled, and when i try to enter text in an input field by using **sendKeys** i am getting the following error Caused by: org.openqa.selenium.WebDriverException: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: ""script-src 'self'"".  The same test passes in other browsers.  Here is the code  @FindBy(name = ""$$$$"")  @CacheLookup  private WebElement x;  x.click(); x.sendKeys();  where is an input box.  Browser Version:  10.1.2  Is there a workaround to disable the CSP for the safari browser. I have seen there are options to override it in Firefox and Chrome but not in Safari The safariOptions doesn't have addArgument","closed","R-awaiting answer,","sasanapu","2018-06-25T14:28:26Z","2021-09-05T09:12:44Z"
"","6403","WebExtension can't installed in Firefox 62.0 by Java WebDriver","## Meta - OS:   16.04.4 LTS Selenium Version:   3.14.0 Browser:   Firefox: 62.0 Java: JDK 1.8  Testcase  I download a XPI file from https://addons.mozilla.org/en-US/firefox/addon/search-encrypt/?src=hp-dl-promo.  And try to install it with Selenium Java.  It works fine in Firefox 61, but after upgrade to Firefox 62 , those can't not be installed by ""not correctly signed"" error.  For the same case, I can install the extension with Selenium nodejs API. I also can install the extension manually in firefox 62 without selenium and geckodriver.  Java code ```                  FirefoxProfile profile = null; 	        String fileName = ""C:\\candle\\xpi\\search_encrypt-2.3.4-an+fx.xpi""; 		File xpiFile1 = new File(fileName); 		 		profile = new FirefoxProfile(); 		 		FirefoxOptions options = new FirefoxOptions(); 		options.setLogLevel(FirefoxDriverLogLevel.TRACE); 		 //          profile.setPreference(""devtools.toolbox.selectedTool"", ""netmonitor""); 		profile.setPreference(""devtools.toolbox.footer.height"", 0); 		profile.setPreference(""devtools.devedition.promo.enabled"", false); 		profile.setPreference(""devtools.devedition.promo.shown"", false); //		profile.addExtension(xpiFile); 		profile.addExtension(xpiFile1); 		options.addArguments(""-devtools""); 		options.setProfile(profile); 		String hub = ""xx.xx.xx.xx""; 		URL seleniumHub = new URL(""http://"" + hub + "":4444/wd/hub""); 		RemoteWebDriver driver = new RemoteWebDriver(seleniumHub, options); 		driver.manage().window().maximize(); ```  Error log  ``` 1536730521001   addons.xpi-utils        DEBUG   Error: Synchronously loading the add-ons database (resource://gre/modules/addons/XPIDatabase.jsm:1329:15) JS Stack trace: syncLoadDB@XPIDatabase.jsm:1329:15 checkForChanges@XPIProvider.jsm:2533:9 startup@XPIProvider.jsm:2116:25 callProvider@AddonManager.jsm:206:12 _startProvider@AddonManager.jsm:654:5 startup@AddonManager.jsm:813:9 startup@AddonManager.jsm:2811:5 observe@addonManager.js:66:9 1536730521001   addons.xpi-utils        DEBUG   Starting async load of XPI database /tmp/rust_mozprofile.dyVcySvW0uEt/extensions.json 1536730521032   addons.xpi-utils        DEBUG   New add-on @searchencrypt installed in app-profile *** Blocklist::_preloadBlocklistFile: blocklist is disabled 1536730521158   addons.xpi-utils        WARN    Add-on @searchencrypt is not correctly signed. 1536730521158   addons.xpi-utils        WARN    Add-on @searchencrypt is not correctly signed. 1536730521158   addons.xpi-utils        WARN    addMetadata: Add-on @searchencrypt is invalid: Error: Extension @searchencrypt is not correctly signed (resource://gre/modules/addons/XPIDatabase.jsm:2395:17) JS Stack trace: addMetadata@XPIDatabase.jsm:2395:17 processFileChanges@XPIDatabase.jsm:2727:21 checkForChanges@XPIProvider.jsm:2535:34 startup@XPIProvider.jsm:2116:25 callProvider@AddonManager.jsm:206:12 _startProvider@AddonManager.jsm:654:5 startup@AddonManager.jsm:813:9 startup@AddonManager.jsm:2811:5 ```","closed","D-firefox,","xiaospider","2018-09-13T05:06:40Z","2019-08-15T09:09:50Z"
"","6109","Unable to find/click any elements in Safari(v11.1) on macOS","## Meta - OS:   10.13 Selenium Version:   standalone 3.13  Browser:   Safari 11.1  Browser Version:   Safari 11.1  ## Expected Behavior - module.exports = {   'Demo test Google' : function (client) {     client       .url('http://www.google.com')       .waitForElementVisible('body', 1000)       .assert.title('Google')       .assert.visible('input[type=text]')       .setValue('input[type=text]', 'rembrandt van rijn')       .waitForElementVisible('button[name=btnG]', 1000)       .click('button[name=btnG]')       .pause(1000)       .assert.containsText('ol#rso li:first-child',         'Rembrandt - Wikipedia')       .end();   } }; ## Actual Behavior -   can't find element 'body', 'input' and 'button' ## Steps to reproduce - I could see the safari browser is open, the url is right. After that, the browser can't recognize the elements and did nothing. The same script works fine in chrome/firefox.","closed","","bluemoon711","2018-07-03T18:22:42Z","2019-08-15T20:09:41Z"
"","5877","How to set acceptInsecureCerts in Selenium Node json file or in command line.","## Meta - OS:                             **Linux, Ubuntu 16.04** Selenium Version:     **3.11.0** Browser:                     **Firefox 59.x**  ## Expected Behavior - When i declare `acceptInsecureCerts=True` in node.json (configuration file for Selenium Grid Node) it should be respected. My node config: ```  {   ""capabilities"":   [     {       ""browserName"": ""chrome"",       ""maxInstances"": 15,       ""seleniumProtocol"": ""WebDriver"",       ""platform"":""MAC"",       ""chromeOptions"": {             ""args"": [                   ""--headless"",                   ""--disable-gpu"",                   ""--window-size=1024x570"",                   ""--no-sandbox""]       }},       {       ""browserName"": ""firefox"",       ""marionette"": true,       ""version"": ""59"",       ""platform"": ""LINUX"",       ""maxInstances"": 1,       ""seleniumProtocol"": ""WebDriver"",       ""acceptSslCerts"": true,       ""javascriptEnabled"": true,       ""takesScreenshot"": true,       ""cleanSession"": true,       ""acceptInsecureCerts"": true,       ""webdriver.firefox.profile"": ""default""     }   ],   ""host"": """",   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 15,   ""port"": 5511,   ""register"": true,   ""registerCycle"": 5000,   ""hub"": """",   ""nodeStatusCheckTimeout"": 5000,   ""nodePolling"": 5000,   ""role"": ""node"",   ""unregisterIfStillDownAfter"": 60000,   ""downPollingLimit"": 2,   ""debug"": false,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {} } ``` ## Actual Behavior - Default value for `acceptSslCerts` is always `False` until i declare in my test file: `desired_capabilities={'moz:firefoxOptions': {'args': ['-headless']}, 'platform': 'LINUX', 'browserName': 'firefox', 'version': '59', 'acceptInsecureCerts': True}`.  Maybe is there different solution for my problem (i don't wan't to edit multiple test files to add to `desired_capabilities` `acceptInsecureCerts`)?","closed","C-grid,","gregall","2018-05-09T22:33:12Z","2019-08-15T01:09:52Z"
"","6149","IE Driver does not appear to respect IE-specific desired capabilities","## Meta - OS:   Windows Server 2016 Datacenter (AppVeyor Visual Studio 2015 image) Selenium Version:   3.13.0 (Python) Browser:   Internet Explorer  Browser Version:   Version: 11.2248.14393.0 Update Versions: 11.0.65  ## Expected Behavior - Using desired capabilities such as `ignoreProtectedModeSettings` should allow the driver to execute without security zone error  Using the `initialBrowserUrl` should cause the browser to start at the specified URL  ## Actual Behavior -  These settings are not respected and behave as if they were not set at all.  In the case of `ignoreProtectedModeSettings` the following error is produced  ``` selenium.common.exceptions.SessionNotCreatedException: Message: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. ```  In the case of `initialBrowserUrl` (when security zones, in fact, all have the same value) the browser opens to `http://localhost:9306/` ""This is the initial start page for the WebDriver server."" page rather than the specified url.  ## Steps to reproduce -  1. Configure IE security zones with mismatched disabled/enabled settings  ```python from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  caps = DesiredCapabilities.INTERNETEXPLORER caps['ignoreProtectedModeSettings'] = True caps['initialBrowserUrl'] = 'about:blank'  driver = webdriver.Ie(capabilities=caps) ``` That should produce the `SessionNotCreatedException` error.  2. reconfigure security zones with same settings and run the above again  The initial url will not be respected.","closed","C-py,","spyoungtech","2018-07-12T06:50:24Z","2019-08-15T19:09:41Z"
"","5845","IEDriverServer should ignore extension capabilities that it doesn't use.","## Meta - OS:   Windows Any Selenium Version:   3.11 Browser:   Internet Explorer Browser Version:   Any ## Expected Behavior - If IEDriverServer receives extension capabilities (capabilities with "":"" in the name) that it does not understand, they should be ignored. ## Actual Behavior - IEDriverServer returns an error, e.g.:  ""Unable to match capability set 0: google:canReuseSession is an unknown extension capability for IE""","closed","","DrMarcII","2018-04-30T21:31:12Z","2019-08-16T04:09:40Z"
"","6174","Class cast exception in RemoteLocationContext.location()","## Meta - OS:   Windows 8.1, 10 Selenium Version:   3.2 Browser:   Chrome Browser Version:   62  ## Expected Behavior - org.openqa.selenium.remote.html5.RemoteLocation.location() should provide the physical location of the browser.  ## Actual Behavior - org.openqa.selenium.remote.html5.RemoteLocation.location() throws class cast exception - java.lang.Long cannot be cast to java.lang.Double  ## Steps to reproduce - ``` public static void main(String args[]) throws MalformedURLException { 		RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""),DesiredCapabilities.chrome()); 		LocationContext lContext = (LocationContext)new Augmenter().augment(driver); 		Double latitude,longitude; 		latitude=43.1231; 		longitude=4.234; 		lContext.setLocation(new Location(latitude, longitude, 2)); 		System.out.println(lContext.location().getLatitude());				 	} ``` Changing the class member variables in Location class from Double to Long should fix the issue, I think. I can provide a PR if that should be enough.","closed","C-java,","AJ-72","2018-07-18T04:00:35Z","2019-08-15T13:09:40Z"
"","6653","Unable to scroll down in Firefox.","## Meta - OS:   Windows 8.1  Selenium Version:   Selenium version 3.14.0 Browser:   Firefox  -->  Browser Version:   63.0  ## Expected Behavior - In web page webelement is present at end of the web page or middle of web page. It should automatically scroll down and perform action in webelement.   ## Actual Behavior - But we getting Error message as ""could not be scrolled into view"" and Exception as ""org.openqa.selenium.ElementNotInteractableException"".  ## Steps to reproduce -  1. Launch firefox using selenium 3.14.0 (download the latest version of firefox) 2.  Go to URL (""http://automationpractice.com/index.php"") 3. Click the T- Shirt scroll down product will display. 4. Need to Click the webelement.  [Firefox ErrorMessage.txt](https://github.com/SeleniumHQ/selenium/files/2579619/Firefox.ErrorMessage.txt)  Please find the java code:-  driver.get(""http://automationpractice.com/index.php""); 	     driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS); 		  System.out.println(""Page title is: "" + driver.getTitle()); 	     Assert.assertEquals(""My Store"", driver.getTitle()); 	      waitForPageLoad(); 	      driver.findElement(By.xpath(""(//a[text()='T-shirts'])[2]"")).click(); 	         String ProductName=driver.findElement(By.xpath(""//a[@class='product_img_link']"")).getAttribute(""title""); 	     String ProductPrice=driver.findElement(By.xpath(""//span[@class='price product-price']"")).getText().trim().toString(); 	  	 driver.findElement(By.xpath(""//a[@class='product_img_link']"")).click();  Thanks & Regards, Shibi KP","closed","","ShibiKP","2018-11-14T07:37:57Z","2019-08-15T05:09:50Z"
"","6460","Selenium 3.14.1 + geckodriver 0.22.1 + Firefox 61(64-bit) Do not connect through proxy","## Meta - OS:   Windows 8 Selenium Version:   3.14.1 Browser:   Firefox  I have got a problem, that I really cant get through!  My comp is behind proxy! I can't connect to Internet directly, so I get through the Proxifier and 10.25.16.43 proxy server in my local net. Python is Ok with that situation and all of my parsing scripts work well! Recently I installed Selenium 3.14.1 module and geckodriver 0.22.1 tried them with Firefox 61(64-bit) - did not connect. I checked: ""geckodriver.exe"" and ""Firefox.exe"" are in the PATH...  Script is like that:  from selenium import webdriver  browser = webdriver.Firefox() browser.get('http://seleniumhq.org/')  Python returns Error: Can not connect to the Service geckodriver.  Proxifier shows the follows:  [09.28 13:23:51] python.exe *64 - localhost:61171 (IPv6) error : Could not connect through proxy 10.25.16.43:8080 - Proxy server cannot establish a connection with the target, status code 502 [09.28 13:23:54] python.exe *64 - localhost:61171 error : Could not connect through proxy 10.25.16.43:8080 - Proxy server cannot establish a connection with the target, status code 502  Log of geckodriver is like that:  1538101395324	geckodriver	INFO	geckodriver 0.21.0 1538101395340	geckodriver	INFO	Listening on 127.0.0.1:61171 If geckodriver's version is 0.21.0  And Log is empty if geckodriver's version is 0.22.0  hosts - coments removed from localhost:  127.0.0.1 localhost  Could anybody advice me, what I did wrong!?","closed","","Ganelony","2018-09-28T04:51:23Z","2019-08-15T09:09:38Z"
"","6134","Unable to build Selenium server standalone jar","## Meta - OS:   Windows 8 Selenium Version:     Hi,  Could I get assistance why I am unable to build the selenium jar? Thanks in advance.  D:\MacNode\selenium-selenium-3.7.1>go selenium-server-standalone --trace Picked up JAVA_TOOL_OPTIONS: -agentlib:jvmhook Picked up _JAVA_OPTIONS: -Xrunjvmhook -Xbootclasspath/a:""C:\Program Files (x86)\HPE\LeanFT\bin\java_shared\classes"";""C:\Program Files (x86)\HPE\LeanFT\bin\java_shared\classes\jasmine.jar"" (in D:/MacNode/selenium-selenium-3.7.1) Parsing cpp/build.desc Parsing cpp/iedriverserver/build.desc Parsing dotnet/docs/build.desc Parsing dotnet/test/chrome/build.desc Parsing dotnet/test/common/build.desc Parsing dotnet/test/edge/build.desc Parsing dotnet/test/firefox/build.desc Parsing dotnet/test/ie/build.desc Parsing dotnet/test/phantomjs/build.desc Parsing dotnet/test/remote/build.desc Parsing dotnet/test/safari/build.desc Parsing dotnet/test/support/build.desc Parsing dotnet/test/webdriverbackedselenium/build.desc Parsing ide/build.desc Parsing ide/main/build.desc Parsing ide/plugins/csharp-format/build.desc Parsing ide/plugins/groovy-format/build.desc Parsing ide/plugins/java-format/build.desc Parsing ide/plugins/perl-format/build.desc Parsing ide/plugins/php-format/build.desc Parsing ide/plugins/python-format/build.desc Parsing ide/plugins/ruby-format/build.desc Parsing javascript/build.desc Parsing javascript/android-atoms/build.desc Parsing javascript/atoms/build.desc Parsing javascript/atoms/fragments/build.desc Parsing javascript/chrome-driver/build.desc Parsing javascript/firefox-driver/build.desc Parsing javascript/ie-driver/build.desc Parsing javascript/jsunit/build.desc Parsing javascript/node/build.desc Parsing javascript/remote/build.desc Parsing javascript/safari-driver/build.desc Parsing javascript/selenium-atoms/build.desc Parsing javascript/selenium-core/build.desc Parsing javascript/watir-atoms/build.desc Parsing javascript/webdriver/build.desc Parsing javascript/webdriver/atoms/build.desc Parsing javascript/webdriver/atoms/fragments/build.desc Parsing javascript/webdriver/atoms/fragments/inject/build.desc Parsing javascript/webdriver/atoms/inject/build.desc Parsing py/build.desc Parsing rb/build.desc Parsing third_party/closure/build.desc Parsing third_party/firebug/build.desc Parsing third_party/js/sizzle/build.desc Parsing third_party/js/wgxpath/build.desc ** Invoke selenium-server-standalone (first_time) ** Invoke //java/server/src/org/openqa/grid/selenium:selenium (first_time) ** Execute //java/server/src/org/openqa/grid/selenium:selenium D:/MacNode/selenium-selenium-3.7.1/rake-tasks/buck.rb:37 warning: multiple Java methods for arguments (Java::OrgApacheHttpClientMethods::HttpGet), using first:   public org.apache.http.client.methods.CloseableHttpResponse org.apache.http.impl.client.CloseableHttpClient.execute(org.apache.http.client.methods.HttpUriRequest) throws java.io.IOException,org.apac he.http.client.ClientProtocolException   public org.apache.http.HttpResponse org.apache.http.impl.client.CloseableHttpClient.execute(org.apache.http.client.methods.HttpUriRequest) throws java.io.IOException,org.apache.http.client.ClientPro tocolException go aborted! java.net.UnknownHostException: github.com java.net.Inet6AddressImpl:-2:in `lookupAllHostAddr' java.net.InetAddress$2:-1:in `lookupAllHostAddr' java.net.InetAddress:-1:in `getAddressesFromNameService' java.net.InetAddress:-1:in `getAllByName0' java.net.InetAddress:-1:in `getAllByName' java.net.InetAddress:-1:in `getAllByName' org/apache/http/impl/conn/SystemDefaultDnsResolver.java:45:in `resolve' org/apache/http/impl/conn/DefaultHttpClientConnectionOperator.java:112:in `connect' org/apache/http/impl/conn/PoolingHttpClientConnectionManager.java:359:in `connect' org/apache/http/impl/execchain/MainClientExec.java:381:in `establishRoute' org/apache/http/impl/execchain/MainClientExec.java:237:in `execute' org/apache/http/impl/execchain/ProtocolExec.java:185:in `execute' org/apache/http/impl/execchain/RetryExec.java:89:in `execute' org/apache/http/impl/execchain/RedirectExec.java:111:in `execute' org/apache/http/impl/client/InternalHttpClient.java:185:in `doExecute' org/apache/http/impl/client/CloseableHttpClient.java:83:in `execute' org/apache/http/impl/client/CloseableHttpClient.java:108:in `execute' sun.reflect.NativeMethodAccessorImpl:-2:in `invoke0' sun.reflect.NativeMethodAccessorImpl:-1:in `invoke' sun.reflect.DelegatingMethodAccessorImpl:-1:in `invoke' java.lang.reflect.Method:-1:in `invoke' org/jruby/javasupport/JavaMethod.java:525:in `invokeDirectWithExceptionHandling' org/jruby/javasupport/JavaMethod.java:380:in `invokeDirect' org/jruby/java/invokers/InstanceMethodInvoker.java:58:in `call' org/jruby/runtime/callsite/CachingCallSite.java:282:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:139:in `call' org/jruby/ast/CallOneArgNode.java:57:in `interpret' org/jruby/ast/LocalAsgnNode.java:123:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/ast/ClassVarAsgnNode.java:92:in `interpret' org/jruby/ast/OpAsgnOrNode.java:99:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:141:in `call' org/jruby/runtime/callsite/CachingCallSite.java:262:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:105:in `call' org/jruby/ast/CallNoArgNode.java:61:in `interpret' org/jruby/ast/DAsgnNode.java:110:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:317:in `yield' org/jruby/runtime/BlockBody.java:70:in `call' org/jruby/runtime/Block.java:89:in `call' org/jruby/RubyProc.java:275:in `call' org/jruby/RubyProc.java:235:in `call' org/jruby/org/jruby/RubyProc$i_method_0_0$RUBYINVOKER$call.gen:65535:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:216:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:212:in `call' org/jruby/runtime/callsite/CachingCallSite.java:302:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:173:in `call' org/jruby/ast/CallTwoArgNode.java:59:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:317:in `yield' org/jruby/runtime/BlockBody.java:70:in `call' org/jruby/runtime/Block.java:89:in `call' org/jruby/RubyProc.java:275:in `call' org/jruby/RubyProc.java:235:in `call' org/jruby/org/jruby/RubyProc$i_method_0_0$RUBYINVOKER$call.gen:65535:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:216:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:212:in `call' org/jruby/runtime/callsite/CachingCallSite.java:302:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:173:in `call' org/jruby/ast/CallTwoArgNode.java:59:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/CaseNode.java:138:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:336:in `yield' org/jruby/runtime/InterpretedBlock.java:293:in `yield' org/jruby/runtime/Block.java:130:in `yield' org/jruby/RubyArray.java:1661:in `eachCommon' org/jruby/RubyArray.java:1671:in `each' org/jruby/org/jruby/RubyArray$i_method_0_0$RUBYINVOKER$each.gen:65535:in `call' org/jruby/runtime/callsite/CachingCallSite.java:272:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:114:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/CallNoArgBlockNode.java:64:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:184:in `call' org/jruby/runtime/callsite/CachingCallSite.java:282:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:139:in `call' org/jruby/ast/FCallOneArgNode.java:36:in `interpret' org/jruby/ast/IfNode.java:117:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:284:in `yield' org/jruby/runtime/InterpretedBlock.java:218:in `yieldSpecific' org/jruby/runtime/Block.java:99:in `yieldSpecific' org/jruby/ast/ZYieldNode.java:25:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/EnsureNode.java:96:in `interpret' org/jruby/ast/BeginNode.java:83:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:163:in `call' org/jruby/internal/runtime/methods/AliasMethod.java:81:in `call' org/jruby/runtime/callsite/CachingCallSite.java:112:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/CallNoArgBlockNode.java:64:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:227:in `call' org/jruby/runtime/callsite/CachingCallSite.java:302:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:173:in `call' org/jruby/ast/CallTwoArgNode.java:59:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:336:in `yield' org/jruby/runtime/InterpretedBlock.java:293:in `yield' org/jruby/runtime/Block.java:130:in `yield' org/jruby/RubyArray.java:1661:in `eachCommon' org/jruby/RubyArray.java:1671:in `each' org/jruby/org/jruby/RubyArray$i_method_0_0$RUBYINVOKER$each.gen:65535:in `call' org/jruby/runtime/callsite/CachingCallSite.java:272:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:114:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/CallNoArgBlockNode.java:64:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:227:in `call' org/jruby/runtime/callsite/CachingCallSite.java:302:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:173:in `call' org/jruby/ast/FCallTwoArgNode.java:38:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:284:in `yield' org/jruby/runtime/InterpretedBlock.java:218:in `yieldSpecific' org/jruby/runtime/Block.java:99:in `yieldSpecific' org/jruby/ast/ZYieldNode.java:25:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/EnsureNode.java:96:in `interpret' org/jruby/ast/BeginNode.java:83:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:163:in `call' org/jruby/internal/runtime/methods/AliasMethod.java:81:in `call' org/jruby/runtime/callsite/CachingCallSite.java:272:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:114:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/CallNoArgBlockNode.java:64:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:227:in `call' org/jruby/runtime/callsite/CachingCallSite.java:302:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:173:in `call' org/jruby/ast/FCallTwoArgNode.java:38:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:141:in `call' org/jruby/runtime/callsite/CachingCallSite.java:262:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:105:in `call' org/jruby/ast/CallSpecialArgNode.java:65:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:184:in `call' org/jruby/runtime/callsite/CachingCallSite.java:282:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:139:in `call' org/jruby/ast/FCallOneArgNode.java:36:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:336:in `yield' org/jruby/runtime/InterpretedBlock.java:293:in `yield' org/jruby/runtime/Block.java:130:in `yield' org/jruby/RubyArray.java:1661:in `eachCommon' org/jruby/RubyArray.java:1671:in `each' org/jruby/org/jruby/RubyArray$i_method_0_0$RUBYINVOKER$each.gen:65535:in `call' org/jruby/runtime/callsite/CachingCallSite.java:272:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:114:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/CallNoArgBlockNode.java:64:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/IfNode.java:119:in `interpret' org/jruby/ast/IfNode.java:119:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:284:in `yield' org/jruby/runtime/InterpretedBlock.java:218:in `yieldSpecific' org/jruby/runtime/Block.java:99:in `yieldSpecific' org/jruby/ast/ZYieldNode.java:25:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/RescueNode.java:216:in `executeBody' org/jruby/ast/RescueNode.java:120:in `interpretWithJavaExceptions' org/jruby/ast/RescueNode.java:110:in `interpret' org/jruby/ast/BeginNode.java:83:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:163:in `call' org/jruby/runtime/callsite/CachingCallSite.java:272:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:114:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/FCallNoArgBlockNode.java:32:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:141:in `call' org/jruby/runtime/callsite/CachingCallSite.java:262:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:105:in `call' org/jruby/ast/VCallNode.java:85:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:284:in `yield' org/jruby/runtime/InterpretedBlock.java:218:in `yieldSpecific' org/jruby/runtime/Block.java:99:in `yieldSpecific' org/jruby/ast/ZYieldNode.java:25:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/RescueNode.java:216:in `executeBody' org/jruby/ast/RescueNode.java:120:in `interpretWithJavaExceptions' org/jruby/ast/RescueNode.java:110:in `interpret' org/jruby/ast/BeginNode.java:83:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:163:in `call' org/jruby/runtime/callsite/CachingCallSite.java:272:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:114:in `callBlock' org/jruby/runtime/callsite/CachingCallSite.java:123:in `callIter' org/jruby/ast/FCallNoArgBlockNode.java:32:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/evaluator/ASTInterpreter.java:70:in `INTERPRET_METHOD' org/jruby/internal/runtime/methods/InterpretedMethod.java:141:in `call' org/jruby/runtime/callsite/CachingCallSite.java:262:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:105:in `call' org/jruby/ast/CallNoArgNode.java:61:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/ast/RootNode.java:129:in `interpret' org/jruby/evaluator/ASTInterpreter.java:115:in `INTERPRET_ROOT' org/jruby/Ruby.java:726:in `runInterpreter' org/jruby/Ruby.java:2582:in `loadFile' org/jruby/runtime/load/ExternalScript.java:66:in `load' org/jruby/runtime/load/LoadService.java:255:in `load' org/jruby/RubyKernel.java:1084:in `loadCommon' org/jruby/RubyKernel.java:1066:in `load' org/jruby/org/jruby/RubyKernel$s_method_0_1$RUBYINVOKER$load.gen:65535:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:208:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:204:in `call' org/jruby/runtime/callsite/CachingCallSite.java:282:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:139:in `call' org/jruby/ast/FCallOneArgNode.java:36:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/ast/RootNode.java:129:in `interpret' org/jruby/evaluator/ASTInterpreter.java:115:in `INTERPRET_ROOT' org/jruby/Ruby.java:726:in `runInterpreter' org/jruby/Ruby.java:2582:in `loadFile' org/jruby/runtime/load/ExternalScript.java:66:in `load' org/jruby/runtime/load/LoadService.java:255:in `load' org/jruby/RubyKernel.java:1084:in `loadCommon' org/jruby/RubyKernel.java:1066:in `load' org/jruby/org/jruby/RubyKernel$s_method_0_1$RUBYINVOKER$load.gen:65535:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:208:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:204:in `call' org/jruby/runtime/callsite/CachingCallSite.java:282:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:139:in `call' org/jruby/ast/FCallOneArgNode.java:36:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/BlockNode.java:71:in `interpret' org/jruby/evaluator/ASTInterpreter.java:107:in `INTERPRET_BLOCK' org/jruby/runtime/InterpretedBlock.java:363:in `evalBlockBody' org/jruby/runtime/InterpretedBlock.java:317:in `yield' org/jruby/runtime/BlockBody.java:70:in `call' org/jruby/runtime/Block.java:89:in `call' org/jruby/RubyProc.java:275:in `call' org/jruby/internal/runtime/methods/ProcMethod.java:62:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:200:in `call' org/jruby/internal/runtime/methods/DynamicMethod.java:196:in `call' org/jruby/runtime/callsite/CachingCallSite.java:262:in `cacheAndCall' org/jruby/runtime/callsite/CachingCallSite.java:105:in `call' org/jruby/ast/CallNoArgNode.java:61:in `interpret' org/jruby/ast/NewlineNode.java:103:in `interpret' org/jruby/ast/RootNode.java:129:in `interpret' org/jruby/evaluator/ASTInterpreter.java:115:in `INTERPRET_ROOT' org/jruby/Ruby.java:726:in `runInterpreter' org/jruby/Ruby.java:734:in `runInterpreter' org/jruby/Ruby.java:586:in `runNormally' org/jruby/Ruby.java:419:in `runFromMain' org/jruby/Main.java:304:in `run' org/jruby/Main.java:144:in `run' org/jruby/Main.java:113:in `main' D:/MacNode/selenium-selenium-3.7.1/rake-tasks/buck.rb:37:in `download' D:/MacNode/selenium-selenium-3.7.1/rake-tasks/buck.rb:53:in `buck_cmd' org/jruby/RubyProc.java:275:in `call' org/jruby/RubyProc.java:235:in `call' D:/MacNode/selenium-selenium-3.7.1/rake-tasks/buck.rb:269:in `(root)' org/jruby/RubyProc.java:275:in `call' org/jruby/RubyProc.java:235:in `call' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:636:in `execute' org/jruby/RubyArray.java:1671:in `each' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:631:in `execute' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:597:in `invoke_with_call_chain' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/1.8/monitor.rb:191:in `mon_synchronize' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:590:in `invoke_with_call_chain' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:607:in `invoke_prerequisites' org/jruby/RubyArray.java:1671:in `each' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:604:in `invoke_prerequisites' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:596:in `invoke_with_call_chain' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/1.8/monitor.rb:191:in `mon_synchronize' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:590:in `invoke_with_call_chain' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:583:in `invoke' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2051:in `invoke_task' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2029:in `top_level' org/jruby/RubyArray.java:1671:in `each' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2029:in `top_level' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2068:in `standard_exception_handling' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2023:in `top_level' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2001:in `run' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:2068:in `standard_exception_handling' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/lib/rake.rb:1998:in `run' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/bin/rake:31:in `(root)' org/jruby/RubyKernel.java:1066:in `load' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/lib/ruby/gems/1.8/gems/rake-0.8.7/bin/rake:19:in `(root)' org/jruby/RubyKernel.java:1066:in `load' file:/D:/MacNode/selenium-selenium-3.7.1/third_party/jruby/jruby-complete.jar!/META-INF/jruby.home/bin/rake:12:in `rake' org/jruby/RubyProc.java:275:in `call' rake:1:in `(root)' Exception `SystemExit' at org/jruby/RubyKernel.java:869 - exit","closed","","WilliamCKTang","2018-07-10T06:07:11Z","2019-08-15T19:09:52Z"
"","6366","the current page is responded with a status of 504 (Gateway Time-out) ，then calling WebDriver.get(url ) doesn't work.","## Meta - OS:   Windows 7，Windows 10, Windows server 2008 R2 Selenium Version:   3.14  Browser:   Chrome 68 chromedriver2.39  Browser Version:  68.0.3440.106 (32-bit)   ## Steps to reproduce - Call WebDriver.get(url ) to open webpage several times in a row (every interval of about 3 minutes). Because our application environment is not very stable, sometimes first  the server responded with a status of 504 (Gateway Time-out) ，and the page shows 'An error occurred....' . But every time next,  the page always shows  'An error occurred....' . At this time, manually refresh the current page, the page display is normal.  I have tried it dozens of times.   ![Uploading image.png…]()","closed","","yimymo","2018-09-05T08:28:59Z","2019-08-15T12:09:38Z"
"","6634","Selenium Version 3.6 causes Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.","## Meta - OS:   Windows 7 Professional Selenium Version:   3.6 Browser:   Internet Explorer  Browser Version:   11.0.9600.19002 (32-bit) -->  ## Expected Behavior - Tests will run successfully  ## Actual Behavior - Tests fail to run with the error below and all protected mode settins are the same across different zones. The problem is not present when I run the tests with version 3.5. What i see in the error is Driver info: driver.version: unknown maybe there we have some problem?  Caused by: org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones. Build info: version: '3.6.0', revision: '6fbf3ec767', time: '2017-09-27T16:15:40.131Z' System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45' Driver info: driver.version: unknown remote stacktrace:  Build info: version: '3.3.1', revision: '5234b32', time: '2017-03-10 09:04:52 -0800' System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45' Driver info: driver.version: unknown 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$new$0(W3CHandshakeResponse.java:57) 	at org.openqa.selenium.remote.W3CHandshakeResponse$$Lambda$106/1129313041.apply(Unknown Source) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$getResponseFunction$2(W3CHandshakeResponse.java:104) 	at org.openqa.selenium.remote.W3CHandshakeResponse$$Lambda$108/774200139.apply(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$24(ProtocolHandshake.java:359) 	at org.openqa.selenium.remote.ProtocolHandshake$$Lambda$109/1110098350.apply(Unknown Source) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:362) 	at org.openqa.selenium.remote.server.ServicedSession$Factory.apply(ServicedSession.java:185) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.lambda$createSession$16(ActiveSessionFactory.java:171) 	at org.openqa.selenium.remote.server.ActiveSessionFactory$$Lambda$86/2020031778.apply(Unknown Source) 	at java.util.Optional.map(Unknown Source) 	at org.openqa.selenium.remote.server.ActiveSessionFactory.createSession(ActiveSessionFactory.java:171) 	at org.openqa.selenium.remote.server.commandhandler.BeginSession.execute(BeginSession.java:72) 	at org.openqa.selenium.remote.server.WebDriverServlet.lambda$handle$0(WebDriverServlet.java:232) 	at org.openqa.selenium.remote.server.WebDriverServlet$$Lambda$59/1201588213.run(Unknown Source) 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source)","closed","D-IE,","hnestorova","2018-11-08T17:08:05Z","2019-08-14T15:09:56Z"
"","6247","INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS not ignoring protected settings. (Java)","## Meta - OS:   Windows 7 Enterprise Selenium Version:    Browser:   IE  Lang: Java 1.8   Browser Version:   11.0.9600 (32 bit)  ## Expected Behavior -          DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer();         capabilities.setCapability(INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);         ...         System.setProperty(""webdriver.ie.driver"", ""./libs/IEDriverServer.exe"");         InternetExplorerOptions options = new InternetExplorerOptions(capabilities);         return new InternetExplorerDriver(options);  Should allow me to open IE  ## Actual Behavior -      org.openqa.selenium.SessionNotCreatedException: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.     Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:33:08.638Z'     System info: host: 'XXX', ip: 'XXXXX', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_161'     Driver info: driver.version: InternetExplorerDriver     remote stacktrace:   Steps to reproduce:  This is a little tougher because I think it is based on my config of protected settings which is regulated by dev-ops so I have very little freedom. I would be more than happy to try to create an agnostic example if someone can lead me down that path.","closed","D-IE,","jrgleason","2018-08-03T15:20:00Z","2019-08-15T10:09:54Z"
"","6303","IEDriverServer getting crashed after 30 mins","## Meta - OS:   Windows 7 64 Bit Selenium Version:   3.14.0 Browser:   Internet Explorer 9  IEDriverServer consistently getting crashed anytime after 30 mins. If we execute below 30 mins, everything goes well. Whenever the IE get crashed, we get dialog ""Command line server for the IE driver has stopped working"". I have attached the log below. Please advice.   Using FindElements atom to locate element having css = #menuTable div[id*='ctl00_mnuMainn3Items'] a[class*='ctl00_mnuMain_1'] T 2018-08-17 00:31:05:140 c:\projects\webdriver\cpp\iedriver\browser.cpp(138) Entering Browser::GetDocument I 2018-08-17 00:31:05:140 c:\projects\webdriver\cpp\iedriver\browser.cpp(142) No child frame focus. Focus is on top-level frame T 2018-08-17 00:31:05:154 c:\projects\webdriver\cpp\iedriver\browser.cpp(627) Entering Browser::GetDocumentFromWindow T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(60) Entering Script::Initialize T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(81) Entering Script::AddArgument(std::wstring) T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(116) Entering Script::AddArgument(VARIANT) T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(81) Entering Script::AddArgument(std::wstring) T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(116) Entering Script::AddArgument(VARIANT) T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(180) Entering Script::Execute T 2018-08-17 00:31:05:159 c:\projects\webdriver\cpp\iedriver\script.cpp(561) Entering Script::CreateAnonymousFunction W 2018-08-17 00:31:05:168 c:\projects\webdriver\cpp\iedriver\script.cpp(578) -2147024882 [Not enough storage is available to complete this operation.]: Unable to execute code, call to IHTMLWindow2::execScript failed W 2018-08-17 00:31:05:169 c:\projects\webdriver\cpp\iedriver\script.cpp(191) Cannot create anonymous function W 2018-08-17 00:31:05:169 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(164) A JavaScript error was encountered executing the findElements atom. T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(1047) Entering IECommandExecutor::LocateElements T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(1008) Entering IECommandExecutor::GetElementFindMethod T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(111) Entering ElementFinder::FindElements T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(310) Entering ElementFinder::HasNativeCssSelectorEngine T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser T 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\browser.cpp(138) Entering Browser::GetDocument I 2018-08-17 00:31:05:420 c:\projects\webdriver\cpp\iedriver\browser.cpp(142) No child frame focus. Focus is on top-level frame T 2018-08-17 00:31:05:426 c:\projects\webdriver\cpp\iedriver\browser.cpp(627) Entering Browser::GetDocumentFromWindow T 2018-08-17 00:31:05:429 c:\projects\webdriver\cpp\iedriver\script.cpp(60) Entering Script::Initialize T 2018-08-17 00:31:05:429 c:\projects\webdriver\cpp\iedriver\script.cpp(180) Entering Script::Execute T 2018-08-17 00:31:05:429 c:\projects\webdriver\cpp\iedriver\script.cpp(561) Entering Script::CreateAnonymousFunction W 2018-08-17 00:31:05:448 c:\projects\webdriver\cpp\iedriver\script.cpp(578) -2147352319 [Unknown error 0x80020101]: Unable to execute code, call to IHTMLWindow2::execScript failed W 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\script.cpp(191) Cannot create anonymous function D 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(118) Element location strategy is CSS selectors, but document does not support CSS selectors. Falling back to using the Sizzle JavaScript CSS selector engine. T 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(226) Entering ElementFinder::FindElementsUsingSizzle T 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(890) Entering IECommandExecutor::GetCurrentBrowser T 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(896) Entering IECommandExecutor::GetManagedBrowser T 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\browser.cpp(138) Entering Browser::GetDocument I 2018-08-17 00:31:05:449 c:\projects\webdriver\cpp\iedriver\browser.cpp(142) No child frame focus. Focus is on top-level frame T 2018-08-17 00:31:05:456 c:\projects\webdriver\cpp\iedriver\browser.cpp(627) Entering Browser::GetDocumentFromWindow T 2018-08-17 00:31:05:460 c:\projects\webdriver\cpp\iedriver\script.cpp(60) Entering Script::Initialize T 2018-08-17 00:31:05:460 c:\projects\webdriver\cpp\iedriver\script.cpp(81) Entering Script::AddArgument(std::wstring) T 2018-08-17 00:31:05:460 c:\projects\webdriver\cpp\iedriver\script.cpp(116) Entering Script::AddArgument(VARIANT) T 2018-08-17 00:31:05:460 c:\projects\webdriver\cpp\iedriver\script.cpp(180) Entering Script::Execute T 2018-08-17 00:31:05:460 c:\projects\webdriver\cpp\iedriver\script.cpp(561) Entering Script::CreateAnonymousFunction W 2018-08-17 00:31:34:291 c:\projects\webdriver\cpp\iedriver\script.cpp(578) -2147352567 [Exception occurred.]: Unable to execute code, call to IHTMLWindow2::execScript failed W 2018-08-17 00:31:34:295 c:\projects\webdriver\cpp\iedriver\script.cpp(191) Cannot create anonymous function W 2018-08-17 00:31:34:295 c:\projects\webdriver\cpp\iedriver\elementfinder.cpp(303) Execution returned error  Browser Version:   9.0.8112.16421  ## Expected Behavior - The script should not break due to IEDriverServer crash for long run executions.  ## Actual Behavior - The script break due to IEDriverServer crash for long run executions.","closed","D-IE,","Venky2005","2018-08-17T13:49:04Z","2019-08-16T16:12:49Z"
"","5981","Selenium randomly hangs on getPageSource()","## Meta - OS:   Windows 7 32 bit  Selenium Version:   3.12.0 or previous versions 3.8.1  Browser:   Chrome  I do not know if this issue is selenium or chromedriver releated, because I have tried different versions of chromedriver and selenium and also different chrome versions and it did not help.  Browser Version:   63.0.3239.108 (32-bit)  ## Expected Behavior -  getPageSource() should return page source  ## Actual Behavior -  test randomly (like once-twice per 24 hours) hangs on getPageSource() without any Exception thrown  ## Steps to reproduce - ``` event.log(""Getting page source""); String source=broswer.getPageSource(); ///Hangs here, does not go to next step... event.log(""Getting page source, time = ""+stopwatch.time()); event.log(""Creating JSOUP doc""); Document doc=Jsoup.parse(source,broswer.getCurrentUrl()); event.log(""Creating JSOUP doc, time = ""+stopwatch.time()); ```   **## Is there way I can make getPageSource() at least timeout?**   I can not provide website due to my employer. Sorry.","closed","D-chrome,","obykoo","2018-06-03T13:39:59Z","2019-08-15T21:09:44Z"
"","6402","i want someone help please","## Meta - OS:   Windows 7 Selenium Version:   V2.14 Browser:   Chrome    Browser Version:   Version-69(64bit)  ## Expected Behavior - open Browser success  ## Actual Behavior - open Browser faile   ## Steps to reproduce -  code: options.setPageLoadStrategy(PageLoadStrategy.EAGER); DesiredCapabilities chromecapability = DesiredCapabilities.chrome(); chromecapability.setCapability(ChromeOptions.CAPABILITY, options); driver=new ChromeDriver(chromecapability);   Error-msg:  Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: cannot parse capability: pageLoadStrategy from unknown error: page load strategy unsupported","closed","","HarryMai","2018-09-13T02:39:50Z","2019-08-15T11:10:02Z"
"","6379","Double click is not working with FireFox61","## Meta - OS:   Windows 7 Selenium Version:   Selenium 3.14 Browser:   FireFox  Browser Version:   61.0.2 (32-bit)  ## Expected Behavior -  I tried to double click the below elements using the below code, it is not working, only single click is happening.   Actions routeTreeLnk = new Actions(driver); routeTreeLnk.moveToElement(IEdriver.findElement(By.xpath(""//*[@id=\""10003_node\""]""))).doubleClick().perform();  Later I tried the same using the JS  WebElement element = driver.findElement(By.xpath(""//*[@id=\""10003_node\""]"")); ((JavascriptExecutor) driver).executeScript(""var evt = document.createEvent('MouseEvents');""+  					    ""evt.initMouseEvent('dblclick',true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0,null);""+  					    ""arguments[0].dispatchEvent(evt);"", element);   Here also not working, only single click is happened.  Am using 64 bit OS. Initially I tried with 64 FF and 64 bit geckoDriver (geckodriver-v0.21.0). Then I tried 32 bit FF and 32 bit geckoDriver.  In both I received same result.  Can any one help on this ? I didn't find proper solution from Internet  ## Actual Behavior -  Double click is not working with 32/64 bin FF and Drivergeckodriver-v0.21.0  ## Steps to reproduce -","closed","","dileepvarier","2018-09-07T06:11:31Z","2019-08-15T11:09:49Z"
"","6188","The config.json parameters are not used correctly in selenium grid","## Meta - OS:   Windows 7 Selenium Version:   Java 3.13 Browser:   Firefox Browser Version:   ESR 60.0.1  ## Expected Behavior - I have a selenium grid with one hub and one node. The hub and the node are on different windows 7 machines. I use for both hub and node a config.json file. The hub is started with: ``` java -jar selenium-server-standalone-3.13.0.jar -role hub -hubConfig confighub.json ```  and the node with ``` java -Dwebdriver.gecko.driver=""C:/LPROG/Ldev/selenium_grid/geckodriver-v0.21.0-win32.exe"" -jar selenium-server-standalone-3.13.0.jar -role node -nodeConfig confignode.json ```  The json files are attached but renamed in txt files.  Both json files include the debug parameter with the value true. But the grid says for the hub the final configuration is debug false, see screenshots and logs. For the node is debug false too.  The json files include servlets for the hub and the node. The node uses the parameters correct but not the hub, see screenshots and logs.  The debug value should be true and the servlets should be used.  ![hub_3 13](https://user-images.githubusercontent.com/33020490/43006971-5661a9f0-8c37-11e8-8caa-cd715c735ca0.jpg)  [Uploading lognode_3.13.txt…]() ![node_3 13](https://user-images.githubusercontent.com/33020490/43007068-93cc3c92-8c37-11e8-9c26-737bc454f2ac.jpg) ![Uploading node_3.13.jpg…]() [confighub.txt](https://github.com/SeleniumHQ/selenium/files/2214219/confighub.txt) [confignode.txt](https://github.com/SeleniumHQ/selenium/files/2214220/confignode.txt)","closed","C-grid,","Kalste","2018-07-20T14:13:09Z","2020-05-20T22:49:18Z"
"","6333","Selenium Actions Class cannot be resolved in selenium version greater then 3.1","## Meta - OS:   Windows 7 Selenium Version:   3.2 +  Browser:   Chrome  Browser Version:   67  ## Expected Behavior - Java code would recognize Actions Class as in Selenium 3.1 and earlier  ## Actual Behavior - Although I can see there is the Actions class in the jar (selenium-server-standalone-.jar ) I cant import it.  > The import org.openqa.selenium.interactions.Actions cannot be resolved.  ## Steps to reproduce - 1. Download selenium standalone Jar for example selenium-server-standalone-3.14.0.jar 2. Add it to your project. 3. Try to use Actions class.  ## Additional Info I try to decompile the class with DJ Java decompiler, and it gave me the error:   > Action violation at address   When I tried to decompile other classes all went good.  The decompilation error starts since version 3.2. (I tried to download 3.2, 3.5, 3.9, 3.14 and all those versions had this problem). On the other hand decompiling of this class in versions 2.5.2, 2.5.3, 3.0, 3.1 work perfectly fine.","closed","C-java,","Dronworks","2018-08-27T11:10:39Z","2019-08-15T13:09:49Z"
"","6474","chromedriver.exe is not killable in widows after calling driver.quit()","## Meta - OS:   Windows 7 Selenium Version:   2.37 Browser:   Chrome version 69  Browser Version:   69  ## Expected Behavior - driver.quit() should kill the chromedriver.exe   ## Actual Behavior - driver.quit() is not killing the chromedriver.exe but it closes the browser.  ## Steps to reproduce -  I am calling driver.quit() in all my script under finally block.  But still, after some periodic run I am able to see many chromedriver.exe is piled up on my task manager. Sometimes I am getting the exception when I call driver.quit() not always. The error is   > Error communicating with the remote browser. It may have died.  Whenever I get the above exception then, I am not able to end the process using task manager. I am not able to kill using taskkill command also.  If I kill using taskkill command(taskkill /F /IM chromedriver.exe) it says ERROR: The process ""chromedriver.exe"" with PID 4052 could not be terminated. Reason: There is no running instance of the task.  If I use taskkill /F /PID 4052 ERROR: The process with PID 4052 could not be terminated. Reason: There is no running instance of the task.  Still many chromedriver was listed under task manager  ![taskkill not working](https://user-images.githubusercontent.com/12427607/46393778-4b2f7c80-c704-11e8-8017-b1f80c000e18.png)","closed","R-awaiting answer,","sureshkumar-skc","2018-10-03T06:33:17Z","2019-08-15T09:09:39Z"
"","6440","Unable to click on an element which is inside of iFrame(even after switching in frame)","## Meta - OS:   Windows 7  Selenium Version:   WebDriver 3.9.1  Browser:   Chrome and Firefox  Browser Version:   Chrome: 66.0.3359.181 (64-bit) chromedriver v2.40  Firefox: 62.0.02 (64-bit) gecko: 0.20.1  ## Expected Behavior - WebDriver should click on button which is under iFrame.  ## Actual Behavior - Click() method is executing successfully(no exception throwing) but in UI there is no click happening.  ## Steps to reproduce - Unzip attached project and run the console application. [ConsoleApplication1.zip](https://github.com/SeleniumHQ/selenium/files/2409585/ConsoleApplication1.zip)","closed","I-stale,","coder-maddy","2018-09-24T04:28:19Z","2021-12-05T00:07:29Z"
"","6153","Request failed certificate checks while running protractor test with selenium 3.3.1, geckodriver- 18.1 and firefox 52 on windows 7","## Meta - OS:   Windows 7  Selenium Version:   Selenium 3.3.1   Browser:   Firefox 52  I am getting this error when I run selenium server + then run my protractor tests in firefox 52. The firefox browser opens up but then in the selenium log this error shows up-  1469541521068 addons.productaddons ERROR Request failed certificate checks: [Exception... ""Certificate checks failed. See previous errors for details."" nsresult: ""0x80070057 (NS_ERROR_ILLEGAL_VALUE)"" location: ""JS frame :: resource://gre/modules/CertUtils.jsm :: validateCert :: line 113"" data: no]  Any help would be appreciated!","closed","","suryavir","2018-07-12T19:05:47Z","2019-08-15T19:09:38Z"
"","5910","Selenium 3.12.0 Windows org.openqa.selenium.json.JsonException: Cannot coerce something that is not a number to a number: STRING","## Meta - OS:   Windows 2016/10  Selenium Version:   3.12.0  Browser:   N/A  ## Expected Behavior - The choco-selenium install of 3.12.0 would behave the same as 3.11.0 or earlier.  Version 3.11.0 or earlier produces this result when starting nssm:  ``` Service ""Selenium Hub"" installed successfully! Set parameter ""AppDirectory"" for service ""Selenium Hub"". Set parameter ""AppParameters"" for service ""Selenium Hub"". Set parameter ""Start"" for service ""Selenium Hub"". Set parameter ""AppStdout"" for service ""Selenium Hub"". Set parameter ""AppStderr"" for service ""Selenium Hub"". Set parameter ""AppRotateFiles"" for service ""Selenium Hub"". Selenium Hub: START: The operation completed successfully. ```  ## Actual Behavior - Get the following error when nssm tries to start selenium as a hub service with v3.12.0:  Version 3.12.0 throws the following error:  ``` Service ""Selenium Hub"" installed successfully! Set parameter ""AppDirectory"" for service ""Selenium Hub"". Set parameter ""AppParameters"" for service ""Selenium Hub"". Set parameter ""Start"" for service ""Selenium Hub"". Set parameter ""AppStdout"" for service ""Selenium Hub"". Set parameter ""AppStderr"" for service ""Selenium Hub"". Set parameter ""AppRotateFiles"" for service ""Selenium Hub"". ERROR: The running command stopped because the preference variable ""ErrorActionPreference"" or common parameter is set to Stop: Selenium Hub: Unexpected status SERVICE_PAUSED in response to START control.  at , C:\ProgramData\chocolatey\lib\selenium\tools\chocolateyInstall.ps1: line 92 at , C:\ProgramData\chocolatey\helpers\chocolateyScriptRunner.ps1: line 48 ```  ## Steps to reproduce -  Re-run the appveyor job for 3.12.0 branch:  https://ci.appveyor.com/project/dhoer/choco-selenium/build/3.12.0-187  Only the version was updated for the 3.12.0 branch:  https://github.com/dhoer/choco-selenium/compare/3.12.0?expand=1","closed","C-java,","dhoer","2018-05-17T17:40:10Z","2019-08-15T23:09:40Z"
"","6539","nodejs: Edge webdriver doesn't start on Windows 10 Insider builds","## Meta - OS:   Windows 10, Insider build  Selenium Version:   nodejs, https://www.npmjs.com/package/selenium-webdriver/v/3.6.0  Browser:   Microsoft Edge  ## Expected Behavior - things work  ## Actual Behavior - they don't. The same error as in #6464 is thrown.  ## Steps to reproduce - ``` const webdriver = require('selenium-webdriver'); const driver = new webdriver.Builder().forBrowser('MicrosoftEdge').build(); ``` ## Workaround I ended up monkeypatching the ServiceBuilder in edge.js by adding ``` this.options_.args.push('--jwp'); ``` in order to get it to work. Afaict Edge switched the default protocol from the json wire protocol to the w3c one. Running `microsoftwebdriver -h` suggests the latter is the default.","closed","D-edge,","fippo","2018-10-15T18:40:27Z","2019-08-14T15:09:48Z"
"","6110","Using driver.quit() is giving org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died","## Meta - OS:   Windows 10 Enterprise (Licensed). Processor :  Intel I7-4790 CPU @ 3.60Hz  . 64 Bit Operating System, X64 processor. Selenium Version:   2.53.0  Browser:   Chrome (using chromedriver.exe)    I am using chrome to run selenium scripts. I am getting Unreachable browserException when am using driver.quit() but am not getting the error while I am using driver.close(). I checked many places over the internet for a solution, I saw in many places suggesting driver.quit() but it never worked in my environment. driver.close() always worked for me. Please let me know the way it is occurring.   Environment Details: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171' Driver info: driver.version: RemoteWebDriver chromedriverVersion=2.37.544315 Chrome Version =Version 67.0.3396.99 (Official Build) (64-bit)   Please check the attachment below where am getting the error.   -->  Browser Version:   Version 67.0.3396.99 (Official Build) (64-bit) ## Expected Behavior -  Need to close the browser when the code is executed.  ## Actual Behavior - Error: org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_171' Driver info: driver.version: RemoteWebDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.37.544315 (730aa6a5fdba159ac9f4c1e8cbc59bf1b5ce12b7), userDataDir=C:\Users takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=67.0.3396.99, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=false, acceptInsecureCerts=false, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}] Session ID: 270a722560e61dab12e1ac5c93eab914 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701) 	at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:526) 	 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: java.lang.RuntimeException: Process refused to die after 10 seconds, and couldn't taskkill it: Unable to find executable for: taskkill 	at org.openqa.selenium.os.ProcessUtils.killWinProcess(ProcessUtils.java:143) 	at org.openqa.selenium.os.ProcessUtils.killProcess(ProcessUtils.java:81) 	at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.destroyHarder(UnixProcess.java:247) 	at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.access$200(UnixProcess.java:201) 	at org.openqa.selenium.os.UnixProcess.destroy(UnixProcess.java:125) 	at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:155) 	at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:196) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:94) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644) 	... 27 more Caused by: java.lang.NullPointerException: Unable to find executable for: taskkill 	at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:251) 	at org.openqa.selenium.os.UnixProcess.(UnixProcess.java:62) 	at org.openqa.selenium.os.CommandLine.(CommandLine.java:38) 	at org.openqa.selenium.os.WindowsUtils.killPID(WindowsUtils.java:178) 	at org.openqa.selenium.os.ProcessUtils.killWinProcess(ProcessUtils.java:138) 	... 35 more    ## Steps to reproduce -  ![image](https://user-images.githubusercontent.com/6330022/42272958-618b0af4-7fa5-11e8-87bf-32affae171e9.png)","closed","","satyadev1","2018-07-04T11:00:49Z","2019-08-15T20:09:38Z"
"","6213","Errno::EALREADY: Operation already in progress - connect(2) for 127.0.0.1:9515","## Meta - OS:   Windows 10 Build 17723.rs5_release.180720-1452 Ubuntu running inside Windows Subsystem for Linux  Selenium Version:   Selenium Webdriver 3.13.1 ChromeDriver 2.40  Browser:   Chrome  Browser Version:   68.0.3440.75 (Official Build) (64-bit)  ## Expected Behavior - Ruby spec test suite runs each test and passes or fails for reasons governed by the test itself  ## Actual Behavior - New Insider build of Windows installed overnight. As of today, the test suite fails with the message below. When `rspec` is run repeatedly, the failures occur on arbitrary tests (all of which pass when they actually run), and the number of failures has ranged from one to three in a given execution of `rspec`. When there are multiple failures, the port increments up by one in each instance (e.g., 9515, 9516, 9517). Here is the message: ``` Errno::EALREADY:        Operation already in progress - connect(2) for 127.0.0.1:9515      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/socket_poller.rb:79:in `listening?'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/socket_poller.rb:39:in `block in connected?'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/socket_poller.rb:100:in `with_timeout'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/socket_poller.rb:39:in `connected?'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/service.rb:141:in `connect_until_stable'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/service.rb:72:in `block in start'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/socket_lock.rb:39:in `locked'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/service.rb:69:in `start'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/chrome/driver.rb:43:in `initialize'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/driver.rb:44:in `new'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver/common/driver.rb:44:in `for'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/selenium-webdriver-3.13.1/lib/selenium/webdriver.rb:86:in `for'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/capybara-3.4.2/lib/capybara/selenium/driver.rb:31:in `browser'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/capybara-3.4.2/lib/capybara/selenium/driver.rb:59:in `visit'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/capybara-3.4.2/lib/capybara/session.rb:269:in `visit'      # /home/MattMarino/.rvm/gems/ruby-2.5.0/gems/capybara-3.4.2/lib/capybara/dsl.rb:51:in `block (2 levels) in ' ```  Gemfile.lock: ``` GEM   remote: https://rubygems.org/   specs:     actioncable (5.2.0)       actionpack (= 5.2.0)       nio4r (~> 2.0)       websocket-driver (>= 0.6.1)     actionmailer (5.2.0)       actionpack (= 5.2.0)       actionview (= 5.2.0)       activejob (= 5.2.0)       mail (~> 2.5, >= 2.5.4)       rails-dom-testing (~> 2.0)     actionpack (5.2.0)       actionview (= 5.2.0)       activesupport (= 5.2.0)       rack (~> 2.0)       rack-test (>= 0.6.3)       rails-dom-testing (~> 2.0)       rails-html-sanitizer (~> 1.0, >= 1.0.2)     actionview (5.2.0)       activesupport (= 5.2.0)       builder (~> 3.1)       erubi (~> 1.4)       rails-dom-testing (~> 2.0)       rails-html-sanitizer (~> 1.0, >= 1.0.3)     activejob (5.2.0)       activesupport (= 5.2.0)       globalid (>= 0.3.6)     activemodel (5.2.0)       activesupport (= 5.2.0)     activerecord (5.2.0)       activemodel (= 5.2.0)       activesupport (= 5.2.0)       arel (>= 9.0)     activestorage (5.2.0)       actionpack (= 5.2.0)       activerecord (= 5.2.0)       marcel (~> 0.3.1)     activesupport (5.2.0)       concurrent-ruby (~> 1.0, >= 1.0.2)       i18n (>= 0.7, < 2)       minitest (~> 5.1)       tzinfo (~> 1.1)     addressable (2.5.2)       public_suffix (>= 2.0.2, < 4.0)     arel (9.0.0)     bcrypt (3.1.12)     bindex (0.5.0)     bootsnap (1.3.1)       msgpack (~> 1.0)     bourbon (5.1.0)       sass (~> 3.4)       thor (~> 0.19)     builder (3.2.3)     byebug (10.0.2)     capybara (3.4.2)       addressable       mini_mime (>= 0.1.3)       nokogiri (~> 1.8)       rack (>= 1.6.0)       rack-test (>= 0.6.3)       xpath (~> 3.1)     childprocess (0.9.0)       ffi (~> 1.0, >= 1.0.11)     coderay (1.1.2)     coffee-rails (4.2.2)       coffee-script (>= 2.2.0)       railties (>= 4.0.0)     coffee-script (2.4.1)       coffee-script-source       execjs     coffee-script-source (1.12.2)     concurrent-ruby (1.0.5)     crass (1.0.4)     diff-lcs (1.3)     email_spec (2.2.0)       htmlentities (~> 4.3.3)       launchy (~> 2.1)       mail (~> 2.7)     erubi (1.7.1)     execjs (2.7.0)     factory_bot (4.10.0)       activesupport (>= 3.0.0)     factory_bot_rails (4.10.0)       factory_bot (~> 4.10.0)       railties (>= 3.0.0)     ffi (1.9.25)     font-awesome-rails (4.7.0.4)       railties (>= 3.2, < 6.0)     foreman (0.85.0)       thor (~> 0.19.1)     globalid (0.4.1)       activesupport (>= 4.2.0)     htmlentities (4.3.4)     i18n (1.0.1)       concurrent-ruby (~> 1.0)     jbuilder (2.7.0)       activesupport (>= 4.2.0)       multi_json (>= 1.2)     jquery-rails (4.3.3)       rails-dom-testing (>= 1, < 3)       railties (>= 4.2.0)       thor (>= 0.14, < 2.0)     launchy (2.4.3)       addressable (~> 2.3)     listen (3.1.5)       rb-fsevent (~> 0.9, >= 0.9.4)       rb-inotify (~> 0.9, >= 0.9.7)       ruby_dep (~> 1.2)     loofah (2.2.2)       crass (~> 1.0.2)       nokogiri (>= 1.5.9)     mail (2.7.0)       mini_mime (>= 0.1.1)     marcel (0.3.2)       mimemagic (~> 0.3.2)     method_source (0.9.0)     mimemagic (0.3.2)     mini_mime (1.0.0)     mini_portile2 (2.3.0)     minitest (5.11.3)     msgpack (1.2.4)     multi_json (1.13.1)     nio4r (2.3.1)     nokogiri (1.8.4)       mini_portile2 (~> 2.3.0)     oath (1.1.0)       bcrypt       rails       warden     oath-generators (1.0.1)       oath (>= 0.0.12)     pg (1.0.0)     pry (0.11.3)       coderay (~> 1.1.0)       method_source (~> 0.9.0)     pry-byebug (3.6.0)       byebug (~> 10.0)       pry (~> 0.10)     public_suffix (3.0.2)     puma (3.12.0)     rack (2.0.5)     rack-proxy (0.6.4)       rack     rack-test (1.1.0)       rack (>= 1.0, < 3)     rails (5.2.0)       actioncable (= 5.2.0)       actionmailer (= 5.2.0)       actionpack (= 5.2.0)       actionview (= 5.2.0)       activejob (= 5.2.0)       activemodel (= 5.2.0)       activerecord (= 5.2.0)       activestorage (= 5.2.0)       activesupport (= 5.2.0)       bundler (>= 1.3.0)       railties (= 5.2.0)       sprockets-rails (>= 2.0.0)     rails-dom-testing (2.0.3)       activesupport (>= 4.2.0)       nokogiri (>= 1.6)     rails-html-sanitizer (1.0.4)       loofah (~> 2.2, >= 2.2.2)     railties (5.2.0)       actionpack (= 5.2.0)       activesupport (= 5.2.0)       method_source       rake (>= 0.8.7)       thor (>= 0.18.1, < 2.0)     rake (12.3.1)     rb-fsevent (0.10.3)     rb-inotify (0.9.10)       ffi (>= 0.5.0, < 2)     rspec-core (3.7.1)       rspec-support (~> 3.7.0)     rspec-expectations (3.7.0)       diff-lcs (>= 1.2.0, < 2.0)       rspec-support (~> 3.7.0)     rspec-mocks (3.7.0)       diff-lcs (>= 1.2.0, < 2.0)       rspec-support (~> 3.7.0)     rspec-rails (3.7.2)       actionpack (>= 3.0)       activesupport (>= 3.0)       railties (>= 3.0)       rspec-core (~> 3.7.0)       rspec-expectations (~> 3.7.0)       rspec-mocks (~> 3.7.0)       rspec-support (~> 3.7.0)     rspec-support (3.7.1)     ruby_dep (1.5.0)     rubyzip (1.2.1)     sass (3.5.7)       sass-listen (~> 4.0.0)     sass-listen (4.0.0)       rb-fsevent (~> 0.9, >= 0.9.4)       rb-inotify (~> 0.9, >= 0.9.7)     sass-rails (5.0.7)       railties (>= 4.0.0, < 6)       sass (~> 3.1)       sprockets (>= 2.8, < 4.0)       sprockets-rails (>= 2.0, < 4.0)       tilt (>= 1.1, < 3)     selenium-webdriver (3.13.1)       childprocess (~> 0.5)       rubyzip (~> 1.2)     spring (2.0.2)       activesupport (>= 4.2)     spring-watcher-listen (2.0.1)       listen (>= 2.7, < 4.0)       spring (>= 1.2, < 3.0)     sprockets (3.7.2)       concurrent-ruby (~> 1.0)       rack (> 1, < 3)     sprockets-rails (3.2.1)       actionpack (>= 4.0)       activesupport (>= 4.0)       sprockets (>= 3.0.0)     thor (0.19.4)     thread_safe (0.3.6)     tilt (2.0.8)     time_for_a_boolean (0.2.0)       activerecord       railties     turbolinks (5.1.1)       turbolinks-source (~> 5.1)     turbolinks-source (5.1.0)     tzinfo (1.2.5)       thread_safe (~> 0.1)     uglifier (4.1.16)       execjs (>= 0.3.0, < 3)     warden (1.2.7)       rack (>= 1.0)     web-console (3.6.2)       actionview (>= 5.0)       activemodel (>= 5.0)       bindex (>= 0.4.0)       railties (>= 5.0)     webpacker (3.5.5)       activesupport (>= 4.2)       rack-proxy (>= 0.6.1)       railties (>= 4.2)     websocket-driver (0.7.0)       websocket-extensions (>= 0.1.0)     websocket-extensions (0.1.3)     xpath (3.1.0)       nokogiri (~> 1.8)  PLATFORMS   ruby  DEPENDENCIES   bootsnap (>= 1.1.0)   bourbon   byebug   capybara   coffee-rails (~> 4.2)   email_spec   factory_bot_rails   font-awesome-rails   foreman   jbuilder (~> 2.5)   jquery-rails   listen (>= 3.0.5, < 3.2)   oath   oath-generators   pg (>= 0.18, < 2.0)   pry-byebug   puma (~> 3.11)   rails (~> 5.2.0)   rspec-rails   sass-rails (~> 5.0)   selenium-webdriver   spring   spring-watcher-listen (~> 2.0.0)   time_for_a_boolean   turbolinks (~> 5)   tzinfo-data   uglifier (>= 1.3.0)   web-console (>= 3.3.0)   webpacker  RUBY VERSION    ruby 2.5.0p0  BUNDLED WITH    1.16.1 ```  ## Steps to reproduce - - Install latest version of ChromeDriver in Windows. - Include ChromeDriver in PATH. - In the same folder where ChromeDriver.exe resides, create a file called ""chromedriver"" that contains: ``` #!/bin/sh chromedriver.exe ""$@"" ``` - Open Ubuntu terminal - cd to project path - run `rspec`","closed","C-rb,","Ephs05msm","2018-07-27T15:45:08Z","2019-08-15T09:09:46Z"
"","6578","OpenQA.Selenium.Remote.RemoteWebElement.GetAttribute method not always returning the correct value","## Meta - OS:   Windows 10 and Windows 7 Selenium Version:   ```    ``` Browser:   Google Chrome  Browser Version:   Version 70.0.3538.77 (Official Build) (64-bit)  ## Expected Behavior - Value of class attribute on the element is returned  ## Actual Behavior - Returns ""System.Object[]""  ## Steps to reproduce - Run the attached .NET C# UnitTest Project which contains 2 Test Methods, one that works and one that fails.  The only difference between the 2 tests is the url they use to get the web page elements.  [UnitTestSeleniumGetAttributeMethod.zip](https://github.com/SeleniumHQ/selenium/files/2515454/UnitTestSeleniumGetAttributeMethod.zip)  ## Extract taken from the UnitTest1.cs test class file in the .NET C# UnitTest Project  ``` using Microsoft.VisualStudio.TestTools.UnitTesting;  namespace UnitTestSeleniumGetAttributeMethod {     [TestClass]     public class UnitTest1     {         [TestMethod]         public void Successful()         {             using (var driver = new OpenQA.Selenium.Chrome.ChromeDriver())             {                 driver.Navigate().GoToUrl(""https://staticdemosite.z21.web.core.windows.net/page1.html"");                  var element = driver.FindElementById(""chair_56"");                 var classValues = element?.GetAttribute(""class"");                  Assert.IsFalse(classValues == ""System.Object[]"");             }         }          [TestMethod]         public void Fail()         {             using (var driver = new OpenQA.Selenium.Chrome.ChromeDriver())             {                 driver.Navigate().GoToUrl(""https://www.seagullstickets.com/en-GB/events/albion%20v%20arsenal/2018-12-26_17.15/american%20express%20community%20stadium?area=c5eae2e3-b424-4010-94cb-11c22d0a54e3&type="");                  var element = driver.FindElementById(""chair_56"");                 var classValues = element?.GetAttribute(""class"");                  Assert.IsFalse(classValues == ""System.Object[]"");             }         }     } } ```","closed","I-stale,","ghost","2018-10-25T14:49:05Z","2021-12-04T00:06:29Z"
"","6145","Socket not found exception, Multiple test runs fails","## Meta - OS:   Windows 10 1803  Selenium Version:   3.13.1.0 Browser:  Chrome Version 67.0.3396.99 (Offizieller Build) (64-Bit) chromedriver.exe 2.40.0 from Nuget  Browser Version:   67.0.3396.99 (Offizieller Build) (64-Bit)  Test Framework: xUnit  Programming IDE: Visual Studio 2017 v15.7.5  ## Expected Behavior - Select multiple test from test explorer and run in debug mode ## Actual Behavior - Select multiple test from test explorer and run in debug mode.  Only the first test finished succesfuly. When the second test wants to initialize the driver it crashes with the folowing exception:  `Testname:	SellyconSelniumXUnit.ChromeTests.ChromeUploadDxfConfigurator Test FullName:	SellyconSelniumXUnit.ChromeTests.ChromeUploadDxfConfigurator Testquelle:	D:\workspace\...\...\ChromeTests.cs Zeile 39 Testergebnis:	Fehlgeschlagene Testdauer:	0:00:41,699  Ergebnis StackTrace:	 ----- Inner Stack Trace #1 (OpenQA.Selenium.WebDriverException) -----    bei OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    bei OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    bei OpenQA.Selenium.Remote.RemoteTimeouts.ExecuteSetTimeout(String timeoutType, TimeSpan timeToWait)    bei OpenQA.Selenium.Remote.RemoteTimeouts.set_PageLoad(TimeSpan value)    bei SellyconSeleniumLibrary.WrapperFactory.BrowserFactory.InitBrowser[T,TDriver](Action`1 optionCallback, TDriver tdriver)    bei SellyconSelniumXUnit.ChromeTests.ChromeUploadDxfConfigurator() in D:\workspace\SellyconSeleniumIntegration\SellyconSelniumXUnit\ChromeTests.cs:Zeile 41. ----- Inner Stack Trace #2 (OpenQA.Selenium.WebDriverException) -----    bei OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    bei OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    bei OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    bei OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    bei OpenQA.Selenium.Remote.RemoteWebDriver.Close()    bei SellyconSeleniumLibrary.WrapperFactory.BrowserFactory.CloseDriver()    bei SellyconSelniumXUnit.ChromeTests.Dispose() in D:\workspace\SellyconSeleniumIntegration\SellyconSelniumXUnit\ChromeTests.cs:Zeile 267.    bei Xunit.Sdk.ExecutionTimer.Aggregate(Action action)    bei ReflectionAbstractionExtensions.DisposeTestClass(ITest test, Object testClass, IMessageBus messageBus, ExecutionTimer timer, CancellationTokenSource cancellationTokenSource)    bei Xunit.Sdk.TestInvoker`1.c__DisplayClass47_0.b__1()    bei Xunit.Sdk.ExceptionAggregator.Run(Action code) ----- Inner Stack Trace -----    bei System.Net.HttpWebRequest.GetResponse()    bei OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) ----- Inner Stack Trace -----    bei System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)    bei System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Socket s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state, IAsyncResult asyncResult, Exception& exception) Ergebnis Meldung:	 System.AggregateException : Mindestens ein Fehler ist aufgetreten. ---- OpenQA.Selenium.WebDriverException : Unexpected error. System.Net.WebException: Die Verbindung mit dem Remoteserver kann nicht hergestellt werden. ---> System.Net.Sockets.SocketException: Es konnte keine Verbindung hergestellt werden, da der Zielcomputer die Verbindung verweigerte 127.0.0.1:63311    bei System.Net.Sockets.Socket.DoConnect(EndPoint endPointSnapshot, SocketAddress socketAddress)    bei System.Net.ServicePoint.ConnectSocketInternal(Boolean connectFailure, Socket s4, Socket s6, Socket& socket, IPAddress& address, ConnectSocketState state, IAsyncResult asyncResult, Exception& exception)    --- Ende der internen Ausnahmestapelüberwachung ---    bei System.Net.HttpWebRequest.GetRequestStream(TransportContext& context)    bei System.Net.HttpWebRequest.GetRequestStream()    bei OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    bei OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    bei OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    bei OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) ---- OpenQA.Selenium.WebDriverException : A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:63311/session//window. The status of the exception was ConnectFailure, and the message was: Die Verbindung mit dem Remoteserver kann nicht hergestellt werden. -------- System.Net.WebException : Die Verbindung mit dem Remoteserver kann nicht hergestellt werden. ------------ System.Net.Sockets.SocketException : Es konnte keine Verbindung hergestellt werden, da der Zielcomputer die Verbindung verweigerte 127.0.0.1:63311  `","closed","","FabianO0815","2018-07-11T14:58:56Z","2019-08-15T19:09:43Z"
"","5996","Failure when running in CMD","## Meta - OS:   Windows 10 - 1803 Selenium Version:   3.12.0 Browser:   Firefox Quantum 60.0.1 (64-bit)  Code in Eclipse IDE Version: Oxygen.3a Release (4.7.3a) - Build id: 20180405-1200  	package Browser;  	import org.openqa.selenium.WebDriver; 	import org.openqa.selenium.firefox.FirefoxDriver; 	import org.testng.annotations.Test;    	public class BrowserWindow {  		 		 		@Test 		public void MyTest() { 			 			 			System.out.println(""Welcome to google""); //* Console output 			 			System.out.println(""Get Driver"");  			System.setProperty(""webdriver.gecko.driver"", ""C:\\Users\\steven\\Desktop\\Desktop\\SOFTWARE\\geckodriver.exe""); 			System.out.println(""New Driver"");  			System.out.println(""Web Driver Launch"");  			WebDriver driver =  new FirefoxDriver(); 			System.out.println(""Going to google"");  			driver.get(""https://www.google.com""); 			System.out.println(""Application opened""); 			System.out.println(""Page Title is : ""+driver.getTitle()); 			System.out.println(""close"");  			//**driver.close();  		}  		 		 	}	  From Eclipse Console I get this:  	[RemoteTestNG] detected TestNG version 6.14.2 	Welcome to google 	Get Driver 	New Driver 	Web Driver Launch 	1528208743387	geckodriver	INFO	geckodriver 0.20.1 	1528208743415	geckodriver	INFO	Listening on 127.0.0.1:22621 	1528208744134	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""-marionette"" ""-profile"" ""C:\\Users\\steven\\AppData\\Local\\Temp\\rust_mozprofile.EByQlzFMRba1"" 	Unable to read VR Path Registry from C:\Users\steven\AppData\Local\openvr\openvrpaths.vrpath 	Unable to read VR Path Registry from C:\Users\steven\AppData\Local\openvr\openvrpaths.vrpath 	Unable to read VR Path Registry from C:\Users\steven\AppData\Local\openvr\openvrpaths.vrpath 	Unable to read VR Path Registry from C:\Users\steven\AppData\Local\openvr\openvrpaths.vrpath 	Unable to read VR Path Registry from C:\Users\steven\AppData\Local\openvr\openvrpaths.vrpath 	1528208750102	Marionette	INFO	Listening on port 8199 	1528208750514	Marionette	WARN	TLS certificate errors will be ignored for this session 	Jun 05, 2018 10:25:50 AM org.openqa.selenium.remote.ProtocolHandshake createSession 	INFO: Detected dialect: W3C 	Going to google 	Application opened 	Page Title is : Google 	close  	=============================================== 	Suite 	Total tests run: 1, Failures: 0, Skips: 0 	===============================================   From Command Prompt I get this:   	C:\Users\steven\eclipse-workspace\JenkinsSeleniumWindow>run.bat  	C:\Users\steven\eclipse-workspace\JenkinsSeleniumWindow>java -cp bin;lib/* org.testng.TestNG testng.xml 	Welcome to google 	Get Driver 	New Driver 	Web Driver Launch  	=============================================== 	Suite 	Total tests run: 1, Failures: 1, Skips: 0 	===============================================  In Command Prompt it seems to fail at Web Driver Launch at WebDriver driver =  new FirefoxDriver();   I got this in TestNG Reports:....  		MyTest 		java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkState(ZLjava/lang/String;Ljava/lang/Object;)V 			at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136) 			at org.openqa.selenium.firefox.GeckoDriverService.access$000(GeckoDriverService.java:42) 			at org.openqa.selenium.firefox.GeckoDriverService$Builder.usingFirefoxBinary(GeckoDriverService.java:136) 			at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:165) 			at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125) 			at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:103) 			at Browser.BrowserWindow.MyTest(BrowserWindow.java:23) 		... Removed 24 stack frames","closed","","Pulse-Steven","2018-06-05T20:07:29Z","2019-08-15T23:10:00Z"
"","5930","hubHost option isn`t readable from node.json configuration file","## Meta - OS:   Windows 10  Selenium Version:   3.12  Browser:   GeckoDriver  ## Expected Behavior - I have a node.json file: ``` {  ""capabilities"":  	[  		{ 			""browserName"": ""firefox"", 			""platform"": ""WIN10"", 			""maxInstances"": 10 		} 	], 	""nodeTimeout"":120, 	""port"":5558, 	""hubPort"":4444, 	""hubHost"":""1XX.2X.1X.1XX"", 	""nodePolling"":2000, 	""registerCycle"":10000, 	""register"":true, 	""cleanUpCycle"":2000, 	""timeout"":30000, 	""maxSession"":10 } ``` and start node with  ``` java -jar selenium-server-standalone-3.12.0.jar -role node -nodeConfig node.json ``` ## Expected Behavior - Node connected to 1XX.2X.1X.1XX ## Actual Behavior - Node try connect to localhost instead of 1XX.2X.1X.1XX  When I try java -jar selenium-server-standalone-3.12.0.jar -role node -hubHost 1XX.2X.1X.1XX - it connect properly. As well that node.json file work fine with 3.11 version.","closed","C-grid,","TreefeedXavier","2018-05-22T11:04:21Z","2019-08-15T21:09:41Z"
"","6259","Win10 IE version 11 protection mode issue -- need your support","## Meta - OS:   Windows 10  Selenium Version:   13  Browser:   Internet Explorer version 11  Hi,  This is regarding an issue which we are currently facing in my team related to IE browser protection mode.   In Windows10, IE version 11 is not working with Selenium. I checked this in your wiki @ https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver website, and it suggested to enable the protection mode in IE internet option (Security tab) for all security zones.  However, I am not able to perform this operation under these zones: Local Intranet/Trusted sites/Restricted sites. Only it is enabled in Internet zone, perhaps it is due to company policies.  Hence, could you please suggest me some alternative option through which I can test/execute IE through selenium. I also checked the option : INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS through Java, which also did not work.  I am receiving ""Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones"" error message  Please support me in this.  Thanks & Regards, Manoj","closed","","ghost","2018-08-08T10:11:05Z","2019-08-15T16:09:52Z"
"","6262","drag and drop doesn't work for Html5's but works for Jquery's in chrome or firefox","## Meta - OS:   Windows 10 Selenium Version:  robotframework-seleniumlibrary 3.0.1  Browser:     Firefox,Chrome Browser Version:   Firefox 56.0, Chrome 68.0.3440.106 (64-bit)  ## Expected Behavior - Drag and Drop works ## Actual Behavior - Doesn't work for this html5 drag and drop. ## Steps to reproduce - Attached Txt file for Html5 source as the object to be tested. Please removed the last "".txt"" when try it.  And Robot Framework Test script as below: `*** Settings *** Library		SeleniumLibrary Suite Setup		Open Browser	about:blank	${BROWSER}  ...				Maximize Browser Window Suite Teardown	Sleep 	5s ...				Close Browser  *** Variables *** ${url1}		http://demo/exp/drag.html ${BROWSER}	ff  *** Test Cases *** Drag and drop 1	 	Go To 	${url1} 	Drag And Drop	//img	css:div#div1 	sleep 	1s` [drag.html.txt](https://github.com/SeleniumHQ/selenium/files/2272595/drag.html.txt)","closed","","virtualnode","2018-08-09T02:13:30Z","2019-08-15T16:09:50Z"
"","6477","How to start the selenium server at 127.0.0.1:4444","## Meta - OS:   Windows 10 Selenium Version:   selenium-server-standalone-3.14.0, IDE Eclipse  Browser:    Regestering Appium node      Browser Version:     ## Expected Behavior -  it should start at 127.0.0.1:4444  ## Actual Behavior - the hub is starting at  http://192.168.56.1:4444   ## Steps to reproduce -  java -jar selenium-server-standalone-3.14.0.jar -role hub  ##js file  ``{ ""capabilities"": [ { ""browserName"": """", ""version"": ""8.0.0"", ""maxInstances"": 1, ""platform"": ""ANDROID"", ""deviceName"": ""ce031603b320862704"" } ], ""configuration"": { ""nodeTimeout"":120,  ""port"":4723,  ""hubPort"":4444, ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"", ""url"":""http:127.0.0.1:4444/wd/hub"", ""hub"": ""127.0.0.1:4444/grid/register/"", ""hubHost"":""127.0.0.1"", ""registerCycle"":10000, ""register"":true, ""cleanUpCycle"":2000,  ""timeout"":30000,  ""maxSession"":1 } }``","closed","","Pramodnp28","2018-10-03T14:40:21Z","2019-08-15T08:10:00Z"
"","5870","Cannot access website requiring Basic Auth with account and password in URL using IE on Windows 10","## Meta - OS:   Windows 10 Selenium Version:   Ruby selenium-webdriver gem 3.11.0, IEDriverServer.exe 3.11.1.0 (32-bit)  Browser:   Internet Explorer  Browser Version:   11.1540.10586.0  ## Expected Behavior - My organization has several websites that require basic authentication.  I used to be able to access them with IE 11 by using URLs like what I have below.    http://my_domain%5my_account:my_password@my_server.gov  ## Actual Behavior - Passing account information still works on Windows 7, but not on Windows 10.  On Windows 10, I get the following error message:  Failed to navigate to http://my_domain%5cmy_account:mypassword6@my_server.gov. This usually means that a call to the COM method IWebBrowser2::Navigate2() failed.  ## Steps to reproduce - Create the ""explorer.exe"" AND ""iexplore.exe"" DWORD values of 0 in the Windows registry under Computer\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\MAIN\FeatureControl\FEATURE_HTTP_USERNAME_PASSWORD_DISABLE  Attempt to navigate to a website that uses basic auth by including the account and password in the URL.","closed","","DamienLyles","2018-05-08T19:22:15Z","2019-08-16T02:10:03Z"
"","5978","Secured cookies aren't returned for IE","## Meta - OS:   Windows 10 Selenium Version:   3.4 Browser:    Internet Explorer 11, IEDriverServer 3.11.0 32 bit  ## Expected Behavior - Return all cookies. ## Actual Behavior - Secured cookies aren't returned. ## Steps to reproduce - driver.manage().getCookies()","closed","D-IE,","0vid1u","2018-06-03T00:29:49Z","2021-09-05T08:27:35Z"
"","6649","Cannot set output to /dev/null anymore with 3.141.5","## Meta - OS:   Windows 10 Selenium Version:   3.141.5 Browser:   Firefox  Since the last changes in XpiDriverService in version 3.141.5 it is not possible anymore to set System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, ""/dev/null"") when using legacy Firefox. With GeckoDriver it works. The error is ""java.io.FileNotFoundException: \dev\null"" from XpiDriverService.getActualOutputStream where ""/dev/null"" does not get handled like in the constructor of this class.","closed","D-firefox,","phoenix384","2018-11-13T11:24:18Z","2019-08-14T15:09:56Z"
"","6076","Lack of Equals method in EventFiringWebElement class for dotnet","## Meta - OS:   Windows 10 Selenium Version:   3.13.0 Browser:   Chrome  Browser Version:    67.0.3396.87 (64 bit)  ## Expected Behavior - Test2 method prints true  ## Actual Behavior - Test2 method prints false  ## Steps to reproduce - Run code ``` using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Support.Events;  namespace GitHubIssue {     public class EqualsTest     {         IWebDriver driver;         EventFiringWebDriver eventDriver;          [SetUp]         public void SetUp()         {             driver = new ChromeDriver();             eventDriver = new EventFiringWebDriver(driver);             driver.Navigate().GoToUrl(""http://toolsqa.com/automation-practice-form/"");         }          [Test]         public void Test1()         {             var element1 = driver.FindElement(By.Name(""firstname""));             var element2 = driver.FindElement(By.Name(""firstname""));              System.Console.WriteLine(element1.Equals(element2)); // true as expected         }          [Test]         public void Test2()         {             var element1 = eventDriver.FindElement(By.Name(""firstname""));             var element2 = eventDriver.FindElement(By.Name(""firstname""));              System.Console.WriteLine(element1.Equals(element2)); // false         }     } } ```  In java bindings equals method is overridden, but in dotnet bindings class EventFiringWebElement has no overridden Equels method","closed","C-dotnet,","rockstome","2018-06-26T20:43:16Z","2020-06-24T23:01:53Z"
"","6050","FindElement / Until exception is not caught by catch block","## Meta - OS:   Windows 10 Selenium Version:   3.12.1 Browser:   Internet Explorer  Browser Version:   11.726.15063.0 (64-bit)  ## Expected Behavior - If element is not found, the exception is caught in ""catch"" block.  ## Actual Behavior - If element is not found, the exception is not caught in ""catch"" block - instead, the execution stops right on the method's call.  ## Steps to reproduce - Self-explanatory screenshot in C#: ![image](https://user-images.githubusercontent.com/6149843/41701058-9514f352-7533-11e8-9145-bb89460b9055.png)","closed","R-awaiting answer,","alexandis","2018-06-21T06:25:16Z","2019-08-15T21:09:59Z"
"","6326","HtmlUnitDriver : java.lang.NoClassDefFoundError: org/openqa/selenium/WrapsDriver","## Meta - OS:   Windows 10 Selenium Version:   3.12.0 Browser:   HtmlUnitDriver  Browser Version:   Chrome - as per -  System.out.println(driver.getBrowserVersion());  ## Expected Behavior - we should able to click on web Element.  ## Actual Behavior - https://www.google.com/?gws_rd=ssl Chrome Exception in thread ""main"" java.lang.NoClassDefFoundError: org/openqa/selenium/WrapsDriver 	at java.lang.ClassLoader.defineClass1(Native Method) 	at java.lang.ClassLoader.defineClass(ClassLoader.java:763) 	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) 	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467) 	at java.net.URLClassLoader.access$100(URLClassLoader.java:73) 	at java.net.URLClassLoader$1.run(URLClassLoader.java:368) 	at java.net.URLClassLoader$1.run(URLClassLoader.java:362) 	at java.security.AccessController.doPrivileged(Native Method) 	at java.net.URLClassLoader.findClass(URLClassLoader.java:361) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.toWebElement(HtmlUnitDriver.java:1211) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.findElementByName(HtmlUnitDriver.java:1341) 	at org.openqa.selenium.By$ByName.findElement(By.java:284) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver$4.call(HtmlUnitDriver.java:2024) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver$4.call(HtmlUnitDriver.java:2020) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.implicitlyWaitFor(HtmlUnitDriver.java:1660) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.findElement(HtmlUnitDriver.java:2020) 	at org.openqa.selenium.htmlunit.HtmlUnitDriver.findElement(HtmlUnitDriver.java:798) 	at com.test.htmlUnitTest.main(htmlUnitTest.java:26) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.WrapsDriver 	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) 	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331) 	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) 	... 21 more  ## Steps to reproduce - maven dependencies                 junit       junit       3.8.1       test               	org.testng     	testng     	6.9.10               	org.seleniumhq.selenium     	selenium-java     	3.12.0     	                               org.seleniumhq.selenium                 htmlunit-driver                                  org.seleniumhq.selenium   htmlunit-driver   2.32.1    Java Code :    ``` package com.test; import java.util.concurrent.TimeUnit; import org.openqa.selenium.By; import org.openqa.selenium.Proxy; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement;	 import org.openqa.selenium.htmlunit.HtmlUnitDriver;		 public class htmlUnitTest {				 		public static void main(String[] args) throws InterruptedException { 			HtmlUnitDriver  driver = new HtmlUnitDriver(); 			Proxy proxy = new Proxy(); 			proxy.setHttpProxy(""135.28.13.11:8080"");  			((HtmlUnitDriver) driver).setProxySettings(proxy);                      driver.get(""http://www.google.com"");                      driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);                    System.out.println(driver.getCurrentUrl());                    System.out.println(driver.getBrowserVersion());                     WebElement element = driver.findElement(By.name(""q""));	                     element.sendKeys(""Guru99"");	                     element.submit();			                     System.out.println(""Page title is: "" + driver.getTitle());		                     driver.quit();			          }		 } ```","closed","","pprraashant","2018-08-24T10:42:48Z","2019-08-15T14:09:44Z"
"","5898","Node not being registered to hub selenium 3.12.0 (Was passed main parameter '-role')","## Meta - OS:   Windows 10 Selenium Version:   3.12.0 Browser:   Chrome Browser Version:   66.0.3359.139 (64-bit)  ## Expected Behavior - Node should attach to hub as in selenium version 3.8.1.  ## Actual Behavior -  I am using selenium 3.8.1 version. i have made my own utility to start/stop hub and register node etc... Currently i am using this command to register the node to the server and this works great.  ``` String[] args = { ""-role"", ""node"", ""-host"", host, ""-hub"", hubURL, ""-port"", port }; GridNodeConfiguration gridNodeConfiguration = new GridNodeConfiguration();  JCommander.newBuilder().addObject(gridNodeConfiguration).build().parse(args); ```  The issue i am having is that i have updated to 3.12.0 and the command above does not work. i get the following error com.beust.jcommander.ParameterException: Was passed main parameter '-role' but no main parameter was defined in your arg class. Like you see above i have already defined the role as node but still the node wont attach. Any help regarding this please ? Thank you.","closed","","Khoosham","2018-05-14T17:27:56Z","2019-08-16T01:10:01Z"
"","5899","Node is not registered in localhost hub using selenium server 3.12.0","## Meta - OS:   Windows 10 Selenium Version:   3.12.0 Browser:   Chrome Browser Version: 66.0.3359.139 (Official Build) (64-bit)   ## Expected Behavior - Node should register successfully ## Actual Behavior -  ## Steps to reproduce - HubConfig:  {   ""host"": 127.0.0.1,   ""port"": 4444,   ""newSessionWaitTimeout"": -1,   ""servlets"" : [],   ""prioritizer"": null,   ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""nodePolling"": 5000,   ""cleanUpCycle"": 5000,   ""maxSession"": 20 }  NodeConfig:  {   ""capabilities"":       [         {           ""browserName"": ""firefox"",           ""maxInstances"": 20,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""chrome"",           ""maxInstances"": 20,           ""seleniumProtocol"": ""WebDriver""         },         {           ""browserName"": ""internet explorer"",           ""maxInstances"": 20,           ""seleniumProtocol"": ""WebDriver""         }     ],	        ""nodePolling"":5000,     ""maxConcurrent"": 5,     ""cleanUpCycle"":2000,     ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",     ""maxSession"": 20,     ""port"": 5556,     ""remoteHost"" : ""http://127.0.0.1:5556"",     ""register"": true,     ""registerCycle"": 10000,        ""hubHost"": ""127.0.0.1"",     ""hubPort"": 4444      }  I am using selenium 3.11.0 version. I register the node to the hub and this works great. The issue i am having is that when I change selenium server to 3.12.0 version. I can't register the node to the hub It show error  ""Marking the node http://127.0.0.1:5556 as down: cannot reach the node for 2 tries"" Any help regarding this please ? Thank you.","closed","","thuanvo191","2018-05-15T04:38:39Z","2019-08-16T01:10:02Z"
"","5897","GetCookieNamed() return OpenQA.Selenium.WebDriverException","## Meta - OS:   Windows 10 Selenium Version:   3.11.2 Visual Studio Browser:   Chrome  Browser Version:   66.0.3359.139  (64-bit)  ## Expected Behavior - I can get the Cookie identified by the cookie name  ## Actual Behavior - When trying to get the cookie, WebDriverException is raised  ## Steps to reproduce - Access website Try to read some cookie","closed","R-awaiting answer,","alvaroguinda","2018-05-14T14:33:06Z","2019-08-16T00:09:36Z"
"","6583","GetWindow handles returns 01 as the count.","## Meta - OS:   Windows 10 Selenium Version:   2.53.1 Browser:   Internet Explore  : 2.53.1  Browser Version:   ie 11.1324.15063.0  ## Expected Behavior - Im using to open an application using ie. When browser launches the URL. it open ups another two windows. User should be able to switch to launched window.  ## Actual Behavior - driver returns only count as 01 for driver.getWindowhandles().size(); So cannot switch to the window.  As i see application behaviour as below  - Once url launches. Application it self execute a java script as startup(); using that script application is opening the other windows. This might be a reason as i assume.   ## Steps to reproduce -","closed","R-awaiting answer,","PramodSenda","2018-10-26T12:16:22Z","2019-08-15T03:09:36Z"
"","5959","Selenium Py Chrome How to set http header  Proxy-Authorization ?","## Meta - OS:   Windows 10 Selenium Version:    3.11.0 Browser:   Chrome  Browser Version:   67.0.3396.62  Selenium Chrome can't  set the http header Proxy-Authorization ？ look code set header  but not success  code:  ```python from selenium import webdriver def create_webdriver():     options = webdriver.ChromeOptions()     options.add_argument('--User-Agent=xxxx')     options.add_argument('--proxy-server=http://forward.xdaili.cn:80')     options.add_argument('--Proxy-Authorization=xxxxx')     browser = webdriver.Chrome(chrome_options=options)     return browser   def main():     url = 'http://www.baidu.com'     browser = create_webdriver()     browser.get(url)   main() ``` how to do？","closed","","SFLAQiu","2018-05-30T09:16:54Z","2019-08-16T00:09:51Z"
"","6669","c# ChromeWebDriver throws exception when trying to get element property","## Meta - OS:   Windows 10 Selenium Version:            Browser:   Chrome  Browser Version:   Chrome Version 70.0.3538.102   ## Expected Behavior - return ""https://www.google.co.nz"" Tried with IE driver, it's slightly better, gives me null instead of exception.  ## Actual Behavior - System.NullReferenceException   HResult=0x80004003   Message=Object reference not set to an instance of an object.   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Remote.HttpCommandExecutor.HttpRequestInfo..ctor(Uri serverUri, Command commandToExecute, CommandInfo commandInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.Execute(String commandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.GetProperty(String propertyName) ...   ## Steps to reproduce - var driver = new ChromeDriver(); driver.Navigate().GoToUrl(""https://www.google.co.nz"");	 driver.FindElement(By.Name(""q"")).GetProperty(""baseURI"");","closed","","hejhj","2018-11-21T02:45:17Z","2019-08-14T16:09:34Z"
"","5842",".NET: AvailableLogTypes throws NullReferenceException if browser is not Chrome","## Meta - OS:   Windows 10 Selenium Version:    Browser:   Internet Explorer,  Firefox  Browser Version:   11.0.14393.0  ## Expected Behavior - AvailableLogTypes shouldn't throw NullReferenceException. If logging is not supported by driver - it should return empty collection.  ## Actual Behavior - If browser is IE or firefox - `driver.Manage().Logs.AvailableLogTypes` fails with NullReferenceException.  ## Steps to reproduce - Execute the following line: ``` var logTypes = new InternetExplorerDriver().Manage().Logs.AvailableLogTypes; ```","closed","C-dotnet,","Dreamescaper","2018-04-30T09:32:50Z","2019-08-15T02:09:55Z"
"","6037","Chromium based browser (Ghost browser) unexpectedly exited status code 0","## Meta - OS:   Windows 10 Selenium Version:    Browser:   Ghost Browser  ## Expected Behavior -  Open and keep control of browser.  ## Actual Behavior - Opens the browser and exits, not closing the browser but losing control of it.  ## Steps to reproduce - Install Ghost Browser Get path insert it's path as the browser executable path  Code    ```  exe_path = r'C:\Users\Anonymous\AppData\Local\GhostBrowser\Application\ghost.exe'  driver = webdriver.Chrome(executable_path=exe_path) ```","closed","","Jaquedeveloper","2018-06-18T17:56:49Z","2019-08-15T22:09:45Z"
"","6577","I have a set of selenium testcases which gets executed every night as they are scheduled in jenkins. I added a set of new testcases to the existing framework , committed them. i dont see them getting executed along with other cases.","## Meta - OS:   Windows 10 Selenium Version:    Browser:   FireFox  I have a set of selenium testcases which gets executed on every nightly as they are scheduled in jenkins. I added a set of new testcases to the existing framework , committed them. i dont see them getting executed along with other cases.  I get the below error on jenkins for the newly added testcases, Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: '199-7-165-32', ip: '199.7.165.32', os.name: 'windows', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=C:\Windows\proxy\rust_mozprofile.PIe0SoKZEyx3, rotatable=false, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, moz:headless=false, platform=ANY, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, acceptInsecureCerts=false, browserVersion=59.0, platformVersion=10.0, moz:processID=7880.0, browserName=firefox, javascriptEnabled=true, platformName=windows_nt, moz:webdriverClick=true}] Session ID: 3999a382-8958-4d71-83c9-9e6bcf83da44 *** Element info: {Using=id, value=sso-username-input}","closed","","ChaitA","2018-10-25T12:52:36Z","2019-08-15T07:09:46Z"
"","6080","Cannot create a remote driver if system properties proxyHost and proxyMode exist","## Meta - OS:   Windows 10 Eclipse Neon Maven 3.5.2 Testng 6.13  Selenium Version:   3.12.0 - java language  Browser:   Any  ## Problem description: I setup a maven selenium test project as usual with two system properties ""proxyHost"" and ""proxyPort"" for surefire plugin. However, I found that selenium http client use this setting for sending request to selenium hub. Should ""http.proxyHost"" and ""http.proxyPort"" be used insteads?  `  	some info here - in my case it is a working proxy IP  	working port of above proxy server  `  ## Expected Behavior - - Http request to hub for creating a new driver will not be sent via proxy just because there is two system properties: proxyHost and proxyPort. This should use properties from java document: ""http.proxyHost"" and ""http.proxyPort"".   ## Actual Behavior - - The request is sent via proxy. We have WebDriverException: Unable to parse remote response:  + response from the proxy (This is an html document from our working proxy server in my case). If two properties have invalid values then we don't get this page.   ## Steps to reproduce - 1. Before the test run, set two system properties: --> proxyHost: some working proxy IP/FQDN or an invalid information --> proxyPort: similar to above 2. Get a new remote webdriver by command: --> WebDriver driver = new RemoteWebDriver(url, chromeOpt);","closed","C-remote,","vutruong1711","2018-06-27T06:37:33Z","2021-09-05T08:21:29Z"
"","6313","InternetExplorerDriver doesn't work for Windows 10","## Meta - OS:   Windows 10 Browser:   Internet Explorer 11  I have the following code:  ```csharp         [TestMethod]         public void TestMethod1()         {             var options = new InternetExplorerOptions             {                 ForceCreateProcessApi = true             };              var driver = new InternetExplorerDriver(options);             driver.Navigate().GoToUrl(""http://google.ru"");         } ``` And this code throws an exception: WebDriverTest.UnitTest1.TestMethod1 threw exception:  System.InvalidOperationException: Unexpected error launching Internet Explorer. Unable to use CreateProcess() API. To use CreateProcess() with Internet Explorer 8 or higher, the value of registry setting in HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Main\TabProcGrowth must be '0'. (SessionNotCreated).  I created an entry in the registry, as in the documentation (https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver), but it does not help me.","closed","D-IE,","d3-shukurdin-aidarov","2018-08-21T14:23:13Z","2021-09-05T08:34:43Z"
"","6336","Selenium 3.9.0  & above gives error ""Session [null] not available and is not among the last 1000 terminated sessions."" on geckodriver","## Meta - OS:   Windows 10  Selenium Version:   3.9.0 and above  Browser:   Firefox through GeckoDriver  Browser Version:   61 (64-bit)  GeckoDriver Version: 21  ## Expected Behavior - selenium tests should run on latest firefox with GeckoDriver  ## Actual Behavior - I am trying to run my selenium tests against firefox using its new geckodriver and here is the issues I am seeing  When I use selenium standalone version 3.9.0 and above with GeckoDriver version 21 and firefox version 61, I am getting the following error as soon as I launch the test org.openqa.selenium.WebDriverException: Session [null] not available and is not among the last 1000 terminated sessions. Active sessions are[ext. key ******] Command duration or timeout: 17 milliseconds Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:32:46' System info: host: *****, ip: '*****', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_131' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{capabilities={moz:profile=*******************, rotatable=false, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, moz:headless=false, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, webdriver.remote.sessionid=*********, acceptInsecureCerts=false, browserVersion=61.0.2, platformVersion=10.0, moz:processID=9608, browserName=firefox, platformName=windows_nt, moz:webdriverClick=true}, sessionId=***************, platform=ANY}] Session ID: null 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:879) 	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringTimeouts.pageLoadTimeout(EventFiringWebDriver.java:573) 	at templates.NewTestTemplate.startBrowser(NewTestTemplate.java:194) 	at templates.NewTestTemplate.start(NewTestTemplate.java:156) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:585) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108) 	at org.testng.TestRunner.privateRun(TestRunner.java:774) 	at org.testng.TestRunner.run(TestRunner.java:624) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312) 	at org.testng.SuiteRunner.run(SuiteRunner.java:261) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140) 	at org.testng.TestNG.run(TestNG.java:1048) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)  The automated test continue when I use selenium 3.4.0 and above for same GeckoDriver and Firefox versions as above. Also, the firefox session does open but selenium is unable to recognize it.","closed","R-awaiting answer,","seleniumfirefox","2018-08-27T20:37:42Z","2019-08-15T11:09:47Z"
"","6487","the type org.openqa.selenium.firefox.firefoxdriver is not accessible","## Meta - OS:   Windows 10  Selenium Version:   3.14.0  Browser:   Firefox  Language Java  I tried to use driver = new FirefoxDriver(); and define a line  import org.openqa.selenium.firefox.firefoxdriver; but it always displays a message ""the type org.openqa.selenium.firefox.firefoxdriver is not accessible""  @ It works well if I used library under 3.14  ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","nhhphuong","2018-10-06T08:11:34Z","2019-08-15T08:09:38Z"
"","5907","selenium's Python wheel distribution contains duplicate files and may fail to install","## Meta - OS:   Windows Selenium Version:   3.12.0  ## Expected Behavior - The selenium wheel file should be installable with ""setuptools"".  ## Actual Behavior - Using `setuptools 39.1.0` on Windows to install the selenium Python wheel distribution (`selenium-3.12.0-py2.py3-none-any.whl`) fails with:  ``` error: [Error 183] Cannot create a file when that file already exists ```  Reason: the selenium wheel file contains the following files in the wheel file:  ``` selenium/webdriver/firefox/amd64/x_ignore_nofocus.so selenium-3.12.0.data/data/selenium/webdriver/firefox/amd64/x_ignore_nofocus.so ```  setuptools does not handle this well on Windows, and the project maintainers claims it's the wheel file that's invalid (even though `pip` successfully installs the wheel, silently overriding duplicate files). See https://github.com/pypa/setuptools/pull/1371.  Possible resolution: `data_files` in `setup.py` should not include files that are already packaged.  ## Steps to reproduce - ``` > wget https://files.pythonhosted.org/packages/57/bc/17164fd471ccdf0df3a992c710c0c3c47743462ff41ab72a02c6ede96e90/selenium-3.12.0-py2.py3-none-any.whl > easy_install selenium-3.12.0-py2.py3-none-any.whl Processing selenium-3.12.0-py2.py3-none-any.whl Installing selenium-3.12.0-py2.py3-none-any.whl to c:\cygwin\home\administrator\python\lib\site-packages error: [Error 183] Cannot create a file when that file already exists ```","closed","C-py,","wiggin15","2018-05-17T15:04:14Z","2019-08-15T21:09:41Z"
"","5890","chrome will never get feedback after first TimeoutException happened","## Meta - OS:   win7 Selenium Version:     Browser Version:     ## Expected Behavior - page can refresh or get again after timeoutException happen Please help  , Thank you very much  ## Actual Behavior - no any responses in chrome  no page loading / refreshing even no response to driver.close  ## Steps to reproduce - Here is my API to load page with some times if timeout happen.  ``` def try_to_load_page(page_url, try_times=5):     while True:         try:             if try_times == 0:                 break             if try_times % 2 == 0:                 old_handle = driver.window_handles #change to driver.get(url) or refresh() will always return                                                                    #timeoutException, and  it seems page didn't reload actually.                 script = ""window.open('"" + page_url + ""');""                 driver.execute_script(script)                              #will timeout                 driver.switch_to.window(old_handle[-1])                 driver.close()             else:                 driver.get(page_url)             return True         except TimeoutException:             print ""TimeoutException""             try_times -= 1             time.sleep(60)         except ErrorInResponseException:             print ""ErrorInResponseException""             try_times -= 1             time.sleep(180) ```","closed","","yundongxiao","2018-05-13T01:54:52Z","2019-08-16T02:09:39Z"
"","6036","Selenium does not run via cron -> unknown error","## Meta - OS:   Ubuntu 18.04 LTS Selenium Version:   3.11.0 Browser:   Chrome  I am not sure if this is an issue with selenium or cromedriver. A somewhat similar reported issue was closed by the thread starter without further comments. The issue only arises when running the script as a cronjob, and not when running the script from the IDE or terminal.  -->  Browser Version:   67.0.3396.87 (Official Build) (64-bit)  ## Expected Behavior - Expected the script to start a new Chrome session, open a web-page and start parsing it.  ## Actual Behavior - The script produces the following error:  `Traceback (most recent call last):   File ""/home/dpa/PycharmProjects/ParseRealEscort/Parser.py"", line 117, in      parser = Parse_Realescort(r""http://www.realescort.eu/ads/category/girls/3/oslo"")   File ""/home/dpa/PycharmProjects/ParseRealEscort/Parser.py"", line 15, in __init__     self.driver = webdriver.Chrome(self.path)   File ""/home/dpa/anaconda3/lib/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 75, in __init__     desired_capabilities=desired_capabilities)   File ""/home/dpa/anaconda3/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 154, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/home/dpa/anaconda3/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 243, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/dpa/anaconda3/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 312, in execute     self.error_handler.check_response(response)   File ""/home/dpa/anaconda3/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: DevToolsActivePort file doesn't exist   (Driver info: chromedriver=2.39.562737 (dba483cee6a5f15e2e2d73df16968ab10b38a2bf),platform=Linux 4.15.0-22-generic x86_64)`  ## Steps to reproduce - I added the following to the sudo crontab: `PATH=/usr/bin:/bin:/home/dpa/anaconda3/bin/  39 18 * * * python /home/dpa/PycharmProjects/Parser/Parser.py >> /tmp/mycommand.log 2>&1 `","closed","","Centurion80","2018-06-18T16:53:00Z","2019-08-15T22:09:46Z"
"","6595","chrome webdriver: `DevToolsActivePort file doesn't exist` (and other error)","## Meta - OS:   Ubuntu 16.04.5  Selenium Version:   3.14.0, python API  Browser:   Google Chrome 69.0.3497.100  ChromeDriver 2.41.578700   ## Expected Behavior -  Create webdriver  ## Actual Behavior -  Webdriver sometimes created, otherwise I get many errors like ```DevToolsActivePort file doesn't exist WebDriverException: Message: unknown error: unable to discover open pages```  ## Steps to reproduce - Unable to provide concrete steps to reproduce the problem. Random behavior.  Related bug reports:  https://github.com/heroku/heroku-buildpack-google-chrome/issues/46 https://github.com/angular/protractor/issues/4850 https://stackoverflow.com/questions/50642308/org-openqa-selenium-webdriverexception-unknown-error-devtoolsactiveport-file-d  I have tried the suggestions provided in these reports, but no success...","closed","R-awaiting answer,","alex4200","2018-10-30T07:22:08Z","2019-08-15T06:09:43Z"
"","5871","Issues with set_page_load_timeout","## Meta - OS:   Ubuntu 16.04.4 LTS Selenium Version:   3.11.0 Browser:   GeckoDriver  Browser Version:   0.20.1 (If I go to help -> about Firefox in the window that opens with GeckoDriver is launched, it says ""Firefox 59.0.2"")  ## Expected Behavior - I am trying to get the contents on a page when it first loads. If the Javascript on the page hasn't finished running after 10 seconds, I just want to get whatever was loaded. However, set_page_load_timeout does not seem to work reliably.   ## Actual Behavior - If I call set_page_load_timeout and pass the value 10 the code hangs on the driver.get line after 10 seconds have passed. However if I pass the value 1, it works fine.   ## Steps to reproduce - I created the following code snippet that demonstrates the problem: ``` driver = webdriver.Firefox(executable_path=) driver.set_page_load_timeout(10)  try:     driver.get('https://yahoo.com') except:     pass  print(""HERE"") print(driver.page_source) print(""END"") ```  Note that yahoo.com doesn't finish loading for me in Firefox 59.0.2 on Linux. The page partly loads but the little blue dot on the left of the tab keeps moving back on forth. If Yahoo loads properly for you (as it does for me on Firefox on macOS, you probably won't be able to reproduce this issue using Yahoo.  Is this an actual bug with set_page_load_timeout? If not, is there something that I'm doing wrong? I apologize if this is an issue I should be bringing up with Mozilla. It seemed like a Selenium issue because set_page_load_timeout worked fine with 1 but not with 10.","closed","","akindofyoga","2018-05-08T21:42:09Z","2019-08-16T02:10:02Z"
"","6285","Expected condition ""ElementToBeClickable"" misleading.","## Meta - OS:   Ubuntu 16.04, OsX 10.13.6, others Selenium Version:   3.8.0, 3.11.0 Browser:   Firefox (various versions), geckodriver 0.18.0, 0.19.1   ## Expected Behavior -  When using the expected condition `ElementToBeClickable` in a constructions like the following:  ``` WebDriverWait(bspdriver.webdriver, 60).\                 until(EC.element_to_be_clickable(what)).click() ```  I expect the webdriver to wait until an element is _clickable_.  As the name of the expected condition says you:  `ElementToBeClickable`  ## Actual Behavior -  If the element is hidden behind some other element (like an alert, see e.g. [here](https://stackoverflow.com/questions/51841884/python-selenium-finds-clickable-element-that-cannot-be-clicked) or [here](https://stackoverflow.com/questions/51654804/elementtobeclickable-issues-with-selenium-java)) the `WebDriverWait` method does not wait until the element really becomes _clickable_,  but continues. Therefore the following `click` results in some error like  ```` ElementClickInterceptedException: Message: Element  is not clickable at point (1193.3332901000977,522) because another element  obscures it ````  Suggestion: Either fix this issue, or the expected condition should be named like  `ElementToBeClickableExceptObscurredByOtherElement`  ## Steps to reproduce -  TBD if really required.","closed","","alex4200","2018-08-15T08:02:43Z","2019-08-15T15:09:55Z"
"","6556","driver.get buffer until timeout when access mp4 url","## Meta - OS:   Ubuntu 16.04 Selenium Version:   Python3 Package Selenium==3.14.1 Browser:   Chrome 69.0 chromdriver 2.41.578700  my code :   ``` print(""Access Video"") driver.get(""https://video.fcgk6-1.fna.fbcdn.net/v/t42.9040-2/10000000_497712050706420_2670005349141970944_n.mp4?_nc_cat=109&efg=eyJ2ZW5jb2RlX3RhZyI6InN2ZV9zZCJ9&_nc_ht=video.fcgk6-1.fna&oh=bd61eb2ab91947fa9302c90ed24c9b7c&oe=5BC91565"") print(""finish"") ``` Expected Result :   ``` Access Video (browser finish loading page, and i think is should no more than 5 sec) finish ```  Actual Result :  ``` Access Video (Buffer for more than 30 seconds and so on until timeout) ``` more info :   1. the video has been fully loaded but driver.get still buffer 2. i try adding timeout, but it's not solution","closed","","codenoid","2018-10-18T20:19:40Z","2019-08-15T07:10:01Z"
"","6013","java.net.ConnectException: Failed to connect to localhost/127.0.0.1:xxxx when Initialising Firefox Driver in Ubuntu 16.04 (Linux)","## Meta - OS:   Ubuntu 16.04  Selenium Version:   3.12.0  Browser:   Firefox  Browser Version:   60.0.1  (64-bit)  ## Expected Behavior - Driver Initialize without error.  ## Actual Behavior -  The following Error Stacktrace, occurs upon driver initialization:  java.net.ConnectException: Failed to connect to localhost/127.0.0.1:5054 Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'michelad-Lenovo-YOGA-3-Pro-1370', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-127-generic', java.version: '1.8.0_171' Driver info: driver.version: FirefoxDriver org.openqa.selenium.WebDriverException Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'michelad-Lenovo-YOGA-3-Pro-1370', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-127-generic', java.version: '1.8.0_171' Driver info: driver.version: FirefoxDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125)   ## Steps to reproduce - Run the following java code:     public static void main(String[] args) {            System.setProperty(""webdriver.gecko.driver"", ""/path/to/geckodriver"");            FirefoxOptions options = new FirefoxOptions();            options.addArguments(""--headless"");            WebDriver driver =  new FirefoxDriver(options);            System.out.println(""Mozilla Firefox Headless Browser Initialized"");            driver.get(""http://www.google.com"");            System.out.println(""Page Title is : ""+driver.getTitle());            driver.quit();       }","closed","D-firefox,","micheladennis","2018-06-12T16:50:26Z","2019-08-15T22:10:01Z"
"","5894","Selenium error in Python 3 - The element reference is stale; no longer attached to DOM, not in the current frame context, or document refreshed","## Meta - OS:   OSX High Sierra Selenium Version:   3.12.0, Selenium Web Driver Browser:   Firefox  I am trying to web scrap http://compbio.charite.de/phenomizer/  After giving a search value, and pressing enter/return, I am getting a list of predictions, from which either I need to either double click on any of them or right click and select the fourth option from the context menu.  I am doing this for multiple searches, by passing the words in a list and entering each list item in the search box. The error is not coming for the first search result, but from the second.  The list that I have to select from I am giving as an output with indices from where the user can select, the code that does the selection is as follows -       for entry in inputs:              inputElement = driver.find_element_by_id('ext-gen86')         inputElement.clear()              time.sleep(1)         inputElement.send_keys(entry)              time.sleep(1)              inputElement.send_keys(Keys.RETURN)          time.sleep(1)              options = driver.find_element_by_class_name('x-grid3-scroller')         optionText = options.text.split('\n')              dictDis = {}         for i,j in enumerate(optionText[1::2]):             print (i+1, '-', j)             dictDis[i+1] = j                  selection = input(""Enter the indices you want to incorporate as patient's features separated by a space - \n"").split(' ')                  for index in selection :             text = '//*[contains(text(), ""' + dictDis[int(index)] + '"")]'             time.sleep(2)             toclick = driver.find_element_by_xpath(text)             time.sleep(2)             while True:                 if (toclick == driver.find_element_by_xpath(text)):                     action.double_click(toclick).perform()                     break                 else:                     toclick = driver.find_element_by_xpath(text)                       The above if else was just an experiment to see if it works. I have even tried it in an infinite try except loop like      while True:         try:             action.double_click(toclick[index]).perform()             break         except:             continue  Also I have tried giving explicit and implicit waits, but of no avail.  The same error pops up whether I use multiple different classes, or any other identification, tried path with searching for text, etc for the item to be selected; but everyone threw the same error. In the code above I am double clicking on it, but also right clicking and selecting option doesn't work.  The error is -       The element reference of  is stale; either the element is no longer attached to the DOM, it is not in the current frame context, or the document has been refreshed   P.S. - I have tried every possible solution given in a google search result upto 5 pages and also while typing the question title, I went through all the predictions that StackOverflow gave as might have my answer. In short all they say is wait for it. I did, nothing happens.","closed","","daddyodevil","2018-05-14T11:36:46Z","2019-08-16T02:09:34Z"
"","5937","Selenium with chromedriver doesn't start via cron","## Meta - OS:   OSX 10.12 Selenium Version:   3.4.3 Browser:   Chrome 66.0.3359.181, Chromedriver 2.38.552522, Python 3.6.1  ## Expected Behavior - Initialize chromedriver same as when starting from script  ## Actual Behavior - Chrome failed to start: exited abnormally  ## Steps to reproduce - Python script with Selenium and Chromedriver in headless mode on CentOS7 runs fine when called manually: ``` options = webdriver.ChromeOptions() options.add_argument('headless') self.driver = webdriver.Chrome(chrome_options=options) ```  When starting script with crontab however it throws this exception: `selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally (Driver info: chromedriver=2.38.552522`  Cron is setup with crontab -e (same user as when script runs manually): ``` SHELL=/bin/bash PATH=/usr/local/bin/ * * * * * cd /to/path && /to/path/.virtualenvs/selenium/bin/python /to/path/script.py -t arg1 arg2 > /to/path/log.txt 2>&1 ```  I tried different suggestions found on the web like: ° adding --no-sandbox options to chromedriver in my script ° run everything from separate .sh script and start this script in cron (starting from .sh script works fine) Please note that I am using chrome in headless mode, so I think I don't need this export DISPLAY=:0 stuff in cron, or Xvfb libs as it used to be.  Full traceback: ``` Exception in thread : Traceback (most recent call last):   File ""/usr/lib64/python3.6/threading.py"", line 916, in _bootstrap_inner     self.run()   File ""/usr/lib64/python3.6/threading.py"", line 864, in run     self._target(*self._args, **self._kwargs)   File ""/path/to/script.py"", line 53, in start     self.site_scrape(test_run)   File ""/path/to/script.py"", line 65, in site     self.driver = webdriver.Chrome(chrome_options=options)   File ""/home//.virtualenvs/selenium/lib64/python3.6/site-packages/selenium/webdriver/chrome/webdriver.py"", line 69, in __init__     desired_capabilities=desired_capabilities)   File ""/home//.virtualenvs/selenium/lib64/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 98, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/home//.virtualenvs/selenium/lib64/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 188, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home//.virtualenvs/selenium/lib64/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 256, in execute     self.error_handler.check_response(response)   File ""/home//.virtualenvs/selenium/lib64/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 194, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally   (Driver info: chromedriver=2.38.552522 (437e6fbedfa8762dec75e2c5b3ddb86763dc9dcb),platform=Linux 4.14.12-x86_64-linode92 x86_64) ```","closed","","onasipim","2018-05-23T23:07:02Z","2019-08-16T00:10:04Z"
"","6122","::TimeoutError is deprecated","## Meta - OS:   OSX & Linux  Selenium Version:   selenium-webdriver 3.13.0  Browser:   Firefox  /usr/local/rvm/gems/ruby-2.5.1@csi/gems/selenium-webdriver-3.12.0/lib/selenium/webdriver/common/error.rb:35: warning: constant ::TimeoutError is deprecated  Please change to Timeout::Error to avoid deprecation warnings.","closed","C-rb,","ninp0","2018-07-06T15:30:10Z","2019-08-15T15:09:34Z"
"","6090","Safari Click method don't work correctly","## Meta - OS:   OSX Selenium Version:   selenium-java 3.10.0 Browser:   safari  Browser Version:   11.0.3  ## Expected Behavior - I'm trying to click a certain button but it happened nothing in run mode. ## Actual Behavior - However, it worked while I debugger on the click line. I want to know how to solve this problem.Thanks.  ## Steps to reproduce - The codes is as following;          WebDriver webDriver =  new SafariDriver();         webDriver.manage().window().maximize();         webDriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);         // script timeout         webDriver.manage().timeouts().setScriptTimeout(100, TimeUnit.SECONDS);         // pageLoad timeout         webDriver.manage().timeouts().pageLoadTimeout(100, TimeUnit.SECONDS);         webDriver.get(""https://www.baidu.com"");         WebDriverWait wait = new WebDriverWait(webDriver, 10);          WebElement input = webDriver.findElement(By.xpath(""//*[@id=\""kw\""]""));         input.sendKeys(""tuean"");          wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(""//*[@id=\""su\""]"")));          WebElement search = webDriver.findElement(By.xpath(""//*[@id=\""su\""]"")).findElement(By.xpath(""..""));          // the following is the line while I set breakpoint         **search.click();**","closed","","tuean","2018-06-28T07:51:45Z","2019-08-15T20:10:00Z"
"","5853","Safari: probably xPath functions contains() and/or text() not work","## Meta - OS:   OSX Selenium Version:   3.8.1 and 3.11 Browser:   Safari Technology Preview Release 54 (Safari 11.2, WebKit 13606.1.13.2)  Hi, any idea why this xpath not function in Safari webdriver? but in chrome is OK. ""//text()[contains(.,'SomeText')]/parent::*"" ""//h2[text()[contains(.,'SomeText')]]"" ""//h2[contains(text(),'SomeText')]""  but directly in Safari ( open manually Safari > Develop > Show Javascript Console) these xpaths work? I have suspicious of a faulty implementation feature contains or/and text.  Example test: it(""test step"", () => {   const xpathSelector = ""//h2[contains(text(),'SomeText ')]""   browser.waitForExist(xpathSelector)    browser.scroll(xpathSelector, 0, -250)   browser.pause(3000)   browser.waitForVisible(xpathSelector)   browser.click(xpathSelector) })  Commands waitForExist and scroll work correctly, but waitForVisible and click no.  ----------------  00:28:19.444 INFO - To upstream: {""using"":""xpath"",""value"":""//h2[contains(text(),'SomeText')]""} 00:28:19.448 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":[{""ELEMENT"":""node-03AEAF42-A401-4A4B-9C7B-3FC44B660242""}]} 00:28:19.450 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:19.450 INFO - Handler thread for session C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (safari): Executing GET on /session/C0C166C0-B8D1-4B27-96D2-CB44D32CCD20/element/node-03AEAF42-A401-4A4B-9C7B-3FC44B660242/displayed (handler: ServicedSession) 00:28:19.454 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":false} 00:28:19.945 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:19.945 INFO - Handler thread for session C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (safari): Executing POST on /session/C0C166C0-B8D1-4B27-96D2-CB44D32CCD20/elements (handler: ServicedSession) 00:28:19.945 INFO - To upstream: {""using"":""xpath"",""value"":""//h2[contains(text(),'SomeText')]""} 00:28:19.949 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":[{""ELEMENT"":""node-03AEAF42-A401-4A4B-9C7B-3FC44B660242""}]} 00:28:19.951 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:19.951 INFO - Handler thread for session C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (safari): Executing GET on /session/C0C166C0-B8D1-4B27-96D2-CB44D32CCD20/element/node-03AEAF42-A401-4A4B-9C7B-3FC44B660242/displayed (handler: ServicedSession) 00:28:19.955 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":false} 00:28:20.444 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:20.444 INFO - Handler thread for session C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (safari): Executing POST on /session/C0C166C0-B8D1-4B27-96D2-CB44D32CCD20/elements (handler: ServicedSession) 00:28:20.445 INFO - To upstream: {""using"":""xpath"",""value"":""//h2[contains(text(),'SomeText')]""} 00:28:20.449 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":[{""ELEMENT"":""node-03AEAF42-A401-4A4B-9C7B-3FC44B660242""}]} 00:28:20.451 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:20.451 INFO - Handler thread for session C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (safari): Executing GET on /session/C0C166C0-B8D1-4B27-96D2-CB44D32CCD20/element/node-03AEAF42-A401-4A4B-9C7B-3FC44B660242/displayed (handler: ServicedSession) 00:28:20.455 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":false} 00:28:20.505 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:20.505 INFO - Handler thread for session C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (safari): Executing DELETE on /session/C0C166C0-B8D1-4B27-96D2-CB44D32CCD20 (handler: ServicedSession) 00:28:20.507 INFO - To downstream: {""status"":0,""sessionId"":""C0C166C0-B8D1-4B27-96D2-CB44D32CCD20"",""value"":{}} 00:28:20.507 INFO - Removing session org.openqa.selenium.remote.server.ServicedSession@6f5093bb 00:28:20.513 INFO - To downstream: A session with id = 'C0C166C0-B8D1-4B27-96D2-CB44D32CCD20' was not found.   -----------------  ## The problem  Hi, any idea why this xpath not function in Safari webdriver? but in chrome is OK. `""//text()[contains(.,'SomeText')]/parent::*""` `""//h2[text()[contains(.,'SomeText')]]""` `""//h2[contains(text(),'SomeText')]""`  but directly in Safari ( open manually Safari > Develop > Show Javascript Console) these xpaths work? I have suspicious of a faulty implementation feature contains or/and text.  ## Link to Selenium logs https://gist.github.com/rdpanek/48bb5dba9d86a9a9308e736a273bec06  ## Code To Reproduce Issue [ Good To Have ] ``` it(""test step"", () => {   const xpathSelector = ""//h2[contains(text(),'SomeText ')]""   browser.waitForExist(xpathSelector)    browser.scroll(xpathSelector, 0, -250)   browser.pause(3000)   browser.waitForVisible(xpathSelector)   browser.click(xpathSelector) }) ``` Commands waitForExist and scroll work correctly, but waitForVisible and click no.  ``` 00:50:46.202 INFO - To upstream: {""using"":""xpath"",""value"":""//h2[contains(text(),'SomeText')]""} 00:50:46.205 INFO - To downstream: {""status"":0,""sessionId"":""5490DE85-4B33-4EA7-BCE2-9501EEEA62C8"",""value"":[{""ELEMENT"":""node-66B75EB7-F972-4421-BE79-C9688BC2C472""}]} 00:50:46.207 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@61726b5a 00:50:46.208 INFO - Handler thread for session 5490DE85-4B33-4EA7-BCE2-9501EEEA62C8 (safari): Executing GET on /session/5490DE85-4B33-4EA7-BCE2-9501EEEA62C8/element/node-66B75EB7-F972-4421-BE79-C9688BC2C472/displayed (handler: ServicedSession) 00:50:46.211 INFO - To downstream: {""status"":0,""sessionId"":""5490DE85-4B33-4EA7-BCE2-9501EEEA62C8"",""value"":false} 00:50:46.308 INFO - Found handler: org.openqa.selenium.remote.server.ServicedSession@61726b5a 00:50:46.308 INFO - Handler thread for session 5490DE85-4B33-4EA7-BCE2-9501EEEA62C8 (safari): Executing DELETE on /session/5490DE85-4B33-4EA7-BCE2-9501EEEA62C8 (handler: ServicedSession) 00:50:46.310 INFO - To downstream: {""status"":0,""sessionId"":""5490DE85-4B33-4EA7-BCE2-9501EEEA62C8"",""value"":{}} 00:50:46.310 INFO - Removing session org.openqa.selenium.remote.server.ServicedSession@61726b5a 00:50:46.312 INFO - To downstream: A session with id = '5490DE85-4B33-4EA7-BCE2-9501EEEA62C8' was not found. ```","closed","","rdpanek","2018-05-02T23:04:07Z","2019-08-16T03:09:56Z"
"","6619","java.lang.NoClassDefFoundError: org/openqa/selenium/support/ui/Clock","## Meta - OS:   OSX Selenium Version:   3.141.0 Browser:   appiumdriver  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior -  ## Actual Behavior - Skipping all the test cases because of Clock class is removed. What i need to change in my existing code after removing of Clock Class?  ## Steps to reproduce -","closed","","ashdwd","2018-11-05T09:22:18Z","2019-08-15T06:09:49Z"
"","6077","[rb] selenium-webdriver 3.13.0 gives DevToolsActivePort file doesn't exist error","## Meta - OS:   OSX Selenium Version:   3.13.0  Browser:   Chrome   Browser Version:   chromedriver=2.40.565383  ## Expected Behavior - No error  ## Actual Behavior - ``` Selenium::WebDriver::Error::UnknownError:        unknown error: DevToolsActivePort file doesn't exist          (Driver info: chromedriver=2.40.565383 (76257d1ab79276b2d53ee976b2c3e3b9f335cde7),platform=Linux 4.4.0-112-generic x86_64) ``` ## Steps to reproduce -  Here's a build that fails: https://travis-ci.org/projectblacklight/blacklight/jobs/397053599 And when I pin the version of selenium-webdriver to ~> 3.12.0 the error does not occur  See: https://github.com/projectblacklight/blacklight/pull/1912 https://travis-ci.org/projectblacklight/blacklight/jobs/397060363","closed","","jcoyne","2018-06-26T21:48:02Z","2019-08-14T18:10:04Z"
"","6190","Javascript console error when Selenium Extension is installed in Chrome:  Uncaught in promise","## Meta - OS:   OSX Selenium Version:   3.1.0 Chrome Extension Browser:   Chrome  Browser Version:   Version 67.0.3396.99 (Official Build) (64-bit)  ## Expected Behavior - No console errors when loading webpage ## Actual Behavior - Javascript console error occurs: Uncaught (in promise) ""Could not establish connection. Receiving end does not exist."" ## Steps to reproduce - 1. Install Selenium web extension in Chrome. 2. Open cnn.com 3. Examine javascript console to see error mentioned above. NOTE:  This error does not seem to occur when Selenium web extension dialog is actually open.  Also, I already filed bugs with Chromedriver/chromium teams, and they told me to file bug with Selenium since they don't think it is with them. I hope this helps.   Thanks.","closed","","td2014","2018-07-21T03:28:56Z","2019-08-15T18:09:38Z"
"","6486","CORS related tests not possible with Selenium + Python + Chrome/Firefox","## Meta - OS:   OSX  Selenium Version:   1.22 Python  Browser:   Chrome  Browser Version:   69.0.3497.100  ## Expected Behavior - * Login to domain1.com * cookies for domain1 are set * Open page domain2.com in a new tab * domain2 contains a CORS request to domain1 * domian1 sets correct CORS headers 'Access-Control-Allow-Origin' and 'Access-Control-Allow-Credentials' from domain2 * domain 2 successfully sets cookies and the CORS request is succesful  This behavior works as expected when manually performing the above steps.  ## Actual Behavior - * Login to domain1.com * cookies for domain1 are set * Open page domain2.com in a new tab * domain2 contains a CORS request to domain1 * CORS request fails because the cookies for domain1 is not available in the context of domain2 when using selenium  ## Steps to reproduce - Its not possible to create a SSCCE for this, so i'm providing a code snippet of what i'm trying to achieve.  ` options = webdriver.ChromeOptions()         print url          browser = webdriver.Chrome(executable_path=""./chromedriver"")                  browser.get(""http://127.0.0.1:8080/"")         print browser.title         browser.find_element_by_name('username').send_keys(""admin"")         browser.find_element_by_name(""password"").send_keys(""hunter2"")         browser.find_element_by_tag_name(""button"").click()         print browser.get_cookies()         #shows cookies correctly          print 'loading cors page: ' + url         browser.execute_script(""window.open('%s');"" %url)         #chrome web console shows that the request failed because it failed to set the cookies`","closed","R-awaiting answer,","asudhak","2018-10-05T22:38:45Z","2019-08-14T18:09:39Z"
"","6196","New windows were blocked in WIN10 1803 IE11","## Meta - OS:   OS: Windiws10 1803 Browser: Internet Explorer  11 Browser Version: 11.165.17134.0 Driver : IEDriverServer 3.13  ## Expected Behavior -      I use webdriver to open a page, and click a link like xxxx, before win10 1803, it can open a new window. ## Actual Behavior -     But now, seems all new windows were blocked, but I can see new internet explorer processes appeared in task manager.  ## Steps to reproduce -    I tried all ways I can searched: disabled IE popup blocker,  add reg item:PopupMgr=no , change previous driver versions. but can not work for all.","closed","","shijie262","2018-07-24T00:31:52Z","2019-08-15T07:09:58Z"
"","6372","Out of Memory Error in distributed testing","## Meta - OS:   Node: Win10 Hub: Win8  Selenium Version:   V3.6.0  Browser:   Chrome 61.0.3163.31  ## Expected Behavior -  I have used testNG + Selenium Grid to test my web app.  The node prompted the following:  java.lang.OutOfMemoryError: Java heap space  after my testing program was been running for two days, then the thread is stopped.   My web appp is a complex query program, which depends on a store procedure. and my testing environment is as following: 1 Hub 3 Nodes 6 threads ( 2 threads/ per node)  ## Actual Behavior - May be I should set JAVA_OPTS=-Xms64m -Xmx512m for solving it, but how can i do if I use more computer to be my client nodes?  ## Steps to reproduce - 1. Starting selenium hub and node 2. Running testng.xml for several days, then testing.","closed","","ecamy","2018-09-06T11:21:46Z","2019-08-15T12:10:00Z"
"","6585","Error in initialising WebDriver via selenium-firefox-driver","## Meta - OS:   macOs HighSierra Selenium Version:   3.4.0,  IDE, Intellij Browser:   Firefox Language: Java  ## Expected Behavior - Exception-less initialization of web driver ## Actual Behavior - Receiving exception in initialization. Below is the stack trace , which is giving : Exception in thread ""main"" org.openqa.selenium.InvalidArgumentException: unknown field `page load`, expected one of `implicit`, `pageLoad`, `script` at line 1 column 12   ` Oct 26, 2018 9:35:07 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: OSS Exception in thread ""main"" org.openqa.selenium.InvalidArgumentException: unknown field `page load`, expected one of `implicit`, `pageLoad`, `script` at line 1 column 12 Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'WIN-R1JBAO1CNPS', ip: '10.100.52.188', os.name: 'Windows Server 2008 R2', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=C:\Users\Administrator\AppData\Local\Temp\rust_mozprofile.sTRSBvwTLBSx, rotatable=false, moz:geckodriverVersion=0.23.0, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, moz:headless=false, platform=ANY, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, acceptInsecureCerts=true, browserVersion=63.0, platformVersion=6.1, moz:processID=1748.0, browserName=firefox, javascriptEnabled=true, platformName=windows, setWindowRect=true, moz:webdriverClick=true}] Session ID: XXXXXXXX-XXXX-XXXX-XXXX-XXXXb1578513 Command duration or timeout: 562 milliseconds 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:215) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:167) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:880) 	at selenium.ScreenshotService.createWebDriver(ScreenshotService.java:63) 	at selenium.ScreenshotService.main(ScreenshotService.java:71) Caused by: org.openqa.selenium.InvalidArgumentException: unknown field `page load`, expected one of `implicit`, `pageLoad`, `script` at line 1 column 12 Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'WIN-R1JBAO1CNPS', ip: '10.100.52.188', os.name: 'Windows Server 2008 R2', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{moz:profile=C:\Users\Administrator\AppData\Local\Temp\rust_mozprofile.sTRSBvwTLBSx, rotatable=false, moz:geckodriverVersion=0.23.0, timeouts={implicit=0.0, pageLoad=300000.0, script=30000.0}, pageLoadStrategy=normal, unhandledPromptBehavior=dismiss and notify, moz:headless=false, platform=ANY, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, acceptInsecureCerts=true, browserVersion=63.0, platformVersion=6.1, moz:processID=1748.0, browserName=firefox, javascriptEnabled=true, platformName=windows, setWindowRect=true, moz:webdriverClick=true}] Session ID: XXXXXXXX-XXXX-XXXX-XXXX-XXXXb1578513 Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'hyd-vijayn-m.ds.ad.adp.com', ip: 'fe80:0:0:0:d:cdb6:676b:4f63%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.5', java.version: '1.8.0_144' Driver info: driver.version: RemoteWebDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:150) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:115) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:45) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.pageLoadTimeout(RemoteWebDriver.java:880) 	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringTimeouts.pageLoadTimeout(EventFiringWebDriver.java:570) 	at org.openqa.selenium.remote.server.handler.ConfigureTimeout.call(ConfigureTimeout.java:50) 	at org.openqa.selenium.remote.server.handler.ConfigureTimeout.call(ConfigureTimeout.java:27) 	at java.util.concurrent.FutureTask.run(Unknown Source) 	at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) 	at java.lang.Thread.run(Unknown Source) ` ## Steps to reproduce - add maven dependency :  `         org.seleniumhq.selenium         selenium-firefox-driver         3.4.0 `  use this code snippet in a java class say ScreenshotService.java `      private WebDriver createWebDriver(String sauceLabsUsername, String sauceLabsKey, String sauceLabsUrl) throws MalformedURLException {         String finalUrl = ""http://"" + sauceLabsUsername + "":"" + sauceLabsKey + ""@"" + sauceLabsUrl;          URL remoteAddress =  new URL(finalUrl);          DesiredCapabilities desiredCapabilities = DesiredCapabilities.firefox();         desiredCapabilities.setCapability(""recordVideo"", false); // Prevent SauceLabs from creating unnecessary video.         desiredCapabilities.setCapability(""recordScreenshots"", false); // Prevent SauceLabs from creating unnecessary screenshots.         desiredCapabilities.setCapability(""screenResolution"", ""1920x1080"");         WebDriver driver = new RemoteWebDriver(remoteAddress, desiredCapabilities);         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);          return driver;     }      public static void main(String... args){         ScreenshotService screenshotService = new ScreenshotService();         try {             screenshotService.createWebDriver(SAUCE_LABS_USERNAME, SAUCE_LABS_KEY, SAUCE_LABS_URL);         } catch (MalformedURLException e) {             e.printStackTrace();         }     }   ` You can insert proper values for these variables : SAUCE_LABS_USERNAME, SAUCE_LABS_KEY, SAUCE_LABS_URL Please let me know if you need anything else and keep me posted","closed","","NiksVij","2018-10-26T16:30:48Z","2019-08-15T07:09:39Z"
"","6244","when the Android webview have two html，the pageSource only response first html","## Meta - OS:   macOS 10.13.6  Browser:   chrome  ## problem - when webview have more html,i only get the first html DOM,how i can get other html DOM and operate click on other html?   From the chromelog  i get three html page. the first is preload page,so it  has no full DOM. If i send websocket request ,i can get full DOM in the second HTML,but if i want to send tap to the second html in appium,the error is 'element is not attached to the page document'. that is to say i only get the first html page source,eventhough i get seconde html full DOM tree by websocket request,I can't click it  ## Details  i find how to start chromedriver in appium log  ``` ./chromedriver --url-base=wd/hub --port=8000 --adb-port=5037 --verbose ``` send session request ``` url = ""http://127.0.0.1:8000/wd/hub/session""     params = {         ""desiredCapabilities"":              {             ""chromeOptions"":                  {                  ""androidUseRunningApp"": True,                  ""androidDeviceSerial"": ""570ee645"",                 ""androidPackage"": ""com.tencent.mm"",                 ""androidProcess"": ""com.tencent.mm:tools"",                  }             }         } ```  and i can get the session information: ``` {     u 'status': 0, u 'sessionId': u '63a37e204ab8219aaefb7047423522f1', u 'value': {         u 'rotatable': False,         u 'unexpectedAlertBehaviour': u '',         u 'browserConnectionEnabled': False,         u 'acceptSslCerts': True,         u 'cssSelectorsEnabled': True,         u 'chrome': {             u 'chromedriverVersion': u '2.29.461585 (0be2cd95f834e9ee7c46bcc7cf405b483f5ae83b)'         },         u 'javascriptEnabled': True,         u 'version': u '57.0.2987.132',         u 'databaseEnabled': False,         u 'hasTouchScreen': True,         u 'takesScreenshot': True,         u 'platform': u 'ANDROID',         u 'browserName': u 'chrome',         u 'mobileEmulationEnabled': False,         u 'nativeEvents': True,         u 'applicationCacheEnabled': False,         u 'webStorageEnabled': True,         u 'pageLoadStrategy': u 'normal',         u 'locationContextEnabled': True,         u 'handlesAlerts': True,         u 'takesHeapSnapshot': True     } } ```  and then send source request in chrome  when the page rendering ``` http://127.0.0.1:8000/wd/hub/session/63a37e204ab8219aaefb7047423522f1/source ```  the chrome response as follows ``` { sessionId: ""63a37e204ab8219aaefb7047423522f1"", status: 0, value: ""                 var points = [];         points[0] = new Date().getTime();         var oldPoint = [];         oldPoint[0] = new Date().getTime();               搜一搜                                                                                                                                        按钮                 跳history                                                                                                                                                                    "", } ```","closed","","a67c","2018-08-03T09:11:43Z","2019-08-15T16:09:47Z"
"","6311","[Grid] Clicking ""view config"" on Console jumps to top of page","## Meta - OS:   macOS 10.12.6 Selenium Version:   3.13.0 Browser:   Chrome  Browser Version:   latest  ## Expected Behavior - Clicking ""view config"" on the Grid Console should not reload the page and jump to the top  ## Actual Behavior - Clicking ""view config"" on the Grid Console reloads the page and jumps to the top  ## Steps to reproduce - 1) Launch hub 2) Connect many nodes to the hub 3) Click ""view config"" - you'll be jumped to the top","closed","C-grid,","dylanlive","2018-08-20T23:45:39Z","2019-08-15T10:09:51Z"
"","5844","AddonFormatError: Couldn't find manifest.json in modify_headers.xpi","## Meta - OS:   macOS Selenium Version:   Selenium server version: 3.11.0, revision: e59cfb3 Browser:   Firefox 56  We are currently rewriting a selenium based scrapper from python in nodeJS. We need to install a .xpi extension to Firefox 56 from file. We use the python function ""add_extension"" and everything works. With the same file using node JS and the ""addExtensions('modify_headers.xpi')"" function we get a strange error documented below.  Browser Version:   Firefox 56  ## Expected Behavior - Install the modify_heraders application  ## Actual Behavior - throws error: ``` Options {   map_:    Map {      'browserName' => 'firefox',      'moz:firefoxOptions' => { profile: [Profile], prefs: [Object], args: [Array] } } } (node:4997) UnhandledPromiseRejectionWarning: AddonFormatError: Couldn't find manifest.json in modify_headers.xpi ``` ## Steps to reproduce - Using the node js API try to install a plugin.","closed","","JannikZed","2018-04-30T17:20:23Z","2019-08-16T03:10:01Z"
"","5953","SendKeys doesnot work on on Mac OSX with latest Firefox and selenium 3.5.","## Meta - OS:   Mac OSX 10.12  Selenium Version:   3.5  Python 2.7  Browser:   Firefox 60.0.1  Gecko driver version: 0.20.1     Browser Version:   Firefox 60.0.1  ## Expected Behavior - Sendkeys should work on Firefox.  ## Actual Behavior - sendKeys is not working.  ## Steps to reproduce - 1.Copy some data from text file. 2.Launch firefox through selenium. 3.Launch URL of any website having textarea. 4.Through selenium (Python binding) send keys send the key 'cmd+v' on firefox.  Please find the attached logs for details. [geckodriver.log](https://github.com/SeleniumHQ/selenium/files/2049291/geckodriver.log)   This was working with earlier selenium version and Firefox versions(prior versions like Firefox 46 or 48). Please note I also tested the same with Geckodriver 0.18.0 and Firefox 57 ,but the same problem persists.","closed","C-py,","parshudhole","2018-05-29T16:47:25Z","2019-08-15T23:09:35Z"
"","5863","Selenium Chrome driver fails to find button in headless mode","## Meta - OS:   Mac OS X 10.10.5 x86_64 Selenium Version:   selenium 3.11.0 Browser:   chromedriver=2.38.551581 Chrome Version 65.0.3325.181  ## Expected Behavior - Should have found the confirm button in the page  ## Actual Behavior -  Succeed in finding the element without `headless` option but get the following error if use `headless` option.   ``` NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""* /deep/ #clearBrowsingDataConfirm""}   (Session info: headless chrome=66.0.3359.139)   (Driver info: chromedriver=2.38.551581 (2c9c29527ada10af4745ab26dd000ebb6d5e055e),platform=Mac OS X 10.10.5 x86_64) ```  ## Trace  ``` NoSuchElementException                    Traceback (most recent call last)  in () ----> 1 rd.clear_cache()  /Users/YangYaokai/mycodes/DetectingPhishingWebsites/DataCollection/libs/redirection.py in clear_cache(self)      92      93         # wait for the button to appear ---> 94         wait = WebDriverWait(self.driver, 60)      95         wait.until(self.get_clear_browsing_button())      96  /Users/YangYaokai/mycodes/DetectingPhishingWebsites/DataCollection/libs/redirection.py in get_clear_browsing_button(self)      82         Find the 'Clear browsing data' confirm button on the setting page.      83         :return: The button encapsulated in a `selenium.webdriver.remote.webelement.WebElement` object. ---> 84         """"""      85         return self.driver.find_element_by_css_selector('* /deep/ #clearBrowsingDataConfirm')      86  /usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in find_element_by_css_selector(self, css_selector)     587             element = driver.find_element_by_css_selector('#foo')     588         """""" --> 589         return self.find_element(by=By.CSS_SELECTOR, value=css_selector)     590     591     def find_elements_by_css_selector(self, css_selector):  /usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in find_element(self, by, value)     953         return self.execute(Command.FIND_ELEMENT, {     954             'using': by, --> 955             'value': value})['value']     956     957     def find_elements(self, by=By.ID, value=None):  /usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.pyc in execute(self, driver_command, params)     310         response = self.command_executor.execute(driver_command, params)     311         if response: --> 312             self.error_handler.check_response(response)     313             response['value'] = self._unwrap_value(     314                 response.get('value', None))  /usr/local/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.pyc in check_response(self, response)     240                 alert_text = value['alert'].get('text')     241             raise exception_class(message, screen, stacktrace, alert_text) --> 242         raise exception_class(message, screen, stacktrace)     243     244     def _value_or_default(self, obj, key, default):  NoSuchElementException: Message: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""* /deep/ #clearBrowsingDataConfirm""}   (Session info: headless chrome=66.0.3359.139)   (Driver info: chromedriver=2.38.551581 (2c9c29527ada10af4745ab26dd000ebb6d5e055e),platform=Mac OS X 10.10.5 x86_64) ```  ## Steps to reproduce -  ```Python options = webdriver.ChromeOptions() options.add_argument('--headless') options.add_argument(""--window-size=1920,1080"")  driver = webdriver.Chrome( chrome_options=options) driver.get('chrome://settings/clearBrowserData') driver.find_element_by_css_selector('* /deep/ #clearBrowsingDataConfirm').click() ```","closed","","YaokaiYang-assaultmaster","2018-05-06T19:59:01Z","2019-08-16T03:09:42Z"
"","6024","Change of artifactId Selenium-java.jar from 3.3.1 to 3.4 causing a ton of 'can not be accessed' errors in my maven project","## Meta - OS:   MAC OS Sierra  Selenium Version:   3.X Browser:   Not Applicable We are running a Selenium 3.3.1 project with many dependencies(given in a pom.xml file) as part of a maven project. Only when we change the version of artifactId Selenium-java from 3.3.1 to 3.4, all started crumbling. A ton of 'not accessible' errors came up for By, Select, Keys etc. kind of regular Selenium classes. Some other classes like WebDriver, WebElement etc are resolving just fine.   No matter whether we clean,build,install the Maven project the errors won't go away. I even removed the entire .m2 folder and refreshed the project, for no avail.  When I either moved back to artifactId version 3.3.1 or go to a higher version 3.12.0, every thing compiles just fine. Is there any particular problem with artifactId Selenium-java 3.4.0? I am using Eclipse Oxygen.  ## Expected Behavior - With the change in the artifactId selenium-java from 3.3.1 to 3.4.0, all the new jars should be downloaded and the existing code should be seemlessly compiling with out errors. ## Actual Behavior - Regular Selenium Java classes imports like BY, Select, Keys, JavaScriptExecutor are throwing not resolved errors, while some other classes like WebDriver, WebElement are getting resolved just fine. ## Steps to reproduce -  ![image](https://user-images.githubusercontent.com/20956177/41449616-a97f3778-7027-11e8-9290-dc3570115f0a.png)  ![image](https://user-images.githubusercontent.com/20956177/41449672-168b1698-7028-11e8-8d18-f36e1a54dda2.png)  ![image](https://user-images.githubusercontent.com/20956177/41449693-3df8c96e-7028-11e8-95e6-8e1e48dec838.png)","closed","","PrasadNutalapati","2018-06-15T04:07:31Z","2019-08-15T22:09:50Z"
"","6275","custom tag in config file results in GridConfigurationException","## Meta - OS:   Linux Selenium Version:   3.14 Browser:   Any  Browser Version:     ## Expected Behavior - User should be able to pass custom information in config file ## Actual Behavior - Parsing error occurs when there is cusom information ## Steps to reproduce - as per default [json](https://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json) one can pass custom configuration to selenium grid. Selenium grid extra passes this custom information to selenium grid. Refer the below json. As per the above link its valid  ``` {   ""capabilities"": [     {       ""seleniumProtocol"": ""WebDriver"",       ""extension.sikuliCapability"": true,       ""browserName"": ""firefox"",       ""maxInstances"": 1,       ""version"": ""61"",       ""platform"": ""LINUX""     },     {       ""seleniumProtocol"": ""WebDriver"",       ""extension.sikuliCapability"": true,       ""browserName"": ""chrome"",       ""maxInstances"": 1,       ""version"": ""68"",       ""platform"": ""LINUX""     }   ],   ""loadedFromFile"": ""node_5555.json"",   ""proxy"": ""com.groupon.seleniumgridextras.grid.proxies.SetupTeardownProxy"",   ""servlets"": [     ""io.sterodium.extensions.node.SikuliExtensionServlet"",     ""io.sterodium.extensions.node.upload.FileUploadServlet"",     ""io.sterodium.extensions.node.download.FileDownloadServlet""   ],   ""maxSession"": 1,   ""port"": 5555,   ""register"": true,   ""unregisterIfStillDownAfter"": 60000,   ""hubPort"": 4444,   ""hubHost"": ""selenium-grid-hub.service"",   ""registerCycle"": 5000,   ""custom"": {     ""grid_extras_port"": 3000   },   ""downPollingLimit"": 2 } ``` Now run the selenium grid 3.14.0 ``` java  \ -Dwebdriver.chrome.driver=/tmp/webdriver/chromedriver/chromedriver_2.41_64bit -Dwebdriver.gecko.driver=/tmp/webdriver/geckodriver/geckodriver_0.21.0 \ -cp /opt/selenium_ex/SeleniumGridExtras-jar-with-dependencies.jar:/tmp/webdriver/3.14.0.jar \ org.openqa.grid.selenium.GridLauncherV3 \ -role node -nodeConfig node_5555.json -log log/node_5555.log ``` I get below call stack ```  exit code: 1  standard error:  Exception in thread ""main"" org.openqa.grid.common.exception.GridConfigurationException: Error with the JSON of the config : Expected value to be a string type: NUMBER Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:13:22.693Z' System info: host: 'af620a76c11c', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-31-generic', java.version: '1.8.0_181' Driver info: driver.version: unknown         at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:422)         at org.openqa.grid.internal.utils.configuration.GridNodeConfiguration.loadFromJSON(GridNodeConfiguration.java:390)         at org.openqa.grid.internal.cli.GridNodeCliOptions.toConfiguration(GridNodeCliOptions.java:228)         at org.openqa.grid.internal.cli.GridNodeCliOptions.toConfiguration(GridNodeCliOptions.java:35)         at org.openqa.grid.selenium.GridLauncherV3.launch(GridLauncherV3.java:114)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:81) ``` Notice the error message here. Its very cryptic. I cant figureout which tag is causing the issue. If it throws proper error....ONLY then its helpful If one gets expected value to be integer then how one can narrowdown to particular tag in config. If I remove ```   ""custom"": {     ""grid_extras_port"": 3000   } ``` selenium grid works fine. Please fix the issue so that we can pass custom information to the grid","closed","C-grid,","shankarkc","2018-08-13T09:51:04Z","2019-08-15T14:10:03Z"
"","6217","[Python][Chrome] Vendor specific commands not available with Remote webdriver","## Meta - OS:   Linux Selenium Version:   3.13, Python bidings Browser:   Chrome  Browser Version:   ChromeDriver 2.40.565383, Chrome 66  ## Expected Behavior - `set_network_conditions` and `get_network_conditions` work properly and in the same way on local and remote browsers.  ## Actual Behavior - For remote Chrome browsers an exception is thrown: ```AttributeError: 'WebDriver' object has no attribute 'set_network_conditions'```  ## Steps to reproduce - ```python from selenium.webdriver import Remote, Chrome  # works fine locally Chrome().set_network_conditions(latency=5, throughput=5000)  # should also work on selenium/standalone-chrome Docker image on localhost:4444/wd/hub caps = desired_capabilities={'browserName':'chrome'} Remote(desired_capabilities=caps).set_network_conditions(latency=5, throughput=5000)  Traceback (most recent call last):   File """", line 1, in      Remote(desired_capabilities=caps).set_network_conditions(latency=5, throughput=5000) AttributeError: 'WebDriver' object has no attribute 'set_network_conditions' ``` What is the correct way to implement it?","closed","C-py,","tomaszn","2018-07-28T18:07:04Z","2019-08-15T17:09:49Z"
"","5950","Getting ""org.openqa.selenium.WebDriverException: Error forwarding the new session Error forwarding the request Connect to"" connecting hub with node","## Meta - OS:   Linux Selenium Version:   3.12 Browser:   Chrome V66,     chromedriver 2.38  Following is my Grid configuration: Hub(Linux) runs on Jenkins machine(**https://jenkins.us.abc.edu**) with Selenium Grid Jenkins plugin.  Now i am trying to register my Node with json like below and starting Node: **java -jar -Dwebdriver.chrome.driver=chromedriver selenium-rver-standalone-3.12.0.jar -role node -nodeConfig node.json**  node.json ``` {   ""capabilities"":   [     {       ""browserName"": ""firefox"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver""     },     {       ""browserName"": ""chrome"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver""     },     {       ""browserName"": ""internet explorer"",       ""maxInstances"": 1,       ""seleniumProtocol"": ""WebDriver""     }   ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 5,   **""port"": 17946,**   ""register"": true,   ""registerCycle"": 5000,   **""hub"": ""http://jenkins.us.abc.edu:4444"",**   ""nodeStatusCheckTimeout"": 5000,   ""nodePolling"": 5000,   ""role"": ""node"",   ""unregisterIfStillDownAfter"": 60000,   ""downPollingLimit"": 2,   ""debug"": false,   ""servlets"" : [],   ""withoutServlets"": [],   ""custom"": {} } ```  Following is Node console: ``` [uanem@usv-selapp-01 ~]$ java -jar -Dwebdriver.chrome.driver=chromedriver selenium-rver-standalone-3.12.0.jar -role node -nodeConfig node.json 09:37:49.054 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.12.0', revision: '7c6e0b3' 09:37:49.059 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 17946 2018-05-28 09:37:49.175:INFO::main: Logging initialized @490ms to org.seleniumhq.jetty9.util.log.StdErrLog 09:37:49.324 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 17946 09:37:49.324 INFO [GridLauncherV3$3.launch] - Selenium Grid node is up and ready to register to the hub 09:37:49.332 INFO [SelfRegisteringRemote$1.run] - Starting auto registration thread. Will try to register every 5000 ms. 09:37:49.332 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://jenkins.us.umuc.edu:4444/grid/register 09:37:50.866 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 09:37:50.965 WARN [SelfRegisteringRemote.registerToHub] - error getting the parameters from the hub. The node may end up with wrong timeouts.hudson.plugins.selenium.JenkinsCapabilityMatcher could not be coerced to instance Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'usv-selapp-01.us.umuc.edu', ip: '10.190.33.90', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.el7.x86_64', java.version: '1.8.0_144' Driver info: driver.version: unknown 09:37:50.965 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 09:39:11.333 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://jenkins.us.umuc.edu:4444/grid/register 09:39:11.392 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 09:39:11.404 WARN [SelfRegisteringRemote.registerToHub] - error getting the parameters from the hub. The node may end up with wrong timeouts.hudson.plugins.selenium.JenkinsCapabilityMatcher could not be coerced to instance Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'usv-selapp-01.us.umuc.edu', ip: '10.190.33.90', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.el7.x86_64', java.version: '1.8.0_144' Driver info: driver.version: unknown 09:39:11.405 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 09:40:31.602 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://jenkins.us.umuc.edu:4444/grid/register 09:40:31.632 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 09:40:31.642 WARN [SelfRegisteringRemote.registerToHub] - error getting the parameters from the hub. The node may end up with wrong timeouts.hudson.plugins.selenium.JenkinsCapabilityMatcher could not be coerced to instance Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'usv-selapp-01.us.umuc.edu', ip: '10.190.33.90', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.el7.x86_64', java.version: '1.8.0_144' Driver info: driver.version: unknown 09:40:31.642 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 09:41:51.809 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://jenkins.us.umuc.edu:4444/grid/register 09:41:51.850 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 09:41:51.856 WARN [SelfRegisteringRemote.registerToHub] - error getting the parameters from the hub. The node may end up with wrong timeouts.hudson.plugins.selenium.JenkinsCapabilityMatcher could not be coerced to instance Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'usv-selapp-01.us.umuc.edu', ip: '10.190.33.90', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.el7.x86_64', java.version: '1.8.0_144' Driver info: driver.version: unknown 09:41:51.856 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use ```  **Here i could see the node is connected hub in my Jenkins Selenium Grid page at ""10.190.33.90""**  Following is my sample script: ``` @Test 	public void GoogleTest() throws Exception 	{ 		 		System.out.println(""I am in test""); 		 		DesiredCapabilities capabilities = DesiredCapabilities.chrome(); 		  		 		System.out.println(""I am after setting chromedriver path ""); 		 		**remoteWD = new RemoteWebDriver(new URL(""http://usv-bmsapp-01.us.abc.edu:4444/wd/hub""), capabilities);** 		**//remoteWD = new RemoteWebDriver(new URL(""https://jenkins.us.abc.edu:4444/wd/hub""), capabilities);**  		//remoteWD = new ChromeDriver();  		 		System.out.println(""I am after RMD""); 		 		remoteWD.get(""http://www.google.com"");  		WebElement element = remoteWD.findElement(By.name(""q"")); 		element.sendKeys(""Selenium WebDriver"");  		element.submit(); 		Thread.sleep(10000); 		System.out.println(remoteWD.getTitle()); 		remoteWD.quit(); 		 	} ``` Due to security reasons or whatever i am not able to connect **""https://jenkins.us.abc.edu:4444/wd/hub""**, but when i give the server name like this **""http://usv-bmsapp-01.us.abc.edu:4444/wd/hub""** I am able to connect.  Following is the error message i am getting. Can someone help me where i am going wrong??? ``` Running gridtest.GridTest Configuring TestNG with: org.apache.maven.surefire.testng.conf.TestNG652Configurator@7dc5e7b4 I am before test I am in test I am after setting chromedriver path  Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 95.6 sec","closed","R-awaiting answer,","udayanem","2018-05-28T10:16:36Z","2019-08-15T21:09:47Z"
"","6156","require('selenium-webdriver/firefox').Profile is undefined","## Meta - OS:   Linux Selenium Version:   ""selenium-webdriver"": ""^4.0.0-alpha.1"", Browser:   Firefox  I use node js selenium-webdriver. Just try to use console.log(require('selenium-webdriver/firefox').Profile) Output: undefined I want it to use setPreference.","closed","","iterprise","2018-07-13T12:14:20Z","2019-08-15T19:09:35Z"
"","6395","Missing thread in distributed test using Selenium grid.","## Meta - OS:   Hub: 1 computer, Win8 Node: 3 computer, Win10 Web application server: 2 computer, Cent OS6.6  Selenium Version:   Selenium 3.5.3  Browser:   Chrome 61   I am testing my web app using Selenium+testng.   I send 12 threads to the 3 nodes, run 4 threads on each nodes,  in which two threads are sent to app server A, and the others are sent to app server B.   When I run the test suites, some threads will stop till all testing cases were completed. I have tried to deal with it by adjusting my testing strategy, such as 2 hub testing, but failed. I repeated the testing again and again, and the max browser is 11, which is the same with your max limitation.  I also modified the maxSessions(20 or above) and  maxInstance(20), but still failed. An error example is as follows: Hub: java -jar selenium-server-standalone-3.5.3.jar -role hub -maxSession 60 Node:   java -jar selenium-server-standalone-3.5.3.jar -role node -hub http://192.168.100.1:4444/gird/register -maxSession 20 -port 5555 -browser browserName=chrome,maxInstances=12 -host 192.168.100.2  The missing threads does not run any more, and the window of these threads stop rolling still a run is ended.   Other strange experiment result confuse me, that is six threads on one computer to one application can work well, why four threads to two application does not?  ## Expected Behavior - We can solve the above by adjusting max browser  ## Actual Behavior - Not work  ## Steps to reproduce - 1. Starting 12 threads,  in which six to the server A, and six to the server B 2. At first starting 6 threads to server A, then Starting the rest to Server B, using 2 hub 3. See the result, some threads will be missing(stop till ending) , for all above two.","closed","R-awaiting answer,","ecamy","2018-09-11T20:11:41Z","2019-08-15T11:09:56Z"
"","6404","Grid (3.13.0): Node not registering successfully","## Meta - OS:   Hub - OSX Node - Windows 10 (On VirtualBox) Selenium Version:  3.13.0  ## Expected Behavior - Node should register successfully.  ## Actual Behavior - The node looks like it registers but the hub shows an error - `Broken pipe (Write failed)`   Then the node seems to keep re-registering every minute or so: ``` 23:10:00.403 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use 23:12:25.668 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://X.X.X.X:4444/grid/register ```  When I attemp to run tests (using this node) this is the output from the grid logs: ``` 16:09:41.121 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {acceptInsecureCerts: false, browserName: chrome, chrome.switches: --window-size=1920,1080, goog:chromeOptions: {args: [test-type, --window-size=1920,1080, test-type], extensions: []}, idle-timeout: 180, platform: WIN10, record-screenshots: false, version: } 16:09:41.133 DEBUG [ProxySet.getNewSession] - Available nodes: [http://X.X.X.X:4567] 16:09:46.138 DEBUG [ProxySet.getNewSession] - Available nodes: [http://X.X.X.X:4567] 16:09:51.142 DEBUG [ProxySet.getNewSession] - Available nodes: [http://X.X.X.X:4567] 16:09:56.146 DEBUG [ProxySet.getNewSession] - Available nodes: [http://X.X.X.X:4567] 16:09:57.500 DEBUG [DefaultRemoteProxy.isAlive] - Failed to check status of node: Failed to connect to /X.X.X.X:4567 16:09:57.500 INFO [DefaultRemoteProxy.onEvent] - Unregistering the node http://X.X.X.X:4567 because it's been down for 85239 milliseconds 16:09:57.500 WARN [DefaultGridRegistry.removeIfPresent] - Cleaning up stale test sessions on the unregistered node http://X.X.X.X:4567 ```  ## Steps to reproduce - - I am running the grid on my macbook using wifi connection. - On the same Macbook, using Vagrant + VirtualBox I run a node on Windows 10. Vagrantfile network config - `config.vm.network ""public_network"", bridge: ""en0: Wi-Fi (AirPort)"", ip: ""X.X.X.X""`  Has anyone ever experienced the same issue with Selenium Grid while running a node on a VirtualBox? The `Broken pipe (Write failed)` message looks like a network thing but was hoping someone has experienced this before?  I have tried experimenting with different network set ups but cannot get passed this.","closed","","lewisob","2018-09-13T06:22:55Z","2019-08-15T11:10:01Z"
"","6624","Can not modify(or insert) page source if original web page contains single quote(')","## Meta - OS:   Fedora 29 Selenium Version:   3.141.0 Browser:   Firefox (geckodriver v0.23-linux64) Browser Version:   63.0.1 (64-bit)  ## Expected Behavior - Add ` into page source by innerHTML  ## Actual Behavior - It's not work if original page source contains single quote(') due to: JavascriptException: Message: SyntaxError: unexpected token: identifier  ## Steps to reproduce - This is my test case: https://github.com/nlpsuge/SeleniumDemo/blob/master/issues/ModifyPageSourceTest.py","closed","","nlpsuge","2018-11-06T13:48:25Z","2019-08-15T05:09:59Z"
"","6202","Selenium python bindings don't work with geckodriver 0.21.0","## Meta - OS:   Fedora 28 Selenium Version:   3.13.0 (python bindings) Browser:   Firefox Browser Version:   61.0.1 (don't think this makes a difference, though) Geckodriver Version: 0.21.0  Trying to load a page often (but not always) throws a 'BadStatusLine' exception.  Downgrading to geckodriver 0.20.1 (previous version) fixes the problem.  I'm pretty sure it's a Selenium python bindings issue, as I use headless Selenium server (3.13.0) with the same version of geckodriver in other tests (in another language) and it works fine.  ## Expected Behavior - Selenium should be able to load a page  ## Actual Behavior - A 'BadStatusLine' exception is raised by python httplib, with no message (empty string)  ## Steps to reproduce - 1. Set up and activate a virtualenv with selenium==3.13.0 2. Start python with geckodriver 0.21.0 on the PATH 3. Run the following:  ```     from selenium import webdriver             driver = webdriver.Firefox()     driver.get(""http://www.python.org"")      # this line will cause the exception     driver.get(""http://foo.bar"") ```   This only seems to happen when you haven't been to the page before, hence the url in the code. Running the exception-causing line again will work, no matter what the url.","closed","","paulmdavies","2018-07-25T14:20:41Z","2019-08-15T17:09:58Z"
"","6028","org.openqa.selenium.WebDriverException: Unable to parse remote response with chrome headless","## Meta - OS:   Centos6.9 Final  Selenium Version:   3.12.0  Browser:   Google Chrome  Browser Version:   Google Chrome 67.0.3396.87   Errors: `Exception in thread ""Timer-0"" org.openqa.selenium.WebDriverException: Unable to parse remote response:  Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'host.localdomain', ip: 'Unknown', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-696.30.1.el6.x86_64', java.version: '1.8.0_171' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:111) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:207) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143) 	at com.saic.simclick.Main.getDocumentJS(Main.java:152) 	at com.saic.simclick.Main$TimerTaskCls.parserPages(Main.java:68) 	at com.saic.simclick.Main$TimerTaskCls.run(Main.java:50) 	at java.util.TimerThread.mainLoop(Timer.java:555) 	at java.util.TimerThread.run(Timer.java:505) `","closed","D-chrome,","Xinshiyou","2018-06-15T12:02:58Z","2019-08-15T18:09:49Z"
"","6549","ERROR [SeleniumServer.boot] - Port 5555 is busy","## Meta - OS:   AWS ESC linux  Selenium Version:    3.12.0 or above  Browser:  N\A  ## Expected Behavior - nodes successfully register with the hub  ## Actual Behavior - I am using the _-host_ parameter to send the private_ip of the instance that the ECS container is running on. It seems in selenium-3.12.0 or later I am getting an error   `ERROR [SeleniumServer.boot] - Port 5555 is busy, please choose a free port and specify it using -port option`  I am absolutely sure there is no other service running on that port and I don't believe it to be a port issue.  Within the entry_point.sh I am using the following: 	`export SE_OPTS=""-host $EC2_HOST -remoteHost http://$EC2_HOST:$PORT_TCP_5555 -id $NODE_ID""`  `export 'SE_OPTS=-host 10.0.2.241 -port 32770 -remoteHost http://10.0.2.241:32770 -id 7f5be9a7-b3ec-44cb-9960-95d778626605'`  the entire log looks like the following:  ``` export SE_OPTS=""-host $EC2_HOST -remoteHost http://$EC2_HOST:$PORT_TCP_5555 -id $NODE_ID"" ++ python /opt/bin/ecs-get-port-mapping.py + result='export NODE_ID='\''7af0dd2d-0ac8-4156-b16f-c45142352ff8'\''; export EC2_HOST=10.0.2.241; export PORT_TCP_5555=32769;' + eval 'export NODE_ID='\''7af0dd2d-0ac8-4156-b16f-c45142352ff8'\''; export EC2_HOST=10.0.2.241; export PORT_TCP_5555=32769;' ++ export NODE_ID=7af0dd2d-0ac8-4156-b16f-c45142352ff8 ++ NODE_ID=7af0dd2d-0ac8-4156-b16f-c45142352ff8 ++ export EC2_HOST=10.0.2.241 ++ EC2_HOST=10.0.2.241 ++ export PORT_TCP_5555=32769 ++ PORT_TCP_5555=32769 + export 'SE_OPTS=-host 10.0.2.241 -remoteHost http://10.0.2.241:32769 -id 7af0dd2d-0ac8-4156-b16f-c45142352ff8' + SE_OPTS='-host 10.0.2.241 -remoteHost http://10.0.2.241:32769 -id 7af0dd2d-0ac8-4156-b16f-c45142352ff8' + /opt/bin/entry_point.sh 2018-10-17 18:36:42,783 WARN Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing 2018-10-17 18:36:42,789 INFO supervisord started with pid 12 2018-10-17 18:36:43,791 INFO spawned: 'xvfb' with pid 15 2018-10-17 18:36:43,793 INFO spawned: 'selenium-node' with pid 16 appending selenium options: -host 10.0.2.241 -remoteHost http://10.0.2.241:32769 -id 7af0dd2d-0ac8-4156-b16f-c45142352ff8 2018-10-17 18:36:44,108 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2018-10-17 18:36:44,108 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 18:36:45.410 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0' 18:36:45.419 INFO [GridLauncherV3$3.launch] - Launching a Selenium Grid node on port 5555 2018-10-17 18:36:45.699:INFO::main: Logging initialized @1389ms to org.seleniumhq.jetty9.util.log.StdErrLog 18:36:45.956 ERROR [SeleniumServer.boot] - Port 5555 is busy, please choose a free port and specify it using -port option 2018-10-17 18:36:45,975 INFO exited: selenium-node (exit status 0; expected) ```  ## Steps to reproduce -","closed","","thetemplateblog","2018-10-17T22:27:15Z","2019-08-14T23:09:51Z"
"","6541","merging few ChromeOptions between themself gives ""goog:chromeOptions - args"" only from ""main""","## Meta - OS:   any Selenium Version:   3.8 + Browser:   chrome  I wanna merge two instance of ChromeOptions with the different args. As result i didn't get the expected behavior. I'm not sure that my expecting is correct but for me as user was expected that i got new object which would include args from 1st and 2nd instance.  ## Expected Behavior - { ""goog:chromeOptions"":      {""args"": [""one"",""two""] } } ## Actual Behavior - { ""goog:chromeOptions"":      {""args"": [""two""] } } ## Steps to reproduce - ChromeOptions one = new ChromeOptions().addArguments(""one""); ChromeOptions two = new ChromeOptions().addArguments(""two""); two.merge(one).asMap();  ## Question Is it behavior correct or it would be better change it? I got this problem in code when I tried to create RemoteWebdriver. When new session is creating the code perform this asMap() method. p.s. If change the logic is good idea I can create some MR with improve the asMap with the following idea: If toReturn contains goog:chromeOptions then combine them. Or the 2nd way update some logic for merge method.","closed","C-java,","Osmyslitelny","2018-10-16T10:49:42Z","2021-09-05T08:21:42Z"
"","6249","To the *Options classes, add an `addEnvironmentVariables` method","## Meta - OS:   All Selenium Version:   3.x Browser:   Chrome, maybe the others as well  ## Expected Behavior -  There are a pretty good number of situations when you want to set the environment variables that will be set to a driver service.  Common enough that we should probably add environment variables to the classes that inherit `MutableCapabilities`. Specially `ChromeOptions` so that uses can just use the simple paradigm:  ``` ChromeOptions options = new ChromeOptions(); options.addEnvironmentVariables(""TMPDIR"", ""/custom/tmp/dir""); ChromeDriver driver = new ChromeDriver(options); ```  We should allow this.  ## Actual Behavior -  Since we don't have that variable, it forces us to use the other paradigm to fire up a chrome driver service.  ``` ChromeDriverService chromeDriverService = new ChromeDriverService.Builder()          .usingDriverExecutable(new File(""driver_linux/chromedriver""))          .usingAnyFreePort()          .withEnvironment(ImmutableMap.of(""TMPDIR"", ""/some/other/stuff"")).build(); ```  but that requires a lot of refactoring and difficulties. Not desirable.","closed","","nddipiazza","2018-08-03T17:56:07Z","2019-08-15T16:10:01Z"
"","6312","servlets parsing logic is broken","## Meta - OS:   All Selenium Version:   3.14.0 Browser:   Any  Browser Version:   NA ## Expected Behavior -  when user specify  custom servlets selenium grid should be able to instantiate it ## Actual Behavior - Parsing logic is broken. As a result servlet names contain typos ## Steps to reproduce - Use below json file as input ``` {   ""port"": 4444,   ""newSessionWaitTimeout"": -1,   ""servlets"": [      ""io.sterodium.extensions.hub.proxy.HubRequestsProxyingServlet"",      ""com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet""    ],   ""capabilityMatcher"": ""io.sterodium.extensions.capability.CustomCapabilityMatcher"",   ""throwOnCapabilityNotPresent"": true,   ""nodePolling"": 5000,   ""cleanUpCycle"": 5000,   ""timeout"": 5000,   ""browserTimeout"": 5000,   ""maxSession"": 60 } ``` Launch hub as below  ``` java -cp c:\ai\test-grid\hub\SeleniumGridExtras-2.0.4-SNAPSHOT-jar-with-dependencies.jar;.\extension-proxy-1.0.jar;\tmp\webdriver\3.14.0.jar  org.openqa.grid.selenium.GridLauncherV3 -role hub -log log\\hub_4444.log -hubConfig hub_4444.json ``` In hub log you will see error that grid cannot create instance of the classses as below : - ``` 13:52:29.756 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.14.0', revision: 'aacccce0' 13:52:29.759 INFO [GridLauncherV3$2.launch] - Launching Selenium Grid hub on port 4444 13:52:29.790 WARN [ExtraServletUtil.createServlet] - The specified class : [io.sterodium.extensions.hub.proxy.HubRequestsProxyingServlet cannot be instantiated [io/sterodium/extensions/hub/proxy/HubRequestsProxyingServlet 13:52:29.791 WARN [ExtraServletUtil.createServlet] - The specified class :  com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet] cannot be instantiated  com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet] 13:52:29.791 WARN [ExtraServletUtil.createServlet] - The specified class : [io.sterodium.extensions.hub.proxy.HubRequestsProxyingServlet cannot be instantiated [io/sterodium/extensions/hub/proxy/HubRequestsProxyingServlet 13:52:29.793 WARN [ExtraServletUtil.createServlet] - The specified class :  com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet] cannot be instantiated  com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet] 13:52:30.921 INFO [Hub.start] - Selenium Grid hub is up and running ``` If you notice the warning classname contains a typo. 13:52:29.790 WARN [ExtraServletUtil.createServlet] - The specified class : [io.sterodium.extensions.hub.proxy.HubRequestsProxyingServlet cannot be instantiated [io/sterodium/extensions/hub/proxy/HubRequestsProxyingServlet 13:52:29.791 WARN [ExtraServletUtil.createServlet] - The specified class :  com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet] cannot be instantiated  com.ariba.es.ai.hub.proxy.servlets.SeleniumApiProxyServlet] Notice that json array **delimiter [ and ] appended** to the elements. As a result class instantiation fails.","closed","","shankarkc","2018-08-21T08:26:55Z","2019-08-15T14:09:43Z"
"","6544","Unable to run Chrome driver in parallel from multiple processes","## Meta - OS:   ``` $ uname -a Linux 4e9428835181 4.9.93-linuxkit-aufs #1 SMP Wed Jun 6 16:55:56 UTC 2018 x86_64 GNU/Linux ```  Selenium Version:  ``` $ pip freeze selenium==3.14.1 ```  Browser:  ``` Google Chrome ```  Browser Version:   ``` $ google-chrome --version Google Chrome 64.0.3282.119  ```  Chromedriver: ``` $ chromedriver --version ChromeDriver 2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881) ```  ## Expected Behavior - Be able to run Chrome in parallel (multiprocessing).  ## Actual Behavior - Not able to run Chrome in parallel (multiprocessing).  ## Steps to reproduce - 1. Get docker image: ``` $ docker pull joyzoursky/python-chromedriver:3.6-selenium ```  2. Run container: ``` $ docker run -it joyzoursky/python-chromedriver:3.6-selenium bash ```  3. Install ipython: ``` $ pip install ipython ```  4. Run ipython: ``` $ ipython ```  5. Create code snippet: ``` def test():       from selenium.webdriver import Chrome       from selenium.webdriver import ChromeOptions            options = ChromeOptions()       options.add_argument('--headless')       options.add_argument('--disable-extensions')       options.add_argument('--disable-gpu')       options.add_argument(""--no-sandbox"")       options.add_argument(""--window-size=1920,1080"")            browser = Chrome(options=options)       browser.get('http://github.com')       try:           print(browser.title)       finally:          browser.quit() ```  6. Test run (ok): ``` In [13]: test()                                                                                                                                                The world’s leading software development platform · GitHub ```  7. Now run in parallel (error): ``` In [5]: import multiprocessing                                                                                                                                 In [6]: for _ in range(3):     ...:     multiprocessing.Process(target=test).start()                                                                                                        In [7]: Process Process-2: Traceback (most recent call last):   File ""/usr/local/lib/python3.6/multiprocessing/process.py"", line 258, in _bootstrap     self.run()                                                                                                                                                   File ""/usr/local/lib/python3.6/multiprocessing/process.py"", line 93, in run     self._target(*self._args, **self._kwargs)   File """", line 15, in test     print(browser.title)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 332, in title     resp = self.execute(Command.GET_TITLE)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: chrome not reachable   (Session info: headless chrome=64.0.3282.119)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 4.9.93-linuxkit-aufs x86_64)  Process Process-3: Traceback (most recent call last):   File ""/usr/local/lib/python3.6/multiprocessing/process.py"", line 258, in _bootstrap     self.run()   File ""/usr/local/lib/python3.6/multiprocessing/process.py"", line 93, in run     self._target(*self._args, **self._kwargs)   File """", line 13, in test     browser.get('http://github.com')   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 323, in get     self.execute(Command.GET, {'url': url})   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 311, in execute     self.error_handler.check_response(response)   File ""/usr/local/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 237, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: session deleted because of page crash from unknown error: cannot determine loading status from tab crashed   (Session info: headless chrome=64.0.3282.119)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 4.9.93-linuxkit-aufs x86_64)  The world’s leading software development platform · GitHub ```  8. If I comment ` # options.add_argument(""--window-size=1920,1080"")` option it works again: ``` In [8]: for _ in range(3):     ...:     multiprocessing.Process(target=test).start()                                                                                                        In [9]: The world’s leading software development platform · GitHub The world’s leading software development platform · GitHub The world’s leading software development platform · GitHub ```  It looks like changing window size somehow affects further work with driver.  **NOTE:** It is not related to the docker image itself. You can have any other Linux image with installed chrome/chromedriver/selenium.","closed","","skudriashev","2018-10-16T18:50:12Z","2019-08-15T07:10:06Z"
"","6661","Keydown() can't effect","## Meta - OS:   < Linux > Selenium Version:   < 3.11.0 > Browser:     ## Expected Behavior -  ## Actual Behavior - Keydown(Keys.CONTROL) not effect ## Steps to reproduce -","closed","","jyfang821","2018-11-20T08:39:53Z","2019-08-15T05:09:38Z"
"","6295","Let ActionChains.pause allow pausing split seconds not just multiples of seconds","## Meta - OS:   > Ubuntu 18.04  Selenium Version:   > 3.14.0  Browser:   > Firefox 61.0.1  ## Expected Behavior - `ActionChains.(driver).pause(1.2).perform()` should accept floating numbers, not just integers, or directly ms as integer All you do is in: https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/common/actions/interaction.py Change `output[""duration""] = self.duration * 1000` to, e.g. `output[""duration""] = int(self.duration * 1000)`  ## Actual Behavior - `ActionChains.(driver).pause(1.2).perform()`  leads to: > Traceback (most recent call last): >   File ""/home/andreas/selenium-api/app/main.py"", line 29, in  >     ActionChains(driver).pause(1.2).perform() >   File ""/home/andreas/selenium-api/venv/lib/python3.6/site-packages/selenium/webdriver/common/action_chains.py"", line 80, in perform >     self.w3c_actions.perform() >   File ""/home/andreas/selenium-api/venv/lib/python3.6/site-packages/selenium/webdriver/common/actions/action_builder.py"", line 76, in perform >     self.driver.execute(Command.W3C_ACTIONS, enc) >   File ""/home/andreas/selenium-api/venv/lib/python3.6/site-packages/selenium/webdriver/remote/webdriver.py"", line 320, in execute >     self.error_handler.check_response(response) >   File ""/home/andreas/selenium-api/venv/lib/python3.6/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response >     raise exception_class(message, screen, stacktrace) > selenium.common.exceptions.InvalidArgumentException: Message: Parameter 'duration' was not a positive integer/errorhandler.py"", line 242, in check_response raise exception_class(message, screen, stacktrace) >selenium.common.exceptions.InvalidArgumentException: Message: Parameter 'duration' was not a positive integer ## Steps to reproduce -  all you have do is: ``` from selenium import webdriver from selenium.webdriver import ActionChains  profile = webdriver.FirefoxProfile() driver = webdriver.Firefox(firefox_profile=profile, executable_path=""./bins/geckodriver-v0.21.0-linux64/geckodriver"") ActionChains(driver).pause(1.2).perform() ```","closed","","mei-tech","2018-08-16T12:29:31Z","2019-08-15T14:10:01Z"
"","6629","Chromedriver 2.43 / Chrome 70 not clicking on correct coordinates inside Iframe.","## Meta - OS:    Windows All Versions Selenium Version:   2.43  Browser:   Chrome using mobile emulator  Chromedriver is not clicking properly on elements inside some Iframes, if I open the Iframe src directly everything is working properly so we can discard a bad HTML formatting.  Iframe example on https://sports.coral.co.uk/playerbets  Issue started with Chome 70, previous version (69) is working fine.    Browser Version:   70.0.3538.77  (64-bit)  ## Expected Behavior - Chrome clicking properly in elements ## Actual Behavior - Chrome clicking outside element (wrong coordinates) ## Steps to reproduce -  Switch to Iframe ""id=betBuilder"" on provided URL and try to click on any element.   Thanks.","closed","","DanielPradoPino","2018-11-07T10:15:08Z","2019-08-15T06:09:38Z"
"","6641","Node is disconnected with Hub","## Meta - OS:    Windows 7 Selenium Version:    Selenium 3.12 Browser:    Chrome 3.12    ## Steps to reproduce -  All my project source code is in BitBucket and project is setup in Jenkins. Goal is to run entire suite on a schedule time daily from Jenkins.  Hub(Linux) is running on the same Jenkins Server and Node(Windows) is getting connected to the Hub.  But the problem is, Node is disconnected with the Hub after 1-2 days, because of this, my scheduled jobs in Jenkins are failing most of the time.  How can i make sure the Hub and Node stay connected for longer days(say 30 / 50 days)?  Following is the command i am using to connect Node with Hub: `java -jar -Dwebdriver.chrome.driver=chromedriver.exe -Dwebdriver.gecko.driver=geckodriver.exe selenium-server-standalone-3.12.0.jar -role node -nodeConfig node1.json`  and following is nod1.json file content: ``` {   ""capabilities"":   [     {       ""browserName"": ""firefox"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver""     },     {       ""browserName"": ""chrome"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver""     },     {       ""browserName"": ""internet explorer"",       ""maxInstances"": 1,       ""seleniumProtocol"": ""WebDriver""     }   ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""port"": 17946,   ""register"": true,   ""registerCycle"": 5000,   ""timeout"":432000,   ""hub"": ""http://jenkins.abc.com:4444"",   ""nodePolling"": 5000,   ""role"": ""node"" } ```  Can someone help me what i am missing? How can i make the Node and Hub connected?","closed","","udayanem","2018-11-09T13:49:47Z","2019-08-15T05:09:55Z"
"","5995","Can't find element after update to any new version.","## Meta - OS:    Windows 10 1803 17134.48 Selenium Version:   3.11.1, 3.11.2 and more AppiumDriver Version:   3.0.0.2 AppiumServer Version:   1.8.0  Hi, by now I have used Selenium version 3.11.0, but now I have decided to update and found out that from version 3.11.2 I can not find a single element, any attempts always end up with an error.  Is there someone who can help me, or say what is wrong?  Here is my appium log https://gist.github.com/MioOgbeni/c3f647a50e5dbd13ed94fefbecf39c18  I also asked on Appium Git, but i think that this is error in selenium.  https://github.com/appium/appium/issues/10806","closed","R-awaiting answer,","MioOgbeni","2018-06-05T14:44:07Z","2019-08-15T23:09:45Z"
"","6218","Selenium-Java-Actions, error","## Meta - OS:    Windows 10 Selenium Version:  3.12 Mozilla Version : 61.0.1   Browser Version:     ## Expected Behavior - An error-free selenium run.  ## Actual Behavior -  1532862635424	webdriver::server	DEBUG","closed","","SudeeptMohan","2018-07-29T11:18:28Z","2019-08-15T17:09:53Z"
"","6252","cannot parse capability: chromeOptions","## Meta - OS:    Windows 10 Selenium Version:   Dotnet WebDriver 3.0.1 Browser:   Mobile Chrome  `var capabilities = new DesiredCapabilities();                 capabilities.SetCapability(MobileCapabilityType.PlatformName, ""Android"");                 capabilities.SetCapability(MobileCapabilityType.DeviceName, deviceName);                 capabilities.SetCapability(MobileCapabilityType.BrowserName, MobileBrowserType.Chrome);                 //添加浏览器选项                 var chromeOptions = new ChromeOptions();                 chromeOptions.AddArguments(""--proxy-server=http://139.129.99.9:3128"");                 capabilities.SetCapability(ChromeOptions.Capability, chromeOptions); var driver = new RemoteWebDriver(new Uri($""http://127.0.0.1:{port}/wd/hub""), capabilities, TimeSpan.FromMinutes(10)); ` The code times is wrong in executing ""var driver = new RemoteWebDriver (New Uri ($"" http://127.0.0.1:{port}/wd/hub ""), capabilities, TimeSpan.FromMinutes (10)).","closed","","ArmyMedalMei","2018-08-05T05:50:21Z","2019-08-15T16:10:00Z"
"","6346","delegateCommandSystemProperties(ant + testng) is not working when using selenium-server-standalone-3.x","## Meta - OS:    Windows 10 Selenium Version:   3.x  After using selenium-server-standalone-3.x.jar properties are not getting replaced in testng even if delegateCommandSystemProperties is set to true. However same thing is working with selenium-server-standalone-2.x.jar.   Ant Version:   apache-ant-1.10.5  TestNg version:  testng-6.8  Expected Behavior - Properties passed from build.xml should get replaced in testng.xml  Actual Behavior -Properties passed from build.xml are not getting replaced in testng.xml  Steps to reproduce - Create a target and ddd below testng tag in ant's build.xml:                  			   			 		 Accept the parameter in testng.xml in test tag:            		  Run ant using command: ant.bat -file build.xml -DBrowser=Chrome","closed","","wonderwo","2018-08-30T05:20:57Z","2019-08-15T13:09:39Z"
"","5875","TestNG compilation errors","## Meta - OS:    Windows 10 Selenium Version:   3.11 Browser:    Firefox  Following code produces compilation errors, can you help eliminate those and get the code to run? (I am new to TestNG)  package TestNG;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.testng.annotations.Test;  public class DemoTestNG { 	public WebDriver driver = new FirefoxDriver(); 	String appUrl = ""https://accounts.google.com""; 		 	   @Test   public void gmailLogin() { 	         // launch the firefox browser and open the application url        driver.get(""https://gmail.com"");    }  	// declare and initialize the variable to store the expected title of the webpage.     String expectedTitle = "" Sign in - Google Accounts "";     //fetch the title of the web page and save it into a string variable     String actualTitle = driver.getTitle();     Assert.assertEquals(expectedTitle,actualTitle);     //enter a valid username in the email textbox     WebElement username = driver.findElement(By.id(""Email""));     username.clear();     username.sendKeys(""TestSelenium"");  //enter a valid password in the password textbox     WebElement password = driver.findElement(By.id(""Passwd""));     password.clear();     password.sendKeys(""password123"");     //click on the Sign in button     WebElement SignInButton = driver.findElement(By.id(""signIn""));     SignInButton.click();     //close the web browser     driver.close(); } }","closed","","SudeeptMohan","2018-05-09T15:27:01Z","2019-08-16T02:09:52Z"
"","6147","does not retain session when new window is opened from parent window, and it logs out, again asking to login again.","## Meta - OS:    Windows 10 Selenium Version:    2.47.1 Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Rialakshmi","2018-07-11T17:41:06Z","2019-08-15T19:09:42Z"
"","6115","Selenium returning the hidden element as visible, clickable and enabled when element is hidden & not clickable","## Meta - OS:    OSX Selenium Version:   3.12.0, 3.13.0 Browser:   Chrome, Firefox. Both are latest versions  Browser Version:   Chrome - 67.0.3396.99 Firefox - 61.0  ## Expected Behavior - Element which is not visible, not clickable, not enabled should return false  ## Actual Behavior - Element which is not visible, not clickable, not enabled is returning true  ## Steps to reproduce - In the webapplication which is being tested, using the selenium methods to check visible and enabled and custom method to check clickable which is returning true instead of false when the element is not visible, clickable, enabled. Raised the same issue [here](https://stackoverflow.com/questions/51136790/selenium-returning-the-hidden-element-as-visible-clickable-and-enabled-when-ele/ )","closed","","nagarjun64","2018-07-04T17:26:28Z","2019-08-15T20:09:36Z"
"","5914","Unable accept accept upload folder alert using selenium java while doing upload folder in google drive","## Meta - OS:     Windows 10  Selenium Version:   Selenium 3.0.11 Browser:   Chrome 66 and above  ![uploadfolderalert](https://user-images.githubusercontent.com/39407134/40233318-1f918830-5ac0-11e8-887c-48e2ceebb3e8.JPG)  Unable accept the upload folder alert using selenium java while doing upload folder in google drive  I have tried to accept the upload folder alert which facing while upload folder in google drive application.. Thanks in advance.  I already tried with Alert functions in selenium.. but it is not working. if anyone face same issue and found the solution then please reply with solution and thanks inadvance","closed","","shankarselenium","2018-05-18T11:55:28Z","2019-08-16T01:09:36Z"
"","6258","Browser Session Cookie Expired","## Meta - OS:       Windows 10, Linux, Mac  Selenium Version:       3.8.1  Browser:      Google Chrome Browser Version:      67.0 64-bit series Chrome Driver Version:    2.38  ## Expected Behavior - Getting cookie from first logged in browser session and stored in redis. after this reuse the above session cookie for all the browsers(20 browsers run in parallel) logged in successfully.  ## Actual Behavior - Sometimes getting logged out during the test using the above stored session cookie.  Let me know, Is  this causes by account problem or selenium chrome driver problem ?","closed","","Manikandan018","2018-08-08T08:33:13Z","2019-08-15T16:09:54Z"
"","5879","failed to build source code and got error in java\server\src\org\openqa\selenium\remote\se rver\AllHandlers.java:162","## Meta - OS:    Windows Server 2012 R2 Selenium Version:    3.8 Browser:    n/a  Browser Version:    n/a  ## Expected Behavior - source code can be built without errors.  ## Actual Behavior - source code building failed due to the below errors:   ## Steps to reproduce -  1. Set JAVA_HOME to jdk1.8 2. Download source code of version 3.8  3. run go dotnet in selenium source code folder. observed: error reported after a while: C:\selenium-selenium-3.8.0>go dotnet Downloading buck build tool, it can take up to several minutes... uri:classloader:/gems/rake-10.5.0/lib/rake/task.rb:188: warning: singleton on non-persistent Java type Java::OrgApacheHttpConn::HttpHostConnectException (http://wiki.jruby.org/Persistence) go aborted! Java::OrgApacheHttpConn::HttpHostConnectException: Connect to github.com:443 [github.com/192.30.255.113, github.com/192.30.255.112] failed: Connection timed out: connect org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(org/apache/http/impl/conn/DefaultHttpClientConnectionOperator.java:159) org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(org/apache/http/impl/conn/PoolingHttpClientConnectionManager.java:359) org.apache.http.impl.execchain.MainClientExec.establishRoute(org/apache/http/impl/execchain/MainClientExec.java:381)  After changing buck.rb by setting HTTP Proxy, run 'go', and the following error is reported in the process of building.  er#class-abi BUILD FAILED: //java/server/src/org/openqa/selenium/remote/server:webdriver-serv let failed with exit code 1: javac_jar stderr: C:\selenium-selenium-3.8.0\java\server\src\org\openqa\selenium\remote\se rver\AllHandlers.java:162: error: unreported exception X; must be caught or decl ared to be thrown             .orElseThrow(() -> new IllegalArgumentException(                         ^ C:\selenium-selenium-3.8.0\java\server\src\org\openqa\selenium\remote\server\Act iveSessionFactory.java:-1: note: C:\selenium-selenium-3.8.0\java\server\src\org\ openqa\selenium\remote\server\ActiveSessionFactory.java uses or overrides a depr ecated API.  C:\selenium-selenium-3.8.0\java\server\src\org\openqa\selenium\remote\server\Act iveSessionFactory.java:-1: note: Recompile with -Xlint:deprecation for details.  C:\selenium-selenium-3.8.0\java\server\src\org\openqa\selenium\remote\server\All Handlers.java:-1: note: Some input files use unchecked or unsafe operations.  C:\selenium-selenium-3.8.0\java\server\src\org\openqa\selenium\remote\server\All Handlers.java:-1: note: Recompile with -Xlint:unchecked for details.  Errors: 1. Warnings: 0.  BUILT 314/336 JOBS 21.7s //javascript/firefox-driver:driver-component DOWNLOADED 0.00 BYTES/SEC AVG, 0 ARTIFACTS, 0.00 BYTES BUILDING: FINISHED IN 3m 29.4s (100%) 314/336 JOBS, 314 UPDATED, 93.2% CACHE MIS S","closed","C-java,","gleechad","2018-05-10T02:55:29Z","2019-08-16T02:09:36Z"
"","5866","can i change the proxy while running the code?","## Meta - OS:    Selenium Version:  win 10  Browser:  Firefox   Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Dashu-Xu","2018-05-08T11:01:57Z","2019-08-16T03:09:36Z"
"","6143","Version 3.13.0 does not load-extension to specified path in my script so revert to working version 3.12.0","## Meta - OS:    Selenium Version:  3.13.0  Browser:  Chrome   Browser Version:    Chrome 67 ## Expected Behavior - To load extension with specified path in selenium ## Actual Behavior - Unable to load - had to revert to version 3.12.0 ## Steps to reproduce - Use this when launching Chrome >      capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(           'chromeOptions' => { 'args' => ['--disable-notifications', 'load-extension=./Profiles/CRX2/dest']}     )  Latest Webdriver does not load the path above, works fine when revert to 3.12.0","closed","C-rb,","thp2016","2018-07-11T12:37:02Z","2019-08-15T18:09:39Z"
"","6003","Selenium WebDriver java - SPA Problem","## Meta - OS:    Selenium Version:  3.12.0  Browser:  Chrome, Firefox, Edge, IE   Browser Version:  latest   ## Description - I'm doing my automated testing using java on Intellij IDEA. I'm working on an SPA(single page application). During one of my tests where I was trying to click on a found element, it seemed not to able to find the element and press on it which made it send back an exception from the next command line because it could get to the new pop up box where the next element exists. It seems like it skips on this line of code... I tried to make it wait until the driver would locate the element, also explicit wait and Thread.sleep but nothing seemed to work. I was wondering maybe selenium webdriver isn't what I should use on a SPA. I can't understand what's wrong about it! any help would be great.  ## The Bug - org.openqa.selenium.WebDriverException: unknown error: Element ... is not clickable at point (888, 400). Other element would receive the click:    (Session info: chrome=66.0.3359.181)  The '/' at the start of the < and at the end of it is so it would be shown.","closed","","YakirSA","2018-06-07T19:59:41Z","2019-08-15T23:09:50Z"
"","6040","ChromeDriver.exe is not closing from Task Manager","## Meta - OS:    Selenium Version:  3.11  Browser:  Chrome 67.0.3396.87   Browser Version:  67.0.3396.87   ## Expected Behavior - It should close all chromedriver.exe from task manager.  ## Actual Behavior -I used driver.Quit() method every where to close the chromedriver but in task manager it is still there lots of chromedriver.exe present in task manager  ## Steps to reproduce -","closed","","Girishrakhe","2018-06-19T07:27:46Z","2019-08-15T22:09:43Z"
"","6643","Setting browserName to chrome by default when ChromeOptions object is created makes Appium session create fail","## Meta - OS:    Selenium Version:   < 3.12.0> Depends by Appium Java client 6.1.0  Depends by Appium Java client latest commit  https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/chrome/ChromeOptions.java#L86  From selenium java version 3.6.0, when initialize an object of ChromeOption, it will set the browser name capability with chrome as above link. And this makes Appium create session fail with logs as below:  https://gist.github.com/megolee/2633e04a76b18b45d92740268d2ac847  Now we have to reset browserName to empty as a workaround to solve this issue.   Please refer to issue https://github.com/appium/java-client/issues/969 for more detail. Thanks~","closed","","megolee","2018-11-12T09:37:35Z","2019-08-15T05:09:57Z"
"","6347","ensureCleanSession not working after Microsoft Update (KB4339093)","## Meta - OS:    Selenium Version:   ""selenium-webdriver"": ""^3.5.0"", ""iedriver"": ""^3.9.2"",  Browser:   Internet Explorer 11  Since Firefox version 48, Mozilla requires all add-ons to be signed. Until recently, Firefox support in Selenium was exclusively provided by an add-on. As this add-on is not currently signed, this solution does not work with the latest Firefox releases. As an alternative, Mozilla are working on a WebDriver specification compliant implementation named GeckoDriver. Please note that the specification is not complete, and that Selenium itself does not comply with the specification at this time. This means that features previously available through Selenium will not be available using GeckoDriver.  Any issue logged here for Firefox 48 or later will be closed as a duplicate of #2559. Our recommendation is to switch to GeckoDriver, or to continue testing on Firefox 45 until GeckoDriver is a viable option for you. If you are interested in helping us to sign the add-on to restore support for later Firefox versions, please see the following comment for what's needed: https://github.com/SeleniumHQ/selenium/issues/2942#issuecomment-259717567  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with Safari, only Safari 10+ is supported. Please log any Safari issue with Apple: https://bugreport.apple.com/  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Amandeep13","2018-08-30T06:46:24Z","2019-08-15T13:10:01Z"
"","5931","When both bean shell and annotation transform is used to select methods to execute, methods with priority attribute set are not executed.","## Meta - OS:    Selenium Version:     3.5.3 Browser:     Browser Version:     ## Expected Behavior - When both bean shell and annotation transform are used to select methods to execute, methods with priority attribute set should be executed as per their priority among the methods selected.  ## Actual Behavior - When both bean shell and annotation transform are used to select methods to execute, methods with priority attribute set are NOT executed at all.  ## Steps to reproduce -  0. Set up eclipse -test ng  project with the following: a. add a method in testng class with priority and any group name.  b. add another testng class with method with out priority. 1. Add a bean shell method selector to select any group in a testng suite with testng class from step 1. 2. Add a listener class with overridden tranform from IAnnotationTransformer3 that has the same logic as in beanshell method selector to select a method of any group. 3. Execute both testng classes using testng suite.    Expected  BOth methods with priority and without priority should be executed.  Actual Only testng class with method with out priority is executed.","closed","","formynet","2018-05-22T18:22:40Z","2019-08-16T01:09:39Z"
"","6283","The HTTP request to the remote WebDriver server for URL http://localhost:51197/session/../elements timed out after 60 seconds.","## Meta - OS:    Selenium Version:    Browser:    Code Base: .Net471,C#,Specflow   My code was working fine till lately. Only change I had recently is an update to Windows 10. SUT has no changes. Following is the error I am getting trying to find webtable elements. Message: OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL http://localhost:51197/session/9b01b266-9990-46e6-9557-66b2762d4011/element/6ad00a15-b5cd-49af-ae97-d3a128ca9151/elements timed out after 60 seconds. ---- System.Net.WebException : The request was aborted: The operation has timed out.  case BrowserType.InternetExplorer:                     InternetExplorerOptions options = new InternetExplorerOptions();                     options.IgnoreZoomLevel = true;                     options.EnsureCleanSession = true;                                       options.EnableNativeEvents = true;                     options.EnablePersistentHover = true;                                     options.RequireWindowFocus = false;                     options.BrowserAttachTimeout = TimeSpan.FromSeconds(120);                       DriverContext.Driver = new InternetExplorerDriver(options);                      DriverContext.Driver.Manage().Timeouts().AsynchronousJavaScript = TimeSpan.FromSeconds(120);                                         DriverContext.Driver.Manage().Timeouts().PageLoad = TimeSpan.FromSeconds(120);                     DriverContext.Driver.Manage().Timeouts().ImplicitWait= TimeSpan.FromSeconds(120);                     DriverContext.Browser = new Browser(DriverContext.Driver);                     DriverContext.Driver.Manage().Window.Maximize(); ................. --------------------  public static void  NavigateToURL(string url)         {             DriverContext.Browser = new Browser(DriverContext.Driver);             DriverContext.Browser.GoToUrl(url);             LogHandler.Logger.Debug(""Url :"" + url);                   } --------------------- //Get all the columns from the table             var columns = table.FindElements(By.TagName(""th""));             //Get all the rows             var rows = table.FindElements(By.TagName(""tr""));             //Create row index             int rowIndex = 0;             bool rowFound = false;              foreach (var row in rows)             {                 int colIndex = 0;                  var colDatas = row.FindElements(By.TagName(""td""));  //**Here is where it times out                                if (colDatas.Count != 0)                     foreach (var colValue in colDatas)                     {...}  ------------------------ In above code , when it tries to find ""td"" elements, I am getting time out saying The HTTP request to the remote WebDriver server for URL http://localhost:51197/session/9b01b266-999....../elements timed out after 60 seconds. I tried to add webdriver wait loop for this elements more than 60 seconds, but that too is not working. Can somebody please help me out?","closed","C-dotnet,","AutomatorNew","2018-08-14T22:00:45Z","2019-09-27T14:09:36Z"
"","6082","Unable to identify the web elements under iframe document content in IE10 or IE11","## Meta - OS:    Selenium Version:    Browser:     IE Driver server Version:     ## Expected Behavior - The element should be identified in IE also  ## Actual Behavior -  The web elements are present under the iframe - Content Document - This can be identified using javascript but through selenium webdriver unable to identify any elements under that iframe - Content Document. This issue is only in IE where as it is working fine in chrome and Firefox browser    ## Steps to reproduce - i can able to navigate or switch to that iframe but after switching to iframe the elements are present in content document, my html structure is like below          unable to identify any elements or tags under the iframe through selenium webdriver where as through java script document.getElementByTagsName(""iframe"").contentDocument after that able to identify the elements using script so please help to resolve the issue.","closed","D-IE,","mmuthupa","2018-06-27T12:29:53Z","2019-08-15T18:09:54Z"
"","6502","ignoreProtectedModeSettings does not work on IE-11","## Meta - OS:    Selenium Version:    Browser:     Hi Team, I am using selenium with JavaScript / Node.js When i execute my code in IE 11 I get below error.  ERROR: Unexpected error launching Internet Explorer. Protected Mode settings are not the same for all zones. Enable Protected Mode must be set to the same value (enabled or disabled) for all zones.  Selenium V  3.12.0, IE 11. Could you please help me on this ? I have below capabilities in my code  IE capabilities ```   browserName: 'internet explorer',               platform: '',               version: '',               acceptUntrustedCertificates: true,               ignoreProtectedModeSettings: true,    //only applicable to IE browser               ignoreZoomSetting: true,              //only applicable to IE browser               ensureCleanSession: true,               enableElementCacheCleanup: true,               IntroduceInstabilityByIgnoringProtectedModeSettings: true,               maxInstances: '5',               // specs: [               //     './test/specs/*.js'               // ],           }, ```","closed","C-nodejs,","amiya-pattnaik","2018-10-09T21:41:40Z","2019-08-14T15:09:46Z"
"","6345","How to simulate onclick using Selenium/Python","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     I am using Python/Selenium to click on an icon on a web site to add it as one of my condition. It's making a Javascript call. I've tried find_element_by_css_selector and execute_script but was unable to access this element.  Many thanks in advance!!!!  The element is and it is drop down menu which appears after I inputting keyword: `The Wall Street Journal - All sources`  The code I have tried:  ``` wd.find_element_by_css_selector(""a[onlick*=The Wall Street Journal - All sources]"").click()    wd.execute_script(""mnuItm_click(this,'{12:6,0:0,11:""SFWSJ"",2:""SFWSJ"",3:""The Wall Street Journal - All sources"",4:0,5:0,6:0,7:0,14:0,10:1}');return false;"").click() ```","closed","","lucy9383","2018-08-29T19:02:11Z","2019-08-15T13:10:02Z"
"","6435","Selenium test case failing while running in a server machine using the executable jar file, without giving any error","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Test script should run properly and should click on a web element successfully.-  ## Nothing happens after clicking on the web element. I have even print the statement after the click operation which is executed correctly but after that is is failing as click operation is not changing the object state  .   ## Steps to reproduce - 1. create a selenium script to load google home page. 2. click on the I'm feeling Lucky button  3. it should load the doodle page  when i run this script on my local machine, it worked fine. Now i have created an executable jar file using maven and eclipse to run my test suit and downloaded this jar on my remote desktop machine on server with all the necessary dependent files. When i run the test using CMD java -jar ""test-suit.jar"" it is opening IE browser successfully and load the url . It is clicking on I'm feeling lucky but it does not load doodle page after click and test fails . no error is given just i got this log  log4j:WARN No appenders could be found for logger (org.apache.http.client.protoc ol.RequestAddCookies). log4j:WARN Please initialize the log4j system properly. log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more in fo. Sep 20, 2018 7:28:39 AM io.github.bonigarcia.wdm.WebDriverManager getDriversFrom Xml INFO: Reading https://selenium-release.storage.googleapis.com/ to seek IEDriverS erver Sep 20, 2018 7:28:40 AM io.github.bonigarcia.wdm.WebDriverManager getLatest INFO: Latest version of IEDriverServer is 3.14 Sep 20, 2018 7:28:40 AM io.github.bonigarcia.wdm.Downloader checkBinary INFO: Using binary driver previously downloaded Sep 20, 2018 7:28:40 AM io.github.bonigarcia.wdm.WebDriverManager exportDriver INFO: Exporting webdriver.ie.driver as C:\Users\debolin.dhar\.m2\repository\webd river\IEDriverServer\Win32\3.14\IEDriverServer.exe null true null false Started InternetExplorerDriver server (32-bit) 3.14.0.0 Listening on port 24032 Only local connections are allowed Sep 20, 2018 7:28:47 AM org.openqa.selenium.remote.ProtocolHandshake createSessi on INFO: Detected dialect: W3C true false clicked on I'm feeling lucky doodle Page doesn't exist  =============================================== Suite Total tests run: 4, Failures: 1, Skips: 1 ===============================================  i am not getting what could be the error. whether it is not clicking and not throwing any error also or i need to take certain additional settings to be set on my server machine or change in my script to get it work","closed","","handakafunda","2018-09-21T10:01:34Z","2019-08-15T11:09:34Z"
"","6545","Chrome Selenium Headless Mode error","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior - Run selenium on chrome with headless mode ## Actual Behavior - Shows this error when i run the selenium script with python  [1017/113855.766:INFO:CONSOLE(21)] ""BSSO Telemetry: {""result"":""Error"",""error"":""NoExtension"",""type"":""ChromeSsoTelemetry"",""data"":{},""traces"":[""BrowserSSO Initialized"",""Creating ChromeBrowserCore provider"",""Sending message for method CreateProviderAsync"",""Received message for method CreateProviderAsync"",""Error: ChromeBrowserCore error NoExtension: Extension is not installed.""]}"", source: https://secure.aadcdn.microsoftonline-p.com/ests/2.1.8233.17/content/cdnbundles/oldbssointerrupt_core.min_xtvls7nxxvspfevoczcn6q2.js (21) ## Steps to reproduce -","closed","","Jaywinchester","2018-10-17T03:40:37Z","2019-08-15T07:10:07Z"
"","6644","Please offer a solution for basic authentication","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior - Please finally make it possible that it is possible to send a header with the method GoToUrl(). This is the only really working possibility for Basic Authentication. Because tools like AutoIt don't work on BrowserStack etc.  ## Actual Behavior - There is no way to send a header. And the complete problem is open since 2016!!! https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/34  We are thinking about to change to Ranorex -- with this issues we can't work professional.  ## Steps to reproduce -","closed","I-enhancement,","AndreasKarz","2018-11-12T10:35:35Z","2021-12-03T00:06:41Z"
"","6265","https://github.com/seleniumhq/selenium/issues/new","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior - Open a browser and render The New York Times ## Actual Behavior - org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'WSTP-PC057823-L', ip: '172.19.70.230', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_65' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:193) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:181) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:250) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:236) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:137) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:184) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:171) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:158) 	at headless_browser_cucumber_test.CucumberTestingNew.HeadlessTest.HeadlessChromeDriver(HeadlessTest.java:26) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:497) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:12923/status] to be available after 20003 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:107) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:190) 	... 33 more Caused by: com.google.common.util.concurrent.UncheckedTimeoutException: java.util.concurrent.TimeoutException 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:140) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:80) 	... 34 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:128) 	... 35 more  org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.4.0', revision: 'unknown', time: 'unknown' System info: host: 'WSTP-PC057823-L', ip: '172.19.70.230', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_65' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:193) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:181) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:250) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:236) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:137) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:184) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:171) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:158) 	at headless_browser_cucumber_test.CucumberTestingNew.HeadlessTest.HeadlessChromeDriver(HeadlessTest.java:26) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:497) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) 	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) 	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) 	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:12923/status] to be available after 20003 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:107) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:190) 	... 33 more Caused by: com.google.common.util.concurrent.UncheckedTimeoutException: java.util.concurrent.TimeoutException 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:140) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:80) 	... 34 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:128) 	... 35 more   ## Steps to reproduce -","closed","","s2dworku","2018-08-09T15:31:37Z","2019-08-15T16:09:46Z"
"","6362","How to screen the entire browser?","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -  Now，I only can screenshot the page,but I wang to take screen entire Browser Including URL bar！How can I make it ?","closed","","JackWangAndRose","2018-09-04T11:24:26Z","2019-08-15T13:09:42Z"
"","6123","Element is clicks  and operation is passed but actions is not performed and below is html code snpshot","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -   needs click on Delete button and Xpath is correct","closed","","muli09","2018-07-06T16:16:57Z","2019-08-15T19:10:03Z"
"","6655","standalone","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","AlexandrKa","2018-11-16T10:39:54Z","2019-08-15T05:09:47Z"
"","6652","proxy","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","flicking","2018-11-14T04:46:30Z","2019-08-15T05:09:51Z"
"","6640","ieCapabilities","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","oldmuff","2018-11-09T08:58:47Z","2019-08-15T05:10:02Z"
"","6625","proxy","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Ryan-Caracciolo","2018-11-06T20:18:13Z","2019-08-15T06:09:40Z"
"","6593","qwer","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","nurbektulegenov","2018-10-29T12:49:06Z","2019-08-15T07:09:34Z"
"","6588","At the time of the automatic test, when I'm running an auto test, I am counting 20 times. My test result is 19 times successful at once","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","LILI1363","2018-10-27T13:04:27Z","2019-08-15T06:10:00Z"
"","6587","I was wondering about the function of the element sendkeys(keys.Enter), the runtime of the automate test at the stage of this element runs in repetitive errors, and the cause of the error is that this element works 2 times.","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","LILI1363","2018-10-27T08:20:01Z","2019-08-15T06:10:03Z"
"","6555","ie11","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sri17","2018-10-18T17:59:47Z","2019-08-15T07:10:02Z"
"","6532","alert","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sad148","2018-10-12T22:32:16Z","2019-08-15T08:09:42Z"
"","6495","when i tried to access chrome driver (.run)  from a jar file using tomcat server it shows ""com.google.common.base.Preconditions.checkState(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V|"" in my log","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Someskumarasamy","2018-10-08T11:22:54Z","2019-08-15T08:09:55Z"
"","6493","thread","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","amberlu","2018-10-08T00:16:02Z","2019-08-15T08:09:57Z"
"","6489","Problem","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","iarlymedeiros7","2018-10-07T15:24:29Z","2019-08-15T08:09:58Z"
"","6465","certifica","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","docti-sophia","2018-10-01T12:20:26Z","2019-08-15T09:09:44Z"
"","6451","FORWARDING TO NODE","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","pshynin","2018-09-27T01:38:17Z","2019-08-15T09:09:59Z"
"","6447","how to set chrome headless as false in python","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","muhammedibrahim712","2018-09-26T08:37:30Z","2019-08-15T09:10:03Z"
"","6441","iframe","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","saranyamohandas","2018-09-24T23:34:38Z","2019-08-15T10:09:43Z"
"","6416","error: ReferenceError: testMethodName is not defined","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","manojmangena","2018-09-17T09:29:09Z","2019-08-15T11:09:52Z"
"","6411","grid","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","onpbxtester","2018-09-14T11:55:26Z","2019-08-15T11:09:54Z"
"","6407","shutdown","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","marcozs84","2018-09-13T22:34:53Z","2019-08-15T11:09:57Z"
"","6397","internetexplorerdriver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","johninstructure","2018-09-11T23:01:41Z","2019-08-15T12:09:37Z"
"","6389","IE11","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","caneleaf2","2018-09-10T20:42:46Z","2019-08-15T12:09:43Z"
"","6380","ie driver issue","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","poojaJaggi","2018-09-08T07:21:28Z","2019-08-15T12:09:54Z"
"","6356","AndroidWebDriver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","yangxw8820","2018-09-03T03:13:02Z","2019-08-15T13:09:50Z"
"","6331","atomlab","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","atomLee1","2018-08-26T17:49:39Z","2019-08-15T14:09:42Z"
"","6308","seletom","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","atomLee1","2018-08-20T12:52:31Z","2019-08-15T15:09:37Z"
"","6304","hidden element","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Positivemindset","2018-08-18T22:36:40Z","2019-08-15T15:09:39Z"
"","6298","Test","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Ranzolin77","2018-08-17T00:54:22Z","2019-08-15T15:09:45Z"
"","6293","KEYDOWN","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","alessandroguarascio","2018-08-16T06:55:03Z","2019-08-15T15:09:51Z"
"","6257","chromedriver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","c235637","2018-08-08T03:53:31Z","2019-08-15T16:09:55Z"
"","6243","FORWARDING","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","kartik-saraswat","2018-08-03T05:42:27Z","2019-08-15T16:10:03Z"
"","6199","loggingPrefs","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","jackloo","2018-07-24T06:54:03Z","2019-08-15T17:10:03Z"
"","6182","getzoom","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","hadanhtoi","2018-07-19T08:14:23Z","2019-08-15T18:09:46Z"
"","6150","/usr/lib/firefoxdriver/webdriver.xpi","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","cdoare","2018-07-12T09:14:27Z","2019-08-15T19:09:41Z"
"","6125","95","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","andrei9696","2018-07-06T18:02:11Z","2019-08-15T19:10:01Z"
"","6124","96","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","andrei9696","2018-07-06T18:01:19Z","2019-08-15T19:10:01Z"
"","6118","How do we get EXACT XPath of an existing/known element?","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sanguuday","2018-07-05T13:31:45Z","2019-08-15T19:10:04Z"
"","6099","native","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","senani-mayank","2018-06-30T09:44:00Z","2019-08-15T20:09:50Z"
"","6091","Warning: The server did not provide any stacktrace  information","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","MayaShinde","2018-06-28T08:35:26Z","2019-08-15T20:09:59Z"
"","6069","selenium server standalone","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Tq09","2018-06-25T21:02:32Z","2019-08-15T21:09:43Z"
"","6066","String AUT_PATH = ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"";                 var web_dc = new DesiredCapabilities();                             // web_dc.SetCapability(...)                 var web_driver = new RemoteWebDriver(new Uri(""http://10.0.1.153:4444/wd/hub""), web_dc);                  var app_dc = new DesiredCapabilities();                 app_dc.SetCapability(""app"", AUT_PATH);                  var app_driver = new RemoteWebDriver(new Uri(""http://localhost:9999""), app_dc);","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sheikhsamina","2018-06-25T09:55:23Z","2019-08-15T21:09:54Z"
"","6033","selenium","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","rcostamg","2018-06-18T11:40:08Z","2019-08-15T22:09:47Z"
"","5993","desired","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","sathwikaileneni","2018-06-05T10:07:13Z","2019-08-15T23:10:03Z"
"","5980","selenium grid","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","balajisharath55","2018-06-03T12:02:47Z","2019-08-16T00:09:42Z"
"","5962","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: 374	addons.xpi	DEBUG	Updating database with changes to installed add-ons","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","naveenmandava123","2018-05-30T09:27:07Z","2019-08-16T00:09:53Z"
"","5924","Python/ubuntu driver.quit() does not terminate chromedriver-headless process","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","JIAJIEDENG","2018-05-21T09:14:26Z","2019-08-16T01:09:35Z"
"","5922","Not able to launch any URL on IE11 using Selenium Webdriver 2.53.1","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","anurag2893","2018-05-21T07:47:35Z","2019-08-16T01:09:47Z"
"","5916","HtmlUnitDriver","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","meenu2424","2018-05-19T23:35:08Z","2019-08-16T01:09:50Z"
"","5900","touch","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","MarkinLi","2018-05-15T08:57:34Z","2019-08-16T01:10:03Z"
"","5885","selenium","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","Nastya999","2018-05-11T07:57:45Z","2019-08-16T02:09:50Z"
"","5858","Issues coming for Selenium","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","suchitkumarshah","2018-05-03T10:41:23Z","2019-08-16T03:09:48Z"
"","5823","javascript error IE","## Meta - OS:    Selenium Version:    Browser:     Browser Version:     ## Expected Behavior -  ## Actual Behavior -  ## Steps to reproduce -","closed","","CBep","2018-04-25T02:15:59Z","2019-08-16T05:09:34Z"
"","6622","invalid argument: can't kill an exited process","## Meta - OS:    Selenium Version:    Browser:     ## Expected Behavior - I'm currently attempting to get a spec to pass in Cloud9 and running into issues with Selenium.  I've installed firefox and geckodriver into my hosting machine.  The errors relating to those have disappeared bu now I'm getting an error I don't understand:       Failure/Error: visit project_path(project)            Selenium::WebDriver::Error::UnknownError:        invalid argument: can't kill an exited process  What does this mean?   Here's my test ``` require ""rails_helper""  RSpec.feature ""Users can create new tickets"" do     let(:user) { FactoryBot.create(:user) }      before do     login_as(user)     project = FactoryBot.create(:project, name: ""Internet Explorer"")     assign_role!(user, :editor, project)          visit project_path(project)     click_link ""New Ticket""   end     scenario ""with multiple attachment"", js: true do     fill_in ""Name"", with: ""Add documentation for blink tag""     fill_in ""Description"", with: ""Blink tag's speed attribute""          attach_file ""File #1"", Rails.root.join(""spec/fixtures/speed.txt"")     click_link ""Add another file""          attach_file ""File #2"", Rails.root.join(""spec/fixtures/spin.txt"")     click_button ""Create Ticket""          expect(page).to have_content ""Ticket has been created.""          within(""#ticket .attachments"") do       expect(page).to have_content ""speed.txt""       expect(page).to have_content ""spin.txt""     end   end  end ```  Here's the failure message from running my spec:  ``` . (called from block (3 levels) in  at /home/ubuntu/workspace/spec/factories/user_factory.rb:7) ...Capybara starting Puma... * Version 3.12.0 , codename:  * Min threads: 0, max threads: 4 * Listening on tcp://127.0.0.1:40655 F.  Failures:    1) Users can create new tickets with multiple attachment      Failure/Error: visit project_path(project)            Selenium::WebDriver::Error::UnknownError:        invalid argument: can't kill an exited process      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/response.rb:69:in `assert_ok'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/response.rb:32:in `initialize'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/http/common.rb:84:in `new'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/http/common.rb:84:in `create_response'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/http/default.rb:104:in `request'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/http/common.rb:62:in `call'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/bridge.rb:166:in `execute'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/remote/bridge.rb:99:in `create_session'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/firefox/marionette/driver.rb:50:in `initialize'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/firefox/driver.rb:31:in `new'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/firefox/driver.rb:31:in `new'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver/common/driver.rb:52:in `for'      # /usr/local/rvm/gems/ruby-2.3.4/gems/selenium-webdriver-3.141.0/lib/selenium/webdriver.rb:86:in `for'      # /usr/local/rvm/gems/ruby-2.3.4/gems/capybara-3.10.1/lib/capybara/selenium/driver.rb:27:in `browser'      # /usr/local/rvm/gems/ruby-2.3.4/gems/capybara-3.10.1/lib/capybara/selenium/driver.rb:46:in `visit'      # /usr/local/rvm/gems/ruby-2.3.4/gems/capybara-3.10.1/lib/capybara/session.rb:265:in `visit'      # /usr/local/rvm/gems/ruby-2.3.4/gems/capybara-3.10.1/lib/capybara/dsl.rb:51:in `block (2 levels) in '      # ./spec/features/creating_tickets_spec.rb:11:in `block (2 levels) in '  Finished in 2.66 seconds (files took 4.28 seconds to load) 5 examples, 1 failure  Failed examples:  rspec ./spec/features/creating_tickets_spec.rb:43 # Users can create new tickets with multiple attachment ```","closed","C-rb,","mellansquare","2018-11-06T02:18:38Z","2019-08-15T06:09:36Z"
"","6646","create_connection raise err error: [Errno 111] Connection refused in selenium python","## Meta - OS:    Selenium Version:    Browser:       ## Expected Behavior -  ## Actual Behavior -   # Selenium 3.6 python 2.7 Google Chrome 62.0.3202.62 ![image](https://user-images.githubusercontent.com/44395752/48343910-a6587580-e699-11e8-9caa-c9eb679a01a6.png) # Steps to reproduce -","closed","","rameshpuruganti","2018-11-12T11:10:46Z","2019-08-15T05:09:37Z"
"","6170","Selenium script throws intermittent 'UnreachableBrowserException' (Selenium : 3.12.0 + 3.13.0)  (OKHTTP client seems to be reason for it)","## Meta - OS:    MAC OS Sierra(10.12.6) Selenium Version:    3.12 + 3.13 Browser:  Chrome + Firefox   Browser Version:    Version 67.0.3396.99 (Official Build) (64-bit)  ## Expected Behavior - Script should work smoothly without any intermittent exceptions like `(UnreachableBrowserException)`  ## Actual Behavior - I was getting intermittent org.openqa.selenium.remote.UnreachableBrowserException . So started debugging it by writing a code to catch WebDriverException (try/catch) & taking screenshot whenever script meets WebDriverException. To my surprise , I saw that screenshot was actually being taken even after getting  `UnreachableBrowserException`.  Doesn't UnreachableBrowserException means that session is not accessible and hence it should be invalidated . So any action performed on webdriver object of that invalidated session should throw WebDriverException.  Correct me if I am wrong & **please explain the above miracle (screenshot capturing works even after getting UnreachableBrowserException)**  For Analysis purpose , I am attaching stacktrace here  See in the stacktrace , I am getting UnreachableBrowserException when trying to get current url of browser , however screenshot capturing works and I can see screenshot being saved at location  `org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.     Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z'     System info: host: 'mymachine', ip: 'x.x.x.x', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.12.6', java.version: '1.8.0_121'     Driver info: driver.version: RemoteWebDriver     Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.36.540469 (1881fd7f864150..., userDataDir: /var/folders/ym/dtyc5vz9785...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 67.0.3396.99, webStorageEnabled: true, webdriver.remote.sessionid: f4748ff254f6fe0418a37e3ab40...}     Session ID: f4748ff254f6fe0418a37e3ab40c3604     	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:564)     	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)     	at org.openqa.selenium.remote.RemoteWebDriver.getCurrentUrl(RemoteWebDriver.java:281)     	at getCurrentURL(MyDriverBot.java:1616)     	at Capture.main(Capture.java:31)     Caused by: java.net.SocketException: Connection reset     	at java.net.SocketInputStream.read(SocketInputStream.java:210)     	at java.net.SocketInputStream.read(SocketInputStream.java:141)     	at okio.Okio$2.read(Okio.java:139)     	at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)     	at okio.RealBufferedSource.indexOf(RealBufferedSource.java:345)     	at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:217)     	at okhttp3.internal.http1.Http1Codec.readHeaderLine(Http1Codec.java:212)     	at okhttp3.internal.http1.Http1Codec.readResponseHeaders(Http1Codec.java:189)     	at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:88)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)     	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:45)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)     	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)     	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)     	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:125)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)     	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)     	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)     	at okhttp3.RealCall.execute(RealCall.java:77)     	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:105)     	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155)     	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)     	... 10 more     19:25:43.232 [Capture][captureScreenShotOnDashboardException] - Start Capturing screenshot (in case of exception is found     19:25:43.233 [Capture][takeDashboardScreenshot] - Screenshot will be kept at location : /Users/myuserName/result/myException.png     19:25:44.084 [Capture][captureScreenShotOnDashboardException] - End Capturing dashboard (in case of dashboard exception is found` ## Steps to reproduce - I have this problem happening  beneth so many layers in my framework . So I probably have to find a way to produce clean alternative code to show this problem . Moreover as I said issue is happening randomly , which may make my job more difficult to produce clean reproducible code (however I will try)  ## Workaround as of now- For me it seems to be an issue with 'OKHTTP' , I did following things to confirm it  1) Added `System.setProperty(""webdriver.http.factory"", ""apache"");` to force selenium to use 'apache' instead of 'okhttp' in selenium v3.13 . It worked , now I don't get above random `UnreachableBrowserException` exception (tested it for 2/3 times) , however execution (in terms of identifying elements) is so slow (I don't know why)  2) I downgraded selenium version to use 3.8.1 (from 3.13) & restarted my machine . Built my gradle project again & executed code 2/3 times . Again I wasn't getting above `UnreachableBrowserException` exception.   Can any one please raise your hand , if you are experiencing this prob in selenium v3.12 or 3.13 ?","closed","C-java,","sjethvani","2018-07-17T07:14:08Z","2019-08-15T08:09:40Z"
"","6015","Not able to get the driver of a new browser window opened after logging in to a web app and login browser window gets closed.","## Meta - OS:    Browser:     ## Expected Behavior - Exception: NosuchwindowException :Unable to get the browser  NosuchwindowException :Window is closed ## Actual Behavior - When I login to a web application and when enter username and password and OK button,the login window is getting closed and a new window with new URL opening up. But I am not able to get the handle of that browser.  Login Button: driver.findElement(By.name(""OK"")).click(); After this new browser window opens up but driver.getWindowHandles().size(); returns zero and System.out.println(""No:""+driver.getWindowHandle());  throws org.openqa.selenium.NoSuchWindowException: **Window is closed**","closed","R-awaiting answer,","akkiprasad","2018-06-12T20:08:02Z","2019-08-15T18:09:48Z"
"","6637","Safari element.getLocation throws a nullPointerException","## Meta - OS:  MacOS High Sierra 10.13.6  Selenium Version:  3.141.0  Browser:  Safari 12.0 (64bit)  ## Expected Behavior - To be able to retrieve the location of a given element as a Point instance.  ## Actual Behavior - NullPointerException thrown.  ## Steps to reproduce - I attempt to call `driver.findElement(By.cssSelector(customSelector)).getLocation()` and it throws a null pointer exception in the `getLocation()` method, specifically on `rawPoint.get(""y"").intValue();`  There wasn't much of a stack trace, but here's what I had (app name redacted due to NDA): ``` java.lang.NullPointerException 	at org.openqa.selenium.remote.RemoteWebElement.getLocation(RemoteWebElement.java:340) 	at com.REDACTED.automation.HomePageSteps.verifyTheLocationOf(HomePageSteps.java:36) 	at ✽.And I verify the location of ""headerElement""(/projects/REDACTED/src/test/resources/features/PrimarySmokeTest.feature:6) ``` Please let me know if there are any other steps I should take on my end.","closed","","techanon","2018-11-08T22:43:40Z","2019-08-16T20:09:34Z"
"","6376","Need help in enable and disable proxy setting in IE for Serenity BDD Framework through code","## Meta - OS:","closed","","ShubhamSerenity","2018-09-06T13:09:45Z","2019-08-15T12:10:01Z"
"","5882","Registering a node to the hub displays BeanToJsonConverter illegal operation(s) warnings","## Meta - Operating System:  Windows 10 Enterprise - 10.0.14393 Build 14393 Selenium Version:  Happens on 3.11.0 and 3.12.0 ChromeDriver.exe Version: 2.38.552522 Java Version: 9.0.4  > java -jar selenium-server-standalone-3.12.0.jar -role hub  > java -jar selenium-server-standalone-3.12.0.jar -role node -hub http://127.0.0.1:4444/grid/register -port 12226 -browser ""browserName=chrome,maxInstances=5, maxSessions=5, platform=WINDOWS""  Produces the following error:  > 13:30:30.318 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://127.0.0.1:4444/grid/register WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.openqa.selenium.json.BeanToJsonConverter (file:/C:/Users/320006955/Desktop/product/gui-tests/selenium_grid/selenium-server-standalone-3.12.0.jar) to method sun.reflect.annotation.AnnotatedTypeFactory$AnnotatedTypeBaseImpl.getDeclaredAnnotations() WARNING: Please consider reporting this to the maintainers of org.openqa.selenium.json.BeanToJsonConverter WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release 13:30:30.679 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 13:30:30.721 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use  I am not sure if this is an issue on my client side or a problem with the jars, if you need any more information let me know, thanks  Note: the grid hub/node(s) seem to function just fine, I can run remote-tests no problem, just thought I would share the issue output","closed","C-java,","symonk","2018-05-10T12:32:36Z","2019-08-15T19:09:51Z"
"","6235","Actions drag and drop does not function in chromedriver","## Meta - Operating System ->`[Microsoft Windows 10 Enterprise] Version	10.0.14393 Build 14393`  ChromeDriver -> `2.41.578737`  Selenium -> `3.13.0`  Chrome -> `68.0.3440.84 (Official Build) (64-bit)`   ```java     public static void main(String...args) {         WebDriver driver = new ChromeDriver();         driver.manage().window().maximize();         driver.get(""https://the-internet.herokuapp.com/drag_and_drop"");         new Actions(driver).dragAndDrop(driver.findElement(By.id(""column-b"")), driver.findElement(By.id(""column-a""))).build().perform();     } ```  When using the actions class `dragAndDrop`  || `dragAndDropBy`  || `clickAndHold/MoveToElement/Release` within the actions class nothing appears to be happening.  Above is a self contained method which executes the code against the publically available herokuapp.  I'm not sure if its something based on my local system, but everything is up to date and the code is having no impact whatsoever.","closed","","symonk","2018-08-01T14:37:13Z","2019-08-15T16:09:48Z"
"","6445","Why `WebElement.get_attribute` is designed to try property first, then try attribute, but not the otherwise?","## Meta - Not sure related, buy anyway...  OS:  Arch Linux Selenium Version:  3.14.0 Browser:  Google Chrome Browser Version:  67.0.3396.62  ## Question - AFAIK, in selenium python bindings, there's only two APIs for accessing DOM attributes and properties, namely `WebElement.get_attribute` and `WebElement.get_property`.  But it both of them would prefer DOM property than DOM attribute. I'm not sure how one would retrieve the exact DOM attribute value, when property and attribute values differ? (For example, when dealing with form ``.)  ## Expected Behavior - Given the following html snippet: ```html  ``` when user entered `some text`, `WebElement.get_attribute(""value"")` would give `""""`, while `WebElement.get_property(""value"")` would give `""some text""`.  ## Actual Behavior - Both give `""some text""`.","closed","","Naitreey","2018-09-26T03:52:46Z","2019-08-15T09:10:01Z"
"","6377","Modal issue - (Selenium::WebDriver::Error::ElementNotInteractableError)","## Meta - Linux Xvfb style ruby-2.1.1/gems/selenium-webdriver-3.11.0/  ## Code I have written in Ruby  require 'rubygems' require 'headless' require 'selenium-webdriver'  headless = Headless.new(display: 99) headless.start   Selenium::WebDriver.logger.level = :info --# Selenium::WebDriver.logger.level = :debug #uncomment this if you need to debug --# opts = Selenium::WebDriver::Firefox::Options.new(log_level: :trace) #uncomment this if you need to debug  capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(accept_insecure_certs: true)  driver = Selenium::WebDriver.for :firefox, desired_capabilities: capabilities#, options: opts #uncomment this if you need to debug driver.navigate.to 'https://fpdev1098twebsite-env-11.us-east-1.elasticbeanstalk.com/' puts driver.title  dropDown = driver.find_element(id: 'signInChange') puts dropDown.displayed? dropDown.click  student = driver.find_element(name: 'student').click puts driver.title  wait = Selenium::WebDriver::Wait.new(:timeout => 500) wait.until {driver.find_element(id: 'username')}  driver.find_element(id: 'username').send_keys '#removed#' driver.find_element(id: 'password').send_keys '#removed# driver.find_element(name: 'signInSubmitButton').click  puts driver.title  headless.destroy ## Expected Behavior - I expect it to be able to log in  ## Actual Behavior - I get the following error {""value"":{""error"":""element not interactable"",""message"":""Element  is not reachable by keyboard"",""stacktrace"":""WebDriverError@chrome://marionette/content/error.js:178:5\nElementNotInteractableError@chrome://marionette/content/error.js:286:5\nwebdriverSendKeysToElement@chrome://marionette/content/interaction.js:562:11\ninteraction.sendKeysToElement@chrome://marionette/content/interaction.js:549:11\nsendKeysToElement@chrome://marionette/content/listener.js:1320:9\ndispatch/","closed","","BigGorillaMike","2018-09-06T20:55:19Z","2019-08-15T12:09:45Z"
"","6636","Supporting URL is outdated","## Meta - Java: Selenium 3.14.0  StaleElementReferenceException message contains [supporting link](http://seleniumhq.org/exceptions/stale_element_reference.html): ``` org.openqa.selenium.StaleElementReferenceException: stale element reference: element is not attached to the page document   (Session info: chrome=70.0.3538.77)   (Driver info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 10.0.17134 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' ``` which leads to main page instead of the [actual SERE page](https://www.seleniumhq.org/exceptions/stale_element_reference.jsp)  Please, update protocol and the extension.","closed","","dr29bart","2018-11-08T21:09:12Z","2019-08-15T05:10:00Z"
"","6604","ActionChains.move_to does not work with EventFiringWebElement","## Meta - Bindings: Python OS:  Linux Selenium Version:  3.14 Browser:  Firefox, but should be any w3c enabled browser Browser Version:  63.0  (geckodriver 0.23)  ## Expected Behavior - ActionChains.move_to should work with EventFiringWebElements just as WebElement do, since EFWEs are just wrappers around WEs  ## Actual Behavior - Exception thrown  ## Steps to reproduce - Using a browser that is w3c capable   ``` #!/usr/bin/env python # -*- coding: utf-8 -*-  from selenium.webdriver import Firefox from selenium.webdriver.support.events import AbstractEventListener, EventFiringWebDriver from selenium.webdriver import ActionChains  class MyListener(AbstractEventListener):     def before_navigate_to(self, url, driver):         print(""Before navigate to %s"" % url)     def after_navigate_to(self, url, driver):         print(""After navigate to %s"" % url)  driver = Firefox() ef_driver = EventFiringWebDriver(driver, MyListener()) ef_driver.get(""http://www.google.com"") ef_elem = ef_driver.find_element_by_name(""btnK"") ActionChains(driver).move_to_element(ef_elem).perform()  ``` Output: ``` Before navigate to http://www.google.com After navigate to http://www.google.com Traceback (most recent call last):   File ""efwe_example.py"", line 22, in      ActionChains(driver).move_to_element(ef_elem).perform()   File ""/home/gk3/.local/share/virtualenvs/selenium-Ey5F69Tg/lib/python2.7/site-packages/selenium/webdriver/common/action_chains.py"", line 273, in move_to_element     self.w3c_actions.pointer_action.move_to(to_element)   File ""/home/gk3/.local/share/virtualenvs/selenium-Ey5F69Tg/lib/python2.7/site-packages/selenium/webdriver/common/actions/pointer_actions.py"", line 42, in move_to     raise AttributeError(""move_to requires a WebElement"") AttributeError: move_to requires a WebElement   ```","closed","C-py,","gklinich","2018-11-01T21:37:48Z","2019-08-14T07:09:38Z"
"","6045","Updating Selenium driver to v3.12.0 or v3.12.1 in .Net packages raises casting issue in Appium automation","## Meta - Appium version 1.8.1 Desktop OS/version used to run Appium: Windows 10 Pro Node.js version (unless using Appium.app|exe): 8.10.0 Mobile platform/version under test: Android API 25 ,v7.1.1 Real device or emulator/simulator: Real Device Samsung Tab Appium CLI or Appium.app|exe: both IDE: VisualStudio 2017 Enterprise and C# as coding language Selenium Driver and Selenium support driver : v3.12.0 (Issue creating version)  ## Selenium Driver and Selenium support driver v3.11.2 worked fine without any casting issues  ## Code to Reproduce  public static AndroidElement UserName_Field()      {         AndroidElement UserName = driver.FindElement(By.Id(""*:id/LoginView_txtUsername""));         return UserName;     }  ## Exception stacktraces Test Name:	TestMethod1 Test FullName:	UnitTestProject1.UnitTest1.TestMethod1 Test Source:	C:\Users\gokulnath.kumar\source\repos\UnitTestProject1\UnitTestProject1\UnitTest1.cs : line 25 Test Outcome:	Failed Test Duration:	0:00:53.4154213  ## Result StackTrace:	  at OpenQA.Selenium.Appium.AppiumDriver`1.FindElement(By by)    at *_Mobile.Page_Objects.Login_Objects.UserName_Field() in C:\Users\gokulnath.kumar\source\repos\UnitTestProject1\UnitTestProject1\Page_Objects\Login_Objects.cs:line 21    at *_Mobile.Log_in_module.Login_module.Login(String Uname, String Pwd) in C:\Users\gokulnath.kumar\source\repos\UnitTestProject1\UnitTestProject1\App_Modules\Login_module.cs:line 18    at UnitTestProject1.UnitTest1.TestMethod1() in C:\Users\gokulnath.kumar\source\repos\UnitTestProject1\UnitTestProject1\UnitTest1.cs:line 27 Result Message:	 Test method UnitTestProject1.UnitTest1.TestMethod1 threw exception:  System.InvalidCastException: Unable to cast object of type 'OpenQA.Selenium.Remote.RemoteWebElement' to type 'OpenQA.Selenium.Appium.Android.AndroidElement'.    ## Link to Appium logs  https://gist.github.com/Gocoollnath/c6b4be5ababf838a0acf0adb72552a20","closed","C-dotnet,","Gocoollnath","2018-06-20T07:57:48Z","2019-08-15T22:09:38Z"
"","6085","IE throws ""Command line server for the IE driver has stopped working"" error on Click","## Meta - **OS:**  Windows 7 **Selenium Version:**  3.13.0 **Browser:**  Internet Explorer 11 **Browser Version:**  11.0.9600.19002 **Driver:** IE Driver Server x32 v3.13.0 **Java:** 1.8.0_152  ## Expected Behavior  Click should be error free.  ## Actual Behavior ""Command line server for the IE driver has stopped working"" error. ![image](https://user-images.githubusercontent.com/19555354/41986740-00db3382-7a05-11e8-928a-580d43938459.png)  ## Steps to reproduce Grab any element and perform a click on it. **Demo Project:** https://github.com/BrandonDudek/selenium-bug-ie-click  ## Last Working This was working in **Selenium 3.12** + **IE Driver Server x32 v3.12.0**.  ## Related Bugs #2580  ## Logs > T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(232) Entering Server::ProcessRequest T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(296) Entering Server::ReadRequestBody T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(241) Process request with: URI: /session/c4f2ac84-7d24-49aa-8b64-1952f2a05337/element/1e5fa60f-dcd8-498e-b4a4-14a41d98dba8/click HTTP verb: POST body: {   ""id"": ""1e5fa60f-dcd8-498e-b4a4-14a41d98dba8"" } T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(330) Entering Server::DispatchCommand T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(654) Entering Server::LookupCommand D 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(339) Command: POST /session/c4f2ac84-7d24-49aa-8b64-1952f2a05337/element/1e5fa60f-dcd8-498e-b4a4-14a41d98dba8/click {   ""id"": ""1e5fa60f-dcd8-498e-b4a4-14a41d98dba8"" } T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\server.cc(449) Entering Server::LookupSession T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\iedriver\iesession.cpp(191) Entering IESession::ExecuteCommand T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(130) Entering IECommandExecutor::OnSetCommand T 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\command.cc(31) Entering Command::Deserialize D 2018-06-27 13:12:54:996 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""click"", ""locator"" : { ""sessionid"" : ""c4f2ac84-7d24-49aa-8b64-1952f2a05337"", ""id"" : ""1e5fa60f-dcd8-498e-b4a4-14a41d98dba8"" }, ""parameters"" : {   ""id"": ""1e5fa60f-dcd8-498e-b4a4-14a41d98dba8"" } } T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(141) Entering IECommandExecutor::OnExecCommand T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iesession.cpp(212) Beginning wait for response length to be not zero T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(613) Entering IECommandExecutor::DispatchCommand T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(793) Entering IECommandExecutor::GetCurrentBrowser T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(799) Entering IECommandExecutor::GetManagedBrowser T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(739) Entering IECommandExecutor::IsAlertActive T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\browser.cpp(714) Entering Browser::GetActiveDialogWindowHandle T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\browser.cpp(218) Entering Browser::GetContentWindowHandle D 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(753) No alert handle is found T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(793) Entering IECommandExecutor::GetCurrentBrowser T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(799) Entering IECommandExecutor::GetManagedBrowser T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandhandler.cpp(45) Entering IECommandHandler::GetElement T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(887) Entering IECommandExecutor::GetManagedElement T 2018-06-27 13:12:54:997 c:\projects\webdriver\cpp\iedriver\elementrepository.cpp(34) Entering ElementRepository::GetManagedElement T 2018-06-27 13:12:55:005 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(793) Entering IECommandExecutor::GetCurrentBrowser T 2018-06-27 13:12:55:005 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(799) Entering IECommandExecutor::GetManagedBrowser T 2018-06-27 13:12:55:005 c:\projects\webdriver\cpp\iedriver\browser.cpp(138) Entering Browser::GetDocument I 2018-06-27 13:12:55:005 c:\projects\webdriver\cpp\iedriver\browser.cpp(142) No child frame focus. Focus is on top-level frame T 2018-06-27 13:12:55:010 c:\projects\webdriver\cpp\iedriver\browser.cpp(627) Entering Browser::GetDocumentFromWindow T 2018-06-27 13:12:55:016 c:\projects\webdriver\cpp\iedriver\element.cpp(85) Entering Element::ConvertToJson T 2018-06-27 13:12:55:016 c:\projects\webdriver\cpp\iedriver\element.cpp(547) Entering Element::GetLocationOnceScrolledIntoView T 2018-06-27 13:12:55:016 c:\projects\webdriver\cpp\iedriver\element.cpp(679) Entering Element::GetLocation T 2018-06-27 13:12:55:017 c:\projects\webdriver\cpp\iedriver\element.cpp(815) Entering Element::IsInline D 2018-06-27 13:12:55:017 c:\projects\webdriver\cpp\iedriver\element.cpp(725) Element is a block element, using IHTMLElement2::getBoundingClientRect T 2018-06-27 13:12:55:025 c:\projects\webdriver\cpp\iedriver\element.cpp(836) Entering Element::RectHasNonZeroDimensions T 2018-06-27 13:12:55:027 c:\projects\webdriver\cpp\iedriver\element.cpp(852) Entering Element::GetFrameDetails T 2018-06-27 13:12:55:027 c:\projects\webdriver\cpp\iedriver\element.cpp(1144) Entering Element::GetContainingDocument D 2018-06-27 13:12:55:035 c:\projects\webdriver\cpp\iedriver\element.cpp(802) Element is not in a frame T 2018-06-27 13:12:55:035 c:\projects\webdriver\cpp\iedriver\element.cpp(1093) Entering Element::CalculateClickPoint T 2018-06-27 13:12:55:035 c:\projects\webdriver\cpp\iedriver\element.cpp(1030) Entering Element::GetClickableViewPortLocation T 2018-06-27 13:12:55:035 c:\projects\webdriver\cpp\iedriver\element.cpp(1144) Entering Element::GetContainingDocument T 2018-06-27 13:12:55:036 c:\projects\webdriver\cpp\iedriver\documenthost.cpp(304) Entering DocumentHost::GetDocumentMode T 2018-06-27 13:12:55:049 c:\projects\webdriver\cpp\iedriver\element.cpp(1119) Entering Element::IsLocationInViewPort T 2018-06-27 13:12:55:049 c:\projects\webdriver\cpp\iedriver\element.cpp(1030) Entering Element::GetClickableViewPortLocation T 2018-06-27 13:12:55:049 c:\projects\webdriver\cpp\iedriver\element.cpp(1144) Entering Element::GetContainingDocument T 2018-06-27 13:12:55:050 c:\projects\webdriver\cpp\iedriver\documenthost.cpp(304) Entering DocumentHost::GetDocumentMode T 2018-06-27 13:12:55:056 c:\projects\webdriver\cpp\iedriver\element.cpp(614) Entering Element::IsHiddenByOverflow T 2018-06-27 13:12:55:056 c:\projects\webdriver\cpp\iedriver\element.cpp(1144) Entering Element::GetContainingDocument T 2018-06-27 13:12:55:057 c:\projects\webdriver\cpp\iedriver\script.cpp(60) Entering Script::Initialize T 2018-06-27 13:12:55:057 c:\projects\webdriver\cpp\iedriver\script.cpp(110) Entering Script::AddArgument(IHTMLElement*) T 2018-06-27 13:12:55:057 c:\projects\webdriver\cpp\iedriver\script.cpp(116) Entering Script::AddArgument(VARIANT) T 2018-06-27 13:12:55:057 c:\projects\webdriver\cpp\iedriver\script.cpp(180) Entering Script::Execute T 2018-06-27 13:12:55:057 c:\projects\webdriver\cpp\iedriver\script.cpp(555) Entering Script::CreateAnonymousFunction D 2018-06-27 13:12:55:100 c:\projects\webdriver\cpp\iedriver\element.cpp(593) (x, y, w, h): 263, 325, 461, 34 T 2018-06-27 13:12:55:100 c:\projects\webdriver\cpp\iedriver\element.cpp(94) Entering Element::IsDisplayed T 2018-06-27 13:12:55:100 c:\projects\webdriver\cpp\iedriver\element.cpp(1144) Entering Element::GetContainingDocument T 2018-06-27 13:12:55:101 c:\projects\webdriver\cpp\iedriver\script.cpp(60) Entering Script::Initialize T 2018-06-27 13:12:55:102 c:\projects\webdriver\cpp\iedriver\script.cpp(110) Entering Script::AddArgument(IHTMLElement*) T 2018-06-27 13:12:55:102 c:\projects\webdriver\cpp\iedriver\script.cpp(116) Entering Script::AddArgument(VARIANT) T 2018-06-27 13:12:55:102 c:\projects\webdriver\cpp\iedriver\script.cpp(99) Entering Script::AddArgument(bool) T 2018-06-27 13:12:55:102 c:\projects\webdriver\cpp\iedriver\script.cpp(116) Entering Script::AddArgument(VARIANT) T 2018-06-27 13:12:55:102 c:\projects\webdriver\cpp\iedriver\script.cpp(180) Entering Script::Execute T 2018-06-27 13:12:55:102 c:\projects\webdriver\cpp\iedriver\script.cpp(555) Entering Script::CreateAnonymousFunction T 2018-06-27 13:12:55:119 c:\projects\webdriver\cpp\iedriver\element.cpp(1144) Entering Element::GetContainingDocument  ## Attempted Workarounds Here are things that I have tried, with no success.  ### enableNativeEvents I tried removing the command: `options.enablePersistentHovering();` And adding the commands: `options.requireWindowFocus(); options.enableNativeEvents();`  ### Not destructivelyEnsureCleanSession I tried removing the command: `options.destructivelyEnsureCleanSession();`  ### Not introduceFlakinessByIgnoringSecurityDomains I tried removing the command: `options.introduceFlakinessByIgnoringSecurityDomains();` With ""protected mode"" enabled.","closed","D-IE,","BrandonDudek","2018-06-27T16:43:08Z","2019-08-15T07:09:52Z"
"","6466","Safari - The command 'GET /session/SESSION_ID/element/ELEMENT_ID/displayed' was not found","## Meta - **OS:**  MAC OS High Sierra 10.13.6 **Selenium Version:**  selenium-webdriver (3.14.0) **Browser:**  Safari 12.0 **Ruby:** 2.5.1  ## Expected Behavior - element could be found and clicked  ## Actual Behavior - Issue started after getting Safari browser version upgraded to 12.0. The command GET could not be found `The command 'GET /session/3EB05907-8FC7-4BD5-87CF-91284C2E8F47/element/node-262078C2-F9AF-4EF7-8F06-409B155E06AF/displayed' was not found. (Selenium::WebDriver::Error::UnknownCommandError)`  the same test was properly working with the previous version of Safari Issue not reproduced with Firefox and Chrome","closed","C-rb,","nairouz12","2018-10-01T12:53:53Z","2019-08-15T09:09:42Z"
"","6035","Chrome driver : OpenQA.Selenium.WebDriverException: 'Unexpected error. System.Net.WebException: Unable to connect to the remote server","## Meta - **OS:**   Windows 10 **Selenium Version:**   3.11.0 **Browser:** 67.0.3396.87 **Chrome driver:** 2.39.562718 ## Error  OpenQA.Selenium.WebDriverException: 'Unexpected error. System.Net.WebException: Unable to connect to the remote server ---> System.Net.Sockets.SocketException: No connection could be made because the target machine actively refused it 10.16.24.70:9515  ## Code ` [SetUp]         public void InitilizeTest()         {     DesiredCapabilities capability = DesiredCapabilities.Chrome();             capability.SetCapability(""platform"", ""WIN10"");             capability.SetCapability(""browserName"", ""chrome"");             capability.SetCapability(""version"", ""67.0.3396.87"");             System.Environment.SetEnvironmentVariable(""-Dwebdriver.chrome.driver"", @""C:\\code\\chromedriver.exe"");             driverChrome = new RemoteWebDriver(               new Uri(""http://10.16.24.70:9515""), capability             );         }`  ## Chrome driver running in remote machine When I open the chrome driver in remote path I am getting the following information. ![image](https://user-images.githubusercontent.com/8437883/41536597-b65780be-7323-11e8-85b2-8a413a75fbd5.png)  ## Expected Behavior - We are executing chrome driver in remote machine. ## Actual Behavior - It's failing for the initial run time.","closed","","rajeeshmenoth","2018-06-18T12:53:01Z","2019-08-15T22:09:40Z"
"","6230","Need `addCustomRequestHeaders` capabilities for ChromeOptions","## Meta - **OS:**   OSX, Linux **Selenium Version:**   3.10.0 **Browser:**   Google Chrome **Browser Version:**   Google Chrome 64.0.3282.140 (64 bit)  ## Actual Behavior - Currently, `addCustomRequestHeaders` is not a part of Selenium 2 or 3 implementation. The generic way of bypassing basic auth like `https://user:pass@url.com` doesn't seems to work while automating redirects (from desktop to mobile) and some other complex scenarios.  ## Steps to reproduce - Need something like this as we had in Selenium RC,        caps = Selenium::WebDriver::Remote::Capabilities.chrome(        ""chromeOptions"" => {           ""addCustomRequestHeaders"" => {'Authorization' => ""Basic **encoded_userpass**""}       })        @driver = Selenium::WebDriver.for :chrome, desired_capabilities: caps   Meanwhile, I tried `browsermob-proxy`; but, I faced issues with `https` in `Chrome` browser; and starting `browsermob-proxy` port for parallel tests with 14+ browsers at the same time is never been a good idea.","closed","D-chrome,","prashanth-sams","2018-07-31T13:09:17Z","2019-08-15T15:09:35Z"
"","6060","Unable to Execute Tests using Local Selenium Grid","## Meta - **OS:** Windows 10 **Selenium Version:**  3.12.0 **Browser:**   Chrome  **Browser Version:**   65.0 **Chrome Driver Version:** 2.38 **Language Binding:** C# (.NET) **Test Framework:** SpecFlow  ## Expected Behavior - Tests run using local grid execute as expected  ## Actual Behavior - **Test Execution fails with error:** [6/21/2018 6:46:15 PM Error] 	[ERROR] Exception has been thrown by the target of an invocation. -> Unable to create session from org.openqa.selenium.remote.NewSessionPayload@4bb2f4f4 Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T15:15:08.936Z' System info: host: 'CH5KM6SR117', ip: '10.7.250.164', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: unknown (SessionNotCreated)  **Grid Hub shows:** 18:46:15.430 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {accessKey: 023cf374-b399-4622-bf95-42c..., browserName: Chrome, build: , name: 2018-06-21T22:46:14.864Z, platform: WIN10, timeouts: , username: jason.horn, version: 65.0} 18:46:15.433 DEBUG [ProxySet.getNewSession] - Available nodes: [http://10.7.250.164:30049] 18:46:15.434 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://10.7.250.164:30049 18:46:15.435 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=e82580f7-defb-4c89-a32e-12312b27b913, seleniumProtocol=WebDriver, browserName=Chrome, maxInstances=5, platformName=WIN10, version=65.0, platform=WIN10}  **Grid Node shows:** 18:33:26.567 INFO [SelfRegisteringRemote.registerToHub] - Registering the node to the hub: http://localhost:4444/grid/register 18:33:26.769 INFO [SelfRegisteringRemote.registerToHub] - Updating the node configuration from the hub 18:33:26.802 INFO [SelfRegisteringRemote.registerToHub] - The node is registered to the hub and ready to use  ## Steps to reproduce - 1. startup selenium server hub    - java -jar C:\development\tools\Selenium\SeleniumServer\selenium-server-standalone.jar -role hub -hubConfig SeleniumServerHubConfig.json (see attached SeleniumServerHubConfig.json) 1. start selenium server node    - java -Dwebdriver.chrome.driver=C:\development\tools\Selenium\ChromeDriver\chromedriver.exe -jar C:\development\tools\Selenium\SeleniumServer\selenium-server-standalone.jar -role node -nodeConfig SeleniumServerNodeConfig.json (see attached SeleniumServerNodeConfig.json) 1. execute tests from Visual Studio  ## Attachments - [configs.zip](https://github.com/SeleniumHQ/selenium/files/2125611/configs.zip)","closed","","jarhorn","2018-06-21T23:00:26Z","2019-08-15T21:09:56Z"
"","6017","Issue with Screenshots in Safari 11.1","## Meta - **OS: OS X Sierra (10.13) Browser:safari 11.1**   ## Problem - We are observing that when we execute a run on safari 11.1  the complete page screenshot is taken which is not expected.  ## Expected Behavior - The screenshot captured should be only the part which is in view port  ![image](https://user-images.githubusercontent.com/34885614/41342564-2e4e0646-6f1a-11e8-8f7c-577aa681fa94.png)   ## Actual Behavior - The complete page screenshot is taken ![image](https://user-images.githubusercontent.com/34885614/41342477-f5270458-6f19-11e8-842b-bf911015df56.png)  ## Steps to reproduce -  1. Open Amazon site (amazon.com) 2.Navigate to footer 3.Get the screenshot of the footer part which is in view port","closed","","ppanuganti","2018-06-13T09:29:43Z","2019-08-15T22:09:48Z"
"","6534","python's webdriver.Remote ignores invalid SSL certificates for selenium hub","## Meta - **Bindings: python** OS:   any Selenium Version:  3.14.0 Browser:  any Browser Version:  any  ## Expected Behavior -  Connecting to a remote webdriver with an invalid SSL certificate should not be accepted. This was the case before 3.14.0.  Ideally, we should be able to pass a custom CA bundle to use for validation in `selenium.webdriver.Remote` constructor.  ## Actual Behavior -  Because since https://github.com/SeleniumHQ/selenium/commit/8d98f3223c3757bac24f779f5d8c1e9e1e8edcfb the backend was changed to urllib3 and urllib3 does not validate SSL certificates by default ([reference](https://urllib3.readthedocs.io/en/latest/user-guide.html#certificate-verification)), then if the hub uses an invalid certificate, this is ignored.   ## Steps to reproduce -  Something like   ```python from selenium import webdriver driver = webdriver.Remote(     command_executor='https://wrong.badssl.com/',     desired_capabilities={       'browserName': 'firefox',     }) ```  should raise a `CertificateError` about the invalid certificate, similar to: ``` MaxRetryError: HTTPSConnectionPool(host='wrong.badssl.com', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:720)'),)) ```  The example does not fully makes sense because `https://wrong.host.badssl.com` is obviously not the URL of a selenium hub. A real life case where this causes problems is when running selenium hub behind an https frontend.  cc @AutomatedTester","closed","C-py,","jerome-nexedi","2018-10-15T06:17:15Z","2020-05-05T21:13:54Z"
"","6292","Options.getCookie should return null if cookie not found.","## Meta - ### OS:   OSX 10.13 ### Selenium Version:   4.0.0-alpha.1 ### Browser:   Firefox developer edition  ### Browser Version:   62.0b15  ## Expected Behavior - If cookie is not exists, I should get null just like official document said. https://seleniumhq.github.io/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_Options.html  * Retrieves the cookie with the given name. Returns null if there is no such cookie. The cookie will be returned as a JSON object as described by the WebDriver wire protocol.*  ## Actual Behavior - I got an error:   ```     NoSuchCookieError: No cookie with name sbet        at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:550:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:542:13)       at Executor.execute (node_modules/selenium-webdriver/lib/http.js:468:26) ``` ## Steps to reproduce -  I use Javascript and `selenium-webdriver@4.0.0-alpha.1`  1. Initialize Driver 2. call await driver.manage().getCookie('XXX') 3. I should got a null in step 2 but I got NoSuchCookieError.","closed","C-nodejs,","AllenFang","2018-08-16T03:36:05Z","2020-04-02T14:32:07Z"
"","6064","[rb] send_keys_to_element method in W3C bridge does not support file detector","## Meta -  OS: Any Selenium: 3.12.0 Firefox: 60.0.2 GeckoDriver: 0.21.1  ## Expected Behavior -  Using file_detector and send_keys method I can upload file  from local machine to remote browser.  ## Actual Behavior -  Ruby binding for w3c protocol does not support file_detector. File not upload. Client get error ""File not found: ""  OSS bridge with file_detector support: https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/remote/oss/bridge.rb#L365  W3C without file_detector support: https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/remote/w3c/bridge.rb#L362  ## Steps for reproduce  https://github.com/mskvn/mskvn.github.io","closed","C-rb,","mskvn","2018-06-22T12:59:49Z","2019-08-15T19:09:44Z"
"","6083","Make OpenQA.Selenium.Keys Non-Static for DotNet","## Meta  OS:  Windows 10 Selenium Version:   3.3.0 Visual Studio 2015  ## Expected Behavior  OpenQA.Selenium.Keys is non-static class and it can be inherited. It is possible to wrap this class and then expand as ShortKeys.  ## Actual Behavior  OpenQA.Selenium.Keys is static class and it cannot be inherited from. There is not allowed to inherit from static class","closed","C-dotnet,","zubra5","2018-06-27T14:48:51Z","2019-08-15T20:09:58Z"
"","6087","Click functionality inconsistent with geckodriver","## Meta  OS:  Mac OS  Selenium Version:  4.0.0-alpha.1 JavaScript  Browser:  Firefox (using GeckoDriver)  Browser Version:  61.0    ## Expected Behavior - Running  ```javascript let cancelButton = await browser.findElement(By.id('cancel-export-div')); const actions = browser.actions(); await actions.click(cancelButton).perform(); ``` should click on the cancel button (which is actually a div) consistently.   ## Actual Behavior - The button is not always clicked properly (which causes the test to fail). It fails around 20% of the time, but it's hard to discern when it'll happen and it seems completely arbitrary to me.   It's **not** an issue with the element not being loaded, as I am sleeping a few seconds before clicking and can observe every time that the element is loaded and clickable. In the times that the element is not clicked properly, I can see that the mouse moves to the `WebElement`, but the click just doesn't seem to register (perhaps it doesn't execute either).  However, I use clicks everywhere else in my tests and they all succeed. This is the only case where it fails. In this case, I'm clicking a button which creates a progress bar div (takes the whole page), and this click to cancel the progress (and destroy the div) sometimes fails.  ## Steps to reproduce -  Not sure, seems to happen arbitrarily, yet only in this specific test. The exact code for this test: ```javascript test('cancel progress bar works', async () => {     await browser.sleep(1500);      let cancelButton = await browser.findElement(By.id('cancel-export-div'));     const actions = browser.actions();     await actions.click(cancelButton).perform();       await browser.sleep(1000);     expect(await browser.findElements(By.id('pixel-export-div'))).toEqual([]); // empty list since not found     }); ```  I ran my unit tests 10 times in succession, and in 2/10 the click failed. The above code should realistically implement a click on the cancel button consistently.   Seems to be related to [this issue](https://github.com/SeleniumHQ/selenium/issues/4075), but I'm using geckodriver not chromedriver","closed","R-awaiting answer,","EricHanLiu","2018-06-27T18:19:52Z","2019-08-15T20:09:57Z"
"","6057","Requests for operablink fallback to Chrome","## Meta  ### OS  Windows 10, Ubuntu ### Selenium Version 3.8.1, 3.12.0 ### Browser Opera ### Browser Version Opera 53  ## Expected Behavior Opera and OperaDriver should launch, given the requested capability is `operablink`  ## Actual Behavior Chrome and Chromedriver launch as the fallback driver, and Chrome is instead used for the testing.  ## Steps to reproduce Setup a Selenium node and hub with `opera` and `operablink` included as capabilities. The following example code is for a Windows node.  ```java final String finalSeleniumHubUrl =  OperaOptions operaOptions = new OperaOptions(); String operaBinaryPath = ""C:\\Program Files\\Opera\\launcher.exe""; operaOptions.setBinary(operaBinaryPath); driver = new RemoteWebDriver(finalSeleniumHubUrl, operaOptions); ``` Chrome launches on the node.  However, if we change the code to the following ```java final String finalSeleniumHubUrl =  OperaOptions operaOptions = new OperaOptions(); operaOptions.setCapability(BROWSER_NAME, org.openqa.selenium.remote.BrowserType.OPERA); // This string needs to be changed to the correct path of Opera per OS. This is for Windows String operaBinaryPath = ""C:\\Program Files\\Opera\\launcher.exe""; operaOptions.setBinary(operaBinaryPath); driver = new RemoteWebDriver(finalSeleniumHubUrl, operaOptions); ```  Opera launches as intended.  #### My Proposed Solution At https://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/selenium/remote/server/ActiveSessionFactory.java#L93, `OPERA_BLINK` is assigned a non-existent driver service, which fails the following class exists test. If the driver service for `OPERA_BLINK` is changed to be the same as the driver service for `OPERA`, this issue should be resolved.","closed","C-grid,","dmssargent","2018-06-21T19:23:38Z","2019-08-15T21:09:54Z"
"","6071","[rb] Options overwrite custom desired capabilities","## Meta Selenium-rb gem version:   selenium-webdriver (3.13.0)  Browser:  Chrome 67.0.3396.87 (Official Build) (64-bit)  ## Driver setup  ```ruby  Capybara.register_driver(:selenium_chrome_headless) do |app|   capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     'goog:chromeOptions': { args: %w[no-sandbox headless disable-gpu window-size=1024,768] }   )    Capybara::Selenium::Driver.new(app, browser: :chrome, desired_capabilities: capabilities) end ```  I know I can setup args using `args` (deprecated) or options  ## Expected Behavior  Create driver with given capabilities  ## Actual Behavior  Options overwrite custom capabilities because of https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/chrome/driver.rb#L106  ```ruby caps.merge!(options) unless options.empty? ```  `options` here is not empty. It equals `{""goog:chromeOptions"" => {} }`  ## Steps to reproduce  Added spec and possible fix in: https://github.com/artplan1/selenium/commit/9b14903b44b8136f418ce520aa564150603244d5  Possible fix:  ```ruby caps.merge!(options) unless options[Options::KEY].empty? ```  or `as_json` in Options.rb can return `{}` instead of `{""goog:chromeOptions"" => {} }` not sure if it's required with recent changes  ```ruby def as_json(*) ...   opts ? {KEY => opts} : {} end ```  Spec:  ```ruby it 'does not merge empty options' do   custom_caps = Remote::Capabilities.new('goog:chromeOptions' => {args: %w[foo bar]})    expect(http).to receive(:call) do |_, _, payload|     expect(payload[:desiredCapabilities]['goog:chromeOptions'][:args]).to eq(%w[foo bar])     resp   end    Driver.new(http_client: http, desired_capabilities: custom_caps) end ```  Thanks","closed","C-rb,","artplan1","2018-06-26T12:33:04Z","2019-08-15T20:09:49Z"
"","6494","Grid's Hub reports to have capacity when node is marked down","## Meta Selenium Version:   The one available in selenium/hub:3.14.0-gallium  ## Expected Behavior When all the nodes in the Hub have been marked down, the Hub should report it does not have capacity.  ## Actual Behavior - The Hub marks the node as down immediately after closing the node, however it keeps reporting to have capacity for 50+ seconds.  ## Steps to reproduce - Have a Hub running with no nodes. Check how it reports that it does not have capacity. Now add a browser, for example a Chrome. The Hub now reports to have capacity. Kill the browser. The Hub's log has an entry like `Marking the node http://:5555 as down: cannot reach the node for 2 tries`, however, it keeps reporting to have capacity. A while later, the Hub's log will have `Cleaning up stale test sessions on the unregistered node http://:5555`, and will correctly report that it has no capacity.  Actual commands to reproduce it in a single computer (can remove remote_host and share a docker network or whatever). Assume my computer IP is 192.168.1.2.  Open 3 tabs:  Tab 1: `docker run -it -p 4444:4444 selenium/hub:3.14`  Tab 2: `watch -n 1 curl http://localhost:4444/wd/hub/status` No capacity.  Tab 3: `docker run -it -p 5555:5555 -e ""HUB_HOST=192.168.1.2"" -e ""HUB_PORT=4444"" -e REMOTE_HOST=""http://192.168.1.2:5555"" --shm-size=2g selenium/node-chrome:3.14`  Tab 2: reports capacity  Tab 3: CTRL + C  Tab 1: `Marking the node http://192.168.1.2:5555 as down: cannot reach the node for 2 tries`  Tab 3: reports capacity  -----> **WRONG! Here the Hub should report it does not have capacity**  Wait around 50 seconds...  Tab 1: `Cleaning up stale test sessions on the unregistered node http://192.168.1.2:5555`  Tab 3: reports it does not have capacity","closed","C-grid,","ay0o","2018-10-08T11:06:48Z","2019-08-15T06:10:02Z"
"","5825","Lost focus and connection with IE Driver on prebuild binaries and 3.11.1 driver version","## Meta OS: Windows 10 64bit Selenium Server Version:  3.11.1 Browser:  Internet Explorer 11.371.16299.0 -> with disabled Enchanced protected mode.  Driver: IEDriverServer.exe from prebuilt binaries included in issue [5664](https://github.com/SeleniumHQ/selenium/issues/5664) Tests run in Node / Cucumber-js  ## Expected Behavior Driver should process tests and actions on browsers without loosing window focus.  ## Actual Behavior While starting tests, IEDriver is starting the page but looses focus after a while.  ``` java -jar testUtils/gui/seleniumServer/selenium-server-standalone-3.11.0.jar -debug 12:04:02.774 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.11.0', revision: 'e59cfb3' 12:04:02.776 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444 2018-04-25 12:04:02.839:INFO::main: Logging initialized @261ms to org.seleniumhq.jetty9.util.log.StdErrLog 12:04:03.033 INFO [SeleniumServer.boot] - Welcome to Selenium for Workgroups.... 12:04:03.034 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444 12:04:07.153 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@f494d6 12:04:07.156 DEBUG [WebDriverServlet.lambda$handle$1] - /session: Executing POST on /session (handler: BeginSession) 12:04:07.218 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: internet explorer} 12:04:07.221 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:07.246 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:45790/status] 12:04:07.248 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:45790/status Started InternetExplorerDriver server (64-bit) 3.11.1.5 Listening on port 45790 Only local connections are allowed 12:04:07.766 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:45790/status 12:04:07.772 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@13f9a5b5 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/1.8.0_161}{Host: localhost:45790}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} 12:04:07.779 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@3d0f987 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 251}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:04:08.545 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 12:04:08.562 DEBUG [RemoteWebDriver.log] - Executing: newSession [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:45790/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}}] 12:04:08.564 DEBUG [RemoteWebDriver.log] - Executed: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:45790/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}}] 12:04:08.569 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:08.585 DEBUG [WebDriverServlet.handle] - Found handler: 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:08.587 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (internet explorer): Executing POST on /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/window/maximize (handler: ServicedSession) 12:04:08.591 DEBUG [Passthrough.handle] - To upstream: {""windowHandle"":""current""} 12:04:08.592 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@1610e199 pairs: {POST /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/window/maximize HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:45790}{Content-Length: 26} 12:04:08.605 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@16e93847 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 81}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:04:08.608 DEBUG [Passthrough.handle] - To downstream: {         ""value"" :         {                 ""height"" : 1056,                 ""width"" : 1936,                 ""x"" : -8,                 ""y"" : -8         } }  12:04:08.622 DEBUG [WebDriverServlet.handle] - Found handler: 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:08.623 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (internet explorer): Executing POST on /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/url (handler: ServicedSession) 12:04:08.624 DEBUG [Passthrough.handle] - To upstream: {""url"":""https://mdm-client.azurewebsites.net""} 12:04:08.624 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@92c7589 pairs: {POST /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/url HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:45790}{Content-Length: 46} 12:04:08.681 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@1c33f517 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 19}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:04:08.683 DEBUG [Passthrough.handle] - To downstream: {         ""value"" : null }  12:04:08.690 DEBUG [WebDriverServlet.handle] - Found handler: 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:08.690 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (internet explorer): Executing POST on /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/elements (handler: ServicedSession) 12:04:08.693 DEBUG [Passthrough.handle] - To upstream: {""using"":""xpath"",""value"":""//button""} 12:04:08.694 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@90d15e9 pairs: {POST /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/elements HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:45790}{Content-Length: 36} 12:04:09.049 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@69fb207 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 17}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:04:09.050 DEBUG [Passthrough.handle] - To downstream: {         ""value"" : [] }  12:04:09.057 DEBUG [WebDriverServlet.handle] - Found handler: 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:09.058 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (internet explorer): Executing POST on /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/elements (handler: ServicedSession) 12:04:09.059 DEBUG [Passthrough.handle] - To upstream: {""using"":""xpath"",""value"":""//button""} 12:04:09.060 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@1b4f729 pairs: {POST /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e/elements HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:45790}{Content-Length: 36} 12:04:09.063 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@acc1d77 pairs: {null: HTTP/1.1 404 Not Found}{Content-Length: 147}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:04:09.067 DEBUG [Passthrough.handle] - To downstream: {         ""value"" :         {                 ""data"" : null,                 ""error"" : ""no such window"",                 ""message"" : ""Currently focused window has been closed."",                 ""stacktrace"" : """"         } }  12:04:09.083 DEBUG [WebDriverServlet.handle] - Found handler: 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (org.openqa.selenium.ie.InternetExplorerDriverService) 12:04:09.084 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (internet explorer): Executing DELETE on /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e (handler: ServicedSession) 12:04:09.084 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@1aeb3d7 pairs: {DELETE /session/318cb13d-3d05-47ec-89d7-5b4a3e1dff6e HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:45790} 12:04:09.098 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@13da4e57 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 19}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:04:09.100 DEBUG [Passthrough.handle] - To downstream: {         ""value"" : null } ```  Returned error in tests: ```` NoSuchWindowError: Currently focused window has been closed. ````  ## Additionally While using IEDriver 3.11.1 I'm getting following error: ``` WebDriverError: java.net.ConnectException: Connection refused: connect ```  Logs from selenium server: ``` java -jar testUtils/gui/seleniumServer/selenium-server-standalone-3.11.0.jar -debug 12:15:46.079 INFO [GridLauncherV3.launch] - Selenium build info: version: '3.11.0', revision: 'e59cfb3' 12:15:46.081 INFO [GridLauncherV3$1.launch] - Launching a standalone Selenium Server on port 4444 2018-04-25 12:15:46.144:INFO::main: Logging initialized @223ms to org.seleniumhq.jetty9.util.log.StdErrLog 12:15:46.333 INFO [SeleniumServer.boot] - Welcome to Selenium for Workgroups.... 12:15:46.333 INFO [SeleniumServer.boot] - Selenium Server is up and running on port 4444 12:15:49.603 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@f076b0 12:15:49.608 DEBUG [WebDriverServlet.lambda$handle$1] - /session: Executing POST on /session (handler: BeginSession) 12:15:49.680 INFO [ActiveSessionFactory.apply] - Capabilities are: Capabilities {browserName: internet explorer} 12:15:49.682 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.remote.server.ServicedSession$Factory (provider: org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:49.711 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:27704/status] 12:15:49.712 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:27704/status Started InternetExplorerDriver server (64-bit) 3.11.1.0 Listening on port 27704 Only local connections are allowed 12:15:50.228 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:27704/status 12:15:50.229 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@4e5215 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/1.8.0_161}{Host: localhost:27704}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} 12:15:50.231 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@10670057 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 187}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:15:50.950 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 12:15:50.967 DEBUG [RemoteWebDriver.log] - Executing: newSession [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:27704/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}}] 12:15:50.967 DEBUG [RemoteWebDriver.log] - Executed: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:27704/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}}] 12:15:50.971 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:50.984 DEBUG [WebDriverServlet.handle] - Found handler: 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:50.985 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 112486e8-26cc-41f1-b482-85d701833f29 (internet explorer): Executing POST on /session/112486e8-26cc-41f1-b482-85d701833f29/window/maximize (handler: ServicedSession) 12:15:50.988 DEBUG [Passthrough.handle] - To upstream: {""windowHandle"":""current""} 12:15:50.989 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@17d1a649 pairs: {POST /session/112486e8-26cc-41f1-b482-85d701833f29/window/maximize HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:27704}{Content-Length: 26} 12:15:51.002 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@1e5a79f7 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 53}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:15:51.005 DEBUG [Passthrough.handle] - To downstream: {""value"":{""height"":1056,""width"":1936,""x"":-8,""y"":-8}}   12:15:51.017 DEBUG [WebDriverServlet.handle] - Found handler: 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:51.018 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 112486e8-26cc-41f1-b482-85d701833f29 (internet explorer): Executing POST on /session/112486e8-26cc-41f1-b482-85d701833f29/url (handler: ServicedSession) 12:15:51.019 DEBUG [Passthrough.handle] - To upstream: {""url"":""https://mdm-client.azurewebsites.net""} 12:15:51.019 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@1270ab29 pairs: {POST /session/112486e8-26cc-41f1-b482-85d701833f29/url HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:27704}{Content-Length: 46} 12:15:51.071 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@7968397 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 15}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:15:51.072 DEBUG [Passthrough.handle] - To downstream: {""value"":null}   12:15:51.078 DEBUG [WebDriverServlet.handle] - Found handler: 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:51.079 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 112486e8-26cc-41f1-b482-85d701833f29 (internet explorer): Executing POST on /session/112486e8-26cc-41f1-b482-85d701833f29/elements (handler: ServicedSession) 12:15:51.080 DEBUG [Passthrough.handle] - To upstream: {""using"":""xpath"",""value"":""//button""} 12:15:51.081 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@d444e09 pairs: {POST /session/112486e8-26cc-41f1-b482-85d701833f29/elements HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:27704}{Content-Length: 36} 12:15:51.446 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@1cb69867 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 13}{Content-Type: application/json; charset=UTF-8}{Cache-Control: no-cache}{Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept}{Accept-Ranges: bytes}{Connection: close} 12:15:51.447 DEBUG [Passthrough.handle] - To downstream: {""value"":[]}   12:15:51.453 DEBUG [WebDriverServlet.handle] - Found handler: 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:51.453 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 112486e8-26cc-41f1-b482-85d701833f29 (internet explorer): Executing POST on /session/112486e8-26cc-41f1-b482-85d701833f29/elements (handler: ServicedSession) 12:15:51.456 DEBUG [Passthrough.handle] - To upstream: {""using"":""xpath"",""value"":""//button""} 12:15:51.457 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@488d179 pairs: {POST /session/112486e8-26cc-41f1-b482-85d701833f29/elements HTTP/1.1: null}{Accept: application/json; charset=utf-8}{Content-Type: application/json; charset=utf-8}{Connection: close}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_161}{Host: localhost:27704}{Content-Length: 36} 12:15:54.882 DEBUG [WebDriverServlet.handle] - Found handler: 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:54.883 DEBUG [WebDriverServlet.lambda$handle$1] - Handler thread for session 112486e8-26cc-41f1-b482-85d701833f29 (internet explorer): Executing DELETE on /session/112486e8-26cc-41f1-b482-85d701833f29 (handler: ServicedSession) 12:15:55.895 INFO [ActiveSessions$1.onStop] - Removing session 112486e8-26cc-41f1-b482-85d701833f29 (org.openqa.selenium.ie.InternetExplorerDriverService) 12:15:56.898 DEBUG [UrlChecker.waitUntilUnavailable] - Waiting for http://localhost:27704/shutdown 12:15:56.901 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:27704/shutdown ```","closed","","sstepowany","2018-04-25T10:19:56Z","2019-08-16T04:10:00Z"
"","6438","Regression in Selenium >= 3.8.1: ConnectionResetError with chromedriver and Travis CI (Packet instance, not EC2)","## Meta OS: Ubuntu Trusty (Travis CI, Packet) Selenium Version: >= 3.8.1 Browser: latest Chrome (69) with latest chromedriver (2.42)  ## Expected Behavior  Selenium should work like = 3.8.1 (incl. 3.14.1) with chromedriver and Travis CI Packet instance (EC2 instance works good for me).  Selenium 3.8.0 works good.  I can't reproduce this problem using Python 2.7 (Python 3.x socket bug?)  I made a [special repository](https://github.com/andreymal/selenium-travis-test) for testing, see results here: https://travis-ci.org/andreymal/selenium-travis-test/branches  You can see the full log with traceback here: https://travis-ci.org/andreymal/selenium-travis-test/jobs/430688661","closed","C-py,","andreymal","2018-09-22T17:02:59Z","2019-08-14T17:09:58Z"
"","5976","SendKeys send wrong command (SHIFT, F2)","## Meta OS: Fedora  Selenium Version:  3.12.0 Browser:  Firefox Quantum Browser Version:  58.0.1 (64-bit) , geckodriver 0.20.1  ## Expected Behavior  Send_keys  with SHIFT+F2 open Firefox Console on every page ## Actual Behavior -  Send SHIFT+F2  on real webpage seems like send a scroll command, instead on about:config or local page works perfectly  ## Steps to reproduce - open a terminal and execute following python code:  ``` import selenium.webdriver import pdfkit import time from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.keys import Keys  driver = selenium.webdriver.Firefox()  driver.get('http://seleniumhq.github.io/selenium/docs/api/py/webdriver/selenium.webdriver.common.keys.html')  time.sleep(1)  # select pdf filename ac = ActionChains(driver)  # SHIFT+F2 opens dev toolbar  ac.key_down(Keys.SHIFT).send_keys(Keys.F2).key_up(Keys.SHIFT).perform() time.sleep(0.1) # command to change print filename ac.send_keys('pref set print.print_to_filename /home/test2.pdf').send_keys(Keys.ENTER).perform() time.sleep(5)  # disable dev toolbar #ac.key_up(Keys.SHIFT).send_keys(Keys.F2).key_up(Keys.SHIFT).perform()  driver.execute_script(""window.print()"")  ```","closed","","aviarrigo","2018-06-02T17:02:48Z","2019-08-15T21:09:59Z"
"","5938","Option to ignore StaleElementReferenceErrors","## Meta OS:  Windows 10 Selenium Version:  selenium-webdriver@4.0.0-alpha.1 Browser:  Firefox (GeckoDriver) Browser Version: 59  Consider a test that:  1. Loads an often-changing page 2. Grabs an element from the page 3. Gets the text of that element  I don't care that the element is becoming stale (being removed from the DOM). I just want to check what its text _was_ at one point.  ## Expected Behavior  Running without errors.  ## Actual Behavior  ``` StaleElementReferenceError: The element reference of  is stale; either the element is no longer attached to the DOM, it is not in the current frame context, or the document has been refreshed        at Object.throwDecodedError (node_modules/selenium-webdriver/lib/error.js:550:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:542:13)       at Executor.execute (node_modules/selenium-webdriver/lib/http.js:468:26) ```  ## Steps to reproduce -  1. Run a page that constantly creates and removes elements: https://codepen.io/joshuakgoldberg/pen/pVmdOa  2. Try to grab an element on the page and its text content with `selenium-webdriver`:  ```javascript const element = await browser.findElement(By.id(""useful""));  const text = await element.getText(); // throws an error most of the time ```","closed","","JoshuaKGoldberg","2018-05-24T07:31:44Z","2019-08-16T00:10:02Z"
"","6185","Chrome didn't shut down correctly","## Meta OS:  Windows 10 Selenium Version:  3.12.0-3.13.1 IDE: Visual Studio 2017, C# Browser:  Chrome 65-67, ChromeDriver 2.38.0-2.40.0  ## Expected Behavior Calling driver.Close(), driver.Quit() or driver.Dispose() correctly closes browser  ## Actual Behavior When custom user-data-dir used, calling one of these function closes browser. But after reopening with the same user-data-dir browser shows message ""Chrome didn't shut down correctly"".  ## Steps to reproduce 1. Specify new user-data-dir, create new instance of chromedriver and run it 2. Open any web site 3. Call driver.Quit() or driver.Dispose() to close browser 4. Create new instance of chromedriver with the same user-data-dir and run it 5. ""Chrome didn't shut down correctly"" message will appear","closed","","max-kuzmin","2018-07-19T20:43:42Z","2019-08-15T01:09:38Z"
"","6058","Calling isDisplayed() on an empty span with certain styling results in true when it should not","## Meta OS:  Windows 10 Selenium Version:  3.11.0 Browser:  IE11, Firefox, Chrome Browser Version:   IE: 11.1.029.15063.0 (64-bit) Firefox: 58.0.2 (64-bit) Chrome: Version 67.0.3396.87 (Official Build) (64-bit)   ## Expected Behavior Calling `isDisplayed` on any empty span should always result in `false`.  ## Actual Behavior Calling `isDisplayed` on an empty span with `style=""position:absolute; top: 100px; bottom: 100px; left: 100px; right: 100px;""` results in `true`.  ## Steps to reproduce Given this html:  ```    	 	 	 	 	 	    ```  Check the result of calling `isDisplayed` on each `span`:  ``` const {Builder, By} = require('selenium-webdriver');  (async () => { 	let driver = await new Builder() 		.forBrowser('firefox') 		.build();  	await driver.get('http://127.0.0.1:8081/selenium_bug.html');  	let isDisplayed5 = await driver.findElement(By.id('none')).isDisplayed(); 	console.log(`none: ${isDisplayed5}`);  	let isDisplayed1 = await driver.findElement(By.id('absolute-top-bottom-left')).isDisplayed(); 	console.log(`absolute-top-bottom-left: ${isDisplayed1}`);  	let isDisplayed2 = await driver.findElement(By.id('absolute-top-bottom-right')).isDisplayed(); 	console.log(`absolute-top-bottom-right: ${isDisplayed2}`);  	let isDisplayed3 = await driver.findElement(By.id('absolute-top-left-right')).isDisplayed(); 	console.log(`absolute-top-left-right: ${isDisplayed3}`);  	let isDisplayed4 = await driver.findElement(By.id('absolute-bottom-left-right')).isDisplayed(); 	console.log(`absolute-bottom-left-right: ${isDisplayed4}`);  	let isDisplayedVisible = await driver.findElement(By.id('absolute-top-bottom-left-right')).isDisplayed(); 	console.log(`absolute-top-bottom-left-right: ${isDisplayedVisible}`);  	await driver.quit(); })(); ```  Output:  ``` none: false absolute-top-bottom-left: false absolute-top-bottom-right: false absolute-top-left-right: false absolute-bottom-left-right: false absolute-top-bottom-left-right: true ```  I have put this code [into a repository](https://github.com/GitSage/is-displayed-position-absolute-bug) along with a `package.json` for easier reproduction.   I am willing to try to fix this, but I'll need some advice on where to look for the `isDisplayed()` functionality. I wasn't able to track it down in the source to `selenium`. From what I discovered it's a complicated problem and handled differently for each browser.  If you're wondering why this strange-looking combination of styles is relevant: it is used in the angular material library. For example, see [the sample button on this page](https://material.angular.io/components/button/overview). Screenshot attached.  ![capture](https://user-images.githubusercontent.com/7013825/41744029-cc01b752-755f-11e8-8faa-d011854618eb.PNG)","closed","","ben-yocum","2018-06-21T20:33:55Z","2019-08-15T21:10:02Z"
"","6126","Grid: Non-Existent Route Returns 200 Status Code","## Meta OS:  macOS Selenium Version:  3.11, code indicates this should be in master still Browser:  Chrome  ## Expected Behavior When visiting a page/servlet that does not exist in Grid, a 404 status code should be returned.  ## Actual Behavior A 200 status code is returned for pages that do not exist.  ## Steps to reproduce 1) Launch a hub or node 2) Open your browser's network tab 3) Visit localhost:4444/thisdoesntexist  ``` Request URL: http://localhost:4444/thisdoesntexist Request Method: GET Status Code: 200 OK ```  ## More Information It appears the design for any [non-registered routes](https://github.com/SeleniumHQ/selenium/blob/5457171bd52747eed2ab625607d29670448f4523/java/server/src/org/openqa/grid/selenium/GridLauncherV3.java#L270) to direct to `DisplayHelpServlet`, which [returns the 200](https://github.com/SeleniumHQ/selenium/blob/5457171bd52747eed2ab625607d29670448f4523/java/server/src/org/openqa/grid/web/servlet/DisplayHelpServlet.java#L122).  Considering I typed a page that should not exist, I feel it may be more obvious if a 404 is returned to indicate a problem.  Context: My application was requesting a custom servlet by the wrong name, and became confused when a 200 was returned but the proper action did not occur. A 404 would have very quickly jumped out as a route issue.","closed","C-grid,","dylanlive","2018-07-06T23:43:24Z","2019-08-15T17:10:04Z"
"","6352","Test testScrollingAccountsForScrollbarWidths fails consistently","## Meta OS:  Mac OSX High Sierra Version 10.13.6  Selenium Version:  Master branch as of August 30, 2018.  No changes have been made locally.  Browser: Chrome  Browser Version: 68.0.3440.106 (Official Build) (64-bit)  ## Expected Behavior All tests pass.  ## Actual Behavior `testScrollingAccountsForScrollbarWidths` fails consistently.  See output below.  ## Steps to reproduce 1. Fork SeleniumHQ/Selenium. 2. Ensure Python 2.7.15 is installed. `python` is in the `$PATH` and points to Python 2.7.15. 3. Ensure chromedriver is in the `$PATH`. (I downloaded version 2.41.) 4. Run `git clone https://github.com//selenium.git`. 5. Run `git remote add upstream git://github.com/seleniumhq/selenium.git` 6. `pip install requests` (For some reason my Python installation does not have `requests`.) 7. Run `git fetch upstream` 8. Run `git rebase upstream/master` 9. Run `./go clean test` 10.   ## Output ``` 22:38:27.315  testScrollingAccountsForScrollbarWidths : FAILED 22:38:27.325  ERROR in testScrollingAccountsForScrollbarWidths Call to fail() Expected a test failure in 'testScrollingAccountsForScrollbarWidths' but the test passed. Error: Call to fail() Expected a test failure in 'testScrollingAccountsForScrollbarWidths' but the test passed.     at Object.goog.testing.asserts.raiseException (http://localhost:21904/third_party/closure/goog/testing/asserts.js:1283:11)     at fail (http://localhost:21904/third_party/closure/goog/testing/asserts.js:151:24)     at goog.testing.ExpectedFailures.run (http://localhost:21904/third_party/closure/goog/testing/expectedfailures.js:214:5)     at testScrollingAccountsForScrollbarWidths (http://localhost:21904/javascript/atoms/test/scrolling_test.html:230:24)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:899:21)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8)     at goog.testing.TestCase.finishTestInvocation_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:999:10)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeTearDown_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:864:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8)     at goog.testing.TestCase.finishTestInvocation_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:999:10)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeTearDown_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:864:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8)     at goog.testing.TestCase.finishTestInvocation_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:999:10)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeTearDown_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:864:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8)     at goog.testing.TestCase.finishTestInvocation_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:999:10)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeTearDown_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:864:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8)     at goog.testing.TestCase.finishTestInvocation_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:999:10)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeTearDown_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:864:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8)     at goog.testing.TestCase.finishTestInvocation_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:999:10)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeTearDown_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:864:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.safeRunTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:849:8)     at goog.testing.TestCase.invokeTestFunction_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:927:19)     at goog.testing.TestCase.runNextTest_ (http://localhost:21904/third_party/closure/goog/testing/testcase.js:839:8) ```  ``` ====DEBUG LOGS====  [2018-08-30 22:38:26.452][info ][tid:11][org.openqa.selenium.javascript.ClosureTestStatement] Running: http://localhost:21904/javascript/atoms/test/scrolling_test.html [2018-08-30 22:38:26.453][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: maximizeCurrentWindow [cb4244cba250b9cdd769467f6c9c26f0, maximizeCurrentWindow {}] [2018-08-30 22:38:26.456][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, maximizeCurrentWindow {}] [2018-08-30 22:38:26.456][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=if (window && window.top) window.top.G_testRunner = null, args=[]}] [2018-08-30 22:38:26.464][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=if (window && window.top) window.top.G_testRunner = null, args=[]}] [2018-08-30 22:38:26.464][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: get [cb4244cba250b9cdd769467f6c9c26f0, get {url=http://localhost:21904/javascript/atoms/test/scrolling_test.html}] [2018-08-30 22:38:26.478][info ][tid:34][org.seleniumhq.jetty9.server.ResourceService] content=ResourceHttpContent@475c01e2{r=file:///Users/clare/Documents/workspace/selenium/javascript/atoms/test/scrolling_test.html,ct=text/html,c=false} [2018-08-30 22:38:26.702][info ][tid:39][org.seleniumhq.jetty9.server.ResourceService] content=ResourceHttpContent@c05d0e5{r=file:///Users/clare/Documents/workspace/selenium/javascript/atoms/test/testdata/scrolling_iframe.html,ct=text/html,c=false} [2018-08-30 22:38:26.765][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, get {url=http://localhost:21904/javascript/atoms/test/scrolling_test.html}] [2018-08-30 22:38:26.765][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:26.775][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:26.878][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:26.886][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:26.986][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.001][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.103][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.113][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.213][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.226][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.329][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.446][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isFinished();, args=[]}] [2018-08-30 22:38:27.446][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isSuccess();, args=[]}] [2018-08-30 22:38:27.454][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return !!tr && tr.isSuccess();, args=[]}] [2018-08-30 22:38:27.454][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executing: executeScript [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return tr.getReport(true);, args=[]}] [2018-08-30 22:38:27.466][info ][tid:11][org.openqa.selenium.remote.RemoteWebDriver] Executed: [cb4244cba250b9cdd769467f6c9c26f0, executeScript {script=var tr = window.top.G_testRunner;return tr.getReport(true);, args=[]}] ```","closed","help wanted,","clarmso","2018-08-31T03:34:23Z","2022-01-26T00:09:44Z"
"","6529","Empty file upload causes error ""unknown error: unable to unzip 'file'""","## Meta OS:   Windows 10 Selenium Version:  3.14.0 Browser:  Chrome Browser Version:  69.0.3497.100  Currently I'm not able to upload empty file of 0 bytes size with RemoteWebDriver (on Selenium Grid). But it works correctly for local run on ChromeDriver.  ## Expected Behavior File is sent successfully  ## Actual Behavior On file uploading exception is thrown: > Message: OpenQA.Selenium.WebDriverException : unknown error: unable to unzip 'file' from unknown error: archive error: (unknown error: could not unzip archive), entry error: (unknown error: could not unzip archive) (Session info: chrome=69.0.3497.81) (Driver info: chromedriver=2.41.578700 (2f1ed5f9343c13f73144538f15c00b370eda6706),platform=Linux 4.4.0-130-generic x86_64)  ## Steps to reproduce `driver.Find(inputLocator).SendKeys(emptyFilePath)`  Edit 1:  The issue is reproduced for C#","closed","C-java,","olegbaslak","2018-10-12T10:03:42Z","2019-08-14T07:09:53Z"
"","6152","Waiting for element to become stale on Safari fails, even though element is gone.","## Meta OS:  OS X Sierra Selenium Version:  3.13.0 Browser:  Safari Browser Version:   11.1.2  ## Expected Behavior Every time I wait for an element to become stale in a test on Safari, it should pass. ## Actual Behavior Sometimes, waiting for an element that is clearly gone from the DOM to become stale fails, but only on Safari.  ## Steps to reproduce Check out the repository I've got here: https://github.com/MicahLC/safari_selenium_bug It should be self-contained; you'll just need to run `mvn test` on an OS X machine with Safari automation enabled. This test, unfortunately, does not fail every time. I've had pretty good success getting it to fail within the first 5-10 times running it. I have also found that once it starts failing, subsequent runs with the same open instance of Safari continue to fail.  ## Background  I'm a test automation dev at Zappos and have noticed that our tests that wait for `stalenessOf` fail very regularly on iOS devices and Safari. Hence why this test uses Zappos.com.","closed","R-awaiting answer,","MicahLC","2018-07-12T16:05:11Z","2021-09-05T08:08:29Z"
"","6169","Workaround to obtain newer 3.x releases not in NPM?","## Expected Behavior -  Recent 3.x version published to NPM, with numerous fixes since the nine-month-old 3.6.0 version, on NPM.  ## Actual Behavior -  Latest 3.x version is published to NPM is 3.6.0; there is also version 4.0.0-alpha.1, but (not surprisingly, given the alpha status) other tools that depend on Selenium generally have not been upgraded for compatibility with this major (very exciting!) upcoming version.  ## Steps to reproduce -  ``` npm install selenium-webdriver ```  I've read various issues that seem to be about this: #5797  #5205 #4324  but haven't found an explanation that I can understand, of the situation. It appears that there have been numerous ""releases"" in the last nine months:  https://github.com/SeleniumHQ/selenium/releases  ... fixing numerous bugs. Including (important to me) a bug that causes EADDRINUSE errors on Windows in Selenium that make heavy use of browser.wait().  Is there a major defect with the newer 3.x versions (3.7.0, 3.8, 3.9, 3.10, 3.11) that prevents them from being published on NPM?  Is there any workaround available? For example, a way for users to obtain a newer 3.x version in the interim, to benefit from all of this 3.x development between now and when 4.0 ships? (And likely, well beyond that - the tool I'm using on top of Selenium, Protractor, is currently at a very relaxed pace of development and maintenance, and I would guess its update to Selenium 4.0 may happen at a similarly relaxed pace.)","closed","C-nodejs,","kylecordes","2018-07-17T02:16:34Z","2021-09-05T08:27:34Z"
"","5969","Can't specify test target OSX 10.13 High Sierra with Capabilities ""platform"": ""MAC"" when OSX 10.12 also exists as a Selenium Grid node","## Environment - OS:      - OSX 10.12 (Sierra) and 10.13 (High Sierra) - Selenium Version:      - Selenium server standalone 3.11.0 - Browser/Version:    - Any ## Expected Behavior When running automated test with capabilities ""platform"": ""MAC"" it should run test only on OSX 10.13 High Sierra nodes. I can isolate tests targeting OSX 10.12 Sierra by using ""platform"": ""SIERRA"". Currently no support for specifying nodes running High Sierra 10.13 OSX on selenium grid with existing Sierra 10.12 OSX nodes.  ## Actual Behavior - Some tests run on 10.12 and some on 10.13. Selenium hub routes tests to OSX 10.12 or 10.13 based on some routing pattern (round-robin,sequential,etc.) ## Steps to reproduce - Create a selenium grid with OSX 10.12 and 10.13. Run tests with capabilities ""platform"": ""MAC"". ### Refernce #### Known and Supported Platforms that WebDriver runs on https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/Platform.java *Doesn't include identifier for MacOSX 10.13 High Sierra*","closed","C-grid,","aengwall","2018-05-31T20:56:54Z","2019-08-15T19:09:46Z"
"","6597","Different performance between python and dotnet (firefox)","## Different performance between python and dotnet (firefox) OS: Windows 10 Enterprise 2016 LTSB (Build: 1607)  Selenium Version:   3.14.1 (python) - 3.14.0 (dotnet), Visual Studio, Visual Studio Code  Browser:   Firefox  Browser Version:   63.0 64-Bit   ## Expected Behavior   Expected Behavior is that all Tests (with Firefox) behave the same in dotnet as in python environment. Which they do on the execution level, but unfortunatly they behave different in performance which I don't comprehend.   ## Actual Behavior  ### Behavior in Firefox The performance difference is big!   |Browser|Time| |---|---:| |Firefox (dotnet)|32.40 sec| |Firefox (python)|11.825 sec|  ### Example behavior in Chrome (same test) It's basically the same (+/- some seconds).  |Browser|Time| |---|---:| |Chrome (dotnet)|10.87 sec| |Chrome (python)|12.174 sec|  ## Steps to reproduce this issue On https://gist.github.com/xAaeEx/2da70dbdf6a55aeebd6ca7ba253341e0 you will find the Test(s) I created which opens Google search for SeleniumHQ and click on the first link.  Both tests are (almost) identical on python aswell as dotnet.  Can someone explain what is happening? Or if this is a firefox/marionette issue I should report?  If this is an issue, we should consider looking into it, as apperently many folks are using more and more dotnet to automate stuff (as am I).","closed","I-performance,","xAaeEx","2018-10-30T13:06:29Z","2020-05-05T21:16:27Z"
"","6081","StacKOverflowError when calling switchTo().window() using remote webdriver","## Description - Selenium Version:  3.7.1  I am automating a java swing application and making use of remote web driver as follows:          DesiredCapabilities dc = new DesiredCapabilities();         dc.setBrowserName(""java"");         dc.setVersion("" "");         dc.setJavascriptEnabled(true);         dc.setPlatform(Platform.ANY);         javaDriverTest = new RemoteWebDriver(new URL(""docker container url""), dc);  Everything works fine apart from the following:         javaDriverTest.switchTo().window(windowName);  ## Expected Behavior - Window is switched successfully  ## Actual Behavior - StackOverflowError is thrown as follows: ``` java.lang.StackOverflowError 	at java.net.SocketInputStream.socketRead0(Native Method) 	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) 	at java.net.SocketInputStream.read(SocketInputStream.java:171) 	at java.net.SocketInputStream.read(SocketInputStream.java:141) 	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137) 	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153) 	at org.apache.http.impl.BHttpConnectionBase.fillInputBuffer(BHttpConnectionBase.java:344) 	at org.apache.http.impl.BHttpConnectionBase.isStale(BHttpConnectionBase.java:364) 	at org.apache.http.impl.conn.CPoolProxy.isStale(CPoolProxy.java:114) 	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:208) 	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184) 	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88) 	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110) 	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71) 	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:138) 	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:86) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:657) 	at org.openqa.selenium.remote.RemoteWebDriver.getWindowHandles(RemoteWebDriver.java:505) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:962) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.window(RemoteWebDriver.java:963) ```  Note: The issue also occurred on Selenium 3.11.0","closed","C-java,","ghost","2018-06-27T10:01:25Z","2021-09-05T10:20:38Z"
"","6748","[javascript/node/selenium-webdriver] WebElement.equals returns null","## Bug Report  node module: selenium-webdriver@4.0.0-alpha.1 node: 10.9.0 npm: 6.4.1  While working on the selenium 4 upgrade for Protractor, I noticed that the `WebElement.equals` method could return a null value. When you creates a web element and sends the exact same web element in to the equals method, it [hits the conditional](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/webdriver.js#L1817) and returns true .  ### Example (similar to the [reflexive unit test](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/test/lib/webdriver_test.js#L1001)):  ```  var e1 = element.findElement(By.id('foo'));  expect(WebElement.equals(e1, e1)).toBe(true);  // this works and returns true ```  If you create two different web element instances, the conditional returns false and run the [execute script](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/webdriver.js#L1820). The equals method returns null.  ### Example:  ```  var e1 = element.findElement(By.id('foo'));  var e2 = element.findElement(By.id('foo'));  expect(await WebElement.equals(e1, e2)).toBe(true);  // null not equal to true ```  ## Proposed fix  Adding a return statement results in the promised boolean.   ```   static async equals(a, b) {     if (a === b) {       return true;     }     return a.driver_.executeScript('return arguments[0] === arguments[1]', a, b);   } ```","closed","C-nodejs,","cnishina","2018-12-13T02:16:55Z","2019-08-15T02:09:51Z"
"","5949","IEDriver cannot perform click on element","# Meta OS: Windows: 7 IEDriver version: 3.12 Browser: IE, 11 (0.9600.18920)  # Expected behavior  IEDriver will click on element with `type=radio`  # Description  Hi, I'm facing problem with elements like this   ```html   по абоненту      по контракту   (выбран %)     по лицевому счету   (выбран %)     по лицевому счету cо всеми приложениями обслуживания   (выбран %)       по приложению обслуживания   (выбран %)     по приложению обслуживания с обращениями по ЛС   (выбран %)    по номеру SIM карты  ``` What I am tryin to do is to click on element with attribute `type = radio`, for this purpose I wrote this xpath-selector for such elements  ```c# $""//input[@type='radio'][contains(@title,'{InputValue}')]"" ```  But, any of this elements wont be clicked by this code:  > new Actions(driver).MoveToElement(option).Click().Build().Perform();// option.Click();   or  > `element.Click() (where element is IWebElement)`  the ""click"" action goes on without any exceptions (in both cases above), just nothing happens  p.s. a variable is found and found correctly, it's only got clicked by executing js like this:  > `((IJavaScriptExecutor)driver).ExecuteScript(""arguments[0].click()"", option);`   But I'm looking for solving problem without executing any JS.  Any suggestions? Thanks.","closed","","opxh","2018-05-28T09:36:13Z","2019-08-16T00:09:49Z"
"","6518","driver.instance error","![screenshot 9](https://user-images.githubusercontent.com/29882370/46716629-75dc8080-cc82-11e8-9c67-397a407aa57c.png)","closed","","AlphaQ1996","2018-10-10T06:19:05Z","2019-08-15T08:09:51Z"
"","6718","This usually means that a call to the COM method IWebBrowser2::Navigate2() failed","","closed","","WendyZheng1022","2018-12-03T02:36:22Z","2019-08-15T01:09:46Z"
"","6717","InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS","","closed","","WendyZheng1022","2018-12-03T02:35:53Z","2019-08-15T01:09:47Z"
"","6681","Add distributed tracing to the Grid Router","","closed","C-java,","shs96c","2018-11-23T10:33:05Z","2019-08-15T04:09:53Z"
"","6680","Add distributed tracing to the Grid Distributor","","closed","C-java,","shs96c","2018-11-23T10:33:00Z","2019-08-15T04:09:52Z"
"","6679","Add distributed tracing to the Grid Session Map","","closed","C-java,","shs96c","2018-11-23T10:32:56Z","2019-08-15T04:09:54Z"
"","6666","Allow a v3 Grid Node to participate in Grid TNG","","closed","C-java,","shs96c","2018-11-20T17:40:38Z","2021-09-05T08:37:20Z"
"","6645","create_connection raise err error: [Errno 111] Connection refused in selenium python","","closed","","rameshpuruganti","2018-11-12T11:06:53Z","2019-08-15T05:09:56Z"
"","6517","UnhandledPromiseRejectionWarning: SessionNotCreatedError: Tried to run command without establishing a connection","","closed","","HACS200I","2018-10-10T04:06:22Z","2019-08-15T08:09:53Z"
"","6227","How to run selenium in termux","","closed","","ulist","2018-07-30T19:46:59Z","2019-08-15T17:09:41Z"