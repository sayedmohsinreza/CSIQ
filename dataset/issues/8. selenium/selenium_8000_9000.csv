"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","1907","TypeError: 'localName' is null or not an object","xpath for IE8 is somewhat busted due to https://github.com/google/wicked-good-xpath/issues/36  wgxpath will need to be pulled (or a fix to that cherry-picked) and IEDriverServer released to resolve the IE8 regression.","closed","","joshbruning","2016-04-01T05:49:16Z","2019-08-20T09:09:47Z"
"","2785","get_attribute raise an exception (release 3.0.0-beta-3)","Windows 8.1, Python 3.5,2, Selenium 3.0.0-beta-3 ## Actual Behavior -  Calling `get_attribute` on a web element raises an exception with version 3.0.0-beta-3:  ``` python   File """", line 1, in    File ""C:\Python35\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 136, in get_attribute     self, name)   File ""C:\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 465, in execute_script     'args': converted_args})['value']   File ""C:\Python35\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 236, in execute     self.error_handler.check_response(response)   File ""C:\Python35\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 192, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: SyntaxError: missing ) in parenthetical ```  This issue was introduced by this commit: https://github.com/SeleniumHQ/selenium/commit/4c75ef025f3b0cae5b8462266370d015843bc3ac  The exception is raised because the loaded resource `getAttribute.js` is not properly decoded: https://github.com/SeleniumHQ/selenium/blob/4c75ef025f3b0cae5b8462266370d015843bc3ac/py/selenium/webdriver/remote/webelement.py#L133  So a fix would be to decode the resource :  ``` raw = pkgutil.get_data(__package__, 'getAttribute.js').decode('utf8') ```  I also noticed that the file is loaded each time `get_attribute` is called. It would be preferable to cache it on the first call.","closed","C-py,","florentbr","2016-09-16T16:47:06Z","2019-08-19T14:09:56Z"
"","1858","Supported elements in org.openqa.selenium.support.ui","Why does package org.openqa.selenium.support.ui contain model for <select> tag, but not for any other HTML element? It would make sense to have all HTML elements supported or none for consistency.   The following elements could be modeled: button, checkbox, image, label, link, radio button, table, text fields (text and textarea).  If implementing Java classes for each HTML element sounds like a good idea, I would be happy to do it. However, I need some feedback on this.","closed","","semonte","2016-03-22T07:22:08Z","2019-08-20T09:09:57Z"
"","2506","Ruby Event Listeners","While trying to [implement Watir's After Hooks](https://github.com/watir/watir-webdriver/pull/433) with Selenium Event Listeners, it looks like not everything we would want to have as a Listener is implemented. The linked PR shows the monkey patches that were needed.   There were also a number of places that required aliasing due to mismatching of camel case and snake case, so it might be best to [fix up the Ruby Commands](https://github.com/SeleniumHQ/selenium/issues/2479) first as well.","closed","C-rb,","titusfortner","2016-07-21T22:24:30Z","2019-08-14T15:09:42Z"
"","2788","Separate language binding implementation to separate repositories","While there might be some reasons for keeping all different language implementation for the Selenium/Webdriver in this same repository, it makes finding information a bit hard.  Separating could perhaps be done by using a naming convention of having the environment in the first part and the project name as the second, for example `node-selenium` (or `node-webdriver`) or `python-selenium` (or `python-webdriver`).  This would make it easier to have issues and pull requests targeting certain language implementations in different places, as well as possible specification or such in its own.","closed","","paazmaya","2016-09-16T19:42:11Z","2019-08-19T16:09:59Z"
"","2552","moveToElement is not working","while executing below command it is throwing exception  > new Actions(driver).moveToElement(locator).perform();  **Exception**   ``` org.openqa.selenium.UnsupportedCommandException: POST /session/51fc473e-8059-ac4d-87bf-f69c78e95fd3/moveto did not match a known command (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 1 milliseconds **Build info: version: '3.0.0-beta1', revision: '8e4315c', time: '2016-07-28 18:04:05 -0700' System info: host: 'test', ip: '127.0.0.1', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.3', java.version: '1.8.0_91'** Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, loggingPrefs={browser=ALL}, appBuildId=20160726073904, version=, platform=MAC, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=48.0, platformVersion=15.3.0, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Darwin, device=desktop, firefox_profile=UEsDBBQACAgIAM51AkkAAAAAAAAAA..., unexpectedAlertBehaviour=accept}] Session ID: 51fc473e-8059-ac4d-87bf-f69c78e95fd3     at sun.reflect.GeneratedConstructorAccessor9.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)     at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)     at org.openqa.selenium.remote.RemoteMouse.mouseMove(RemoteMouse.java:89)     at org.openqa.selenium.interactions.MoveMouseAction.perform(MoveMouseAction.java:39)     at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)     at org.openqa.selenium.interactions.Actions.perform(Actions.java:373) ```  P.S : the same is happening with dragAndDrop command also  > (new Actions(driver)).dragAndDrop(element1, element2).perform();","closed","","SantoshSarma","2016-08-02T10:31:09Z","2017-01-16T12:18:34Z"
"","1848","Replace Throwables.propagate with equivalent.","Where safe, replace Throwables.propagate with equivalent behavior: either ""throw e"" or ""throw new RuntimeException(e)"". This is in preparation for Guava owners to delete this method. Note that not all instances of Throwables.propagate have been removed: those which could possibly result in the change of type of the resulting exception.","closed","","joshbruning","2016-03-19T20:33:41Z","2016-03-19T21:08:50Z"
"","2245","[js] expiry time unit should be same: `WebDriver.addCookie(..., opt_expiry)` v.s. `{expiry} = getCookie()`","when we use getCookie() and save the expiry, the expiry is the **seconds** unixtimestamp. when we use addCookie(..., opt_expiry), the expiry is the **milliseconds** unixtimestamp.  so I have to convert the timestamp get via getCookie() from seconds to milliseconds, before I can set the expiry back to browser by addCookie.  I suggest this should use the same unit... this problem waste me a lot of time today.","closed","","huan","2016-06-09T07:45:11Z","2019-08-20T03:09:50Z"
"","1958","Fix CoveringUpSauceErrorsRule: the original exception was lost","When re-creating the driver fails, throw the original exception, and expose the exception occurred while re-creating the driver as a suppressed exception.  Plus, extract to local var `t.getMessage()`. - [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","alb-i986","2016-04-11T15:12:08Z","2017-06-14T00:30:04Z"
"","2307","Firefox stopped working error message after firefox update to 47.0","When I update Firefox to 47.0 , it giving error message Firefox stopped working error message after Selenium script run  .  When I downgrade firefox version , then its working fine .  OS : Windows 10 Firefox version : 47.0  Selenium version : 2.53.0","closed","","rakslalsangi","2016-06-17T09:11:35Z","2019-08-20T02:09:44Z"
"","2796","Selenium not working on Ruby","When I execute ruby selenium-webdriver with a little example, selenium open my Firefox browser but not navigate to the URL. This only open the browser  Thanks for your help üëç","closed","","kmlroot","2016-09-19T20:42:42Z","2019-08-19T16:09:55Z"
"","1950","Capabilities not set properly for node selenium-webdriver","When calling `getNewDriver` with the following capabilities:  ``` {    browserName: 'internetExplorer',   elementScrollBehavior: 1,   nativeEvents: false } ```  The capabilities for `nativeEvents` is set to true. Observed when upgrading from selenium-webdriver 2.48.2 to 2.52.0. See issue https://github.com/angular/protractor/issues/3058.","closed","","cnishina","2016-04-08T23:28:36Z","2019-08-20T08:09:54Z"
"","1903","Incomplete documentation for Webdriver Js after GitHub migration","Webdriver JS former documentation is incomplete. Or at least, very hard to find :S  A very extensive and educational wiki used to be placed here: https://code.google.com/p/selenium/wiki/WebDriverJs  Now, I'm being redirected to this new project as the previous one seems to be archived.  Among other things, that documentation used to have a very nice explanation on how ""Webdriver JS"" queues actions using the ""Control Flow"".  This is a very interesting concept to be developed as it's the way webdriver js deals with actual async operations that occur underneath.  Can someone please include that documentation again somewhere so that those valuable explanations are not lost?  Thanks!!","closed","","cgadam","2016-03-31T14:44:55Z","2019-08-20T09:09:51Z"
"","2763","Include the version number in `BuildInfo`","We don't currently include the version number in the BuildInfo. This means that exceptions state the version is `unknown`, which isn't helpful in the slightest.  To make this work, we need to modify Buck to allow us to include a manifest file for every library, and not just for binaries.","closed","C-remote,","shs96c","2016-09-12T08:38:02Z","2019-08-19T16:09:34Z"
"","2714","UrlChecker Thread in Selenium causes sun.misc.Unsafe.park on Tomcat context reload","WARNING: The web application [myapp] appears to have started a thread  named [UrlChecker-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread: sun.misc.Unsafe.park(Native Method)  on tomcat context reload.   http://stackoverflow.com/questions/39289762/urlchecker-thread-in-selenium-causes-sun-misc-unsafe-park-on-tomcat-context-relo","closed","","spc16670","2016-09-05T07:32:04Z","2019-08-19T18:09:42Z"
"","2447","Fix javadocs","Various fixes to javadocs.  In particular, fix how '@' (for annotations) is rendered in code samples. See e.g. - http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/chrome/ChromeDriver.html - http://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/support/FindBy.html  [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2447)","closed","C-java,","alb-i986","2016-07-11T21:19:06Z","2021-04-03T22:42:53Z"
"","1889","Use simple Request class name.","Use simple Request class name rather than the fully-specified class name (that is, including the package name) as it is already imported.","closed","R-awaiting merge,","joshbruning","2016-03-28T19:53:48Z","2016-03-28T20:20:04Z"
"","2458","Issue after updating selenium-java version to 2.53.1","Updated the version of selenium-java and started getting this error FF version - 46.0.1 and 47.0.1 An exception or error caused a run to abort: INSTANCE  java.lang.NoSuchFieldError: INSTANCE at org.apache.http.conn.ssl.SSLConnectionSocketFactory.(SSLConnectionSocketFactory.java:144) at org.openqa.selenium.remote.internal.HttpClientFactory.getClientConnectionManager(HttpClientFactory.java:71) at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClientFactory.java:57) at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClientFactory.java:60) at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.getDefaultHttpClientFactory(ApacheHttpClient.java:252) at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.(ApacheHttpClient.java:229) at org.openqa.selenium.remote.HttpCommandExecutor.getDefaultClientFactory(HttpCommandExecutor.java:96) at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:70) at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:58) at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:87) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at acceptance.Env$class.$init$(Env.scala:29) at acceptance.Env$.(Env.scala:37) at acceptance.Env$.(Env.scala) at acceptance.BaseSpec$class.$init$(BaseSpec.scala:34) at acceptance.specs.APIGatekeeperApprovedSpec.(APIGatekeeperApprovedSpec.scala:27) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) at java.lang.Class.newInstance(Class.java:442) at org.scalatest.tools.Runner$.genSuiteConfig(Runner.scala:2644) at org.scalatest.tools.Runner$$anonfun$37.apply(Runner.scala:2461) at org.scalatest.tools.Runner$$anonfun$37.apply(Runner.scala:2460) at scala.collection.immutable.List.map(List.scala:273) at org.scalatest.tools.Runner$.doRunRunRunDaDoRunRun(Runner.scala:2460) at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1044) at org.scalatest.tools.Runner$$anonfun$runOptionallyWithPassFailReporter$2.apply(Runner.scala:1043) at org.scalatest.tools.Runner$.withClassLoaderAndDispatchReporter(Runner.scala:2722) at org.scalatest.tools.Runner$.runOptionallyWithPassFailReporter(Runner.scala:1043) at org.scalatest.tools.Runner$.run(Runner.scala:883) at org.scalatest.tools.Runner.run(Runner.scala) at org.jetbrains.plugins.scala.testingSupport.scalaTest.ScalaTestRunner.runScalaTest2(ScalaTestRunner.java:138) at org.jetbrains.plugins.scala.testingSupport.scalaTest.ScalaTestRunner.main(ScalaTestRunner.java:28) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)","closed","","peacetrader","2016-07-13T07:52:48Z","2019-08-19T13:09:54Z"
"","1830","The newest python version has some problem","Traceback (most recent call last):   File """", line 1, in    File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/phantomjs/webdriver.py"", line 50, in **init**     service_args=service_args, log_path=service_log_path)   File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/phantomjs/service.py"", line 44, in **init**     if not self._args_contain(""--cookies-file=""):   File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/phantomjs/service.py"", line 54, in _args_contain     return len(filter(lambda x:x.startswith(arg), self.service_args)) > 0 TypeError: object of type 'filter' has no len()  I install the 2.51.1, the bug is not there.","closed","","1a1a11a","2016-03-16T15:38:12Z","2019-08-20T10:10:00Z"
"","2301","Provide shim for getting attribute when talking to WebDriver conformant remote","To maintain Selenium 2 API compatibility when clients speak to W3C WebDriver conformant remote ends, client bindings should provide a shim that implements Selenium‚Äôs conflation of attributes and properties using the _Get Element Attribute_ and _Get Element Property_ commands.  Using Selenium with Marionette will cause `getAttribute` to not look at the property, if present. It is possible to patch this in the clients by implementing the conflation behaviour there.  This is exemplified in https://github.com/mozilla/geckodriver/issues/95.","closed","I-defect,","andreastt","2016-06-16T14:11:36Z","2019-08-19T07:09:50Z"
"","2152","Detect early if logger will be used","This spares unnecessary StringBuilder creation when the logger will not be used to log the message.","closed","C-java,","asashour","2016-05-23T18:37:21Z","2017-09-11T06:43:48Z"
"","2798","Switch travis to standard infrastructure.","This should stabilize travis build, as standard infrastructure is given more ram. (https://docs.travis-ci.com/user/ci-environment/) - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","tommywo","2016-09-20T05:13:36Z","2016-09-20T13:21:53Z"
"","2795","java - get process id in a way that works cross-platform","This PR fixes #2701, #666, #2667 .  `getProcessId()` couldn't return a pid on Windows  ^^ All of the reported issues were caused by calling `UnixUtils.destroy()` on Windows.  `UnixUtils` class is very confusingly named, since it is also used on non-Unixy platforms.  Inside `UnixUtils.destroy()`... if a process hangs, there is a logging statement that gets displayed.  Appended to the log line is a process ID.  To get that pid, it uses the `getProcessId()` method from `PlatformUtils`.  Since that method wasn't implemented for Windows, it would just bail with an exception.  - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","cgoldberg","2016-09-19T19:13:27Z","2016-09-26T04:04:46Z"
"","2060","[node] Fix 2059 - exec.js fails to set commandline options","This PR fixes #2059. I did not add tests because i was not sure how to test that firefox had the right profile and command line options set. Unfortunately, the failing case has the right command in `ps`. - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","jasonLaster","2016-05-05T21:34:18Z","2016-05-06T00:03:08Z"
"","2657","Add support for switch to (SVG/(X)HTML) object elements","This is strongly related to some closed issues at [selenium-google-code-issue-archive#3749](https://github.com/seleniumhq/selenium-google-code-issue-archive), see the end of this post. ## Meta -  OS:  All affected Selenium Version: selenium-webdriver 3.0.0-beta2 Browser:  All affected ## Expected Behavior -  There shall be a function to switch to the context of SVG documents embedded in an object tag: `SVG not supported!`  Apart from SVG documents, (X)HTML documents can be embedded as well using `type=""text/html""` or `application/xml+xhtml` (as mentioned [here](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/3749#issuecomment-192006494)). ## Actual Behavior -  If one workarounds the missing switchTo function via `findElement(By.js(foo))` where foo returns the contentDocument property of an `` DOM object, one gets:  > StaleElementReferenceError: stale element reference: element is not attached to the page document ## Steps to reproduce -  SSCCE: https://gist.github.com/ComFreek/e62e02d84165079a90cbd3bc97ad14ca  It was tested with - Windows 10 64-bit - selenium-webdriver 3.0.0-beta2 (NPM) - Chrome 52.0.2743.116 m (64-bit) ## Related issues - https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/3749 - Never received a response - https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/4647 - Was denied in 2012. Have there been any fundamental changes which would allow a reconsideration?","closed","","ComFreek","2016-08-24T13:41:18Z","2019-08-19T19:09:42Z"
"","2485","Maven 3.0 - sources.jar contains more than it should","This is an issue with our version of Buck. It's bundling more than it should in the sources jar. Will also need to handle selenium-java artifact (which has no sources, this is already fixed for javadoc).  This is not a blocker for 3.0 beta, but we should fix it for the official 3.0 release.","closed","I-defect,","lukeis","2016-07-18T16:04:05Z","2019-08-19T19:09:34Z"
"","2725","Delete the legacy SafariDriver","This is a tracking bug for the deletion of the legacy SafariDriver.  Support should be removed in all language bindings when Safari 10 and Apple's safaridriver are released to the general public.","closed","","jleyba","2016-09-06T16:04:27Z","2019-08-19T14:09:59Z"
"","2647","Comment in IDE should display full width, not just in command column","This is a duplicate of https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/3093. That references a commit which would fix this. If you'd like to incorporate it to Selenium IDE, I will provide a pull request.  As a workaround use [SeLite](https://selite.github.io).","closed","","peter-kehl","2016-08-23T02:34:48Z","2019-08-19T19:09:47Z"
"","2153","Use String.valueOf()","This has a slightly better performance since there is no StringBuilder construction","closed","C-java,","asashour","2016-05-23T21:09:02Z","2017-09-11T09:25:34Z"
"","2321","double records selenium ide","This bug ist reported and close since Apr 18, 2015.  [https://github.com/SeleniumHQ/selenium/issues/396 ![bild_5](https://cloud.githubusercontent.com/assets/11455286/16200733/c3022bdc-370e-11e6-8605-08b6e8e3cc53.png) ](url)  checked out the latest version here....but the bug isn¬¥t fix","closed","C-ide,","Heizer1971","2016-06-20T15:46:04Z","2019-08-19T14:09:39Z"
"","2407","Add Switch Context extension commands to Marionette for the Node.js bindings","The Switch Context command allows running WebDriver commands against the chrome/XUL context in Firefox.","closed","D-marionette,","andreastt","2016-06-29T16:42:15Z","2016-07-08T02:09:39Z"
"","1901","print element.get_attribute(innerHTML) works in ipython but not when run as a full script in the Linux terminal.","The same is true for Python3. I could not find another way to print the HTML of a given attribute.   Part of the reason I want to do this is because I found some sites treat me differently when running a headless browser through pyvirtualdisplay, vs when it opens up a regular instance of a browser. I do set a browser size when I do that as well.    ```   chromedriver = ""/path/to/chromedriver64""   os.environ[""webdriver.chrome.driver""] = chromedriver   display = Display(visible=0, size=(800,600))   display.start()    options = webdriver.ChromeOptions()    options.add_argument(""user-agent=""+random.choice(linuxAgent)) #Path to your chrome profile   driver = webdriver.Chrome(chromedriver, chrome_options=options) ```","closed","","neatville","2016-03-31T05:24:46Z","2019-08-19T08:09:58Z"
"","2625","selenium-3.0.0b2.tar.gz on https://pypi.python.org/pypi/selenium not yet updated to the safari whitespace fix","The pypi build still inlcudes the whitespace error. I hope it's correct to file this issue here. If not, I'm sorry.","closed","","FatalMerlin","2016-08-18T10:45:12Z","2019-08-19T19:10:01Z"
"","2679","Selenium javascript socks proxy","The proxy config for webdriver-selenium doesn't allow for socks proxies, is there any workaround for this ?","closed","","elaich","2016-08-29T15:25:29Z","2019-08-19T18:09:59Z"
"","2001","Grid2 wiki page has invalid link","The Grid2 wiki page: https://github.com/SeleniumHQ/selenium/wiki/Grid2 has a link to the default node json config file: https://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/grid/common/defaults/DefaultNode.json which should actually be: https://github.com/SeleniumHQ/selenium/blob/master/java/server/src/org/openqa/grid/common/defaults/DefaultNodeWebDriver.json","closed","","sishbi","2016-04-22T08:09:24Z","2019-08-19T14:09:49Z"
"","2443","[Wiki] FirefoxDriver Internals Wiki broken","The FirefoxDriver Internals Wiki in this repo seems to be broken.   See section ""Flow of Control: Starting Firefox"": https://github.com/SeleniumHQ/selenium/wiki/FirefoxDriver-Internals","closed","","lucasqiu","2016-07-11T06:55:59Z","2019-08-19T23:09:42Z"
"","2318","Firefox driver is non-free (does not contain sources)","The driver for firefox in py/selenium/webdriver/firefox contains pre-built software without source code. Please include the source code so that it can be rebuilt in distributions. Note that because of this, python-selenium in Debian doesn't contain the firefox driver, which was pushed in the non-free repository.","closed","","thomasgoirand","2016-06-20T11:15:58Z","2019-08-20T02:09:37Z"
"","2476","Ruby Mobile Code","The classes for Mobile have been listed as deprecated in Ruby for some time now. I don't think Appium or Selendroid uses this code, but someone suggested to me that they might need to be there still. I know we don't run the specs for them, and I haven't jumped into any mobile testing to know for sure. Adding it to the list of things we might remove from the Ruby code. Open for any Rubyists with Mobile experience to chime in and/or make a Pull Request.","closed","C-rb,","titusfortner","2016-07-15T23:50:31Z","2019-08-19T22:09:45Z"
"","2317","Expose the components of Color","The `org.openqa.selenium.support.Color` class currently only does conversion, but I want to use it to extract the colour components as well.  Can the RGB fields in this class be exposed? Better yet, can a method also be added to return a `java.awt.Color`?","closed","","billccn","2016-06-20T10:57:28Z","2019-08-20T02:09:36Z"
"","2211","JS API doc: sendKeys() param imprecision","The [JavaScript API documentation](https://github.com/SeleniumHQ/selenium/blob/d201e373fc268569c5c32aaca335f3a6bb9abdc4/javascript/node/selenium-webdriver/lib/webdriver.js#L1899) says that `sendKeys` takes a string. Empirical way shows that it also works using numbers (e.g `sendKeys(123)` is identical to `sendKeys('123')`)  Should the API documentation be updated? e.g `@param {...(string|number|!promise.Promise)} var_args`  (Original [discussion](https://github.com/angular/protractor/issues/3258))","closed","","tkrotoff","2016-06-05T01:06:54Z","2019-08-20T03:09:45Z"
"","2731","RemoteWebDriver unconditionally wraps W3C WebDriver responses in value field","The [get element rect spec](http://w3c.github.io/webdriver/webdriver-spec.html#get-element-rect) is not clear on the structure of the model. We need agreement between bindings and the geckodriver. Issue link: https://github.com/mozilla/geckodriver/issues/207 ## Meta -  OS:  MacOS 10.11.6    Selenium Version:  2.53.1/GeckoDriver 0.9.0     Browser:  FF48 w/ GeckoDriver 0.9.0    Browser Version:  48.0.2   ## Expected Behavior -  Referenced code below expects: A response like this:  ``` json {      ""point"":null,    ""dimension"":null,    ""width"":98,    ""y"":10954,    ""x"":20,    ""hCode"":-620756992,    ""height"":17,    ""class"":""org.openqa.selenium.Rectangle"" } ```  https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webelement.py#L393-L402 ## Actual Behavior -  But gets this:  ``` json {      ""status"":0,    ""sessionId"":""b7040c41-00d7-4486-8c86-b8c715bdff2f"",    ""value"":{         ""point"":null,       ""dimension"":null,       ""width"":600,       ""y"":314,       ""x"":20,       ""hCode"":44480,       ""height"":87,       ""class"":""org.openqa.selenium.Rectangle""    },    ""state"":""success"",    ""hCode"":493044042,    ""class"":""org.openqa.selenium.remote.Response"" } ``` ## Steps to reproduce -","closed","G-w3c,","mehmetg","2016-09-06T21:25:34Z","2019-08-19T14:09:44Z"
"","2643","Fail to start Chrome","Starting ChromeDriver 2.23.409699 (49b0fa931cda1caad0ae15b7d1b68004acd05129) on port 18186 Only local connections are allowed.","closed","","shailesh290","2016-08-22T11:07:51Z","2019-08-19T19:09:52Z"
"","2143","Space before curly bracket","Space before curly bracket","closed","","asashour","2016-05-21T14:38:46Z","2016-05-21T16:55:29Z"
"","2313","Getting-Started is not advising to get htmlunit from its own repository, after 2.53","Sorry if it's not the correct place for this. It's about documentation and the contributing guidelines are not clear about where to post this kind of issue. ## Meta -  OS:      Linux Mint 17.3    Browser:  Chrome ## Expected Behavior -  https://github.com/SeleniumHQ/selenium/wiki/Getting-Started should advise to get htmlunit from its own repository, after 2.53 ## Actual Behavior -  https://github.com/SeleniumHQ/selenium/wiki/Getting-Started is not advising to get htmlunit from its own repository, after 2.53 ## Steps to reproduce -    Not applicable.","closed","","cpeosphoros","2016-06-18T15:17:50Z","2019-08-19T10:09:39Z"
"","1831","NameError: name 'basestring' is not defined","Sorry for being so brief, I really wanted to let you know about this issue but have no time to reproduce it with a minimal example for you, I cannot share the source code with you, snippets are attached, I hope it suffices for reproducability. ## Meta -  The issue was tested under all the given OSes and versions.  OS: Mac und Linux Selenium Version: 2.53.0 Browser: Firefox Browser Version: 36, 42, 45 ## Expected Behavior -  It works. ## Actual Behavior -  I get an exception:  ```     self.browser = webdriver.Firefox(DirectDownloadProfile(self.tempdir))   File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 62, in __init__     firefox_options.binary_location = self.binary if isinstance(self.binary, basestring) else self.binary._get_firefox_start_cmd()   File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 62, in __init__     firefox_options.binary_location = self.binary if isinstance(self.binary, basestring) else self.binary._get_firefox_start_cmd()   File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 62, in __init__     firefox_options.binary_location = self.binary if isinstance(self.binary, basestring) else self.binary._get_firefox_start_cmd() NameError: name 'basestring' is not defined ``` ## Steps to reproduce -  Used the selenium webdriver with a firefox download profile. It works totally fine with 2.52.0 but it doesn't with 2.53.0.","closed","","sils","2016-03-16T16:46:54Z","2019-08-20T10:09:57Z"
"","2121","Create a new suite of Python tests to be run using Tox","Some initial work to allow the Python tests to be run using Tox without needing to build them. Using a parameterised pytest fixture to provide the various drivers (currently just Firefox and PhantomJS) and following PEP8 and other Python good practices.  Existing tests are still run using:  ``` bash $ ./go test_py ```  New tests are run using:  ``` bash $ pip install tox $ tox ```  To run on a specific Python version, pass `-e` and specify one or more environments. For example `tox -e py27` will run against Python 2.7.  Wiki pages would need to be updated of course to reflect how to run the new tests, and Travis CI should run the tests against as many drivers as possible for every pull request (I'm experimenting with doing so in this patch). We could also use http://www.appveyor.com/ for the Windows drivers (Internet Explorer and Edge), and our Jenkins instance. As far as I can tell these tests are not currently run anywhere, so they may not be in a passing state.  I'm okay with migrating all tests in one go so that we don't have two suites, but I wanted to get feedback from @lukeis, @AutomatedTester, and @Dude-X on my initial approach. I think it makes sense to get this running for a minimum of drivers initially, and then expand.  I have to admit that the CrazyFun/Rake stuff confuses me. We could try to get the various Python test targets to run the appropriate additional tests via `tox`, or wait until we've migrated to the new suite and change the targets as needed. To be honest I'm fine with avoiding CrazyFun for anything other than the dependencies.","closed","I-enhancement,","davehunt","2016-05-18T07:38:47Z","2016-10-04T09:42:43Z"
"","2567","Enhancement: Add function support get current cursor style.","so some requirement, we need to get current browser cursor style.  so far there is a way use javascript get  element, and then get cursor style, but it must know the element, our testing need a interface get the current cursor style , no need to know the cursor in which element, thank you.","closed","","liyang0452","2016-08-04T07:07:17Z","2019-08-19T20:10:01Z"
"","2396","Problem taking pictures using a RemoteWebDriver through Selenium grid.","So here's my situation. My code is in Java. I'm running tests on Jenkins and pointing to a hub using Selenium Grid which redirects to a Mac mini. I get a random bug that causes a browser time out when taking screenshots and it means that every screenshot ends up taking between 10 and 30 minutes and never actually takes it. This does not happen every time, but it does happen MOST times. It will go away for a day then suddenly come back. Here's my stack trace.  org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 600.000   (Session info: chrome=51.0.2704.103)   (Driver info: chromedriver=2.22.397929 (fb72fb249a903a0b1041ea71eb4c8b3fa0d9be5a),platform=Mac OS X 10.10.5 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 1800.00 seconds Build info: version: '2.47.1', revision: '411b314', time: '2015-07-30 03:03:16' System info: host: 'GL-6G1HW-MM1', ip: '153.7.132.65', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_60' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.22.397929 (fb72fb249a903a0b1041ea71eb4c8b3fa0d9be5a), userDataDir=./web-acceptance-tests/src/test/resources/com/disney/assets/ChromeSettingsAndExtensions}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=51.0.2704.103, platform=MAC, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 192e9bf6c81331ca7af48bbaaa5d351e Command duration or timeout: 1800.12 seconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'build-jenkins01', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-573.18.1.el6.x86_64', java.version: '1.8.0_60' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.22.397929 (fb72fb249a903a0b1041ea71eb4c8b3fa0d9be5a), userDataDir=./web-acceptance-tests/src/test/resources/com/disney/assets/ChromeSettingsAndExtensions}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=51.0.2704.103, platform=MAC, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, webdriver.remote.sessionid=403aab7b-cdcb-45bb-8def-9ccf63812c85, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 403aab7b-cdcb-45bb-8def-9ccf63812c85     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:422)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)     at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:335)  Here's the setup that it's running on:  OS=Yosemite chromedriverVersion=2.22.397929 Selenium=2.53.0 Selenium grid=2.47.1  Here's the code I've attempted to use to take a screenshot. Happens in all cases.  1. byte[] srcFile = ((RemoteWebDriver)driver).getScreenshotAs(OutputType.BYTES);  2. WebDriver augmentedDriver = new AutomationAugmenter().augment(driver); File srcFile = ((TakesScreenshot)augmentedDriver).getScreenshotAs(OutputType.FILE);  3. File srcFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);  4. WebDriver augmentedDriver = new JdkAugmenter().augment(driver); File srcFile = ((TakesScreenshot)augmentedDriver).getScreenshotAs(OutputType.FILE);  Please help!","closed","","KharanKnight","2016-06-28T15:25:09Z","2019-08-15T14:09:46Z"
"","2703","What to use in place of getInnerHtml and getOutterHtml?","So before 3.0 hits, I want to update my tests, however I can't find what I should be using in place of getInnerHtml and getOutterHtml, or even find the discussions to why it's being removed. Any help would be appreciated!","closed","","JemiloII","2016-09-01T15:14:04Z","2019-08-19T18:09:47Z"
"","1923","Firefox 45.0.1 And webdriver 2.53 excessive CPU usage","Since upgrading to Firefox 45.0.1 and Webdriver 2.53 my tests take 3-4 times longer to run than previously.  After investigating the problem i found that 6 instances of firefox had my cpu pinned at 99% on an c4xlarge ec2 instance.   Before the update it hovered around 50-80%.   I lowered it to 4 instances and it still takes up over 90%. Seems like it might be a firefox issue though.","closed","","randersen","2016-04-05T21:58:54Z","2019-08-20T09:09:43Z"
"","2197","Constantly jumps in 'log ' tab from the tab 'Reference '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ  –ø–µ—Ä–µ–ø—Ä—ã–≥–∏–≤–∞–µ—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫—É Reference –∏–∑ –≤–∫–ª–∞–¥–∫–∏ log","Since some versions of Selenium IDE ... When you double-click on comand Selenium IDE constantly jumps in 'Reference' tab from the tab 'log  ' when switching back is listed in the beginning, rather than at the last step. If it is at all so I can not understand for what purpose it is done? It is not comfortable. VIDEO: https://vk.com/video?z=video70462960_456239038%2F649c5367168cd14748%2Fpl_updates  –ù–∞—á–∏–Ω–∞—è —Å –∫–∞–∫–æ–π-—Ç–æ –≤–µ—Ä—Å–∏–∏ Selenium IDE... –ü—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥ –∏–∑ –≤–∫–ª–∞–¥–∫–∏ log –≤–æ –≤–∫–ª–∞–¥–∫—É Reference –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –æ–±—Ä–∞—Ç–Ω–æ  –ª–∏—Å—Ç–∏–Ω–≥ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ ,–∞ –Ω–µ  –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –¥–µ–π—Å—Ç–≤–∏–∏. –ï—Å–ª–∏  —ç—Ç–æ —É –≤—Å–µ—Ö —Ç–∞–∫ —Ç–æ —è –Ω–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å —Å –∫–∞–∫–æ–π —Ü–µ–ª—å—é —ç—Ç–æ —Å–¥–µ–ª–∞–Ω–æ ? –≠—Ç–æ –Ω–µ—É–¥–æ–±–Ω–æ. –í–∏–¥–µ–æ: https://vk.com/video?z=video70462960_456239038%2F649c5367168cd14748%2Fpl_updates –ö–∞–∫ —ç—Ç–æ —É—Å—Ç—Ä–∞–Ω–∏—Ç—å ## Meta -  OS:      Selenium Version:      Browser:      Browser Version:   ## Expected Behavior -  –≤–∫–ª–∞–¥–∫–∞ –Ω–µ –¥–æ–ª–Ω–∞ –ø–µ—Ä–µ—Å–∫–∞–∫–∏–≤–∞—Ç—å ## Actual Behavior -  –ø–µ—Ä–µ—Å–∫–∞–∫–∏–≤–∞–µ—Ç –Ω–∞ –≤–∫–ª–∞–¥–∫—É Reference ## Steps to reproduce -","closed","C-ide,","selevo","2016-06-02T09:54:47Z","2019-08-17T17:09:35Z"
"","1857","What happened to documentation on Grid Node/Hub JSON Settings?","Since Selenium was ported to Github, it looks like the documentation for all the various different hub & node JSON settings has disappeared.  If I do a search on seleniumhq.org for Json settings many result links still points to the old Google Code site (which of course now redirects to Github).  There is some documentation on seleniumhq.org but not the important details on how the various timeout settings work (which are critical to understanding and operating a healthy grid).    Is the old documentation archived somewhere and if not can it be restored?   Thanks!","closed","","testerwest","2016-03-21T23:30:41Z","2019-08-20T10:09:41Z"
"","2438","Selenium 3 -html runner","simon has been working on a new html test runner (for selenese in the 3.0 server that will run as WDBS).  This issue is to track that work.  Simon did say ""If anyone wants to hook up the old HTMLTestResults class to the new CoreRunner, we can ship"".","closed","","lukeis","2016-07-07T19:10:27Z","2019-08-19T21:09:49Z"
"","2613","Can't run scripts on XUL pages","Similar to #1253 except I'm wanting to run some scripts on about:downloads.  ## Meta -  OS:  Ubuntu 16.10 Selenium Version:  2.53.6, Python Browser:  Firefox Browser Version:  48.0 ## Expected Behavior -  Firefox shows alert with page title. ## Actual Behavior -  selenium.common.exceptions.WebDriverException: Message: waiting for doc.body failed ## Steps to reproduce -  ``` python from selenium import webdriver driver = webdriver.Firefox() driver.get(""about:downloads"") driver.execute_script(""alert(document.title);"") ```","closed","","NHellFire","2016-08-15T02:42:08Z","2019-08-19T19:09:51Z"
"","2483","Get element attributes","Should this not be a part of the core selenium API?  A work around is mentioned in [(http://stackoverflow.com/a/27307235/218857)](http://stackoverflow.com/a/27307235/218857) to display all element attributes. But this should be supported in the core API since many people rely on selenium for automation and testing.  `driver.execute_script('var items = {}; for (index = 0; index < arguments[0].attributes.length; ++index) { items[arguments[0].attributes[index].name] = arguments[0].attributes[index].value }; return items;', element) `","closed","","sandeep048","2016-07-17T17:26:30Z","2019-08-19T22:09:52Z"
"","2435","Unable to set Firefoxdriver logfile using Ruby binding","Setting log_file leads to either log file not being created or ""unable to obtain stable firefox connection"" error.  ``` ruby require 'selenium-webdriver'  profile = Selenium::WebDriver::Firefox::Profile.new profile.log_file = File.expand_path('firefoxdriver.log') capabilities = Selenium::WebDriver::Remote::Capabilities.firefox(:firefox_profile => profile) driver = Selenium::WebDriver.for :firefox, :desired_capabilities => capabilities driver.navigate.to 'http://google.com' driver.quit # Log file isn't created as the result of this script ```  ``` ruby require 'selenium-webdriver'  profile = Selenium::WebDriver::Firefox::Profile.new profile.log_file = File.expand_path('firefoxdriver.log') driver = Selenium::WebDriver.for :firefox, :profile => profile # ""unable to obtain stable firefox connection in 60 seconds (127.0.0.1:7055) (Selenium::WebDriver::Error::WebDriverError)"" error occurs ```  OS: Windows 7 Selenium version: 2.53.4 Ruby binding Browser: Firefox 47.0.1","closed","","abotalov","2016-07-07T07:43:49Z","2019-08-19T18:09:33Z"
"","2745","Dependency on bcprov-jdk15on 1.48 CVE-2015-7940","Selenium-server depends on org.bouncycastle:bcprov-jdk15on:jar:1.48 that has a vulnerability  https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-7940","closed","","diogoeag","2016-09-08T21:24:05Z","2019-08-19T17:09:57Z"
"","2395","Augmenter.extractRemoteWebDriver should log more details.","Selenium Version:   2.53.0 ## Expected Behavior -  Whenever possible, messages should contain detailled information, which makes analyzing things much easier.  ## Actual Behavior -  The current implementation doesn¬¥t tell the driver.getClass() in it¬¥s else condition:  `public class Augmenter extends BaseAugmenter { ...   @Override   protected RemoteWebDriver extractRemoteWebDriver(WebDriver driver) {     if (driver.getClass().isAnnotationPresent(Augmentable.class) ||         driver.getClass().getName().startsWith(             ""org.openqa.selenium.remote.RemoteWebDriver$$EnhancerByCGLIB"")) {       return (RemoteWebDriver) driver;  ``` } else {   logger.warning(""Augmenter should be applied to the instances of @Augmentable classes "" +                  ""or previously augmented instances only"");    // TODO add driver.getClass() information here.   return null; } ```    } ` ## Steps to reproduce -  I had a test project based on http://www.gebish.org with HtmlUnitDriver and PhantomJSDriver in it¬¥s classpath. Due to whatever reasons, the HtmlUnitDriver was pulled in first, and no screenshots were taken. I saw the warning in the logs - but only by debugging deep into what¬¥s going on I detected the HtmlUnitDriver beeing initialized where it should not. => please add some details to the message, so at least the class of the driver gets visible.","closed","C-java,","toschder","2016-06-28T15:15:08Z","2019-08-18T03:09:35Z"
"","2632","Surfacing stdout/stderr output from drivers","Selenium does a poor job at surfacing stdout/stderr output from drivers, as well as making it possible to increase verbosity in a consistent way.  One of the major productivity blockers we have when diagnosing issues in [geckodriver](https://github.com/mozilla/geckodriver) is that there‚Äôs no consistent way to surface the output as it is often swallowed by the language binding. geckodriver supports a `-vv` (let‚Äôs call it ‚Äúvery verbose‚Äù) setting that increases logging output from Firefox/Marionette. It is furthermore possible to set the environment variable `RUST_LOG=debug` to get additional logging from the geckodriver binary itself. It is possible that we can trigger that implicitly when `-vv` is set in the future to make things easier for Selenium and users.  Some bindings, i.e. for Node.js, supports exposing stdout/stderr but only by modifying a class constructor‚Äôs argument.  When we tell users ‚Äúto run geckodriver with the `-vv` flag‚Äù they often have no idea where to start.  I don‚Äôt have any strong opinions on _how_ more verbose output should be triggered in Selenium, but it should probably be something consistent that can be propagated to the various bindings, drivers, and servers. Something like an environment variable would do, but there may be more sophisticated ways of solving this in Java that I‚Äôm not aware of:  ``` % DEBUG=1 java -jar selenium-server.jar ```  A tangent, and this should probably be a separate issue altogether, it would be an interesting experiment to capture the last _N_ number of output when an error occurs and print it. The default ‚Äúno additional logging information was provided by the driver‚Äù message is not useful and not true. We can probably make it work better.  (cc @jgraham @AutomatedTester)","closed","I-enhancement,","andreastt","2016-08-19T15:42:25Z","2021-09-05T08:37:23Z"
"","1851","Doesn't work with Firefox 45.0.1","Selenium connects to Firefox **45.0** successfully, but fails with Firefox **45.0.1**. ## Meta -  OS: Arch Linux Selenium Version: 2.49.1 Browser: Firefox Browser Version: 45.0.1 (64-bit) ## Expected Behavior -  Selenium should be able to establish a connection to Firefox. ## Actual Behavior -  Selenium crashes trying to establish a connection to Firefox.  This is the output:  ``` org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/usr/bin/firefox) on port 7055; process output follows:  URI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""45.0a1"",""maxVersion"":""45.0.1""},{""id"":""xpcshell@tests.mozilla.org"",""minVersion"":""0"",""maxVersion"":""10""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""seen"":true} 1458554861749   addons.xpi  DEBUG   getModTime: Recursive scan of loop@mozilla.org 1458554861749   addons.xpi  DEBUG   Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""9OOVuBjYD02h"",""location"":""app-global"",""version"":""45.0.1"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/usr/lib/firefox/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1458394183000,""updateDate"":1458394183000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":5028,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""45.0.1"",""maxVersion"":""45.0.1""}],""targetPlatforms"":[],""seen"":true} 1458554861749   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1458554861750   DeferredSave.extensions.json    DEBUG   Save changes 1458554861750   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1458554861750   addons.xpi-utils    DEBUG   Updating add-on states 1458554861750   addons.xpi-utils    DEBUG   Writing add-ons list 1458554861751   addons.xpi  DEBUG   Registering manifest for /usr/lib/firefox/browser/features/loop@mozilla.org.xpi 1458554861751   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 0.1 1458554861759   addons.manager  DEBUG   Starting provider:  1458554861759   addons.manager  DEBUG   Registering shutdown blocker for  1458554861760   addons.manager  DEBUG   Provider finished startup:  1458554861768   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1458554861768   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458554861768   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1458554861768   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1458554861768   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1458554861769   addons.manager  DEBUG   Starting provider: GMPProvider 1458554861772   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1458554861772   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458554861772   addons.manager  DEBUG   Starting provider: PluginProvider 1458554861772   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1458554861772   addons.manager  DEBUG   Provider finished startup: PluginProvider 1458554861773   addons.manager  DEBUG   Completed startup sequence 1458554861911   DeferredSave.extensions.json    DEBUG   Starting write 1458554861970   addons.repository   DEBUG   No addons.json found. 1458554861970   DeferredSave.addons.json    DEBUG   Save changes 1458554861972   DeferredSave.addons.json    DEBUG   Starting timer 1458554861986   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1458554861986   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1458554861986   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1458554861989   DeferredSave.extensions.json    DEBUG   Write succeeded 1458554861990   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1458554862036   DeferredSave.addons.json    DEBUG   Starting write 1458554862044   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: '2.49.1', revision: '808c23b0963853d375cbe54b90bbd052e2528a54', time: '2016-01-21 09:37:52' System info: host: 'golly-desktop', ip: '192.168.3.20', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.1-2-ARCH', java.version: '1.8.0_74' Driver info: driver.version: BrowserDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:135)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at org.scalajs.jsenv.selenium.Firefox$FirefoxDriver.newDriver(Firefox.scala:48)     at org.scalajs.jsenv.selenium.BrowserDriver.start(BrowserDriver.scala:20)     at org.scalajs.jsenv.selenium.SeleniumRunner.run(SeleniumRunner.scala:14)     at org.scalajs.sbtplugin.FrameworkDetector.detect(FrameworkDetector.scala:66)     at org.scalajs.sbtplugin.ScalaJSPluginInternal$$anonfun$59.apply(ScalaJSPluginInternal.scala:736)     at org.scalajs.sbtplugin.ScalaJSPluginInternal$$anonfun$59.apply(ScalaJSPluginInternal.scala:719)     at scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)     at sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)     at sbt.std.Transform$$anon$4.work(System.scala:63)     at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)     at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)     at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)     at sbt.Execute.work(Execute.scala:237)     at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)     at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)     at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)     at sbt.CompletionService$$anon$2.call(CompletionService.scala:28)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: URI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""45.0a1"",""maxVersion"":""45.0.1""},{""id"":""xpcshell@tests.mozilla.org"",""minVersion"":""0"",""maxVersion"":""10""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""seen"":true} 1458554861749   addons.xpi  DEBUG   getModTime: Recursive scan of loop@mozilla.org 1458554861749   addons.xpi  DEBUG   Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""9OOVuBjYD02h"",""location"":""app-global"",""version"":""45.0.1"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/usr/lib/firefox/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1458394183000,""updateDate"":1458394183000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":5028,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""45.0.1"",""maxVersion"":""45.0.1""}],""targetPlatforms"":[],""seen"":true} 1458554861749   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1458554861750   DeferredSave.extensions.json    DEBUG   Save changes 1458554861750   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1458554861750   addons.xpi-utils    DEBUG   Updating add-on states 1458554861750   addons.xpi-utils    DEBUG   Writing add-ons list 1458554861751   addons.xpi  DEBUG   Registering manifest for /usr/lib/firefox/browser/features/loop@mozilla.org.xpi 1458554861751   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 0.1 1458554861759   addons.manager  DEBUG   Starting provider:  1458554861759   addons.manager  DEBUG   Registering shutdown blocker for  1458554861760   addons.manager  DEBUG   Provider finished startup:  1458554861768   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1458554861768   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458554861768   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1458554861768   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1458554861768   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1458554861769   addons.manager  DEBUG   Starting provider: GMPProvider 1458554861772   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1458554861772   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458554861772   addons.manager  DEBUG   Starting provider: PluginProvider 1458554861772   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1458554861772   addons.manager  DEBUG   Provider finished startup: PluginProvider 1458554861773   addons.manager  DEBUG   Completed startup sequence 1458554861911   DeferredSave.extensions.json    DEBUG   Starting write 1458554861970   addons.repository   DEBUG   No addons.json found. 1458554861970   DeferredSave.addons.json    DEBUG   Save changes 1458554861972   DeferredSave.addons.json    DEBUG   Starting timer 1458554861986   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1458554861986   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1458554861986   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1458554861989   DeferredSave.extensions.json    DEBUG   Write succeeded 1458554861990   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1458554862036   DeferredSave.addons.json    DEBUG   Starting write 1458554862044   DeferredSave.addons.json    DEBUG   Write succeeded      at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:123)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at org.scalajs.jsenv.selenium.Firefox$FirefoxDriver.newDriver(Firefox.scala:48)     at org.scalajs.jsenv.selenium.BrowserDriver.start(BrowserDriver.scala:20)     at org.scalajs.jsenv.selenium.SeleniumRunner.run(SeleniumRunner.scala:14)     at org.scalajs.sbtplugin.FrameworkDetector.detect(FrameworkDetector.scala:66)     at org.scalajs.sbtplugin.ScalaJSPluginInternal$$anonfun$59.apply(ScalaJSPluginInternal.scala:736)     at org.scalajs.sbtplugin.ScalaJSPluginInternal$$anonfun$59.apply(ScalaJSPluginInternal.scala:719)     at scala.Function1$$anonfun$compose$1.apply(Function1.scala:47)     at sbt.$tilde$greater$$anonfun$$u2219$1.apply(TypeFunctions.scala:40)     at sbt.std.Transform$$anon$4.work(System.scala:63)     at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)     at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:228)     at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:17)     at sbt.Execute.work(Execute.scala:237)     at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)     at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:228)     at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:159)     at sbt.CompletionService$$anon$2.call(CompletionService.scala:28)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) [error] (webapp-client/firefox:loadedTestFrameworks) org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/usr/bin/firefox) on port 7055; process output follows:  [error] URI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""45.0a1"",""maxVersion"":""45.0.1""},{""id"":""xpcshell@tests.mozilla.org"",""minVersion"":""0"",""maxVersion"":""10""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""seen"":true} [error] 1458554861749   addons.xpi  DEBUG   getModTime: Recursive scan of loop@mozilla.org [error] 1458554861749   addons.xpi  DEBUG   Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""9OOVuBjYD02h"",""location"":""app-global"",""version"":""45.0.1"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/usr/lib/firefox/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1458394183000,""updateDate"":1458394183000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":5028,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""45.0.1"",""maxVersion"":""45.0.1""}],""targetPlatforms"":[],""seen"":true} [error] 1458554861749   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} [error] 1458554861750   DeferredSave.extensions.json    DEBUG   Save changes [error] 1458554861750   addons.xpi  DEBUG   Updating database with changes to installed add-ons [error] 1458554861750   addons.xpi-utils    DEBUG   Updating add-on states [error] 1458554861750   addons.xpi-utils    DEBUG   Writing add-ons list [error] 1458554861751   addons.xpi  DEBUG   Registering manifest for /usr/lib/firefox/browser/features/loop@mozilla.org.xpi [error] 1458554861751   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 0.1 [error] 1458554861759   addons.manager  DEBUG   Starting provider:  [error] 1458554861759   addons.manager  DEBUG   Registering shutdown blocker for  [error] 1458554861760   addons.manager  DEBUG   Provider finished startup:  [error] 1458554861768   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider [error] 1458554861768   addons.manager  DEBUG   Provider finished startup: XPIProvider [error] 1458554861768   addons.manager  DEBUG   Starting provider: LightweightThemeManager [error] 1458554861768   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager [error] 1458554861768   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager [error] 1458554861769   addons.manager  DEBUG   Starting provider: GMPProvider [error] 1458554861772   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider [error] 1458554861772   addons.manager  DEBUG   Provider finished startup: GMPProvider [error] 1458554861772   addons.manager  DEBUG   Starting provider: PluginProvider [error] 1458554861772   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider [error] 1458554861772   addons.manager  DEBUG   Provider finished startup: PluginProvider [error] 1458554861773   addons.manager  DEBUG   Completed startup sequence [error] 1458554861911   DeferredSave.extensions.json    DEBUG   Starting write [error] 1458554861970   addons.repository   DEBUG   No addons.json found. [error] 1458554861970   DeferredSave.addons.json    DEBUG   Save changes [error] 1458554861972   DeferredSave.addons.json    DEBUG   Starting timer [error] 1458554861986   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider [error] 1458554861986   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider [error] 1458554861986   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider [error] 1458554861989   DeferredSave.extensions.json    DEBUG   Write succeeded [error] 1458554861990   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 [error] 1458554862036   DeferredSave.addons.json    DEBUG   Starting write [error] 1458554862044   DeferredSave.addons.json    DEBUG   Write succeeded [error]  [error] Build info: version: '2.49.1', revision: '808c23b0963853d375cbe54b90bbd052e2528a54', time: '2016-01-21 09:37:52' [error] System info: host: 'golly-desktop', ip: '192.168.3.20', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.1-2-ARCH', java.version: '1.8.0_74' [error] Driver info: driver.version: BrowserDriver ```","closed","","japgolly","2016-03-21T10:23:31Z","2019-08-19T21:10:03Z"
"","1970","Selenium 2.53 is typing wrongly in edit box with IE 11 actual text: tesus@0422.com typed as ""t0422.com@sutes""","Selenium 2.53 is typing wrongly in edit box with IE 11 actual text: tesus@0422.com typed as ""t0422.com@sutes""  OS:Windows 7 IE:11 Selenium : 2.53 IE Driver : 2.48 or 2.53.  Sometimes it doesn't even click on the object or fails to recognize object with given identifier.","closed","D-IE,","ashishpu","2016-04-14T09:58:06Z","2019-08-14T05:09:57Z"
"","2686","Add Gecko XBL extension commands for anonymous nodes","See the commit messages on each of the patches.","closed","C-py,","andreastt","2016-08-30T14:50:50Z","2016-08-31T14:25:24Z"
"","2401","Selenium unable to deal with disappearing iFrames","Scenario: login form is in an iFrame. If you go into the iFrame (driver.switchTo().frame()) to enter details into the username, password fields and press submit, when you submit the login form the login iFrame disappears from the DOM and causes the WebDriver to crash. This means Selenium is unable to deal with these types of login forms.  Tested and confirmed in latest Selenium, PhantomJS and Firefox","closed","","richardrl","2016-06-29T07:21:07Z","2019-08-20T00:09:47Z"
"","2646","Switching between Log/Reference/UI-element/Rollup to use native Firefox tabs","Say you're investigating a long log in Selenium IDE. You find the relevant part. You locate the command in the test case. You want to see target or value in detail, so you click at the command. That will switch to Reference tab.  When you switch back to Log tab, your position is gone.  A solution is to use native Firefox tab elements. See https://github.com/SeLite/SeLite/commit/c0d4ae7f223ef483ab456632d92440c906b2d621. I'm willing to provide a pull request.","closed","C-ide,","peter-kehl","2016-08-23T01:30:13Z","2019-08-17T16:09:54Z"
"","2481","Ruby Logger","Right now we are using `$DEBUG` to port information to STDOUT. Some of the information there I find very helpful to diagnosing problems, other things are just noise. I'd like to use the standard Ruby library to allow different levels as well as options for saving the results to a file not just to STDOUT.","closed","C-rb,","titusfortner","2016-07-16T00:35:55Z","2019-08-18T21:09:57Z"
"","2477","Ruby Bridge Classes","Right now browser Bridge classes inherit from the Remote Bridge (e.g. `class Chrome::Bridge < Remote::Bridge`). Logically, a browser Bridge is not a type of Remote Bridge, so I think this should be reorganized.","closed","C-rb,","titusfortner","2016-07-15T23:53:35Z","2019-08-19T02:09:57Z"
"","1913","Emphasize predicate failure over timeout details.","Rewording the FluentWait error message to emphasize the predicate failure over timeout details reduces the eagerness of engineers to immediately jump to the conclusion that they just need to wait _longer_ (must be some random WebDriver flakiness/timeout issue) which is not usually the appropriate fix - rather than think about the actual cause of the predicate failure and conceptually group similar failures appropriately.","closed","","joshbruning","2016-04-04T16:50:30Z","2016-04-13T04:13:39Z"
"","2682","delete please https://github.com/mozilla/geckodriver","Reported on https://github.com/mozilla/geckodriver","closed","","mehmetg","2016-08-29T22:13:25Z","2019-08-19T18:09:56Z"
"","2142","Remove unneeded 'else'","Remove unneeded 'else'","closed","","asashour","2016-05-21T14:32:18Z","2016-05-21T16:54:46Z"
"","2141","Remove redundant generics type","Remove redundant generics type","closed","","asashour","2016-05-21T14:10:25Z","2016-05-21T17:02:32Z"
"","1804","Grid3","refactoring Configuration and processing of command line parameters of grid hub/node/standalone.  Since this has some backwards incompatible changes, won't merge till 3.0.  Please review / give feedback :)","closed","","lukeis","2016-03-14T15:56:26Z","2016-03-16T17:42:51Z"
"","2549","Add the ability to add data to the clipboard","Quite often there is a situation where you want to insert some data from the clipboard. To put the data there, often have to come up with a variety of tricks for this. I would very much like to see this feature for it","closed","","ghost","2016-08-01T22:56:27Z","2019-08-22T07:56:12Z"
"","2777","Browser version compatibility checks!","Please add browser version compatibility checks!  One of the biggest problems with errors regarding Selenium tests are browser compatibility issues (between the running browser and the used driver).  Users loose huge amount of time due to: - mismatch of the two due to poor setup or changes - browsers getting updated automatically - system and path changes  all these leading very often tests failures were they were working before (or on other user's computers).  Please add some checks so that these scenarios won't happen anymore (or not so often). E.g. when instantiating the browser, the selenium drivers could know what browser versions are fully supported and could display a corresponding message.  It would save huge amount of time wasted by your users and also unnecessary bug reports.  Thank you.","closed","","aadrian","2016-09-15T11:31:32Z","2019-08-19T17:09:39Z"
"","2247","Feature request: API to work with browser tabs (Open new tab, switch to tab, etc)","Please add API to open new browser tab. While most of the time there is no need to manipulate tabs directly, but there are scenarios where it is needed  People need it and look for solution: https://www.google.com/search?q=selenium+webdriver+open+new+tab  Existing options are hacks and are not reliable","closed","","thecoderok","2016-06-09T17:21:36Z","2019-08-20T03:09:49Z"
"","2658","SendKeys not working","package FirstPackage;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.WebElement;  public class Login {  ``` /**  * @param args  * @throws InterruptedException   */ public static void main(String[] args) throws InterruptedException {       // TODO Auto-generated method stub     System.setProperty(""webdriver.chrome.driver"", ""C:\\Softwares for Selenium\\chromedriver.exe"");     WebDriver obj = new ChromeDriver();      obj.get(""https://www.sivhaga.co.za"");     obj.findElement(By.name(""userId"")).sendKeys(""peter""); } ```  }  I am getting the following error message and not sure what might be wrong: Exception in thread ""main"" org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""name"",""selector"":""userId""}   (Session info: chrome=52.0.2743.116)   (Driver info: chromedriver=2.23.409699 (49b0fa931cda1caad0ae15b7d1b68004acd05129),platform=Windows NT 6.1.7601 SP1 x86) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 47 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: '24088JNBITD701L', ip: '10.18.3.244', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_101' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.23.409699 (49b0fa931cda1caad0ae15b7d1b68004acd05129), userDataDir=C:\Users\sa93546\AppData\Local\Temp\scoped_dir7716_6696}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=52.0.2743.116, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 508b6b2375dc9559588a1945346969e3 **\* Element info: {Using=name, value=userId}","closed","","sivhaga","2016-08-24T14:32:50Z","2019-08-19T19:09:38Z"
"","2480","Ruby Specs","Our test suite is not very comprehensive. In the past I've found Selenium/driver bugs when running Watir specs, which shouldn't be how we catch problems in the Ruby code.  I'd like to see the Ruby Testers do a review of what we have and get them better fleshed out.","closed","C-rb,","titusfortner","2016-07-16T00:22:05Z","2019-08-16T04:09:56Z"
"","1899","Year field skipped in HTML 5 date input and clear() methods throws InvalidElementStateException","OS: Windows 8 Selenium Version:2.45 & 2.53 Browser: Chrome Chrome Driver Version: 2.21 Language : Java ## Expected Behavior -  input the year field followed by clearing date field ## Actual Behavior -  Year input skipped and clear() method throws exception ## Steps to reproduce  Input file : test.html  ```      Depending on browser support: A date picker can pop-up when you enter the input field.      Birthday:            ```  Test Case : Check.java  ``` import java.util.concurrent.TimeUnit; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class Check {      public static void main(String[] args) {                 System.setProperty(""webdriver.chrome.driver"", "".\\ChromeDriver\\chromedriver.exe"");          WebDriver driver = new ChromeDriver();          driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);         driver.manage().timeouts().pageLoadTimeout(10, java.util.concurrent.TimeUnit.SECONDS);           driver.get(""D:\\samjava\\SeleniumTest\\test.html"");          driver.findElement(By.name(""bday"")).sendKeys(""01Mar2016""); //year field skipped in date input          driver.findElement(By.name(""bday"")).clear();      }  } ```","closed","","jrsam","2016-03-31T02:42:23Z","2019-08-20T09:09:52Z"
"","1878","Application home page is cropped in screenshot","OS: Windows 7 Selenium Version: WebDriver 2.50.1 Browser: IE11 Browser Version: 11.0.9600.18204 ## Expected Behaviour -  Page should load completely and selenium webdriver should be able to input the patient name to be searched and should be able click the search button. ## Actual Behaviour -  Page is not loaded completely. Search button is cropped so clicking the search button is failed. ## Steps to reproduce - 1. Launch the application 2. Input the user name and password and click on Login button 3. Input the patient to be searched and click on the search button    ![capture](https://cloud.githubusercontent.com/assets/17078099/14039063/07fcd76c-f27e-11e5-9b3c-03b5cc007a59.JPG)","closed","D-IE,","abhinavm88","2016-03-25T06:08:15Z","2019-08-15T10:09:54Z"
"","2322","Unable to pass args to the ChromeDriverOptions binary","OS: Win server 2012 r2 Browser: Chrome  Issue: I am using ChromeDriverOptions to launch my executable file.  I am able to launch successfully and perform respective actions.  I am having issue in passing args (""-enableDevTools""), inorder to enable the menu itme ToggleDevTools for further debugging while testing the application transaction behavior.  Manually i could launch the application from command prompt by passing the respective args. For ex: C:\Build>installer.exe -enableDevTools  But the same thing when i try passing the args through the ChromeDriverOptions, i dont see the respective option enabled. I feel that i am missing something here. Need some help on it.  Code which i am trying was:  System.setProperty(""webdriver.chrome.driver"", ""C:\Jar-Files\chromedriver-2.20.exe"");  ```         Map chromeOptions = new HashMap();         chromeOptions.put(""binary"", ""C:\\Build\\win32\\installer.exe"");          //chromeOptions.put(""args"", Arrays.asList(""C:\\Build\\vcsa-ui-installer\\win32\\""));          chromeOptions.put(""-args"", Arrays.asList(""‚ÄìenableDevTools""));           DesiredCapabilities capabilities = new DesiredCapabilities();         ChromeOptions options = new ChromeOptions();         options.addArguments(""enableDevTools"");         capabilities.setCapability(""chromeOptions"", chromeOptions);         capabilities.setCapability(""args"", options);         capabilities.setBrowserName(""chrome""); ```  The following doesn't throw any error for passing the args, and still doesnt enable the respective options.  -B","closed","","bharatp10","2016-06-20T15:48:19Z","2019-08-20T02:09:35Z"
"","1820","commit dfab927 contains a reference to basestring, which is not in Python 3","OS: Ubuntu 14.04 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0+build2-0ubuntu0.14.04.1  It looks like commit dfab9272978ac2795ab7d6d9968c1d76aa9a27ae introduced a reference to `basestring`, which does not exist in Python 3.4.3.  With `Dockerfile`:  ``` FROM ubuntu:trusty ENV DEBIAN_FRONTEND noninteractive RUN apt-get update -qq RUN apt-get install -qq build-essential python3-pip RUN apt-get install -qq firefox RUN pip3 install -U selenium RUN pip3 list COPY repro.py /seleniumtest/ CMD /seleniumtest/repro.py ```  And this `repro.py` mode 755:  ``` #!/usr/bin/python3 from selenium import webdriver webdriver.Firefox() ```  Run:  ``` docker build -t repro . docker run -t -i  repro ```  And see:  ``` Traceback (most recent call last):   File ""/seleniumtest/repro.py"", line 3, in      webdriver.Firefox()   File ""/usr/local/lib/python3.4/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 62, in __init__     firefox_options.binary_location = self.binary if isinstance(self.binary, basestring) else self.binary._get_firefox_start_cmd() NameError: name 'basestring' is not defined ```  ...which wasn't happening yesterday, before the release of 2.53.0.","closed","","madeleineth","2016-03-16T04:55:28Z","2019-08-20T10:09:55Z"
"","1890","Couldn't locate element ID with FF 45.0.1 and selenium 2.53.0","OS: OSX Capitan Selenium Version: 2.52.0 and 2.53.0. IDE IntelliJ Browser: Firefox Browser Version: 45.0.1  Since new version FF 45.0.1, there's some problem with connection to FF. I tried with the latest Selenium 2.52.0 and 2.53.0, both of them worked, but unfortunately, some elements with ID don't work anymore (which they worked fine before upgrading to FF 45.0.1). Elements with ID couldn't be located and I got exception like: ""org.openqa.selenium.WebDriverException: Element is not clickable at point (411, 675). Other element would receive the click: ..."" . So I use xpath instead, and it works with xpath","closed","","louis57","2016-03-29T09:02:42Z","2019-08-19T21:09:59Z"
"","1875","Firefox 45 disbale firefox webdriver?","OS: OSX Capitan Selenium Version: 2.48.0 Browser: Firefox Browser Version: 45.0.1  I updated to Firefox 45.0.1 few days ago, and selenium webdriver doesn't work anymore. I got these messages when created new FirefoxDriver()   > 1458829658940 addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} > 1458829658941   DeferredSave.extensions.json    DEBUG   Save changes > 1458829658941   addons.xpi  DEBUG   Updating database with changes to installed add-ons > 1458829658941   addons.xpi-utils    DEBUG   Updating add-on states > 1458829658947   addons.xpi-utils    DEBUG   Writing add-ons list > 1458829658948   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi > 1458829658949   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 0.1 > 1458829658964   addons.manager  DEBUG   Starting provider:  > 1458829658964   addons.manager  DEBUG   Registering shutdown blocker for  > 1458829658964   addons.manager  DEBUG   Provider finished startup:  > 1458829658978   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider > 1458829658978   addons.manager  DEBUG   Provider finished startup: XPIProvider > 1458829658978   addons.manager  DEBUG   Starting provider: LightweightThemeManager > 1458829658978   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager > 1458829658978   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager > 1458829658979   addons.manager  DEBUG   Starting provider: GMPProvider > 1458829658985   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider > 1458829658986   addons.manager  DEBUG   Provider finished startup: GMPProvider > 1458829658986   addons.manager  DEBUG   Starting provider: PluginProvider > 1458829658986   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider > 1458829658986   addons.manager  DEBUG   Provider finished startup: PluginProvider > 1458829658986   addons.manager  DEBUG   Completed startup sequence > 1458829659395   DeferredSave.extensions.json    DEBUG   Starting write > 1458829659563   addons.repository   DEBUG   No addons.json found. > 1458829659564   DeferredSave.addons.json    DEBUG   Save changes > 1458829659566   DeferredSave.addons.json    DEBUG   Starting timer > 1458829659700   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider > 1458829659700   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider > 1458829659701   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider > 1458829659704   DeferredSave.extensions.json    DEBUG   Write succeeded > 1458829659704   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 > 1458829659705   DeferredSave.addons.json    DEBUG   Starting write > 1458829659733   DeferredSave.addons.json    DEBUG   Write succeeded  When I try new version of Selenium 2.52.0, it works agains, but since then, some elements with ID don't work anymore, like with 2.48.0.","closed","","louis57","2016-03-24T14:41:09Z","2019-08-20T10:09:35Z"
"","2555","Active Element Marionette","OS: OS X Selenium Version: 3.0.0.beta Browser: Firefox Browser Version: 50  For Marionette it is giving an error from the /element/active endpoint This works through local Ruby & fails through the Server.  The calls and responses for local & remote: https://gist.github.com/titusfortner/9145c9086e9cd07f0d1e945f945f998c","closed","","titusfortner","2016-08-02T20:56:01Z","2019-08-19T01:09:48Z"
"","2792","IE - Unable to access elements on 2nd window","OS: Microsoft 7 Selenium Version: 2.53.1 Browser: IE 11, 64 Bit  I am having a major issue running our automation scripts in IE. I am able to access the elements I need in the default IE window. In our application, I click a button, and a new window opens. In that new window I am not able to access ANY of the elements. I've never had this issue in the past as the code is the same and it works fine in FF.  I‚Äôm able to switch WebDriver to the new window and close that window so I know I‚Äôm where I‚Äôm supposed to be. I wrote a method to list all elements on the page but all 2,118 elements/html tags come back blank. The only thing that comes back correct is the title of that window. I executed the same method on the default window and everything comes back correctly.  **The web application is NOT public. I am unsure of how to use jsfiddle.net. Is there anyway we can set up a screenshare meeting so you can see the behavior?? This is a high priority**.","closed","","kphilogene","2016-09-19T13:11:21Z","2019-08-19T13:10:04Z"
"","1837","Implement the interactions API for Safari","OS: MAC 10.10 Selenium Version: 2.48.0 webdriver java Browser: Safari Browser Version: 8 ## Expected Behavior -  Actions class drag and drop function should work in safari browser, other than safari it is working fine. ## Actual Behavior - Element not dragged to target location. ## Steps to reproduce -  I have used this script-it is working fine in FF,Chrome, IE9, IE10, IE11 but not working in safari browser  ``` java WebElement hierarchyThreeElement = driver.findElement(By.xpath(""//*[@id='RadPanelBar1_i0_RadTreeView2']//li[contains(.,'""+hierarchyOneText+""')]//span[text()='""+hierarchyThreeText+""']"")); SeleniumWrapper.switchToFrame(driver,rightPaneIFrame); SeleniumWrapper.scrollToElement(driver, hierarchyThreeElement); SeleniumWrapper.scrollToElement(driver, rowContainer); SeleniumWrapper.waitUntilElementVisisble(driver,rowContainer,10); actions.clickAndHold(hierarchyThreeElement).moveToElement(rowContainer).release().build().perform(); ```  Thanks in Advance!  Nalini","closed","I-enhancement,","nalinip","2016-03-17T09:02:42Z","2019-08-19T15:09:55Z"
"","1906","Add feature: with webdriver.Firefox as browser","OS: any Selenium Version: 2.52.0 Browser: any  Add feature that this code will work:  ``` with webdriver.Firefox() as browser:     browser.get('http://www.google.com')     browser.save_screenshot('screenie.png') ```","closed","C-py,","lcd1232","2016-03-31T23:52:45Z","2019-08-19T17:09:47Z"
"","1817","Python 3 problem in selenium 2.53.0","OS: `CentOS` Selenium Version: `2.53.0` Browser: `PhantomJS` Python Version: `3.4`  ---  I've updated my Python Selenium to the latest version `2.53.0` and it doesn't work with Python 3.   When I run tests - I get an error:  ``` ../venv/lib/python3.4/site-packages/pytest_selenium/drivers/phantomjs.py:17: in phantomjs_driver     return PhantomJS(**kwargs) ../venv/lib/python3.4/site-packages/selenium/webdriver/phantomjs/webdriver.py:50: in __init__     service_args=service_args, log_path=service_log_path) ../venv/lib/python3.4/site-packages/selenium/webdriver/phantomjs/service.py:44: in __init__     if not self._args_contain(""--cookies-file=""): ../venv/lib/python3.4/site-packages/selenium/webdriver/phantomjs/service.py:54: in _args_contain     return len(filter(lambda x:x.startswith(arg), self.service_args)) > 0 TypeError: object of type 'filter' has no len() ```  To make it work in Python 3 you can do (e.g.): `len(list(filter(lambda ...)))`  P.S.: I've tried `2.52.0` and it works","closed","","kottenator","2016-03-15T22:25:19Z","2019-08-20T10:10:03Z"
"","2027","RemoteWebDriver quit() method is not terminating session on Grid","OS:  windows7 Selenium Version:  2.47.1,2.53 Browser:  Firefox, IE Browser Version:  32,11 ## Expected Behavior - session should be cleared after calling quit method ## Actual Behavior - session is not getting cleared and getting TIMEOUT error after sometime  Logs  org.openqa.selenium.WebDriverException: Session [049bfbf4-1178-45c0-891a-7d20512a773b] was terminated due to TIMEOUT Command duration or timeout: 0 milliseconds Build info: version: '2.47.1', revision: '411b314', time: '2015-07-30 02:56:46' System info: host: , os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_67' Session ID: 049bfbf4-1178-45c0-891a-7d20512a773b Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{platform=WINDOWS, javascriptEnabled=true, acceptSslCerts=true, browserName=firefox, rotatable=false, locationContextEnabled=true, webdriver.remote.sessionid=049bfbf4-1178-45c0-891a-7d20512a773b, version=32.0, databaseEnabled=true, cssSelectorsEnabled=true, handlesAlerts=true, webStorageEnabled=true, nativeEvents=false, applicationCacheEnabled=true, takesScreenshot=true}] at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) at java.lang.reflect.Constructor.newInstance(Unknown Source) at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618) at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:464) at com.bbb.util.BBBU_Listener.onTestSuccess(BBBU_Listener.java:158) at org.testng.internal.Invoker.runTestListeners(Invoker.java:1899) at org.testng.internal.Invoker.runTestListeners(Invoker.java:1879) at org.testng.internal.Invoker.invokeMethod(Invoker.java:778) at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) at org.testng.TestRunner.privateRun(TestRunner.java:767) at org.testng.TestRunner.run(TestRunner.java:617) at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) at org.testng.SuiteRunner.access$000(SuiteRunner.java:37) at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368) at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64) at java.util.concurrent.FutureTask.run(Unknown Source) at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source) at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) at java.lang.Thread.run(Unknown Source) Caused by: org.openqa.grid.common.exception.GridException: Session [049bfbf4-1178-45c0-891a-7d20512a773b] was terminated due to TIMEOUT at org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:105) at org.openqa.grid.internal.Registry.getExistingSession(Registry.java:425) at org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:240) at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:120) at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83) at org.openqa.grid.web.servlet.DriverServlet.doDelete(DriverServlet.java:73) at javax.servlet.http.HttpServlet.service(HttpServlet.java:713) at javax.servlet.http.HttpServlet.service(HttpServlet.java:790) at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808) at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587) at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221) at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127) at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515) at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185) at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061) at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141) at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) at org.seleniumhq.jetty9.server.Server.handle(Server.java:499) at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310) at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257) at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540) at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635) at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555) ... 1 more","closed","","jawlitkp","2016-04-29T11:47:56Z","2019-08-19T09:09:55Z"
"","2510","RemoteWebDriver throwing ClassCastException when switching to Alert","OS:  Windows 8.1 Pro Selenium Version:  2.53.1 Browser: Firefox 47    Browser Version:   47, 64 bit ## Expected Behavior - - Switches to Alert and Accepts it ## Actual Behavior - - throws below excption:   java.lang.ClassCastException: com.google.common.collect.Maps$TransformedEntriesMap cannot be cast to java.lang.String ## Steps to reproduce - - In my test, I have a functionality, which clicks on a link and the page opens in a new window. On the newly opened page, there is a javascript alert that comes up. I need to accept the alert to continue the test. The exception happening when trying to switch to the alert. - this exception happens only when using RemoteWebDriver - this exception doesn't happen with FirefoxDriver  Thanks Prashant","closed","","prashum2000","2016-07-22T05:12:05Z","2019-08-19T22:09:33Z"
"","2471","[Need Help] Marionnette firefox proxy","OS:  Windows 8 Selenium Version: Last  , C# Browser:  Firefox  Hi , I try to set up an http proxy but i don't know how i can proceed   ```             startInfo.WindowStyle = System.Diagnostics.ProcessWindowStyle.Hidden;             var driverService = FirefoxDriverService.CreateDefaultService();             driverService.FirefoxBinaryPath = @""C:\Program Files (x86)\Mozilla Firefox\firefox.exe"";             driverService.HideCommandPromptWindow        = true;             DesiredCapabilities cap = new DesiredCapabilities();             cap.SetCapability(""marionette"", true);              driver = new FirefoxDriver(driverService, new FirefoxOptions(), TimeSpan.FromSeconds(30));               Proxy proxy = new Proxy();             proxy.HttpProxy = ""flfl"";             DesiredCapabilities des = new DesiredCapabilities();             des.SetCapability(CapabilityType.Proxy, proxy);               driver = new FirefoxDriver(des);    ` ```  Thx","closed","","ghost","2016-07-15T14:11:15Z","2019-08-22T07:55:55Z"
"","2282","Selenium IE driver not closing browser","OS:  Windows 8 Selenium Version:  2.53.0 Browser:  Internet Explorer  Browser Version:  10.0.9200  Expected Behavior - Given the following code, I am trying to render local files using a browser of my choice, this works for all browsers except IE. I expected that the following code would open a browser, access the file specified, execute the javascript query and close the browser.  ``` js function renderSelenium(address, engine, opts){     let deferred = Q.defer(),     until = webdriver.until,     driver = new webdriver.Builder()     .forBrowser(engine)     .build();      driver.get(address);     driver.executeScript(""return document.querySelector('html').outerHTML;"")     .then((html) => {         driver.close();         return deferred.resolve(html);     });     return deferred.promise; } ```  I execute this code for all files in a directory (80+)  ``` js files.forEach((file)=>{  renderSelenium(file, ""ie"", {file:true}); }); ``` ## Actual Behavior -  What happens is that IE does not close after executing each meaning that a stack of tabs remain in the computer and eventually the program crashes because of it. ![trace](https://cloud.githubusercontent.com/assets/3718654/16039657/6de5bffc-322b-11e6-96e1-1d5c0410167e.png) ## Steps to reproduce -  Install IE webdriver 2.53.1 Make sure IE 10 is installed Create a folder of 20+ html files and execute the code above.","closed","","pedro93","2016-06-14T10:29:35Z","2019-08-20T02:09:55Z"
"","2162","Click doesn't work for -tags when href is ""#"" or ""javascript:;"" in Chrome v>47(mobile emulation)","OS:  Windows 8  Selenium Version:  selenium-server-standalone-2.52.0 Chrome Driver Version: 2.21 Browser:  Google Chrome Browser Version:  newer then 47  Expected Behavior - When I trigger Protractor's script, it open the instance of Chrome of the version that is installed on the local computer.  a-tags with href ""#"" or ""javascript:;"" must be clickable and behave themselves in the same way (be clickable) they do behave when I run an instance of Chrome outside of Protractor (Selenium Chrome Driver v 2.21).  Actual Behavior - a-tags with href ""#"" or ""javascript:;"" are not clickable (nothing happens when you click on them either manually or through script).    Steps to reproduce - Run the instance of the browser through Protractor in mobile emulation (that's confirmed way to reproduce). Click the link with href ""#"" or ""javascript:;"" (Example: `Login`).  Comments -  I uninstalled latest Chrome and installed version of Chrome 46 and then 47, this feature works perfectly fine there. Our tests broke for some weeks ago, after Chrome updates. See even an issue I posted for a while ago at Stack Overflow for more details: [(http://stackoverflow.com/questions/37278858/protractor-click-doesnt-work-in-chrome-mobile-emulator?noredirect=1#comment62110293_37278858)]","closed","","AyaFur","2016-05-25T15:05:08Z","2019-08-20T05:09:39Z"
"","2077","Element is not clickable at point (x,y). Other element would receive the click...","OS:  Windows 7 Pro Selenium Version:  2.53.0 Browser:  Firefox 46.0.1 ## Expected Behavior -  Should click the Checkbox ## Actual Behavior -  Getting an error message : org.openqa.selenium.WebDriverException: Element is not clickable at point (x, y). Other element would receive the click:  ## Steps to reproduce -  I have an object that is a checkbox invoking pop up.   CheckBox HTML:  ![image](https://cloud.githubusercontent.com/assets/19291215/15157616/6703541a-16ba-11e6-8e71-058d1931bcbd.png)  Pop-Up HTML:   Inside this pop up I have numerous radio buttons, and some checkboxes that I invoke action upon using mydriver. ![image](https://cloud.githubusercontent.com/assets/19291215/15157652/8f6efa80-16ba-11e6-967f-1078f221ee57.png)  Once I am done with all actions inside the pop-up, I click a button to close the popup:  Agree  In my next step, I try to click another  similar checkbox on the same page as the previous checkbox.  Code to click checkbox:  mydriver.findElement(By.xpath("".//*[@id='id_agree_opra']"")).click();  However this is when I get the error ""org.openqa.selenium.WebDriverException: Element is not clickable at point (x, y). Other element would receive the click:   I have tried all of the suggestions from #1202 , but the issue remained, hence I am reaching out to the community.  Methods tried: JavaScript Executor, ExpectedConditions, Actions, Scroll","closed","D-firefox,","TheDeveloperInTest","2016-05-10T18:24:15Z","2019-08-16T21:09:55Z"
"","2728","Cannot click on a blank area with chrome","OS:  Windows 7 64 bit ChromeDriver version: 2.9.248315 Selenium Version: 2.53.0 Browser:  52.0.2743.116 m  I wanted to learn how to click on a blank area on a page using selenium. The commonly suggested method is to click the html element. This method fails with chrome, but not with firefox.  ` import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  public class Temp {     private static final WebDriver browser = new ChromeDriver();  ``` private static String url = ""https://www.google.com/"";  public static void main(String[] args) {     browser.get(url);     browser.findElement(By.tagName(""html"")).click(); } ```   }`  `Starting ChromeDriver (v2.9.248315) on port 15072 Exception in thread ""main"" org.openqa.selenium.WebDriverException: unknown error: Failed to execute 'getComputedStyle' on 'Window': parameter 1 is not of type 'Element'.   (Session info: chrome=52.0.2743.116)   (Driver info: chromedriver=2.9.248315,platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 334 milliseconds Session ID: 69ce4de350c6ade8abcbcd0b1b2093f6     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:408)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)     at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)     at src.Temp.main(Temp.java:14)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)`","closed","","testerjoe2","2016-09-06T18:48:58Z","2019-08-19T18:09:38Z"
"","2521","Clicking a partially hidden button is not handled correctly in Firefox (Java WebDriver 2.53.0)","OS:  Windows 7 (and others) Selenium Version:  2.53.0 (possibly others after 2.47) Java version: 1.8.0_101 (also tried various others including 1.7.0_65) Browser:  Firefox (multiple versions between 34.0.5 and 44.0.1) ## Expected Behavior -  If a button is partially hidden, trying to click it should do one of the following: 1. Throw an exception (""Element is not clickable ... Other element would receive the click"") 2. Click correctly, presumably if the centre of the button is clickable. ## Actual Behavior -  In certain cases, WebDriver thinks it has correctly clicked the button (no exception is thrown), but the button is not clicked.  Works fine in Chrome.  I believe this is a reproducable version of https://github.com/seleniumhq/selenium/issues/1202  ## Steps to reproduce -  Run the following code (images attached for reference)  ``` import org.openqa.selenium.By; import org.openqa.selenium.Dimension; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait;  public class SeleniumTest {      static WebDriver driver;     static WebDriverWait wait;     static String url = ""https://home.bt.com/login/loginform""; // any old URL that illustrates this well     static String xp  = ""//input[@value=\""Log in\""]"";     static String txt = """";      public static void main(String[] args) {         System.out.println(""Running under: "" + System.getProperty(""java.version""));         // setup         DesiredCapabilities capabilities = DesiredCapabilities.firefox();         driver = new FirefoxDriver(capabilities);         wait = new WebDriverWait(driver, 30);         // do it (replicates issue on a screen resolution of 1920x1080)         tryIt(1400, 800); // button in view   - OK... button clicked successfully, so page sends required fields red         tryIt(1150, 650); // totally hidden   - OK... expected exception of 'Element is not clickable ... Other element would receive the click'         tryIt(1350, 650); // partially hidden - BUG?? webdriver thinks it clicked it, but nothing happens (fields don't go red)         driver.quit();     }      private static void tryIt(int x, int y) {         try {             System.out.println(""Trying "" + x + "", "" + y);             driver.manage().window().setSize(new Dimension(x,y));             driver.get(url);             WebElement el = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xp)));             System.out.println(""    Element is: "" + el.toString() + "" ... "" + el.getLocation());             el.click();             System.out.println(""    CLICKED OK"");         }          catch (Exception e) {             System.out.println(""    Caught exception (probably not clickable) ""); // + e.getLocalizedMessage());         }         System.out.println(""Done"");         try {Thread.sleep(2000);} catch (InterruptedException e) {}     }  }  ```  **Image 1** **// button in view   - OK... button clicked successfully, so page sends required fields red** ## ![sel-1](https://cloud.githubusercontent.com/assets/16596286/17139799/bdeedf28-533d-11e6-880c-18d35f3e0b31.PNG)  **Image 2** **// totally hidden   - OK... expected exception of 'Element is not clickable ... Other element would receive the click'** ## ![sel-2](https://cloud.githubusercontent.com/assets/16596286/17139807/c52deffe-533d-11e6-8038-3c94908c7ada.PNG)  **Image 3** **// partially hidden - BUG?? webdriver thinks it clicked it, but nothing happens (fields don't go red)**  ![sel-3](https://cloud.githubusercontent.com/assets/16596286/17139815/cbb2a018-533d-11e6-9b2e-320692a112ba.PNG)","closed","","Marrowbones","2016-07-26T13:42:48Z","2019-08-19T21:09:56Z"
"","2417","java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal error in selenium-java-2.53.1","OS:  Windows 7 Selenium Version: 2.53.1 Browser:  Firefox 38.2   I am using selenium-java-2.53.1 with maven 2.19.1,getting below error: java.lang.NoClassDefFoundError: org/w3c/dom/ElementTraversal  It's working fine with selenium-webdriver-2.53.0.  Please provide me solution for this issue.  Thanks in advance.","closed","","Aru1","2016-07-01T13:23:31Z","2019-08-20T00:09:38Z"
"","2106","issue with profile.setPreference(""browser.link.open_newwindow"", 3);","OS:  windows 7 Selenium Version: 2.52.0  Browser:  Firefox Browser Version:  45.0.1  i need to use something like this to open link in new tab profile.setPreference(""browser.link.open_newwindow"", 3);  but getting below error Exception in thread ""main"" java.lang.IllegalArgumentException: Preference browser.link.open_newwindow may not be overridden: frozen value=2, requested value=3   I checked the same that above error is because ""browser.link.open_newwindow"": 2, is frozen in JSON.  Now I just want to know that working with tabs or Opening a new tab for a link in Firefox is still a limitation for selenium , if yes then will it be overcome in upcoming versions ?","closed","D-firefox,","architgoel2007","2016-05-13T17:15:01Z","2019-08-18T00:09:37Z"
"","2470","Calling from CMD won't do anything","OS:  Windows 7 Selenium Version:  2.53.1 Browser:  Firefox Browser Version:  47.0.1 (64-bit)  Just set-up my cmd to run a Selenium IDE script with Selenium Standalone, then open the firefox and run the test.  When running, firefox opens 2 windows, the TestSuite is loaded, the commands are show in the middle box, but then nothing happens. Nothing. ## Steps to reproduce -  I'm using this command: java -jar C:\SeleniumTest\selenium-server-standalone-2.53.1.jar  -firefoxProfileTemplate ""C:\profila"" -htmlSuite ""*firefox"" ""http://127.0.0.1"" ""C:\SeleniumTest\SeleniumTestcase.html"" ""C:\SeleniumTest\seleniumtestresult.html"" -port 5555","closed","C-htmlrunner,","Jalax6","2016-07-15T13:58:18Z","2019-08-19T10:09:56Z"
"","2225","Webdriver can't click on Element which gets hidden beneath floating header after scroll.","OS:  Windows 7 Selenium Version:  2.53 c# bindings using NUnit tests Browser:  Firefox 46, IE 11 ## Expected Behavior - Webdriver will scroll the element in view and click. ## Actual Behavior -  Webdriver.FindElement call scrolls to the element which hides beneath a floating header. Thus click call fails. I tried using Selenium Actions and also SendKeys but to no avail.  Below is the exception throws and attached is the solution with test cases to reproduce.  POC1.Tests.testLearnMore(""firefox""): System.InvalidOperationException : Element is not clickable at point (791.2000122070312, 32.26666259765625). Other element would receive the click:  Command duration or timeout: 73 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'CHAKRRUP7', ip: '192.168.0.2', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_73' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: c8f83ba5-1346-447c-85dd-8acf0f37da79  [POC1.zip](https://github.com/SeleniumHQ/selenium/files/301904/POC1.zip) ## Steps to reproduce -  Please refer to attached code. Run the test named ""**testLearnMore**"".","closed","","rupam87","2016-06-07T05:53:14Z","2019-08-20T04:09:41Z"
"","2445","Skip failure scripts and proceed to next script","OS:  Windows 7 Selenium Version:  2.52 Browser:  chrome  I have 10 scripts to be executed one by one. If login fails for 1st script, i want to skip that script and proceed to next script. Is there any method available to do this.","closed","","Sumathichn123","2016-07-11T12:44:36Z","2019-08-19T23:09:43Z"
"","2262","selenium.common.exceptions.WebDriverException:","OS:  Windows 7  Selenium Version:  2.52.0  Browser:  Firefox  Browser Version:  47  **Expected Behavior -** Python 3.5.1 Django 1.8.4  I'm currently learning TDD using django and python.  Yesterday, webdriver.Firefox() worked perfectly. Today whenever I try to open Firefox from webdriver, I receive the error message below (in Actual Behavior).  I'm also receiving a similar error in when running webdriver.Firefox() from IDLE.   ## Actual Behavior -  ``` ====================================================================== ERROR: test_can_start_a_list_and_retrieve_it_later (functional_tests.tests.NewVisitorTest) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""C:\python33\superlists\functional_tests\tests.py"", line 10, in setUp     self.browser = webdriver.Firefox()   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 81, in __init__     self.binary, timeout)   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\extension_connection.py"", line 51, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\firefox_binary.py"", line 98, in _wait_until_connectable     raise WebDriverException(""The browser appears to have exited "" selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details.   ---------------------------------------------------------------------- Ran 8 tests in 2.571s  FAILED (errors=1) Creating test database for alias 'default'... Destroying test database for alias 'default'...  ```  And the IDLE traceback:  ``` Traceback (most recent call last):   File """", line 1, in      webdriver.Firefox()   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 81, in __init__     self.binary, timeout)   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\extension_connection.py"", line 51, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""C:\Users\harrisonjd\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium\webdriver\firefox\firefox_binary.py"", line 98, in _wait_until_connectable     raise WebDriverException(""The browser appears to have exited "" selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details.  ```","closed","","jharrison12","2016-06-10T19:21:08Z","2019-08-20T03:09:41Z"
"","2204","Selenium version 2.53 is not working with Firefox version 47","OS:  Windows 7    Selenium Version:  2.53    Browser:  Firefox -->47    Expected Behavior -On calling driver = new FirefoxDriver(); FF browser should open  Actual Behavior - I just get the below error...  Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'Admin-PC', ip: 'x.x.x.x', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: RemoteWebDriver Session ID: 7b2e0b0e-b693-48b9-ab0f-a781972e53dd Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=47.0}]     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)     at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:945)     at test.WinHandle.main(WinHandle.java:21) Caused by: java.net.SocketException: Connection reset     at java.net.SocketInputStream.read(Unknown Source)     at java.net.SocketInputStream.read(Unknown Source)     at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)     at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)     at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)     at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)     at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)     at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)     at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)     at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)     at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     ... 2 more And on the firefox browser exception pop up it displays the below error log Problem signature:   Problem Event Name:   APPCRASH   Application Name: firefox.exe   Application Version:  47.0.0.5995   Application Timestamp:    574e5552   Fault Module Name:    xul.dll   Fault Module Version: 47.0.0.5995   Fault Module Timestamp:   574e6409   Exception Code:   80000003   Exception Offset: 00746fcf   OS Version:   6.1.7601.2.1.0.768.2   Locale ID:    1033   Additional Information 1: 0a9e   Additional Information 2: 0a9e372d3b4ad19135b953a78882e789   Additional Information 3: 0a9e   Additional Information 4: 0a9e372d3b4ad19135b953a78882e789","closed","","rbhat0987","2016-06-03T13:18:40Z","2016-06-13T13:13:25Z"
"","2134","contextClick not working on safari browser","OS:  Windows    Selenium Version:  2.52    Browser:  Safari    Browser Version:  5.1.7   ## Expected Behavior - Should show the context menu ## Actual Behavior - Getting org.openqa.selenium.WebDriverException: Unknown command: error  Details:  Error Cause : org.openqa.selenium.WebDriverException: Unknown command: {""id"":""q0m46jdszbl7"",""name"":""mouseMoveTo"",""parameters"":{""element"":"":wdc:1463465694082""}} (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 8 milliseconds Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:06:42' System info: host: 'RapidValue-PC', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_66' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{browserName=safari, takesScreenshot=true, javascriptEnabled=true, version=5.1.7, cssSelectorsEnabled=true, platform=WINDOWS, secureSsl=true}] Session ID: null","closed","","sanojqa","2016-05-20T07:39:44Z","2019-08-20T05:09:50Z"
"","2522","Selenium firefox driver get hanged out","OS:  Win7, Win8.1, Win10, OS X Selenium Version:  Tried from 2.48 to 2.53.1 Browser:  Issue only in Firefox. Logged bug in firefox: https://bugzilla.mozilla.org/show_bug.cgi?id=1289456 Browser Version: Tried from 45 to 47 ## Expected Behavior -  Should not throw any error message, it allow us to perform any action on the page. ## Actual Behavior -  Getting below error :  1469541521068   addons.productaddons    ERROR   Request failed certificate checks: [Exception... ""Certificate checks failed. See previous errors for details.""  nsresult: ""0x80070057 (NS_ERROR_ILLEGAL_VALUE)""  location: ""JS frame :: resource://gre/modules/CertUtils.jsm :: validateCert :: line 113""  data: no] JavaScript error: https://xxxxxxxx/js/lib/pouchdb.crypto.js, line 2230: TypeError: res.results is undefined JavaScript error: https://xxxxxxxxx/js/lib/pouchdb.min.js, line 8: Error: ETIMEDOUT","closed","D-firefox,","Manibharathi007","2016-07-26T14:44:30Z","2019-08-16T23:09:43Z"
"","2330","Code works fine locally, but gives error when executed on a linode server","OS:  Ubuntu 14.04.4 LTS (GNU/Linux 4.5.3-x86_64-linode67 x86_64)    Selenium Version:  2.53.5    Browser:  Firefox    Browser Version:  45.0      I'm getting the following error when I'm trying to run my script on this linode server. Everything works fine in my local environment. I've tried 'wait' in case elements of webpage appear late but nothing works. I'm running Firefox in headless mode. Message:  Stacktrace:     at FirefoxDriver.prototype.findElementInternal_ (file:///tmp/tmp1nOSXC/extensions/fxdriver@googlecode.com/components/driver-component.js:10770)     at fxdriver.Timer.prototype.setTimeout/","closed","","mojoboss","2016-06-21T13:00:24Z","2019-08-19T10:09:42Z"
"","2061","Random TypeError: no implicit conversion of String into Integer when running with parallel_tests multiple processes","OS:  Ubuntu 14.04 LTS Selenium Version:  2.53 Browser:  Google Chrome Browser Version:  50.0.2661.94  Expected Behavior - tests passes without random `TypeError: no implicit conversion of String into Integer`` errors.  Actual Behavior - throws random `TypeError: no implicit conversion of String into Integer` errors when running with `parallel_tests` on multiple processes. It doesn't throw these errors when running with `parallel_tests` with concurency ""1"" ( single process ).   Looks like there are some other people experiencing same http://stackoverflow.com/questions/35731868/selenium-combo-throwing-an-error-on-element-id-from  ```  Failure/Error: fill_in 'Email', with: company.email            TypeError:             no implicit conversion of String into Integer           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/common/bridge_helper.rb:47:in `[]'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/common/bridge_helper.rb:47:in `element_id_from'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/remote/bridge.rb:609:in `block in find_elements_by'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/remote/bridge.rb:609:in `each'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/remote/bridge.rb:609:in `map'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/remote/bridge.rb:609:in `find_elements_by'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/selenium-webdriver-2.53.0/lib/selenium/webdriver/common/search_context.rb:84:in `find_elements'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/selenium/driver.rb:70:in `find_xpath'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/node/base.rb:108:in `find_xpath'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/queries/selector_query.rb:112:in `block in resolve_for'             # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/node/base.rb:81:in `synchronize'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/queries/selector_query.rb:108:in `resolve_for'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/node/finders.rb:35:in `block in find'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/node/base.rb:85:in `synchronize'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/node/finders.rb:33:in `find'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/node/actions.rb:59:in `fill_in'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/session.rb:699:in `block (2 levels) in '             # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/capybara-2.7.1/lib/capybara/dsl.rb:52:in `block (2 levels) in '           # ./spec/features/direct_app/sessions_spec.rb:78:in `block (3 levels) in '           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/sidekiq-3.5.4/lib/sidekiq/testing.rb:15:in `__set_test_mode'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/sidekiq-3.5.4/lib/sidekiq/testing.rb:29:in `fake!'           # ./spec/spec_helper.rb:173:in `block (2 levels) in '           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/rspec-retry-0.4.5/lib/rspec/retry.rb:98:in `block in run'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/rspec-retry-0.4.5/lib/rspec/retry.rb:88:in `loop'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/rspec-retry-0.4.5/lib/rspec/retry.rb:88:in `run'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/rspec-retry-0.4.5/lib/rspec_ext/rspec_ext.rb:12:in `run_with_retry'           # /var/lib/jenkins/jobs/Project/bundle/ruby/2.3.0/gems/rspec-retry-0.4.5/lib/rspec/retry.rb:22:in `block (2 levels) in setup' ```","closed","C-rb,","sauliusgrigaitis","2016-05-06T11:19:37Z","2019-08-19T02:09:58Z"
"","2726","Selenium 3 beta 3 - Safaridriver search for Plugin","OS:  OSX 10.11.6 ( fresh reinstalled)   Selenium Version: 3 beta3 Browser:  Safari 10  When i start my test  ``` DesiredCapabilities safariCap = DesiredCapabilities.safari(); WebDriver driver = new SafariDriver(safariCap); driver.get(""http://google.de"");  ```  Safari open and try to connect with the SafariDriver extension.  I have no Browser extension installed  its look like library attempts to start the old variant with the Browser extension  ![bildschirmfoto 2016-09-06 um 18 57 44](https://cloud.githubusercontent.com/assets/4245019/18284262/9a7b9eda-7469-11e6-86b2-86c31ff3a40f.png)  ``` Sep 06, 2016 6:57:38 PM org.openqa.selenium.safari.SafariDriverServer start INFORMATION: Server started on port 2721 Sep 06, 2016 6:57:38 PM org.openqa.selenium.safari.SafariDriverCommandExecutor start INFORMATION: Launching Safari Sep 06, 2016 6:57:38 PM org.openqa.selenium.safari.SafariDriverCommandExecutor start INFORMATION: Waiting for SafariDriver to connect Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Shutting down Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Stopping Safari Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Stopping server Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverServer stop INFORMATION: Stopping server Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Shutdown complete Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Shutting down Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Stopping server Sep 06, 2016 6:57:48 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFORMATION: Shutdown complete FAILED: shortShoppingTest org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10072 ms Build info: version: 'unknown', revision: 'c7b525d', time: '2016-09-01 14:57:44 -0700' System info: host: 'testqss-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: SafariDriver     at org.openqa.selenium.safari.SafariDriverCommandExecutor.start(SafariDriverCommandExecutor.java:118)     at org.openqa.selenium.safari.SafariDriver.startClient(SafariDriver.java:116)     at org.openqa.selenium.remote.RemoteWebDriver.startClient(RemoteWebDriver.java:284)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:69)     at de.test.test.Test.shortShoppingTest(Test.java:31)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)     at org.testng.TestRunner.privateRun(TestRunner.java:767)     at org.testng.TestRunner.run(TestRunner.java:617)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)     at org.testng.SuiteRunner.run(SuiteRunner.java:240)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)     at org.testng.TestNG.run(TestNG.java:1031)     at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)  ```  I try in grid mode. The result was the same.   ``` DesiredCapabilities capabilities = DesiredCapabilities.safari();         try {                    driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), capabilities);         } catch (MalformedURLException e) {}          driver.get(""http://google.de"");   ```  Selenium Log  ``` ./start_selenium.sh  19:00:13.683 INFO - Selenium build info: version: '3.0.0-beta3', revision: 'c7b525d' 19:00:13.684 INFO - Launching a standalone Selenium Server 2016-09-06 19:00:13.704:INFO::main: Logging initialized @282ms 19:00:13.773 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform MAC 19:00:13.773 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped: registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform MAC 19:00:13.774 INFO - Driver class not found: com.opera.core.systems.OperaDriver 19:00:13.774 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered 19:00:13.777 INFO - Driver class not found: org.openqa.selenium.htmlunit.HtmlUnitDriver 19:00:13.777 INFO - Driver provider org.openqa.selenium.htmlunit.HtmlUnitDriver is not registered 2016-09-06 19:00:13.806:INFO:osjs.Server:main: jetty-9.2.15.v20160210 2016-09-06 19:00:13.832:INFO:osjsh.ContextHandler:main: Started o.s.j.s.ServletContextHandler@69d9c55{/,null,AVAILABLE} 2016-09-06 19:00:13.861:INFO:osjs.ServerConnector:main: Started ServerConnector@6d8a00e3{HTTP/1.1}{0.0.0.0:4444} 2016-09-06 19:00:13.862:INFO:osjs.Server:main: Started @440ms 19:00:13.862 INFO - Selenium Server is up and running 19:00:27.247 INFO - SessionCleaner initialized with insideBrowserTimeout 0 and clientGoneTimeout 1800000 polling every 180000 19:00:27.280 INFO - Executing: [new session: Capabilities [{browserName=safari, version=, platform=MAC}]]) 19:00:27.300 INFO - Creating a new session for Capabilities [{browserName=safari, version=, platform=MAC}] 19:00:27.372 INFO - Server started on port 24193 19:00:27.379 INFO - Launching Safari 19:00:27.390 INFO - Waiting for SafariDriver to connect 19:00:37.396 INFO - Shutting down 19:00:37.396 INFO - Stopping Safari 19:00:37.485 INFO - Stopping server 19:00:37.485 INFO - Stopping server 19:00:37.492 INFO - Shutdown complete 19:00:37.493 INFO - Shutting down 19:00:37.493 INFO - Stopping server 19:00:37.493 INFO - Shutdown complete 19:00:37.496 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '3.0.0-beta3', revision: 'c7b525d', time: '2016-09-01 14:57:03 -0700' System info: host: 'testqss-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:192)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:36)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:185)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '3.0.0-beta3', revision: 'c7b525d', time: '2016-09-01 14:57:03 -0700' System info: host: 'testqss-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:113)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:209)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     ... 1 more Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)     ... 9 more Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10101 ms Build info: version: '3.0.0-beta3', revision: 'c7b525d', time: '2016-09-01 14:57:03 -0700' System info: host: 'testqss-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: SafariDriver     at org.openqa.selenium.safari.SafariDriverCommandExecutor.start(SafariDriverCommandExecutor.java:118)     at org.openqa.selenium.safari.SafariDriver.startClient(SafariDriver.java:116)     at org.openqa.selenium.remote.RemoteWebDriver.startClient(RemoteWebDriver.java:284)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:69)     ... 14 more 19:00:37.507 WARN - Exception: Failed to connect to SafariDriver after 10101 ms Build info: version: '3.0.0-beta3', revision: 'c7b525d', time: '2016-09-01 14:57:03 -0700' System info: host: 'testqss-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: SafariDriver 19:00:37.591 WARN - Exception thrown java.lang.NullPointerException     at java.util.HashMap.putMapEntries(HashMap.java:500)     at java.util.HashMap.putAll(HashMap.java:784)     at org.openqa.selenium.remote.DesiredCapabilities.(DesiredCapabilities.java:54)     at org.openqa.selenium.remote.server.handler.NewSession.setJsonParameters(NewSession.java:53)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:99)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:185)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) ```","closed","","Lightmoor","2016-09-06T17:43:03Z","2019-08-19T14:09:53Z"
"","2367","Selenium 3: Firefox Driver shuts with Unsupported marionette protocol version exception after launch","OS:  OSx Selenium Version:  selenium-server-standalone-3.0.0-beta-5d363.jar, selenium-server-standalone-latest.jar Browser:  Firefox Browser Version:  43 Expected Behavior - Firefox driver should open and subsequent commands should run. Actual Behavior - Firefox driver throws this exception 1466771927814   Marionette  INFO    Marionette enabled via build flag and pref 1466771928016   Marionette  INFO    Listening on port 2828 1466771928517   Marionette  INFO    Marionette enabled via command-line flag 1466771928569   Marionette  INFO    Accepted connection conn0 from 127.0.0.1:61582 1466771928570   Marionette  DEBUG   conn0 client","closed","","anurag67475","2016-06-24T16:04:18Z","2019-08-19T02:09:51Z"
"","2622","FF 48 Selenium webdriver - 2.53.1 - org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:","OS:  OSX Selenium Version:  2.53.1 Browser:  Firefox  It's just launching a blank ff screen and the extension being added gets deleted.  Test is to actually have the extension to be added to the FF toolbar. ## Code snippet üëç    public static final String firefoxExtension = ""/Downloads/toolbar-staging-latest.xpi"";  ``` public static void getEnvironmentInfo() throws IOException {     LOGGER.info((""Current Operating System: "" + operatingSystem));     LOGGER.info(""Current Architecture: "" + systemArchitecture);     LOGGER.info(""Current Browser Selection: "" + CONFIG.getProperty(""Browser""));  }  public static void initialize() throws IOException {     System.out.println(""value of driver""+driver);     System.out.println(""Intialize method in Abstract"");     CONFIG = new Properties();     LOGGER.info(System.getProperty(""user.dir""));     FileInputStream fp = new FileInputStream(System.getProperty(""user.dir"") + ""/src/config.properties"");     CONFIG.load(fp);      if (CONFIG.getProperty(""Browser"").equalsIgnoreCase(""firefox"") ){         File file = new File(firefoxExtension);         FirefoxProfile firefoxProfile = new FirefoxProfile();         firefoxProfile.addExtension(file);         firefoxProfile.setPreference(""extensions.Mon Alerte Shoop.currentVersion"", ""1.1.4"");         System.setProperty(""webdriver.firefox.bin"",""/Applications/Firefox.app/Contents/MacOS/firefox-bin"");         // Avoid startup screen ```  //            WebDriver driver = new FirefoxDriver(firefoxProfile); //          DesiredCapabilities dc = new DesiredCapabilities(firefoxProfile);                 driver = new FirefoxDriver(firefoxProfile);                 Utility.setWindowMaximise(driver);    } else {                 if (CONFIG.getProperty(""Browser"").equalsIgnoreCase(""chrome"")) {                     DesiredCapabilities dc = new DesiredCapabilities();                     if (operatingSystem.contains(""WINDOWS"")) {                         System.setProperty(""webdriver.chrome.driver"",chromeWindowsdriver);                     } else if (operatingSystem.contains(""MAC"")) {                         System.setProperty(""webdriver.chrome.driver"",chromeMacdriver);                     } else if (operatingSystem.contains(""LINUX"")) {                         System.setProperty(""webdriver.chrome.driver"",chromeLinuxdriver);                     }else if (operatingSystem.contains(""Centos"")) {                         System.setProperty(""webdriver.chrome.driver"",chromeCentosdriver);                         //System.setProperty(""webdriver.chrome.driver"",chromeExtention);                     }  System.setProperty(""webdriver.chrome.driver"", System.getProperty(""user.dir"")+ chromeLinuxdriver);                System.setProperty(""webdriver.chrome.chrome-extension"", chromeExtension);                    ChromeOptions options = new ChromeOptions();  ```           options.addExtensions (new File(chromeExtension));                dc.setCapability(ChromeOptions.CAPABILITY, options);                 driver = new ChromeDriver(dc);                   Utility.setWindowMaximise(driver);         }     } } ``` #   org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: 8-4474-a285-3208198ce6fd}"",""syncGUID"":""cjTT2Ycm32V5"",""location"":""app-global"",""version"":""48.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1470754250000,""updateDate"":1470754250000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1471446838988   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1471446838989   DeferredSave.extensions.json    DEBUG   Save changes 1471446838989   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1471446838989   addons.xpi-utils    DEBUG   Updating add-on states 1471446838991   addons.xpi-utils    DEBUG   Writing add-ons list 1471446838992   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1471446838993   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1471446838993   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1471446838993   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1471446838994   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1471446838994   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1471446839013   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1471446839013   addons.manager  DEBUG   Provider finished startup: XPIProvider 1471446839013   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1471446839013   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1471446839013   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1471446839014   addons.manager  DEBUG   Starting provider: GMPProvider 1471446839018   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1471446839018   addons.manager  DEBUG   Provider finished startup: GMPProvider 1471446839018   addons.manager  DEBUG   Starting provider: PluginProvider 1471446839019   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1471446839019   addons.manager  DEBUG   Provider finished startup: PluginProvider 1471446839019   addons.manager  DEBUG   Completed startup sequence 1471446839290   addons.manager  DEBUG   Starting provider:  1471446839290   addons.manager  DEBUG   Registering shutdown blocker for  1471446839290   addons.manager  DEBUG   Provider finished startup:  1471446839295   DeferredSave.extensions.json    DEBUG   Starting write 1471446839465   addons.repository   DEBUG   No addons.json found. 1471446839465   DeferredSave.addons.json    DEBUG   Save changes 1471446839467   DeferredSave.addons.json    DEBUG   Starting timer 1471446839518   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1471446839518   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1471446839518   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1471446839520   DeferredSave.extensions.json    DEBUG   Write succeeded 1471446839521   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1471446839521   DeferredSave.addons.json    DEBUG   Starting write 1471446839538   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at com.maple.shoop.config.AbstractDriver.initialize(AbstractDriver.java:67) at com.maple.shoop.Runner.ToolbarExtensionLoginRunner.setUp(ToolbarExtensionLoginRunner.java:39) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at cucumber.api.junit.Cucumber.run(Cucumber.java:98) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144) ```  Aug 17, 2016 4:14:43 PM com.maple.shoop.Runner.ToolbarExtensionLoginRunner tearDown INFO: Quiting browser  org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/Applications/Firefox.app/Contents/MacOS/firefox-bin) on port 7055; process output follows:  8-4474-a285-3208198ce6fd}"",""syncGUID"":""cjTT2Ycm32V5"",""location"":""app-global"",""version"":""48.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1470754250000,""updateDate"":1470754250000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1471446838988   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1471446838989   DeferredSave.extensions.json    DEBUG   Save changes 1471446838989   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1471446838989   addons.xpi-utils    DEBUG   Updating add-on states 1471446838991   addons.xpi-utils    DEBUG   Writing add-ons list 1471446838992   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1471446838993   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1471446838993   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1471446838993   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1471446838994   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1471446838994   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1471446839013   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1471446839013   addons.manager  DEBUG   Provider finished startup: XPIProvider 1471446839013   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1471446839013   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1471446839013   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1471446839014   addons.manager  DEBUG   Starting provider: GMPProvider 1471446839018   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1471446839018   addons.manager  DEBUG   Provider finished startup: GMPProvider 1471446839018   addons.manager  DEBUG   Starting provider: PluginProvider 1471446839019   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1471446839019   addons.manager  DEBUG   Provider finished startup: PluginProvider 1471446839019   addons.manager  DEBUG   Completed startup sequence 1471446839290   addons.manager  DEBUG   Starting provider:  1471446839290   addons.manager  DEBUG   Registering shutdown blocker for  1471446839290   addons.manager  DEBUG   Provider finished startup:  1471446839295   DeferredSave.extensions.json    DEBUG   Starting write 1471446839465   addons.repository   DEBUG   No addons.json found. 1471446839465   DeferredSave.addons.json    DEBUG   Save changes 1471446839467   DeferredSave.addons.json    DEBUG   Starting timer 1471446839518   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1471446839518   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1471446839518   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1471446839520   DeferredSave.extensions.json    DEBUG   Write succeeded 1471446839521   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1471446839521   DeferredSave.addons.json    DEBUG   Starting write 1471446839538   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09' System info: host: 'Lon-Quid-ML-82.local', ip: '192.168.227.134', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_91' Driver info: driver.version: AbstractDriver  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at com.maple.shoop.config.AbstractDriver.initialize(AbstractDriver.java:67) at com.maple.shoop.Runner.ToolbarExtensionLoginRunner.setUp(ToolbarExtensionLoginRunner.java:39) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at cucumber.api.junit.Cucumber.run(Cucumber.java:98) at org.junit.runner.JUnitCore.run(JUnitCore.java:137) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144) ```  Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: 8-4474-a285-3208198ce6fd}"",""syncGUID"":""cjTT2Ycm32V5"",""location"":""app-global"",""version"":""48.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1470754250000,""updateDate"":1470754250000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1471446838988   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1471446838989   DeferredSave.extensions.json    DEBUG   Save changes 1471446838989   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1471446838989   addons.xpi-utils    DEBUG   Updating add-on states 1471446838991   addons.xpi-utils    DEBUG   Writing add-ons list 1471446838992   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1471446838993   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1471446838993   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1471446838993   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1471446838994   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1471446838994   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1471446839013   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1471446839013   addons.manager  DEBUG   Provider finished startup: XPIProvider 1471446839013   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1471446839013   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1471446839013   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1471446839014   addons.manager  DEBUG   Starting provider: GMPProvider 1471446839018   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1471446839018   addons.manager  DEBUG   Provider finished startup: GMPProvider 1471446839018   addons.manager  DEBUG   Starting provider: PluginProvider 1471446839019   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1471446839019   addons.manager  DEBUG   Provider finished startup: PluginProvider 1471446839019   addons.manager  DEBUG   Completed startup sequence 1471446839290   addons.manager  DEBUG   Starting provider:  1471446839290   addons.manager  DEBUG   Registering shutdown blocker for  1471446839290   addons.manager  DEBUG   Provider finished startup:  1471446839295   DeferredSave.extensions.json    DEBUG   Starting write 1471446839465   addons.repository   DEBUG   No addons.json found. 1471446839465   DeferredSave.addons.json    DEBUG   Save changes 1471446839467   DeferredSave.addons.json    DEBUG   Starting timer 1471446839518   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1471446839518   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1471446839518   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1471446839520   DeferredSave.extensions.json    DEBUG   Write succeeded 1471446839521   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1471446839521   DeferredSave.addons.json    DEBUG   Starting write 1471446839538   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 29 more ```","closed","","skhanam","2016-08-17T15:52:13Z","2019-08-19T19:09:55Z"
"","2243","Opera driver is not working or help needed to setup i am getting error","OS:  OSX Selenium Version:  2.53.0 (Standalone) Browser:  opera  Browser Version:  37.0  I am trying to make opera integration working but its now working. I have downloaded opera driver.   I have tried with opera config like this..  ``` ""capabilities"":[ {       ""platform"": ""MAC"",       ""browserName"": ""opera"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver"",       ""chromeOptions"":{         ""args"":[],         ""extensions"":[],         ""binary"": ""/Applications/Opera.app/Contents/MacOS/Opera""       },       ""operaOptions"":{         ""binary"": ""/Applications/Opera.app/Contents/MacOS/Opera""       },       ""binary"":""/Applications/Opera.app/Contents/MacOS/Opera""     }] ```  I have tried all possible help from internet and finally come up with this.  while trying to run as node I am noticing 2 warnings.  01:38:21.708 INFO - Launching a Selenium Grid node Setting system property webdriver.chrome.driver to /Users/mandalm/Public/selenium_grid/node_modules/selenium-standalone/.selenium/chromedriver/2.21-x64-chromedriver 01:38:22.033 INFO - Java: Oracle Corporation 25.91-b14 01:38:22.033 INFO - OS: Mac OS X 10.10.5 x86_64 01:38:22.037 INFO - v2.53.0, with Core v2.53.0. Built from revision 35ae25b 01:38:22.078 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform MAC 01:38:22.078 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped: registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform MAC 01:38:22.079 INFO - **Driver class not found: com.opera.core.systems.OperaDriver** 01:38:22.079 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered 01:38:22.080 INFO - **Driver class not found: org.openqa.selenium.htmlunit.HtmlUnitDriver** 01:38:22.080 INFO - Driver provider org.openqa.selenium.htmlunit.HtmlUnitDriver is not registered 01:38:22.112 INFO - Selenium Grid node is up and ready to register to the hub 01:38:22.133 INFO - Starting auto registration thread. Will try to register every 5000 ms. 01:38:22.133 INFO - Registering the node to the hub: http://localhost:4444/grid/register 01:38:22.141 INFO - The node is registered to the hub and ready to use  when i am trying to use opera browser this is the error log i have seen.   01:56:55.406 INFO - Executing: [new session: Capabilities [{rotatable=true, build=2016-06-08T20:26:54.311Z, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@b02f3ab, browserName=opera, javascriptEnabled=true, handlesAlerts=true, maxInstances=1, requestOrigins={name=webdriverio, version=4.0.9, url=http://webdriver.io}}]]) 01:56:55.674 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: **The best matching driver provider org.openqa.selenium.safari.SafariDriver can't create a new driver instance for Capabilities [{rotatable=true, build=2016-06-08T20:26:54.311Z, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@b02f3ab, browserName=opera, project=TGXv2 ads rendering, javascriptEnabled=true, handlesAlerts=true, maxInstances=1, requestOrigins={name=webdriverio, version=4.0.9, url=http://webdriver.io}}]** Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'BAN-MANDALMMAC.local', ip: '192.168.1.104', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_91' **Driver info: driver.version: unknown**     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:192)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:79)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)     at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)     at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)     at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)     at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)     at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)     at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)     at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)     at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)     at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) Caused by: org.openqa.selenium.WebDriverException: **The best matching driver provider org.openqa.selenium.safari.SafariDriver can't create a new driver instance for Capabilities [{rotatable=true, build=2016-06-08T20:26:54.311Z, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@b02f3ab, browserName=opera, project=TGXv2 ads rendering, javascriptEnabled=true, handlesAlerts=true, maxInstances=1, requestOrigins={name=webdriverio, version=4.0.9, url=http://webdriver.io}}]** Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'BAN-MANDALMMAC.local', ip: '192.168.1.104', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_91' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:62)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) 01:56:55.680 WARN - Exception: The best matching driver provider org.openqa.selenium.safari.SafariDriver can't create a new driver instance for Capabilities [{rotatable=true, build=2016-06-08T20:26:54.311Z, locationContextEnabled=true, loggingPrefs=org.openqa.selenium.logging.LoggingPreferences@b02f3ab, browserName=opera, project=TGXv2 ads rendering, javascriptEnabled=true, handlesAlerts=true, maxInstances=1, requestOrigins={name=webdriverio, version=4.0.9, url=http://webdriver.io}}] Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_91' Driver info: driver.version: unknown  Let me know if i missing something. what should i do to fix it?  regards Mithun Mandal","closed","","mandalm","2016-06-08T20:36:04Z","2019-08-20T03:10:02Z"
"","2258","Firefox 47.0 and Selenium 2.53.0 seem incompatible","OS:  OSX Selenium Version:  2.53.0 Browser:  Firefox Browser Version: 47.0  Running tests with `rspec` and `selenium` crash firefox with following errors:   ``` Process:               firefox-bin [12045] Path:                  /Applications/Firefox.app/Contents/MacOS/firefox-bin Identifier:            org.mozilla.firefox Version:               47.0 (4716.6.4) Code Type:             X86-64 (Native) Parent Process:        ruby [12043] Responsible:           iTerm2 [229] User ID:               501  Date/Time:             2016-06-10 09:35:19.249 -0400 OS Version:            Mac OS X 10.11.5 (15F34) Report Version:        11 Anonymous UUID:        38892878-A3C9-C611-78BB-E6E7950B35F3  Sleep/Wake UUID:       F3C1EB60-3597-47E4-A001-85B1A63D1C42  Time Awake Since Boot: 64000 seconds Time Since Wake:       1100 seconds  System Integrity Protection: enabled  Crashed Thread:        7  Socket Thread  Exception Type:        EXC_BAD_ACCESS (SIGSEGV) Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000040 ```","closed","","gopz","2016-06-10T13:37:18Z","2019-08-20T03:09:58Z"
"","2554","Script Timeouts","OS:  OS X Selenium Version:  3.0.0.beta Browser:  Firefox Browser Version:  50  For Marionette I'm getting the wrong error back for Script Timeouts This works through local Ruby & fails through the Server.  The calls and responses for local & remote: https://gist.github.com/titusfortner/b8ce9e751db6edb947c4bdec1f834c56","closed","","titusfortner","2016-08-02T20:39:37Z","2019-08-19T13:09:51Z"
"","2724","Cannot access any elements on second IE window","OS:  Microsoft 7 Selenium Version:  2.44.0 Browser:  IE 11, 64 Bit  I am having a major issue running our automation scripts in IE. I am able to access the elements I need in the default IE window. In our application, I click a button, and a new window opens. In that new window I am not able to access ANY of the elements. I've never had this issue in the past as the code is the same and it works fine in FF.  I‚Äôm able to switch WebDriver to the new window and close that window so I know I‚Äôm where I‚Äôm supposed to be. I wrote a method to list all elements on the page but all 2,118 elements/html tags come back blank. The only thing that comes back correct is the title of that window. I executed the same method on the default window and everything comes back correctly.  Any suggestions? I think I've done all the research I can as well as trial and error with switching windows in WebDriver, trying to access the elements, changing Internet Options in IE, enabling/disabling protected modes, etc.  I can provide more info as needed. This is a high priority and a resolution is much appreciated.","closed","","kphilogene","2016-09-06T15:20:11Z","2019-08-19T18:09:39Z"
"","2335","Selenium 2.53- The browser appears to have exited before we could connect.","OS:  Mac OS 10.11.5 Selenium Version:  2.53 Browser:  Firefox   Browser Version:   (version 47.0) ## Expected Behavior -  The browser should open and should run the test completely and it should also produce the expected result. ## Actual Behavior -  The browser is triggering. It is opening up for few seconds and then it exits abnormally. It shows the following error message in the console:   `selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details.` ## Steps to reproduce - - Installed Firefox version 47.0 (latest update) - Installed Selenium version 2.53 - Wrote a demo script in python using Selenium. Can be found here: https://gist.github.com/talktokets/d02b50ebec3b56cfae011e52a3fab576 - Ran the script","closed","","talktokets","2016-06-22T10:31:15Z","2019-08-20T01:09:58Z"
"","2049","getting unreachable browser exception after a while when I run testng.xml using maven OS : MAC","OS:  MAC    Selenium Version:  2.53.0    Browser:  All browsers ## Expected Behavior - Not getting unreachable browser exception and the suite should run smoothly. ## Actual Behavior - getting unreachable browser exception after a while on a regular basis. Sometimes executes completely, sometimes doesn't. (FYI the same code). Caused by: org.openqa.selenium.WebDriverException: java.net.SocketException: Bad file descriptor ## Steps to reproduce - No idea","closed","","hemanthsridhar","2016-05-03T22:31:26Z","2019-08-20T05:09:51Z"
"","2205","Browser timeout help documentation inconsistent with timeout behavior on Grid hub","OS:  Debian Linux Selenium Version:  2.53.0 Browser:  Firefox Browser Version:  45.1.1 ## Expected Behavior -  The browserTimeout value should either be treated as a value in terms of seconds or milliseconds, and this information should be documented clearly. Additionally, the behavior of Selenium Grid should use timeouts equivalent to the timeout value specified through browserTimeout. ## Actual Behavior -  The browserTimeout value is treated in terms of milliseconds in the TestSession class, as can be seen here: https://github.com/SeleniumHQ/selenium/blob/selenium-2.53.0/java/server/src/org/openqa/grid/internal/TestSession.java#L196 This method constructs an HttpClient object by passing in the value of browserTimeout from the configuration object without converting the value to milliseconds. The getGridHttpClient() method subsequently uses that value to construct a SocketConfig object with the timeout set to ""60"", which the Apache Http library interprets as milliseconds. Thus, instead of waiting for 60 seconds to read a stream, the socket library will only wait for 60 milliseconds.  However, running `java -jar selenium-server-standalone -role hub -help` shows that the browserTimeout value is set in terms of seconds. This inconsistency between documentation and behavior has led to SocketTimeoutExceptions being thrown, causing tests that run over a network to fail unexpectedly. ## Steps to reproduce -  Here is my hub config file:  ``` {   ""browserTimeout"": 10 } ```  Here is my node config file:  ``` {   ""capabilities"": [     {       ""seleniumProtocol"": ""WebDriver"",       ""browserName"": ""firefox"",       ""maxInstances"": 3,       ""version"": ""46"",       ""platform"": ""MAC""     }   ],   ""configuration"": {     ""maxSession"": 1,     ""port"": 6000,     ""register"": true,     ""unregisterIfStillDownAfter"": 10000,     ""hubPort"": 4444,     ""hubHost"": ""127.0.0.1"",     ""nodeStatusCheckTimeout"": 10000,     ""downPollingLimit"": 0   } } ```  Here is my Groovy script to demonstrate this error:  ``` @Grab('org.seleniumhq.selenium:selenium-java:2.53.0')  import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver;  DesiredCapabilities caps = DesiredCapabilities.firefox(); RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), caps); driver.quit(); ```  For the record, this is an excerpt of the output from running `java -jar selenium-server-standalone-2.53.0.jar -role hub -help` :  ```   -browserTimeout:     The timeout in seconds a browser can hang ```","closed","","alewang","2016-06-03T18:11:48Z","2019-08-20T04:09:51Z"
"","2439","One Specific WebElement does not Click or sendkeys(Keys.Enter) for FF or IE but works for Chrome","OS:   Windows 7 Ultimate (64 bit)  Selenium Version:  Selenium WebDriver 2.53.1  Browser:  Internet Explorer, FireFox, Chrome  -->  Browser Version:  IE 10.0.9200.17609CO , FF 47.0.1  (32bit webdriver)  Chrome IE 10.0.9200.17609CO , FF 47.0.1 (32 bit)   ## Expected Behavior -  Finding a specfic WebElement and clicking on it  Chrome/IE/FF = Yes ## Actual Behavior - Finding a specfic WebElement and clicking on it  Chrome = Yes   FF/IE = No ## Steps to reproduce -  ts.getDriver().FindElement(By.XPath(""myxpath""]"")).SendKeys(Keys.Enter);  I am only seeing this on one button in my application. I have tried both the .click() and sendkeys methods and neither click on the button however i do see it briefly highlight the button. It is only happening on one button in my application.","closed","","Aswilli4","2016-07-07T20:27:09Z","2019-08-19T23:09:51Z"
"","2226","Issue with running FirefoxDriver in threaded environment (Java)","OS:   Ubuntu Linux 14.04 Selenium Version:  2.53.0 Browser:  Firefox Browser Version: 46.0.1  ---  Consider the following program:  ``` java package seleniumdemo;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.chrome.ChromeDriver;  import java.util.*; import java.util.concurrent.ExecutionException; import java.util.concurrent.ExecutorService; import java.util.concurrent.Executors; import java.util.concurrent.Future; import java.util.logging.Logger;  public class Runner {     private static final Logger log = Logger.getLogger(Runner.class.getName());      public static void main(String[] args) throws ExecutionException, InterruptedException {         ExecutorService executor = Executors.newFixedThreadPool(6);          ArrayList futures = new ArrayList();          long startTime = System.currentTimeMillis();         log.info(""Starting tasks"");         for(int i = 0; i < 100; i++) {             Future future = executor.submit(new Runnable() {                 @Override                 public void run() {                     WebDriver driver = new FirefoxDriver();                     driver.get(""http://blazedemo.com"");                     driver.findElement(By.cssSelector(""input.btn.btn-primary"")).click();                     driver.findElement(By.xpath(""//table[@class='table']/tbody/tr[4]/td[1]/input"")).click();                     driver.close();                 }             });             futures.add(future);         }          log.info(""Awaiting tasks"");         for (Future future : futures)             future.get();         log.info(""All tasks finished"");          long endTime = System.currentTimeMillis();         double duration = (endTime - startTime) / 1000;         log.info(String.format(""Tests took %f seconds"", duration));          executor.shutdownNow();     }  } ```  This simple program creates a thread pool of 6 threads and then attempts to execute 100 simple  WebDriver tasks in parallel, distributed between these threads. It takes ~4 minutes to complete when using FirefoxDriver (and i can obverse that at most two instances of Firefox are opened at the same time, most of the time it's only one instance). If i replace FirefoxDriver with ChromeDriver - this program takes only ~1 minute to complete (and i can observe all 6 browsers opened at the same time).  I don't think that this behaviour is expected, so it's probably a bug on FirefoxDriver side.  Here's the JVM thread dump in the middle of execution:  ``` ""pool-1-thread-6"" prio=10 tid=0x00007f205c303000 nid=0x68a0 waiting for monitor entry [0x00007f205031a000]    java.lang.Thread.State: BLOCKED (on object monitor)     at org.openqa.selenium.internal.SocketLock.lock(SocketLock.java:81)     - waiting to lock  (a java.lang.Object)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:80)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at seleniumdemo.Runner$1.run(Runner.java:29)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)  ""pool-1-thread-5"" prio=10 tid=0x00007f205c301800 nid=0x689f waiting for monitor entry [0x00007f205041b000]    java.lang.Thread.State: BLOCKED (on object monitor)     at org.openqa.selenium.internal.SocketLock.lock(SocketLock.java:81)     - waiting to lock  (a java.lang.Object)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:80)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at seleniumdemo.Runner$1.run(Runner.java:29)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)  ""pool-1-thread-4"" prio=10 tid=0x00007f205c300000 nid=0x689e waiting for monitor entry [0x00007f205051c000]    java.lang.Thread.State: BLOCKED (on object monitor)     at org.openqa.selenium.internal.SocketLock.lock(SocketLock.java:81)     - waiting to lock  (a java.lang.Object)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:80)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at seleniumdemo.Runner$1.run(Runner.java:29)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)  ""pool-1-thread-3"" prio=10 tid=0x00007f205c2fe000 nid=0x689d waiting for monitor entry [0x00007f205061d000]    java.lang.Thread.State: BLOCKED (on object monitor)     at org.openqa.selenium.internal.SocketLock.lock(SocketLock.java:81)     - waiting to lock  (a java.lang.Object)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:80)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at seleniumdemo.Runner$1.run(Runner.java:29)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)  ""Forwarding newSession on session null to remote"" prio=10 tid=0x00007f205c2fc800 nid=0x689c runnable [0x00007f205071d000]    java.lang.Thread.State: RUNNABLE     at java.net.SocketInputStream.socketRead0(Native Method)     at java.net.SocketInputStream.read(SocketInputStream.java:152)     at java.net.SocketInputStream.read(SocketInputStream.java:122)     at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)     at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)     at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)     at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)     at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)     at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)     at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)     at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)     at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at seleniumdemo.Runner$1.run(Runner.java:29)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)  ""pool-1-thread-1"" prio=10 tid=0x00007f205c2f2800 nid=0x689b waiting on condition [0x00007f205081f000]    java.lang.Thread.State: TIMED_WAITING (sleeping)     at java.lang.Thread.sleep(Native Method)     at org.openqa.selenium.internal.SocketLock.lock(SocketLock.java:91)     - locked  (a java.lang.Object)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:80)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at seleniumdemo.Runner$1.run(Runner.java:29)     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) ```  From the looks of it, most of the threads are locked in `NewProfileExtensionConnection.start()` that uses `SocketLock`.","closed","","dimp-gh","2016-06-07T10:34:45Z","2019-08-20T04:09:38Z"
"","2416","Element Not Found although element is there.","OS:   Windows 8.1, Windows 2008 R2 Selenium Version:   2.53.2 Browser:   Google Chrome  Browser Version:   51.0.2704.103  ## Expected Behavior -  I have a dialog when it closing new element is created in the list then I am doing search for a new created element  by xpath //div[text()='New Element Text'] In sometimes it gives me an error that element is not there but it is there. I have used different methods to select the element, by the wait, by the implicit wait, by changeToDefaultContent, by refreshing the page driver can't find the element but I see that element is there. If I execute the tests 5 times minimum once the test is failing. ## Actual Behavior -  In some times element is there but webdriver sais that element does not found. ## Steps to reproduce -  Open Dialog -> Insert Data to the Fields -> Click the Create Button -> Wait until button element will be removed from the dom tree -> check in the list new element is Created or not.","closed","","Gevornairi","2016-07-01T07:26:47Z","2019-08-20T00:09:39Z"
"","2320","Selenium unable to interact with Firefox getting - org.openqa.selenium.firefox.NotConnectedException","OS:   Windows 8.1  Selenium Version:   Selenium Webdriver 2.53.0  Browser:   Firefox -   Browser Version:   48.0b1 (64-bit)   Firefox is not launching throwing the following error  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ult theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files (x86)\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1465485880710,""updateDate"":1465485880710,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":21899,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1466434277169   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1466434277170   DeferredSave.extensions.json    DEBUG   Save changes 1466434277170   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466434277170   addons.xpi-utils    DEBUG   Updating add-on states 1466434277171   addons.xpi-utils    DEBUG   Writing add-ons list 1466434277172   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1466434277173   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1466434277173   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1466434277173   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.3b1 1466434277174   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1466434277174   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.0 1466434277187   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466434277188   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466434277188   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466434277188   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466434277188   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466434277188   addons.manager  DEBUG   Starting provider: GMPProvider 1466434277192   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466434277192   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466434277192   addons.manager  DEBUG   Starting provider: PluginProvider 1466434277193   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466434277193   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466434277193   addons.manager  DEBUG   Completed startup sequence 1466434278010   addons.manager  DEBUG   Starting provider:  1466434278010   addons.manager  DEBUG   Registering shutdown blocker for  1466434278010   addons.manager  DEBUG   Provider finished startup:  1466434278011   DeferredSave.extensions.json    DEBUG   Starting write 1466434278145   addons.repository   DEBUG   No addons.json found. 1466434278146   DeferredSave.addons.json    DEBUG   Save changes 1466434278148   DeferredSave.addons.json    DEBUG   Starting timer 1466434278163   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466434278163   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466434278163   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466434278167   DeferredSave.extensions.json    DEBUG   Write succeeded 1466434278167   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1466434278314   DeferredSave.addons.json    DEBUG   Starting write 1466434278321   DeferredSave.addons.json    DEBUG   Write succeeded [Child 4516] WARNING: pipe error: 109: file c:/builds/moz2_slave/m-beta-w32-0000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 343 [Child 4516] WARNING: pipe error: 109: file c:/builds/moz2_slave/m-beta-w32-0000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 343  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) at com.selenide.test.Selenide_Test.setUp(Selenide_Test.java:20) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) ```","closed","","selvavaithi","2016-06-20T14:53:43Z","2019-08-15T15:09:38Z"
"","2705","Calendar under canvas is not recognized","OS:   Windows 7 Enterprise Selenium Version:   2.53.0 Browser:   45.3.0 ## Expected Behavior -  Calendar properties has to be recognized by firebug. ## Actual Behavior -  Canvas is recognized by firebug(However calendar under canvas is not recognized by firebug). ## Steps to reproduce -  I'm working on MarkitEDM vendor tool.  I need to enter Maturity date(Calendar) , however this calendar is under canvas. I'm unable to recognize object properties inside canvas.   Please help me asap.","closed","","arkadiyala","2016-09-01T21:38:36Z","2019-08-19T18:09:46Z"
"","2696","Selblocks Selenium IDE ERROR","OS:   Windows 7 64bit Selenium Version:   Selenium IDE 2.9.1 Browser:   Firefox  Browser Version:   48.0.2 Version Firefox  Greetings.  ¬† I'm starting in the world of Selenium-IDE, install selblocks to use the ""If-Else-endIf""  but it gives the following error before starting:  ""There was an unexpected error. Msg: uncaught exception: undefined Url: chrome://global/content/globalOverlay.js, line: 100, column: 7""  I have Selenium IDE Selblocks 2.1.1  I search the forums and I have no answer, someone could help me?","closed","","blancoleandro13","2016-08-31T19:09:57Z","2019-08-19T18:09:50Z"
"","2194","Selenium webdriver script using java is not executing on IE11","OS:   Windows 7  Selenium Version:   WebDriver   Browser:   Internet Explorer Browser Version:   11.0.9 (64-bit)  Expected Behavior - IE should open and the script should run successfully  Actual Behavior - IE as well as the web application is opening but as soon as the script comes to '**driver.findElement()**' it throws this exception '**org.openqa.selenium.NoSuchElementException: Unable to find element with id == email (WARNING: The server did not provide any stacktrace information)**'  i have tried running the script using other locators such as xpath as well but with no luck. i also have the latest IEWebDriver installed. The same script is running fine on Firefox and Chrome","closed","","uddhavnaik","2016-06-02T05:11:29Z","2019-08-20T04:09:56Z"
"","2450","IE Driver getWindowHandles(); returning 1 handle if there are multiple window opened with IEDriver.","OS:   Windows 7 Selenium Version:  2.53.1 Browser:  Internet Explorer  Hi,  I have one issue with IEDriver. In my application when multiple window opened with IE driver and when i am trying to get all window handles, it is returning only 1 value in Set. I am using the latest version of IEDriver.exe file 64-bit. Latest Selenium Server and IE11 browser. Please help me in this as i am stuck to automate application.","closed","","sumitsharma15","2016-07-12T05:12:36Z","2019-08-18T06:09:52Z"
"","2107","question on the firefox webdriver","OS:   Windows 7 Selenium Version:    2.48.2 Browser:   Firefox Browser Version:   41.0.2  I enalbed firebug/netexport add-ons when playback the selenium script to visit a web page, for instance, www.google.com. The entries in the HAR dump from the firebug alway does not contain the first initial GET request to http://www.google.com. This is not consistant to the HAR dump by open a firefox browser directly to visit the page.Why?","closed","","wangzhih","2016-05-13T22:51:57Z","2019-08-20T06:09:37Z"
"","2750","Getting org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:","OS:   Windows 10-  32 bit Selenium Version:   3.0 beta 3 Browser:   Firefox 48.02  geckodriver (Tried both) geckodriver-v0.9.0-win64 geckodriver-v0.8.0-win32  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ""17RXAIn9R53I"",""location"":""winreg-app-global"",""version"":""15.4.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://vscore/content/ScriptFF.gif"",""icon64URL"":null,""defaultLocale"":{""name"":""McAfee ScriptScan for Firefox"",""description"":null,""creator"":""McAfee, Inc."",""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":true,""descriptor"":""C:\Program Files\Common Files\McAfee\SystemCore"",""installDate"":1473427007950,""updateDate"":1473427007950,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":5043261,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""1.5"",""maxVersion"":""9.9""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473427723884   DeferredSave.extensions.json    DEBUG   Save changes 1473427723884   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473427723884   addons.xpi-utils    DEBUG   Updating add-on states 1473427723888   addons.xpi-utils    DEBUG   Writing add-ons list 1473427723899   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473427723900   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473427723900   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473427723902   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473427723904   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473427723905   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473427723995   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473427723996   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473427723996   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473427723996   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473427723997   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473427723998   addons.manager  DEBUG   Starting provider: GMPProvider 1473427724018   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473427724019   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473427724019   addons.manager  DEBUG   Starting provider: PluginProvider 1473427724019   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473427724020   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473427724021   addons.manager  DEBUG   Completed startup sequence [GFX1]: Potential driver version mismatch ignored due to missing DLLs 0.0.0.0 and 0.0.0.0 Crash Annotation GraphicsCriticalError: |[0][GFX1]: D3D11 device creation failed: 0x887a0004 (t=25.9692) [GFX1]: D3D11 device creation failed: 0x887a0004 1473427728068   addons.manager  DEBUG   Starting provider:  1473427728068   addons.manager  DEBUG   Registering shutdown blocker for  1473427728069   addons.manager  DEBUG   Provider finished startup:  1473427728088   DeferredSave.extensions.json    DEBUG   Starting write 1473427728982   addons.repository   DEBUG   No addons.json found. 1473427729013   DeferredSave.addons.json    DEBUG   Save changes 1473427729072   DeferredSave.addons.json    DEBUG   Starting timer 1473427729598   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473427729598   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473427729598   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473427729918   DeferredSave.extensions.json    DEBUG   Write succeeded 1473427729919   DeferredSave.addons.json    DEBUG   Starting write 1473427731251   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:314) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:231) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:210) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:123) at newpackage.MyClass.main(MyClass.java:14) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  ""17RXAIn9R53I"",""location"":""winreg-app-global"",""version"":""15.4.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://vscore/content/ScriptFF.gif"",""icon64URL"":null,""defaultLocale"":{""name"":""McAfee ScriptScan for Firefox"",""description"":null,""creator"":""McAfee, Inc."",""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":true,""descriptor"":""C:\Program Files\Common Files\McAfee\SystemCore"",""installDate"":1473427007950,""updateDate"":1473427007950,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":5043261,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""1.5"",""maxVersion"":""9.9""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473427723884   DeferredSave.extensions.json    DEBUG   Save changes 1473427723884   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473427723884   addons.xpi-utils    DEBUG   Updating add-on states 1473427723888   addons.xpi-utils    DEBUG   Writing add-ons list 1473427723899   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473427723900   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473427723900   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473427723902   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473427723904   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473427723905   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473427723995   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473427723996   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473427723996   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473427723996   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473427723997   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473427723998   addons.manager  DEBUG   Starting provider: GMPProvider 1473427724018   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473427724019   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473427724019   addons.manager  DEBUG   Starting provider: PluginProvider 1473427724019   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473427724020   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473427724021   addons.manager  DEBUG   Completed startup sequence [GFX1]: Potential driver version mismatch ignored due to missing DLLs 0.0.0.0 and 0.0.0.0 Crash Annotation GraphicsCriticalError: |[0][GFX1]: D3D11 device creation failed: 0x887a0004 (t=25.9692) [GFX1]: D3D11 device creation failed: 0x887a0004 1473427728068   addons.manager  DEBUG   Starting provider:  1473427728068   addons.manager  DEBUG   Registering shutdown blocker for  1473427728069   addons.manager  DEBUG   Provider finished startup:  1473427728088   DeferredSave.extensions.json    DEBUG   Starting write 1473427728982   addons.repository   DEBUG   No addons.json found. 1473427729013   DeferredSave.addons.json    DEBUG   Save changes 1473427729072   DeferredSave.addons.json    DEBUG   Starting timer 1473427729598   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473427729598   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473427729598   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473427729918   DeferredSave.extensions.json    DEBUG   Write succeeded 1473427729919   DeferredSave.addons.json    DEBUG   Starting write 1473427731251   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: 'unknown', revision: 'c7b525d', time: '2016-09-01 14:52:30 -0700' System info: host: 'INBNBHPC01876', ip: '10.10.241.33', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_66' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:314)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:231)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:210)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:123)     at newpackage.MyClass.main(MyClass.java:14) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ""17RXAIn9R53I"",""location"":""winreg-app-global"",""version"":""15.4.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://vscore/content/ScriptFF.gif"",""icon64URL"":null,""defaultLocale"":{""name"":""McAfee ScriptScan for Firefox"",""description"":null,""creator"":""McAfee, Inc."",""homepageURL"":null},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":true,""descriptor"":""C:\Program Files\Common Files\McAfee\SystemCore"",""installDate"":1473427007950,""updateDate"":1473427007950,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":5043261,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""1.5"",""maxVersion"":""9.9""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473427723884   DeferredSave.extensions.json    DEBUG   Save changes 1473427723884   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473427723884   addons.xpi-utils    DEBUG   Updating add-on states 1473427723888   addons.xpi-utils    DEBUG   Writing add-ons list 1473427723899   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473427723900   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473427723900   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473427723902   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473427723904   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473427723905   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473427723995   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473427723996   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473427723996   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473427723996   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473427723997   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473427723998   addons.manager  DEBUG   Starting provider: GMPProvider 1473427724018   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473427724019   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473427724019   addons.manager  DEBUG   Starting provider: PluginProvider 1473427724019   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473427724020   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473427724021   addons.manager  DEBUG   Completed startup sequence [GFX1]: Potential driver version mismatch ignored due to missing DLLs 0.0.0.0 and 0.0.0.0 Crash Annotation GraphicsCriticalError: |[0][GFX1]: D3D11 device creation failed: 0x887a0004 (t=25.9692) [GFX1]: D3D11 device creation failed: 0x887a0004 1473427728068   addons.manager  DEBUG   Starting provider:  1473427728068   addons.manager  DEBUG   Registering shutdown blocker for  1473427728069   addons.manager  DEBUG   Provider finished startup:  1473427728088   DeferredSave.extensions.json    DEBUG   Starting write 1473427728982   addons.repository   DEBUG   No addons.json found. 1473427729013   DeferredSave.addons.json    DEBUG   Save changes 1473427729072   DeferredSave.addons.json    DEBUG   Starting timer 1473427729598   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473427729598   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473427729598   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473427729918   DeferredSave.extensions.json    DEBUG   Write succeeded 1473427729919   DeferredSave.addons.json    DEBUG   Starting write 1473427731251   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 8 more ```","closed","","jagpreet08","2016-09-09T14:04:47Z","2019-08-19T14:09:50Z"
"","2762","URL is not getting entered into the Firefox Browser","OS:   Windows 10 - 32 bit  Selenium Version:   3.0.0 beta 3 Browser:   Firefox 48.02 Eclipse Luna 32 bit package newpackage;  script - import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class MyClass {  ``` public static void main(String[] args) {     // declaration and instantiation of objects/variables     System.setProperty(""webdriver.firefox.marionette"",""D:\\Selenium\\geckodriver.exe"");     //System.setProperty(""webdriver.gecko.driver"",""D:\\Selenium\\geckodriver.exe"");       WebDriver driver = new FirefoxDriver();       String baseUrl = ""http://newtours.demoaut.com"";     String expectedTitle = ""Welcome: Mercury Tours"";     String actualTitle = """";      // launch Firefox and direct it to the Base URL     driver.get(baseUrl);      // get the actual value of the title     actualTitle = driver.getTitle();      /*      * compare the actual title of the page witht the expected one and print      * the result as ""Passed"" or ""Failed""      */     if (actualTitle.contentEquals(expectedTitle)){         System.out.println(""Test Passed!"");     } else {         System.out.println(""Test Failed"");     }      //close Firefox     driver.close();      // exit the program explicitly     System.exit(0); } ```  }  Error:  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: les"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""1.5"",""maxVersion"":""9.9""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473666039678   DeferredSave.extensions.json    DEBUG   Save changes 1473666039678   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473666039678   addons.xpi-utils    DEBUG   Updating add-on states 1473666039686   addons.xpi-utils    DEBUG   Writing add-ons list 1473666039699   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473666039700   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473666039700   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473666039701   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473666039702   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473666039704   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473666039738   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473666039738   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473666039739   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473666039739   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473666039739   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473666039740   addons.manager  DEBUG   Starting provider: GMPProvider 1473666039754   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473666039755   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473666039755   addons.manager  DEBUG   Starting provider: PluginProvider 1473666039755   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473666039756   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473666039756   addons.manager  DEBUG   Completed startup sequence [GFX1]: Potential driver version mismatch ignored due to missing DLLs 0.0.0.0 and 0.0.0.0 Crash Annotation GraphicsCriticalError: |[0][GFX1]: D3D11 device creation failed: 0x887a0004 (t=3.31775) [GFX1]: D3D11 device creation failed: 0x887a0004 1473666041615   addons.manager  DEBUG   Starting provider:  1473666041615   addons.manager  DEBUG   Registering shutdown blocker for  1473666041616   addons.manager  DEBUG   Provider finished startup:  1473666041870   DeferredSave.extensions.json    DEBUG   Write succeeded 1473666041871   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473666041871   DeferredSave.extensions.json    DEBUG   Starting timer 1473666041894   DeferredSave.extensions.json    DEBUG   Starting write 1473666041915   addons.repository   DEBUG   No addons.json found. 1473666041916   DeferredSave.addons.json    DEBUG   Save changes 1473666041922   DeferredSave.addons.json    DEBUG   Starting timer 1473666042168   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473666042168   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473666042169   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473666042174   DeferredSave.addons.json    DEBUG   Starting write 1473666042196   DeferredSave.extensions.json    DEBUG   Write succeeded 1473666042265   DeferredSave.addons.json    DEBUG   Write succeeded Crash Annotation GraphicsCriticalError: |[C0][GFX1]: Potential driver version mismatch ignored due to missing DLLs 0.0.0.0 and 0.0.0.0 (t=4.09801) [GFX1]: Potential driver version mismatch ignored due to missing DLLs 0.0.0.0 and 0.0.0.0 [Child 3528] WARNING: pipe error: 109: file c:/builds/moz2_slave/m-rel-w32-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 343 [Child 3528] WARNING: pipe error: 109: file c:/builds/moz2_slave/m-rel-w32-00000000000000000000/build/src/ipc/chromium/src/chrome/common/ipc_channel_win.cc, line 343","closed","","jagpreet08","2016-09-12T07:45:34Z","2019-08-19T17:09:49Z"
"","2630","Selenium v3.0.0-beta2 Navigate().GoToUrl() do not work when I call that second time","OS:   Windows 10  Selenium Version:   v3.0.0-beta2 Browser:   Firefox 48.0.1  I use geckodriver.   string url1 = ""something1"", url2 = ""something2"";  var profile = new FirefoxProfile(); DesiredCapabilities capabilities = DesiredCapabilities.Firefox(); capabilities.SetCapability(""marionette"", true); FirefoxDriver driver = new FirefoxDriver(profile); driver.Navigate().GoToUrl(url1); driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(10)); driver.Navigate().GoToUrl(url2); driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(10));  ERROR: driver open url1, but do not open url2. When open driver first time driver.Navigate().GoToUrl() method working success but second time it doesn't work.","closed","","Efusoft","2016-08-19T12:54:53Z","2019-08-19T19:10:02Z"
"","2195","Selenium webdriver script using java is not executing on Edge","OS:   Windows 10 Selenium Version:   WebDriver Browser:   Edge Browser Version:   25+  Expected Behavior - Edge should open and the script should run successfully  Actual Behavior - Edge is opening and closing immediately and throws this exception '**org.openqa.selenium.NoSuchElementException: (UnknownError: The server did not provide any stacktrace information)**'  i have tried running the script using other locators such as xpath as well but with no luck. i also have the latest Edge webdriver installed. The same script is running fine on Firefox and Chrome","closed","","uddhavnaik","2016-06-02T05:35:39Z","2019-08-20T04:09:56Z"
"","2465","Firefox WebDriver fails randomly after upgrade to 2.53.1 on Travis CI","OS:   Travis CI running Ubuntu 12.04 Server  Selenium Version:   2.53.1  Browser:   Firefox  Browser Version:   31.0esr ## Expected Behavior -  Tests only fails when conditions specified by the tests are not met.  ## Actual Behavior -  Tests randomly fails. When running a test suite sometimes the driver dies in the middle of running tests and all following tests fails as well.   ![failing-tests](https://cloud.githubusercontent.com/assets/660405/16828965/2689ecf6-4995-11e6-8e26-ef888094a8b4.png) ## Steps to reproduce -  Setup headless testing on Travis CI for a project with about 10 long running tests. Do minor changes in the code to trigger new builds. Most of the builds will fail as described above.","closed","","musketyr","2016-07-14T05:34:57Z","2019-08-19T22:09:58Z"
"","2704","Selenium::WebDriver::Element#send_keys no longer works as expected","OS:   OSX/linux Selenium Version:   Head - 3.0.0.beta2.1 Browser:   Firefox Browser Version:   49 beta ## Expected Behavior -  Expect modifier keys to be released when passed in an array ## Actual Behavior -  Modifier keys are no longer released  ## Steps to reproduce -  Using the ruby bindings (selenium-webdriver gem)  ``` element.send_keys([:shift, 'a'], 'bcdef' ```  In previous (2.x) versions of selenium-webdriver with Firefox < 48 this would cause element to be sent the keys 'Abcdef'.  When used with the current head version and geckodriver/marionette it ends up sending ""A<null>BCDEF"" to the element.  This appears to be because the Webdriver spec has removed the previous requirement that a NULL being sent should be interpreted as releasing key modifiers.  This also prevents things like `element.send_keys([:ctrl, 'a'], :backspace, 'abcd') for selecting the current contents of a field and sending new content.   The NULL is currently inserted by selenium [here](https://github.com/SeleniumHQ/selenium/blob/master/rb/lib/selenium/webdriver/common/keys.rb#L114).  Splitting up the passed items into multiple send key requests may solve this issue, although the current webdriver spec for [Element Send Keys](https://www.w3.org/TR/webdriver/#element-send-keys) requires using set selection range to set the insertion caret which could break things the [:ctrl, 'a'] shown above.","closed","C-rb,","twalpole","2016-09-01T21:33:16Z","2019-08-17T14:09:56Z"
"","2436","Safari driver requires SELENIUM_SERVER_JAR to be set in the path env variables","OS:   OSX 10.11.5 Selenium Version:   2.53.5 Browser:   Safari  Browser Version:   9.1.1  ## Expected Behavior -  As per https://github.com/robotframework/Selenium2Library/pull/247 , https://github.com/SeleniumHQ/selenium/wiki/SafariDriver and SeleniumHQ/selenium-google-code-issue-archive#5352 i was expecting to be able to use safaridriver without the need to set the SELENIUM_SERVER_JAR variable.  ## Actual Behavior -  [ WARN ] Keyword 'Capture Page Screenshot' could not be run on failure: No browser is open 1.Login Page Should Have User and Password Required | FAIL | Parent suite setup failed: No executable path given, please add one to Environment Variable 'SELENIUM_SERVER_JAR'  Is this as expected?","closed","","VitoAlbano","2016-07-07T14:04:20Z","2019-08-19T23:09:53Z"
"","1882","Missing Package org.openqa.selenium.htmlunit in selenium-server-standalone-2.53.0","OS:  Selenium Version:  Browser: < Firefox > Browser Version:  ## Expected Behavior - ## Actual Behavior - Missing Package org.openqa.selenium.htmlunit in selenium-server-standalone-2.53.0 ## Steps to reproduce -  I tried to use HtmlUnitDriver class but it seems Package org.openqa.selenium.htmlunit is missing in Selenium 2.53.0 jar Although Package org.openqa.selenium.htmlunit is present in selenium-server-standalone-2.52.0","closed","","tanugandhi10","2016-03-25T20:28:59Z","2019-08-19T08:09:40Z"
"","2501","How to use selenium sending keys to this hideNameInput?","OS X:  10.11.6 (15G31)  Selenium Version:  python selenium (2.53.2)  Browser:  Firefox  **here is the elements,i want input something into the nameNoteId.**  ``` ÈÇÆÁÆ±/ÊâãÊú∫Âè∑/Â∏êÂè∑ ```  **here is the codes:**  ``` from selenium import webdriver from selenium.webdriver.common.keys import Keys  import time url = 'http://passport2.chaoxing.com/login?fid=1479&refer=http://i.mooc.chaoxing.com' # driver = webdriver.PhantomJS() driver = webdriver.Firefox() driver.get(url) time.sleep(1) elem = driver.find_element_by_id('passwordId') elem.send_keys('CNM') not_work_elem = driver.find_element_by_id('nameNoteId') not_work_elem.click() not_work_elem.send_keys('test')  time.sleep(10) driver.close() ```","closed","","Ru7z","2016-07-21T10:17:35Z","2019-08-19T22:09:45Z"
"","2599","""Open""ing URL with hash/anchor on same page causes timeout","Originally **https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/5165**  What steps will reproduce the problem? 1. ""Open"" a URL, e.g. http://en.wikipedia.org/wiki/Yiddish 2. ""Open"" the same URL but with an anchor/hash, e.g. http://en.wikipedia.org/wiki/Yiddish#20th_century  What is the expected output? What do you see instead? I would expect Selenium to open that URL, recognize that the page has moved/changed, and continue with the script. Instead, I see ""[error] Timed out after 30000ms.""  The example I've attached uses Wikipedia URLs, which is a bit contrived, but it demonstrates the problem I'm having with a Backbone.js application I'm testing that navigates using the hash, e.g.: - http://foo.com/#/login - http://foo.com/#/dashboard - http://foo.com/#/user/foo123  Selenium version: IDE 1.10.0 OS: Windows 7 Browser: Firefox Browser version: 18.0.2  IDE Workaround: Ok, thanks to you responses I finally found a solution.   In selenium IDE simply use the 'storeEval' command, for example :   Command = storeEval  Target = window.location.hash='events/5000/participants/7011'  PHP Workaround (using javascript): As a temp fix we just set the hash in JS  // PHP protected function navigateHash($hash_url) {    $this->getEval(""window.location = window.location.href.split('#')[0] + '#/' + '$hash_url';""); }","closed","C-ide,","dougmartin17","2016-08-10T17:09:46Z","2019-08-17T16:09:56Z"
"","2306","Most of the times, unable to Launch the Default Firefox Browser","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ice\FF"",""installDate"":1464547452789,""updateDate"":1464547452789,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":1877359,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""38.0a1"",""maxVersion"":""43.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1466191067502   DeferredSave.extensions.json    DEBUG   Save changes 1466191067502   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466191067502   addons.xpi-utils    DEBUG   Updating add-on states 1466191067503   addons.xpi-utils    DEBUG   Writing add-ons list 1466191067506   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions\firebug@software.joehewitt.com.xpi 1466191067507   addons.xpi  DEBUG   Calling bootstrap method startup on firebug@software.joehewitt.com version 2.0.17 1466191067525   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions\AdBlockerLavaSoftFF@lavasoft.com.xpi 1466191067526   addons.xpi  DEBUG   Calling bootstrap method startup on AdBlockerLavaSoftFF@lavasoft.com version 1.1.4 1466191067526   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions{e33788ea-0bb9-4502-9c77-bdc551afc8ab}.xpi 1466191067527   addons.xpi  DEBUG   Calling bootstrap method startup on {e33788ea-0bb9-4502-9c77-bdc551afc8ab} version 1.0.2.1 1466191067529   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466191067529   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466191067529   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466191067529   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466191067530   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466191067530   addons.manager  DEBUG   Starting provider: GMPProvider 1466191067537   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466191067537   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466191067537   addons.manager  DEBUG   Starting provider: PluginProvider 1466191067538   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466191067538   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466191067538   addons.manager  DEBUG   Completed startup sequence 1466191067760   DeferredSave.extensions.json    DEBUG   Starting write 1466191067998   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466191067999   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466191067999   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466191068001   DeferredSave.extensions.json    DEBUG   Write succeeded JavaScript error: chrome://fxdriver/content/server.js, line 61: uncaught exception: [object Object] JavaScript error: chrome://fxdriver/content/server.js, line 61: NS_ERROR_XPC_CI_RETURNED_FAILURE: Component returned failure code: 0x80570015 (NS_ERROR_XPC_CI_RETURNED_FAILURE) [nsIJSCID.createInstance] JavaScript error: chrome://adaware/content/js/https/ChannelReplacement.js, line 18: ReferenceError: Ci is not defined 1466191069240   addons.manager  DEBUG   Starting provider:  1466191069240   addons.manager  DEBUG   Registering shutdown blocker for  1466191069240   addons.manager  DEBUG   Provider finished startup:  JavaScript error: chrome://adaware/content/js/https/IOUtil.js, line 130: SyntaxError: missing ( after for JavaScript error: chrome://adaware/content/js/https/HTTPSRules.js, line 64: ReferenceError: Cc is not defined JavaScript error: chrome://adaware/content/js/https/Cookie.js, line 75: SyntaxError: missing ( after for JavaScript error: chrome://adaware/content/js/https/HTTPS.js, line 159: SyntaxError: missing ( after for  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) at Jun17.MaximiseResize.main(MaximiseResize.java:14) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  ice\FF"",""installDate"":1464547452789,""updateDate"":1464547452789,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":1877359,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""38.0a1"",""maxVersion"":""43.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1466191067502   DeferredSave.extensions.json    DEBUG   Save changes 1466191067502   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466191067502   addons.xpi-utils    DEBUG   Updating add-on states 1466191067503   addons.xpi-utils    DEBUG   Writing add-ons list 1466191067506   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions\firebug@software.joehewitt.com.xpi 1466191067507   addons.xpi  DEBUG   Calling bootstrap method startup on firebug@software.joehewitt.com version 2.0.17 1466191067525   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions\AdBlockerLavaSoftFF@lavasoft.com.xpi 1466191067526   addons.xpi  DEBUG   Calling bootstrap method startup on AdBlockerLavaSoftFF@lavasoft.com version 1.1.4 1466191067526   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions{e33788ea-0bb9-4502-9c77-bdc551afc8ab}.xpi 1466191067527   addons.xpi  DEBUG   Calling bootstrap method startup on {e33788ea-0bb9-4502-9c77-bdc551afc8ab} version 1.0.2.1 1466191067529   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466191067529   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466191067529   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466191067529   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466191067530   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466191067530   addons.manager  DEBUG   Starting provider: GMPProvider 1466191067537   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466191067537   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466191067537   addons.manager  DEBUG   Starting provider: PluginProvider 1466191067538   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466191067538   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466191067538   addons.manager  DEBUG   Completed startup sequence 1466191067760   DeferredSave.extensions.json    DEBUG   Starting write 1466191067998   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466191067999   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466191067999   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466191068001   DeferredSave.extensions.json    DEBUG   Write succeeded JavaScript error: chrome://fxdriver/content/server.js, line 61: uncaught exception: [object Object] JavaScript error: chrome://fxdriver/content/server.js, line 61: NS_ERROR_XPC_CI_RETURNED_FAILURE: Component returned failure code: 0x80570015 (NS_ERROR_XPC_CI_RETURNED_FAILURE) [nsIJSCID.createInstance] JavaScript error: chrome://adaware/content/js/https/ChannelReplacement.js, line 18: ReferenceError: Ci is not defined 1466191069240   addons.manager  DEBUG   Starting provider:  1466191069240   addons.manager  DEBUG   Registering shutdown blocker for  1466191069240   addons.manager  DEBUG   Provider finished startup:  JavaScript error: chrome://adaware/content/js/https/IOUtil.js, line 130: SyntaxError: missing ( after for JavaScript error: chrome://adaware/content/js/https/HTTPSRules.js, line 64: ReferenceError: Cc is not defined JavaScript error: chrome://adaware/content/js/https/Cookie.js, line 75: SyntaxError: missing ( after for JavaScript error: chrome://adaware/content/js/https/HTTPS.js, line 159: SyntaxError: missing ( after for  Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:06:42' System info: host: 'Chase-PC', ip: '192.168.1.103', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:124)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at Jun17.MaximiseResize.main(MaximiseResize.java:14) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ice\FF"",""installDate"":1464547452789,""updateDate"":1464547452789,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":1877359,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""38.0a1"",""maxVersion"":""43.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1466191067502   DeferredSave.extensions.json    DEBUG   Save changes 1466191067502   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466191067502   addons.xpi-utils    DEBUG   Updating add-on states 1466191067503   addons.xpi-utils    DEBUG   Writing add-ons list 1466191067506   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions\firebug@software.joehewitt.com.xpi 1466191067507   addons.xpi  DEBUG   Calling bootstrap method startup on firebug@software.joehewitt.com version 2.0.17 1466191067525   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions\AdBlockerLavaSoftFF@lavasoft.com.xpi 1466191067526   addons.xpi  DEBUG   Calling bootstrap method startup on AdBlockerLavaSoftFF@lavasoft.com version 1.1.4 1466191067526   addons.xpi  DEBUG   Registering manifest for C:\Users\Chase\AppData\Local\Temp\anonymous1240936652447425222webdriver-profile\extensions{e33788ea-0bb9-4502-9c77-bdc551afc8ab}.xpi 1466191067527   addons.xpi  DEBUG   Calling bootstrap method startup on {e33788ea-0bb9-4502-9c77-bdc551afc8ab} version 1.0.2.1 1466191067529   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466191067529   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466191067529   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466191067529   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466191067530   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466191067530   addons.manager  DEBUG   Starting provider: GMPProvider 1466191067537   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466191067537   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466191067537   addons.manager  DEBUG   Starting provider: PluginProvider 1466191067538   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466191067538   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466191067538   addons.manager  DEBUG   Completed startup sequence 1466191067760   DeferredSave.extensions.json    DEBUG   Starting write 1466191067998   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466191067999   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466191067999   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466191068001   DeferredSave.extensions.json    DEBUG   Write succeeded JavaScript error: chrome://fxdriver/content/server.js, line 61: uncaught exception: [object Object] JavaScript error: chrome://fxdriver/content/server.js, line 61: NS_ERROR_XPC_CI_RETURNED_FAILURE: Component returned failure code: 0x80570015 (NS_ERROR_XPC_CI_RETURNED_FAILURE) [nsIJSCID.createInstance] JavaScript error: chrome://adaware/content/js/https/ChannelReplacement.js, line 18: ReferenceError: Ci is not defined 1466191069240   addons.manager  DEBUG   Starting provider:  1466191069240   addons.manager  DEBUG   Registering shutdown blocker for  1466191069240   addons.manager  DEBUG   Provider finished startup:  JavaScript error: chrome://adaware/content/js/https/IOUtil.js, line 130: SyntaxError: missing ( after for JavaScript error: chrome://adaware/content/js/https/HTTPSRules.js, line 64: ReferenceError: Cc is not defined JavaScript error: chrome://adaware/content/js/https/Cookie.js, line 75: SyntaxError: missing ( after for JavaScript error: chrome://adaware/content/js/https/HTTPS.js, line 159: SyntaxError: missing ( after for  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) ... 7 more ```","closed","","chaserocks","2016-06-17T06:53:27Z","2019-08-20T02:09:42Z"
"","2308","i am getting below error while working with selenium server standalone 2.53.0 ,mozila firefox 47.0 and windows 8 -64 bit..please provide soluion.it will great help for me","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: \Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1466101976118,""updateDate"":1466101976118,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22006,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1466162425151   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1466162425156   DeferredSave.extensions.json    DEBUG   Save changes 1466162425156   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466162425156   addons.xpi-utils    DEBUG   Updating add-on states 1466162425160   addons.xpi-utils    DEBUG   Writing add-ons list 1466162425181   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1466162425183   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1466162425183   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1466162425185   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1466162425187   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1466162425189   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1466162425265   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466162425266   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466162425266   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466162425267   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466162425267   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466162425269   addons.manager  DEBUG   Starting provider: GMPProvider 1466162425288   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466162425289   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466162425289   addons.manager  DEBUG   Starting provider: PluginProvider 1466162425290   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466162425291   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466162425293   addons.manager  DEBUG   Completed startup sequence Crash Annotation GraphicsCriticalError: |[0][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6323) [GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU Crash Annotation GraphicsCriticalError: |[0][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6323) |[1][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6896) [GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU 1466162428413   addons.manager  DEBUG   Starting provider:  1466162428413   addons.manager  DEBUG   Registering shutdown blocker for  1466162428414   addons.manager  DEBUG   Provider finished startup:  1466162430069   DeferredSave.extensions.json    DEBUG   Write succeeded 1466162430070   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1466162430070   DeferredSave.extensions.json    DEBUG   Starting timer 1466162430094   DeferredSave.extensions.json    DEBUG   Starting write 1466162430105   addons.repository   DEBUG   No addons.json found. 1466162430107   DeferredSave.addons.json    DEBUG   Save changes 1466162430114   DeferredSave.addons.json    DEBUG   Starting timer 1466162430465   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466162430465   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466162430466   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466162430473   DeferredSave.addons.json    DEBUG   Starting write 1466162430633   DeferredSave.extensions.json    DEBUG   Write succeeded 1466162430839   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) at FirstScript.main(FirstScript.java:9) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  \Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1466101976118,""updateDate"":1466101976118,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22006,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1466162425151   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1466162425156   DeferredSave.extensions.json    DEBUG   Save changes 1466162425156   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466162425156   addons.xpi-utils    DEBUG   Updating add-on states 1466162425160   addons.xpi-utils    DEBUG   Writing add-ons list 1466162425181   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1466162425183   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1466162425183   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1466162425185   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1466162425187   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1466162425189   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1466162425265   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466162425266   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466162425266   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466162425267   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466162425267   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466162425269   addons.manager  DEBUG   Starting provider: GMPProvider 1466162425288   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466162425289   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466162425289   addons.manager  DEBUG   Starting provider: PluginProvider 1466162425290   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466162425291   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466162425293   addons.manager  DEBUG   Completed startup sequence Crash Annotation GraphicsCriticalError: |[0][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6323) [GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU Crash Annotation GraphicsCriticalError: |[0][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6323) |[1][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6896) [GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU 1466162428413   addons.manager  DEBUG   Starting provider:  1466162428413   addons.manager  DEBUG   Registering shutdown blocker for  1466162428414   addons.manager  DEBUG   Provider finished startup:  1466162430069   DeferredSave.extensions.json    DEBUG   Write succeeded 1466162430070   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1466162430070   DeferredSave.extensions.json    DEBUG   Starting timer 1466162430094   DeferredSave.extensions.json    DEBUG   Starting write 1466162430105   addons.repository   DEBUG   No addons.json found. 1466162430107   DeferredSave.addons.json    DEBUG   Save changes 1466162430114   DeferredSave.addons.json    DEBUG   Starting timer 1466162430465   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466162430465   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466162430466   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466162430473   DeferredSave.addons.json    DEBUG   Starting write 1466162430633   DeferredSave.extensions.json    DEBUG   Write succeeded 1466162430839   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'Dell', ip: '192.168.1.109', os.name: 'Windows 8', os.arch: 'amd64', os.version: '6.2', java.version: '1.8.0_91' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:124)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at FirstScript.main(FirstScript.java:9) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: \Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1466101976118,""updateDate"":1466101976118,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22006,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1466162425151   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1466162425156   DeferredSave.extensions.json    DEBUG   Save changes 1466162425156   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1466162425156   addons.xpi-utils    DEBUG   Updating add-on states 1466162425160   addons.xpi-utils    DEBUG   Writing add-ons list 1466162425181   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1466162425183   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1466162425183   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1466162425185   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1466162425187   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1466162425189   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1466162425265   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1466162425266   addons.manager  DEBUG   Provider finished startup: XPIProvider 1466162425266   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1466162425267   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1466162425267   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1466162425269   addons.manager  DEBUG   Starting provider: GMPProvider 1466162425288   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1466162425289   addons.manager  DEBUG   Provider finished startup: GMPProvider 1466162425289   addons.manager  DEBUG   Starting provider: PluginProvider 1466162425290   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1466162425291   addons.manager  DEBUG   Provider finished startup: PluginProvider 1466162425293   addons.manager  DEBUG   Completed startup sequence Crash Annotation GraphicsCriticalError: |[0][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6323) [GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU Crash Annotation GraphicsCriticalError: |[0][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6323) |[1][GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU (t=13.6896) [GFX1-]: PossiblyBrokenSurfaceSharing_UnexpectedAMDGPU 1466162428413   addons.manager  DEBUG   Starting provider:  1466162428413   addons.manager  DEBUG   Registering shutdown blocker for  1466162428414   addons.manager  DEBUG   Provider finished startup:  1466162430069   DeferredSave.extensions.json    DEBUG   Write succeeded 1466162430070   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1466162430070   DeferredSave.extensions.json    DEBUG   Starting timer 1466162430094   DeferredSave.extensions.json    DEBUG   Starting write 1466162430105   addons.repository   DEBUG   No addons.json found. 1466162430107   DeferredSave.addons.json    DEBUG   Save changes 1466162430114   DeferredSave.addons.json    DEBUG   Starting timer 1466162430465   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1466162430465   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1466162430466   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1466162430473   DeferredSave.addons.json    DEBUG   Starting write 1466162430633   DeferredSave.extensions.json    DEBUG   Write succeeded 1466162430839   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) ... 7 more ```","closed","","shubhangi5CTS","2016-06-17T11:58:54Z","2019-08-20T02:09:43Z"
"","1861","TestNg test cases are not working on firefox browser through selenium webdrive","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:122) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) at com.shotang.test.init.SetupBase.setLocalOrRemoteWebDriver(SetupBase.java:183) at com.shotang.test.init.SetupBase.baseEnvSetup(SetupBase.java:78) at com.shotang.test.init.SetupBase.environmentSetUp(SetupBase.java:51) at com.shotang.retailersFlow.RetailersFlowTest.envSetup(RetailersFlowTest.java:22) at com.shotang.retailersFlow.RetailersFlowTest.setUp(RetailersFlowTest.java:39) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564) at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213) at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138) at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107) at org.testng.TestRunner.privateRun(TestRunner.java:767) at org.testng.TestRunner.run(TestRunner.java:617) at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) at org.testng.SuiteRunner.run(SuiteRunner.java:240) at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) at org.testng.TestNG.run(TestNG.java:1057) at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:115) at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:207) at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:178) ```  org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe) on port 7055; process output follows:   Build info: version: '2.48.2', revision: '41bccdd', time: '2015-10-09 19:59:12' System info: host: 'Shotang', ip: '192.168.0.106', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_73' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:134)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at com.shotang.test.init.SetupBase.setLocalOrRemoteWebDriver(SetupBase.java:183)     at com.shotang.test.init.SetupBase.baseEnvSetup(SetupBase.java:78)     at com.shotang.test.init.SetupBase.environmentSetUp(SetupBase.java:51)     at com.shotang.retailersFlow.RetailersFlowTest.envSetup(RetailersFlowTest.java:22)     at com.shotang.retailersFlow.RetailersFlowTest.setUp(RetailersFlowTest.java:39)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)     at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)     at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)     at org.testng.TestRunner.privateRun(TestRunner.java:767)     at org.testng.TestRunner.run(TestRunner.java:617)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)     at org.testng.SuiteRunner.run(SuiteRunner.java:240)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)     at org.testng.TestNG.run(TestNG.java:1057)     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:115)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:207)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:178) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:122) ... 35 more ``` ## It should be run the test cases , same test cases are running on chrome browser. ## TestNg test cases are not working on firefox browser through selenium webdrive","closed","","SrikanthKaranam","2016-03-22T10:10:50Z","2019-08-19T21:09:58Z"
"","1847","Edge & Phantomjs can't run via server in 3.0-beta","Note: aa924a8 was the first commit since 2.53 where I could even start the remote server to run tests against.  Even after the commit, trying to run phantomjs:  ``` -> POST session    >>> http://127.0.0.1:4445/wd/hub/session | {""desiredCapabilities"":{""browserName"":""phantomjs"",""version"":"""",""platform"":""ANY"",""javascriptEnabled"":true,""cssSelectorsEnabled"":true,""takesScreenshot"":true,""nativeEvents"":false,""rotatable"":false}}  13:46:40.848 INFO - SessionCleaner initialized with insideBrowserTimeout 0 and clientGoneTimeout 1800000 polling every 180000 13:46:40.872 INFO - Executing: [new session: Capabilities [{rotatable=false, nativeEvents=false, browserName=phantomjs, takesScreenshot=true, javascriptEnabled=true, version=, platform=ANY, cssSelectorsEnabled=true}]]) 13:46:40.887 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: The best matching driver provider org.openqa.selenium.chrome.ChromeDriver can't create a new driver instance for Capabilities [{rotatable=false, nativeEvents=false, browserName=phantomjs, takesScreenshot=true, javascriptEnabled=true, version=, platform=ANY, cssSelectorsEnabled=true}] Build info: version: '3.0.0-beta1', revision: 'cc199ba', time: '2016-03-19 18:40:53' System info: host: 'titus-To-be-filled-by-O-E-M', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.19.0-32-generic', java.version: '1.8.0_74' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:192)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:79)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166) ```  This is essentially the same error for Edge:  ``` -> POST session    >>> http://127.0.0.1:4444/wd/hub/session | {""desiredCapabilities"":{""browserName"":""MicrosoftEdge"",""browserVersion"":""any"",""platformName"":""any"",""platformVersion"":""any"",""acceptSslCerts"":false,""takesScreenshot"":false,""takesElementScreenshot"":false,""pageLoadStrategy"":""normal"",""platform"":""WINDOWS""}}  12:05:39.927 INFO - SessionCleaner initialized with insideBrowserTimeout 0 and clientGoneTimeout 1800000 polling every 180000 12:05:39.974 INFO - Executing: [new session: Capabilities [{platform=WINDOWS, platformVersion=any, acceptSslCerts=false, browserVersion=any, platformName=any, browserName=MicrosoftEdge, takesElementScreenshot=false, takesScreenshot=false, pageLoadStrategy=normal}]]) 12:05:40.048 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: The best matching driver provider org.openqa.selenium.ie.InternetExplorerDriver can't create a new driver instance for Capabilities [{platform=WINDOWS, platformVersion=any, acceptSslCerts=false, browserVersion=any, platformName=any, browserName=MicrosoftEdge, takesElementScreenshot=false, takesScreenshot=false, pageLoadStrategy=normal}] Build info: version: '3.0.0-beta1', revision: '980fb83', time: '2016-03-19 19:00:02' System info: host: 'DESKTOP-GQAOG4L', ip: '10.0.2.15', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.7.0_79' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(Unknown Source)     at java.util.concurrent.FutureTask.get(Unknown Source) ```  Phantomjs & Edge work just fine running directly via Ruby","closed","","titusfortner","2016-03-19T19:16:51Z","2019-08-20T10:09:46Z"
"","2129","Minor cleanups for FirefoxDriver.java","Minor cleanups for FirefoxDriver.java. - Do not use System.out in production code. - Omit null check of marionette as it is redundant with the instanceof check.","closed","","joshbruning","2016-05-19T20:42:03Z","2016-05-20T17:42:45Z"
"","2478","Ruby Capabilities","Might split this up into multiple issues, but wanted to have a discussion with the Ruby community on this first: 1. Each Bridge class has duplicated code for creating capabilities that can be DRY'd up. 2. I'm not sure why Capabilities is name spaced under Remote, because we use them locally as well. 3. Ruby has a weird mix of how it handles capabilities. Some values are explicitly supported and are accessed by symbol, and some values are allowed by default and are accessed by strings, which leads to confusion. Perhaps we support these explicitly? 4. Ruby is supporting a number of different ChromeOption Capabilities that no longer exist 5. Some capabilities are allowed to be parameters when initializing the Bridge, and others are required to be passed in through the DesiredCapabilities object. One way or another, we should make this consistent 6. I also find it weird that we allow (some) values to be accessed by both `caps.foo` and `caps[:foo]` but there might not be a compelling reason to change that.","closed","C-rb,","titusfortner","2016-07-16T00:13:03Z","2019-08-14T15:09:44Z"
"","2144","Methods which could be static.","Methods which could be static.","closed","","asashour","2016-05-21T15:44:09Z","2016-05-22T06:48:17Z"
"","2229","Html unit driver is not working as expected.","Meta - OS:   Widows 7  Selenium Version:  -selenium-java-2.52.0   Browser:  anything  Browser Version:   Headless browser ## Expected Behavior -  It should run ## Actual Behavior -  Getting this exception-  I checked by seeing page source, its not loading next page at all.  `` - `  > org.openqa.selenium.NoSuchElementException: Returned node was not a DOM element > For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html > Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:03:33' > System info: host: 'IBM207-PC09G4SD', ip: '9.195.87.191', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_77' > Driver info: driver.version: HtmlUnitDriver >  > ``` > ``` ## Steps to reproduce -  `  ``` driver = new HtmlUnitDriver();  driver.get(""https://www.*********.com/home.html?product=testCard"");  String strPageTitle = driver.getTitle(); System.out.println(""Page title: - ""+strPageTitle);   WebElement nameInputField = driver.findElement(By.id(""card""));   nameInputField.sendKeys(""*************"");    driver.findElement(By.id(""go"")).click();  try{         //WebDriverWait wait = new WebDriverWait(driver, 40);         //WebElement tableElement = wait.until(ExpectedConditions.elementToBeClickable(By.className(""reportTable"")));         WebElement tableElement = driver.findElement(By.className(""reportTable""));         System.out.println(""taleElemen""+tableElement);         java.util.List rows = tableElement.findElements(By.tagName(""tr""));         for (WebElement row : rows) {             java.util.List cols = row.findElements(By.tagName(""td""));             for (WebElement col : cols) {                 testData.put(col.getText().split("":"")[0],col.getText().split("":"")[1]);             }                }           WebElement avlBalance = driver.findElement(By.xpath(""//td[.='Card Balance']/../td[last()]""));         testData.put(""Available Gift Card Balance"",avlBalance.getText());         //lstSting.add(avlBalance.getText());     }catch(Exception e){         System.out.println(e);     }` ```","closed","","SunilDangayach","2016-06-07T13:54:27Z","2019-08-20T03:09:37Z"
"","2708","Update index.js","Make TouchSequence public API in order to use functions in class TouchSequence. - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","badaldesai","2016-09-02T13:49:57Z","2016-09-23T18:16:36Z"
"","2117","Why are these prefs still being set in Firefox","Looking at the source code, I see here  https://github.com/SeleniumHQ/selenium/blob/f5b2ab52ca25b7b4e455de22fca60d3ee8844922/javascript/firefox-driver/webdriver.json#L43  these lines of code  ```     ""security.warn_entering_secure"": false,     ""security.warn_entering_secure.show_once"": false,     ""security.warn_entering_weak"": false,     ""security.warn_entering_weak.show_once"": false,     ""security.warn_leaving_secure"": false,     ""security.warn_leaving_secure.show_once"": false,     ""security.warn_submit_insecure"": false,     ""security.warn_viewing_mixed"": false,     ""security.warn_viewing_mixed.show_once"": false ```  These preferences seem to be causing some problems in a scenario that we have. I downloaded the Firefox source code and I cannot find these preferences anywhere in that source code. I think they should be removed.","closed","","dylanb","2016-05-18T01:07:15Z","2019-08-20T05:09:58Z"
"","2266","CurrentWindowHandle Exception Error","Language: .net Selenium: 2.53 Chrome: 51.0 Chromedriver: 2.22  Steps to reproduce: Open Chrome via Selenium. Open a new tab manually Close the first tab  Now, the selenium driver should not be able to get the window handle of the open tab. Because that one was opened manually, and the original one was closed.  If I run: var test = driver.CurrentWindowHandle;  It works fine. And doesn't trow an exception. Which is NOT correct.  Because if I run: var test1 = driver.WindowHandles; var test = driver.CurrentWindowHandle;  now the CurrentWindowHandle method will trow an exception: NoSuchWindowException: no such window:target window already closed.  With FF I always get: NoSuchWindowException: Window not found. No matter if I run CurrentWindowHandle directly, or if I use var test1 = driver.WindowHandles; upfront.","closed","","danwan","2016-06-11T12:55:39Z","2019-08-20T03:09:46Z"
"","1846","keys_to_typing handles list of Keys.","keys_to_typing behavior was regressed by an implementation change. This change reverts keys_to_typing to its former behavior.  That is, element.send_keys([Keys.ENTER]) should result in the ENTER key being pressed, not the unicode representation of ENTER defined in common/keys.py to be typed into a text field.  Fixes #1839","closed","","joshbruning","2016-03-18T21:21:41Z","2016-03-19T18:01:38Z"
"","1934","java.lang.AssertionError: org.openqa.selenium.NoSuchWindowException: Unable to find element on closed window (WARNING: The server did not provide any stacktrace information)","java.lang.AssertionError: org.openqa.selenium.NoSuchWindowException: Unable to find element on closed window (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 2 milliseconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'WS-IS-SBHOWMIK', ip: '10.0.102.75', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_66' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{browserAttachTimeout=0, enablePersistentHover=true, ie.forceCreateProcessApi=false, pageLoadStrategy=normal, ie.usePerProcessProxy=false, ignoreZoomSetting=false, handlesAlerts=true, version=11, platform=WINDOWS, nativeEvents=true, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=false, browserName=internet explorer, initialBrowserUrl=http://localhost:5182/, takesScreenshot=true, javascriptEnabled=true, ignoreProtectedModeSettings=true, enableElementCacheCleanup=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=dismiss}] Session ID: e6e17784-40cd-4ba5-94c2-fc1f2817251c **\* Element info: {Using=xpath, value=//a[@href='/content/JuicePlus/en/buy.html']}     at org.testng.Assert.fail(Assert.java:94)     at com.jp.us.pagefactory.USJPOrderPersonalPage.uspersnladdqty(USJPOrderPersonalPage.java:61)     at com.jp.testscripts.USJuicePlusOrderSuite.usjporderpersonalpage(USJuicePlusOrderSuite.java:59)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)     at org.testng.TestRunner.privateRun(TestRunner.java:767)     at org.testng.TestRunner.run(TestRunner.java:617)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)     at org.testng.SuiteRunner.run(SuiteRunner.java:240)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)     at org.testng.TestNG.run(TestNG.java:1057)     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)","closed","","Swapan1230","2016-04-06T19:17:34Z","2019-08-19T18:09:55Z"
"","2621","To add ""IsChecked"" property to checkbox objects","It's very strange that Selenium webdriver is still can't check if a checkbox is checked or not.  For now it works only if a checkbox has ""checked"" attribute.  But there is a big need to be able to check any checkbox, not dependently on ""checked"" attribute.  In JS it's very easy to do by checking ""checked"" property of an object.  Why it can't be implemented in Webdriver?   Property ""Selected"" doesn't work correctly if a checkbox doesn't have ""checked"" attribute.  So I want to have something like:  IWebelement  obj = driver.Findelement(By.id(""checkbox"")); bool m = obj.IsChecked;","closed","","koreyba","2016-08-17T14:42:56Z","2019-08-19T20:09:38Z"
"","2514","Consider publishing a point release for 2.53.x containing the changes from #2406","It would be useful for our tests in https://github.com/web-push-libs/web-push.","closed","","marco-c","2016-07-23T16:44:40Z","2019-08-19T20:09:56Z"
"","2797","WebDriverEventListener afterScript return value support","It would be nice if the afterScript event included the return value (if one is available) of the script execution.  It would aid in improving logging of actions performed by the browser.","closed","","andrew-sumner","2016-09-19T22:00:34Z","2019-08-19T16:09:54Z"
"","2694","Adding touch screen funtionality to ChromeDriver","It seems that ChromeDriver supports touch actions so I have added this functionality to be able to run this kind of actions in a browser with Selenium. This has come because I had to test hybrid apps with a touch screen laptop.","closed","D-chrome,","kdaimiel","2016-08-31T13:58:15Z","2016-10-03T14:44:12Z"
"","2017","[js] webdriver.attachToSession creates an object rather than a session instance","Issue: BUG This used to work in protractor with selenium-webdriver: 2.52.0 Issue spotted when trying to upgrade to selenium-webdriver: 2.53.1  To help with describing this issue, I logged the session in the webdriver constructor:  ```   constructor(session, executor, opt_flow) {     /** @private {!promise.Promise} */     this.session_ = promise.fulfilled(session);;     this.session_.then(function(mySession) {       console.log('session:', mySession);     }); ```  **Expected:**  Creating a session using `builder.build()` method: - calls create session - logging to console returns a session instance  log shown below of type Session:  ``` session Session {   id_: '8ff2e2ef-c8c3-4a02-9bc7-ab0e621e23bf',   caps_:     Capabilities {      'applicationCacheEnabled' => false,      'rotatable' => false,      'mobileEmulationEnabled' => false,      'chrome' => { chromedriverVersion: '2.21.371461 (633e689b520b25f3e264a2ede6b74ccc23cb636a)',      userDataDir: '/tmp/.com.google.Chrome.ymPpDp' },      'takesHeapSnapshot' => true,      'databaseEnabled' => false,      'handlesAlerts' => true,      'hasTouchScreen' => false,      'version' => '50.0.2661.86',      'platform' => 'LINUX',      'browserConnectionEnabled' => false,      'nativeEvents' => true,      'acceptSslCerts' => true,      'webdriver.remote.sessionid' => '8ff2e2ef-c8c3-4a02-9bc7-ab0e621e23bf',      'locationContextEnabled' => true,      'webStorageEnabled' => true,      'browserName' => 'chrome',      'takesScreenshot' => true,      'javascriptEnabled' => true,      'cssSelectorsEnabled' => true } } ```  **Actual with attachToSession:** - when using webdriver attachToSesssion, the returned session is just a simple object:  ``` session { applicationCacheEnabled: true,   rotatable: false,   handlesAlerts: true,   databaseEnabled: true,   version: '46.0',   platform: 'LINUX',   nativeEvents: false,   acceptSslCerts: true,   'webdriver.remote.sessionid': '4e335a81-aa3a-4a1f-9181-67537cc5fc33',   webStorageEnabled: true,   locationContextEnabled: true,   browserName: 'firefox',   takesScreenshot: true,   javascriptEnabled: true,   cssSelectorsEnabled: true } ```  Where this is being used: https://github.com/angular/protractor/blob/master/lib/driverProviders/attachSession.ts#L37","closed","","cnishina","2016-04-28T00:20:28Z","2019-08-20T07:09:48Z"
"","2631","Cannot run test.py on OSX with wires 10.0 selenium 3.0.0b2 FF 45","Issue on Mac OSX EL Capitan  gekodriver / wires = 10.0 selenium = 3.0.0b2 FF = 45  ``` (env) macbook:test dmorton$ python test.py  Traceback (most recent call last):   File ""test.py"", line 3, in      browser = webdriver.Firefox()   File ""/Users/dmorton/projects/spm/test/env/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/firefox/webdriver.py"", line 73, in __init__     keep_alive=True)   File ""/Users/dmorton/projects/spm/test/env/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/remote/webdriver.py"", line 90, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/Users/dmorton/projects/spm/test/env/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/remote/webdriver.py"", line 177, in start_session     response = self.execute(Command.NEW_SESSION, capabilities)   File ""/Users/dmorton/projects/spm/test/env/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/remote/webdriver.py"", line 236, in execute     self.error_handler.check_response(response)   File ""/Users/dmorton/projects/spm/test/env/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/remote/errorhandler.py"", line 192, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: entity not found  (env) macbook:test dmorton$ pip list pip (8.1.2) selenium (3.0.0b2) setuptools (25.2.0) wheel (0.29.0) (env) macbook:test dmorton$  ```  ``` from selenium import webdriver  browser = webdriver.Firefox() browser.get('http://seleniumhq.org/')  ```","closed","","uxdxdev","2016-08-19T14:53:05Z","2019-08-19T19:09:58Z"
"","1949","-","issue is invalid","closed","","artyomtrityak","2016-04-08T22:18:25Z","2019-08-20T08:09:58Z"
"","2064","I've found a setting to activate webdriver native events in IE11","Internet Options -> Security tab -> Custom Level (button) -> enable ""allow scripting of Microsoft Web Browser Control""  Now I don't need to disable native events with capabilities.setCapability(InternetExplorerDriver.NATIVE_EVENTS, false); to get it to click things at all.  nor do any custom configuration when invoking IE11 webdriver.  (the other IE11 configurations and windows system configurations of course still apply, I mean ""no capabilities of the driver"")  Please update the documentation with it","closed","","bobafetthotmail","2016-05-06T14:21:04Z","2019-08-20T06:09:54Z"
"","1854","webdriver/phantomjs/service.py  OS-level handle needs to be closed","in webdriver/phantomjs/service.py on line 45 `self._cookie_temp_file = tempfile.mkstemp()[1]` ^^ OS-level handle is ignored here  OS-level handle to an open file needs to be closed during  driver.quit() or it will throw Exception to Windows users   `WindowsError: [Error 32] The process cannot access the file because it is being used by another process:`  exception is raised  on line 68 in selenium\webdriver\phantomjs\service.py"", line 68, in send_remote_shutdown_command `os.remove(self._cookie_temp_file)`","closed","","palacinka","2016-03-21T16:06:43Z","2019-08-20T09:09:58Z"
"","2196","Misleading property name - Python","In the Python WebElement class there is a property call [parent](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/remote/webelement.py#L419). This property returns the WebDriver that was used to find this element. I feel this name is misleading as when I have an element and I call parent on it I'd expect it to return another element, wich is the parent of the element it was called on.  ``` html               Text!       ```  ``` py driver = webdriver.Chrome() child_element = driver.find_element_by_id('child') parent_element = driver.find_element_by_id('parent') parent = child_element.parent ```  In this case the value of parent will be equal to driver. My expectation would be that parent would be equal to parent_element  I'd create PR that adds a new property for getting the webelement parent but I can't decide on a proper name for it as parent is the only thing that makes sense to me.","closed","C-py,","remcowesterhoud","2016-06-02T09:08:18Z","2019-08-16T23:09:48Z"
"","1911","Python client :: PhantomJS cookies file","In the last Python client's release (2.53.1) I see such change: *\* create a temp file for cookies in phantomjs if not specified  What is the point? This file is never used. All cookies are stored in the memory. ## Meta -  OS: Linux Selenium Version: 2.53.1 Browser: PjantomJS Browser Version: 2.1.1 ## Expected Behavior -  Cookies are stored in the automatically created file ## Actual Behavior -  Cookies are stored only in the memory ## Steps to reproduce -  ```  from selenium.webdriver import PhantomJS  driver = PhantomJS()  cookies_file = filter(lambda _: _.startswith('--cookies-file='), driver.service.command_line_args())[0][15:]  driver.get('http://vk.com')  # cookies_file is empty  driver.get('http://google.com')  # cookies_file is still empty  driver.get('http://ya.ru')  # cookies_file is empty ```","closed","","jamb0ss","2016-04-03T15:45:32Z","2019-08-20T09:09:48Z"
"","2137","[js] until.alertIsPresent(): Workaround for GeckoDriver conversion error","In some occasions, Gecko driver [throws an error](https://travis-ci.org/fxbox/foxbox/jobs/131700352#L1482) while waiting on an alert to come (which eventually does). The error comes from [this particular line](https://dxr.mozilla.org/mozilla-beta/source/testing/marionette/driver.js#2708).   Without the workaround, here are the logs I get:  ``` 1463762217511   Marionette  TRACE   conn0 -> [0,132,""clickElement"",{""id"":""9a5bd452-d252-af4e-a358-9c44f119cabf""}] 1463762217520   Marionette  TRACE   conn0  [0,133,""getTextFromDialog"",{}] ************************* A coding exception was thrown and uncaught in a Task.  Full message: TypeError: can't convert null to object Full stack: GeckoDriver.prototype.getTextFromDialog@chrome://marionette/content/driver.js:2708:7 Dispatcher.prototype.execute/req","closed","C-nodejs,","JohanLorenzo","2016-05-20T16:50:27Z","2016-05-23T18:51:53Z"
"","1959","With PhantomJS cookies are always enabled, can't disable it","In PhantomJS cookies can be disabled like this:  `phantom.cookiesEnabled = false;`  (see: http://phantomjs.org/api/phantom/property/cookies-enabled.html)  But in Selenium this settings are ignored.  Is there any way to disable cookies? ## Meta -  OS: Linux Selenium Version: 2.53.1 Browser: PjantomJS Browser Version: 2.1.1 ## Expected Behavior -  Cookies can be disabled ## Actual Behavior -  Cookies cannot be disabled ## Steps to reproduce -  This PhantomJS script works just fine (first we set a cookie, then disable cookies at all, finally we don't see any cookies in the response from website):  ``` var page = require('webpage').create();  phantom.addCookie({     'name': 'testme',     'value': 'testme',     'domain': 'httpbin.org',     'path': '/' });  phantom.cookiesEnabled = false;  console.log('Cookies: ' + JSON.stringify(phantom.cookies)); console.log('cookiesEnabled: ' + JSON.stringify(phantom.cookiesEnabled));   page.open('http://httpbin.org/cookies', function (status) {     console.log(page.plainText);     phantom.exit(); });  ```  But the same trick doesn't work with Selenium/GhostDriver/PhantomJS. Cookies are always enabled.  Test:  ``` from json import dumps from selenium.webdriver import PhantomJS  driver = PhantomJS() driver.command_executor._commands['executePhantomScript'] = ('POST', '/session/$sessionId/phantom/execute') exec_script = lambda script: driver.execute('executePhantomScript', {'script': 'var page = this; ' + script, 'args': []})  cookie = {     'name': 'testme',     'value': 'testme',     'domain': 'httpbin.org',     'path': '/' }  exec_script('page.addCookie(%s)' % dumps(cookie)) exec_script('phantom.cookiesEnabled = false')  # check that everything is set print 'Cookies: ', str(exec_script('return page.cookies')['value']) print 'cookiesEnabled: ', exec_script('return phantom.cookiesEnabled')['value']  driver.get('http://httpbin.org/cookies')  # cookie will be there... print driver.page_source ```","closed","","jamb0ss","2016-04-11T21:47:41Z","2019-08-19T08:10:04Z"
"","2221","[js] Move Profile generation out of GeckoDriver path","In `selenium-webdriver/firefox/index.js` some variables are not given to GeckoDriver. The profile one removes the possibility to give a profile to Firefox. I propose to put these variables only for the old driver.  What do you think @jleyba ? - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohanLorenzo","2016-06-06T16:39:32Z","2016-06-06T21:12:46Z"
"","1849","Add an error for Proxy Server is refusing connections","if you attempt to launch firefox using selenium with a proxy that refuses connections there is no error returned so I cant catch it.  A work around is to check the value of the id=""errorTitleText"" however I really wish there was a way to catch it.  I am using the latest version of firefox, selenium and python.","closed","","mushi1996","2016-03-21T00:20:38Z","2019-08-20T10:09:45Z"
"","2099","selenium grid hub can't clean unavailable node","If one node is down,I find the hub has the node in its console list all the time even the node has been offline for one day.I think console list should  clean unavailable node,but the node still display in console page. maybe need to set some parameters while start the hub?","closed","","fengkingcheng","2016-05-13T03:57:58Z","2019-08-19T13:09:33Z"
"","2076","Warn about selenium being used in a botnet","I've recently had an issue where selenium on my dev machine would start acting like it's on a botnet:  ![image](https://cloud.githubusercontent.com/assets/3265649/15156138/4cb1536c-16ee-11e6-912e-a0f7006174b0.png)  Well, it was on a botnet and this happended because my 4444 port was open to the outside world.  I saw only [one other person](https://github.com/SeleniumHQ/docker-selenium/issues/147) with this issue, but I would not be surprised if this actually pretty common.  I could not find any warning or suggestion to protect the 4444 port. Maybe a warning is in order?","closed","","tomyam1","2016-05-10T17:39:06Z","2019-08-20T06:09:55Z"
"","1922","Error forwarding the new session Error forwarding the request Read timed out","I'm using selenium grid 2.53 to run my tests in parallel and sometimes I have this error:  > 06:45:14.729 [chrome #01-32] PID: 63969 > 06:45:14.729 [chrome #01-32] Specs: /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/mock-tests/tests/account/desktop/my-profile-page-update-profile-3-spec.js > 06:45:14.729 [chrome #01-32]  > 06:45:14.730 [chrome #01-32] Using the selenium server at http://10.216.1.49:4444/wd/hub > 06:45:14.730 [chrome #01-32]  > 06:45:14.730 [chrome #01-32] /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/error.js:26 > 06:45:14.730 [chrome #01-32]   constructor(opt_error) { > 06:45:14.730 [chrome #01-32]                          ^ > 06:45:14.730 [chrome #01-32] WebDriverError: Error forwarding the new session Error forwarding the request Read timed out > 06:45:14.730 [chrome #01-32]     at WebDriverError (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/error.js:26:26) > 06:45:14.730 [chrome #01-32]     at Object.checkLegacyResponse (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/error.js:580:13) > 06:45:14.730 [chrome #01-32]     at /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/webdriver.js:64:13 > 06:45:14.730 [chrome #01-32]     at Promise.invokeCallback_ (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/promise.js:1329:14) > 06:45:14.730 [chrome #01-32]     at TaskQueue.execute_ (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/promise.js:2790:14) > 06:45:14.730 [chrome #01-32]     at TaskQueue.executeNext_ (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/promise.js:2773:21) > 06:45:14.730 [chrome #01-32]     at /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/promise.js:2652:27 > 06:45:14.730 [chrome #01-32]     at /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/promise.js:639:7 > 06:45:14.730 [chrome #01-32]     at process._tickCallback (node.js:405:9) > 06:45:14.730 [chrome #01-32] From: Task: WebDriver.createSession() > 06:45:14.730 [chrome #01-32]     at acquireSession (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/webdriver.js:62:22) > 06:45:14.731 [chrome #01-32]     at Function.createSession (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/lib/webdriver.js:295:12) > 06:45:14.731 [chrome #01-32]     at Builder.build (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/selenium-webdriver/builder.js:458:24) > 06:45:14.731 [chrome #01-32]     at [object Object].DriverProvider.getNewDriver (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/protractor/built/driverProviders/driverProvider.js:42:27) > 06:45:14.731 [chrome #01-32]     at [object Object].Runner.createBrowser (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/protractor/built/runner.js:203:37) > 06:45:14.731 [chrome #01-32]     at /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/protractor/built/runner.js:293:21 > 06:45:14.731 [chrome #01-32]     at _fulfilled (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/q/q.js:834:54) > 06:45:14.731 [chrome #01-32]     at self.promiseDispatch.done (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/q/q.js:863:30) > 06:45:14.731 [chrome #01-32]     at Promise.promise.promiseDispatch (/var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/q/q.js:796:13) > 06:45:14.731 [chrome #01-32]     at /var/lib/go-agent/pipelines/FrontEnd-TVG4-Dev/workspace/tvg-tvg4-angular/tests/web-tests/node_modules/q/q.js:556:49 > 06:45:14.731  > 06:45:14.731 [launcher] Runner process exited unexpectedly with error code: 1 > 06:45:14.732 [launcher] 3 instance(s) of WebDriver still running  My file to start the HUB:  ExecStart=/bin/java -Xmx1g \             -Xms64m \             -Dvideo.storage=com.aimmac23.hub.videostorage.LocalFileVideoStore \             -Dvideo.path=/opt/selenium/screencast \             -cp \             /opt/selenium/selenium-server-standalone.jar \             org.openqa.grid.selenium.GridLauncher \             -role hub \             -DPOOL_MAX=512 \             -port 4444 -timeout 60 -browserTimeout 60  My file to start the NODE (I have 5 nodes):   ExecStart=/usr/bin/xvfb-run -a -s \            '-screen 1 1280x1024x24 -wr -fbdir /tmp/screen_1' \             /bin/java -Xmx512m \             -cp \             /opt/selenium/selenium-server-standalone.jar\             org.openqa.grid.selenium.GridLauncher \             -role node \             -Dwebdriver.chrome.driver=/opt/selenium/drivers/chromedriver \             -nodeConfig /etc/selenium/node.json \             -hubHost 10.216.1.49 \             -hubPort 4444 \             -port 5556  My node.config file:  {     ""ATTENTION"" : ""This file was generated by Chef. Do NOT modify this file by hand."",     ""capabilities"": [         {             ""browserName"": ""chrome"",             ""version"": ""49.0.2623.110-1"",             ""maxInstances"": 3,             ""seleniumProtocol"": ""WebDriver"",             ""platform"": ""LINUX"",             ""applicationName"": ""general""         },         {           ""browserName"": ""firefox"",           ""version"": ""38.6.0-1.el7.centos"",           ""maxInstances"": 3,           ""seleniumProtocol"": ""WebDriver"",           ""platform"": ""LINUX"",           ""applicationName"": ""general""         }     ],     ""configuration"": {         ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",         ""maxSession"": 3,         ""register"": true,         ""registerCycle"": 5000,         ""versions"": {           ""chromeDriver"": 2.21,           ""seleniumServer"": 2.53         }     } }  Can you help?   Thanks,","closed","C-grid,","guilhotarras","2016-04-05T14:20:46Z","2019-08-16T19:09:50Z"
"","2346","Crash on startup with Firefox 47.0","I'm trying to run Selenium via Codeception.  I'm running the latest version (2.53).   Selenium server gets installed and started fine, but once Firefox is opened, Firefox collapses.  ## Steps to reproduce -  run the most simple scenario using codeception, having the latest Firefox and Selenium WebDriver.   ## Meta -  ` Process:               firefox-bin [11467] Path:                  /Applications/Firefox.app/Contents/MacOS/firefox-bin Identifier:            org.mozilla.firefox Version:               47.0 (4716.6.4) Code Type:             X86-64 (Native) Parent Process:        java [7534] Responsible:           iTerm2 [7321] User ID:               501  Date/Time:             2016-06-22 17:09:34.654 +0200 OS Version:            Mac OS X 10.11.5 (15F34) Report Version:        11 Anonymous UUID:        8305B426-DDFF-B8B2-9235-F90D576E26D5  Sleep/Wake UUID:       AD3AE03E-C279-4736-AF6C-AF9B5679744C  Time Awake Since Boot: 170000 seconds Time Since Wake:       13000 seconds  System Integrity Protection: enabled  Crashed Thread:        6  Socket Thread  Exception Type:        EXC_BAD_ACCESS (SIGSEGV) Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000040  VM Regions Near 0x40: -->      __TEXT                 0000000100000000-0000000100004000 [   16K] r-x/rwx SM=COW  /Applications/Firefox.app/Contents/MacOS/firefox-bin  Thread 0:: Dispatch queue: com.apple.main-thread 0   XUL                             0x0000000104a947c2 0x101ab6000 + 50194370 1   ???                             0x0000000106c1b860 0 + 4408326240  Thread 1: 0   libsystem_kernel.dylib          0x00007fff9f1345e2 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff8cc07578 _pthread_wqthread + 1283 2   libsystem_pthread.dylib         0x00007fff8cc05341 start_wqthread + 13  Thread 2:: Dispatch queue: com.apple.libdispatch-manager 0   libsystem_kernel.dylib          0x00007fff9f134efa kevent_qos + 10 1   libdispatch.dylib               0x00007fff98b94165 _dispatch_mgr_invoke + 216 2   libdispatch.dylib               0x00007fff98b93dcd _dispatch_mgr_thread + 52  Thread 3: 0   libsystem_kernel.dylib          0x00007fff9f1345e2 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff8cc07578 _pthread_wqthread + 1283 2   libsystem_pthread.dylib         0x00007fff8cc05341 start_wqthread + 13  Thread 4: 0   libsystem_kernel.dylib          0x00007fff9f1345e2 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff8cc07578 _pthread_wqthread + 1283 2   libsystem_pthread.dylib         0x00007fff8cc05341 start_wqthread + 13  Thread 5:: Gecko_IOThread 0   libsystem_kernel.dylib          0x00007fff9f134eca kevent + 10 1   XUL                             0x0000000101e4317c 0x101ab6000 + 3723644  Thread 6 Crashed:: Socket Thread 0   XUL                             0x00000001034ef596 0x101ab6000 + 27497878  Thread 7:: JS Watchdog 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767  Thread 8:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 9:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 10:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 11:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 12:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 13:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 14:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 15:: JS Helper 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 16: 0   libsystem_kernel.dylib          0x00007fff9f12df72 mach_msg_trap + 10 1   libsystem_kernel.dylib          0x00007fff9f12d3b3 mach_msg + 55 2   XUL                             0x00000001048ebbed 0x101ab6000 + 48454637  Thread 17:: Hang Monitor 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 18: 0   libsystem_kernel.dylib          0x00007fff9f1345e2 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff8cc07578 _pthread_wqthread + 1283 2   libsystem_pthread.dylib         0x00007fff8cc05341 start_wqthread + 13  Thread 19:: Cache2 I/O 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 20:: Timer 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a12103 PR_WaitCondVar + 227  Thread 21: 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 22:: Cert Verify 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 23:: GMPThread 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 24:: mozStorage #1 0   libsystem_kernel.dylib          0x00007fff9f13591a write + 10 1   libnss3.dylib                   0x00000001018ff434 0x101800000 + 1045556  Thread 25:: IPDL Background 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 26:: DOM Worker 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 27:: com.apple.NSEventThread 0   libsystem_kernel.dylib          0x00007fff9f12df72 mach_msg_trap + 10 1   libsystem_kernel.dylib          0x00007fff9f12d3b3 mach_msg + 55 2   com.apple.CoreFoundation        0x00007fff93c8f1c4 __CFRunLoopServiceMachPort + 212 3   com.apple.CoreFoundation        0x00007fff93c8e68c __CFRunLoopRun + 1356 4   com.apple.CoreFoundation        0x00007fff93c8ded8 CFRunLoopRunSpecific + 296 5   com.apple.AppKit                0x00007fff8e4fcd95 _NSEventThread + 149 6   libsystem_pthread.dylib         0x00007fff8cc0799d _pthread_body + 131 7   libsystem_pthread.dylib         0x00007fff8cc0791a _pthread_start + 168 8   libsystem_pthread.dylib         0x00007fff8cc05351 thread_start + 13  Thread 28:: DOM Worker 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 29: 0   libsystem_kernel.dylib          0x00007fff9f12df72 mach_msg_trap + 10 1   libsystem_kernel.dylib          0x00007fff9f12d3b3 mach_msg + 55 2   XUL                             0x00000001048ebbed 0x101ab6000 + 48454637  Thread 30: 0   libsystem_kernel.dylib          0x00007fff9f12df72 mach_msg_trap + 10 1   libsystem_kernel.dylib          0x00007fff9f12d3b3 mach_msg + 55 2   XUL                             0x00000001048ebbed 0x101ab6000 + 48454637  Thread 31:: Proxy R~olution 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 32:: URL Classifier 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 33:: DNS Resolver #1 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767  Thread 34:: SSL Cert #1 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767  Thread 35:: DOM Worker 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 36: 0   libsystem_kernel.dylib          0x00007fff9f12df72 mach_msg_trap + 10 1   libsystem_kernel.dylib          0x00007fff9f12d3b3 mach_msg + 55 2   XUL                             0x00000001048ebbed 0x101ab6000 + 48454637  Thread 37:: HTML5 Parser 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 38:: Compositor 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   XUL                             0x0000000101e33548 0x101ab6000 + 3659080 3   ???                             0x8000000000000000 0 + 9223372036854775808  Thread 39:: ImageBridgeChild 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   XUL                             0x0000000101e33548 0x101ab6000 + 3659080 3   ???                             0x8000000000000000 0 + 9223372036854775808  Thread 40:: ImgDecoder #1 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 41:: ImgDecoder #2 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 42:: ImgDecoder #3 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 43:: ImageIO 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767 2   libnss3.dylib                   0x0000000101a1211d PR_WaitCondVar + 253  Thread 44:: CVDisplayLink 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc0875e _pthread_cond_wait + 821 2   com.apple.CoreVideo             0x00007fff8d0e30d8 CVDisplayLink::waitUntil(unsigned long long) + 232 3   com.apple.CoreVideo             0x00007fff8d0e2ed1 CVDisplayLink::runIOThread() + 511 4   com.apple.CoreVideo             0x00007fff8d0e29a9 startIOThread(void*) + 147 5   libsystem_pthread.dylib         0x00007fff8cc0799d _pthread_body + 131 6   libsystem_pthread.dylib         0x00007fff8cc0791a _pthread_start + 168 7   libsystem_pthread.dylib         0x00007fff8cc05351 thread_start + 13  Thread 45:: StreamTrans #25 0   libsystem_kernel.dylib          0x00007fff9f133db6 __psynch_cvwait + 10 1   libsystem_pthread.dylib         0x00007fff8cc08728 _pthread_cond_wait + 767  Thread 6 crashed with X86 Thread State (64-bit):   rax: 0x0000000000000000  rbx: 0x000070000021c690  rcx: 0x0000000000000000  rdx: 0x0000000000000000   rdi: 0x000000000000010d  rsi: 0x0000000000000020  rbp: 0x0000000100630a90  rsp: 0x000070000021c570    r8: 0x0000000042f468d8   r9: 0x000000000000000e  r10: 0x0000000000000003  r11: 0x00000000000000c0   r12: 0x0000000000000000  r13: 0x000070000021c660  r14: 0x000070000021c690  r15: 0x000000010bdf8b40   rip: 0x00000001034ef596  rfl: 0x0000000000010246  cr2: 0x0000000000000040  Logical CPU:     2 Error Code:      0x00000004 Trap Number:     14  Binary Images:        0x100000000 -        0x100003ff7 +firefox-bin (???)  /Applications/Firefox.app/Contents/MacOS/firefox-bin        0x100009000 -        0x100023ff7 +libmozglue.dylib (1)  /Applications/Firefox.app/Contents/MacOS/libmozglue.dylib        0x100700000 -        0x10070afff +liblgpllibs.dylib (1)  /Applications/Firefox.app/Contents/MacOS/liblgpllibs.dylib        0x10079a000 -        0x1007a1ff7 +libbrowsercomps.dylib (???)  /Applications/Firefox.app/Contents/Resources/browser/components/libbrowsercomps.dylib        0x101800000 -        0x101a7bfff +libnss3.dylib (1)  /Applications/Firefox.app/Contents/MacOS/libnss3.dylib        0x101ab6000 -        0x106627f47 +XUL (1)  /Applications/Firefox.app/Contents/MacOS/XUL        0x106dfe000 -        0x106dfefe7 +cl_kernels (???)  cl_kernels        0x109183000 -        0x1091bbff7 +libsoftokn3.dylib (1)  /Applications/Firefox.app/Contents/MacOS/libsoftokn3.dylib        0x1091c4000 -        0x1091e6fff +libnssdbm3.dylib (1)  /Applications/Firefox.app/Contents/MacOS/libnssdbm3.dylib        0x10a874000 -        0x10a8dffff +libfreebl3.dylib (1)  /Applications/Firefox.app/Contents/MacOS/libfreebl3.dylib        0x10c509000 -        0x10c563fff +libnssckbi.dylib (???)  /Applications/Firefox.app/Contents/MacOS/libnssckbi.dylib        0x11b000000 -        0x11b547ff7  com.apple.driver.AppleIntelBDWGraphicsGLDriver (10.14.66 - 10.1.4)  /System/Library/Extensions/AppleIntelBDWGraphicsGLDriver.bundle/Contents/MacOS/AppleIntelBDWGraphicsGLDriver     0x7fff696ce000 -     0x7fff6970525f  dyld (360.22)  /usr/lib/dyld     0x7fff88efe000 -     0x7fff8959dff7  com.apple.JavaScriptCore (11601 - 11601.6.13)  /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore     0x7fff8959e000 -     0x7fff895a9fff  libcsfde.dylib (517.50.1)  /usr/lib/libcsfde.dylib     0x7fff895ee000 -     0x7fff895eeff7  libkeymgr.dylib (28)  /usr/lib/system/libkeymgr.dylib     0x7fff89696000 -     0x7fff8969afff  com.apple.LoginUICore (3.2 - 3.2)  /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore     0x7fff8969b000 -     0x7fff8969dff7  com.apple.xpc.ServiceManagement (1.0 - 1)  /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement     0x7fff896ab000 -     0x7fff896c7ff7  libextension.dylib (78)  /usr/lib/libextension.dylib     0x7fff896e9000 -     0x7fff8980efff  com.apple.LaunchServices (728.12 - 728.12)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices     0x7fff8980f000 -     0x7fff89812ffb  libScreenReader.dylib (426.42)  /usr/lib/libScreenReader.dylib     0x7fff89813000 -     0x7fff8981efff  libGL.dylib (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib     0x7fff8984b000 -     0x7fff8984bfff  com.apple.ApplicationServices (48 - 48)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices     0x7fff8987c000 -     0x7fff898adff7  libtidy.A.dylib (15.17)  /usr/lib/libtidy.A.dylib     0x7fff8a182000 -     0x7fff8a30eff7  libGLProgrammability.dylib (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib     0x7fff8a377000 -     0x7fff8a399fff  com.apple.IconServices (68.1 - 68.1)  /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices     0x7fff8a39a000 -     0x7fff8a3c8ff7  com.apple.CoreServicesInternal (248.2 - 248.2)  /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal     0x7fff8a3c9000 -     0x7fff8a427fff  com.apple.CoreServices.OSServices (728.12 - 728.12)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices     0x7fff8a433000 -     0x7fff8a485fff  com.apple.ImageCaptureCore (7.0 - 7.0)  /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore     0x7fff8a486000 -     0x7fff8a9deff7  com.apple.MediaToolbox (1.0 - 1731.15.204)  /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox     0x7fff8a9df000 -     0x7fff8a9e0ffb  libremovefile.dylib (41)  /usr/lib/system/libremovefile.dylib     0x7fff8a9e1000 -     0x7fff8aa44fff  libAVFAudio.dylib (161.2)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib     0x7fff8aa45000 -     0x7fff8aa49fff  libcache.dylib (75)  /usr/lib/system/libcache.dylib     0x7fff8aa4a000 -     0x7fff8aa8fff3  libFontRegistry.dylib (155.2)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib     0x7fff8aa90000 -     0x7fff8aab7fff  com.apple.ChunkingLibrary (167 - 167)  /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary     0x7fff8aaba000 -     0x7fff8ab90ffb  com.apple.DiskImagesFramework (10.11.4 - 417.4)  /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages     0x7fff8ab91000 -     0x7fff8ab99fef  libsystem_platform.dylib (74.40.2)  /usr/lib/system/libsystem_platform.dylib     0x7fff8ac4c000 -     0x7fff8ac4ffff  libspindump.dylib (197.1)  /usr/lib/libspindump.dylib     0x7fff8ac50000 -     0x7fff8b172fff  com.apple.QuartzComposer (5.1 - 334)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer     0x7fff8b173000 -     0x7fff8b19cfff  libc++abi.dylib (125)  /usr/lib/libc++abi.dylib     0x7fff8b19d000 -     0x7fff8b1b4fff  libmarisa.dylib (4)  /usr/lib/libmarisa.dylib     0x7fff8b1ca000 -     0x7fff8b437fff  com.apple.imageKit (2.6 - 932)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit     0x7fff8b616000 -     0x7fff8b641ffb  libarchive.2.dylib (33.20.2)  /usr/lib/libarchive.2.dylib     0x7fff8b6ad000 -     0x7fff8b6c0fff  com.apple.CoreBluetooth (1.0 - 1)  /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth     0x7fff8b865000 -     0x7fff8b879fe3  libCGInterfaces.dylib (317.9)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib     0x7fff8b897000 -     0x7fff8b987fff  libJP2.dylib (1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib     0x7fff8b988000 -     0x7fff8b9aaff7  com.apple.Sharing (442.13.6 - 442.13.6)  /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing     0x7fff8ba1c000 -     0x7fff8ba32ff7  libLinearAlgebra.dylib (1162.2)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib     0x7fff8c9de000 -     0x7fff8ca96ff7  com.apple.CoreDuet (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet     0x7fff8cb1b000 -     0x7fff8cb26fff  com.apple.DirectoryService.Framework (10.11 - 194)  /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService     0x7fff8cba2000 -     0x7fff8cbf1ff7  com.apple.opencl (2.7.0 - 2.7.0)  /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL     0x7fff8cbf2000 -     0x7fff8cc00fff  com.apple.IntlPreferences (2.0 - 192)  /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences     0x7fff8cc01000 -     0x7fff8cc03fff  libCVMSPluginSupport.dylib (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib     0x7fff8cc04000 -     0x7fff8cc0dff7  libsystem_pthread.dylib (138.10.4)  /usr/lib/system/libsystem_pthread.dylib     0x7fff8cc0e000 -     0x7fff8cc0efff  com.apple.Carbon (154 - 157)  /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon     0x7fff8cc6d000 -     0x7fff8cc75fef  libcldcpuengine.dylib (2.7.3)  /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib     0x7fff8cc7e000 -     0x7fff8cc80ffb  libutil.dylib (43)  /usr/lib/libutil.dylib     0x7fff8cd11000 -     0x7fff8cd16fff  com.apple.MediaAccessibility (1.0 - 79)  /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility     0x7fff8cd29000 -     0x7fff8cd43ff3  liblzma.5.dylib (10)  /usr/lib/liblzma.5.dylib     0x7fff8cd44000 -     0x7fff8cd44fff  com.apple.CoreServices (728.12 - 728.12)  /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices     0x7fff8ce0c000 -     0x7fff8ce1aff7  libbz2.1.0.dylib (38)  /usr/lib/libbz2.1.0.dylib     0x7fff8ce22000 -     0x7fff8ce74fff  com.apple.AppleVAFramework (5.0.32 - 5.0.32)  /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA     0x7fff8ce88000 -     0x7fff8ce89ff7  libodfde.dylib (23)  /usr/lib/libodfde.dylib     0x7fff8ce8a000 -     0x7fff8ced8ff7  libstdc++.6.dylib (104.1)  /usr/lib/libstdc++.6.dylib     0x7fff8ced9000 -     0x7fff8ceddfff  libGIF.dylib (1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib     0x7fff8d0d6000 -     0x7fff8d0dafff  com.apple.CommonPanels (1.2.6 - 96)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels     0x7fff8d0db000 -     0x7fff8d10fff7  com.apple.CoreVideo (1.8 - 191.3)  /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo     0x7fff8d110000 -     0x7fff8d110ff7  liblaunch.dylib (765.50.8)  /usr/lib/system/liblaunch.dylib     0x7fff8d5b1000 -     0x7fff8d6bfff3  com.apple.desktopservices (1.10.3 - 1.10.3)  /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv     0x7fff8d6c8000 -     0x7fff8d96eff7  com.apple.CoreData (120 - 641.3)  /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData     0x7fff8d96f000 -     0x7fff8d9a0fff  com.apple.GSS (4.0 - 2.0)  /System/Library/Frameworks/GSS.framework/Versions/A/GSS     0x7fff8d9a1000 -     0x7fff8d9bafff  com.apple.openscripting (1.7.1 - 169.1)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting     0x7fff8d9d7000 -     0x7fff8db55fff  com.apple.UIFoundation (1.0 - 436.1)  /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation     0x7fff8db56000 -     0x7fff8dba1ff7  com.apple.CoreMediaIO (703.0 - 4791)  /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO     0x7fff8dba2000 -     0x7fff8dc46fff  com.apple.Bluetooth (4.4.5 - 4.4.5f3)  /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth     0x7fff8ddbe000 -     0x7fff8ddbefff  com.apple.quartzframework (1.5 - 21)  /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz     0x7fff8ddbf000 -     0x7fff8ddf7ff7  com.apple.RemoteViewServices (2.0 - 101)  /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices     0x7fff8df0d000 -     0x7fff8df10fff  com.apple.IOSurface (108.2.1 - 108.2.1)  /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface     0x7fff8df56000 -     0x7fff8df57fff  com.apple.TrustEvaluationAgent (2.0 - 25)  /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent     0x7fff8df86000 -     0x7fff8e132fff  com.apple.avfoundation (2.0 - 1046.9.11)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation     0x7fff8e170000 -     0x7fff8e31bffb  GLEngine (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLEngine.bundle/GLEngine     0x7fff8e34f000 -     0x7fff8e358ff3  libsystem_notify.dylib (150.40.1)  /usr/lib/system/libsystem_notify.dylib     0x7fff8e359000 -     0x7fff8e35cff7  com.apple.AppleSystemInfo (3.1.5 - 3.1.5)  /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo     0x7fff8e35d000 -     0x7fff8e35dfff  libOpenScriptingUtil.dylib (169.1)  /usr/lib/libOpenScriptingUtil.dylib     0x7fff8e35e000 -     0x7fff8ef87ff7  com.apple.AppKit (6.9 - 1404.47)  /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit     0x7fff8ef98000 -     0x7fff8efa4fff  com.apple.speech.synthesis.framework (5.4.12 - 5.4.12)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis     0x7fff8efa5000 -     0x7fff8efa6fff  libsystem_blocks.dylib (65)  /usr/lib/system/libsystem_blocks.dylib     0x7fff8efda000 -     0x7fff8f003ffb  libRIP.A.dylib (957)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib     0x7fff8f084000 -     0x7fff8f087ff7  libCoreFSCache.dylib (119.5)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib     0x7fff8f088000 -     0x7fff8f2a9ff7  com.apple.CoreImage (11.4.0 - 366.4.19)  /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage     0x7fff8f2aa000 -     0x7fff8f2cefff  libJPEG.dylib (1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib     0x7fff8f2cf000 -     0x7fff8f2f1ff7  com.apple.framework.familycontrols (4.1 - 410)  /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls     0x7fff8f2f2000 -     0x7fff8f2f4fff  libCGXType.A.dylib (957)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib     0x7fff8f2f5000 -     0x7fff8f38bfff  com.apple.ColorSync (4.9.0 - 4.9.0)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync     0x7fff8f38c000 -     0x7fff8f390fff  libpam.2.dylib (20)  /usr/lib/libpam.2.dylib     0x7fff8f3be000 -     0x7fff8f3d5ff7  libsystem_asl.dylib (323.50.1)  /usr/lib/system/libsystem_asl.dylib     0x7fff8f3d6000 -     0x7fff8f486fff  com.apple.backup.framework (1.7.4 - 1.7.4)  /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup     0x7fff8f487000 -     0x7fff8f48dfff  com.apple.IOAccelerator (205.10 - 205.10)  /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator     0x7fff8f4a6000 -     0x7fff8f4a7fff  liblangid.dylib (122)  /usr/lib/liblangid.dylib     0x7fff8f4a8000 -     0x7fff8f4bcfff  com.apple.CoreDuetDaemonProtocol (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol     0x7fff8f4bd000 -     0x7fff8f8ebfff  com.apple.vision.FaceCore (3.3.1 - 3.3.1)  /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore     0x7fff8f8ed000 -     0x7fff8f8edfff  com.apple.Cocoa (6.11 - 22)  /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa     0x7fff8f8ee000 -     0x7fff8f943fff  com.apple.AE (701 - 701)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE     0x7fff8f951000 -     0x7fff8f9affff  com.apple.SystemConfiguration (1.14 - 1.14)  /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration     0x7fff8f9b0000 -     0x7fff8f9dcfff  com.apple.framework.SystemAdministration (1.0 - 1.0)  /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration     0x7fff8fa47000 -     0x7fff8fcceff3  com.apple.CFNetwork (760.5.1 - 760.5.1)  /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork     0x7fff8fea1000 -     0x7fff8fea3ff7  com.apple.ExceptionHandling (1.5 - 11)  /System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling     0x7fff8fea4000 -     0x7fff90199fff  com.apple.HIToolbox (2.1.1 - 807.2)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox     0x7fff9019a000 -     0x7fff9019cfff  com.apple.CoreDuetDebugLogging (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging     0x7fff902c5000 -     0x7fff903a5ff7  unorm8_rgba.dylib (2.7.3)  /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib     0x7fff903c0000 -     0x7fff9060cff7  com.apple.AddressBook.framework (9.0 - 1679.10)  /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook     0x7fff9067c000 -     0x7fff9078bfe7  libvDSP.dylib (563.5)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib     0x7fff9078c000 -     0x7fff9078dffb  libSystem.B.dylib (1226.10.1)  /usr/lib/libSystem.B.dylib     0x7fff9078e000 -     0x7fff9079efff  libbsm.0.dylib (34)  /usr/lib/libbsm.0.dylib     0x7fff907e3000 -     0x7fff9089cff7  com.apple.cloudkit.CloudKit (482.29 - 482.29)  /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit     0x7fff9089d000 -     0x7fff908b7fff  com.apple.Kerberos (3.0 - 1)  /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos     0x7fff908b8000 -     0x7fff9094dfff  com.apple.ink.framework (10.9 - 214)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink     0x7fff90951000 -     0x7fff9098bfff  com.apple.QD (3.12 - 302)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD     0x7fff90a0a000 -     0x7fff90a15ff7  libcommonCrypto.dylib (60075.50.1)  /usr/lib/system/libcommonCrypto.dylib     0x7fff90edc000 -     0x7fff90ee5ff7  com.apple.CommonAuth (4.0 - 2.0)  /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth     0x7fff90f05000 -     0x7fff90f07ff7  libsystem_configuration.dylib (802.40.13)  /usr/lib/system/libsystem_configuration.dylib     0x7fff90f08000 -     0x7fff91115fff  libicucore.A.dylib (551.51.3)  /usr/lib/libicucore.A.dylib     0x7fff91116000 -     0x7fff9111efff  libMatch.1.dylib (27)  /usr/lib/libMatch.1.dylib     0x7fff911c2000 -     0x7fff91203ff7  libGLU.dylib (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib     0x7fff91b39000 -     0x7fff91b3ffff  com.apple.XPCService (2.0 - 1)  /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService     0x7fff91be0000 -     0x7fff91c4eff7  com.apple.ApplicationServices.ATS (377 - 394.4)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS     0x7fff91cd9000 -     0x7fff9203bf3f  libobjc.A.dylib (680)  /usr/lib/libobjc.A.dylib     0x7fff92094000 -     0x7fff9209dff7  com.apple.DisplayServicesFW (3.0 - 378)  /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices     0x7fff920eb000 -     0x7fff9217afff  com.apple.CorePDF (4.0 - 4)  /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF     0x7fff9217b000 -     0x7fff92266ff7  com.apple.QuickLookUIFramework (5.0 - 696.7)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI     0x7fff9236f000 -     0x7fff92375ff7  com.apple.speech.recognition.framework (5.1.1 - 5.1.1)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition     0x7fff92376000 -     0x7fff9238ffff  com.apple.CFOpenDirectory (10.11 - 194)  /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory     0x7fff92390000 -     0x7fff923d6ff7  libauto.dylib (186)  /usr/lib/libauto.dylib     0x7fff9249d000 -     0x7fff924b8fff  com.apple.aps.framework (4.0 - 4.0)  /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService     0x7fff924b9000 -     0x7fff924bbfff  com.apple.EFILogin (2.0 - 2)  /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin     0x7fff92919000 -     0x7fff93b67fe7  com.apple.CoreGraphics (1.600.0 - 957)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics     0x7fff93b94000 -     0x7fff93bbdfff  com.apple.ProtectedCloudStorage (1.0 - 1)  /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage     0x7fff93bff000 -     0x7fff93c04fff  com.apple.TCC (1.0 - 1)  /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC     0x7fff93c05000 -     0x7fff9407bfff  com.apple.CoreFoundation (6.9 - 1258.1)  /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation     0x7fff9407c000 -     0x7fff94084fff  com.apple.CoreServices.FSEvents (1223.10.1 - 1223.10.1)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents     0x7fff9408b000 -     0x7fff940beff7  com.apple.MediaKit (16 - 809)  /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit     0x7fff94125000 -     0x7fff941b4ff7  libCoreStorage.dylib (517.50.1)  /usr/lib/libCoreStorage.dylib     0x7fff941b5000 -     0x7fff941b5fff  com.apple.audio.units.AudioUnit (1.13 - 1.13)  /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit     0x7fff942d9000 -     0x7fff94406ff3  com.apple.CoreText (352.0 - 494.11)  /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText     0x7fff94469000 -     0x7fff94474fff  com.apple.AppSandbox (4.0 - 261.40.2)  /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox     0x7fff945fe000 -     0x7fff9468bdd7  com.apple.AppleJPEG (1.0 - 1)  /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG     0x7fff9468c000 -     0x7fff946caff7  libGLImage.dylib (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib     0x7fff946cb000 -     0x7fff946d7fff  com.apple.HelpData (2.1.4 - 90)  /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData     0x7fff946d8000 -     0x7fff946d8fff  com.apple.Accelerate (1.10 - Accelerate 1.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate     0x7fff94718000 -     0x7fff947a0fff  com.apple.CoreSymbolication (3.1 - 58048.1)  /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication     0x7fff947a6000 -     0x7fff947b5ffb  com.apple.LangAnalysis (1.7.0 - 1.7.0)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis     0x7fff947bf000 -     0x7fff947d7fef  libcompression.dylib (28)  /usr/lib/libcompression.dylib     0x7fff94807000 -     0x7fff94859fff  com.apple.CloudDocs (1.0 - 383.13)  /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs     0x7fff95948000 -     0x7fff9595bfff  com.apple.contacts.ContactsPersistence (1.0 - 2137.1)  /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence     0x7fff9595c000 -     0x7fff95977ff7  libCRFSuite.dylib (34)  /usr/lib/libCRFSuite.dylib     0x7fff95978000 -     0x7fff9597aff7  libquarantine.dylib (80)  /usr/lib/system/libquarantine.dylib     0x7fff9597b000 -     0x7fff9597effb  libdyld.dylib (360.22)  /usr/lib/system/libdyld.dylib     0x7fff959fd000 -     0x7fff95a4efff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0)  /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio     0x7fff95a4f000 -     0x7fff95a5dfff  com.apple.ToneLibrary (1.0 - 1)  /System/Library/PrivateFrameworks/ToneLibrary.framework/Versions/A/ToneLibrary     0x7fff95a5e000 -     0x7fff95a6fff7  libz.1.dylib (61.20.1)  /usr/lib/libz.1.dylib     0x7fff95a70000 -     0x7fff95a9eff7  libsandbox.1.dylib (460.50.4)  /usr/lib/libsandbox.1.dylib     0x7fff95b76000 -     0x7fff95b8dff7  libsystem_coretls.dylib (83.40.5)  /usr/lib/system/libsystem_coretls.dylib     0x7fff95f21000 -     0x7fff95f33fff  libsasl2.2.dylib (209)  /usr/lib/libsasl2.2.dylib     0x7fff95f34000 -     0x7fff95f64ff3  com.apple.CoreAVCHD (5.8.0 - 5800.4.2)  /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD     0x7fff95f6e000 -     0x7fff9606aff7  libFontParser.dylib (158.6)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib     0x7fff9606b000 -     0x7fff9606dff7  com.apple.SafariServices.framework (11601 - 11601.6.17)  /System/Library/PrivateFrameworks/SafariServices.framework/Versions/A/SafariServices     0x7fff9606e000 -     0x7fff96079ff7  libChineseTokenizer.dylib (16)  /usr/lib/libChineseTokenizer.dylib     0x7fff9607a000 -     0x7fff9607cff7  com.apple.securityhi (9.0 - 55006)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI     0x7fff9607d000 -     0x7fff961c7ff7  com.apple.coreui (2.1 - 366.1)  /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI     0x7fff96a5e000 -     0x7fff96b05fff  com.apple.LanguageModeling (1.0 - 1)  /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling     0x7fff96b06000 -     0x7fff96b52ff7  com.apple.corelocation (1486.17 - 1615.38)  /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation     0x7fff96b53000 -     0x7fff96b82ff7  com.apple.DictionaryServices (1.2 - 250.3)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices     0x7fff96b83000 -     0x7fff96bdffff  libTIFF.dylib (1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib     0x7fff97207000 -     0x7fff9720cfff  com.apple.ImageCapture (9.0 - 9.0)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture     0x7fff97218000 -     0x7fff9721dff7  libmacho.dylib (875.1)  /usr/lib/system/libmacho.dylib     0x7fff9726a000 -     0x7fff97275fff  libGPUSupportMercury.dylib (12.1)  /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib     0x7fff9728e000 -     0x7fff9728efff  libenergytrace.dylib (10.40.1)  /usr/lib/libenergytrace.dylib     0x7fff972cb000 -     0x7fff97561fff  libmecabra.dylib (696.5)  /usr/lib/libmecabra.dylib     0x7fff97708000 -     0x7fff97777fff  com.apple.datadetectorscore (7.0 - 460)  /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore     0x7fff97778000 -     0x7fff9778efff  com.apple.CoreMediaAuthoring (2.2 - 953)  /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring     0x7fff97974000 -     0x7fff97993ff7  com.apple.framework.Apple80211 (11.0 - 1121.34.2)  /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211     0x7fff97994000 -     0x7fff9799cfff  libGFXShared.dylib (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib     0x7fff97b58000 -     0x7fff97b60fff  com.apple.NetFS (6.0 - 4.0)  /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS     0x7fff97b63000 -     0x7fff97c55ff7  libiconv.2.dylib (44)  /usr/lib/libiconv.2.dylib     0x7fff97c56000 -     0x7fff97d3cff7  libcrypto.0.9.8.dylib (59.40.2)  /usr/lib/libcrypto.0.9.8.dylib     0x7fff97d3d000 -     0x7fff97fd7ff3  com.apple.security (7.0 - 57337.50.23)  /System/Library/Frameworks/Security.framework/Versions/A/Security     0x7fff98135000 -     0x7fff9813aff3  libunwind.dylib (35.3)  /usr/lib/system/libunwind.dylib     0x7fff981b3000 -     0x7fff981dcff7  libxpc.dylib (765.50.8)  /usr/lib/system/libxpc.dylib     0x7fff981dd000 -     0x7fff98572fdb  com.apple.vImage (8.0 - 8.0)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage     0x7fff98573000 -     0x7fff98574fff  libDiagnosticMessagesClient.dylib (100)  /usr/lib/libDiagnosticMessagesClient.dylib     0x7fff986fc000 -     0x7fff98708fff  com.apple.SpeechRecognitionCore (2.2.7 - 2.2.7)  /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore     0x7fff98767000 -     0x7fff9876ffff  com.apple.AppleSRP (5.0 - 1)  /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP     0x7fff98770000 -     0x7fff9877efff  com.apple.opengl (12.1.0 - 12.1.0)  /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL     0x7fff98782000 -     0x7fff9879eff7  libsystem_malloc.dylib (67.40.1)  /usr/lib/system/libsystem_malloc.dylib     0x7fff987a4000 -     0x7fff987a9ff7  libheimdal-asn1.dylib (453.40.10)  /usr/lib/libheimdal-asn1.dylib     0x7fff987d3000 -     0x7fff987d6ff7  com.apple.help (1.3.3 - 46)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help     0x7fff987d7000 -     0x7fff98801ff7  GLRendererFloat (12.1)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLRendererFloat.bundle/GLRendererFloat     0x7fff98ad1000 -     0x7fff98b8bfff  com.apple.DiscRecording (9.0.1 - 9010.4.3)  /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording     0x7fff98b8c000 -     0x7fff98bb9fff  libdispatch.dylib (501.40.12)  /usr/lib/system/libdispatch.dylib     0x7fff98bba000 -     0x7fff98be3ff7  libxslt.1.dylib (14.2)  /usr/lib/libxslt.1.dylib     0x7fff98c27000 -     0x7fff98cd2fff  com.apple.PDFKit (3.1 - 3.1)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit     0x7fff98ced000 -     0x7fff990c5fef  com.apple.CoreAUC (214.0.0 - 214.0.0)  /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC     0x7fff990c6000 -     0x7fff9912cff7  libsystem_network.dylib (583.50.1)  /usr/lib/system/libsystem_network.dylib     0x7fff9912d000 -     0x7fff99180ff7  libc++.1.dylib (120.1)  /usr/lib/libc++.1.dylib     0x7fff99181000 -     0x7fff991b0fff  com.apple.securityinterface (10.0 - 55065.40.1)  /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface     0x7fff998e4000 -     0x7fff998f2fff  libxar.1.dylib (302)  /usr/lib/libxar.1.dylib     0x7fff998f3000 -     0x7fff998fbfff  com.apple.frameworks.CoreDaemon (1.3 - 1.3)  /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon     0x7fff998ff000 -     0x7fff99936ff7  com.apple.LDAPFramework (2.4.28 - 194.5)  /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP     0x7fff99937000 -     0x7fff99d33fff  libLAPACK.dylib (1162.2)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib     0x7fff99d34000 -     0x7fff99d36fff  libsystem_coreservices.dylib (19.2)  /usr/lib/system/libsystem_coreservices.dylib     0x7fff99d8e000 -     0x7fff99deefff  com.apple.QuickLookFramework (5.0 - 696.7)  /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook     0x7fff99def000 -     0x7fff99e00fff  libcmph.dylib (6)  /usr/lib/libcmph.dylib     0x7fff99e01000 -     0x7fff99e1dff3  libresolv.9.dylib (60)  /usr/lib/libresolv.9.dylib     0x7fff9a56a000 -     0x7fff9a730fe7  com.apple.ImageIO.framework (3.3.0 - 1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO     0x7fff9a757000 -     0x7fff9a782ff7  com.apple.AddressBook.ContactsFoundation (8.0 - 2137.1)  /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation     0x7fff9a783000 -     0x7fff9a8a7fff  libsqlite3.dylib (216.4)  /usr/lib/libsqlite3.dylib     0x7fff9a98e000 -     0x7fff9a9daffb  com.apple.HIServices (1.22 - 550)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices     0x7fff9a9db000 -     0x7fff9aa2bff7  com.apple.Symbolication (1.4 - 58044)  /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication     0x7fff9ad5b000 -     0x7fff9ad62ff7  com.apple.phonenumbers (1.1.1 - 105)  /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers     0x7fff9ad63000 -     0x7fff9ad64fff  libsystem_secinit.dylib (20)  /usr/lib/system/libsystem_secinit.dylib     0x7fff9ad65000 -     0x7fff9ad6efff  com.apple.icloud.FindMyDevice (1.0 - 1)  /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice     0x7fff9ad75000 -     0x7fff9ad77ff7  libRadiance.dylib (1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib     0x7fff9b00f000 -     0x7fff9b01bff7  com.apple.OpenDirectory (10.11 - 194)  /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory     0x7fff9b031000 -     0x7fff9b042ff7  libsystem_trace.dylib (201.10.3)  /usr/lib/system/libsystem_trace.dylib     0x7fff9b043000 -     0x7fff9b0b7ff7  com.apple.Heimdal (4.0 - 2.0)  /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal     0x7fff9b0cb000 -     0x7fff9b1b1fef  unorm8_bgra.dylib (2.7.3)  /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib     0x7fff9b22e000 -     0x7fff9b31dfff  libxml2.2.dylib (29.7)  /usr/lib/libxml2.2.dylib     0x7fff9b692000 -     0x7fff9b707fff  com.apple.framework.IOKit (2.0.2 - 1179.50.2)  /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit     0x7fff9b708000 -     0x7fff9b72cfff  com.apple.MultitouchSupport.framework (304.12 - 304.12)  /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport     0x7fff9b72d000 -     0x7fff9b72dfff  libmetal_timestamp.dylib (600.0.44.1)  /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib     0x7fff9b76e000 -     0x7fff9b797fff  libsystem_info.dylib (477.50.4)  /usr/lib/system/libsystem_info.dylib     0x7fff9b82b000 -     0x7fff9b9d1ff7  com.apple.audio.toolbox.AudioToolbox (1.13 - 1.13)  /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox     0x7fff9b9d2000 -     0x7fff9b9defff  com.apple.CommerceCore (1.0 - 463.9)  /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore     0x7fff9b9e5000 -     0x7fff9ba85fff  com.apple.ViewBridge (159 - 159)  /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge     0x7fff9ba86000 -     0x7fff9bc91fff  libFosl_dynamic.dylib (16.24)  /usr/lib/libFosl_dynamic.dylib     0x7fff9bfdc000 -     0x7fff9c016ff7  com.apple.DebugSymbols (132 - 132)  /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols     0x7fff9c017000 -     0x7fff9c034ff7  com.apple.AppleVPAFramework (2.1.2 - 2.1.2)  /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA     0x7fff9c039000 -     0x7fff9c0c2ff7  com.apple.PerformanceAnalysis (1.0 - 1)  /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis     0x7fff9c0ce000 -     0x7fff9c0d1fff  libCoreVMClient.dylib (119.5)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib     0x7fff9c941000 -     0x7fff9c956fff  com.apple.AppContainer (4.0 - 261.40.2)  /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer     0x7fff9c957000 -     0x7fff9c9cefeb  libcorecrypto.dylib (335.50.1)  /usr/lib/system/libcorecrypto.dylib     0x7fff9ca2d000 -     0x7fff9ca72ff7  com.apple.coreservices.SharedFileList (24.4 - 24.5)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList     0x7fff9ca73000 -     0x7fff9cc41ff3  com.apple.QuartzCore (1.11 - 410.14)  /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore     0x7fff9cc70000 -     0x7fff9cd49fff  com.apple.CoreMedia (1.0 - 1731.15.204)  /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia     0x7fff9d004000 -     0x7fff9d015fff  libSparseBLAS.dylib (1162.2)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib     0x7fff9d019000 -     0x7fff9d019ff7  libunc.dylib (29)  /usr/lib/system/libunc.dylib     0x7fff9d01a000 -     0x7fff9d15ffff  com.apple.QTKit (7.7.3 - 2943.10)  /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit     0x7fff9d172000 -     0x7fff9d17dfff  libkxld.dylib (3248.50.21)  /usr/lib/system/libkxld.dylib     0x7fff9d17e000 -     0x7fff9d463ffb  com.apple.CoreServices.CarbonCore (1136.2 - 1136.2)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore     0x7fff9d464000 -     0x7fff9d465ff3  com.apple.print.framework.Print (10.0 - 266)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print     0x7fff9d467000 -     0x7fff9d496ffb  libsystem_m.dylib (3105)  /usr/lib/system/libsystem_m.dylib     0x7fff9d4b5000 -     0x7fff9d4d9fff  com.apple.quartzfilters (1.10.0 - 1.10.0)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters     0x7fff9d4da000 -     0x7fff9d4ddfff  libsystem_sandbox.dylib (460.50.4)  /usr/lib/system/libsystem_sandbox.dylib     0x7fff9d548000 -     0x7fff9d548fff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib     0x7fff9d549000 -     0x7fff9d551ffb  libsystem_dnssd.dylib (625.50.5)  /usr/lib/system/libsystem_dnssd.dylib     0x7fff9d74f000 -     0x7fff9d7befff  com.apple.SearchKit (1.4.0 - 1.4.0)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit     0x7fff9d7bf000 -     0x7fff9db3affb  com.apple.VideoToolbox (1.0 - 1731.15.204)  /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox     0x7fff9db3b000 -     0x7fff9db45fff  com.apple.NetAuth (6.0 - 6.0)  /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth     0x7fff9db7b000 -     0x7fff9decffff  com.apple.Foundation (6.9 - 1259)  /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation     0x7fff9df38000 -     0x7fff9df3dff7  com.apple.AssetCacheServices (14.1 - 14.1)  /System/Library/PrivateFrameworks/AssetCacheServices.framework/Versions/A/AssetCacheServices     0x7fff9df3e000 -     0x7fff9df5dff7  com.apple.contacts.vCard (1.0 - 2137.1)  /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard     0x7fff9e245000 -     0x7fff9e2bcff7  com.apple.MMCS (1.3 - 357.1)  /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS     0x7fff9e2bd000 -     0x7fff9e2c8fff  com.apple.CrashReporterSupport (10.11 - 718)  /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport     0x7fff9e2e8000 -     0x7fff9e336fff  libcurl.4.dylib (90)  /usr/lib/libcurl.4.dylib     0x7fff9e5b3000 -     0x7fff9e5bbfff  libsystem_networkextension.dylib (385.40.36)  /usr/lib/system/libsystem_networkextension.dylib     0x7fff9e5e7000 -     0x7fff9e629ff7  com.apple.Metal (56.6 - 56.6)  /System/Library/Frameworks/Metal.framework/Versions/A/Metal     0x7fff9e62a000 -     0x7fff9e691fff  com.apple.framework.CoreWiFi (11.0 - 1101.20)  /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi     0x7fff9e692000 -     0x7fff9e71ffff  libsystem_c.dylib (1082.50.1)  /usr/lib/system/libsystem_c.dylib     0x7fff9e720000 -     0x7fff9e725fff  com.apple.DiskArbitration (2.7 - 2.7)  /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration     0x7fff9e736000 -     0x7fff9e73efff  libcopyfile.dylib (127)  /usr/lib/system/libcopyfile.dylib     0x7fff9e73f000 -     0x7fff9e764ff7  libPng.dylib (1450)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib     0x7fff9e765000 -     0x7fff9e7d0ff7  com.apple.framework.CoreWLAN (11.0 - 1101.20)  /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN     0x7fff9e7d1000 -     0x7fff9e81dfff  com.apple.print.framework.PrintCore (11.2 - 472.2)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore     0x7fff9e81e000 -     0x7fff9e821fff  com.apple.Mangrove (1.0 - 1)  /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove     0x7fff9e822000 -     0x7fff9e837fff  com.apple.ToneKit (1.0 - 1)  /System/Library/PrivateFrameworks/ToneKit.framework/Versions/A/ToneKit     0x7fff9e838000 -     0x7fff9e83afff  com.apple.loginsupport (1.0 - 1)  /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport     0x7fff9e890000 -     0x7fff9e8e1ff7  libcups.2.dylib (435.2)  /usr/lib/libcups.2.dylib     0x7fff9e9a2000 -     0x7fff9eb09fff  libBLAS.dylib (1162.2)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib     0x7fff9ecf1000 -     0x7fff9ed91fff  com.apple.Metadata (10.7.0 - 972.34)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata     0x7fff9ee51000 -     0x7fff9ee6dfff  com.apple.GenerationalStorage (2.0 - 239.1)  /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage     0x7fff9eeea000 -     0x7fff9ef9afe7  libvMisc.dylib (563.5)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib     0x7fff9efc8000 -     0x7fff9efcafff  com.apple.SecCodeWrapper (4.0 - 261.40.2)  /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper     0x7fff9efcb000 -     0x7fff9efdbff3  com.apple.ProtocolBuffer (1 - 243)  /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer     0x7fff9efdc000 -     0x7fff9f050ff3  com.apple.securityfoundation (6.0 - 55126)  /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation     0x7fff9f0be000 -     0x7fff9f0e5fff  com.apple.shortcut (2.16 - 93)  /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut     0x7fff9f11d000 -     0x7fff9f13bff7  libsystem_kernel.dylib (3248.50.21)  /usr/lib/system/libsystem_kernel.dylib     0x7fff9f13c000 -     0x7fff9f5d7ffb  com.apple.GeoServices (1.0 - 1151.49.1)  /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices     0x7fff9f5d8000 -     0x7fff9f5dfff7  libcompiler_rt.dylib (62)  /usr/lib/system/libcompiler_rt.dylib  External Modification Summary:   Calls made by other processes targeting this process:     task_for_pid: 1     thread_create: 0     thread_set_state: 0   Calls made by this process:     task_for_pid: 0     thread_create: 0     thread_set_state: 0   Calls made by all processes on this machine:     task_for_pid: 94579     thread_create: 0     thread_set_state: 0  VM Region Summary: ReadOnly portion of Libraries: Total=355.4M resident=0K(0%) swapped_out_or_unallocated=355.4M(100%) Writable regions: Total=247.4M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=247.4M(100%)  ```                             VIRTUAL   REGION  ```  REGION TYPE                        SIZE    COUNT (non-coalesced)  ===========                     =======  =======  Accelerate.framework               128K        2  Activity Tracing                  2048K        2  CG backing stores                 1216K        5  CG image                            32K        5  CG shared images                   272K        8  CoreAnimation                       28K        4  CoreUI image data                  236K        3  CoreUI image file                  192K        4  Dispatch continuations            8192K        2  IOKit                             19.6M       14  Kernel Alloc Once                    8K        3  MALLOC                            54.3M       16  MALLOC guard page                   32K        7  Memory Tag 242                      12K        2  OpenCL                               8K        2  OpenGL GLSL                        256K        4  STACK GUARD                       56.2M       47  Stack                             46.5M       47  VM_ALLOCATE                      114.5M       51  VM_ALLOCATE (reserved)              92K        4         reserved VM address space (unallocated) __DATA                            32.9M      285  __GLSLBUILTINS                    2588K        2  __IMAGE                            528K        2  __LINKEDIT                        94.7M       15  __TEXT                           260.7M      289  __UNICODE                          552K        2  mapped file                      170.3M       25  shared memory                     17.3M        9  ===========                     =======  =======  TOTAL                            883.2M      833  TOTAL, minus reserved VM space   883.1M      833   Model: MacBookPro12,1, BootROM MBP121.0167.B16, 2 processors, Intel Core i5, 2,7 GHz, 16 GB, SMC 2.28f7 Graphics: Intel Iris Graphics 6100, Intel Iris Graphics 6100, Built-In Memory Module: BANK 0/DIMM0, 8 GB, DDR3, 1867 MHz, 0x02FE, 0x4544464232333241314D412D4A442D460000 Memory Module: BANK 1/DIMM0, 8 GB, DDR3, 1867 MHz, 0x02FE, 0x4544464232333241314D412D4A442D460000 AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x133), Broadcom BCM43xx 1.0 (7.21.95.175.1a6) Bluetooth: Version 4.4.5f3 17904, 3 services, 27 devices, 1 incoming serial ports Network Service: Thunderbolt Ethernet, Ethernet, en4 Network Service: Wi-Fi, AirPort, en0 PCI Card: Apple 57762-A0, Ethernet Controller, Thunderbolt@195,0,0 Serial ATA Device: APPLE SSD SM0256G, 251 GB USB Device: USB 3.0 Bus USB Device: Bluetooth USB Host Controller USB Device: Keyboard Hub USB Device: Apple Keyboard Thunderbolt Bus: MacBook Pro, Apple Inc., 27.1 Thunderbolt Device: Thunderbolt to Gigabit Ethernet Adapter, Apple Inc., 1, 5.5  `","closed","","bonetwo2","2016-06-23T08:20:47Z","2019-08-20T01:09:53Z"
"","2278","I'm sorry, I missed","I'm sorry, I missed","closed","","taichiasao","2016-06-14T05:17:24Z","2019-08-20T02:10:00Z"
"","2709","Legacy Safari Driver Window call","I'm not sure if we care about this, but fwiw it works locally and is broken on remote server.  `POST session/f1fd34ab-faf3-4656-bfda-ff6584b42241/window`  returns:  `org.openqa.selenium.WebDriverException: undefined is not an object (evaluating 'this.source_.addEventListener')`   Full debug:  https://gist.github.com/titusfortner/bbd16bc4e8f45760b6bc6ab93e5401e1","closed","","titusfortner","2016-09-03T18:36:27Z","2019-08-19T16:09:34Z"
"","1961","start_session fails randomly","I'm experiencing random failures. Since it seems things happen before the actual test logic is started, I assume it's a Selenium issue. We're using pytest-selenium. The timeout comes from using pytest-timeout. For running Selenium (and the driver) [docker-selenium](https://github.com/SeleniumHQ/docker-selenium/tree/master/NodeChromeDebug) is used.  ``` @pytest.fixture     def selenium(request, capabilities):         """"""Returns a WebDriver instance based on options and capabilities""""""         from .driver import start_driver >       driver = start_driver(request.node, capabilities)  /usr/local/lib/python2.7/dist-packages/pytest_selenium/pytest_selenium.py:75:  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  /usr/local/lib/python2.7/dist-packages/pytest_selenium/driver.py:26: in start_driver     options.driver.lower()))(item, _capabilities) /usr/local/lib/python2.7/dist-packages/pytest_selenium/driver.py:51: in chrome_driver     return webdriver.Chrome(**kwargs) /usr/local/lib/python2.7/dist-packages/selenium/webdriver/chrome/webdriver.py:67: in __init__     desired_capabilities=desired_capabilities) /usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py:87: in __init__     self.start_session(desired_capabilities, browser_profile) /usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py:141: in start_session     'desiredCapabilities': desired_capabilities, /usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/webdriver.py:199: in execute     response = self.command_executor.execute(driver_command, params) /usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/remote_connection.py:395: in execute     return self._request(command_info[0], url, body=data) /usr/local/lib/python2.7/dist-packages/selenium/webdriver/remote/remote_connection.py:426: in _request     resp = self._conn.getresponse() /usr/lib/python2.7/httplib.py:1127: in getresponse     response.begin() /usr/lib/python2.7/httplib.py:453: in begin     version, status, reason = self._read_status() /usr/lib/python2.7/httplib.py:409: in _read_status     line = self.fp.readline(_MAXLINE + 1) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   self = , size = 65537      def readline(self, size=-1):         buf = self._rbuf         buf.seek(0, 2)  # seek end         if buf.tell() > 0:             # check if we already have it in our buffer             buf.seek(0)             bline = buf.readline(size)             if bline.endswith('\n') or len(bline) == size:                 self._rbuf = StringIO()                 self._rbuf.write(buf.read())                 return bline             del bline         if size < 0:             # Read until \n or EOF, whichever comes first             if self._rbufsize = 0:                     nl += 1                     buf.write(data[:nl])                     self._rbuf.write(data[nl:])                     del data                     break                 buf.write(data)             return buf.getvalue()         else:             # Read until size bytes or \n or EOF seen, whichever comes first             buf.seek(0, 2)  # seek end             buf_len = buf.tell()             if buf_len >= size:                 buf.seek(0)                 rv = buf.read(size)                 self._rbuf = StringIO()                 self._rbuf.write(buf.read())                 return rv             self._rbuf = StringIO()  # reset _rbuf.  we consume it via buf.             while True:                 try: >                   data = self._sock.recv(self._rbufsize) E                   Failed: Timeout >600s  /usr/lib/python2.7/socket.py:480: Failed ```","closed","","jmakov","2016-04-12T11:30:00Z","2019-08-19T09:09:35Z"
"","2018","Discussion about propably incorrect webdriver behavior","I would like to discuss about selenium behavior, which I consider as incorrect for web2.0 javascript saturated applications.  I have a test, that clicks submit at form. After click form hides and notification message (about data submitting) is shown. I want selenium to get notification message element after submit. But due to page in reloading state after submit, my selenium request waits until page will be reloaded. But after reloading notification message isn't shown.  I suppose these situations can be present often for modern web applications with angularjs, backbonejs, etc. And it's very simple to reproduce locally. You need run flask app:  ``` python #! python /usr/bin/python from time import sleep  from flask import Flask  app = Flask(__name__)   @app.route(""/"") def hello():     return """"""               function reload() {     setTimeout(function(){window.location.href = ""http://localhost:5000/goodbye""}, 2000)     }          Hello world     Click          """"""   @app.route(""/goodbye"") def goodbye():     sleep(60)     return ""GoodbyeGoodbye""   if __name__ == ""__main__"":     app.run() ```  Then in interactive python console (for ex. ipython) need to execute next commands:  ``` python from selenium.webdriver import Firefox ff = Firefox() ff.get('http://localhost:5000') button = ff.find_element_by_tag_name('button') button.click() ```  Wait a bit, until page will be in reloading state and then try to execute:  ``` python button = ff.find_element_by_tag_name('button') ```  As you see, now your request is waiting until page will be reloaded. It means that selenium doesn't garantee, that you can get and check page (or element properties) status immediatelly when you need, and it can leads to flaky tests.  I used firefox webdriver. In forefox it happens because there is a code extensions/fxdriver@googlecode.com/components/command-process.js#L12604  ``` js DelayedCommand.prototype.execute = function(a) {   this.response_.session.getWaitForPageLoad() && !this.yieldedForBackgroundExecution_ && (this.yieldedForBackgroundExecution_ = !0, fxdriver.profiler.log({event:""YIELD_TO_PAGE_LOAD"", startorend:""start""}));   var b = this;   this.driver_.window.setTimeout(function() {     b.executeInternal_();   }, a); }; ```  As we see, before execution webdriver waits for `this.response_.session.getWaitForPageLoad()`. I think this problem is actual for all webdrivers for universality.  It's easy to understand why it is doing that: to prevent any actions to change page, when page is already in reloading state.  But **my proposition** is to separate selenium commands to get page state and to change page state. And commands to get page state must be executed immediatelly even page is in reloading state. But commands to change page state (open url, set element text, execute js script, etc) must work as before. It will allow us to get DOM info at any time and make selenium as realtime testing system.","closed","","schipiga","2016-04-28T07:47:56Z","2019-08-19T09:09:51Z"
"","2557","Allow defining custom commands on a deferred executor in node","I work on the Protractor team and some of our users have asked for us to support commands like `setNetworkConnection` which are part of appium's extended JSON Wire Protocol.  Since we don't want to swich to `wd` or `webdriverio`, I have been working on a tool that patches these commands to `WebDriver` ([current implementation](https://github.com/angular/webdriver-js-extender)).  This was relatively straightforward to do with `HttpExecutor`'s [`defineCommand`](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/http.js#L276), except the one snag was that the driver's executor is generally a `DeferredExecutor` and there is currently no way to pass the `defineCommand` call through the `DeferredExecutor` to the `HttpExecutor`.  This lead to some [ugly and imperfect hacks](https://github.com/angular/webdriver-js-extender/blob/master/lib/index.ts#L43) which I'd like to get rid of. - [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","sjelin","2016-08-02T21:32:51Z","2016-08-06T17:32:33Z"
"","2584","SafariDriver: should not yet be deprecated","I was surprised to learn that SafariDriver is deprecated. I understand that Safari 10 implements the WebDriver API but this doesn't mean that we don't still need support for Safari 9, 8, etc. Why discourage the use of the existing SafariDriver? There is nothing to supersede it for current and recent Safari versions and it isn't considered ""unsafe"". I think it would be better to un-deprecate it and mark it is ""support-only"" or something similar that explains that the only further development planned is for bugs but that the tool will not be updated for the latest Safari versions.","closed","","mfulton26","2016-08-08T16:37:00Z","2019-08-19T20:09:53Z"
"","1919","Add support for Edge in JavaScript language bindings","I was looking to contribute and add support for Edge to the JavaScript language bindings (hoping to get to others later). Somewhat overwhelmed by the JavaScript directory alone and was wondering if anyone could give me 15 minutes just to overview/get ramped up. Was also wondering if there is a chat platform people normally are on for questions and the like.  It looks like the JDK is needed if I'm actually building any of the servers (didn't realize chrome/ie/firefox drivers were built from here, pretty cool!) but is it required for the language bindings? Also if I do need to do a build should I be using Crazy-Fun or Buck? Looks like Buck support is spread out and ongoing. Lastly working on Windows and while I could test the new Linux subsystem would it just be best to use Cygwin for most of the sample commands (as ./go isn't recognized in cmd and I've no idea what syntax that is from).","closed","","InstyleVII","2016-04-05T07:11:28Z","2019-08-20T09:09:44Z"
"","2707","TouchSequence is not public api","I want to use touch sequence for dragging the webelement but it is still not available as public API. As, i am using javascript, there is no function for click and hold in it. So, i can make it work with touchSequence. TouchSequence need to be made public api.","closed","C-nodejs,","badaldesai","2016-09-02T13:33:48Z","2019-08-19T15:10:03Z"
"","1897","JavaScript webdriver does not support HTTPS","I want to run a selenium grid in the cloud and use the javascript web driver (more specifically [protractor](https://angular.github.io/protractor/)) to execute tests against the grid.  To protect usernames and passwords I put a reverse proxy in front of the grid hub which does SSL offloading.  I found, however, that this does not work because a HTTP CONNECT is never issued.  It looks like the [webdriver only uses the nodejs http library](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/http/index.js#L25)?  It should look at the URL and use the https library when needed.","closed","C-nodejs,","gregjhogan","2016-03-30T17:47:39Z","2019-08-20T07:10:03Z"
"","2738","Question : can i press two normal keys simultaneously in webdriver ?","I want to press `w` and `a` simultaneously can i do that using selenium webdriver.  Attached [htmlCode.zip](https://github.com/SeleniumHQ/selenium/files/461071/htmlCode.zip)   the simple html code to log the pressed keys.  `keys = ""w&&s"".split(""&&""); CharSequence[] allKeys = new CharSequence[keys.length]; element = driver.findElement(By.tagName(""body"")); for (int i=0;i","closed","","S-Venkat-S","2016-09-08T07:33:00Z","2019-08-19T17:10:02Z"
"","2126","RE:argument(0).click is not a fuction in javascriptexecutor","I used javascript executor to click an element(used javascript executor because faced stale element referrence issue).When i tried to click an element using this javascript executor getting error as""argument(0).click is not a fuction"".  > WebElement weekdate1 = driver.findElement(By.xpath("".//*[@id='dashboardleft']/div[2]/div/div[1]/a"")); >  > ((JavascriptExecutor) driver).executeScript(""arguments[0].click();"", weekdate1); >  > Can you help us to overcome this issue.Thanks in advance","closed","","archanamuplams","2016-05-19T09:38:08Z","2019-08-20T05:09:55Z"
"","1827","profilePath_ property is undefined","I use this property because I need to copy some files from a profile to another. It used to work in 2.52.0.  I know it's an internal property and I shouldn't use it, but I'm filing this bug anyway because it's used in a test: https://github.com/SeleniumHQ/selenium/blob/f4a8391eb464d3762eab098fb7cf6aa90347e377/javascript/node/selenium-webdriver/test/firefox/firefox_test.js#L145","closed","","marco-c","2016-03-16T14:08:06Z","2019-08-20T10:09:51Z"
"","2393","How  to add record handler to our custom commands?","I use selenium to record the web app actions. But some commands are not recorded , how  can I improve it ?  I read the recorder.js and recorder-handler.js but I still don't know how to do. What's more, how can I add event handler for my own commands?  Thanks!","closed","","Joylim","2016-06-28T08:43:42Z","2019-08-19T10:09:51Z"
"","1989","Manual update of selenium server causes package import problems for apache commons lang3","I update the selenium-server-standalone from version 2.44.0 to 2.53.0 and selenium-java from 2.44.0 to 2.53.0. I am now getting an import error on ""org.apache.commons.lang3.ArrayUtils"" in one of my classes. Reverting back to 2.44.0 fixes this problem.   What's going on?","closed","","tckelly38","2016-04-19T15:22:27Z","2019-08-20T08:09:41Z"
"","2498","Python test suite's webserver.py can hang the terminal when Ctrl-C in middle of test","I think we need to set the webserver thread to be a ""daemon"" thread, so it can be terminated safely.","closed","C-py,","burg","2016-07-20T17:27:57Z","2019-08-16T23:09:42Z"
"","2475","Support for Apple's new Safari Driver","I think this has only been done by @lukeis in Python so far?","closed","C-dotnet,","titusfortner","2016-07-15T23:41:59Z","2019-08-19T15:09:37Z"
"","2433","Can`t connect to node","I starting selenium like this: `DISPLAY=:99 xvfb-run -a -n 1 -l -s ""-screen 0, 1024x768x8"" java -jar selenium-server-standalone-2.53.0.jar  -Djava.security.egd=file:///dev/urandom switch -role hub`  and after this create node like this:  `java -jar selenium-server-standalone-2.46.0.jar -role webdriver -hub http://localhost:4444/grid/register -port 5556 -debug`  getting this:  ``` 14:26:27.121 INFO - Launching a Selenium Grid node 14:26:27.168 INFO - Adding browserName=firefox 14:26:27.514 WARN - error getting the parameters from the hub. The node may end up with wrong timeouts.com.google.gson.stream.MalformedJsonException: Use JsonReader.setLenient(true) to accept malformed JSON at line 1 column 27 path $ 14:26:27.525 INFO - Java: Oracle Corporation 25.60-b23 14:26:27.525 INFO - OS: Linux 3.17.0 amd64 14:26:27.529 INFO - v2.53.0, with Core v2.53.0. Built from revision 35ae25b 14:26:27.570 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match the current platform LINUX 14:26:27.570 INFO - Driver provider org.openqa.selenium.edge.EdgeDriver registration is skipped: registration capabilities Capabilities [{browserName=MicrosoftEdge, version=, platform=WINDOWS}] does not match the current platform LINUX 14:26:27.570 INFO - Driver class not found: com.opera.core.systems.OperaDriver 14:26:27.571 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered 14:26:27.571 INFO - Driver provider org.openqa.selenium.safari.SafariDriver registration is skipped: registration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform LINUX 14:26:27.572 INFO - Driver class not found: org.openqa.selenium.htmlunit.HtmlUnitDriver 14:26:27.572 INFO - Driver provider org.openqa.selenium.htmlunit.HtmlUnitDriver is not registered 14:26:27.598 INFO - Version Jetty/5.1.x 14:26:27.599 INFO - Started HttpContext[/selenium-server,/selenium-server] ```  And after this try to connect to port 5556  `$this->driver = RemoteWebDriver::create('http://127.0.0.1:5556/wd/hub', $capabilities);` but getting error: ""couldn't connect to host"". What I do wrong?","closed","","bdmtra","2016-07-06T11:38:25Z","2019-08-19T23:09:55Z"
"","2770","Runtime error in event handler not propagated","I noticed that any runtime error thrown in event handler, e.g. 'uncaughtexception' is not propagated. And the behavior is different for selenium-webdriver (javascript) version 2.48.x and below.   It seems like a breaking change, is the behavior expected?   Thanks!  ``` js const promise = require('../lib/promise');  describe('Uncaught exception', function() {   it('should propagate exception', function(done) {     var flow = promise.controlFlow();      flow.execute(function() {       throw new Error('execute_error');     });      flow.on('uncaughtException', function(err) {       // execute_error       console.log(err);        // doesn't trigger runtime error       throw err;        // Requires async throw to trigger runtime error       // setTimeout(function() {       //   throw err;       // });     });   }); }); ```","closed","C-nodejs,","jugend","2016-09-14T07:00:46Z","2019-08-19T11:09:40Z"
"","2167","how to measure response time for both loading and search time for a website ? selenium","I need to measure response time for website using Selenium and Selenide. 1. Response time of a website:     I mean the loading time, I see that there is method to take difference between time before and after open website.  > But this way, will measure the client loading time, will it depend on the used client? what is the best way for do that?  ``` long startTime = System.currentTimeMillis();  driver.get(""http://zyxware.com"");  new WebDriverWait(driver, 10).until(ExpectedConditions.  presenceOfElementLocated(By.id(""Calculate"")));  long endTime = System.currentTimeMillis();  long totalTime = endTime - startTime;  System.out.println(""Total Page Load Time: "" + totalTime + ""  milliseconds""); ``` 1. if I have a search button for the same website, if I need to measure the search time, how to do it? is it as same as the above way?","closed","","hana9090","2016-05-26T11:56:07Z","2019-08-20T05:09:37Z"
"","2412","After firefox update, Perform automation, In Search bar the given URL is not loaded.","I just updated my firefox browser to 47.0.1. After this update, While automating the selenium scripts. The Browser launches, but doesnot load the URL given in scripts. Selenium jars used before update was 2.48 and updated it to 2.53.0..","closed","","vimalvenkat","2016-06-30T08:59:24Z","2019-08-20T00:09:49Z"
"","2656","Is it possible to download files to the test machine during a grid test?","I have a Selenium Grid with nodes set up for my automated testing (on windows machines). I have successfully used the LocalFileDetector approach when I have tests (.NET Selenium v2.53.1) that need to _upload_ files (from my test/build machine to the node).  I was wondering if it was possible to _download_ files from my Grid node to my test machine - similar to LocalFileDetector for uploads. I would really like my test logic/machine to verify the file that was downloaded.  What is the recommended approach for such scenarios?  Any advice would be greatly appreciated.  Thanks.  --Tony","closed","","abelfiore","2016-08-24T12:47:48Z","2019-08-19T19:09:43Z"
"","2000","PhantomJS requires different way to run for HTTPS site and is it or is it  not integrated?","I have a scraper in which I am scraping https sites. The problem is phantomjs requires **phantomjs --ssl-protocol=tlsv1** to open headless browser for https but, how to integrate this with selenium-webdriver?  And the thing is using **firefox** as the browser works like a charm..  Please somebody :)","closed","","rebatov","2016-04-22T07:24:57Z","2019-08-20T07:09:53Z"
"","2748","Better default check for canBubble","I found that your code was comparing the result of `typeof` with a variable named `undefined`.  As typeof returns a string it would compare to a string with the content `'undefined'`  Rewrote the line to a more simple one.","closed","","mathiasrw","2016-09-09T13:29:34Z","2016-09-10T21:24:18Z"
"","2181","webelement sreenshot() methoed NOT working","I can take screenshot  with webdriver's member method, however failed with webelement' sreenshot() method, and the error message shows below, does anyone know what's going on?  I was running the code in Windows, and use selenium  Environment: Selenium Version: 2.53.2, Language: Python2.7 OS: Windows 7 # coding=utf-8  from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0 from selenium.webdriver.support import expected_conditions as EC # available since 2.26.0 from selenium.webdriver.common.keys import Keys  driver = webdriver.Firefox() driver.get('http://global.bing.com/') driver.get_screenshot_as_file('C:\bing.png')   #running good so far, the bing.png is saved.  bing_id_elem = driver.find_element_by_id(""sbox"") bing_id_elem.screenshot(""C:\test_webelement.png"")         #failed here !!!!!   driver.close()  Traceback (most recent call last):   File ""C:\Users\chenhh8\workspace\redfish_app_project\KPIFISH_PPT\webelement_screenshot_test.py"", line 17, in      bing_id_elem.screenshot(""C:\test_webelement.png"")     File ""C:\Python27\lib\site-packages\selenium-2.53.2-py2.7.egg\selenium\webdriver\remote\webelement.py"", line 408, in screenshot     png = self.screenshot_as_png   File ""C:\Python27\lib\site-packages\selenium-2.53.2-py2.7.egg\selenium\webdriver\remote\webelement.py"", line 395, in screenshot_as_png     return base64.b64decode(self.screenshot_as_base64.encode('ascii'))   File ""C:\Python27\lib\site-packages\selenium-2.53.2-py2.7.egg\selenium\webdriver\remote\webelement.py"", line 385, in screenshot_as_base64     return self._execute(Command.ELEMENT_SCREENSHOT)['value']   File ""C:\Python27\lib\site-packages\selenium-2.53.2-py2.7.egg\selenium\webdriver\remote\webelement.py"", line 457, in _execute     return self._parent.execute(command, params)   File ""C:\Python27\lib\site-packages\selenium-2.53.2-py2.7.egg\selenium\webdriver\remote\webdriver.py"", line 233, in execute     self.error_handler.check_response(response)   File ""C:\Python27\lib\site-packages\selenium-2.53.2-py2.7.egg\selenium\webdriver\remote\errorhandler.py"", line 165, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Unrecognized command: GET /session/afba48dc-2c3e-4ad3-a89d-ae595c7e6029/screenshot/{3331b665-5005-4b78-abcc-90ce309ba5fb}","closed","","chenhuahuan","2016-05-30T10:34:26Z","2019-08-20T03:09:35Z"
"","1810","Error Communicating with Remote Browser","I can see this issue has been reported earlier but didn't find any concrete solution. Issue happens randomly on any test and once in 10 execution. Can someone help, Thanks.  `org.openqa.selenium.WebDriverException: Error communicating with the remote browser. It may have died. Build info: version: '2.46.0', revision: '87c69e2', time: '2015-06-04 16:16:47' System info: host: 'hub', ip: '*', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-573.8.1.el6.x86_64', java.version: '1.8.0_45-internal' Driver info: driver.version: EventFiringWebDriver Command duration or timeout: 421 milliseconds Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50' System info: host: '*', ip: '*', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-573.8.1.el6.x86_64', java.version: '1.7.0_76' *** Element info: {Using=css selector, value=.btn-action.tif-new} Session ID: de133790-7d12-4d98-83da-5a5bd7191138 Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{platform=LINUX, javascriptEnabled=true, acceptSslCerts=true, browserName=firefox, rotatable=false, locationContextEnabled=true, webdriver.remote.sessionid=de133790-7d12-4d98-83da-5a5bd7191138, version=42.0, cssSelectorsEnabled=true, databaseEnabled=true, handlesAlerts=true, webStorageEnabled=true, nativeEvents=false, applicationCacheEnabled=true, takesScreenshot=true}] at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:526) at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204) at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605) at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358) at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:447) at org.openqa.selenium.By$ByCssSelector.findElement(By.java:426) at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350) at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69) at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38) at com.sun.proxy.$Proxy17.click(Unknown Source) at com.*.BaseElement.click(BaseElement.java:71) at com.*.WaitEnabledBaseElement.click(WaitEnabledBaseElement.java:34) ***** at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80) at org.testng.internal.Invoker.invokeMethod(Invoker.java:714) at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.46.0', revision: '87c69e2', time: '2015-06-04 16:16:47' System info: host: 'hub', ip: '*', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-573.8.1.el6.x86_64', java.version: '1.8.0_45-internal' Driver info: driver.version: EventFiringWebDriver Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50' System info: host: '*', ip: '*', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-573.8.1.el6.x86_64', java.version: '1.7.0_76' Driver info: driver.version: unknown`","closed","","gurvinderd","2016-03-15T11:09:39Z","2019-08-20T01:09:49Z"
"","2314","Identifying elements","I am working on automating web application. Developers used angular js and protractor and single page concept. None of the elements has unique identifier. I tried using path, css, etc. but the test is not running consistent.   I am here to check if there is any way to identify these kind of dynamic elements which are developed using angular js.","closed","","dhsfam","2016-06-19T23:06:03Z","2019-08-20T02:09:39Z"
"","2415","Switching between windows is not working as expected.","I am unable to switch between windows in devices getting an error saying ""A request to switch to a different window could not be satisfied because the window could not be found.""  Is this a bug ?  Please refer the code below for switching between windows.  DesiredCapabilities for IOS 6 Plus   driver.get(""http://toolsqa.com"");  WebElement ele = driver.findElement(By.xpath(""//*[@id=\""mobile-menu\""]/span[1]""));        ele.click();        String parWin = driver.getWindowHandle();        String target = ""http://www.javatpoint.com/"";             String value = ""javat"";             String args1 = String.format(""window.open('%s', '%s'); null;"", target, value);             ((JavascriptExecutor) driver).executeScript(args1); for (String winHandle : driver.getWindowHandles()) {                 if (winHandle != parWin) {                     Thread.sleep(10000); //getting error while using switchTo                     driver.switchTo().window(winHandle);    }             }","closed","","navin578","2016-07-01T06:58:36Z","2019-08-20T00:09:36Z"
"","2784","Unable to run tests locally on chrome","I am trying to run chrome tests locally on MAC(El Capitan) , however i am unable to run the tests locally on chrome , i am able to invoke chrome using remote webdriver. But when i try to run the tests without the remote webdriver i.e invoking chrome directly I am getting error   ```     driver/chrome/webdriver.py"", line 62, in __init__     self.service.start()   File ""/Users/testuser/practise/venv/lib/python2.7/site-packages/selenium/webdriver/common/service.py"", line 92, in start     raise WebDriverException(""Can not connect to the Service %s"" % self.path) WebDriverException: Message: Can not connect to the Service chromedriver ```  I have the chromedriver binary located in `/usr/local/bin` and i have the same in my **PATH** as well.   ``` Selenium Version: selenium (2.53.6) Chromedriver Version: 2.24.417412 Python Version: 2.7.10 ```  MY sample script  ``` # Import unittest module for creating unit tests import unittest  # Import time module to implement import time  # Import the Selenium 2 module (aka ""webdriver"") from selenium import webdriver  # For automating data input from selenium.webdriver.common.keys import Keys  # For providing custom configurations for Chrome to run from selenium.webdriver.chrome.options import Options   # -------------------------------------- # Provide a class for the unit test case class PythonOrgSearchChrome(unittest.TestCase):      # Anything declared in setUp will be executed for all test cases     def setUp(self):         # Select which device you want to emulate by uncommenting it         # More information at: https://sites.google.com/a/chromium.org/chromedriver/mobile-emulation         mobile_emulation = {              ""deviceName"": ""Google Nexus 5""             # Or specify a specific build using the following two arguments             #""deviceMetrics"": { ""width"": 360, ""height"": 640, ""pixelRatio"": 3.0 },             #""userAgent"": ""Mozilla/5.0 (Linux; Android 4.2.1; en-us; Nexus 5 Build/JOP40D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166 Mobile Safari/535.19"" }         }          # Define a variable to hold all the configurations we want         chrome_options = webdriver.ChromeOptions()          # Add the mobile emulation to the chrome options variable         chrome_options.add_experimental_option(""mobileEmulation"", mobile_emulation)          # Create driver, pass it the path to the chromedriver file and the special configurations you want to run         self.driver = webdriver.Chrome(chrome_options=chrome_options)      # An individual test case. Must start with 'test_' (as per unittest module)     def test_search_in_python_chrome(self):         # Assigning a local variable for the global driver         driver = self.driver          # Go to google.com         driver.get('http://www.google.com')          # A test to ensure the page has keyword Google in the page title         self.assertIn(""Google"", driver.title)            # Find and select the search box element on the page         search_box = driver.find_element_by_name('q')          # Enter text into the search box         search_box.send_keys('Cat gif')          # Make sure the results page returned something         assert ""No results found."" not in driver.page_source          # Submit the search box form         search_box.submit()          # Can also use Keys function to submit         #search_box.send_keys(Keys.RETURN)          # Another pause so we can see what's going on         time.sleep(5)          # Take a screenshot of the results         driver.save_screenshot('screenshot-deskto-chrome.png')      # Anything declared in tearDown will be executed for all test cases     def tearDown(self):         # Close the browser.         # Note close() will close the current tab, if its the last tab it will close the browser. To close the browser entirely use quit()         self.driver.close()  # Boilerplate code to start the unit tests if __name__ == ""__main__"":     unittest.main() ```  I am really not sure what is happening , because i am able to launch the browser using remote webdriver, Any help would be greatly appreciated.","closed","","sri85","2016-09-16T14:32:29Z","2019-08-16T14:09:39Z"
"","2319","Selenium Internet Explorer Issue","I am trying to execute script on Internet Explorer but I am not able to run as showing error of NoSuchWindow Unable to get browser  pls help me in same. I am working in Geb Framework using groovy what changes need to be done on GebConfig.groovy please assist","closed","","Rajsh123","2016-06-20T12:33:10Z","2019-08-20T02:09:38Z"
"","2456","Download file in IE","I am trying to download a file from website using selenium webdriver using c#. I am able to do it with following code: Thread ts = new Thread(new ThreadStart(() => viewfile.Click())); ts.Start(); Here Viewfile is the link which downloads after click. It works fine. Then I have this code to save: System.Threading.Thread.Sleep(5000); System.Windows.Forms.SendKeys.SendWait(""%(s)""); System.Threading.Thread.Sleep(1000); It saves correctly. Then after 60 seconds, I am getting this exception: An unhandled exception of type 'OpenQA.Selenium.WebDriverException' occurred in WebDriver.dll Additional information: The HTTP request to the remote WebDriver server for URLhttp://localhost:49340/session/1ef08ce8-ccc3-444b-becb-589262b9d98b/element/4911d35b-367c-4eab-b407-b2d7d0de8e7b/click timed out after 60 seconds. It looks like that the click happened in different thread is not returning the control back to webdriver. Please suggest to handle this error.","closed","","madhavisama","2016-07-12T19:29:31Z","2019-08-19T23:09:35Z"
"","2389","Download File from IE and Selinium webdriver click timed out after 60 seconds","I am trying to download a file from website using selenium webdriver using c#. I am able to do it with following code:         Thread ts = new Thread(new ThreadStart(() => viewfile.Click()));         ts.Start(); Here Viewfile is the link which downloads after click. It works fine. Then I have this code to save:     System.Threading.Thread.Sleep(5000);     System.Windows.Forms.SendKeys.SendWait(""%(s)"");     System.Threading.Thread.Sleep(1000); It saves correctly. Then after 60 seconds, I am getting this exception: An unhandled exception of type 'OpenQA.Selenium.WebDriverException' occurred in WebDriver.dll Additional information: The HTTP request to the remote WebDriver server for URLhttp://localhost:49340/session/1ef08ce8-ccc3-444b-becb-589262b9d98b/element/4911d35b-367c-4eab-b407-b2d7d0de8e7b/click timed out after 60 seconds. It looks like that the click happened in different thread is not returning the control back to webdriver. Please suggest to handle this error.","closed","","madhavisama","2016-06-27T14:18:44Z","2019-08-19T10:09:50Z"
"","2573","How to pass Firefox profile within console as argument?","I am starting Selenium(3) jar file from within the command line using: ""java -jar selenium.jar""  How can I specify within the console, which firefox profile it should use? When using webdriver for selenium 2.x, I could use the option ""-firefoxProfileTemplate"", which seems to not exist anymore for selenium 3.","closed","","novacp","2016-08-04T10:06:17Z","2019-08-19T20:09:58Z"
"","2345","Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms.","I am having Firefox with version 48.0b1 and Selenium with version 2.53. When I tried to open firefox browser with specified url. only the browser is getting opened without the url.  I am getting following error as Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms.  Please help how to resolve this issue","closed","","nivia88","2016-06-23T07:16:46Z","2019-08-20T01:09:52Z"
"","2034","getting exception with chromedriver 2.21","I am getting the below exception  org.openqa.selenium.WebDriverException: unknown error: cannot get automation extension from unknown error: page could not be found: chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/_generated_background_page.html (Session info: chrome=49.0.2623.110)  Kindly update on this","closed","","Sourabh25","2016-04-29T17:29:23Z","2019-08-20T07:09:35Z"
"","2090","Getting Unable to locate an element with the xpath expression ./*[self::thead or self::tbody or self::tfoot]/tr","I am getting the below error, it was working fine with IEDriverServer_v_2.52 but with v_2.53 it is giving this error. Anyone can suggest why this is happening or its a bug in IE Driver.  STR:- I have locate the table object. Then i tried to find all its row within 'thead,tbody,tfoot'.   org.openqa.selenium.InvalidSelectorException: Unable to locate an element with the xpath expression ./_[self::thead or self::tbody or self::tfoot]/tr because of the following error:  [object Error](WARNING: The server did not provide any stacktrace information)  Command duration or timeout: 67 milliseconds  For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html  Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40'  System info: host: 'WIN-H0KUUCLPECI', ip: '10.0.0.90', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'  Driver info: org.openqa.selenium.ie.InternetExplorerDriver  Capabilities [{browserAttachTimeout=0, ie.enableFullPageScreenshot=true, enablePersistentHover=false, ie.forceCreateProcessApi=false, ie.forceShellWindowsApi=false, pageLoadStrategy=normal, ignoreZoomSetting=false, ie.fileUploadDialogTimeout=3000, version=10, platform=WINDOWS, proxy={proxyType=}, nativeEvents=true, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=true, browserName=internet explorer, initialBrowserUrl=http://localhost:44423/, javascriptEnabled=true, ignoreProtectedModeSettings=false, enableElementCacheCleanup=true, unexpectedAlertBehaviour=ignore}]  Session ID: 192fca71-ff86-46fd-86bc-a4f806fedd5f  *_\* Element info: {Using=xpath, value=./*[self::thead or self::tbody or self::tfoot]/tr}     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)     at org.openqa.selenium.remote.RemoteWebElement.findElements(RemoteWebElement.java:214)     at org.openqa.selenium.remote.RemoteWebElement.findElementsByXPath(RemoteWebElement.java:299)     at org.openqa.selenium.By$ByXPath.findElements(By.java:356)     at org.openqa.selenium.remote.RemoteWebElement.findElements(RemoteWebElement.java:190)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at com.crestech.opkey.plugin.functiondispatch.CallableMethod.call(CallableMethod.java:30)     at com.crestech.opkey.plugin.functiondispatch.CallableMethod.call(CallableMethod.java:11)     at java.util.concurrent.FutureTask.run(Unknown Source)     at java.lang.Thread.run(Unknown Source)","closed","","TARIFABBAS","2016-05-12T09:19:43Z","2019-08-20T06:09:49Z"
"","2151","Selenium Grid-Hub and Node configuration- Error while registering NODE","I am getting some unexpected error message while trying to register node on WINDOWS machine[Image attached -Node instance screenshot]. Due to which, I am getting an error message [No node with the desired capabilities ""browserName=internet explore,javascriptEnabled-true,version=,platform=WINDOWS"" is found.] while trying to execute test cases on registered node.  Command to start hub: start java -jar C:\selenium-server-standalone-2.50.1.jar -port 4444 -role hub ""browserName=internet explore,javascriptEnabled-true,version=,platform=WINDOWS""  Command to start Node: java -jar C:\Selenium\selenium-server-standalone-2.50.1.jar -port 5556 -role node -hub http://localhost:4444/grid/register ""browserName=internet explore,javascriptEnabled-true,version=,platform=WINDOWS""  ![image](https://cloud.githubusercontent.com/assets/19182349/15479223/bede8790-213c-11e6-9943-50db47e560e9.png) ![image](https://cloud.githubusercontent.com/assets/19182349/15479251/ec1f0ef0-213c-11e6-8bc6-2e477c58e074.png)  NODE: Getting the same error with jar 2.53.0","closed","","ank15","2016-05-23T17:51:41Z","2019-08-20T05:09:46Z"
"","2249","Timed out awaiting response to command ""sendKeysToElement"" after 30001 ms","I am facing timed out exception only in safari when I tried to enter value in either user-name or password field.But in same site click works fine i.e., click on Sign Up for twitter.  I have read in below link that this issue occurs when ""safari is trying to access sites with CSPs (Content Security Policy) but there is no solution how to implement or how to make it work in selenium web-driver.  Link: https://www.bountysource.com/issues/11263955-time-out-using-findelement-sendkeys-on-safari-mac-os-yosemite  I haven't found many resources regarding this issue.  When I am tried to open the link ""https://api.twitter.com/oauth/authenticate?oauth_token=-Yk7MgAAAAAAXNSCAAABVTjDwx4&oauth_callback=https%3A%2F%2Fstagingbiz.bizyhood.com%2Faccounts%2Ftwitter%2Flogin%2Fcallback%2F "" after that when I am trying to enter values in either password field or user-name there the exception raises.  Does this works in safari or not please help me out.  This is my first post here, please ignore if I committed any mistakes.","closed","","navin578","2016-06-10T05:27:15Z","2019-08-20T03:09:47Z"
"","2542","Issue in mouse hover and drag and drop in IE 11 in Selenium grid","I am facing the following issue :  > When native events is set to false, drag and drop is working fine but mouse hover does not work. > When native events is not set or set to true, drag and drop is not working but mouse hover does.  Following is the DesiredCapabilities I am using:  ``` DesiredCapabilities caps = DesiredCapabilities.internetExplorer(); caps.setCapability(InternetExplorerDriver.ENABLE_PERSISTENT_HOVERING, false); caps.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, true); caps.setCapability(InternetExplorerDriver.NATIVE_EVENTS, false); caps.setCapability(""ignoreProtectedModeSettings"", true); aps.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true); caps.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); ```  Platform : Windows 2008 (Windows 7) and Windows 2012 R2 (Windows 8.1) Browser : Internet Explorer 11 Java Selenium : 2.48.2","closed","D-IE,","prakashsarav7","2016-08-01T06:22:33Z","2019-08-16T23:09:44Z"
"","2602","ElementNotVisibleException should not occur","I am creating tests for a public site, http://preview.harriscountyfws.org This is very simple code and can be reproduced. I get ElementNotVisibleException, but the element is clearly visible and should be selectable. Create a blank class in a new application & copy paste the imports into that class, and copy paste the main method into that class, and set the start of the app as main.  You should notice the error.  You might also have to set the correct path of your chromedriver, but this problem is independent of driver (if you set up for a different driver, you will experience the same error).  Please assist:  Add this to your class:     import org.openqa.selenium.By;     import org.openqa.selenium.WebDriver;     import org.openqa.selenium.WebElement;     import org.openqa.selenium.chrome.ChromeDriver;     import org.openqa.selenium.support.ui.Select;  Add this to your new class, and start execution on this class's main():         public static void main(String[] args) {  ```        System.setProperty(""webdriver.chrome.driver"", ""C:\\WebDrivers\\ChromeDriver\\chromedriver.exe"");         final WebDriver driver = new ChromeDriver();         driver.get(""http://preview.harriscountyfws.org/"");         driver.manage().window().maximize();         String searchText;         WebElement selection_element;         WebElement listbox_element;         Select selector;            listbox_element = driver.findElement(By.cssSelector(""span[aria-owns='ddlRegion_listbox']""));         selection_element = driver.findElement(By.cssSelector(""select[id='ddlRegion']""));           listbox_element.click();         Sleep(4);          selector = new Select(selection_element);         selector.selectByVisibleText(""Fort Bend County"");           // driver.quit();      }     public static void Sleep(int i)     {         try { Thread.sleep(i * 300); }         catch(InterruptedException ie) { System.out.println(""Unexpected error in sleep""); }     } ```","closed","","kamleshmistry","2016-08-11T16:09:00Z","2019-08-19T20:09:43Z"
"","1839","Python client keys_to_typing no longer handles non-string iterable","https://github.com/SeleniumHQ/selenium/commit/d095cd2a410cbf8ffd95cac9aed364221151f722 regressed keys_to_typing in the Python client. ## Expected Behavior -  Send list [Keys.ENTER], results in enter key press. ## Actual Behavior -  Send list [Keys.ENTER], results in ""[u'\ue007']"" sent to a text box.","closed","","joshbruning","2016-03-18T04:08:49Z","2019-08-20T10:09:47Z"
"","2546","Trove classifiers are missing from PyPI page","https://github.com/SeleniumHQ/selenium/blob/master/setup.py#L47-L49 shows that Selenium supports Python 3 but these ""trove classifiers"" are missing from [Selenium's PyPI record](https://pypi.python.org/pypi/selenium).  This has caused Selenium to go from green to red on the [Python 3 Wall of Superpowers](http://python3wos.mybluemix.net/).","closed","","cclauss","2016-08-01T17:21:27Z","2019-08-19T21:09:34Z"
"","2005","C# phantomjs fails to submit.","Hi, I'm trying to login into Google using phantomjs and C#, but when I click the next button nothing happens. Just the field lost the focus. Why is this?   ``` csharp using OpenQA.Selenium; using OpenQA.Selenium.PhantomJS; using OpenQA.Selenium.Support.Extensions; using System.Drawing.Imaging;  // Goto url webDriver.Navigate ().GoToUrl (     ""https://accounts.google.com/ServiceLogin#identifier"");  // Write email IWebElement emailField = webDriver.FindElementById(""Email""); emailField.SendKeys (""john@gmail.com"");  //Take a screenshot before and after submit. webDriver.TakeScreenshot().SaveAsFile(""./screenshot.png"", ImageFormat.Png); IWebElement btnNext btnNext = webDriver.FindElementById(""next""); btnNext.Click (); webDriver.TakeScreenshot().SaveAsFile(""./screenshot2.png"", ImageFormat.Png); ```  **BEFORE** ![screenshot](https://cloud.githubusercontent.com/assets/3357792/14764243/42d797ce-09b1-11e6-8fa0-783c92cc8cf4.png)  **AFTER** ![screenshot2](https://cloud.githubusercontent.com/assets/3357792/14764242/42cfece0-09b1-11e6-8285-b098d69c0cb1.png)  -Phantomjs version: 2.2.1 -Selenium version: 2.53","closed","","Zeioth","2016-04-23T23:13:56Z","2019-08-18T08:09:56Z"
"","2062","Virus in archive ?","Hi, I try to download:  http://selenium.googlecode.com/files/selenium-server-2.37.0.zip  It is blocked by my enterprise antivirus:  Content contained ""PUS:NetTool.Win32.ProxySwitcher.d"" virus. Details: Virus: PUS:NetTool.Win32.ProxySwitcher.d; File: selenium-server-2.37.0.zip; Sub File: Memory region/selenium-2.37.0/selenium-server-2.37.0.jar; Vendor: Kaspersky Labs; Engine error code: 0x00010000; Engine version: 8.1.8.79; Pattern version: 160506.054000.7590664; Pattern date: 2016.05.06 05:40:00  Can you check if there's really an issue with viruses in this archive (and the others) or if it's an issue on the antivirus server ?  Thanks Olivier","closed","","orenault","2016-05-06T12:50:12Z","2019-08-20T06:09:56Z"
"","1894","Selenium Grid; RemoteWebDriver timeout","Hi, I have installed grid with two nodes, one browser instance for each node ![](http://i.imgur.com/3eRmFLp.png) But I have some error with it. Could you please explain me how grid should work correctly?  When I start several test fixtures,  1. Started 2 tests in parallel. 2. In hub console always appears message about trying create new session. Is it regular behavior? I don't know. ![](http://i.imgur.com/7RdUWnR.png) 3. Exactly in 60 seconds after running in Visual Studio console appears next error message: ![](http://i.imgur.com/TxAccfm.png) 4. All tests, except first 2 ones, didn't run. I see only opened browser window.  I google this issue a lot. Tried different WebDriver versions. If I run less test fixtures, than there are capabilities on hub, this problem doesn't appear.  Please help. Thanks.","closed","","mr-raptor","2016-03-30T15:00:23Z","2019-08-20T09:09:53Z"
"","2080","Everything under //javascript/webdriver (except the atoms) needs to be deleted.","Hi, can you help me understand why the javascript tree has two versions of WebDriver source code?  https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/lib/webdriver.js#L259  https://github.com/SeleniumHQ/selenium/blob/master/javascript/webdriver/webdriver.js#L82  They seem very much the same functionality but ... different.","closed","I-cleanup,","johnjbarton","2016-05-10T22:04:50Z","2019-08-20T05:09:53Z"
"","2246","org.openqa.selenium.TimeoutException: Timed out waiting for page load.","Hi,  I am using  OS:  Windows 7 Selenium Version:  2.52 Browser:  Firefox 42.0  While clicking one Tab in my application, it is clicking the element,but while the page is loading it is throwing the below error. Below is the log.  org.openqa.selenium.TimeoutException: Timed out waiting for page load. Command duration or timeout: 1.04 seconds Build info: version: '2.52.0', revision: '4c2593cfc3689a7fcd7be52549167e5ccc93ad28', time: '2016-02-11 11:22:43' System info: host: 'MLBBT-A12032', ip: '192.168.9.59', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Session ID: ca99ad5d-c610-4ebd-9934-38917e121659 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=42.0}]","closed","","amitavmishra","2016-06-09T14:00:01Z","2019-08-20T03:10:02Z"
"","2601","Selenium chromedriver can not find element on Polymer website","Hi,  I have automation project use Selenium Chrome webdriver. When test on a website was made by Polymer framwork, I see Chromedriver can not find element or get text from site.  Ex url: https://shop.polymer-project.org/ Chromedriver can not get element inner node ""shadow-root"". exit error is element is not found - Chrome Version 52.0.2743.116 m) - Selenium-server-standalone version 2.53 - ChromeDriver version 2.23  I have use FirefoxDriver is working fine.  i user Firefox version 4.6  so are there anyway to run automation script by chromedriver for Polymer website ?  Many Thanks","closed","","huanleapp","2016-08-11T08:47:23Z","2019-08-19T20:09:48Z"
"","1845","web driver is entering characters very slow even with IE driver server 32 bit","Hi, I am using IE-64 bit and IE driver server as 32 bit.Previously i was using IE-64 bit and driver server also 64 bit.Based some articles i have changed the IE driver server to 32 bit for fast execution.After changing also i did not see any difference.To enter one character it is taking 2-3 seconds time.Any one help me with this issue..","closed","D-IE,","sandhyajakku","2016-03-18T18:34:46Z","2021-09-05T09:03:04Z"
"","1879","Jenkins plugin","Hi,  Sorry to post this here, but I don't know where exactly to post this. So, like a lot of people here, I use Jenkins to launch my tests. Today, I launch manually my hub and my nodes (host on openstack). Which is painful. I have two questions: - How do you manage your grid? - Why the [jenkins plugin](https://github.com/jenkinsci/selenium-plugin) is not handle by the Selenium team itself? This one is not anymore maintained but it could be really useful if used with a jenkins slave.","closed","","thibaut-sticky","2016-03-25T08:58:01Z","2019-08-20T09:10:02Z"
"","2071","Selenium and firefox version compatible","HI,  I am using below version of Firefox and selenium.  Firefox: 45.0 selenium: selenium-server-standalone-2.48.0  is it selenium-server-standalone-2.48.0 compatible with Firefox: 45.0?  Thanks,","closed","D-firefox,","naveenabt","2016-05-10T05:43:38Z","2019-08-19T18:09:45Z"
"","2020","PhantomJS webdriver fails to instantiate with Selenium.","Hi,  I am trying to use PhantomJs with Selenium in my following method but my webdriver is failing to instantiate-   def seat_counter(self, base_URL):         path_to_phantomJS = 'C:\Program Files (x86)\phantomjs-2.1.1-windows\bin'         driver = webdriver.PhantomJS(executable_path=path_to_phantomJS)         driver.get(base_URL)  However I am repeatedly getting this error - Error in executing trigger_seat_counter at time 1461834949.2 Exception AttributeError: ""'Service' object has no attribute 'process'"" in  ignored  Selenium version is 2.53.2 and PhantomJS version is 2.1.1 OS : Windows Have added the phantom executable to my path variable.  I tried to ignore the attribute error by implementing a try, except as recommended in the post - http://stackoverflow.com/questions/27674088/scrapy-with-selenium-webdriver-failing-to-instantiate  However this does not work for me as the method execution still nontheless stops.  Any help would be much appreciated :)  Thanks a lot, Kshitij","closed","","Kshitij9210","2016-04-28T09:25:02Z","2019-08-19T09:09:52Z"
"","2394","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms","Hi,  I am able to run this code in other browsers but i am not able to run in FireFox. Can any one help on this Issue.   org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: assic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1465086452000,""updateDate"":1465086452000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22006,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1467116496271   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1467116496274   DeferredSave.extensions.json    DEBUG   Save changes 1467116496274   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1467116496274   addons.xpi-utils    DEBUG   Updating add-on states 1467116496278   addons.xpi-utils    DEBUG   Writing add-ons list 1467116496284   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1467116496291   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1467116496291   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1467116496293   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1467116496294   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1467116496296   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1467116496331   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1467116496331   addons.manager  DEBUG   Provider finished startup: XPIProvider 1467116496331   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1467116496331   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1467116496332   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1467116496333   addons.manager  DEBUG   Starting provider: GMPProvider 1467116496347   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1467116496348   addons.manager  DEBUG   Provider finished startup: GMPProvider 1467116496348   addons.manager  DEBUG   Starting provider: PluginProvider 1467116496348   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1467116496348   addons.manager  DEBUG   Provider finished startup: PluginProvider 1467116496349   addons.manager  DEBUG   Completed startup sequence 1467116498177   addons.manager  DEBUG   Starting provider:  1467116498177   addons.manager  DEBUG   Registering shutdown blocker for  1467116498178   addons.manager  DEBUG   Provider finished startup:  1467116498612   DeferredSave.extensions.json    DEBUG   Write succeeded 1467116498612   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1467116498612   DeferredSave.extensions.json    DEBUG   Starting timer 1467116498633   addons.repository   DEBUG   No addons.json found. 1467116498634   DeferredSave.addons.json    DEBUG   Save changes 1467116498638   DeferredSave.addons.json    DEBUG   Starting timer 1467116498701   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1467116498701   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1467116498702   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1467116498711   DeferredSave.extensions.json    DEBUG   Starting write 1467116498715   DeferredSave.addons.json    DEBUG   Starting write 1467116499072   DeferredSave.extensions.json    DEBUG   Write succeeded 1467116499080   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at Practice.main(Practice.java:29) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  assic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1465086452000,""updateDate"":1465086452000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22006,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1467116496271   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1467116496274   DeferredSave.extensions.json    DEBUG   Save changes 1467116496274   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1467116496274   addons.xpi-utils    DEBUG   Updating add-on states 1467116496278   addons.xpi-utils    DEBUG   Writing add-ons list 1467116496284   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1467116496291   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1467116496291   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1467116496293   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1467116496294   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1467116496296   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1467116496331   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1467116496331   addons.manager  DEBUG   Provider finished startup: XPIProvider 1467116496331   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1467116496331   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1467116496332   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1467116496333   addons.manager  DEBUG   Starting provider: GMPProvider 1467116496347   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1467116496348   addons.manager  DEBUG   Provider finished startup: GMPProvider 1467116496348   addons.manager  DEBUG   Starting provider: PluginProvider 1467116496348   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1467116496348   addons.manager  DEBUG   Provider finished startup: PluginProvider 1467116496349   addons.manager  DEBUG   Completed startup sequence 1467116498177   addons.manager  DEBUG   Starting provider:  1467116498177   addons.manager  DEBUG   Registering shutdown blocker for  1467116498178   addons.manager  DEBUG   Provider finished startup:  1467116498612   DeferredSave.extensions.json    DEBUG   Write succeeded 1467116498612   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1467116498612   DeferredSave.extensions.json    DEBUG   Starting timer 1467116498633   addons.repository   DEBUG   No addons.json found. 1467116498634   DeferredSave.addons.json    DEBUG   Save changes 1467116498638   DeferredSave.addons.json    DEBUG   Starting timer 1467116498701   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1467116498701   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1467116498702   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1467116498711   DeferredSave.extensions.json    DEBUG   Starting write 1467116498715   DeferredSave.addons.json    DEBUG   Starting write 1467116499072   DeferredSave.extensions.json    DEBUG   Write succeeded 1467116499080   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: '2.51.0', revision: '1af067d', time: '2016-02-05 19:15:17' System info: host: 'TVMATP403807D', ip: '10.155.245.141', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_77' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:124)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124)     at Practice.main(Practice.java:29) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: assic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1465086452000,""updateDate"":1465086452000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22006,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1467116496271   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1467116496274   DeferredSave.extensions.json    DEBUG   Save changes 1467116496274   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1467116496274   addons.xpi-utils    DEBUG   Updating add-on states 1467116496278   addons.xpi-utils    DEBUG   Writing add-ons list 1467116496284   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1467116496291   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1467116496291   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1467116496293   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1467116496294   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1467116496296   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1467116496331   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1467116496331   addons.manager  DEBUG   Provider finished startup: XPIProvider 1467116496331   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1467116496331   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1467116496332   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1467116496333   addons.manager  DEBUG   Starting provider: GMPProvider 1467116496347   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1467116496348   addons.manager  DEBUG   Provider finished startup: GMPProvider 1467116496348   addons.manager  DEBUG   Starting provider: PluginProvider 1467116496348   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1467116496348   addons.manager  DEBUG   Provider finished startup: PluginProvider 1467116496349   addons.manager  DEBUG   Completed startup sequence 1467116498177   addons.manager  DEBUG   Starting provider:  1467116498177   addons.manager  DEBUG   Registering shutdown blocker for  1467116498178   addons.manager  DEBUG   Provider finished startup:  1467116498612   DeferredSave.extensions.json    DEBUG   Write succeeded 1467116498612   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1467116498612   DeferredSave.extensions.json    DEBUG   Starting timer 1467116498633   addons.repository   DEBUG   No addons.json found. 1467116498634   DeferredSave.addons.json    DEBUG   Save changes 1467116498638   DeferredSave.addons.json    DEBUG   Starting timer 1467116498701   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1467116498701   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1467116498702   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1467116498711   DeferredSave.extensions.json    DEBUG   Starting write 1467116498715   DeferredSave.addons.json    DEBUG   Starting write 1467116499072   DeferredSave.extensions.json    DEBUG   Write succeeded 1467116499080   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) ... 7 more ```","closed","","SabariGanesh1987","2016-06-28T12:27:39Z","2019-08-20T00:09:56Z"
"","2534","Suggestion: Developer experience - one entry point for web console","Hi there, currently there is afaik no unified entry point to selenium server web console - the URL differs depending on whether it is started as hub or if it is started in as standalone server. That makes it confusing especially for newcomers.  Compare behavior in both cases: 1) Standalone: `java -jar selenium-server-standalone-2.53.1.jar`  2) Hub: `java -jar selenium-server-standalone-2.53.1.jar -role hub`  | URL | 1) Standalone | 2) Hub | | --- | --- | --- | | http://127.0.0.1:4444/ | HTTP 403 | Page ""You are using grid ... "" + link to http://127.0.0.1:4444/grid/console | | http://127.0.0.1:4444/wd/hub | **Web console with sessions list** | JSON with Grid exception (???) | | http://127.0.0.1:4444/grid/console | HTTP 403 | **Web console with list of nodes** |  I suggest adding some simple signpost page to the root URL when run in the standalone mode - similar to one which is shown in the hub mode.","closed","","OndraM","2016-07-28T17:22:08Z","2019-08-19T11:10:00Z"
"","2111","Shall we get float from WebElement.getSize or WebElement.getLocation?","Hi guys, I wrote a test case, to check whether some elements in the page is correctly aligned, which means they're all at the same size & height as well as share the same gap width. However, I found that WebElement.getLocation() will return a Point, which contains two **int** type. This may lead to a mis-calculate in the case, for the element's position in JS is presented in **float**. So any chance we get a float version of WebElement.getLocation() and WebElement.getSize()?","closed","","Handsome2734","2016-05-17T02:02:33Z","2019-08-19T09:10:00Z"
"","1801","Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.","hi guys i have this problem after running this code   package test1;  import java.net.MalformedURLException; import java.net.URL;  import org.junit.After; import org.junit.Before; import org.junit.Test;  import io.appium.java_client.AppiumDriver; import io.appium.java_client.ios.IOSDriver; import org.openqa.selenium.remote.DesiredCapabilities; /* - */   public class FirsTest1 {      public static AppiumDriver dr;      public static void main(String[] args)   throws MalformedURLException{        DesiredCapabilities capabilities = new DesiredCapabilities();        capabilities.setCapability(""deviceName"",""iPhone 5"");        capabilities.setCapability(""platformName"",""iOS"");        capabilities.setCapability(""platformVersion"",""8.1"");        capabilities.setCapability(""appPackage"",""Setting"");    dr=new IOSDriver(new URL(""http://127.0.0.1:4723/wd/hub""),capabilities);   //capabilities.setCapability(""appActivity"",""com.android.contacts.activities.PeopleActivity"");   }}  Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:03:33' System info: host: 'users-iMac.local', ip: '192.168.1.21', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.7.0_80' Driver info: driver.version: IOSDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)     at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:42)     at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)     at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144)     at io.appium.java_client.DefaultGenericMobileDriver.(DefaultGenericMobileDriver.java:37)     at io.appium.java_client.AppiumDriver.(AppiumDriver.java:162)     at io.appium.java_client.AppiumDriver.(AppiumDriver.java:171)     at io.appium.java_client.ios.IOSDriver.(IOSDriver.java:56)     at test1.FirsTest1.main(FirsTest1.java:31) Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:03:33' System info: host: 'users-iMac.local', ip: '192.168.1.21', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.7.0_80' Driver info: driver.version: IOSDriver     at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:79)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     ... 11 more Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused     at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)     at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)     at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)     at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:67)     ... 12 more Caused by: java.net.ConnectException: Connection refused     at java.net.PlainSocketImpl.socketConnect(Native Method)     at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)     at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)     at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)     at java.net.Socket.connect(Socket.java:579)     at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)     at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)     ... 25 more","closed","","hajarbabour","2016-03-14T12:17:02Z","2019-08-19T23:09:44Z"
"","2778","Firefox died when handling multiple windows in selenium web driver","Hi all,   I'm getting below error when we switch from one window to another window in firefox and i can't able to locate web element in new window please help me on this!!!!!!  [TestNG] Running:   C:\Users\apptivo\AppData\Local\Temp\testng-eclipse-665293667\testng-customsuite.xml  Amazon.in: moto g4 plus - Smartphones / Smartphones & Basic Mobiles: Electronics {6c69c5eb-b633-489d-b379-d364b5ac2693} PASSED: SearchItem FAILED: SelectItem org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.48.2', revision: '41bccdd', time: '2015-10-09 19:55:52' System info: host: 'DESKTOP-PETKCBJ', ip: '10.80.129.188', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_102' Driver info: driver.version: RemoteWebDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:641)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:490)     at org.openqa.selenium.By$ByXPath.findElement(By.java:361)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:345)     at amaz.AmTest.SelectItem(AmTest.java:41)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:821)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)     at org.testng.TestRunner.privateRun(TestRunner.java:773)     at org.testng.TestRunner.run(TestRunner.java:623)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)     at org.testng.SuiteRunner.run(SuiteRunner.java:259)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1185)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1110)     at org.testng.TestNG.run(TestNG.java:1018)     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175) Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:7057 [/127.0.0.1] failed: Connection refused: connect     at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)     at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)     at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:161)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:89)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:170)     at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:620)     ... 29 more Caused by: java.net.ConnectException: Connection refused: connect     at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)     at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)     at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)     at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)     at java.net.AbstractPlainSocketImpl.connect(Unknown Source)     at java.net.PlainSocketImpl.connect(Unknown Source)     at java.net.SocksSocketImpl.connect(Unknown Source)     at java.net.Socket.connect(Unknown Source)     at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)     at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)     ... 44 more #   ``` Default test Tests run: 2, Failures: 1, Skips: 0 ``` #  #   Default suite # Total tests run: 2, Failures: 1, Skips: 0  [TestNG] Time taken by org.testng.reporters.SuiteHTMLReporter@6a38e57f: 464 ms [TestNG] Time taken by org.testng.reporters.jq.Main@4ac68d3e: 245 ms [TestNG] Time taken by [FailedReporter passed=0 failed=0 skipped=0]: 19 ms [TestNG] Time taken by org.testng.reporters.XMLReporter@57fa26b7: 54 ms [TestNG] Time taken by org.testng.reporters.EmailableReporter2@4c3e4790: 46 ms [TestNG] Time taken by org.testng.reporters.JUnitReportReporter@19e1023e: 49 ms","closed","","rammprasathh","2016-09-15T12:55:18Z","2019-08-19T17:09:41Z"
"","2157","UI Issuese on Linux and Firefox 46,","Hi All,  I'm facing UI changes on combination of  Linux and Firefox 46, we are facing some UI Issuses. I think all these is because of Firefox is deprecating  XUL or XPOM based addons. Since Selenium IDE is XUL based addon, what is it's impact on a long run. Even though Firefox support these addons upto End of 2017, after that is it possible to build a addon like selenium IDE with the new avaliable API's??  Can you please share your comments and future of Selenium IDE.","closed","C-ide,","lokeshreddy1706","2016-05-24T05:10:50Z","2019-08-17T14:09:41Z"
"","2432","Firefox profile is automatically downloaded when run from Jenkins server","Hi All  I am getting below error when I run from Jenkins Server Silenium version:2.53.1 FirFox:47.1 Nunit3  1467802162971   addons.manager  DEBUG   Application has been upgraded 1467802163033   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/addons/XPIProvider.jsm: [""XPIProvider""] 1467802163037   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/LightweightThemeManager.jsm: [""LightweightThemeManager""] 1467802163043   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/addons/GMPProvider.jsm 1467802163046   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/addons/PluginProvider.jsm 1467802163048   addons.manager  DEBUG   Starting provider: XPIProvider 1467802163048   addons.xpi  DEBUG   startup 1467802163050   addons.xpi  INFO    Mapping fxdriver@googlecode.com to C:\Users\jenkinsuser\AppData\Local\Temp\anonymous.44273d20cf514655988f92acc3df03ee.webdriver-profile\extensions\fxdriver@googlecode.com 1467802163051   addons.xpi  INFO    SystemAddonInstallLocation directory is missing 1467802163052   addons.xpi  INFO    Mapping e10srollout@mozilla.org to C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1467802163053   addons.xpi  INFO    Mapping firefox@getpocket.com to C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1467802163054   addons.xpi  INFO    Mapping loop@mozilla.org to C:\Program Files\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1467802163056   addons.xpi  INFO    Mapping {972ce4c6-7e08-4474-a285-3208198ce6fd} to C:\Program Files\Mozilla Firefox\browser\extensions{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi 1467802163056   addons.xpi  DEBUG   Skipping unavailable install location app-system-share 1467802163057   addons.xpi  DEBUG   Skipping unavailable install location app-system-local 1467802163058   addons.xpi  DEBUG   checkForChanges 1467802163059   addons.xpi  DEBUG   Loaded add-on state from prefs: {} 1467802163059   addons.xpi  DEBUG   New add-on fxdriver@googlecode.com in app-profile 1467802163060   addons.xpi  DEBUG   getModTime: Recursive scan of fxdriver@googlecode.com 1467802163096   addons.xpi  DEBUG   New add-on e10srollout@mozilla.org in app-system-defaults 1467802163097   addons.xpi  DEBUG   getModTime: Recursive scan of e10srollout@mozilla.org 1467802163098   addons.xpi  DEBUG   New add-on firefox@getpocket.com in app-system-defaults 1467802163099   addons.xpi  DEBUG   getModTime: Recursive scan of firefox@getpocket.com 1467802163099   addons.xpi  DEBUG   New add-on loop@mozilla.org in app-system-defaults 1467802163099   addons.xpi  DEBUG   getModTime: Recursive scan of loop@mozilla.org 1467802163101   addons.xpi  DEBUG   New add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} in app-global 1467802163101   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1467802163101   addons.xpi  DEBUG   getInstallState changed: true, state: {""app-profile"":{""fxdriver@googlecode.com"":{""d"":""C:\Users\jenkinsuser\AppData\Local\Temp\anonymous.44273d20cf514655988f92acc3df03ee.webdriver-profile\extensions\fxdriver@googlecode.com"",""st"":1467802162077,""mt"":1467195758000}},""app-system-defaults"":{""e10srollout@mozilla.org"":{""d"":""C:\Program Files\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi"",""st"":1467619964295},""firefox@getpocket.com"":{""d"":""C:\Program Files\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi"",""st"":1467619964290},""loop@mozilla.org""","closed","","nitinsr013","2016-07-06T11:21:07Z","2019-08-19T23:09:56Z"
"","2752","how to manage Faulty node from test code","Hi , I have a situation where my android emulator nodes crashes occasionally. The reason for this could be long hrs of execution. In my emulator farm of 8 emulators ,if any one node crashes all the remaining test are executed on that node and fails for that device not found error. I tried to add a node recovery script for that node but by the time node comes back, all the tests are already failed. My question: is there any way :  1. I can block any more tests sent (from test code or grid config)  to this node till node is up and running again 2. I can quickly (with in 1 or 2 sec ) remove this node from grid (currently if we remove the node it take a min to unregister it from grid )  Or any other solution experts can suggest.  Thanks in advance.","closed","","jayantsarda","2016-09-09T17:27:26Z","2019-08-19T16:09:40Z"
"","1945","last version of firefox doesn't work with webdriver","hey,  i made a bot that worked perfectly with the previous version of firefox using selenium but now after updating firefox, i've a little issue that i dont really understand. here is my code (where error is):  ``` def init():         firefox_profile = webdriver.FirefoxProfile()         #firefox_profile = webdriver.FirefoxProfile(""/Applications/Firefox.app/Contents/MacOS"")         firefox_profile.set_preference(""browser.privatebrowsing.autostart"", True)         driver = webdriver.Firefox(firefox_profile=firefox_profile)         #driver = webdriver.Firefox()         driver.set_window_size(480, 320)         driver.set_window_position(1100, 0)         return (driver) ```  (when i run my script it's open a new firefox window, it wait 10 secondes on index page and window crash with an error in console) i have try too without profile, i've same error on line driver = webdriver.Firefox().  and here's the error i get:  ``` Traceback (most recent call last):   File ""/Users/fantasim/ecole42/devPython/automatic_twitter/./following.py"", line 85, in      driver = connexion.init()   File ""/Users/fantasim/ecole42/devPython/automatic_twitter/connexion.py"", line 10, in init     driver = webdriver.Firefox(firefox_profile)   File ""/Library/Python/2.7/site-packages/selenium-2.48.0-py2.7.egg/selenium/webdriver/firefox/webdriver.py"", line 77, in __init__     self.binary, timeout),   File ""/Library/Python/2.7/site-packages/selenium-2.48.0-py2.7.egg/selenium/webdriver/firefox/extension_connection.py"", line 49, in __init__     self.binary.launch_browser(self.profile)   File ""/Library/Python/2.7/site-packages/selenium-2.48.0-py2.7.egg/selenium/webdriver/firefox/firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable()   File ""/Library/Python/2.7/site-packages/selenium-2.48.0-py2.7.egg/selenium/webdriver/firefox/firefox_binary.py"", line 103, in _wait_until_connectable     raise WebDriverException(""Can't load the profile. Profile "" selenium.common.exceptions.WebDriverException: Message: Can't load the profile. Profile Dir: %s If you specified a log_file in the FirefoxBinary constructor, check it for details ```  have u any idea?  thank's","closed","","Fantasim","2016-04-08T10:55:05Z","2019-08-20T09:09:34Z"
"","2369","Webdriver fails to take screenshot randomly","Hello. We are using Chrome v 31.0.1650.57 (we can't update to newer versions) and Selenium Web Driver v 2.53  At the end of our interface tests, we register a screenshot. The problem is that some tests fail to register the screenshot. (We are not using the incognito mode). We cannot trace or reproduce the error.  The same test that had this error, when runned alone, works fine. The same tests that had this error, when runned again with all tests, works fine, but then other test at random have this issue. We tried everything we could find, but we are stuck into this. Can't find a solution anywhere.  We thought that the driver was closing the browser before taking the screenshot, but I when I tried to close manually the browser and take the screenshot, it gave me a different error.  If possible, help us with this issue. This is the error: (It's in asp.Net)  > System.InvalidOperationException : unknown error: cannot take screenshot > from unknown error: Internal error while trying to capture visible region of the current tab > JavaScript stack: > Error: Internal error while trying to capture visible region of the current tab >     at checkForExtensionError (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:14:17) >     at Object.callback (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:37:5) >     at Function.target.(anonymous function) (extensions::SafeBuiltins:19:14) >     at safeCallbackApply (extensions::sendRequest:22:15) >     at handleResponse (extensions::sendRequest:77:7) >   (Session info: chrome=37.0.2062.124) >   (Driver info: chromedriver=2.10.267521,platform=Windows NT 6.3 x86_64) > +++++++++++++++++++ > STACK TRACE: >    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse) >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) >    at OpenQA.Selenium.Remote.RemoteWebDriver.GetScreenshot()  Repeating: Not in incognito mode, not the test error (because the test works), and happens randomly.   Thanks.","closed","","Wyulliam","2016-06-24T18:00:40Z","2019-08-20T01:09:44Z"
"","2749","When is the selenium 3.0.0b3-python release date?","Hello,   Commit 055325c09d78 fixes a bug that causes the Selenium python library to crash on startup. Is there a planned release date for this version?  Due to the size of this repository it is not feasible for us to install directly from Github.","closed","","strokirk","2016-09-09T13:44:44Z","2019-08-19T17:09:54Z"
"","2644","[Feature] Multi-thread parallel execution","Hello,  the new JUnit5 is going to ship with parallel execution:  https://github.com/junit-team/junit5/issues/60  and this is something I'd really want to see in Selenium too.   I have a lot of (more than 300) selenium tests and I have a very complex initialization process before running them: - first import SQL scripts - then import data into database from csv files. - then import some more data from rest API calls. - then perform some data manipulation in the database. - (we are now 10 minutes in the build) - now start executing the tests against the populated database. - Finish (usually takes ~ 2:20 minutes).  My problem is that CircleCI marks my build as timeout (they have a 2-hour limit) and I really can't have a green build :( I can't use selenium-grid because I have no access to CircleCI. I don't want to distribute the selenium tests to run on different machines because then I have to perform the same database initialization on each node and this means that the tests are executed against (potentially) different databases.  Is it possible to align with JUnit5 and provide some sort of parallel execution where tests run in separate tabs or separate browser windows?","closed","","ptahchiev","2016-08-22T14:21:59Z","2019-08-19T19:09:50Z"
"","2012","Consider returning Task in IWait","Generally speaking it is more efficient to do `await Task.Delay(sleepInterval)` than it is to do `Thread.Sleep(sleepInterval)` (as is currently done in `DefaultWait.Until()`).  MSTest for example supports async tests, so one could write code such as `await wait.Until(d => d.Title.Equals(""cheese""))`.","closed","","ohadschn","2016-04-26T10:21:07Z","2019-08-20T07:09:57Z"
"","2135","[js] Marionette support: Remove dev edition enforcement","Follow up on 185755af93571b3a1b0e98dd4fbdc6ca23e8e085. Firefox 46 is now in the release channel. We don't need to rely on Dev Edition by default anymore.   I tested this removal on Mac OS X against Firefox Beta (currently 47, it'll enter release [on June 7th](https://wiki.mozilla.org/RapidRelease/Calendar#Future_branch_dates)). `git grep useDevEdition` didn't return any other place where it was used.  Would you like to review @jleyba @AutomatedTester ?  - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","JohanLorenzo","2016-05-20T14:04:09Z","2016-05-24T18:27:14Z"
"","2289","Fix js type error in Atoms generating","Fix the issue  ``` ‚ûú  selenium git:(master) ./go //javascript/android-atoms:atoms (in /Users/amakhov/www/selenium) Generating export file for bot.inject.executeAsyncScript at build/javascript/atoms/fragments/execute_async_script_exports.js Compiling //javascript/atoms/fragments:execute_async_script:android as build/javascript/atoms/fragments/execute_async_script_android.js Generating export file for bot.inject.executeScript at build/javascript/atoms/fragments/execute_script_exports.js Compiling //javascript/atoms/fragments:execute_script:android as build/javascript/atoms/fragments/execute_script_android.js Generating export file for webdriver.atoms.inject.frame.activeElement at build/javascript/webdriver/atoms/fragments/inject/active_element_exports.js Compiling //javascript/webdriver/atoms/fragments/inject:active_element:android as build/javascript/webdriver/atoms/fragments/inject/active_element_android.js /Users/amakhov/www/selenium/javascript/atoms/frame.js:125: ERROR - actual parameter 1 of bot.frame.isFrame_ does not match formal parameter found   : (Element|null) required: Element     if (bot.frame.isFrame_(elements[i])) {                            ^  1 error(s), 0 warning(s), 97,1% typed go aborted! org.apache.tools.ant.ExitStatusException: Java returned: 1  (See full trace by running task with --trace) ``` - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-atoms,","makhov","2016-06-15T07:49:33Z","2016-10-27T21:10:31Z"
"","1912","Fail if an error is not thrown.","Fix test that intends to check that an error is thrown but doesn't. fail() throws an Error which was previously ignored under the same condition that the expected Error was ignored.","closed","","joshbruning","2016-04-04T15:52:16Z","2016-04-07T17:52:11Z"
"","2605","ChromeDriver and OperaDriver fail when running tests on Visual Studio Team Services (VS Online)","Firstly, I have no idea where the problem actually is, in Selenium code, ChromeDriver code or maybe something caused by the VS side, so I apologize in advance if this is not the proper place to place this.  OS:  Windows 10 Selenium Version: 2.53.1 Browser:  Chrome and Opera  We're using MSTest with Team Services (Visual Studio Online) builds to run our Selenium Tests. FirefoxDriver and InternetExplorerDriver are running correctly, however ChromeDriver and OperaDriver are failing everytime, without even being able to open the browser. They fail everytime with the following stacktrace:  Initialization method WebUnitTests.Tests.DatacenterTests.TestInitialize threw exception. OpenQA.Selenium.WebDriverException: OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:1410/session timed out after 60 seconds. --->  System.Net.WebException: The operation has timed out.  at System.Net.HttpWebRequest.GetResponse() at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request) --- End of inner exception stack trace --- at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request) at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities) at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeOptions options) at WebUnitTests.Framework.Utilities.Driver.StartBrowser(BrowserTypes browserType, Int32 defaultTimeOut) in C:\agent2_work\1\s\WebUnitTests\Framework\Utilities\Driver.cs:line 37 at WebUnitTests.Framework.Utilities.BaseTests.InitializeBrowser(TestContext testContext) in C:\agent2_work\1\s\WebUnitTests\Framework\Utilities\BaseTests.cs:line 328 at WebUnitTests.Framework.Utilities.BaseTests.TestInitialize() in C:\agent2_work\1\s\WebUnitTests\Framework\Utilities\BaseTests.cs:line 147 What I'm using to start the driver:  var chromeOptions = new ChromeOptions(); chromeOptions.AddArgument(""--ignore-certificate-errors""); var chromeBrowser = new ChromeDriver(chromeOptions); One very important thing to mention is that if I'm running the tests on my local machine everything works fine, the issue is only when they're run in CI.  Any ideas in what I could try to find the root problem? Any workarounds to solve this?","closed","","CosminGramada","2016-08-11T21:01:50Z","2019-08-19T20:09:44Z"
"","2189","[js] Turn on marionette by default when creating new Firefox Options","Firefox 47 will go [release on July 7th](https://wiki.mozilla.org/RapidRelease/Calendar). After that date, Marionette will be the only way for Selenium to connect. I'd propose to turn it on by default. What do you think @jleyba ?  - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-firefox,","JohanLorenzo","2016-05-31T16:19:45Z","2016-06-15T18:22:24Z"
"","1887","Selenium webdriver exception","Exception in thread ""main"" java.lang.NoClassDefFoundError: org/openqa/selenium/WebDriver     at java.lang.Class.getDeclaredMethods0(Native Method)     at java.lang.Class.privateGetDeclaredMethods(Class.java:2701)     at java.lang.Class.privateGetMethodRecursive(Class.java:3048)     at java.lang.Class.getMethod0(Class.java:3018)     at java.lang.Class.getMethod(Class.java:1784)     at sun.launcher.LauncherHelper.validateMainClass(LauncherHelper.java:544)     at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:526) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.WebDriver     at java.net.URLClassLoader.findClass(URLClassLoader.java:381)     at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)     at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     ... 7 more","closed","","ghost","2016-03-28T07:46:12Z","2019-08-22T07:55:04Z"
"","2209","problem in eclipse","Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.ie.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver. The latest version can be downloaded from http://selenium-release.storage.googleapis.com/index.html     at com.google.common.base.Preconditions.checkState(Preconditions.java:199)     at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)     at org.openqa.selenium.ie.InternetExplorerDriverService.access$0(InternetExplorerDriverService.java:1)     at org.openqa.selenium.ie.InternetExplorerDriverService$Builder.findDefaultExecutable(InternetExplorerDriverService.java:167)     at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)     at org.openqa.selenium.ie.InternetExplorerDriver.setupService(InternetExplorerDriver.java:251)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:172)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:146)     at com.Retigence.Test.Login.main(Login.java:17)","closed","","purimitla15","2016-06-04T05:02:19Z","2019-08-20T04:09:48Z"
"","2743","chrome not opening in new selenium-server-standalone-3.0.0-beta3","Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html     at com.google.common.base.Preconditions.checkState(Preconditions.java:199)     at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)     at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)     at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)     at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)     at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)     at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:116)     at sikuli.Br.main(Br.java:46)","closed","","bismayp","2016-09-08T16:19:57Z","2018-06-11T23:18:10Z"
"","2624","Selecting a command or executing a command/case/suite shouldn't switch to 'Log' tab","Essentially a follow up for https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/3028. I suggest a solution as per https://github.com/SeLite/SeLite/commit/7a8850296d60a97defc77079d112d07ea7bf77de.  If you're willing to accept a pull request, I'll provide one.","closed","C-ide,","peter-kehl","2016-08-18T06:51:50Z","2019-08-17T16:09:55Z"
"","2408","element.clear() and element-click() fail with exception [work fine in IE and Firefox]","element.clear() fails with exception  org.openqa.selenium.InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated   (Session info: chrome=51.0.2704.106)   (Driver info: chromedriver=2.22.397933 (1cab651507b88dec79b2b2a22d1943c01833cc1b),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 32 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'charles-PC', ip: '10.150.100.39', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92' Driver info: org.openqa.selenium.chrome.ChromeDriver","closed","","charlesfradley","2016-06-29T16:50:25Z","2019-08-20T00:09:52Z"
"","2409","element.clear() and element-click() fail with exception [work fine in IE and Firefox]","element.clear() and element-click() fail with exception [work fine in IE and Firefox]  First the exception from element.clear()  org.openqa.selenium.InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated   (Session info: chrome=51.0.2704.106)   (Driver info: chromedriver=2.22.397933 (1cab651507b88dec79b2b2a22d1943c01833cc1b),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 32 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'charles-PC', ip: '10.150.100.39', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92' Driver info: org.openqa.selenium.chrome.ChromeDriver  Now the element.click() exception:  org.openqa.selenium.ElementNotVisibleException: element not visible   (Session info: chrome=51.0.2704.106)   (Driver info: chromedriver=2.22.397933 (1cab651507b88dec79b2b2a22d1943c01833cc1b),platform=Windows NT 10.0.10586 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 26 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58'  ---  The exceptions are reporting that the element is not clickable nor accessible.  This is not true.  The element can be clicked and cleared manually, and Selenium can access them using Firefox and IE with no problems.  this strange behavior is unique to the chromedriver, version 2.22 [latest] in use.  Here is the html involved:    ---  I tried adding a wait with the following resulting exception:  org.openqa.selenium.TimeoutException: Timed out after 15 seconds waiting for element to be clickable: [[ChromeDriver: chrome on XP (42ea63bfbe04b216c70dafeb53031694)] -> xpath: /html/body/div[2]/div[1]/lc-login/div[1]/login-entry/form/input[1]] Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'charles-PC', ip: '10.150.100.39', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_92' Driver info: org.openqa.selenium.chrome.ChromeDriver  ---  It appears that chromedriver does not realize that the element is really clickable, and falsely believes  that it is not ....  The element in question is a text field for entering a user name.   The web page is implemented with  node.js","closed","","charlesfradley","2016-06-29T17:36:11Z","2019-08-20T00:09:42Z"
"","2130","Do not use System.out.println in production code","Do not use System.out.println in production code","closed","","joshbruning","2016-05-19T20:46:27Z","2016-05-19T20:54:11Z"
"","2736","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms","dear all,           when i run selenium test in eclipse, it occurs :      org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: nsion"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":""chrome://fiddlerhook/content/about.xul"",""icons"":{},""iconURL"":""chrome://fiddlerhook/content/fiddlerhook.png"",""icon64URL"":null,""defaultLocale"":{""name"":""FiddlerHook"",""description"":""Integrate Fiddler into Firefox"",""creator"":""Telerik"",""homepageURL"":""https://fiddler2.com/r/?FIDDLERHOOKHELP""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":true,""descriptor"":""F:\\installsoftware\\Fiddler2\\FiddlerHook"",""installDate"":1466393970310,""updateDate"":1466393970310,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":33877,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""4.0"",""maxVersion"":""37.*""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473301845325   DeferredSave.extensions.json    DEBUG   Save changes 1473301845325   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473301845325   addons.xpi-utils    DEBUG   Updating add-on states 1473301845326   addons.xpi-utils    DEBUG   Writing add-ons list 1473301845329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473301845329   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473301845329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473301845330   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473301845331   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473301845331   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473301845373   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473301845374   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473301845374   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473301845374   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473301845374   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473301845374   addons.manager  DEBUG   Starting provider: GMPProvider 1473301845379   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473301845380   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473301845380   addons.manager  DEBUG   Starting provider: PluginProvider 1473301845380   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473301845380   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473301845380   addons.manager  DEBUG   Completed startup sequence 1473301846213   addons.manager  DEBUG   Starting provider:  1473301846213   addons.manager  DEBUG   Registering shutdown blocker for  1473301846214   addons.manager  DEBUG   Provider finished startup:  1473301847220   DeferredSave.extensions.json    DEBUG   Write succeeded 1473301847220   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473301847221   DeferredSave.extensions.json    DEBUG   Starting timer 1473301847233   addons.repository   DEBUG   No addons.json found. 1473301847233   DeferredSave.addons.json    DEBUG   Save changes 1473301847267   DeferredSave.addons.json    DEBUG   Starting timer 1473301848053   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473301848054   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473301848054   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473301848058   DeferredSave.extensions.json    DEBUG   Starting write 1473301848061   DeferredSave.addons.json    DEBUG   Starting write 1473301848107   DeferredSave.extensions.json    DEBUG   Write succeeded 1473301848124   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:314) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:231) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:210) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:123) at com.Test1.main(Test1.java:12) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  nsion"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":""chrome://fiddlerhook/content/about.xul"",""icons"":{},""iconURL"":""chrome://fiddlerhook/content/fiddlerhook.png"",""icon64URL"":null,""defaultLocale"":{""name"":""FiddlerHook"",""description"":""Integrate Fiddler into Firefox"",""creator"":""Telerik"",""homepageURL"":""https://fiddler2.com/r/?FIDDLERHOOKHELP""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":true,""descriptor"":""F:\\installsoftware\\Fiddler2\\FiddlerHook"",""installDate"":1466393970310,""updateDate"":1466393970310,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":33877,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""4.0"",""maxVersion"":""37.*""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473301845325   DeferredSave.extensions.json    DEBUG   Save changes 1473301845325   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473301845325   addons.xpi-utils    DEBUG   Updating add-on states 1473301845326   addons.xpi-utils    DEBUG   Writing add-ons list 1473301845329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473301845329   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473301845329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473301845330   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473301845331   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473301845331   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473301845373   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473301845374   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473301845374   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473301845374   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473301845374   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473301845374   addons.manager  DEBUG   Starting provider: GMPProvider 1473301845379   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473301845380   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473301845380   addons.manager  DEBUG   Starting provider: PluginProvider 1473301845380   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473301845380   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473301845380   addons.manager  DEBUG   Completed startup sequence 1473301846213   addons.manager  DEBUG   Starting provider:  1473301846213   addons.manager  DEBUG   Registering shutdown blocker for  1473301846214   addons.manager  DEBUG   Provider finished startup:  1473301847220   DeferredSave.extensions.json    DEBUG   Write succeeded 1473301847220   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473301847221   DeferredSave.extensions.json    DEBUG   Starting timer 1473301847233   addons.repository   DEBUG   No addons.json found. 1473301847233   DeferredSave.addons.json    DEBUG   Save changes 1473301847267   DeferredSave.addons.json    DEBUG   Starting timer 1473301848053   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473301848054   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473301848054   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473301848058   DeferredSave.extensions.json    DEBUG   Starting write 1473301848061   DeferredSave.addons.json    DEBUG   Starting write 1473301848107   DeferredSave.extensions.json    DEBUG   Write succeeded 1473301848124   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: 'unknown', revision: 'c7b525d', time: '2016-09-01 14:52:30 -0700' System info: host: '******_', ip: '**_.**_.**_.**_', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_51' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:314)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:231)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:210)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:123)     at com.Test1.main(Test1.java:12) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: nsion"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":""chrome://fiddlerhook/content/about.xul"",""icons"":{},""iconURL"":""chrome://fiddlerhook/content/fiddlerhook.png"",""icon64URL"":null,""defaultLocale"":{""name"":""FiddlerHook"",""description"":""Integrate Fiddler into Firefox"",""creator"":""Telerik"",""homepageURL"":""https://fiddler2.com/r/?FIDDLERHOOKHELP""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":true,""descriptor"":""F:\\installsoftware\\Fiddler2\\FiddlerHook"",""installDate"":1466393970310,""updateDate"":1466393970310,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":33877,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""4.0"",""maxVersion"":""37._""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1473301845325   DeferredSave.extensions.json    DEBUG   Save changes 1473301845325   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473301845325   addons.xpi-utils    DEBUG   Updating add-on states 1473301845326   addons.xpi-utils    DEBUG   Writing add-ons list 1473301845329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1473301845329   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.1 1473301845329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1473301845330   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473301845331   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1473301845331   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.4 1473301845373   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473301845374   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473301845374   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473301845374   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473301845374   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473301845374   addons.manager  DEBUG   Starting provider: GMPProvider 1473301845379   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473301845380   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473301845380   addons.manager  DEBUG   Starting provider: PluginProvider 1473301845380   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473301845380   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473301845380   addons.manager  DEBUG   Completed startup sequence 1473301846213   addons.manager  DEBUG   Starting provider:  1473301846213   addons.manager  DEBUG   Registering shutdown blocker for  1473301846214   addons.manager  DEBUG   Provider finished startup:  1473301847220   DeferredSave.extensions.json    DEBUG   Write succeeded 1473301847220   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473301847221   DeferredSave.extensions.json    DEBUG   Starting timer 1473301847233   addons.repository   DEBUG   No addons.json found. 1473301847233   DeferredSave.addons.json    DEBUG   Save changes 1473301847267   DeferredSave.addons.json    DEBUG   Starting timer 1473301848053   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473301848054   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473301848054   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473301848058   DeferredSave.extensions.json    DEBUG   Starting write 1473301848061   DeferredSave.addons.json    DEBUG   Starting write 1473301848107   DeferredSave.extensions.json    DEBUG   Write succeeded 1473301848124   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 8 more ```  OS:  win7 x64  Selenium Version:  selenium-java-3.0.0-beta3 Browser:  48.0.2  At same time my GECKODRIVER version is geckodriver-v0.10.0-win64.  My code is :      package com;  import org.openqa.selenium.WebDriver;  import org.openqa.selenium.firefox.FirefoxDriver;  public class Test1 {     public static void main(String[] args) {         System.setProperty(""webdriver.firefox.marionette"", ""F:\ÂéãÊµã\selenium\geckodriver.exe"");         WebDriver driver = new FirefoxDriver();         driver.get(""http://www.baidu.com"");         driver.quit();         } } I am is tiro,Who can help me?","closed","","waiting0729","2016-09-08T03:11:12Z","2019-08-15T04:10:03Z"
"","2273","Chromedriver lookup became broken in 2.53.1 (Ruby binding)","Currently when starting tests, I get the following error:  ``` Unable to find the chromedriver executable. Please download the server from http://chromedriver.storage.googleapis.com/index.html and place it somewhere on your PATH. More info at https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. (Selenium::WebDriver::Error::WebDriverError) ```  It seems to be because of the following change in selenium-webdriver 2.53.1 (inside Selenium::Webdriver::Platform#find_binary): `exe = File.join(path, binary_name)` was changed into `exe = Dir.glob(File.join(path, binary_name)).first`.  Ruby binding Ruby version: 1.9.3 OS:  Windows 7 Selenium Version:  2.53.1 Browser:  Chrome Browser Version:  51.0.2704.84 m","closed","C-rb,","abotalov","2016-06-13T12:17:09Z","2019-08-20T02:10:01Z"
"","2079","Problems with resolving hostname in Python webdriver","Currently the Python Webdriver's Remote interface resolves the domain name to an IP and this is causing some issues with our users. Can the Python webdriver behaviour be made consistent with other drivers/browsers/curl, ie: request on a domain name rather than IP address.  The current `RemoteConnection` implementation already has `resolve_ip` parameter, that can be toggled to change the behaviour. This option isn't exposed on the Remote Webdriver API. Are there any drawbacks to making the HTTP request by hostname that I am missing?  If this change sounds feasible, I will be giving a PR to do it!","closed","","ngsankha","2016-05-10T19:22:28Z","2019-08-20T06:09:53Z"
"","2070","Feature Request - Node : Prepare to shutdown / Accept no more sessions","Currently if I call http://node:port/selenium-server/driver/?cmd=shutDownSeleniumServer the node shuts down. currently running connections are killed etc.  I'd like to request a feature to instruct the node to not accept any new sessions. That way existing sessions are able to complete and the node in question can be removed from the grid with minimal impact.  For extra functionality there should be a ""Return To Service"" function.  ## Background -  On a busy grid it's hard to decommission a node without impacting some tests. ## Expected Behavior -  http://node:port/selenium-server/driver/?cmd=prepareToShutdown New sessions are rejected.","closed","selenium-4,","timothyclarke","2016-05-09T11:13:47Z","2021-09-05T08:34:58Z"
"","2684","js: impossible to run parallel testing with built-in mocha on cloud providers such as browserstack","Currently [javascript/node/selenium-webdriver/testing/index.js](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/testing/index.js#L70) always uses default controlFlow:  ``` js var flow = promise.controlFlow(); ```  When I tried to run my tests on browserstack in parallel I've adopted [parallel flows example](https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/example/parallel_flows.js) as following:  ``` js var webdriver = require('selenium-webdriver'),   By = webdriver.By,   until = webdriver.until,   test = require('selenium-webdriver/testing');  var caps = [   {     'browserName' : 'chrome',     'os' : 'Windows',     'os_version' : '7',   },   {     'browserName' : 'firefox',     'os' : 'Windows',     'os_version' : '7',   } ];  for (var i = 0; i < caps.length; i++) {   (function(i) {      test.describe('Google Search (selenium compatible)'+i, function () {       var driver;        test.before(function () {          var flow = new webdriver.promise.ControlFlow()           .on('uncaughtException', function (e) {             console.log('uncaughtException in flow %d: %s', i, e);           });          var capabilities = Object.assign({}, {           'browserstack.user': '',           'browserstack.key': '',           'resolution': '1024x768',         }, caps[i]);          driver = new webdriver.Builder()           .usingServer('http://hub-cloud.browserstack.com/wd/hub')           .withCapabilities(capabilities)           .setControlFlow(flow)  // Comment out this line to see the difference.           .build();        });        test.it('should append query to title'+i, function() {         driver.get('http://www.google.com');         driver.findElement(By.name('q')).sendKeys('webdriver');         driver.findElement(By.name('btnG')).click();         driver.wait(until.titleContains('webdriver'), 2000);       });        test.after(function () {         driver.quit();       });     });    })(i); } ```  But when I run it tests are not actually executed and stdout instantly shows:  ```   Google Search (selenium compatible)0     ‚úì should append query to title0    Google Search (selenium compatible)1     ‚úì should append query to title1     2 passing (60ms) ```  If I comment setting control flow for driver - tests are executed but in serial manner:  ``` js //  .setControlFlow(flow)  // Comment out this line to see the difference. ```  Maybe we should pass `flow` somehow into `test` instance before wrapping mocha globals. Are there any plans for supporting cloud services?  Thx!","closed","I-enhancement,","vitalets","2016-08-30T10:57:54Z","2019-08-17T00:09:41Z"
"","2479","Ruby Commands","Current implementation loads commands into a hash constant, but ideally constants are mutable, and I don't know of any advantage to loading them this way instead of just putting everything into the hash in the first place.  Current implementation is in camelCase (I think to map to the JWP commands, but we're just using it as a key to the aforementioned hash, so these probably should be adjusted to Ruby convention of snake_case.","closed","C-rb,","titusfortner","2016-07-16T00:17:54Z","2019-08-19T02:09:56Z"
"","2101","Fix capabilities created by Firefox options","Creating a pull request in order to get feedback from @AutomatedTester as he mentioned custom profiles were working for some people using Selenium & GeckoDriver (wires). I can't see how it could be working, but I certainly don't want to break it if I'm missing something. I'll add a couple of inline comments too to explain the reasons for the changes. I'm also not sure where the tests are for this particular feature. - [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","davehunt","2016-05-13T08:35:27Z","2016-05-18T10:47:25Z"
"","2259","Feature request: support of window.Notification","Could you please add support of window.Notification to Selenium WebDriver?  Example of  window.Notification: https://jsfiddle.net/yoshi6jp/Umc9A/ Previously closed request: https://github.com/seleniumhq/selenium/issues/1501","closed","","alexKazarin","2016-06-10T16:00:52Z","2019-08-20T03:09:48Z"
"","2449","Fix build for IDEA users: some dependencies had broken paths","Compilation for the module client (Java) was failing on IDEA.  [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","alb-i986","2016-07-11T22:01:03Z","2016-07-12T14:55:41Z"
"","2056","return browser process id to client","client only knows session id of browser process. in my case, i need to know the process id of a browser session to check cpu usage and terminate it if selenium failed to clean session(return browser process id to client).  so i hope selenium expose the process id to client.","closed","","gouchaoer","2016-05-05T02:45:16Z","2019-08-16T05:09:57Z"
"","2768","Clear lastException if it is not the cause.","Clear lastException if it is not the cause.  If another retry or timeout exception would be caused by a false or null value, the last exception is not the cause of the timeout.","closed","","joshbruning","2016-09-13T17:04:01Z","2016-09-13T17:08:04Z"
"","2268","webdriver-manager start issue","C:\Users\Error>webdriver-manager start seleniumProcess.pid: 2792 Exception in thread ""main"" java.lang.UnsupportedClassVersionError: org/openqa/gr id/selenium/GridLauncher : Unsupported major.minor version 51.0         at java.lang.ClassLoader.defineClass1(Native Method)         at java.lang.ClassLoader.defineClass(ClassLoader.java:620)         at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:12 4)         at java.net.URLClassLoader.defineClass(URLClassLoader.java:260)         at java.net.URLClassLoader.access$000(URLClassLoader.java:56)         at java.net.URLClassLoader$1.run(URLClassLoader.java:195)         at java.security.AccessController.doPrivileged(Native Method)         at java.net.URLClassLoader.findClass(URLClassLoader.java:188)         at java.lang.ClassLoader.loadClass(ClassLoader.java:306)         at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:276)         at java.lang.ClassLoader.loadClass(ClassLoader.java:251)         at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:319) Selenium Standalone has exited with code 1","closed","","suryakante","2016-06-12T07:02:37Z","2019-08-20T03:09:51Z"
"","2198","Use mirror to download PhantomJS","BitBucket download is really unreliable and fails our Ruby builds","closed","","p0deje","2016-06-02T10:25:32Z","2016-06-02T11:45:26Z"
"","2607","String-based error codes are not mapped to the correct error types","As you can tell from the logs attached to https://github.com/mozilla/geckodriver/issues/176, the Node.js bindings do not map the `script timeout` error down to the appropriate error type. Instead it looks like it falls back to the default _WebDriverException_.  The bindings needs to provide a lookup table where error types can be constructed from looking at an error response‚Äôs `error` field, which contains the string identifying the error.","closed","C-nodejs,","andreastt","2016-08-12T13:34:46Z","2019-08-19T20:09:43Z"
"","2149","[js] Prepare for renaming of 'wires' into 'geckodriver'","As of today, the latest version (0.7.1) is still named `wires`. I propose to get ready for the next release. We still look for the `wires` executable, only the internal names have changed.  r? @jleyba  - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohanLorenzo","2016-05-23T13:08:41Z","2016-05-23T16:17:46Z"
"","1917","Permission to include Selenium type stubs in python/typeshed","As of [PEP 0484](https://www.python.org/dev/peps/pep-0484/#the-typeshed-repo), the Python community is building a statically-typed annotation layer for Python 2 and 3.   For third-party libraries (like Selenium), we can include type hints in stub files that collect class/method type annotations. These stubfiles are collected in a GitHub repository [python/typeshed](https://github.com/python/typeshed). However, according to the PEP, we need the third party library's permission to do so.   So, Selenium team - would it be okay if we included typehint stubs for your library? This would require no code changes to your own repository.","closed","C-py,","wittekm","2016-04-04T18:26:33Z","2019-08-20T09:09:46Z"
"","2517","Support for CSS pseudo elements like :before and :after","As many users state, for example here: https://github.com/galenframework/galen/issues/228 , Selenium does not support pseudo-elements.  These are pretty common today and so I request the support of selecting pseudo elements and testing them for visibility, size, position, etc.  Is there any way this feature is added anytime soon? Thank you very much! :)","closed","","renet","2016-07-25T16:27:52Z","2019-08-14T22:09:49Z"
"","2756","[js] please publish selenium-webdriver 3.0.0-beta-3 to npm","As it is already tagged I need some features from there.  Thanks!","closed","C-nodejs,","vitalets","2016-09-10T09:23:51Z","2019-08-19T16:09:40Z"
"","2751","RemoteWebDriver uses POST method for Get Active Element","As is shown by the stacktrace in https://github.com/mozilla/geckodriver/issues/223, Selenium uses the POST method when getting the current active element.  It should use GET according to the specification.  I think this is a problem in the RemoteWebDriver, but I‚Äôm not sure.","closed","G-w3c,","andreastt","2016-09-09T15:51:44Z","2019-08-19T05:09:53Z"
"","1957","How to write xpath for element in different iframe","As I am working on a portal that opens up only in IE, I have to write xpath. I am unable to click on element in an iframe. Help!","closed","","MeghaPrakash1992","2016-04-11T11:45:57Z","2019-08-20T08:09:56Z"
"","2519","Where can I download a signed Selenium Assembly for DotNet?","Are there  signed versions of OpenQA.Selenuim and Selenium support? Are there signed versions of Chromedriver?  I need them to integrate with another secure assembly requiring it.  Thanks!","closed","","AcousticGuitar","2016-07-25T17:23:33Z","2019-08-19T03:09:37Z"
"","2284","After Update firefox to 47 Selenium webdriver 2.53 is not working. Got the message unable to find host.","Any help  would be much appreciated. Thanks. org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://ols/skin/icon.png"",""icon64URL"":null,""defaultLocale"":{""name"":""Browsing Protection by F-Secure"",""description"":""Protects your encrypted browsing."",""creator"":""F-Secure Corporation"",""homepageURL"":""http://www.f-secure.com/en/web/home_global""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":false,""descriptor"":""C:\\Program Files (x86)\F-Secure\NIF\bin\browser\install\fs_firefox_https\fs_firefox_https.xpi"",""installDate"":1462802697742,""updateDate"":1462802697742,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":125083,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""20.0a1"",""maxVersion"":""44.*""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1465905122309   DeferredSave.extensions.json    DEBUG   Save changes 1465905122310   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1465905122310   addons.xpi-utils    DEBUG   Updating add-on states 1465905122310   addons.xpi-utils    DEBUG   Writing add-ons list 1465905122328   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1465905122329   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1465905122329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1465905122329   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1465905122330   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1465905122331   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1465905122350   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1465905122350   addons.manager  DEBUG   Provider finished startup: XPIProvider 1465905122350   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1465905122350   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1465905122350   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1465905122351   addons.manager  DEBUG   Starting provider: GMPProvider 1465905122356   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1465905122356   addons.manager  DEBUG   Provider finished startup: GMPProvider 1465905122357   addons.manager  DEBUG   Starting provider: PluginProvider 1465905122357   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1465905122357   addons.manager  DEBUG   Provider finished startup: PluginProvider 1465905122357   addons.manager  DEBUG   Completed startup sequence 1465905124059   addons.manager  DEBUG   Starting provider:  1465905124059   addons.manager  DEBUG   Registering shutdown blocker for  1465905124059   addons.manager  DEBUG   Provider finished startup:  1465905124321   DeferredSave.extensions.json    DEBUG   Write succeeded 1465905124321   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1465905124321   DeferredSave.extensions.json    DEBUG   Starting timer 1465905124331   addons.repository   DEBUG   No addons.json found. 1465905124331   DeferredSave.addons.json    DEBUG   Save changes 1465905124368   DeferredSave.addons.json    DEBUG   Starting timer 1465905124587   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1465905124587   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1465905124588   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1465905124592   DeferredSave.extensions.json    DEBUG   Starting write 1465905124596   DeferredSave.addons.json    DEBUG   Starting write 1465905124626   DeferredSave.extensions.json    DEBUG   Write succeeded 1465905124634   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) at customerpayment.main(customerpayment.java:9) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  ateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://ols/skin/icon.png"",""icon64URL"":null,""defaultLocale"":{""name"":""Browsing Protection by F-Secure"",""description"":""Protects your encrypted browsing."",""creator"":""F-Secure Corporation"",""homepageURL"":""http://www.f-secure.com/en/web/home_global""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":false,""descriptor"":""C:\\Program Files (x86)\F-Secure\NIF\bin\browser\install\fs_firefox_https\fs_firefox_https.xpi"",""installDate"":1462802697742,""updateDate"":1462802697742,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":125083,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""20.0a1"",""maxVersion"":""44.*""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1465905122309   DeferredSave.extensions.json    DEBUG   Save changes 1465905122310   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1465905122310   addons.xpi-utils    DEBUG   Updating add-on states 1465905122310   addons.xpi-utils    DEBUG   Writing add-ons list 1465905122328   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1465905122329   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1465905122329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1465905122329   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1465905122330   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1465905122331   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1465905122350   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1465905122350   addons.manager  DEBUG   Provider finished startup: XPIProvider 1465905122350   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1465905122350   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1465905122350   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1465905122351   addons.manager  DEBUG   Starting provider: GMPProvider 1465905122356   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1465905122356   addons.manager  DEBUG   Provider finished startup: GMPProvider 1465905122357   addons.manager  DEBUG   Starting provider: PluginProvider 1465905122357   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1465905122357   addons.manager  DEBUG   Provider finished startup: PluginProvider 1465905122357   addons.manager  DEBUG   Completed startup sequence 1465905124059   addons.manager  DEBUG   Starting provider:  1465905124059   addons.manager  DEBUG   Registering shutdown blocker for  1465905124059   addons.manager  DEBUG   Provider finished startup:  1465905124321   DeferredSave.extensions.json    DEBUG   Write succeeded 1465905124321   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1465905124321   DeferredSave.extensions.json    DEBUG   Starting timer 1465905124331   addons.repository   DEBUG   No addons.json found. 1465905124331   DeferredSave.addons.json    DEBUG   Save changes 1465905124368   DeferredSave.addons.json    DEBUG   Starting timer 1465905124587   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1465905124587   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1465905124588   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1465905124592   DeferredSave.extensions.json    DEBUG   Starting write 1465905124596   DeferredSave.addons.json    DEBUG   Starting write 1465905124626   DeferredSave.extensions.json    DEBUG   Write succeeded 1465905124634   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'DESKTOP-E1D40A4', ip: '192.168.1.150', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:124)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at customerpayment.main(customerpayment.java:9) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://ols/skin/icon.png"",""icon64URL"":null,""defaultLocale"":{""name"":""Browsing Protection by F-Secure"",""description"":""Protects your encrypted browsing."",""creator"":""F-Secure Corporation"",""homepageURL"":""http://www.f-secure.com/en/web/home_global""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":false,""descriptor"":""C:\\Program Files (x86)\F-Secure\NIF\bin\browser\install\fs_firefox_https\fs_firefox_https.xpi"",""installDate"":1462802697742,""updateDate"":1462802697742,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":125083,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""20.0a1"",""maxVersion"":""44.*""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1465905122309   DeferredSave.extensions.json    DEBUG   Save changes 1465905122310   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1465905122310   addons.xpi-utils    DEBUG   Updating add-on states 1465905122310   addons.xpi-utils    DEBUG   Writing add-ons list 1465905122328   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1465905122329   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1465905122329   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1465905122329   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1465905122330   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1465905122331   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1465905122350   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1465905122350   addons.manager  DEBUG   Provider finished startup: XPIProvider 1465905122350   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1465905122350   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1465905122350   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1465905122351   addons.manager  DEBUG   Starting provider: GMPProvider 1465905122356   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1465905122356   addons.manager  DEBUG   Provider finished startup: GMPProvider 1465905122357   addons.manager  DEBUG   Starting provider: PluginProvider 1465905122357   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1465905122357   addons.manager  DEBUG   Provider finished startup: PluginProvider 1465905122357   addons.manager  DEBUG   Completed startup sequence 1465905124059   addons.manager  DEBUG   Starting provider:  1465905124059   addons.manager  DEBUG   Registering shutdown blocker for  1465905124059   addons.manager  DEBUG   Provider finished startup:  1465905124321   DeferredSave.extensions.json    DEBUG   Write succeeded 1465905124321   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1465905124321   DeferredSave.extensions.json    DEBUG   Starting timer 1465905124331   addons.repository   DEBUG   No addons.json found. 1465905124331   DeferredSave.addons.json    DEBUG   Save changes 1465905124368   DeferredSave.addons.json    DEBUG   Starting timer 1465905124587   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1465905124587   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1465905124588   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1465905124592   DeferredSave.extensions.json    DEBUG   Starting write 1465905124596   DeferredSave.addons.json    DEBUG   Starting write 1465905124626   DeferredSave.extensions.json    DEBUG   Write succeeded 1465905124634   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) ... 7 more ```","closed","","vikrant4224","2016-06-14T14:22:22Z","2019-08-20T02:09:57Z"
"","2722","Chromedriver failed to start in Window Server 2012","After Deploying compiled file on server the chrome driver while starting throws the following exception and stops -  System.InvalidOperationException: unknown error: chrome failed to start (Driver info: chromedriver=2.9.248315,platform=Windows NT 6.2 x86_64) at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse) at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) at remote_driver_demo.btnSubmit_Click(Object sender, EventArgs e) System.NullReferenceException: Object reference not set to an instance of an object. at remote_driver_demo.btnSubmit_Click(Object sender, EventArgs e)  Following is My C# Code  `ChromeOptions options = new ChromeOptions();` `options.BinaryLocation = Server.MapPath(@"".\bin"");` `driver = new ChromeDriver(options);`  The code is running on c# IDE on localhost but raises exception if running after deploying on Window Server 2012.  Same code is running on Window Server 2008","closed","","avishek319","2016-09-06T10:09:56Z","2019-08-19T18:09:41Z"
"","2423","Firefox WebDriver getting","`RemoteWebDriver WebDriver;` `Actions actions = new Actions(WebDriver);` `actions.ContextClick(searchItem).Perform();`  Right click action code is working well on Chrome and IE, but for Firefox getting exception below:  ![firefoxexception](https://cloud.githubusercontent.com/assets/6553154/16556300/d87ca656-420b-11e6-809a-1d8feb5a73cb.PNG)  It seems method Perform(); is not implemented for Firefox. Have anyone had similar issue?","closed","","maninwindow","2016-07-04T09:22:52Z","2019-08-19T05:09:50Z"
"","2533","drag_and_drop doesn't work in python3.4","``` python from selenium import webdriver from selenium.webdriver.remote.webelement import WebElement from selenium.webdriver import ActionChains   driver = webdriver.PhantomJS() driver.get('http://pythonscraping.com/pages/javascript/draggableDemo.html')  print(driver.find_element_by_id(""message"").text)  element = driver.find_element_by_id(""draggable"") target = driver.find_element_by_id(""div2"") actions = ActionChains(driver) actions.drag_and_drop(element, target).perform()  print(driver.find_element_by_id(""message"").text) ```  It doesn't work in these code. Is it a bug?","closed","","Wooden-Robot","2016-07-27T10:00:46Z","2019-08-19T21:09:51Z"
"","1814","SendKeys fails when FileDetector is enabled (Error: Uploading directories is not supported)","``` var remote = require('selenium-webdriver/remote'); browser.setFileDetector(new remote.FileDetector()); ``` ## Expected Behavior -  SendKeys works as usual when setFileDetector is enabled for a test. ## Actual Behavior -  With FileDetector enabled in Protractor, sending the text ""."", ""images"" or ""Images"" to a textarea via sendKeys causes the error: **'Failed: Uploading directories is not supported'**.  Certain text doesn't cause the error and works as usual, such as ""image"", ""image3"", ""iomages"" and ""docs"".   ## Steps to reproduce -  With FileDetector enabled in a Protractor test, send the text ""images"" to a text area via sendkeys.","closed","","pinkninjajess","2016-03-15T17:27:45Z","2019-08-20T11:09:34Z"
"","2448","Builds on Travis keep failing","``` BUILD FAILED: //javascript/firefox-driver:web-element-cache failed with exit code 137:  closure compiler  stderr:   [-] BUILDING...FINISHED 120.3s [100%]  go aborted!  Buck build failed ```  See e.g. https://travis-ci.org/SeleniumHQ/selenium/builds/143981047  You may already be aware, looks like it's happening since a few days now.","closed","","alb-i986","2016-07-11T21:25:22Z","2019-08-19T16:09:52Z"
"","1941","Concurrent Drivers in standalone server","[This spec is failing](https://github.com/SeleniumHQ/selenium/blob/master/rb/spec/integration/selenium/webdriver/spec_support/shared_examples/concurrent_driver.rb) when using the jar built from: `./go selenium-server-standalone-v3`  I've verified it passes with the latest 2.53 jar.  Here is [the debug information](https://gist.github.com/titusfortner/227ffdc815c271fdd5127b292d907d9f).","closed","","titusfortner","2016-04-07T22:48:03Z","2019-08-19T23:09:52Z"
"","2033","Unable to open Chrome browser - #Error#The driver executable does not exist","[Error_log_Chrome.txt](https://github.com/SeleniumHQ/selenium/files/242897/Error_log_Chrome.txt) ## Meta -  OS: Windows 10 , 64- bit Selenium Version :  2.53.0 Browser:  Google Chrome Browser Version:  Version 50.0.2661.94 m ## Expected Behavior - Expecting Chrome browser to open and operations to be performed ## Actual Behavior - Chrome browser is not opening even if chromedriver file is present in the specified path and getting below exception  java.lang.IllegalStateException: The driver executable does not exist: C:\Users\sharma\Desktop\chromedriver.exe ## Steps to reproduce -  Step 1: Download the latest version of ChromeDriver file from the path -> http://chromedriver.storage.googleapis.com/index.html?path=2.21/ Step 2: Write the script to automate any functionality in chrome browser. Here is the script which I executed: import org.junit.Test; import org.openqa.selenium.chrome.ChromeDriver;  public class EbayApp { @Test                   public void EbaGC(){             System.setProperty(""webdriver.chrome.driver"",""C:\Users\sharma\Desktop\chromedriver.exe"");             ChromeDriver oEbayGC = new ChromeDriver();             oEbayGC.manage().window().maximize();             oEbayGC.get(""http://www.ebay.com/"");             oEbayGC.findElementById(""gh-ac"").sendKeys(""Camera"");             oEbayGC.findElementById(""gh-btn"").click();             oEbayGC.findElementByLinkText(""Daily Deals"").click();         }     }","closed","","Shifupo","2016-04-29T17:22:16Z","2019-08-18T23:09:59Z"
"","2210","Update bundled JRuby to 9.1.2.0 fully working on Java 8","@titusfortner @shs96c I'm not sure that's what you guys want, but I sort of managed to upgrade bundle JRuby version to 9k.  ``` bash $ java -jar third_party/jruby/jruby-complete.jar -version jruby 9.1.2.0 (2.3.0) 2016-05-26 7357c8f Java HotSpot(TM) 64-Bit Server VM 25.45-b02 on 1.8.0_45-b14 +jit [darwin-x86_64]  $ java -jar third_party/jruby/jruby-complete.jar -S gem list  *** LOCAL GEMS ***  albacore (1.0.0) builder (3.2.2) ci_reporter (2.0.0) diff-lcs (1.1.3) jar-dependencies (default: 0.3.2) jruby-openssl (0.9.15 java) json (1.8.3 java) json_pure (1.8.3) minitest (default: 5.4.1) net-telnet (default: 0.1.1) nokogiri (1.6.7.2 java) power_assert (default: 0.2.3) psych (2.0.17 java) racc (1.4.13 java) rake (10.5.0, default: 10.4.2) rdoc (default: 4.2.0) rspec (2.4.0) rspec-core (2.4.0) rspec-expectations (2.4.0) rspec-mocks (2.4.0) rubyzip (1.2.0) test-unit (default: 3.1.1) ```  I'm not sure if tasks are actually working (only checked `//rb:unit-test`), but now it fails with circular dependency:  ``` bash $ ./go //rb:unit-test ... go aborted! Circular dependency detected: TOP => //rb:unit-test => //rb:android => //rb:common => //java/client/test/org/openqa/selenium/environment => //java/client/test/org/openqa/selenium/environment:environment => build/java/client/test/org/openqa/selenium/environment/environment.jar => //java/client/test/org/openqa/selenium/environment/webserver => //java/client/test/org/openqa/selenium/environment/webserver:webserver => build/java/client/test/org/openqa/selenium/environment/webserver/webserver.jar => //javascript:calcdeps => //javascript:calcdeps ```  I actually have no idea how to fix it and why it didn't fail before. It looks like javascript build depends on java build which depends on javascript build :)  Let me know if that is what you need (at least for the start) or if there is anything else I can do to help you.","closed","","p0deje","2016-06-04T05:46:06Z","2016-10-28T19:07:22Z"
"","1966","A call to the COM method IWebBrowser2::Navigate2() failed only in Jenkins","@lukeis   OS: Windows 2008 R2 Selenium Version:  2.47.1, Eclipse IDE Browser: IE 11 in Windows 2008 R2 Browser Version: 11.0.9600.18230 (64-bit) ## Expected Behavior - - IEDriverServer should start and should navigate to given url ## Actual Behavior - - WebDriverException: Failed to navigate to http://www.google.com This usually means that a call to the COM method IWebBrowser2::Navigate2() failed.    Stack trace shows error on RemoteWebDriver : line 306) ## Steps to reproduce -  Code as below: `RemoteWebDriver driver; > driver = new InternetExplorerDriver(capabality); driver.get(""http://www.google.com"");` ## Issue:  Able to run above code in Eclipse IDE Converted this code into executable JAR  Able to run executable JAR from local (file system) BUT When we try to run this executable JAR in Jenkins getting error above error.  Note: this executable JAR worked well on 7th April 2016 in Jenkins ## Tried:  Tried with Selenium 2.53.0 JARs and IEDriverServer_2.53.0_32_bit and IEDriverServer_2.53.0_64_bit - still the same issue","closed","","kesavaraojr","2016-04-13T18:46:23Z","2019-08-15T05:09:39Z"
"","2105","Where can I get list of selenium version which supports firefox when new firefox is released","@davehunt  @shs96c   I am using selenium and firefox for my testing. When I suddenly upgraded my firefox version. Then I have to search for which version of firefox supports selenium version. I am doing this search every time when I upgraded my firefox version. This makes me wait for answers from someone.  When you releasing a new version of selenium and provide me the list of firefox, chrome supported versions. It will be more helpful for everyone.  I have looked at the changelog . But Its doesn't help to list the supported versions of firefox and chrome. https://github.com/SeleniumHQ/selenium/blob/master/dotnet/CHANGELOG  Kindly help.","closed","","karunakaranpt","2016-05-13T12:51:39Z","2019-08-20T06:09:41Z"
"","2467","Selenuim-webdriver: how to use the firefox profile in a remote machine to launch firefox in that machin","2 machines A, B I want to use selenium web driver to launch machine B's firefox from machine A with one of the profiles P1 on machine B. The way i know is I have to copy P1 from B to A, then create a firefox_profile instance with the copied P1 on A. Then call Remote to launch firefox on B with this profile instance from A.  I have tried to new a firefox Options instance and add argument '-p P1', then launch Remote ff with this Options instance. And I found the arguments do NOT work any way.  Is there a way I don't have to copy the remote firefox profile to launch a remote firefox?  A: debian 8.3 B: windows 8 selenium-server-standalone-2.53.1.jar in used.","closed","","zqy2084","2016-07-15T03:49:16Z","2019-08-19T22:09:57Z"
"","2138","Fix eclipse project classpath","1. Fix websocket version 2. Comment `jetty-repacked.jar` (there is `jetty-repacked-5.jar`) 3. There are still errors of `org.seleniumhq` is not resolved.  Please look into the last two points.","closed","","asashour","2016-05-20T23:14:25Z","2016-05-20T23:48:20Z"
"","2574","Multiple Issues","1) I find some issues when using selectWindow command: it's not working even if I put 'WaitForPopUp' (failure) or 'WaitForPageToLoad' (doesn't wait at all)  2) When I use selectWindow and I put a breakpoint on it , and then I put a starting point on it and execute it , it works.  How can I solve this issue?  3) I can't save my breakpoints ... is there any way to save them?   4) How do I get the window ID?   5) Is there a way to select a window if it opens in a new tab? It's working with me when it opens in the same tab or in a PopUp window but it doesn't when it opens in a new tab page   Thanks in advance","closed","","mea95","2016-08-04T12:08:56Z","2019-08-19T20:10:01Z"
"","2466","Selenium IDE can`t  recognize ""require"" in rollup-rulles.js used for import JSON variable","1 Create json file for store variable - passed 2 Import json array in rollup-rulles.js to use as global variable - passed 3 Open seleniun ide with aatached rollup-rulles.js - error ""require is undefined""  > const vars = require('./vars.json'); > console.log(**vars[0].user01**); >  > manager.addRollupRule({ >     name : 'login as USER06 test Qweeeco gmail', >     description : 'short login', >     args : [], >     commandMatchers : [], >     getExpandedCommands : function(args) { >         var commands = []; >  > ``` >     commands.push({ >         command : 'type', >         target : loginField, >         value: vars[0].user01 >     }); >  >     return commands; > } > ``` >  > });","closed","","VatslauX","2016-07-14T21:06:35Z","2019-08-19T22:09:56Z"
"","2543","Wait until grandchild process is killed.","- [x] I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  for #2272  I tested in PhantomJS 2.1.1. Please someone tests in other driver.","closed","C-py,","kitamurakei","2016-08-01T10:20:57Z","2017-12-06T02:40:56Z"
"","2035","Bump bundled JRuby to 1.7.4","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) - replace our custom built jruby-complete jar with the vanilla 1.7.4 release. - extract gem dependencies as jars - added a gem2jar.sh script to create gem jars. - simplify go and go.bat by pulling common stuff into rake-tasks/main.rb - remove json_pure.jar and rake.jar, since json and rake are part of the newer JRuby jar.","closed","","aqqaluk","2016-04-30T11:49:11Z","2016-10-27T20:52:27Z"
"","2391","Change proxy to not depend on node util module","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) - `util.isArray` is [deprecated in node 4](https://nodejs.org/dist/latest-v4.x/docs/api/util.html#util_util_isarray_object), changed to `Array.isArray`. - moved proxy.js into lib  Please consider accepting this, it makes it easier to use in browsers. Thanks.  Not sure why travis is failing, seems unrelated to the pr. Also need some help to get the node tests pass with firefox #2390. I'm happy to make adjustments to meet your standard.","closed","C-nodejs,","oddui","2016-06-28T07:40:24Z","2016-06-29T20:25:00Z"
"","2735","Fix #2727, combine -jettyThreads and -jettyMaxThreads","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla) ##  - Revert BaseRemoteProxy configuration load behavior   to Sel 2.x logic (seed from registry, then overlap   with the remote request) - Combine -jettyThreads (hidden, used by standalone   and node) and -jettyMaxThreads (not hidden, used   by hub) into -jettyMaxThreads which is NOT hidden   and is used by standalone, node, and hub  Additional changes; - Fix for 'id' which should have a default value   applied (according to its usage doc) - new GridHubConfiguration() - the role should   always be ""hub"" - new GridNodeConfiguration() - the role should   always be ""node"" - Configuration merge() behavior update/change;   - don't merge null 'other' values (pre-existing)   - don't merge empty collections and maps (new) - Add tests","closed","","mach6","2016-09-08T01:08:16Z","2016-09-08T18:22:16Z"
"","1828","Fix python 3 support for basestring use","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   - closes #1820    - `basestring` doesn't exist in python 3. Add support for its use when instantiating a firefox webdriver when using python 3.","closed","","leviable","2016-03-16T14:28:27Z","2016-03-16T14:35:15Z"
"","2685","Fixes #2680. Use port to check safaridriver availability. Ensure the ‚Ä¶","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ‚Ä¶new safari driver receives non null required capabilities.","closed","","hypnoce","2016-08-30T13:53:43Z","2016-08-30T16:17:00Z"
"","1977","do not compress firefox profile data","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  zip files created for transfer to a remote WebDriver server are no longer compressed. If the zip contained a file that was already compressed, the server would return an ""invalid code lengths set"" error.  fixes #1884","closed","","fippo","2016-04-16T06:48:50Z","2016-05-02T17:14:33Z"
"","2669","Js - Add support for Safari 10 safaridriver","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  WIP. 6 tests are failing.  ```   1) [safari] finding elements By.linkText() works on XHTML pages:      NoSuchElementError: An element could not be located on the page using the given search parameters.       at WebDriverError (lib/error.js:27:10)       at NoSuchElementError (lib/error.js:168:10)       at Object.checkLegacyResponse (lib/error.js:505:15)       at parseHttpResponse (lib/http.js:398:13)       at lib/http.js:330:11   From: Task: WebDriver.findElement(By(link text, Foo))       at Driver.schedule (lib/webdriver.js:414:17)       at Driver.findElement (lib/webdriver.js:901:17)       at Context. (test/element_finding_test.js:161:25)       at testing/index.js:153:19       at new ManagedPromise (lib/promise.js:1029:7)       at controlFlowExecute (testing/index.js:138:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2642:25       at lib/promise.js:639:7   From: Task: WebElement.getText()       at Driver.schedule (lib/webdriver.js:414:17)       at WebElementPromise.schedule_ (lib/webdriver.js:1820:25)       at WebElementPromise.getText (lib/webdriver.js:2084:17)       at Context. (test/element_finding_test.js:162:19)       at testing/index.js:153:19       at new ManagedPromise (lib/promise.js:1029:7)       at controlFlowExecute (testing/index.js:138:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2642:25       at lib/promise.js:639:7   From: Task: [safari] finding elements By.linkText() works on XHTML pages       at Context.ret (testing/index.js:137:10)    2) [safari] finding elements by custom locator handles single element result:        AssertionError: 'Update a\n        div' === 'Update a div'       + expected - actual        -Update a       -        div       +Update a div        at testing/assert.js:342:14       at ManagedPromise.invokeCallback_ (lib/promise.js:1315:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2595:27       at lib/promise.js:639:7   From: Task: [safari] finding elements by custom locator handles single element result       at Context.ret (testing/index.js:137:10)    3) [safari] executeScript; parameters; can return arguments object as array:      AssertionError: undefined === 3       at testing/assert.js:342:14       at evaluate (testing/assert.js:92:3)       at Assertion.isEqualTo (testing/assert.js:341:12)       at Assertion.equalTo (testing/assert.js:325:17)       at test/execute_script_test.js:212:30       at ManagedPromise.invokeCallback_ (lib/promise.js:1315:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2595:27       at lib/promise.js:639:7   From: Task: [safari] executeScript; parameters; can return arguments object as array       at Context.ret (testing/index.js:137:10)    4) [safari] should follow meta redirects:        AssertionError: 'Some test page' === 'We Arrive Here'       + expected - actual        -Some test page       +We Arrive Here        at testing/assert.js:342:14       at ManagedPromise.invokeCallback_ (lib/promise.js:1315:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2595:27       at lib/promise.js:639:7   From: Task: [safari] should follow meta redirects       at Context.ret (testing/index.js:137:10)    5) [safari] dynamically removing elements from the DOM trigger a StaleElementReferenceError:    UnsupportedOperationError       at WebDriverError (lib/error.js:27:10)       at UnsupportedOperationError (lib/error.js:319:10)       at parseHttpResponse (lib/http.js:408:11)       at lib/http.js:330:11   From: Task: WebElement.isDisplayed()       at Driver.schedule (lib/webdriver.js:414:17)       at WebElementPromise.schedule_ (lib/webdriver.js:1820:25)       at WebElementPromise.isDisplayed (lib/webdriver.js:2169:17)       at Context. (test/stale_element_test.js:43:28)       at testing/index.js:153:19       at new ManagedPromise (lib/promise.js:1029:7)       at controlFlowExecute (testing/index.js:138:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2642:25       at lib/promise.js:639:7   From: Task: [safari] dynamically removing elements from the DOM trigger a StaleElementReferenceError       at Context.ret (testing/index.js:137:10)    6) [safari] can set the window position from a frame:      Error: Wait timed out after 1000ms       at lib/promise.js:2183:22       at ManagedPromise.invokeCallback_ (lib/promise.js:1315:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2595:27       at lib/promise.js:639:7   From: Task:        at ControlFlow.wait (lib/promise.js:2171:17)       at Driver.wait (lib/webdriver.js:749:29)       at test/window_test.js:106:16       at ManagedPromise.invokeCallback_ (lib/promise.js:1315:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2595:27       at lib/promise.js:639:7   From: Task: [safari] can set the window position from a frame       at Context.ret (testing/index.js:137:10)       at testing/index.js:80:5       at ManagedPromise.invokeCallback_ (lib/promise.js:1315:14)       at TaskQueue.execute_ (lib/promise.js:2742:14)       at TaskQueue.executeNext_ (lib/promise.js:2725:21)       at lib/promise.js:2595:27       at lib/promise.js:639:7 ```","closed","","oddui","2016-08-26T01:13:00Z","2016-08-29T16:41:27Z"
"","2288","Fixed command prompt showing up when freezing python app","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  When freezing GUI python apps launching webdriver Chrome or Phantomjs would result in having an extra command prompt window poping up in Windows. The code hides the command prompt.   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2288)","closed","C-py,","Lazik","2016-06-14T22:57:35Z","2020-03-30T15:53:53Z"
"","2222","Redirect stdin in subprocess.Popen function call","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  When calling the subprocess.Popen function, only stdout and stderr is redirected but not stdin.  You may encounter this issue when using pyinstaller to create an .exe (specifically in no console mode), where, for example, phantomjs will not run unless stdin is also redirected.  This modification solves the issue.   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2222)","closed","C-py,","ranjotsingh","2016-06-06T22:00:02Z","2020-04-02T21:34:05Z"
"","2350","Propagate exception in webdriven","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  We use `com.thoughtworks.selenium.webdriven` as a library to translate legacy selenese testcases into Selenium WebDriver, and translated testcases are executed by Selenium Remote WebDriver grid nodes.  Incidentally, RemoteWebDriver grid node becomes unstable due to overload, and when `WebDriverException` are raised but some in `com.thoughtworks.selenium.webdriven` swallow these exceptions.  These swallowing are obstacle to judge testcase failure caused by web application or by grid environment.  This pull request fix these exception handling, except `com.thoughtworks.selenium.webdriven.IsElementPresent`, fix for this breaks lots of `./go test-rc`.  Test code for these exception handling are also included and one could run with  ``` console $ ./go //java/client/test/com/thoughtworks/selenium/webdriven ```   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2350)","closed","C-java,","uchida","2016-06-24T01:44:07Z","2020-09-26T00:18:49Z"
"","2310","Fix http proxying by including full url in path","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  To correctly proxy, both the host header AND the path need to be set to the host you want to connect to. More information can be found here: http://stackoverflow.com/questions/3862813/how-can-i-use-an-http-proxy-with-node-js-http-client  Fixes #2309","closed","C-nodejs,","loyalchow","2016-06-17T18:30:33Z","2016-06-21T20:29:00Z"
"","1908","Update Wicked Good XPath to ce916fcfaf97247e3b8ec6cada64a6f6687175b4","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This updates Wicked Good XPath to the 1.3.0 release. Notable changes include: 1. Fixed a bug in IE8 compatibility introduced by the 1.2 release. 2. Fixed a check for node.style so that it won't mutate the DOM on    IE < 9. 3. The library now performs wgxpath.install on Document.prototype if    available. This allows document.evaluate to also work on XMLDocument.  Fixes #1907.","closed","","Dominator008","2016-04-01T06:33:37Z","2016-04-04T16:25:15Z"
"","1952","Driver command ""[Get]/status"" throw exception ""Session id not found"" with Java WebDriver Client","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This issue doesn't happen on C# WebDriver Client. On document of Selenium dose not also require session id for this command (https://github.com/seleniumhq/selenium/wiki/jsonwireprotocol#status)  Fixes #1465","closed","","Evit15","2016-04-09T09:43:56Z","2016-04-13T04:11:21Z"
"","2718","[js] switchTo().window() should use a 'handle' parameter rather than `name`","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This is to match the W3C Webdriver spec, and fixes `switchTo().window()` for use with geckodriver.  Note that the python driver already uses `handle` rather than `name`  I've tried running the tests locally, but either they are taking a very long time, or there's something wrong with them on my machine.","closed","C-nodejs,","Standard8","2016-09-05T18:11:23Z","2016-09-07T17:07:27Z"
"","2052","visibility_of_all implies it only returns elements if all visible","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This is not what the function does. visibility_of_any in my opinion correctly conveys the usage of this expected condition.","closed","","rouke-broersma","2016-05-04T09:44:57Z","2016-05-05T15:11:23Z"
"","1863","Initialize Alert object by calling alert.text","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  this is how it's done in the Java client, and makes sense as you would want to fail, or have your alert reference as early as possible.  Fixes #1822","closed","C-py,","rouke-broersma","2016-03-22T15:35:21Z","2017-12-06T02:35:41Z"
"","2104","Interface for Select component extracted","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This interface will allow to create custom realisation of like-select components, which actually do not have select tag inside.","closed","","jtymoschuk","2016-05-13T12:46:28Z","2016-05-15T03:45:05Z"
"","2103","Interface for Select component extracted","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This interface will allow to create custom realisation of like-select  components, which actually do not have select tag inside.","closed","","jtymoschuk","2016-05-13T11:37:32Z","2016-05-13T11:38:01Z"
"","2356","Created ExpectedCondition that checks if an element is clickable","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This `expected condition` checks if a `WebElement` is clickable. Much like `element_to_be_clickable` except it takes a `WebElement` instead of a `locator`. Made following the `Java` implementation of this `expected condition` which can be found [here](https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/support/ui/ExpectedConditions.java#L675)   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2356)","closed","C-py,","remcowesterhoud","2016-06-24T11:39:52Z","2021-10-10T12:03:41Z"
"","2260","Reduce verbosity of several logging statements from INFO to FINE.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  These statements become extremely verbose in busy clusters, as they appear to be printed once for each test crossed with each node when the cluster is full. So for my cluster which runs more than 50 nodes and regularly sees >200 tests submitted at once, these can print tens of thousands of log lines per second, adding up to gigabytes of logging per day.","closed","","ekuefler","2016-06-10T17:44:48Z","2016-06-10T19:41:14Z"
"","2772","Fix css tag selector","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  The css selector for tags was falsely prefixed with the id selector.","closed","G-w3c,","zipperle","2016-09-14T13:17:04Z","2016-09-14T23:00:57Z"
"","2683","Fix/Add support for node servlets","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Support for node -servlets bound to `/extra` and `/resources/` was broken when the pre-existing (2.x/rc) `SeleniumServer` code was removed. This change set adds support back. - Updated interface `GridNodeServer` - Updated (new) `SeleniumServer` class to accept/process   extra servlets - Updated `SelfRegisteringRemote` to process `nodeConfig.servlets`   that are passed. - Updated tests in this area  Misc Other; - Unrelated fixes to `GridLauncherV3` (unused import, code path   correction)","closed","","mach6","2016-08-29T22:58:21Z","2016-08-30T19:23:13Z"
"","2606","py: Raise a domain-specific exception instead of general Exception.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Sometimes general Exception is not checked and raising it causes of unexpected crash. This library has domain-specific exceptions defined in common.exceptions. FirefoxBinary should raise those exceptions (I choose WebDriverException).","closed","","jkawamoto","2016-08-12T05:20:24Z","2016-10-27T20:58:12Z"
"","2344","Properly escape +, ^, and | in WebDriver and RC formatters","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Since C#/Java/Ruby/Python formatters all rely on these, this fixes export for all IDE-exported code which are backed by WebDriver or Remote Control.  Fixes #2343","closed","C-ide,","blaken","2016-06-23T00:49:33Z","2017-09-06T06:45:37Z"
"","2173","Fixed: Unhelpful error message when PhantomJS exits.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Selenium does not check that the PhantomJS process is running prior to checking connectivity. This results in unhelpful error message when the subprocess unexpectedly exits.  The solution is to assert that the process is still running before connectivity is checked.  Fixes #2168.","closed","","gtzampanakis","2016-05-27T12:28:49Z","2016-05-27T15:39:19Z"
"","2700","enable log path setting from firefox webdriver","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  resolve issue #2699","closed","","nyanshell","2016-09-01T08:36:44Z","2016-10-02T03:36:45Z"
"","2338","Renamed property 'parent' to 'driver'","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Replaced the misleading name `parent` for `driver` in the `WebElement` class. The `parent` property is now deprecated. Related issue: #2196   Also made the `get_root_parent()` function from `py/selenium/webdriver/remote/utils.py` deprecated as it is a useless function. It gets the `parent` of a `WebElement` (which is an instance of `WebDriver`). It then continues tries to find the `parent` of this `WebDriver` until it no longer has one. Since `WebDriver` doesn't contain a `parent` attribute it will always stop the loop after getting the `parent` of the passed `WebElement`. Hence this function does the exact same as the `parent` property (now renamed to `driver`) of the `WebElement` class.","closed","","remcowesterhoud","2016-06-22T12:44:08Z","2016-06-22T14:26:51Z"
"","2108","Clear actions list after performing actions","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Problem: when you need to perform several actions and then perform some more actions later, with the same actions instance, previous actions gets re-applied. To perform fresh actions you will need to instantiate another instance of action chains.  Solution: clear instance actions after they were performed, as it done in drivers for Java and .Net  https://github.com/SeleniumHQ/selenium/blob/master/java/client/src/org/openqa/selenium/interactions/Actions.java#L365 https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/Interactions/Actions.cs#L324   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2108)","closed","C-py,","binary-data","2016-05-15T14:43:38Z","2019-10-17T10:04:21Z"
"","2217","Added temporary files cleanup support","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Problem: RemoteWebDriver doesn't delete temporary profile directories, causing the to run out of inodes.  Intended usage:  ``` java   public WebDriver getWebDriver(final URL url) {     DesiredCapabilities capabilities = new DesiredCapabilities(""firefox"", """", Platform.ANY);     capabilities.setJavascriptEnabled(true);      FirefoxProfile firefoxProfile = new FirefoxProfile();     capabilities.setCapability(FirefoxDriver.PROFILE, firefoxProfile);     return new RemoteWebDriver(url, capabilities) {       @Override       protected void stopClient() {         super.stopClient();         firefoxProfile.cleanTemporaryFiles();       }     };   } ```","closed","","mstipanov","2016-06-06T11:41:18Z","2016-06-06T18:14:30Z"
"","2065","Fix to avoid security vulnerability","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Netty repo which is being used has a potential security vulnerability  Also safari driver is using the same netty repo which has a securtiy threat and severity shows ""medium"".It would be really great to move to latest to avoid these security threats.","closed","","SrinivasanTarget","2016-05-08T10:24:26Z","2016-10-31T06:25:51Z"
"","2562","Fixed syntax bug","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  lack of indentation in if statment","closed","","tanistra","2016-08-03T08:38:26Z","2016-08-03T18:08:30Z"
"","2717","Changed all bare excepts to use base Exception class","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  In Python a bare except clause will catch any transient system errors. This is not recommended except in a very few exceptional cases, which none apply for this project. This PR fixes it so that uses the base exception class `Exception` so that some system errors do bubble up.","closed","","isaulv","2016-09-05T18:03:38Z","2016-09-05T19:24:52Z"
"","2383","Small overhaul to the command-line parameter documentation","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Improving several things here: - Consistent labeling of parameter type - Adding units (seconds, milliseconds, etc) to all options where necessary - Listing default values - Improving clarity of messages with consistency of terms, etc and various word usements - No changes to any logic whatsoever","closed","","mmerrell","2016-06-26T09:53:33Z","2016-06-26T10:32:56Z"
"","1918","check service process exit code while waiting for opened port","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  If process immediately fails (e.g. due to missing shared library) previously Sevice waited for about 30 seconds before returning `Can not connect to the Service` error.  Now if process fails during waiting for opened port, this will be explicitly reported.  Also `time.sleep(1)` was moved to the end of cycle to remove unneeded last one second sleep without actual check.   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/1918)","closed","C-py,","rutsky","2016-04-04T21:18:33Z","2020-03-30T15:40:05Z"
"","1987","Ruby - `mouseMoveTo` should send only Fixnum coordinates","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I'm not sure why, but if I send coordinates like this to `mouseMoveTo`: `@driver.action.move_to(element, 330.1, 13).click.perform` it click in one part of page, wrong part But if i send `@driver.action.move_to(element, 330, 13).click.perform` it works fine.  Maybe it somewhat  depends on http call, that performs - they looks like  ``` ""{""element"":""0.14091974799732143-9"",""xoffset"":330.1,""yoffset"":13}"" ""{""element"":""0.23202931091340706-9"",""xoffset"":330,""yoffset"":13}"" ```   and fraction part somehow messed up requests.  Anyhow, I don't see a reason to send coordinates with fraction part - coordinates could be only whole number.","closed","","ShockwaveNN","2016-04-19T12:28:29Z","2016-04-20T11:39:30Z"
"","2331","added executePhantomJS to selenium python (execute_phantomjs)","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I Have added the executePhantomJS feature from ghostdriver to selenium-python, It's now called execute_phantomjs, You can now use onInitialized Event (More power to PhantomJS)...  **For Example:**  ``` from selenium.webdriver import PhantomJS  driver = PhantomJS() driver.get(""http://ariya.github.com/js/random/"") print driver.find_element_by_id('numbers').text driver.quit() ```  **Result:** 7 52 26 85 67 12 2 24 33 68 28 66 78 28 72 14 62 90 21 2 28 52 42 60 35 30 36 45 45 5 31 62 90 18 9 64 83 39 89 39 91 7 67 7 3 63 96 96 73 75 83 58 6 57 78 86 4 57 21 92 98 29 58 42 36 31 88 30 28 77 55 61 54 100 69 32 74 60 26 8 5 3 11 33 97 70 32 57 91 96 29 5 31 46 13 57 25 52 30 71  ``` from selenium.webdriver import PhantomJS  driver = PhantomJS() script = """"""     var page = this;     page.onInitialized = function () {         page.evaluate(function () {             Math.random = function() { return 42 / 100 }         });     }; """""" driver.execute_phantomjs(script) driver.get(""http://ariya.github.com/js/random/"") print driver.find_element_by_id('numbers').text driver.quit() ```  **Result:** 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42 42","closed","C-py,","realgam3","2016-06-21T18:19:33Z","2017-08-14T14:43:33Z"
"","2340","Optional wait for page to load for webelement.click (Python)","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I expect that this might be the start of a discussion, rather than a straight merge, but I thought that having some code to look at might help said discussion.  Or y'all could just merge it of course, I think it's ready to go (although I haven't figured out how to run the test suite successfully yet).  Some context --  I'm the author of a book on web testing.  One of the things about selenium that I've found everyone (and I include myself here) struggles with are waits, explicit or implicit.  Essentially, everyone's naive expectation is that, when you ask selenium to ""do something"" like click on a link, it will wait until the next page has loaded before executing the next command. That is, of course, the naive expectation, and for good reasons -- selenium can't tell the difference between a click that will cause a page load and one that won't, and in a world of increasingly dynamic sites, javascript and rich client UIs, more and more clicks don't cause page loads.  But.  That expectation is still there.  And lots and lots of websites _don't_ use fancy javascript, and even in the ones that do, many parts of that site still use normal hyperlinks, forms and so on.  One solution to this problem that's been tried is ""implicit waits"".  But anyone that's used them for a while knows they're unsatisfactory.  They will make selenium do a retry loop if it's ever asked for an element that it can't find, and that will cover some use cases, but there are many cases where it won't do what the user intuitively wants.  An implicit wait won't cover the case where the element exists both on the page before the click, and on the page after the click.  And it doesn't cover things like retrieving the page source or current url.  In short, implicit waits are so dissatisfactory that they're almost worth ignoring altogether, and moving onto explicit waits instead.  But explicit waits are complicated and ugly.  You either end up building your own wait_for helper functions, or you can use selenium's built-in WebDriverWait classes, and, for all that they're very powerful, they also aren't the most Pythonic, and they certainly end up causing a lot of boilerplate.  This PR proposes to address the problem with a relatively modest new piece of functionality:  an optional `wait_for_page_load` argument to `WebElement.click()`.  I'd love the default value to be True, but that wouldn't be very backward compatible, so a default of False would probably be a nice compromise.  Under the hood, the wait_for uses a technique which I've found to be fairly reliable, which is that, before clicking, we fetch the current page body, and then after clicking, we wait for that page body element to go stale.  This technique addresses several of the shortcomings of the implicit_wait approach, ie, conceptually, the wait is associated with the first action, not with the second action (if that makes sense).  I should thank @AutomatedTester for helping me to develop said solution, a couple of years back.  More info here: http://www.obeythetestinggoat.com/how-to-get-selenium-to-wait-for-page-load-after-a-click.html  As a nice bonus, we can make available the wait for page load as a context manager for general use, hanging off of WebDriver:  ``` with self.driver.wait_for_page_load():     # do stuff ```  Nice and Pythonic.  So that's what I have so far, but I'm sure there's lots of stuff I haven't thought of.  Testing is one (pointers on how to run the test suite appreciated!).  Choosing default values for the wait time is another, where to store them, or whether to even have them.  And lots of other issues I'm sure.  What does everyone think?","closed","","hjwp","2016-06-22T15:30:42Z","2016-06-23T11:35:26Z"
"","2654","Recalculate relative filepaths of test cases when re-saving test suite","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  For SeleniumHQ/selenium#1653.","closed","C-ide,","peter-kehl","2016-08-24T08:06:55Z","2017-09-06T06:45:30Z"
"","2765","Fix getRect response parsing","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fix getRect response parsing based on spec:  https://w3c.github.io/webdriver/webdriver-spec.html#get-element-rect","closed","","wfanforever","2016-09-12T17:15:55Z","2016-09-12T20:28:50Z"
"","2699","enable log path setting from firefox webdriver","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fix [issue 2698](https://github.com/SeleniumHQ/selenium/issues/2698)","closed","","nyanshell","2016-09-01T07:56:51Z","2016-09-01T08:32:18Z"
"","2084","Added ability to change wires path on Firefox driver","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  executable_path in webdriver.py for Firefox web driver was hardcoded to use ""wires"" (environmental path variable). Added additional statements to allow for direct executable_path specification via ""capabilities""","closed","C-py,","thaskell1","2016-05-11T21:48:02Z","2017-09-08T20:34:08Z"
"","1904","Adding a space when encoding ids starting with digits","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  escapeCss() references the following: https://drafts.csswg.org/cssom/#serialize-an-identifier  > To escape a character as code point means to create a string of ""\"" > (U+005C), followed by the Unicode code point as the smallest possible > number of hexadecimal digits in the range 0-9 a-f (U+0030 to U+0039 and > U+0061 to U+0066) to represent the code point in base 16, _followed by a > single SPACE (U+0020)._  Currently the digit is being encoded, but no SPACE is being added.  Adding the SPACE.  Signed-off-by: Bob Baron rdbaron@gmail.com","closed","","rdbaron","2016-03-31T20:27:18Z","2016-04-01T21:10:50Z"
"","1951","[js] fix capabilities serialize method","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Closes #1950","closed","","cnishina","2016-04-08T23:31:37Z","2016-04-12T21:10:55Z"
"","2237","W3c new session key","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Clients that are implementing the current w3c standard cannot create new sessions for the current bindings. This PR will handle both old standard and new w3c for new sessions.  https://w3c.github.io/webdriver/webdriver-spec.html#new-session","closed","C-rb,","isonic1","2016-06-08T14:26:42Z","2017-12-18T14:57:59Z"
"","1838","Refactor goog.array.ArrayLike -> IArrayLike.","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  As suggested by the Closure library team, goog.array.ArrayLike is obsolete, IArrayLike should replace it to encourage better typechecking. See also https://docs.google.com/document/d/1eNpI_02NYb8K-x014Jo8iO6wjlpQQttDO3mVYZUXVtQ  Fixes #1771","closed","D-atoms,","johnjbarton","2016-03-17T18:15:48Z","2016-03-17T21:46:24Z"
"","2086","Add 'How to build driver with phantomjs-prebuilt'","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Added Instructions for something like this in the comments above ""Find Executable"" function of PhantomJS In response to https://github.com/SeleniumHQ/selenium/issues/2069","closed","C-nodejs,","vtange","2016-05-11T23:26:25Z","2016-05-21T15:05:07Z"
"","2244","Need to shutdown a ghost driver mode phantomjs process.","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  A phantomjs of ghost driver mode of the child process was not able to shut down, because of  a send_remote_shutdown_command function of selenium.webdriver.phantomjs.service.Service does not call send_remote_shutdown function of superclass.","closed","","TakesxiSximada","2016-06-09T01:39:59Z","2016-07-01T08:56:35Z"
"","2348","Added is_stale to WebElement","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  A bunch of times I am checking if a `WebElement` is still present on the `DOM`. It's easy to do this by using a `try` and `except`. But I feel `WebElement` itself should provide a way to check if it is `stale` or not.","closed","","remcowesterhoud","2016-06-23T14:53:18Z","2016-11-02T13:16:21Z"
"","2452","Clarify javascript doc for Builder#setProxy()","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  `Sets the proxy configuration to use for WebDriver clients created by this builder` sounds like the proxy is used for the webdriver client?","closed","","oddui","2016-07-12T08:13:13Z","2016-07-12T17:25:03Z"
"","2719","[js] createGeckoDriverService is obsolete","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  `createGeckoDriverService` was replaced by `createGeckoDriver` in 54d53e8a39fbe0e68bc6f24dce7e8f3ab33a065b, so it is no longer needed.","closed","","Standard8","2016-09-05T18:28:24Z","2016-09-05T19:54:39Z"
"","1829","Add python 3 fix for basestring reference","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  `basestring` doesn't exist in python 3. Add try/except to handle its reference when using python 3 and a Firefox webdriver  Fix #1820","closed","","leviable","2016-03-16T14:37:54Z","2016-03-16T14:46:27Z"
"","2633","Able to add "".page.com"" cookie when page.com opened","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ``` browser = Watir::Browser.new :firefox browser.goto ""http://domain.com"" browser.cookies.add('name', 'value', domain: '.domain.com') ```  https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/1953   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2633)","closed","D-firefox,","a0s","2016-08-19T21:47:39Z","2018-09-25T06:23:03Z"
"","2178","[js]adding ableToSwitchToWindow in changes","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  @jleyba Adding this for PR #2177","closed","","manoj9788","2016-05-29T14:09:34Z","2016-05-31T00:49:39Z"
"","2789","Fix #2721 and cleanup/refactor node registration request","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  --- - Fix serialization/deserialization of `List`   for `GridNodeCofiguration` - Change the format of node config files for Selenium V3 - There   is no need to have the redundant `configuration: { ... }` section. - Change the message in `RegistrationRequest` such that it does not   contain dupicative information in separate json objects ..   `""id""` and `""capabilities""` are part of `""configuration""` in Selenium V3 - Cleanup the api for `RegistrationRequest` -- will break compilation for   people moving from 2.x -- removed the ability to change the   GridNodeConfiguration reference via the `RegistrationRequest` object and   removed all other setters. - Add ability to handle booleans in `BrowserDesiredCapabilityConverter` - Add ability to get a `GridRole` by String - Update/Add tests  ---  Note this change set makes the expected format of `nodeConfig.json` for V3 look like this;  ``` json {   ""capabilities"": [     {       ""browserName"": ""firefox"",       ""maxInstances"": 10     }   ],   ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",   ""maxSession"": 10,   ""port"": 5557,   ""register"": true,   ""registerCycle"": 4000 } ```  instead of this;  ``` json {   ""capabilities"": [     {       ""browserName"": ""firefox"",       ""maxInstances"": 10     }   ],   ""configuration"": {       ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",       ""maxSession"": 10,       ""port"": 5557,       ""register"": true,       ""registerCycle"": 4000   } } ```  The same is true for the registration request that is sent from the node to the hub. Also note, this change set handles the older registration request from 2.x and 3.0.0-beta nodes","closed","","mach6","2016-09-16T23:21:27Z","2016-09-22T03:39:02Z"
"","2689","Add the ability to optionally disable some of the default grid servlets","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ---  This change set proposes that we allow people to save resources and/or harden their deployments by providing a path to disable defalt hub and/or node servlets that the protocol does not require.","closed","","mach6","2016-08-31T00:44:43Z","2016-08-31T16:11:57Z"
"","2697","Fix StandaloneConfiguration#toString()","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ---  The toString method was incorrectly processing Collections and Maps. This change set adds considerations for them. Also in this change set; - Updated tests for GridHubConfigurationTest - Trim the result of getting coreVersion in ConsoleServlet","closed","","mach6","2016-09-01T00:17:48Z","2016-09-01T18:10:49Z"
"","2673","Fix loading from -hubConfig and -nodeConfig files","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ---  Changes to make -hubConfg and -nodeConfig work again. - If/when a hub/node config file is passed, it is used to initialize   the GridHubConfiguration or GridNodeConfiguration object. - Initialization of a new configuration object from an other   configuration object does not protect values which are   otherwise protected by merge() - Any passed args present from the command line (to GridLauncherV3)   will override values supplied in the hub/node config file. - Any value supplied for -hubConfig or -nodeConfig is checked   for existence via new FileExistsValueValidator class   Additional changes; - Hide parameter ""-avoidProxy"" from usage() - Remove whitespace in DefaultHub.json","closed","","mach6","2016-08-26T19:37:09Z","2016-08-26T21:07:34Z"
"","2675","Fix loading from -hubConfig and -nodeConfig files","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ---  Changes to make -hubConfg and -nodeConfig work again. - If/when a hub/node config file is passed, it is used to initialize   the GridHubConfiguration or GridNodeConfiguration object in   GridLauncherV3 - Any passed args (to GridLauncherV3)  present from the command line   will override values supplied in the hub/node config file. - Any value supplied for -hubConfig or -nodeConfig is checked   for existence via new FileExistsValueValidator class   Additional changes; - Hide parameter ""-avoidProxy"" from usage() - Remove whitespace in DefaultHub.json","closed","","mach6","2016-08-26T21:43:13Z","2016-08-26T21:45:37Z"
"","2177","[js] Adding ableToSwitchToWindow function to until class","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2177)","closed","C-nodejs,","manoj9788","2016-05-29T13:21:19Z","2020-04-03T04:57:32Z"
"","2771","HubStatusServlet - use GET with query string instead of GET with body","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","tommywo","2016-09-14T12:47:34Z","2016-09-20T19:13:03Z"
"","2766","Use BuildInfo in DisplayHelp and Console servlets.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mach6","2016-09-12T17:46:57Z","2016-09-12T17:55:06Z"
"","2753","Added context manager for chrome and content","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-py,","cuff-links","2016-09-09T18:50:36Z","2017-07-19T08:13:50Z"
"","2747","Removed unnecessary modifier","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","ghost","2016-09-09T07:16:44Z","2016-10-27T20:57:12Z"
"","2742","Implement using context manager","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","cuff-links","2016-09-08T16:09:22Z","2016-09-08T16:25:21Z"
"","2733","Fix legacy mode in SafariDriver","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","pbi-qfs","2016-09-07T11:27:46Z","2016-09-23T09:52:33Z"
"","2688","Fix DisplayHelpServlet so it does not display ""nullnull""","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","mach6","2016-08-31T00:29:59Z","2016-08-31T16:07:57Z"
"","2597","goog.dom.TagName changed type from string to object.","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","D-atoms,","johnjbarton","2016-08-10T16:25:24Z","2021-05-09T18:48:31Z"
"","2582","[js] Fix typo in execute_script_test.js","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","vitalets","2016-08-08T15:17:31Z","2016-08-09T12:52:02Z"
"","2558","Fix typo ""loogging"" -> ""logging"" in issue template","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","lencioni","2016-08-02T23:07:29Z","2016-08-02T23:14:36Z"
"","2539","Fix indentation error","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","elliterate","2016-07-29T21:35:29Z","2016-08-03T18:08:03Z"
"","2526","Add missing word in python readme","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","ghost","2016-07-27T01:48:08Z","2016-07-27T04:59:23Z"
"","2518","Fixed small documentation typo.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","hdavidzhu","2016-07-25T17:07:46Z","2016-07-25T18:19:56Z"
"","2504","Response returns long.","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","rafe-g","2016-07-21T21:19:34Z","2016-07-21T22:04:46Z"
"","2499","Initial implementation of get_attribute acting as a shim","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","NapalmBurn","2016-07-20T19:21:48Z","2016-07-20T19:36:23Z"
"","2482","DeviceRotation implementation","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","rafe-g","2016-07-17T07:39:12Z","2016-07-19T03:14:03Z"
"","2474","DeviceRotation implementation","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","rafe-g","2016-07-15T23:06:38Z","2016-07-17T07:30:45Z"
"","2399","Corrected link to buck fork","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","tommywo","2016-06-28T19:07:45Z","2016-06-30T23:15:49Z"
"","2255","GeckoDriverService should wait for the geckodriver to be running","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","ngsankha","2016-06-10T10:59:22Z","2016-06-17T10:01:45Z"
"","2165","Changed Chrome to Firefox in comments [dotnet]","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","AkosLukacs","2016-05-26T07:56:37Z","2016-05-26T16:41:20Z"
"","2159","fix broken link to python documentation","- [x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","nikolas","2016-05-24T17:07:37Z","2016-05-24T17:44:03Z"
"","2004","Fix bug when Array prototype contains additional methods","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","BohdanTkachenko","2016-04-22T18:48:35Z","2016-04-28T22:56:15Z"
"","1886","Fixed temp cookie file handle leak in PhantomJS","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","Shanmuganandh","2016-03-26T16:01:28Z","2016-03-28T18:12:17Z"
"","1815","Fix spelling in IE driver registry path on error message","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","neeasade","2016-03-15T20:28:52Z","2016-03-16T19:46:21Z"
"","2664","Upgrade to PhantomJsDriver 1.3.0","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement]","closed","","valfirst","2016-08-25T06:51:26Z","2016-08-25T13:28:32Z"
"","2661","Fix PhantomJsDriver maven reference","- [X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement]","closed","","valfirst","2016-08-24T22:58:26Z","2016-08-24T23:12:28Z"
"","2269",".NET: Add support for .NET Core","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  This PR makes the Selenium WebDriver project compile on .NET Core. The changes basically boil down to fixes for: - The new reflection API - The absence of Serialization - Standardization on `.Dispose` instead of `.Close` - Changes in how OS-related information is accessed - Changes in the `HttpWebRequest` and `HttpWebResponse` classes  Happy to work with you on any feedback you may provide,","closed","C-dotnet,","qmfrederik","2016-06-12T13:56:02Z","2018-03-12T17:49:49Z"
"","2254","Start the driver services detached","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I have a nodejs script that run some tests using selenium-webdriver nodejs module. In my script I'm listening on the `process.on('SIGINT', ...)` to perform some cleanup tasks. One of those tasks is to close the IE page, that has been opened for testing.  But, on Windows, the CTRL+C is propagated through all the processed attached to a shell, so, it is also processed by the IE server which quits and leaves the page opened. When my script tries to close the page (driver.quit()) I just have an exception, because IE server has been already terminated.  Solution is to launch the IE server detached from the console so it will survive CTRL+C, process the page close request and then closed by the `driver.quit()`   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2254)","closed","C-nodejs,","canonic-epicure","2016-06-10T10:48:33Z","2021-03-15T10:16:29Z"
"","2083","send host header for remote","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Host header important for remote selenium grid using traffic accelerators like CloudFlare like https://hub-cloud.browserstack.com   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2083)","closed","C-py,","tr4n2uil","2016-05-11T20:00:32Z","2020-03-30T15:50:22Z"
"","2048","Fix WebDriver custom Firefox binary path issue (#1965).","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fix the issue where firefox_binary argument is ignored and default Firefox location is read into firefox_options.binary_location.  Fix the issue where 'launch_browser' method is invoked for a string instead of a FirefoxBinary object.  Add tests to make sure WebDriver can be launched with a custom Firefox binary.  Fixes #1965","closed","C-py,","gunesacar","2016-05-03T14:46:03Z","2016-09-21T16:11:03Z"
"","1983","Use process.poll() to check if the browser is terminated.","- [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  FirefoxBinary's `kill()` method does the following check before attempting to kill the browser process:  ``` if self.process:     self.process.kill()     self.process.wait() ```  However, checking if self.process is True does not guarantee that the process is actually running. We get the following exception if we call quit() on FirefoxDriver when the Firefox process is already terminated: `OSError: [Errno 3] No such process`  With this PR, the kill method first checks if process.poll() returns None before attempting to kill the process.  Note that process.poll() is already used in _wait_until_connectable method to check if the browser process has terminated.  Add a test to demonstrate the missing check and the fix. With the current code we get the following error - which gets fixed with this PR:  ```     def test_that_we_can_quit_when_firefox_is_terminated(self):         self.webdriver = webdriver.Firefox()         self.webdriver.binary.kill() >       self.webdriver.quit()  [snip]/selenium/test/selenium/webdriver/firefox/ff_launcher_tests.py:46: _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ [snip]/selenium/webdriver/firefox/webdriver.py:123: in quit     self.binary.kill() [snip]/selenium/webdriver/firefox/firefox_binary.py:77: in kill     self.process.kill() /usr/lib/python2.7/subprocess.py:1556: in kill     self.send_signal(signal.SIGKILL) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  self = , sig = 9      def send_signal(self, sig):         """"""Send a signal to the process                 """""" >       os.kill(self.pid, sig) E       OSError: [Errno 3] No such process ```","closed","C-py,","gunesacar","2016-04-18T11:26:51Z","2020-03-30T15:41:13Z"
"","2425","py: break Mobile and SwitchTo reference cycle with weakref proxy.","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Browser now closes immediately when driver object is deleted.  Not tested with full test suite, but it's a patch I have been using for a while.   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2425)","closed","C-py,","orent","2016-07-05T05:06:46Z","2021-01-25T14:51:35Z"
"","2139","Adding new functions to until class","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  @jleyba  Added UrlIs, urlContains, urlMatches","closed","","manoj9788","2016-05-21T00:11:17Z","2016-05-21T14:55:54Z"
"","2649","[JS] update API docs for cookies section","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-nodejs,","manoj9788","2016-08-23T05:16:25Z","2017-08-22T00:45:26Z"
"","2598","[js] remove unused require in test","- [x ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","vitalets","2016-08-10T16:31:20Z","2016-08-10T18:29:16Z"
"","2556","Preserve the protocol in grid when forwarding connections","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JasnoWa","2016-08-02T20:56:32Z","2016-08-02T20:58:22Z"
"","2446","fix javadocs for TakesScreenshot and OutputType","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","alb-i986","2016-07-11T19:43:01Z","2016-07-11T21:42:19Z"
"","2156","[py] adding new functions to expected conditions class","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","manoj9788","2016-05-24T02:27:18Z","2016-05-25T02:52:09Z"
"","2140","Adding Travis build badge","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","manoj9788","2016-05-21T00:38:58Z","2016-05-21T00:53:59Z"
"","1832","fix umlauts encoding","- [X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-htmlrunner,","computerlyrik","2016-03-16T23:26:36Z","2019-10-05T18:54:53Z"
"","1967","added new exception, changing isElementClickable to return a more spe‚Ä¶","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  ‚Ä¶cific error","closed","","JamesZoft","2016-04-13T18:56:27Z","2017-09-05T10:55:11Z"
"","1881","Save the promise before dispatchEvent().","- [ x] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  The execute() API is async, it returns a promise. The FirefoxDomExecutor is synchronous, it 'sends' the command with dispatchEvent() and receives the response in the onResponse_ handler.  Since we null the pendingCommand_ in the onResponse_ handler, we must save the the promise needed by the API before calling dispatchEvent().","closed","","johnjbarton","2016-03-25T18:32:57Z","2016-03-28T21:42:49Z"
"","2203","Add test to check that elements not rendered are unclickable.","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I think that elements not rendered (e.g. outside the bounds of an element with overflow: hidden) should not be clickable.   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2203)","closed","C-py,","bluefalcon26","2016-06-02T21:06:19Z","2020-04-06T09:50:45Z"
"","2541","Fixing a NPE during node startup when -browser flag is not provided.","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Fixes #2540","closed","","krmahadevan","2016-07-30T17:27:46Z","2016-07-31T00:06:08Z"
"","2041","Find visible elements","- [ X] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Adds an expected conditions for finding visible elements as list. Right now this is only possible for the presence of elements.","closed","C-py,","remcowesterhoud","2016-05-02T14:54:21Z","2016-05-03T17:16:09Z"
"","2410","Enable custom port lock for FirefoxDriver","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  When using multiple firefox instances at the same moment the driver tries to lock the default port - 1 without the possibility to lock a custom port. It is however possible to define a custom port using FirefoxProfile.PORT_PREFERENCE This fix solves following WebDriverException: Unable to bind to locking port 7054 within 45000 ms","closed","D-firefox,","kennyschuoler","2016-06-30T06:11:59Z","2017-09-11T09:20:19Z"
"","2286","assign marionette_port to each service instance","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  If a unique marionette_port option isn't passed to geckodriver it uses 2828 - This means that multiple instances of geckodriver all end up talking to the same instance of firefox even though they each launch their own.  The end result of this when using selenium is strange behavior in the first session created once multiple sessions are created (double actions, random errors, etc) and other sessions not actually being independent.  This change assigns a unique marionette_port option and keeps track of whats been assigned since the port isn't actually taken until geckodriver starts up its firefox instance.","closed","C-rb,","twalpole","2016-06-14T16:58:11Z","2016-06-27T22:59:58Z"
"","2055","Add filename to IOException if file copy was failed.","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  I got the IOException ""Could not transfer all bytes"" and found that there was no glue what wrong. filename may give a hint, at least.","closed","","tirana","2016-05-04T19:28:48Z","2016-05-05T13:04:51Z"
"","2031","Fix SessionCleaner dying off due to uncaught exception.","- [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  Because the run() method does not catch any exceptions, throwing an unchecked exception in checkExpiry propagates up and causes the SessionCleaner thread to die off.  Once this happens, browser sessions will no longer be closed due to their timeout.  This issue is described here: https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/7248","closed","","zmokhtar","2016-04-29T15:32:51Z","2016-08-04T03:43:19Z"
"","2638","Adds license information to the setup function","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)  As suggested in https://packaging.python.org/distributing/#license   --- This change is‚ÄÇ[](https://reviewable.io/reviews/seleniumhq/selenium/2638)","closed","C-py,","anweshadas","2016-08-21T11:18:26Z","2020-04-03T20:54:30Z"
"","2176","Added a Comment Line for Firefox Profile Class","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","C-java,","soumyajitnath","2016-05-28T16:22:40Z","2017-09-10T09:57:12Z"
"","2158","[Java] Better naming convention By class","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","manoj9788","2016-05-24T08:24:38Z","2016-05-31T00:44:59Z"
"","1905","Leg rc","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","vinutha10","2016-03-31T20:48:37Z","2016-03-31T20:49:28Z"
"","1876","removing charaters","- [ ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","thananauto","2016-03-24T16:15:30Z","2016-03-24T16:35:20Z"
"","2186","How to automate Chrome developer tools?","**What I want to do** I want to open Chrome developer tools programmatically in Selenium for C#, navigate to the Console and execute certain commands.  **What I tried** Related code I tried is below: - This works for me to open Chrome developer tools.  `Action action = new Action(DriverFolder);` `action.KeyDown(Keys.Control).KeyDown(Keys.Shift).SendKeys(""i"").Perform();` - This piece of code suppose to work to navigate to the Console tab, but actually not.  `action.KeyDown(Keys.Control).SendKeys(""]"").Perform();` `action.SendKeys(""Console.log('Executes at Console!');"");`  Have anyone tried similar approaches on similar issues?  **Thanks in advance!**","closed","","maninwindow","2016-05-31T14:10:01Z","2019-08-20T04:10:02Z"
"","2131","[REQUEST] Add support for setting request headers","**TL/DR: +1 on this if you support the ability to set request headers** This is I know has been a huge debate among the community. This request is to bring the topic back up for discussion, to show support that this is a feature that is in need and should be prioritized for upcoming release.   For one to actually set request headers we need to operate a proxy which then injects the headers for us. This is a very poor workaround as it is far more complex than it should be.   We allow tests to add cookies, but yet we lack the ability to set headers on our requests.","closed","","ch0wdan","2016-05-19T21:40:04Z","2016-05-19T22:01:51Z"
"","2418","unrecognized chrome option: detach when connecting to embedded chromium","**This is was issue submitted to chromedriver with the conclusion: Wontfix:** https://bugs.chromium.org/p/chromedriver/issues/detail?id=925 If 'debuggerAddress' is passed, then 'detach' is not used. It doesn't seem right for ChromeDriver to kill a Chrome session that it didn't start itself, and wasn't asked to quit. The Ruby library should be changed so that it omits 'detach' if 'debuggerAddress' is passed.  **Original issue description:** I get unrecognized chrome option error when trying to connect to embedded chromiun by debuggerAddress chromeOption.  What steps will reproduce the problem? 1. caps = Selenium::WebDriver::Remote::Capabilities.chrome(""chromeOptions"" => {""debuggerAddress"" => ""127.0.0.1:20480""}) 1. browser = Watir::Browser.new browser_type, :desired_capabilities => caps, :switches => ['--disable-extensions', 'test-type'] #, :service_log_path => 'chromedriver.out'#  , :switches => %w[--incognito] #--user-data-dir=C:\HOME\GIT\CUD --load-async]  Exception: Selenium::WebDriver::Error::UnknownError: unknown error: cannot parse capability: chromeOptions from unknown error: unrecognized chrome option: detach   (Driver info: chromedriver=2.10.267521,platform=Windows NT 6.1 SP1 x86_64)  Selenium version:  gem 'selenium-webdriver', ""~> 2.43.0"" OS: windows 7 Browser: embedded chromium  Browser version: 25  I had to comment line 91 of C:/Ruby/lib/ruby/gems/1.9.1/gems/selenium-webdriver-2.43.0/lib/selenium/webdriver/chrome/bridge.rb: chrome_options['detach']                   = detach.nil? || !!detach  after commenting it connects to embedded chromium.  This issue is related to Issue 5591: ruby selenium-webdriver doesn't support chromedriver2: https://code.google.com/p/selenium/issues/detail?id=5591  But I use the latest selenium and chromedriver and if I don't use chromeOptions"" => {""debuggerAddress"" => ""127.0.0.1:20480""} in capabilities it also works fine.","closed","","yatsan","2016-07-01T13:54:54Z","2019-08-19T22:09:55Z"
"","2206","Edge driver returns an original text format for a transformed text","**OS:**  Any **Selenium Version:**   2.53 **Browser:**  EDGE only **Browser Version:**  13  **Expected Behavior:** Should return text in the way how it is visible to user which is common behavior.   **Actual Behavior:** Returns non transformed text  **Steps to reproduce:** For `text` markup  WebElement.text method returns ""text""  ``` python  import unittest from selenium import webdriver   EDGE_SAUCELABS_CAPS = {     ""browserName"": ""MicrosoftEdge"",     ""platform"": ""Windows 10"",     ""version"": ""13.10586"" } URL = ""http://www.w3schools.com/cssref/playit.asp?filename=playcss_text-transform"" REMOTE_URL = ""http://user_name:user_key@ondemand.saucelabs.com:80/wd/hub""   class TestTransformUppercase(unittest.TestCase):     def setUp(self):         #self.driver = webdriver.Firefox()         self.driver = webdriver.Remote(REMOTE_URL, EDGE_SAUCELABS_CAPS)         self.driver.get(URL)      def test_should_return_uppercase_text(self):         self.driver.find_element_by_css_selector(             "".radio input[value='uppercase']"").click()         self.assertEqual(             ""THIS EXAMPLE DEMONSTRATES DIFFERENT TEXT-TRANSFORMS."", self.get_text()             )      def test_should_return_return_normalcase_text(self):         self.assertEqual(             ""This example demonstrates different text-transforms."", self.get_text()             )      def get_text(self):         return self.driver.find_element_by_css_selector(""#demoParent p"").text      def tearDown(self):         self.driver.quit()  if __name__ == ""__main__"":     unittest.main() ```  These tests pass in IE10, FF, Chrome But fail in EDGE   ``` dm08@dm08:~$ python  transformation.py  FF ====================================================================== FAIL: test_should_return_return_normalcase_text (__main__.TestTransformUppercase) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""transformation.py"", line 35, in test_should_return_return_normalcase_text     ""This example demonstrates different text-transforms."", self.get_text() AssertionError: 'This example demonstrates different text-transforms.' != u'This example demonstrates different text-transforms. '  ====================================================================== FAIL: test_should_return_uppercase_text (__main__.TestTransformUppercase) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""transformation.py"", line 30, in test_should_return_uppercase_text     ""THIS EXAMPLE DEMONSTRATES DIFFERENT TEXT-TRANSFORMS."", self.get_text() AssertionError: 'THIS EXAMPLE DEMONSTRATES DIFFERENT TEXT-TRANSFORMS.' != u'This example demonstrates different text-transforms. '  ---------------------------------------------------------------------- Ran 2 tests in 24.642s  FAILED (failures=2) ```","closed","","drobota","2016-06-03T18:20:21Z","2019-08-20T04:09:51Z"
"","2451","During creating a screenshot in Safari the active input loses focus","**OS:**  OSX 10.11.5 **Selenium Version:**   2.48 **Browser:**   Safari **Browser Version:**   9.1.1 **Automation tool** Protractor 3.3.0 (NodeJS) ## Expected Behavior -  During / after taking a screenshot of a focussed input field, the input field should still have focus ## Actual Behavior -  The input field loses focus during / after creating the screenshot. The screenshot that has been created also has no focus ![Active empty input field](https://cloud.githubusercontent.com/assets/11979740/16756165/9bf32d7e-4803-11e6-824e-50f2fedc0171.png) ![Active filled input field](https://cloud.githubusercontent.com/assets/11979740/16756185/bb0b0c54-4803-11e6-997b-3a077b283a83.png) ## Steps to reproduce - - set focus to the input field - take a screenshot - check the state of the inputfield + the screenshot","closed","","wswebcreation","2016-07-12T05:41:01Z","2019-08-19T23:09:39Z"
"","2563","Unable to interact with the chrome alerts version 52.*(latest version)","**OS**:  Windows **Selenium Version**:  2.53.1(Any version) **Browser**: Chrome **Browser Version** : 52.\* (latest version) The test suite simply gets stuck when the alert pops up and there is no way to communicate. When reverted to version 51.\* (or any other prior versions), I was able to interact with the alert.","closed","","hemanthsridhar","2016-08-03T15:56:04Z","2019-08-19T06:09:59Z"
"","2011","java.lang.NoSuchFieldError: INSTANCE (Selenium 2.53.0)","**META**  OS: Windows 7 Selenium Version: 2.53 Browser: Firefox Browser Version: Not Available  Here is another team's issue I am trying to resolve. I have tried multiple suggestions out there on the web to remove the httpclient/httpcore jar, lower its version and the rest of the fixes including clean .m2 repo but still running into below stacktrace. I have tried most of the routine fixes but still not luck. Any help would be greatly appreciated!!!  **Stacktrace:** java.lang.NoSuchFieldError: INSTANCE         at org.apache.http.conn.ssl.SSLConnectionSocketFactory.(SSLConne ctionSocketFactory.java:144)         at org.openqa.selenium.remote.internal.HttpClientFactory.getClientConnec tionManager(HttpClientFactory.java:71)         at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClie ntFactory.java:57)         at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClie ntFactory.java:60)         at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.getDefau ltHttpClientFactory(ApacheHttpClient.java:252)         at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.(A pacheHttpClient.java:229)         at org.openqa.selenium.remote.HttpCommandExecutor.getDefaultClientFactor y(HttpCommandExecutor.java:96)         at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExec utor.java:70)         at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExec utor.java:58)         at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.st art(NewProfileExtensionConnection.java:87)         at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.j ava:271)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.jav a:119)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:2 16)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:2 11)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:2 07)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:1  **Dependency Tree** [INFO] --- maven-dependency-plugin:2.8:tree (default-cli) @ someProject --- [INFO] com.someproject:jar:0.0.1-SNAPSHOT [INFO] +- org.testng:testng:jar:6.9.9:compile [INFO] |  +- com.beust:jcommander:jar:1.48:compile [INFO] |  +- org.apache.ant:ant:jar:1.7.0:compile [INFO] |  |  - org.apache.ant:ant-launcher:jar:1.7.0:compile [INFO] |  +- org.yaml:snakeyaml:jar:1.15:compile [INFO] |  - org.beanshell:bsh:jar:2.0b4:compile [INFO] +- com.oracle:ojdbc7:jar:12.1.0.1:system [INFO] +- apache-log4j:log4j:jar:1.2.15:system [INFO] +- com.mercury.qualitycenter:otaclient:jar:9.2:system [INFO] +- org.seleniumhq.selenium:selenium-java:jar:2.53.0:compile [INFO] |  +- org.seleniumhq.selenium:selenium-chrome-driver:jar:2.53.0:compile [INFO] |  +- org.seleniumhq.selenium:selenium-edge-driver:jar:2.53.0:compile [INFO] |  +- org.seleniumhq.selenium:selenium-ie-driver:jar:2.53.0:compile [INFO] |  |  +- net.java.dev.jna:jna:jar:4.1.0:compile [INFO] |  |  - net.java.dev.jna:jna-platform:jar:4.1.0:compile [INFO] |  +- org.seleniumhq.selenium:selenium-safari-driver:jar:2.53.0:compile [INFO] |  |  - io.netty:netty:jar:3.5.7.Final:compile [INFO] |  +- org.seleniumhq.selenium:selenium-support:jar:2.53.0:compile [INFO] |  - org.seleniumhq.selenium:selenium-leg-rc:jar:2.53.0:compile [INFO] +- org.seleniumhq.selenium:selenium-firefox-driver:jar:2.53.0:compile [INFO] |  +- org.seleniumhq.selenium:selenium-remote-driver:jar:2.53.0:compile [INFO] |  |  +- cglib:cglib-nodep:jar:2.1_3:compile [INFO] |  |  +- org.seleniumhq.selenium:selenium-api:jar:2.53.0:compile [INFO] |  |  +- org.apache.httpcomponents:httpclient:jar:4.5.1:compile [INFO] |  |  |  +- org.apache.httpcomponents:httpcore:jar:4.4.3:compile [INFO] |  |  |  - commons-logging:commons-logging:jar:1.2:compile [INFO] |  |  - com.google.guava:guava:jar:19.0:compile [INFO] |  +- commons-io:commons-io:jar:2.4:compile [INFO] |  - org.apache.commons:commons-exec:jar:1.3:compile [INFO] +- org.apache.poi:poi:jar:3.10.1:compile [INFO] |  - commons-codec:commons-codec:jar:1.5:compile [INFO] +- mysql:mysql-connector-java:jar:5.1.35:compile [INFO] +- org.apache.poi:poi-ooxml:jar:3.10.1:compile [INFO] |  +- org.apache.poi:poi-ooxml-schemas:jar:3.10.1:compile [INFO] |  |  - org.apache.xmlbeans:xmlbeans:jar:2.6.0:compile [INFO] |  |     - stax:stax-api:jar:1.0.1:compile [INFO] |  - dom4j:dom4j:jar:1.6.1:compile [INFO] |     - xml-apis:xml-apis:jar:1.0.b2:compile [INFO] +- com.google.code.gson:gson:jar:2.3.1:compile [INFO] - junit:junit:jar:4.12:compile [INFO]    - org.hamcrest:hamcrest-core:jar:1.3:compile","closed","","aroonseenamurthy","2016-04-25T21:24:14Z","2019-08-20T07:09:56Z"
"","2570","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:","***_Using Selenium 3.0 beta 2 libs and Firefox 49 and Java 8 Kindly Help**_\*  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: xpi DEBUG   Updating database with changes to installed add-ons 1470300098447   addons.xpi-utils    DEBUG   Updating add-on states 1470300098448   addons.xpi-utils    DEBUG   Writing add-ons list 1470300098455   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1470300098455   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1470300098455   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1470300098456   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1470300098456   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\webcompat@mozilla.org.xpi 1470300098457   addons.xpi  DEBUG   Calling bootstrap method startup on webcompat@mozilla.org version 1.0 1470300098459   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1470300098460   addons.manager  DEBUG   Provider finished startup: XPIProvider 1470300098460   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1470300098460   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1470300098460   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1470300098461   addons.manager  DEBUG   Starting provider: GMPProvider 1470300098467   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1470300098468   addons.manager  DEBUG   Provider finished startup: GMPProvider 1470300098468   addons.manager  DEBUG   Starting provider: PluginProvider 1470300098468   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1470300098468   addons.manager  DEBUG   Provider finished startup: PluginProvider 1470300098469   addons.manager  DEBUG   Completed startup sequence 1470300100429   addons.manager  DEBUG   Starting provider:  1470300100429   addons.manager  DEBUG   Registering shutdown blocker for  1470300100429   addons.manager  DEBUG   Provider finished startup:  1470300100861   DeferredSave.extensions.json    DEBUG   Write succeeded 1470300100861   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1470300100862   DeferredSave.extensions.json    DEBUG   Starting timer 1470300100885   DeferredSave.extensions.json    DEBUG   Starting write 1470300100891   addons.repository   DEBUG   No addons.json found. 1470300100892   DeferredSave.addons.json    DEBUG   Save changes 1470300100929   DeferredSave.addons.json    DEBUG   Starting timer 1470300101040   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1470300101041   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1470300101041   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1470300101055   DeferredSave.addons.json    DEBUG   Starting write 1470300101206   DeferredSave.extensions.json    DEBUG   Write succeeded 1470300101286   DeferredSave.addons.json    DEBUG   Write succeeded 1470300119158   addons.xpi  DEBUG   Calling bootstrap method shutdown on e10srollout@mozilla.org version 1.0 1470300119158   addons.xpi  DEBUG   Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.4 1470300119159   addons.xpi  DEBUG   Calling bootstrap method shutdown on webcompat@mozilla.org version 1.0 1470300119723   addons.manager  DEBUG   shutdown 1470300119723   addons.manager  DEBUG   Calling shutdown blocker for XPIProvider 1470300119723   addons.xpi  DEBUG   shutdown 1470300119724   addons.xpi-utils    DEBUG   shutdown 1470300119724   addons.manager  DEBUG   Calling shutdown blocker for LightweightThemeManager 1470300119725   addons.manager  DEBUG   Calling shutdown blocker for GMPProvider 1470300119726   addons.manager  DEBUG   Calling shutdown blocker for PluginProvider 1470300119727   addons.manager  DEBUG   Calling shutdown blocker for  1470300119728   addons.manager  DEBUG   Calling shutdown blocker for PreviousExperimentProvider 1470300119730   addons.xpi  DEBUG   Notifying XPI shutdown observers 1470300119733   addons.manager  DEBUG   Async provider shutdown done  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:315) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:118) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:232) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:220) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:215) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at onlineOrder.OrderBooking.main(OrderBooking.java:16) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  xpi DEBUG   Updating database with changes to installed add-ons 1470300098447   addons.xpi-utils    DEBUG   Updating add-on states 1470300098448   addons.xpi-utils    DEBUG   Writing add-ons list 1470300098455   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1470300098455   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1470300098455   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1470300098456   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1470300098456   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\webcompat@mozilla.org.xpi 1470300098457   addons.xpi  DEBUG   Calling bootstrap method startup on webcompat@mozilla.org version 1.0 1470300098459   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1470300098460   addons.manager  DEBUG   Provider finished startup: XPIProvider 1470300098460   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1470300098460   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1470300098460   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1470300098461   addons.manager  DEBUG   Starting provider: GMPProvider 1470300098467   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1470300098468   addons.manager  DEBUG   Provider finished startup: GMPProvider 1470300098468   addons.manager  DEBUG   Starting provider: PluginProvider 1470300098468   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1470300098468   addons.manager  DEBUG   Provider finished startup: PluginProvider 1470300098469   addons.manager  DEBUG   Completed startup sequence 1470300100429   addons.manager  DEBUG   Starting provider:  1470300100429   addons.manager  DEBUG   Registering shutdown blocker for  1470300100429   addons.manager  DEBUG   Provider finished startup:  1470300100861   DeferredSave.extensions.json    DEBUG   Write succeeded 1470300100861   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1470300100862   DeferredSave.extensions.json    DEBUG   Starting timer 1470300100885   DeferredSave.extensions.json    DEBUG   Starting write 1470300100891   addons.repository   DEBUG   No addons.json found. 1470300100892   DeferredSave.addons.json    DEBUG   Save changes 1470300100929   DeferredSave.addons.json    DEBUG   Starting timer 1470300101040   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1470300101041   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1470300101041   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1470300101055   DeferredSave.addons.json    DEBUG   Starting write 1470300101206   DeferredSave.extensions.json    DEBUG   Write succeeded 1470300101286   DeferredSave.addons.json    DEBUG   Write succeeded 1470300119158   addons.xpi  DEBUG   Calling bootstrap method shutdown on e10srollout@mozilla.org version 1.0 1470300119158   addons.xpi  DEBUG   Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.4 1470300119159   addons.xpi  DEBUG   Calling bootstrap method shutdown on webcompat@mozilla.org version 1.0 1470300119723   addons.manager  DEBUG   shutdown 1470300119723   addons.manager  DEBUG   Calling shutdown blocker for XPIProvider 1470300119723   addons.xpi  DEBUG   shutdown 1470300119724   addons.xpi-utils    DEBUG   shutdown 1470300119724   addons.manager  DEBUG   Calling shutdown blocker for LightweightThemeManager 1470300119725   addons.manager  DEBUG   Calling shutdown blocker for GMPProvider 1470300119726   addons.manager  DEBUG   Calling shutdown blocker for PluginProvider 1470300119727   addons.manager  DEBUG   Calling shutdown blocker for  1470300119728   addons.manager  DEBUG   Calling shutdown blocker for PreviousExperimentProvider 1470300119730   addons.xpi  DEBUG   Notifying XPI shutdown observers 1470300119733   addons.manager  DEBUG   Async provider shutdown done  Build info: version: 'unknown', revision: '2aa21c1', time: '2016-08-02 14:59:43 -0700' System info: host: 'Aparna', ip: '192.168.1.5', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_102' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:315)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:118)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:232)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:220)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:215)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124)     at onlineOrder.OrderBooking.main(OrderBooking.java:16) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: xpi DEBUG   Updating database with changes to installed add-ons 1470300098447   addons.xpi-utils    DEBUG   Updating add-on states 1470300098448   addons.xpi-utils    DEBUG   Writing add-ons list 1470300098455   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1470300098455   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1470300098455   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1470300098456   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1470300098456   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\webcompat@mozilla.org.xpi 1470300098457   addons.xpi  DEBUG   Calling bootstrap method startup on webcompat@mozilla.org version 1.0 1470300098459   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1470300098460   addons.manager  DEBUG   Provider finished startup: XPIProvider 1470300098460   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1470300098460   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1470300098460   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1470300098461   addons.manager  DEBUG   Starting provider: GMPProvider 1470300098467   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1470300098468   addons.manager  DEBUG   Provider finished startup: GMPProvider 1470300098468   addons.manager  DEBUG   Starting provider: PluginProvider 1470300098468   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1470300098468   addons.manager  DEBUG   Provider finished startup: PluginProvider 1470300098469   addons.manager  DEBUG   Completed startup sequence 1470300100429   addons.manager  DEBUG   Starting provider:  1470300100429   addons.manager  DEBUG   Registering shutdown blocker for  1470300100429   addons.manager  DEBUG   Provider finished startup:  1470300100861   DeferredSave.extensions.json    DEBUG   Write succeeded 1470300100861   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1470300100862   DeferredSave.extensions.json    DEBUG   Starting timer 1470300100885   DeferredSave.extensions.json    DEBUG   Starting write 1470300100891   addons.repository   DEBUG   No addons.json found. 1470300100892   DeferredSave.addons.json    DEBUG   Save changes 1470300100929   DeferredSave.addons.json    DEBUG   Starting timer 1470300101040   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1470300101041   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1470300101041   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1470300101055   DeferredSave.addons.json    DEBUG   Starting write 1470300101206   DeferredSave.extensions.json    DEBUG   Write succeeded 1470300101286   DeferredSave.addons.json    DEBUG   Write succeeded 1470300119158   addons.xpi  DEBUG   Calling bootstrap method shutdown on e10srollout@mozilla.org version 1.0 1470300119158   addons.xpi  DEBUG   Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.4 1470300119159   addons.xpi  DEBUG   Calling bootstrap method shutdown on webcompat@mozilla.org version 1.0 1470300119723   addons.manager  DEBUG   shutdown 1470300119723   addons.manager  DEBUG   Calling shutdown blocker for XPIProvider 1470300119723   addons.xpi  DEBUG   shutdown 1470300119724   addons.xpi-utils    DEBUG   shutdown 1470300119724   addons.manager  DEBUG   Calling shutdown blocker for LightweightThemeManager 1470300119725   addons.manager  DEBUG   Calling shutdown blocker for GMPProvider 1470300119726   addons.manager  DEBUG   Calling shutdown blocker for PluginProvider 1470300119727   addons.manager  DEBUG   Calling shutdown blocker for  1470300119728   addons.manager  DEBUG   Calling shutdown blocker for PreviousExperimentProvider 1470300119730   addons.xpi  DEBUG   Notifying XPI shutdown observers 1470300119733   addons.manager  DEBUG   Async provider shutdown done  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 8 more ```","closed","","appunikki","2016-08-04T09:01:49Z","2019-08-19T12:09:46Z"
"","2185","[js] Fix timeouts' url","## Steps to reproduce 1. Follow steps in this branch https://github.com/JohanLorenzo/geckodriver-bugs/tree/cant-set-timeout ## Results  ```   1) timeouts ""before all"" hook:      Uncaught UnknownCommandError: POST /session/68afbb72-991b-49ed-b09b-7d4767978232/timeouts/async_script did not match a known command ```  GeckoDriver (wires) is more strict about the URLs that you provide to it. They should comply with http://w3c.github.io/webdriver/webdriver-spec.html\#set-timeout . In this case we should not have `/timeouts/async_script`, but only `/timeouts`.   r? @jleyba  - [ X ] By placing an `X` in the preceding checkbox, I verify that I have signed the [Contributor License Agreement](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md#step-6-sign-the-cla)","closed","","JohanLorenzo","2016-05-31T12:56:33Z","2016-06-07T15:51:29Z"
"","1813","Permission denied to access property ""handleEvent""","## Setup - - Windows 7 - Firefox 45.0 - Python 2.7.10 ## Expected Behavior -  The exported Python test case attempts to log into the Slack group. ## Actual Behavior -  Failure:  ``` E ====================================================================== ERROR: test_why (__main__.TestWhy) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""C:\XScripts\WorkScripts\User Audit\testWhy.py"", line 21, in test_why     driver.find_element_by_id(""email"").clear()   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", l ine 234, in find_element_by_id     return self.find_element(by=By.ID, value=id_)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", l ine 712, in find_element     {'using': by, 'value': value})['value']   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", l ine 201, in execute     self.error_handler.check_response(response)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\errorhandler.py"" , line 194, in check_response     raise exception_class(message, screen, stacktrace) WebDriverException: Message: Permission denied to access property ""handleEvent"" Stacktrace:     at  (https://slack.slack.com//?redir=%2Fteam:434)  ---------------------------------------------------------------------- Ran 1 test in 5.482s  FAILED (errors=1) ``` ## Steps to reproduce - - Open Firefox. - Open Selenium for recording. - Open any Slack login page. (For example: https://slack.slack.com/ ) - Enter any username and password. - Click Submit. - Export the test case to Python 2 / unittest / WebDriver. - In a command prompt, run the test case.","closed","D-firefox,","XSchelin","2016-03-15T17:19:18Z","2019-08-16T23:09:35Z"
"","2659","python Ôºöexpected an indented block","## python 3 ## window 7  > > > from selenium import  #webdriver > > > Traceback (most recent call last): > > >   File """", line 1, in  > > >     from selenium import webdriver > > >   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium-3.0.0b2-py3.5.egg\selenium\webdriver__init__.py"", line 25, in  > > >     from .safari.webdriver import WebDriver as Safari  # noqa > > >   File ""C:\Users\Administrator\AppData\Local\Programs\Python\Python35-32\lib\site-packages\selenium-3.0.0b2-py3.5.egg\selenium\webdriver\safari\webdriver.py"", line 48 > > >     executable_path = os.environ.get(""SELENIUM_SERVER_JAR"") > > >                   ^ > > > IndentationError: expected an indented block","closed","","EkkoTi","2016-08-24T17:08:31Z","2019-08-19T19:09:41Z"
"","2371","Click done but the related action never happens on phantomjs. Works with chrome.","## Problem:  A Button is selected correctly with the CSS selector used, and then a click is performed on it. The event is marked as done as seen in the selenium logs, however if successful a new page must be rendered which does not happen. The same piece of code works in chrome. ## Environment:  WDIO version: v4.0.9 Node: 6.2.0 WDIO testrunning Synchronous test. selenium-server-standalone-2.53.0.jar ## Details  ``` bash       CommonElements.clickNext();       browser.saveScreenshot('test1.jpg');       browser.pause(5000);       CommonElements.clickConfirmationOk();       browser.pause(5000);       // On Page 3       browser.saveScreenshot('test.jpg');       CommonElements.clickComplete(); ```  In the above code snippet clickNext() opens up a popup which has 2 buttons Cancel and Ok. clickConfirmationOk() should click on the Ok button and move on to the next page clickComplete() marks the completion on the new page.  However, clickConfirmationOk() is succesful as per the logs and it moves on to clickComplete(). However it keeps waiting for the element to exist, but it never comes up as actually its still on the pop which shows Ok and Cancel.  The CSS selector used to identify the button is correct, as verified by getHTML and other css selectors tools online.  Code Snippet  ``` bash     clickConfirmationOk: {         value: function () {             var okSelector = '.modal-footer .btn.btn-success';             browser.waitForExist(okSelector);             console.log(browser.getHTML(okSelector));             browser.waitForEnabled(okSelector, 100000);             browser.click(okSelector);         }     },     clickComplete: {         value: function () {             var completeSelector = '#common-progress-page .btn.btn-success.pull-right';             browser.waitForExist(completeSelector);             console.log(browser.isEnabled(completeSelector));             browser.waitForEnabled(completeSelector, 900000);             browser.click(completeSelector);         }     } ``` ## Logs  Selenium Logs https://gist.github.com/bhuvnesh2703/aec82bea06debf92f9a4f6e4da93c2ea: Test Results Output: https://gist.github.com/bhuvnesh2703/076af36f5931c8fdae4a81db612bf4b7","closed","","bhuvnesh2703","2016-06-25T00:16:29Z","2019-08-20T00:09:55Z"
"","2437","Wrong URL Path causes Proxy error.","## Meta - Wrong URL Path causes Proxy error.  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior -  I am using selenium with Browserstack with Node to test my angular programm. I am working in a Company and we are behind a Proxy.  I tested the conection from my computer with Browserstack with Nightwatch and it worked perfect.  But when I tried to use Selenium I faced a Proxy error. I am trying to solve this problem for almost 3 days until today, when I found the problem.  ## Actual Behavior -  The problem was in the URL path: in the Node.js BrowserStack example we have this URL   usingServer('http://hub-cloud.browserstack.com/wd/hub'). but my proxy shown only   /wd/hub/session  I think I found the problem by  http/index.js  (line 273) `var path = this.options_.path;     if (path[path.length - 1] === '/' && httpRequest.path[0] === '/') {       path += httpRequest.path.substring(1);     } else {       path += httpRequest.path; // hier we have only the path, without host     }`  I have done  this  `path = ""http://"" + this.options_.host +  path;`  and its worked ## Steps to reproduce -  Use the example from BrowserStack  https://www.browserstack.com/automate/node  Set the proxy  usingWebDriverProxy(""your Proxy 8080"").  Error   Der folgende Fehler wurde beim Versuch die URL /wd/hub/session zu holen festgestellt:","closed","C-nodejs,","marcioarend","2016-07-07T15:01:13Z","2019-08-19T23:09:49Z"
"","2611","Actions sendKeys UnsupportedCommandException with geckodriver","## Meta - Unable to run the script using selenium 3.0.0 Beta 2 with geckodriver-v0.10.0-win64 driver in FF v48  OS:  Win 7 Enterprise 64 Bit    Selenium Version:  3.0.0 Beta 2, geckodriver-v0.10.0-win64, JDK 8U_102x64    Browser:  Fire Fox 48.0    Browser Version:  48.0   ## Expected Behavior - The script should run with FF v 48 using geckodriver-v0.10.0-win64 driver ## Actual Behavior - The script failed with below exceptions  ``` 1471151803318   addons.xpi-utils    WARN    addMetadata: Add-on e10srollout@mozilla.org is invalid: [Exception... ""Component returned failure code: 0x80570016 (NS_ERROR_XPC_GS_RETURNED_FAILURE) [nsIJSCID.getService]""  nsresult: ""0x80570016 (NS_ERROR_XPC_GS_RETURNED_FAILURE)""  location: ""JS frame :: resource://gre/modules/XPCOMUtils.jsm :: XPCU_serviceLambda :: line 230""  data: no] Stack trace: XPCU_serviceLambda()@resource://gre/modules/XPCOMUtils.jsm:230 < XPCU_defineLazyGetter/ resource://gre/modules/Promise-backend.js:816 < this.PromiseWalker.scheduleWalkerLoop/ resource://gre/modules/Promise-backend.js:750 < syncLoadManifestFromFile()@resource://gre/modules/addons/XPIProvider.jsm:1496 < addMetadata()@resource://gre/modules/addons/XPIProvider.jsm -> resource://gre/modules/addons/XPIProviderUtils.js:1647 < processFileChanges()@resource://gre/modules/addons/XPIProvider.jsm -> resource://gre/modules/addons/XPIProviderUtils.js:2011 < this.XPIProvider.checkForChanges()@resource://gre/modules/addons/XPIProvider.jsm:3708 < this.XPIProvider.startup()@resource://gre/modules/addons/XPIProvider.jsm:2697 < callProvider()@resource://gre/modules/AddonManager.jsm:227 < _startProvider()@resource://gre/modules/AddonManager.jsm:778 < AddonManagerInternal.startup()@resource://gre/modules/AddonManager.jsm:962 < this.AddonManagerPrivate.startup()@resource://gre/modules/AddonManager.jsm:2934 < amManager.prototype.observe()@resource://gre/components/addonManager.js:71 1471151803319   addons.xpi-utils    WARN    Could not uninstall invalid item from locked install location 1471151803684   Marionette  INFO    Listening on port 63214 1471151804994   Marionette  INFO    startBrowser f497d69a-b705-43f8-a8c0-71627c715027 1471151805011   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151805346   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151805543   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151817313   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151817339   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151817402   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151817410   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151817463   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151817475   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 JavaScript error: resource://gre/modules/FormHistory.jsm, line 379: TypeError: Services.storage is undefined 1471151817511   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151819475   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151819523   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151822953   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151823050   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 1471151823087   Marionette  INFO    sendAsync f497d69a-b705-43f8-a8c0-71627c715027 Exception in thread ""main"" org.openqa.selenium.UnsupportedCommandException: POST /session/f497d69a-b705-43f8-a8c0-71627c715027/keys did not match a known command (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 5 milliseconds Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'IE3BLT3VB2N62', ip: '172.21.4.204', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_102' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, marionette=true, appBuildId=20160726073904, version=, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=48.0, platformVersion=6.1, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: f497d69a-b705-43f8-a8c0-71627c715027     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)     at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)     at org.openqa.selenium.remote.RemoteKeyboard.sendKeys(RemoteKeyboard.java:35)     at org.openqa.selenium.interactions.SendKeysAction.perform(SendKeysAction.java:49)     at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)     at org.openqa.selenium.interactions.Actions.perform(Actions.java:373)     at niagara4.JiraStory.main(JiraStory.java:59) ``` ## Steps to reproduce - Using the below piece of code, was trying to create a story in JIRA tool, however after selecting the element called 'Story', failed to hit enter due to which the execution failed with above exception.  ``` System.setProperty(""webdriver.gecko.driver"",""C:\\Automation\\softwares\\geckodriver-v0.10.0-win64\\geckodriver.exe"");                DesiredCapabilities capabilities = DesiredCapabilities.firefox();         capabilities.setCapability(""marionette"", true);         WebDriver driver = new FirefoxDriver(capabilities);              //WebDriver driver = new FirefoxDriver();         driver.manage().timeouts().implicitlyWait(15,TimeUnit.SECONDS);         driver.get(data00);         WebElement uswb = driver.findElement(By.xpath(""//input[@id='login-form-username']""));         uswb.sendKeys(data01);         WebElement pswd = driver.findElement(By.id(""login-form-password""));         pswd.sendKeys(data02);           driver.findElement(By.xpath(""//input[@id='login']"")).click();         driver.findElement(By.xpath(""//a[@href='/secure/CreateIssue!default.jspa']"")).click();         driver.findElement(By.xpath(""//input[@id='issuetype-field']"")).clear();         driver.findElement(By.xpath(""//input[@id='issuetype-field']"")).sendKeys(""Story"");         Actions act=new Actions(driver);         act.sendKeys(Keys.ENTER).perform();         Thread.sleep(15000); ```","closed","G-w3c,","kumarTech16","2016-08-14T05:50:24Z","2019-08-18T23:09:56Z"
"","2293","Open a new tab with firefox 46.0.1 and switch handle","## Meta - Open a new tab with firefox 46.0.1 and switch handle  OS:      Windows 8.1 Selenium Version:      Browser:   Firefox     Browser Version:  46.0.1   ## Expected Behavior -  Open a new tab and switching context to the new tab. This works with ChromeDriver but not with FireFoxDriver  driver.findElement(By.cssSelector(""body"")).sendKeys(Keys.CONTROL + ""t""); ArrayList tabs2 = new ArrayList (driver.getWindowHandles()); driver.switchTo().window(tabs2.get(1)); driver.get(TestTemplate.templateBaseUrl); ## Actual Behavior -  Opens a new tab, but driver.getWindowHandles returns only one handle instead of two. This results in indexOutOfBounds. ## Steps to reproduce -  Execute posted code with Firefox 46.0.1 and FirefoxDriver","closed","","RimacV","2016-06-15T11:35:23Z","2019-08-20T02:09:45Z"
"","2634","WebDriverException thrown from SendKeys() Selenium Grid","## Meta - Node Configuration  OS:  Windows Server 2008 R2 6.1  |  v2.53.1  |  ra36b8b1    Selenium Version:   Selenium standalone server 2.53.1 Selenium.WebDriver 2.53.1  Selenium.Support 2.53.1 Selenium.WebDriver.IEDriver 2.53.1.1    Browser:  Internet Explorer    Browser Version:  11    I am attempting to get my tests running in parallel on the Selenium Grid. My Internet Explorer tests consistently fail on the SendKeys() call giving me the following exception.   ``` 2016-08-19 16:44:33,256 DEBUG Test - OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://10.34.161.112:5555/wd/hub/session/0febecc5-3692-4f44-a263-70702f2d86b1/element/1/value timed out after 60 seconds. ---> System.Net.WebException: The operation has timed out    at System.Net.HttpWebRequest.GetResponse()    at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)    --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.SendKeys(String text)    at POMAuctivaTest.TestSuite.Test.setUp() in c:\git\POMAuctivaTest\POMAuctivaTest.TestSuite\Test.cs:line 35 ```  I have tested locally and this is only an issue when ran on the grid. I was able to reproduce the issue on a non-internal site. Although the node is internal I hope you guys can reproduce the issue, here is the code.   ``` using System; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Support.UI; using OpenQA.Selenium.Remote; using OpenQA.Selenium.IE; using POMAuctivaTest.AuctivaPageModels;  namespace POMAuctivaTest.TestSuite {     [TestFixture]     public class Test     {         public IWebDriver driver { get; set; }         [OneTimeSetUp]         public void setUp()         {                 DesiredCapabilities capabilities = DesiredCapabilities.InternetExplorer();                 capabilities.SetCapability(CapabilityType.BrowserName, ""internet explorer"");                 capabilities.SetCapability(CapabilityType.Platform, new Platform(PlatformType.Windows));                 capabilities.SetCapability(CapabilityType.Version, ""11"");                 driver = new RemoteWebDriver(new Uri(""http://10.34.161.112:5555/wd/hub""), capabilities);                 //driver = new InternetExplorerDriver();                 driver.Manage().Timeouts().SetPageLoadTimeout(TimeSpan.FromSeconds(30));                 driver.Manage().Window.Maximize();                 driver.Navigate().GoToUrl(""https://passport.yandex.com/passport?mode=auth&retpath=https%3A%2F%2Fmail.yandex.com%2Flite%2Finbox"");                 By usernameSelector = By.CssSelector(""#login"");                 By passwordSelector = By.CssSelector(""#passwd"");                 By loginButtonSelector = By.CssSelector(""body > div > div.layout-inner > div.domik-wrap > div > div.domik-content > form > div.domik-row > div > button"");                 WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));                 wait.Until(ExpectedConditions.ElementExists(loginButtonSelector));                 driver.FindElement(usernameSelector).SendKeys(""pomauctivaie@yandex.com"");                 driver.FindElement(passwordSelector).SendKeys(""Bugzilla1!"");                 driver.FindElement(loginButtonSelector).Click();         }          [Test]         public void testIE()         {                             driver.Manage().Window.Maximize();                 System.Threading.Thread.Sleep(5000);                   }          [OneTimeTearDown]         public void tearDown()         {             driver.Quit();         }     } } ```","closed","","jburns24","2016-08-20T00:00:32Z","2019-08-19T19:09:40Z"
"","2233","[Node.js] webdriver.get not open browser window with promise.then","## Meta - driver.get not open the browser window  OS:  linux & win32    Selenium Version:  2.53.2    Browser:  chrome    Browser Version: 50.0.2661.102 m    ## Expected Behavior -  use the following javascript code to open browser window  ``` javascript const WebDriver     = require('selenium-webdriver')  var driver = new WebDriver.Builder() .setAlertBehavior('ignore') .forBrowser('chrome') .build()  function bug() {   console.log('bug: `driver.get` will hang\n' + '\n' + bug + '\n')   Promise.resolve()   .then(() => 'test')   .then(() => driver.get('about:blank')) }  bug() ``` ## Actual Behavior -  after run, there's no window opened by webdriver. the program hang.   I run this code under nodejs v6.0.0 ## Steps to reproduce -    I had experienced a very strange bug with nodejs & selenium-webdriver recently. It looks related with nodejs event loop / promise / selenium-webdriver.  In short: **webdriver.get call will hang when use with some promise.then.** ### First, let's see a piece of javascript code which works well:  ``` javascript const WebDriver     = require('selenium-webdriver')  var driver = new WebDriver.Builder() .setAlertBehavior('ignore') .forBrowser('chrome') .build()  function ok() {   console.log('ok: driver.get will open a browser window\n' + '\n' + ok + '\n')   driver.get('about:blank') }  ok() ```  This code will open a browser window, which works as expected.  But all of the following code will show strange behaviour. ### Bug - driver.get will hang  after add a dummy .then(() => 'test')  ``` javascript function bug() {   console.log('bug: `driver.get` will hang\n' + '\n' + bug + '\n')   Promise.resolve()   .then(() => 'test')   .then(() => driver.get('about:blank')) } ``` ### Fix1 - delete the 1st then call  ``` javascript function fire1() {   console.log('fix1: delete the `then` call\n' + '\n' + fire1 + '\n')   Promise.resolve()   .then(() => driver.get('about:blank')) } ``` ### Fix2 - or add a catch call  ``` javascript function fire2() {   console.log('fix2: add a `catch` call\n' + '\n' + fire2 + '\n')   Promise.resolve()   .then(() => 'test')   .catch(e => console.error(e))   .then(() => driver.get('about:blank')) } ``` ### Fix3 - or resolve the promise with a setTimeout instead of resolve directly  ``` javascript function fire3() {   console.log('fix3: resolve promise with a `setTimeout` call\n' + '\n' + fire3 + '\n')   new Promise((resolve, reject) => {     setTimeout(resolve, 0)   })   .then(() => 'test')   .then(() => driver.get('about:blank')) } ```  All of the above code is tested under nodejs v6.0.0.  Has there anybody met this kind of problem before? What's the reason behind this?  I thought it maybe related with the nodejs event loop, or native promise implementation... but I'm dont know how to dig deeper any more.  Code in Gist: https://gist.github.com/zixia/77896cbd446c7282f760c60a025fee17 Stackoverflow: https://stackoverflow.com/questions/37692364/selenium-webdriver-hang-in-very-simple-javascript-code-with-promise-then","closed","C-nodejs,","huan","2016-06-08T02:50:18Z","2019-08-19T07:09:41Z"
"","2617","cannot focus element in GC V52 with Selenium 3.0.0Beta2","## Meta - Caused by: org.openqa.selenium.WebDriverException: unknown error: cannot focus element  OS:  Win 7x64  Selenium V 3.0.0 Beta 2, JDK 8U102  Browser Version:  GC V52 Logged issue in GC: [https://bugs.chromium.org/p/chromedriver/issues/detail?id=1468] ## Expected Behavior - The JAR file created to create a story in JIRA tool should run in GC V52 with Selenium 3.0.0Beta2 ## Actual Behavior - The execution fails with below exception:  ``` C:\Automation\JiraStory>java -jar story1.jar Starting ChromeDriver 2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961) on port 14846 Only local connections are allowed. Exception in thread ""main"" java.lang.reflect.InvocationTargetException         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader.main(JarRsrcLoa der.java:58) Caused by: org.openqa.selenium.WebDriverException: unknown error: cannot focus e lement   (Session info: chrome=52.0.2743.116)   (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef9 61),platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 439 milliseconds Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'IE3BLT81BLG32', ip: '10.77.9.75', os.name: 'Windows 7', os.a rch: 'amd64', os.version: '6.1', java.version: '1.8.0_102' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEn abled=false, chrome={userDataDir=C:\Users\e867098\AppData\Local\Temp\scoped_dir9 168_21777}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, h asTouchScreen=false, version=52.0.2743.116, platform=XP, browserConnectionEnable d=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, we bStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnable d=true, cssSelectorsEnabled=true}] Session ID: 950e501ee92a1e77c15be2267cee6e11         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)          at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)          at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Sou rce)         at java.lang.reflect.Constructor.newInstance(Unknown Source)         at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler. java:206)         at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHa ndler.java:158)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.ja va:683)         at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement. java:319)         at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement .java:122)         at niagara4.JiraStory.main(JiraStory.java:61)         ... 5 more  C:\Automation\JiraStory> ``` ## Steps to reproduce -  Automate the process to create a story using JIRA tool with IDE. Generate a JAR file (executable file) from the script. Execute this JAR file from other PC where IDE or any other Selenium modules are not available/installed.   Execute the JAR file from command promt, observe the process fails after few steps. In my case the login was successful however after selecting a component called 'Story', failed to select it. **Refer piece of code below:**  ``` System.setProperty(""webdriver.chrome.driver"", ""C:\\Automation\\softwares\\chromedriver_win32\\chromedriver.exe""); WebDriver driver=new ChromeDriver(); driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS); driver.get(data00); WebElement uswb = driver.findElement(By.xpath(""//input[@id='login-form-username']"")); uswb.sendKeys(data01); WebElement pswd = driver.findElement(By.id(""login-form-password"")); pswd.sendKeys(data02);   driver.findElement(By.xpath(""//input[@id='login']"")).click(); driver.findElement(By.xpath(""//a[@href='/secure/CreateIssue!default.jspa']"")).click(); driver.findElement(By.xpath(""//input[@id='issuetype-field']"")).clear(); driver.findElement(By.xpath(""//input[@id='issuetype-field']"")).sendKeys(""Story""); Actions act=new Actions(driver); act.sendKeys(Keys.ENTER).perform(); Thread.sleep(5000); driver.findElement(By.xpath(""//input[@id='summary']"")).sendKeys(data03); ```","closed","","kumarTech16","2016-08-17T04:11:19Z","2019-08-19T13:09:57Z"
"","2174","Can not install Safari Driver extension (2.48) in Safari 9.1.1 (OS X Yosemite 10.10.5)","## Meta - browser-safari  OS:  Mac OS X Yosemite 10.10.5 Selenium Version:  Selenium Server 2.47.1 Browser:  Safari Browser Version:  9.1.1 (64 bit) ## Expected Behavior -  Safari Driver extension should get installed. ## Actual Behavior -  Extension is not getting installed. ## Steps to reproduce - 1. Download Safari driver extension. 2. Double click to install 3. Click on the trust button  After clicking on trust button nothing happens. Extension does not get installed. Seems it is a Safari issue after ‚Äú Security Update 2016-003""","closed","A-needs new owner,","abhishekswain","2016-05-27T14:09:26Z","2019-08-20T04:09:40Z"
"","2488","Connection reset  On Connect with C# Driver on Windows Server 2012R2 - 2.53.1","## Meta -  Windows Server 2012 R2 Selenium Version:   Tested with 2.52.0 2.53.1  Browser:   FireFox: 47.0.1 When I Try to create the driver with c# code I get   >  Selenium errorSystem.InvalidOperationException: Connection reset  >    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)  >    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)  >    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)  >    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)  >    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)   It worked for monthes, no code changes done, no reconfigurations done (only windows and browser auto updates)  any hint what can be wrong?  Here the startup log  > 06:39:38.612 INFO [1] org.openqa.grid.selenium.GridLauncher - Launching a standalone Selenium Server > 06:39:38.663 INFO [1] org.openqa.selenium.server.SeleniumServer - Writing debug logs to selenium.log > 06:39:38.663 INFO [1] org.openqa.selenium.server.SeleniumServer - Java: Oracle Corporation 25.73-b02 > 06:39:38.663 INFO [1] org.openqa.selenium.server.SeleniumServer - OS: Windows Server 2012 R2 6.3 x86 > 06:39:38.671 INFO [1] org.openqa.selenium.server.SeleniumServer - v2.53.1, with Core v2.53.1. Built from revision a36b8b1 > 06:39:38.718 INFO [1] org.openqa.selenium.remote.server.DefaultDriverProvider - Driver class not found: com.opera.core.systems.OperaDriver > 06:39:38.718 INFO [1] org.openqa.selenium.remote.server.DefaultDriverFactory - Driver provider com.opera.core.systems.OperaDriver is not registered > 06:39:38.722 INFO [1] org.openqa.selenium.remote.server.DefaultDriverSessions - Driver provider org.openqa.selenium.safari.SafariDriver registration is skipped: > registration capabilities Capabilities [{browserName=safari, version=, platform=MAC}] does not match the current platform WIN8 > 06:39:38.723 INFO [1] org.openqa.selenium.remote.server.DefaultDriverProvider - Driver class not found: org.openqa.selenium.htmlunit.HtmlUnitDriver > 06:39:38.723 INFO [1] org.openqa.selenium.remote.server.DefaultDriverFactory - Driver provider org.openqa.selenium.htmlunit.HtmlUnitDriver is not registered > 06:39:38.812 INFO [1] org.openqa.selenium.server.SeleniumServer - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub > 06:39:38.812 INFO [1] org.openqa.grid.selenium.GridLauncher - Selenium Server is up and running","closed","","BoasE","2016-07-19T06:46:50Z","2019-08-19T17:09:35Z"
"","2767","Old preferences sent to the geckodriver for a local instance (Python client)","## Meta -  Windows 8.1, Firefox 48.0.2, Python 3.5.2, Selenium 3.0.0.b2 ## Actual Behavior -  A local instance of the driver starts a different configuration of Firefox compared to a remote instance (with marionette enabled in both cases):  [local preferences vs remote preferences](https://github.com/SeleniumHQ/selenium/files/470085/diff.pdf)  The remote instance has the preferences defined by the geckodriver while the local instance has the preferences from the former driver (2.53). The local driver creates and sends a profile by default with the old preferences to the geckodriver. ## Expected Behavior -  The local driver shouldn't create and send a profile by default when the `marionette` capability is set to true. ## Local instance -  ``` python from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  DesiredCapabilities.FIREFOX['marionette'] = True driver = webdriver.Firefox(executable_path='geckodriver.exe') ``` ## Remote instance -  ``` python from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  capabilities = DesiredCapabilities.FIREFOX capabilities['marionette'] = True driver = webdriver.Remote(""http://localhost:4444/wd/hub"", desired_capabilities=capabilities) ```","closed","C-remote,","florentbr","2016-09-13T15:02:34Z","2019-08-14T13:09:58Z"
"","2755","Please Expose checkedLocator (ie. check)","## Meta -  Version: The Javascript Web Driver OS:  Irrelevant,but Linux Selenium Version:  the latest version on NPM Browser:  Chrome (but that's not relevant) ## Expected Behavior -  I can create my own `until` functions, based off existing ones ## Actual Behavior -  I can't, because the existing ones depend on `elementLocated` (from by.js), and that function isn't exposed (`By.by` is exposed, but `By.checkedLocator` is not). ## Steps to reproduce -  Say you want to use `until.elementLocated`, but that function returns `true` when _any number_ of matching elements is found, and you want a version that only returns `true` once `n` elements are found.  This sounds like something trivial (honestly I'm not sure why `until.elementLocated` doesn't just taken an optional argument for this very purpose, and then default it to the value it currently uses, ie. `0`).  However, it's actually impossible without copying chunks of webdriver code in to your own application, because there's no way to get `elementLocated`.  **EDIT** Just realized the same problem applies to the Condition class from the (internal) webdriver.js.","closed","C-nodejs,","machineghost","2016-09-10T00:43:15Z","2019-08-19T17:09:42Z"
"","2464","Javascript client - Builder leaves out browser custom commands when using server url","## Meta -  Selenium Version:  master branch Browser:  Chrome ## Expected Behavior -  Driver has `launchApp` command when using server url in builder. ## Actual Behavior -  ``` TypeError: driver.launchApp is not a function ``` ## Steps to reproduce -  Start chromedriver on `http://127.0.0.1:9515` and run  ``` var webdriver = require('selenium-webdriver'),   chrome = require('selenium-webdriver/chrome');  var driver = new webdriver.Builder()   .forBrowser('chrome')   .setChromeOptions(new chrome.Options())   .usingServer('http://127.0.0.1:9515')   .build();  driver.launchApp(); ```","closed","C-nodejs,","oddui","2016-07-14T01:05:02Z","2019-08-19T20:09:57Z"
"","2051","Inconsistent expected conditions naming","## Meta -  Selenium Version:      visibilityOfAllElements has in my opinion a correct name for it's implementation, all elements that match the locator need to be visible, or it returns null. https://github.com/SeleniumHQ/selenium/blob/116adb894bb28eab103f066f890a16056cd7335a/java/client/src/org/openqa/selenium/support/ui/ExpectedConditions.java#L218-L273  But presenceOfAllElementsLocatedBy returns ANY present element on the page, instead of all like it claims to do. Inconsistent with visibilityOfAllElements and with what the name itself says it does. https://github.com/SeleniumHQ/selenium/blob/116adb894bb28eab103f066f890a16056cd7335a/java/client/src/org/openqa/selenium/support/ui/ExpectedConditions.java#L305-L325  I suggest this should be presenceOfAnyElementsLocatedBy..","closed","","rouke-broersma","2016-05-04T09:22:25Z","2019-08-20T07:09:33Z"
"","2214","TypeError - undefined is not a constructor (evaluating '_getTagName(currWindow).toLowerCase()')","## Meta -  OSX  10.11.5 Also on heroku cedar-14 via a Flask app Selenium Version:   2.53.2 Browser:   PhantomJS  Browser Version:   2 ## Expected Behavior -  send_keys works well and sends keys to an input/textarea/what have you ## Actual Behavior -  selenium.common.exceptions.WebDriverException: Message: TypeError - undefined is not a constructor (evaluating '_getTagName(currWindow).toLowerCase()') ## Steps to reproduce -  Background: OS X El capitan locally, heroku on the web. Python 3.4 in venv. Error throws for both. I'm using the Selenium webdriver (2.53.2) Here's the traceback:  *_The desired behavior is for it to send the keys to the value of the web element. *_  The specific problem or error:  ``` WebDriverWait(driver, 10).until(     EC.element_to_be_clickable((By.CSS_SELECTOR, ""#onyen""))     ).send_keys(onyen) ```  *_The traceback is *_  ``` Traceback (most recent call last):   File ""driver.py"", line 332, in      to_shopping_cart(phantom=True)   File ""driver.py"", line 47, in to_shopping_cart     ).send_keys(onyen)   File ""/app/.heroku/python/lib/python3.4/site-packages/selenium/webdriver/remote/webelement.py"",        line 322, in send_keys     self._execute(Command.SEND_KEYS_TO_ELEMENT, {'value': keys_to_typing(value)})   File ""/app/.heroku/python/lib/python3.4/site-packages/selenium/webdriver/remote/webelement.py"", line 457, in _execute     return self._parent.execute(command, params)   File ""/app/.heroku/python/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line    233, in execute     self.error_handler.check_response(response)   File ""/app/.heroku/python/lib/python3.4/site-packages/selenium/webdriver/remote/errorhandler.py"",     line 165, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: TypeError - undefined is not a function       (evaluating '_getTagName(currWindow).toLowerCase()') ```  I have no idea how to fix this traceback, after opening all the files listed.  Here is the shortest code necessary to reproduce the question itself, provided you're in a venv of python 3.4 with selenium 2.53.2  ``` from selenium import webdriver driver = webdriver.PhantomJS() # webdriver.Firefox() works no problem driver.get(""https://sso.unc.edu/idp/Authn/UserPassword"") WebDriverWait(driver, 10).until(     EC.element_to_be_clickable((By.CSS_SELECTOR, ""#onyen""))     ).send_keys(onyen) ```  It is important to note that the same error is thrown on heroku bash and my own machine, however on my own machine the file paths start with /venv/python3.4 instead of /.heroku/python/lib/python3.4.","closed","","Ddfulton","2016-06-06T00:42:04Z","2019-08-18T08:09:59Z"
"","2298","WebDriverException for only one page, rest of the application works fine","## Meta -  OS:Windows7 64bit      Selenium Version:  2.47.0    Browser: Internet Explorer (11)  -->  Browser Version:     ## Expected Behavior -  Selenium should Successfully switch to Next Page. ## Actual Behavior -  Selenium Throwing WebDriverException Test case failed : OpenQA.Selenium.WebDriverException : The HTTP request to the remote WebDriver server for URL http://localhost:50985/session/42936a5b-eed5-4e2f-9a8d-2cb40fc89ff4/window_handles timed out after 120 seconds.   ----' System.Net.WebException : The operation has timed out OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)  ```  OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)   OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)   OpenQA.Selenium.Remote.RemoteWebDriver.get_WindowHandles()   OpenQA.Selenium.Support.Events.EventFiringWebDriver.get_WindowHandles() ``` ## Steps to reproduce -","closed","","BRAutomation","2016-06-16T09:37:23Z","2019-08-19T10:09:35Z"
"","1974","clickandwait / selectwindow fails to find newly opened window","## Meta -  OS:windows 7 64 bit--> Selenium Version: selenium ide 2.9.1 Browser:firefox Browser Version:45.02 ## Expected Behavior -  I use click  which opens a new window then I try selectwindow with nothing in the target field  I expect to then be  'moved' to the new window so that I can access fields (using storetext) ## Actual Behavior -  however, selectwindow 'works' (green) but doesn't go to the new window and store text fails because I am still on the original window. [this is with single stepping through the code] If i try clickandwait then it times out  I am happy to provide an example if you can suggest a suitable website with click opening new window","closed","C-ide,","seanv507","2016-04-15T08:59:03Z","2019-08-17T17:09:39Z"
"","2610","Manage().Cookies.DeleteAllCookies() timeout","## Meta -  OS: Windows server 2012 R2 Datacenter    Selenium Version:  2.53.0 IDE    Browser:  IE 11   ## Expected Behavior -  At least not timeout ## Actual Behavior -  Timeout, then browser needs to be restarted ## Steps to reproduce -  Simply using Manage().Cookies.DeleteAllCookies() with an IWebDriver to IE.  Note that exactly the same configuration works fine on Windows 7.  If more details are needed, let me know.","closed","","cherrr","2016-08-12T21:21:26Z","2019-08-19T20:09:41Z"
"","1993","Firefox unable to bind to locking port","## Meta -  OS: Windows Server 2012 R2 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0.2  Using Selenium Grid and running on Python.  When I start multiple (5) firefox webdrivers at once it throws an WebdriverException. I use Behave as a runner for these tests. However Behave has no support for parallel running (yet), so I've made my own script for this. This will start up to 5 tests by executing a separate command for each of them. ## Expected Behavior -  5 firefox browsers get opened and start executing the tests. ## Actual Behavior -  A WebdriverException gets thrown.  ``` selenium.common.exceptions.WebDriverException: Message: Unable to bind to locking port 7054 within 45000 ms Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'WIN-C9MAHQ7GST9', ip: '10.10.200.110', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_65' Driver info: driver.version: FirefoxDriver Stacktrace:     at org.openqa.selenium.internal.SocketLock.lock (SocketLock.java:99)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start (NewProfileExtensionConnection.java:80)     at org.openqa.selenium.firefox.FirefoxDriver.startClient (FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver. (RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver. (FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver. (FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver. (FirefoxDriver.java:129)     at sun.reflect.GeneratedConstructorAccessor23.newInstance (None:-1)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (None:-1)     at java.lang.reflect.Constructor.newInstance (None:-1)     at org.openqa.selenium.remote.server.FirefoxDriverProvider.callConstructor (FirefoxDriverProvider.java:91)     at org.openqa.selenium.remote.server.FirefoxDriverProvider.newInstance (FirefoxDriverProvider.java:68)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance (DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call (DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call (DefaultSession.java:1)     at java.util.concurrent.FutureTask.run (None:-1)     at org.openqa.selenium.remote.server.DefaultSession$1.run (DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1)     at java.lang.Thread.run (None:-1) ``` ## Steps to reproduce -  Open a bunch of firefox drivers (might be more than 5, I'm thinking my server is too slow too handle 5) all at the same time.","closed","","remcowesterhoud","2016-04-20T10:22:40Z","2019-08-19T23:09:40Z"
"","1973","""Command line server for the IE driver has stopped working"" with IEDriverServer.exe since upgrade to 2.53.0.0","## Meta -  OS: Windows Server 2008 R2 Standard 64 bit Selenium Version: 2.53.0.0 Browser: IE Browser Version: IE 11.0.9600.17801 ## Expected Behavior -  Tests to run reliably on build server ## Actual Behavior -  Tests fail sporadically with ""Command line server for the IE driver has stopped working"" ## Steps to reproduce -  Migrate to 2.53.0.0 Use IEDriver - these are my packages:  ``` xml          ```  ![image](https://cloud.githubusercontent.com/assets/1010525/14556062/17dc65dc-02ee-11e6-9d38-da4860ad6999.png)  I'm going to try and rollback to using 2.50.1 (which I don't remember presenting this error)","closed","","johnnyreilly","2016-04-15T08:44:17Z","2019-08-15T20:09:34Z"
"","1843","Sometimes InternetExplorerDriver.Dispose() takes 1 to 2 miunutes","## Meta -  OS: Windows Server 2008 R2 Enterprise Selenium Version: 2.48.0  Browser: IE11 Browser Version: 11.0.9600.18204 (Update Versions: 11.0.28) ## Expected Behavior -  Dispose() immediately shuts down IE. ## Actual Behavior -  Dispose() takes 1 to 2 minutes, then, finally, IE is shut down (no exception, no problematic log output in InternetExplorerDriver log). ## Steps to reproduce -  Unfortunately, the problem currently occurs on our build server only. IE settings double-checked.","closed","D-IE,","drauch","2016-03-18T12:43:13Z","2019-08-20T09:10:00Z"
"","1821","How to read the WebElement object from a MapBox or Bing map","## Meta -  OS: Windows All versions Selenium Version: 2.48.2 Browser: All Browsers Browser Version: Latest version of Browser ## Expected Behavior -  When locating a point of a polygon in Bing map DOM should display the Matching node ## Actual Behavior -  Firebug reads the XPath but DOM is displaying 'No Matching Nodes' ## Steps to reproduce - 1. Navigate to https://www.mapbox.com/mapbox.js/example/v1.0.0/point-in-polygon/ in Firefox browser with Firebug addon 2. Locate a point in the map using Firebug, Or Inspect a element in the Map 3. Notice that XPath is displayed, but the DOM is displaying No Matching nodes.  As a result when this XPath is included in the script, Selenium is throwing No such element found exception. ![mapbox locator issue](https://cloud.githubusercontent.com/assets/10337451/13803570/a02e7dc0-eb6b-11e5-98d3-3b09c9e707d1.jpg)","closed","","makmahesh","2016-03-16T06:08:55Z","2019-08-19T08:09:55Z"
"","1867","Element is not clickable at point","## Meta -  OS: Windows 8.1 Selenium Version: 2.53.0, Browser:  Firefox Browser Version: 45.0.1 (64-bit) ## Expected Behavior -  I have some code in Java WebDriver In selenium build version 2.48.2 that: driver.findElement(By.xpath(""//span/span/span[text()='Profiles']"")).click()  worked well ## Actual Behavior -  This execution has stopped working in build version 2.53.0: driver.findElement(By.xpath(""//span/span/span[text()='Profiles']"")).click()  I have ERROR:  ``` org.openqa.selenium.WebDriverException: Element is not clickable at point (1056, 528). Other element would receive the click:  Command duration or timeout: 78 milliseconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'SWMINDmadu', ip: '10.5.100.34', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_51' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=45.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: d7254e66-755d-4646-8f94-9a98ed0719fd     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)     at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)     at General.GeneralADMIN.LogIn(GeneralADMIN.java:27)     at Profiles.EventsTC.beforeTest(EventsTC.java:19)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)     at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)     at org.testng.TestRunner.beforeRun(TestRunner.java:648)     at org.testng.TestRunner.run(TestRunner.java:616)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)     at org.testng.SuiteRunner.run(SuiteRunner.java:261)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)     at org.testng.TestNG.run(TestNG.java:1024)     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176) ``` ## Steps to reproduce -  I think this is due to the fact: text()='Profiles'  This is very sad because 80% my elemets contain ""text""","closed","","marious88","2016-03-23T13:57:32Z","2019-08-16T06:09:55Z"
"","1942","Unable to find element","## Meta -  OS: Windows 8.1 Selenium Version: 2.53.0 Browser: IE11 Browser Version: IE 11 64 bit ## Expected Behavior -  It's unable to find an element, the code works correctly on both FF and Chrome. This means that element exist on the page. ## Actual Behavior -  It throws an exception ## Steps to reproduce -  Please run the below code:  package tutorialselenium;  import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.ie.InternetExplorerDriver; import org.testng.annotations.AfterClass; import org.testng.annotations.BeforeClass; import org.testng.annotations.Test;  public class IEIssue {     private WebDriver driver;     private String baseUrl;  ``` @BeforeClass public void beforeClass() {     System.setProperty(""webdriver.ie.driver"",             ""C:\\Users\\Anil Tomar\\workspace\\SeleniumWD2Tutorial\\libs\\IEDriverServer.exe"");     driver = new InternetExplorerDriver();      baseUrl = ""https://www.expedia.com/"";     // Maximize the browser's window     driver.manage().window().maximize();     driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);     driver.get(baseUrl); }  @Test public void searchFlights() throws Exception {             // By id or xpath, it does not work by both     // WebElement element = driver.findElement(By.id(""tab-flight-tab""));     WebElement element = driver.findElement(By.xpath(""//a[@id='tab-flight-tab']""));     element.click(); }  @AfterClass public void afterClass() throws Exception {     driver.quit(); } ```  }","closed","D-IE,","atomar09","2016-04-08T01:45:50Z","2019-08-14T05:09:54Z"
"","1874","Viewport unexpectedly scroll up to the top of web page after getScreenshotAs() execution","## Meta -  OS: Windows 7 x64 Selenium Version: 2.52.0 (2.53.0) (x32 ie driver 2.48 and upper) Browser: IE Browser Version: 11 ## Expected Behavior -  Viewport should not change position after getScreenshotAs() and method should returns screenshot of bottom part of web page ## Actual Behavior -  Viewport unexpectedly scroll up to the top of web page and getScreenshotAs() returns top part of web page ## Steps to reproduce - 1. Create IE driver instance 2. Navigate to any web page with scroll bar 3. Scroll down page to bottom part 4. Take screenshot using ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE)","closed","","MSauchanka","2016-03-24T11:03:31Z","2019-08-20T10:09:37Z"
"","2200","ie webdriver: change attribute order in a form tag","## Meta -  OS: Windows 7 SP1, EN x86_64 Selenium Version: 2.53.1.0 Browser: Internet Explorer Browser Version: 11.0.9600.18314 ## Expected Behavior -  I'm using codeception as a framework and my test is using seeInPageSource() function, which should found the text in the page source.  `seeInPageSource('","closed","","Alexhha","2016-06-02T11:15:54Z","2019-08-20T04:09:54Z"
"","2516","IE is unable to click on selector","## Meta -  OS: Windows 7 Enterprise SP1 x86 (modern.ie virtual machine) Selenium Version: 2.53.1 Browser:  Internet Explorer 10 Browser Version: 10.0.9200.17148 ## Expected Behavior -  The browser is able to click on the selector `.table-category .separating-list-item:nth-child(1) .button.button--primary` ## Actual Behavior -  IE reports `Cannot click on element` and fails. Chrome, Safari, Firefox are working fine. ## Steps to reproduce -  Visit the following page https://www.volkswagen.es/app/configurador/vw-es/es/polo/30205/36210/bluemotion/6C12LN-GPJZPJZ-MSNRS3C-GWB1WB1-GZBEZBE/2017/0/F14%202B2B/F56%20%20%20%20%20RU/+?page=exterior  try to click on the selector `.table-category .separating-list-item:nth-child(1) .button.button--primary` ## Additional information  Here is a debug log of the InternetExplorerDriver   https://pastebin.com/bVyLSXc9","closed","D-IE,","timbru31","2016-07-25T16:18:29Z","2019-08-14T05:09:47Z"
"","1956","IE Driver fails input digit","## Meta -  OS: Windows 7 Enterprise Selenium Version: 2.52.0 Browser: IE Browser Version: 11.0.9600.18230 ## Expected Behavior -  Types the right text in an input. ## Actual Behavior -  In my case, it happened when typing `3/`, and got `""/`. I'm using a French keyboard, and `3` needs `Shift` to be pressed, so do `/`. ## Steps to reproduce -  Cannot reproduced it. It happens randomly.","closed","D-IE,","brian-dechoux","2016-04-11T08:13:56Z","2019-08-14T05:09:56Z"
"","1896","Mocha tests hang when a failed test is encountered using --reporter doc","## Meta -  OS: Windows 7 64-bit Selenium Version: 2.53.0 Browser: Chrome Browser Version: 49.0.2623.110 m ## Expected Behavior -  I'm using a batch file that executes a Mocha test with the following command: `start ""Mocha tests"" mocha .\test\WebDriverJS.js --reporter doc --timeout 10000 1^>^> testing-results.html`  **If I do not use the `--reporter doc` flag**: When I run a passing test, the Chrome window closes and the command line environment running Mocha finishes. When I run an intentionally erroneous test (line 46 is off by one character), the Chrome window opened will close, and the command line environment invoked to run Mocha finishes, reporting a failed test error (""Wait timed out""). ## Actual Behavior -  **If I do use the `--reporter doc` flag**: When I run a passing test, the Chrome window closes and the command line environment running Mocha finishes. The doc reporter produces a complete HTML snippet. When I run an intentionally erroneous test, the Chrome window opened will **remain open**, and the command line environment invoked to run Mocha **hangs** until I manually close it. The doc reporter never finishes producing HTML (tags are unclosed, etc.). ## Steps to reproduce -  Attached is the [text of WebDriverJS.js](https://github.com/SeleniumHQ/selenium/files/195931/WebDriverJs.txt) file used in this test. You'll need to include selenium-server-standalone-2.53.0.jar as well as the latest [chromedriver](http://chromedriver.storage.googleapis.com/2.21/chromedriver_win32.zip)  (though I had the exact same problems with PhantomJS tests).","closed","C-nodejs,","christopherliu","2016-03-30T16:08:20Z","2019-08-20T03:09:44Z"
"","1834","deleteAllCookies using IEDriverServer hangs during multiple scenarios runs from same story file","## Meta -  OS: Windows 7 64 bit Selenium Version: IEDriverServer_Win32_2.48.0  Browser: IE11 64bit Browser Version: 11.0.9600.18204 ## Expected Behavior -  The call to 'deletAllCookies' from multiple scenarios in a story file should work and not make the tests hang. ## Actual Behavior -  When 'deleteAllCookies method is called on the driver, the test hangs. No error is displayed and control never comes back to the calling method. This happens only when a second scenario from the same story file runs. The first thing that happens in this scenario is to delete cookies using this method. The same line of code works fine with the very first scenario from the story file.  With IEDriverServer_Win32_2.45.0, all the scenarios in the stories calling this 'deleteAllCookies' method work fine. ## Steps to reproduce -  create a bdd story file with two or more scenarios. Ensure all scenarios are defined in the same story file. Ensure in the Given method of all these scenarios, the call to deleteAllCookies is made. Then run the tests. You will notice that the first scenario runs fine. The deleteAllCookies method in the Given method works fine. But the same hangs when next scenario runs.","closed","D-IE,","ghprashant","2016-03-17T04:02:09Z","2019-10-29T18:45:25Z"
"","1946","Exception in thread ""main"" org.openqa.selenium.UnsupportedCommandException:","## Meta -  OS: Windows 7 32 bit Selenium Version: selenium-server-standalone-2.47.1.jar Browser: Chrome / Firefox Browser Version: 49 ## Expected Behavior -  Running the script in Hub and expecting the  script to be execute in node ## Actual Behavior -  Getting below exception: Exception in thread ""main"" org.openqa.selenium.UnsupportedCommandException:   Error 403 Forbidden for Proxy   HTTP ERROR: 403Forbidden for Proxy  RequestURI=/session  Powered by Jetty://                                                     Command duration or timeout: 390 milliseconds Build info: version: '2.47.1', revision: '411b314', time: '2015-07-30 03:03:16' System info: host: 'user-PC', ip: '192.168.2.2', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_45' Driver info: org.openqa.selenium.remote.RemoteWebDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:128)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155)     at gridEx.main(gridEx.java:18) ## Steps to reproduce -  in command prompt started hub by specifying: **java -jar selenium-server-standalone-2.47.1.jar -role hub**  ```  D:\UD\jars>java -jar selenium-server-standalone-2.47.1.jar -role hub 16:25:25.386 INFO - Launching Selenium Grid hub 2016-04-08 16:25:27.804:INFO:osjs.Server:jetty-7.x.y-SNAPSHOT 2016-04-08 16:25:27.955:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContext Handler{/,null} 2016-04-08 16:25:28.014:INFO:osjs.AbstractConnector:Started SocketConnector@0.0. 0.0:4444 16:25:28.016 INFO - Nodes should register to http://192.168.2.2:4444/grid/regist er/ 16:25:28.018 INFO - Selenium Grid hub is up and running **16:31:12.162 INFO - Registered a node http://192.168.2.2:5557** this one is after registering node  ```  Following is node launch in the same machine:  ``` D:\UD\jars>java -jar selenium-server-standalone-2.47.1.jar -role webdriver -hub http://192.168.2.2:4444/grid/register/ -port 5557 16:31:09.417 INFO - Launching a Selenium Grid node 16:31:11.693 INFO - Java: Oracle Corporation 25.45-b02 16:31:11.694 INFO - OS: Windows 7 6.1 x86 16:31:11.707 INFO - v2.47.1, with Core v2.47.1. Built from revision 411b314 16:31:11.841 INFO - Driver class not found: com.opera.core.systems.OperaDriver 16:31:11.842 INFO - Driver provider com.opera.core.systems.OperaDriver is not re gistered 16:31:12.011 INFO - Selenium Grid node is up and ready to register to the hub 16:31:12.112 INFO - Starting auto registration thread. Will try to register ever y 5000 ms. 16:31:12.112 INFO - Registering the node to the hub: http://192.168.2.2:4444/gri d/register 16:31:12.163 INFO - The node is registered to the hub and ready to use ```  After that executed below code:  ``` import java.net.MalformedURLException; import java.net.URL; import org.openqa.selenium.Platform; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver; public class gridEx  {     static RemoteWebDriver driver;     public static void main(String[] args) throws MalformedURLException      {         DesiredCapabilities caps=new DesiredCapabilities().chrome();         caps.setPlatform(Platform.VISTA);         caps.setBrowserName(""chrome"");          driver=new RemoteWebDriver(new URL(""http://192.168.2.2:5557""),caps);          driver.get(""http://www.google.com"");         driver.findElementByName(""q"").sendKeys(""Hello world"");         driver.quit();     } } ```  Getting below exception:  ``` Exception in thread ""main"" org.openqa.selenium.UnsupportedCommandException:   Error 403 Forbidden for Proxy   HTTP ERROR: 403Forbidden for Proxy RequestURI=/session Powered by Jetty://    Command duration or timeout: 390 milliseconds Build info: version: '2.47.1', revision: '411b314', time: '2015-07-30 03:03:16' System info: host: 'user-PC', ip: '192.168.2.2', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_45' Driver info: org.openqa.selenium.remote.RemoteWebDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:128)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:155)     at gridEx.main(gridEx.java:18)  ```","closed","","udayanem","2016-04-08T12:08:10Z","2019-08-20T09:09:35Z"
"","1930","RemoteWebDriver doesn't work with Turkish locale","## Meta -  OS: Windows 7 (Turkish) Selenium Version: 2.53.0 Browser: Chrome Browser Version: 49.0.2623.110 m ## Expected Behavior -  When trying to use RemoteWebDriver, it throws a NullPointerException. When running locally, it works as expected. Whatever driver you use doesn't matter (firefox/chrome/ie). When I add ""-Duser.language=en"" parameter when running the server, it works as expected. It may be caused by Turkish locale (my OS is in Turkish language). The stack trace is below:  ``` Session ID: 556a79ff-7f85-414e-9ba9-13da336c2ee4     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:408)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)     at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:122)     at SleniumTest2.main(SleniumTest2.java:17) Caused by: java.lang.NullPointerException     at org.openqa.selenium.remote.server.handler.SendKeys.call(SendKeys.java:50)     at org.openqa.selenium.remote.server.handler.SendKeys.call(SendKeys.java:1)     at java.util.concurrent.FutureTask.run(Unknown Source)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)     at java.lang.Thread.run(Unknown Source) ``` ## Actual Behavior -  The code should work as expected. ## Steps to reproduce -  The following client code could be tested. For those who doesn't have a Turkish OS can reproduce the error by running the server with ""-Duser.language=tr"" parameter.   ``` public static void main(String[] args) throws MalformedURLException {         RemoteWebDriver remoteWebDriver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), DesiredCapabilities.chrome());         remoteWebDriver.get(""http://www.google.com"");         WebElement element = remoteWebDriver.findElement(By.name(""q""));         element.sendKeys(""hello world"");     } ```","closed","C-java,","poyrazus","2016-04-06T14:07:21Z","2019-08-17T14:10:00Z"
"","2274","Unexpected Alert Open - WebDriver\Exception","## Meta -  OS: Windows 7    Selenium Version:  2.53.0  Browser:  Chrome v50, Firefox v46  Browser Version:  32 bit  Expected Behavior - complete the behat test Actual Behavior -  getting following error  [WebDriver\Exception\UnexpectedAlertOpen] Unexpected modal dialog (text: Not Found) The alert could not be closed. Th e browser may be in a wildly inconsistent state, and the alert may still be  open. This is not good. If you can reliably reproduce this, please report a new issue at https://github.com/SeleniumHQ/selenium/issues with reproduct ion steps. Exception message: TypeError: a.document.getElementsByTagName(.. .)[0].getButton is not a function: Not Found Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00 :58' System info: host: 'localhost', ip: '169.254.52.152', os.name: 'Windows 7',  os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_25' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts =true, databaseEnabled=true, version=46.0.1, platform=WINDOWS, nativeEvents =false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled =true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, c ssSelectorsEnabled=true}] Session ID: 163596c8-f317-430a-88e6-1ef8a2d4870d ## Steps to reproduce -  Running behat test for moodle plugin called checklist. you can download from the following link.  https://moodle.org/plugins/pluginversions.php?plugin=mod_checklist  Moodle v3.1 PHP 5.5.17","closed","","mjamil4it","2016-06-13T13:46:29Z","2019-08-14T14:10:01Z"
"","1909","Invalid proxy type error with IEServerDriver version 2.52.1 and above","## Meta -  OS: Windows 7  Selenium Version: 2.52.1 Browser: Internet Explorer 11  Browser Version: 11.0.9600.18230  Setup: Cucumber 2.3.3, Ruby 2.1.5p273, Capybara 2.6.2 ## Expected Behavior -  I have reduced my project to a simple cucumber test with only 1 test which brings up the Google home page.  Using IEServerDriver.exe version 2.52.0 and before the test passes fine.  Starting with version 2.52.1, the test fails. ## Actual Behavior -  The test fails with the following output.  ``` Scenario: Run a simple test              # features/sample.feature:9     Given that I'm on the Google home page # features/step_definitions/sample_steps.rb:1       invalid proxy type: :"""", expected one of [:direct, :manual, :pac, :auto_detect, :system] (ArgumentError)       ./features/step_definitions/sample_steps.rb:2:in `/^that I'm on the Google home page$/'       features/sample.feature:10:in `Given that I'm on the Google home page'  Failing Scenarios: cucumber features/sample.feature:9 # Scenario: Run a simple test  1 scenario (1 failed) 1 step (1 failed) 0m1.560s  ``` ## Steps to reproduce -  I've included a small zip file that contains the test.  Using bundler, you would just need to run ""bundle exec cucumber"" in the root of the project. [IEServerDriverError.zip](https://github.com/SeleniumHQ/selenium/files/200035/IEServerDriverError.zip)","closed","","rclawson","2016-04-01T17:19:24Z","2019-08-20T06:09:57Z"
"","1998","Setting ACCEPT_SSL_CERTS CapabilityType using remoteDriver and marionette","## Meta -  OS: Windows 7 Selenium Version: Java / selenium-standalone-server 2.53.0 Browser: Firefox Browser Version: 45.0.2  I am currently writing my webdriver tests to use the remoteDriver in Java.  I am looking at changing my Webdriver tests to use marionette instead of the firefoxDriver to see how much rework I might need to do if any to swap them over as it works with both Chrome and Firefox. As we use self-sign certs previously I was using the following code to turn off the certificate warnings in firefox:  ```     capabilities = DesiredCapabilities.firefox();     capabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); ```  I can see in the standalone selenium driver that the test is sending the right capabilities but when it is being passed to marionette/wires is is being passed with the value of false. Does anyone know why this value is not being sent over?","closed","","pembertonrw","2016-04-21T09:11:43Z","2019-08-20T07:10:02Z"
"","2460","Blur event freezes the process","## Meta -  OS: Windows 7 Selenium Version: Internet Explorer Driver Server 2.53.1 Browser:  IExplorer  Browser Version:  11.0.9600.18349CO ## Expected Behavior -  Continue with the process ## Actual Behavior -  The process freezes ## Steps to reproduce -  I have a validation in a field that throws an alert message when focus lost (I use blur event to simulate this, and I need test the validation message) if the field value is wrong.   The blur event throws the validation alert message but the process freezes and never finish. The process waits for the confirmation message.  This is the code example: new JavascriptLibrary().callEmbeddedSelenium(this.getWebDriver(), ""doFireEvent"", this.getDriver().findElement(By.xpath(""//input[@name='codigoBeneficiario']"")), ""blur"");","closed","","dromero-7854","2016-07-13T13:53:12Z","2019-08-19T22:10:03Z"
"","1964","sendkeys ctrl-C does not work","## Meta -  OS: Windows 7 Selenium Version: IDE 2.9.1 Browser: Firefox Browser Version: 45.0.2 sendKeys ${KEY_HOME}${KEY_SHIFT}${KEY_END}${KEY_SHIFT}${KEY_CTRL}C${KEY_CTRL} ## Expected Behavior -  copy text in form to clipboard eg Name: BBC  expect to copy BBC ## Actual Behavior -  original text is overwritten with C  it seems like ${KEY_CTRL} is recognised but not acted upon ( same behaviour with ctrl-V,... just get V ## Steps to reproduce -  [don't know suitable website]","closed","C-ide,","seanv507","2016-04-13T14:54:38Z","2019-08-17T17:09:40Z"
"","1844","How to launch chrome with performance logging .net","## Meta -  OS: Windows 7 Selenium Version: 2.53.0 .net  Browser: Google Chrome Browser Version:  49.0.2623.87 (64 bits)  ## Expected Behavior -  Start Chrome driver using the option ""PerformanceLoggingPreferences"" to collect events from Network domain ## Actual Behavior -  I am trying to launch Chrome using the option ""PerformanceLoggingPreferences"" but i got this error :  unknown error: perfLoggingPrefs specified, but performance logging was not enabled  Did i forgot something ? I can't find any examples with Chrome performance in .net.  This is a only way to collect network event in Chrome with webdriver ? ## Steps to reproduce -  ChromePerformanceLoggingPreferences perfLogPrefs = new ChromePerformanceLoggingPreferences(); ChromeOptions options = new ChromeOptions(); perfLogPrefs.AddTracingCategories(new string[] { ""devtools.timeline"" }); options.PerformanceLoggingPreferences = perfLogPrefs; options.AddAdditionalCapability(CapabilityType.EnableProfiling, true, true); IWebDriver driver = new ChromeDriver(options);`  Thank you !.","closed","C-dotnet,","nessou","2016-03-18T16:43:54Z","2019-08-16T15:09:35Z"
"","1938","in C# function WebDriver.FileUtilities.GetCurrentDirectory() crash when WebDriver.dll add as resource","## Meta -  OS: Windows 7 Selenium Version: 2.53.0 Browser: Google Chrome Browser Version: 49.0.2623.110 ## Expected Behavior -  Add WebDriver.dll as resource into C# console exe. When call `new ChromeDriver(option);` must start the chrome browser ## Actual Behavior -  the function WebDriver.FileUtilities.GetCurrentDirectory() throw exception ""The path is not of a legal form."" ## Steps to reproduce -  Add WebDriver.dll as resource load resource with `AppDomain.CurrentDomain.AssemblyResolve` start browser with `new ChromeDriver(option);` ## My analyze  Because of WebDriver.dll is a resource,  `Assembly executingAssembly = typeof(FileUtilities).Assembly;` executingAssembly.Location return an empty string. So `Path.GetDirectoryName` throw exception ""The path is not of a legal form."" ## Workaround  Specify the path to find chromeDriverDirectory `new ChromeDriver(""."", option);` ## Possible fix  inside WebDriver.FileUtilities.GetCurrentDirectory()  ``` public static string GetCurrentDirectory() {     Assembly executingAssembly = typeof(FileUtilities).Assembly;     string location = executingAssembly.Location;     // If WebDriver.dll is insert as resource then location is empty     if (string.IsNullOrWhiteSpace(location))     {         location = Assembly.GetExecutingAssembly().Location;         // If empty get current path         if (string.IsNullOrWhiteSpace(location))         {             location = System.IO.Directory.GetCurrentDirectory();         }     }     string currentDirectory = Path.GetDirectoryName(location);      // If we're shadow copying, get the directory from the codebase instead     if (AppDomain.CurrentDomain.ShadowCopyFiles)     {         Uri uri = new Uri(executingAssembly.CodeBase);         currentDirectory = Path.GetDirectoryName(uri.LocalPath);     }      return currentDirectory; } ```","closed","C-dotnet,","icejm","2016-04-07T07:17:28Z","2019-08-16T08:09:35Z"
"","1992","ActionChains doesn't store actions after perform","## Meta -  OS: Windows 7 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0.2 ## Expected Behavior -  After perform method, chain should not be store all performed operations ## Actual Behavior -  After perform method, chain store all performed operations ## Steps to reproduce -  ` b = NewButton(self) chain = ActionChains(self.driver) chain.click_and_hold(b.button_1.webelement()).perform() b.button_1.should_be(CssClass(self.click_active)) chain.release().perform()","closed","","ghost","2016-04-20T09:41:45Z","2019-08-22T07:55:10Z"
"","1841","onchange js event fired in WebElement.clear()","## Meta -  OS: Windows 7 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45 (64-bit) ## Expected Behavior -  When calling webElement.clear(), I expect the following JavaScript events to be fired: onfocus (only if the field did not have focus before) oncut (ideally, to simulate what a real user would do to clear, but I don't care that much about this event) oninput (and not onchange, because focus is still on the field) ## Actual Behavior -  onfocus (only if the field did not have focus before) onchange (instead of oninput) ## Steps to reproduce -  ``` html  ```  ``` java driver.findElement(By.id(""test"")).clear(); ```  In the Firefox console log, you see ""change"" instead of ""input"".","closed","D-atoms,","slaout","2016-03-18T11:01:59Z","2021-09-05T09:12:42Z"
"","1981","Firefox regression: No scrolling to partially displayed button anymore","## Meta -  OS: Windows 7 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 38.5.1 Property focusmanager.tetsmode = true ## Expected Behavior -  The partially displayed button is clicked ## Actual Behavior -  The partially displayed button is not clicked, obviously because the footer covers most of the button. ## Regression in WebDriver 2.50.0  Obviously there's a regression in WebDriver 2.50.0. In 2.49.1 Firefox scrolls down a little in order to display the whole button. In 2.50.0 Firefox doesn't scroll and obviously the click is sent to the footer instead of the button. ## Steps to reproduce - You need a button (in our case an image) which is partially convered (80%) by the footer. - Call ""click()"" on the button's WebElement - The click is not performed  I read #1202 entirely. The issue is highly related to this one, but this problem seems to be introduced by a fix caused by #1202. Maybe f3dc828ef04e971519d60251c73aa3933734ac6b or 65dbe9a154469fcad6318fba82452805281d6159 ?","closed","","OLibutzki","2016-04-18T06:33:49Z","2019-08-20T08:09:44Z"
"","2003","Switched to IE11 window times out [switchTo().window(handle)]","## Meta -  OS: Windows 7 Selenium Version: 2.53 Browser: IE Browser Version: 11 ## Expected Behavior -  I am using C# code to change IE11 browser's tab switch. so far i can open a new tab successfully, but when i switch the tab using the following command, my code gets stuck : `browser.driver.switchTo().window(windowHandles.oldTab)`  Is it a Selenium Bug, or is this the wrong syntax to Switch Window Handle?  when i debug the issue, i get the following exception after waiting a long time :  ``` An exception of type 'OpenQA.Selenium.WebDriverException' occurred in WebDriver.dll but was not handled in user code  Additional information: The HTTP request to the remote WebDriver server for URL http://127.0.0.1:4444/wd/hub/session/36fa4074-3b34-4dea-9da8-c8278b135c4f/window timed out after 240 seconds. ```  The issue is described in detail here, Please take a look at last 2 comment in this thread : https://github.com/angular/protractor/issues/55 ## Actual Behavior -  The driver object should Switch WindowsHandle. instead it stops at code line  browser.driver.switchTo().window(windowHandles.newTab); ## Steps to reproduce -  The code example is also written in the link.","closed","","sophiaatif","2016-04-22T17:16:32Z","2019-08-19T02:09:45Z"
"","1840","Problem with Jar inside Jar (packaged with spring-boot)","## Meta -  OS: Windows 7 Selenium Version: 2.52.0 Browser: Firefox ## Expected Behavior -  I am working with a maven Projekt wich makes use of ‚Äò‚Äô‚Äôspring boot‚Äô‚Äô‚Äô framework. The spring boot application runs Selenium Server, should start a firefox Browser and execute some Selenium Tests.  Spring Boot has the possibility to run the application via '''mvn spring-boot:run''' **This works perfectly.**  Also, it allowes to package the application inside a JAR-File and execute it with '''java -jar myProject.jar''' The myproject.jar includes all dependencies inside the lib folder.  The outcome should be the same - start firefox and run the Tests. ## Actual Behavior -  The below error occurs _only_ if I package a jar file an call it with `java ‚Äìjar myProject.jar`  ``` 2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.FirefoxLocator          : Discovering Firefox 3... 2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.BrowserLocator          : Discovering Firefox...  2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.BrowserLocator          : Checking whether Firefox launcher at :'C:\Program Files\Firefox-3\firefox.exe' is valid... 2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.BrowserLocator          : Checking whether Firefox launcher at :'C:\Program Files (x86)\Firefox-3\firefox.exe' is valid... 2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.BrowserLocator          : Checking whether Firefox launcher at :'C:\Program Files\Mozilla Firefox\firefox.exe' is valid... 2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.BrowserLocator          : Checking whether Firefox launcher at :'C:\Program Files (x86)\Mozilla Firefox\firefox.exe' is valid... 2016-03-17 17:51:50.731 DEBUG 348 --- [           main] o.o.s.b.locators.BrowserLocator          : Discovered valid Firefox launcher  : 'C:\Program Files (x86)\Mozilla Firefox\firefox.exe' jar:file:/D:/myProject-0.0.1-SNAPSHOT.jar!/lib/selenium-server-2.52.0.jar!/customProfileDirCUSTFFCHROME java.lang.RuntimeException: java.io.FileNotFoundException: D:\myProject-0.0.1-SNAPSHOT.jar!\lib\selenium-server-2.52.0.jar (Das System kann den angegebenen Pfad nicht finden)         at org.openqa.selenium.server.browserlaunchers.FirefoxChromeLauncher.launch(FirefoxChromeLauncher.java:96)         at org.openqa.selenium.server.browserlaunchers.FirefoxChromeLauncher.launchHTMLSuite(FirefoxChromeLauncher.java:313)         at org.openqa.selenium.server.browserlaunchers.FirefoxLauncher.launchHTMLSuite(FirefoxLauncher.java:98)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:146)         at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:72)         at mypackage.SeleniumRunner.runTestSuite(SeleniumRunner.java:66)         at mypackage.SeleniumRunner.run(SeleniumRunner.java:45)         at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:806)         at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:790)         at org.springframework.boot.SpringApplication.afterRefresh(SpringApplication.java:777)         at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)         at org.springframework.boot.SpringApplication.run(SpringApplication.java:1191)         at org.springframework.boot.SpringApplication.run(SpringApplication.java:1180)         at mypackage.Application.main(Application.java:13)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:54)         at java.lang.Thread.run(Unknown Source) Caused by: java.io.FileNotFoundException: D:\myProject-0.0.1-SNAPSHOT.jar!\lib\selenium-server-2.52.0.jar (Das System kann den angegebenen Pfad nicht finden)         at java.util.zip.ZipFile.open(Native Method)         at java.util.zip.ZipFile.(Unknown Source)         at java.util.zip.ZipFile.(Unknown Source)         at org.openqa.selenium.server.browserlaunchers.ResourceExtractor.extractResourcePathFromJar(ResourceExtractor.java:75)         at org.openqa.selenium.server.browserlaunchers.ResourceExtractor.extractResourcePath(ResourceExtractor.java:51)         at org.openqa.selenium.server.browserlaunchers.FirefoxChromeLauncher.extractProfileFromJar(FirefoxChromeLauncher.java:154)         at org.openqa.selenium.server.browserlaunchers.FirefoxChromeLauncher.makeCustomProfile(FirefoxChromeLauncher.java:196)         at org.openqa.selenium.server.browserlaunchers.FirefoxChromeLauncher.launch(FirefoxChromeLauncher.java:85) ```  The selenium-server-jar is inside the myproject.jar in lib/-Folder. It definitively contains the File Path (customProfileDirCUSTFFCHROME) ‚Äì I checked the /lib-Folder inside the Jar => selenium-server-2.52.0.jar is there I opened the selenium-server-2.52.0.jar and => The described folder is inside.  I think it the call to the folder is unable to get recursively in the jar, but I am not sure. ## Steps to reproduce - - clone testproject at  https://github.com/computerlyrik/selenium-spring-boot-example - try `mvn spring-boot:run`=> this should open http://google.com and exit. - try `mvn package` and `java -jar target/selenium-spring-boot-example-0.0.1-SNAPSHOT.jar` => should fail similar to above exception","closed","","computerlyrik","2016-03-18T10:37:07Z","2019-08-20T10:09:48Z"
"","1833","Encoding fails on umlauts in HTMLRunner Test report","## Meta -  OS: Windows 7 Selenium Version: 2.52.0 Browser: Firefox ## Expected Behavior -  Display umlauts √§ √∂ √º correctly ## Actual Behavior -  Some weird encoding error. Pull Request #1832 fixes this in html code ## Steps to reproduce - - clone testproject at https://github.com/computerlyrik/selenium-spring-boot-example - run `mvn spring-boot:run` => this should open http://google.com and exit. - open the resulting `results_htmlrunner_suite.html` in firefox browser","closed","C-htmlrunner,","computerlyrik","2016-03-16T23:28:31Z","2019-08-17T17:09:44Z"
"","2029","Click on map of OpenLayers 3 not working!","## Meta -  OS: Windows 7 Selenium Version:  2.53.0 Browser:  Firefox Browser Version:  46.0 ## Expected Behavior -  Click and Double Click on map of OpenLayers 3 for testing drawing features ## Actual Behavior -  Click and Double Click on map of OpenLayers 3 not working! ## Steps to reproduce -  firefox = new FirefoxDriver(); firefox.Navigate().GoToUrl( @""http://test.domain"" );  //firefox.FindElementByClassName( ""ol-zoom-in"" ).Click();      // it is working  (click on control OL3) //firefox.FindElementByClassName( ""ol-zoom-out"" ).Click();     // it is working  // create interaction Modify .......  Actions actions = new Actions( firefox ); actions.MoveToElement( firefox.FindElementByCssSelector( ""#map"" ) ).MoveByOffset( 300, 300 ).Click().Build().Perform(); // it is not working  var elAction = actions.MoveToElement( firefox.FindElementByCssSelector( ""#map"" ), 500, 200 ).ClickAndHold(); elAction.Release(); elAction.Build().Perform(); // it is not working  Actions action = new Actions( firefox ); action.MoveToElement( firefox.FindElement( By.Id( ""map"" ) ) ).Perform(); action.Click().Perform(); action.MoveByOffset( 100, 300 ).Perform(); action.Click().Perform(); action.MoveByOffset( 200, -200 ).Perform(); action.DoubleClick().Perform(); action.Click().DoubleClick().Build().Perform(); // it is not working","closed","","gevrum","2016-04-29T14:36:26Z","2019-08-19T09:09:56Z"
"","2419","NoSuchElementException: Unable to locate element in Selenium webdriver","## Meta -  OS: Windows 7 Selenium Version:  2.53 Browser:  Firefox Browser Version: 31.0 ## Expected Behavior -  I should click on a ""Register/Create an Account"" link in a login page. ## Actual Behavior -  **Unable to locate element error is displayed**  `org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""link text"",""selector"":""Register/Create an Account""} Command duration or timeout: 0 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:03:00' Session ID: 8757a2e4-a195-4ce0-b043-0f6c3decacc8 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=true, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=31.0}]     at sun.reflect.GeneratedConstructorAccessor11.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByLinkText(RemoteWebDriver.java:401)     at org.openqa.selenium.By$ByLinkText.findElement(By.java:242)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)     at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:730)     at org.openqa.selenium.support.ui.ExpectedConditions.access$0(ExpectedConditions.java:728)     at org.openqa.selenium.support.ui.ExpectedConditions$3.apply(ExpectedConditions.java:106)     at org.openqa.selenium.support.ui.ExpectedConditions$3.apply(ExpectedConditions.java:1)     at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)`  **HTML snippet of the web application** `  ...   Register/Create an Account  `  **My Test script is pretty simple**  `WebDriver driver=new FirefoxDriver(); driver.get(""http://*****.com""); WebDriverWait wait = new WebDriverWait(driver, 10); wait.until(ExpectedConditions.presenceOfElementLocated((By.linkText(""Register/Create an Account"")))); driver.findElement(By.linkText(""Register/Create an Account"")).click(); or driver.findElement(By.xpath(""//a[@href='********']"")).click();` ## Steps to reproduce -  1) Navigate to http://example.com 2) Click on **Register/Create an Account** link in the login page.  **Note: Above test script worked well in test environment but not in development environment. Test and Development environment specs are same.**   Please help me out in this regard.","closed","","shashi77","2016-07-01T15:21:28Z","2019-08-20T00:09:37Z"
"","1819","Click element didn't take effect after the element did be hovered","## Meta -  OS: Windows 7 Browser: Google Chrome ## Expected Behavior -  Click element then take action. ## Actual Behavior -  Click element but it didn't take effect. But from the screenshot we can see that the element did be hovered.   The main code are(target is a By parameter): WebDriverWait wait = new WebDriverWait(driver, timeout); element = wait.until(ExpectedConditions.elementToBeClickable(target)); element.click(); ## Steps to reproduce -  This happens occasionally which can't be reproduced every time.","closed","","fangting0622","2016-03-16T02:09:36Z","2019-08-20T09:09:38Z"
"","1853","[Chrome] unknown error: Cannot read property 'getCurrent' of undefined JavaScript stack: TypeError: Cannot read property 'getCurrent' of undefined     at updateWindow","## Meta -  OS: Windows 10, Windows server 2008 R2 Selenium Version: 2.52.0 Browser:  Google Chrome Browser Version: 49 ## Expected Behavior -  Error message should be descriptive, or not appear. ## Actual Behavior -  Unknown unfixable error message randomly comes up. ## Steps to reproduce -  No clue. It happens at random, sometimes not for weeks, sometimes a couple times a week. Issue was reported on google code on 2015-10-07 17:54:32 Old issue found at: https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/8714","closed","","rouke-broersma","2016-03-21T14:16:15Z","2019-08-20T10:09:42Z"
"","2614","Chrome v54 raises SessionNotCreatedError and exits","## Meta -  OS: Windows 10 x64 build 10586  Selenium Version: selenium-webdriver (npm) v3.0.0-beta-2 **or** selenium-webdriver (gem) v2.53.4  Browser: Chrome (dev stream)  Browser Version:  54.0.2824.0  (related) Issue filed with the ChromeDriver project: [#1464](https://bugs.chromium.org/p/chromedriver/issues/detail?id=1464) ## Expected Behavior -  A new session is created in Chrome. ## Actual Behavior -  Chrome opens displaying only a blank window (menu, frame, etc are white) then promptly closes. An error is logged to the console. The message is included below in the steps to reproduce: ## Steps to reproduce -  With the ChromeDriver v2.22 or 2.23 available, and dev stream for Chrome (now at v54): ### JavaScript  Edit and run the [google_search.js example](https://github.com/SeleniumHQ/selenium/blob/c10e8a955883f004452cdde18096d70738397788/javascript/node/selenium-webdriver/example/google_search.js#L38) using `.forBrowser('chrome')`:  ``` .js var webdriver = require('..'),     By = webdriver.By,     until = webdriver.until;  var driver = new webdriver.Builder()     .forBrowser('chrome')     .build();  driver.get('http://www.google.com/ncr'); driver.findElement(By.name('q')).sendKeys('webdriver'); driver.findElement(By.name('btnG')).click(); driver.wait(until.titleIs('webdriver - Google Search'), 1000); driver.quit(); ```  Output is:  ``` X:\node_modules\selenium-webdriver\lib\promise.js:654     throw error;     ^  SessionNotCreatedError: session not created exception from unknown error: Runtime.executionContextCreated has invalid 'context': {""auxData"":{""frameId"":""12656.1"",""isDefault"":true},""id"":1,""name"":"""",""origin"":""://""}   (Session info: chrome=54.0.2824.0)   (Driver info: chromedriver=2.23.409699 (49b0fa931cda1caad0ae15b7d1b68004acd05129),platform=Windows NT 10.0.10586 x86_64)     at WebDriverError (X:\node_modules\selenium-webdriver\lib\error.js:27:5)     at SessionNotCreatedError (X:\node_modules\selenium-webdriver\lib\error.js:214:5)     at Object.checkLegacyResponse (X:\node_modules\selenium-webdriver\lib\error.js:505:15)     at parseHttpResponse (X:\node_modules\selenium-webdriver\lib\http.js:396:13)     at doSend.then.response (X:\node_modules\selenium-webdriver\lib\http.js:328:11)     at process._tickCallback (internal/process/next_tick.js:103:7) From: Task: WebDriver.createSession()     at Function.createSession (X:\node_modules\selenium-webdriver\lib\webdriver.js:366:24)     at Driver (X:\node_modules\selenium-webdriver\chrome.js:804:38)     at Builder.build (X:\node_modules\selenium-webdriver\index.js:546:16)     at Object. (X:\node_modules\selenium-webdriver\example\google_search.js:44:6)     at Module._compile (module.js:541:32)     at Object.Module._extensions..js (module.js:550:10)     at Module.load (module.js:458:32)     at tryModuleLoad (module.js:417:12)     at Function.Module._load (module.js:409:3)     at Module.runMain (module.js:575:10) From: Task: WebDriver.navigate().to(http://www.google.com/ncr)     at Driver.schedule (X:\node_modules\selenium-webdriver\lib\webdriver.js:414:17)     at Navigation.to (X:\node_modules\selenium-webdriver\lib\webdriver.js:1042:25)     at Driver.get (X:\node_modules\selenium-webdriver\lib\webdriver.js:832:28)     at Object. (X:\node_modules\selenium-webdriver\example\google_search.js:46:8)     at Module._compile (module.js:541:32)     at Object.Module._extensions..js (module.js:550:10)     at Module.load (module.js:458:32)     at tryModuleLoad (module.js:417:12)     at Function.Module._load (module.js:409:3)     at Module.runMain (module.js:575:10) ``` ### Ruby v2.2.3  _Apologies for hastily using the `watir-webdriver` gem that wraps `selenium-webdriver`._  ``` .bat gem install 'watir-webdriver' ruby -e ""require 'watir-webdriver; b = Watir::Browser.new :chrome; b.goto 'google.com';"" ```  Output is:  ``` c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/response.rb:70:in `assert_ok': session not created exception (Selenium::WebDriver::Error::SessionNotCreatedError) from unknown error: Runtime.executionContextCreated has invalid 'context': {""auxData"":{""frameId"":""7784.1"",""isDefault"":true},""id"":1,""name"":"""",""origin"":""://""}   (Session info: chrome=54.0.2824.0)   (Driver info: chromedriver=2.23.409699 (49b0fa931cda1caad0ae15b7d1b68004acd05129),platform=Windows NT 10.0.10586 x86_64)     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/response.rb:34:in `initialize'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/http/common.rb:87:in `new'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/http/common.rb:87:in `create_response'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/http/default.rb:90:in `request'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/http/common.rb:68:in `call'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/bridge.rb:649:in `raw_execute'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/bridge.rb:123:in `create_session'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/remote/bridge.rb:87:in `initialize'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/chrome/bridge.rb:48:in `initialize'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/common/driver.rb:64:in `new'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver/common/driver.rb:64:in `for'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/selenium-webdriver-2.53.4/lib/selenium/webdriver.rb:84:in `for'     from c:/Ruby/Ruby223-x64/lib/ruby/gems/2.2.0/gems/watir-webdriver-0.9.3/lib/watir-webdriver/browser.rb:46:in `initialize'     from -e:1:in `new'     from -e:1:in `' ``` ## Additional Sightings - - On StackOverflow - [Protractor - Getting ‚ÄúRuntime.executionContextCreated has invalid 'context‚Äù error when i run Protractor](https://stackoverflow.com/questions/38918486/protractor-getting-runtime-executioncontextcreated-has-invalid-context-erro) - In CI logs on 2016-08-06 - [tastejs / todomvc - Build #1619](https://travis-ci.org/tastejs/todomvc/builds/150285315#L476)","closed","","seanpoulter","2016-08-16T05:21:51Z","2019-08-17T02:09:58Z"
"","1902","actions.sendKeys(Keys.END) does not work in some pages","## Meta -  OS: windows 10 x64 Selenium Version: 2.53.0 Browser:  Google Chrome Browser Version: 49.0.2623.75 m (64-bit) ## Expected Behavior -  actions.sendKeys(Keys.END).perform(); should take me to the bottom of the page (some pages work well, but some don't ) ## Actual Behavior -  it doesn't work, nothing happens ## Steps to reproduce -  actions.sendKeys(Keys.END) does not work in the page bellow:  http://bbs.news.163.com/bbs/guoji/604136361.html  the chromedriver log and chromedriver.exe is attached. (both compressed in the zip file) [chromedriver-log&exe.zip](https://github.com/SeleniumHQ/selenium/files/197764/chromedriver-log.exe.zip)  .","closed","","ericwtlin","2016-03-31T14:01:47Z","2019-08-20T09:09:49Z"
"","1948","Documentation inconsistency - ""assertAlertNotPresent"" and ""assertAlertPresent""","## Meta -  OS: Windows 10 Pro, X64 Selenium Version: IDE 2.9.1 Browser: Firefox Browser Version: 44.0.2  Documentation inconsistency ## Expected Behavior -  Documentation for ""assertAlertNotPresent"" and ""assertAlertPresent""  is expected to differ ## Actual Behavior -  Documentation for two functions is the same ## Steps to reproduce -  in IDE, select a test case. Add new command with reference tab visible in bottom pane in turn select  ""assertAlertNotPresent"" and ""assertAlertPresent"" on command selection line while observing reference tab in bottom pane.  ![screen1](https://cloud.githubusercontent.com/assets/18352032/14390787/0c01dcd8-fd76-11e5-9fb3-dfc250a067cf.png) ![screen2](https://cloud.githubusercontent.com/assets/18352032/14390788/0c032fca-fd76-11e5-8d37-f67207ffd749.png)","closed","C-ide,","rst1","2016-04-08T16:46:16Z","2019-08-17T17:09:41Z"
"","1824","chromedriver can't run.","## Meta -  OS: Windows 10 Selenium Version:2.52 Browser:Google Chrome Browser Version: 51.0.2679.0 dev-m (64-bit) ## Expected Behavior - ## Actual Behavior -  chromedriver was not run. ## Steps to reproduce -    when I ran follow code using eclipse,chromedriver was not run.  and this behavior was also occur using DesiredCapabilities.   ``` JAVA ChromeOptions options = new ChromeOptions(); File ext =new File(""bin\\about_travis\\textlint--Proofreader_v1.3.0.crx""); System.out.println(ext.exists());//true options.addExtensions(ext); ChromeDriver driver = new ChromeDriver(options);  ```","closed","","lv7777","2016-03-16T10:15:12Z","2019-08-20T10:09:58Z"
"","1883","Selenium webdriver can't get Alert Text","## Meta -  OS: Windows 10 Selenium Version:2.48 & 2.53 Browser: Chrome/Firefox Browser Version:  49.0.2623.87 (64-bit) /firefox 45  ## Expected Behavior -  get alert text ## Actual Behavior -  Throw an exception like this:  FAILED: FireFoxDriver java.lang.ClassCastException: com.google.common.collect.Maps$TransformedEntriesMap cannot be cast to java.lang.String     at org.openqa.selenium.remote.RemoteWebDriver$RemoteAlert.getText(RemoteWebDriver.java:1079)     at com.dbyl.tests.getAlert.FireFoxDriver(getAlert.java:54)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:648)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:834)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1142)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)     at org.testng.TestRunner.privateRun(TestRunner.java:771)     at org.testng.TestRunner.run(TestRunner.java:621)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)     at org.testng.SuiteRunner.run(SuiteRunner.java:259)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1176)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1101)     at org.testng.TestNG.run(TestNG.java:1009)     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175) ## Steps to reproduce -    my test file is three html  my test code:  `  driver =DriverFactory.getFirefoxDriver();         driver.get(""file:///G:/html/index.html"");         driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);         driver.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);         driver.manage().window().maximize();         WebElement target1=driver.findElement(By.xpath(""//a[@id='target1']""));         String currentWindow=driver.getWindowHandle();         String target1Window = null;         target1.click();         Set windows = driver.getWindowHandles();         for(String window:windows)         {              if(!currentWindow.equals(window))              {                  target1Window=window;                  driver.switchTo().window(window);              }         }         WebElement target2 = driver.findElement(By.id(""target2""));         target2.click();          windows = driver.getWindowHandles();             for(String window:windows)             {                  if(!currentWindow.equals(window)&& !target1Window.equals(window) )                  {                      driver.switchTo().window(window);                  }             }     Alert  alert=driver.switchTo().alert();     System.out.println(alert.getText());     alert.accept();`  all the  html:  [html.zip](https://github.com/SeleniumHQ/selenium/files/190400/html.zip)","closed","D-firefox,","tobecrazy","2016-03-26T08:39:20Z","2019-08-17T02:09:35Z"
"","1888","Selenium webdriver  analyse table bug  with By.xpath","## Meta -  OS: Windows 10 Selenium Version: selenium-java-2.52.0 Browser:  Firefox  Browser Version: 45.0.1 ## Expected Behavior -  Á®ãÂ∫è‰ª£Á†Å   407Ôºölog.info(mainWindow.findElements(By.xpath(""//table[@class='detailsList']/tbody/tr[1]/th[1]"")).get(0).getText()); 408Ôºölog.info(mainWindow.findElements(By.xpath(""//table[@class='detailsList']/tbody/tr[1]/th[1]"")).get(1).getText()); 409Ôºölog.info(mainWindow.findElements(By.xpath(""//table[@class='detailsList']/tbody/tr[1]/th[1]"")).get(2).getText()); 410Ôºö        List tbs = mainWindow.findElements(By.xpath(""//table[@class='detailsList']"")); 411Ôºö        log.info(""ËÇ°‰∏ú‰ø°ÊÅØ tbs length="" + tbs.size()); 412Ôºö        for (WebElement tb : tbs) { 413Ôºö           String th_text = tb.findElements(By.xpath(""//tbody/tr[1]/th[1]"")).get(0).getText(); 414Ôºö            log.info(""ËÇ°‰∏ú‰ø°ÊÅØ th_text="" + th_text);  ËæìÂá∫Ôºö 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:407) - - Âü∫Êú¨‰ø°ÊÅØ 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:408) - - ËÇ°‰∏ú‰ø°ÊÅØ ËÇ°‰∏úÁöÑÂá∫ËµÑ‰ø°ÊÅØÊà™Ê≠¢2014Âπ¥2Êúà28Êó•„ÄÇ2014Âπ¥2Êúà28Êó•‰πãÂêéÂ∑•ÂïÜÂè™ÂÖ¨Á§∫ËÇ°‰∏úÂßìÂêçÔºåÂÖ∂‰ªñÂá∫ËµÑ‰ø°ÊÅØÁî±‰ºÅ‰∏öËá™Ë°åÂÖ¨Á§∫„ÄÇ 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:409) - - ÂèòÊõ¥‰ø°ÊÅØ 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:411) - - ËÇ°‰∏ú‰ø°ÊÅØ tbs length=3 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:414) - - ËÇ°‰∏ú‰ø°ÊÅØ th_text=Âü∫Êú¨‰ø°ÊÅØ 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:414) - - ËÇ°‰∏ú‰ø°ÊÅØ th_text=Âü∫Êú¨‰ø°ÊÅØ 2016-03-28 21:51:58 INFO  ZhejiangCompanyInfoForFireFox  (ZhejiangCompanyInfoForFireFox.java:414) - - ËÇ°‰∏ú‰ø°ÊÅØ th_text=Âü∫Êú¨‰ø°ÊÅØ  ---  ÂâçÈù¢‰∏âË°å‰ª£Á†ÅËÉΩÂ§üËß£ÊûêÂá∫ÂØπÂ∫îÁöÑÊ†áÈ¢òÊñáÂ≠óÔºåÂú®ÊâπÂ§ÑÁêÜÂæ™ÁéØ‰∏≠Â∞±ÊòØÂè™ËÉΩÊòæÁ§∫ÂêåÊ†∑ÁöÑÂÜÖÂÆπÔºåËß£ÊûêÁΩëÂùÄÂ¶Ç‰∏ãÔºö http://gsxt.zjaic.gov.cn/zhejiang.jsp# ËæìÂÖ•ÔºöÊµôÊ±üÊµôËÉΩÁîµÂäõËÇ°‰ªΩÊúâÈôêÂÖ¨Âè∏ ÊêúÁ¥¢ÂêéÁúã‚ÄúÁôªËÆ∞‰ø°ÊÅØ‚ÄùTABÈ°µ„ÄÇ ## Actual Behavior - ## Steps to reproduce -","closed","","javadevelopuser","2016-03-28T14:03:17Z","2019-08-20T09:09:50Z"
"","1898","selenium IDE not recording anything","## Meta -  OS: windows 10 Selenium Version: selenium IDE 2.9.1 Browser: Firefox  Browser Version: 45.0.1 ## Expected Behavior - trying to record activity from http://www.technopark.org/job-search.  Nothings happens for most website. like google.com, thehindu.com ## Actual Behavior - nothing happens ## Steps to reproduce -  try to record website above","closed","C-ide,","mksakeesh","2016-03-31T01:30:17Z","2019-08-17T22:09:37Z"
"","1940","Selenium IDE does not record type input field (using autonumeric.js)","## Meta -  OS: Windows 10 Selenium Version: 2.9.1 IDE Browser: Firefox Browser Version: 45.0.1 ## Expected Behavior -  IDE should record typing in input field ## Actual Behavior -  Nothing happens ## Steps to reproduce -   1. Record test on page [http://www.decorplanit.com/plugin/](http://www.decorplanit.com/plugin/) 2. Enter something in any of numeric fields, for example in Euro- Germany field 3. Nothing is recorded 4. Paste number in that same field, IDE recorded that as a type command  Here is a short video:[http://screencast.com/t/j2sI0RjTNv4](http://screencast.com/t/j2sI0RjTNv4)","closed","C-ide,","antonio-bakula","2016-04-07T21:44:35Z","2019-08-17T17:09:42Z"
"","1979","Basic Auth with invalid credentials hangs infinitely","## Meta -  OS: Windows 10 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0.2 (64-bit) ## Expected Behavior -  Invalid credentials should terminate when the browser timeout is passed or delete session is called. ## Actual Behavior -  Invalid credentials hang infinitely. ## Steps to reproduce - 1. Send navigate request with invalid credentials in url. 2. Send delete session call 3. Wait infinitely  I'm using the standalone webdriver sending requests with JSONwire protocol.  Output is the following: 03:46:15.979 INFO - Executing: [get: http://user:invalidpass@test.localserver.com]) 03:47:15.976 INFO - Executing: [delete session: ae722ff5-111c-42f3-ad04-64062a27976f])  Neither completes since it's hung at the ""get""","closed","","nathanjohnson320","2016-04-17T04:05:01Z","2019-08-19T09:09:48Z"
"","1860","InvalidOperationException  when calling SendKeys()...","## Meta -  OS: Windows 10 Selenium Version: 2.5.3 Browser: PhantonJS 2.1.1 Stack Overflow: http://stackoverflow.com/questions/36129684/selenium-exception-with-sendkeys-to-input-of-type-password ## Expected Behavior -  That SendKeys() places the value into the input control. ## Actual Behavior -  InvalidOperationException  exception when making call to SendKeys() to the password input. Exception is as follows:  > {""errorMessage"":""undefined is not an object (evaluating '(C(a)? > xb(C(a)):window).getComputedStyle(a,null).MozTransform.match')"",""request"":{""headers"": > {""Accept"":""application/json, image/png"",""Connection"":""Close"",""Content-Length"":""22"",""Content- > Type"":""application/json;charset=utf- > 8"",""Host"":""localhost:60337""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""value\"": > [\""something\""]}"",""url"":""/value"",""urlParsed"": > {""anchor"":"""",""query"":"""",""file"":""value"",""directory"":""/"",""path"":""/value"",""relative"":""/value"",""port"":"""",""host"":"""",""p > assword"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/value"",""queryKey"": > {},""chunks"":[""value""]},""urlOriginal"":""/session/0c4d6c00-ef54-11e5-9c19- > 1313e862ecbf/element/:wdc:1458558005770/value""}} ## Steps to reproduce - - Create a new console application in Visual Studio 2015 using C# - Install the following NuGet packages using the package manager console   - Install-Package PhantomJS   - Install-Package Selenium.WebDriver - Place the following code into the main application block and exception will be generated on the elPassword.SendKeys() call. The string supplied to SendKeys() is irrelevant.  ``` c# PhantomJSOptions options = new PhantomJSOptions(); //IE 11 user agent options.AddAdditionalCapability(""phantomjs.page.settings.userAgent"", ""Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko""); PhantomJSDriver driver = new PhantomJSDriver(options); try {     //Navigate to the home page     driver.Navigate().GoToUrl(""https://www.advisernet.com.au/avn/logon/logon.jsp"");      //Login     IWebElement elUserName = driver.FindElement(By.Name(""username""));     elUserName.SendKeys(""whatever"");     IWebElement elPassword = driver.FindElement(By.Name(""password""));     elPassword.SendKeys(""something"");  //**** Exception here ***** } finally {     driver.Quit(); } ```","closed","","natiki","2016-03-22T09:37:46Z","2019-08-18T11:09:55Z"
"","2067","Firefox 46.0.1","## Meta -  OS: Windows 10 Selenium Version:  2.53.0 Browser: Firefox Browser Version: 46.0.1 ## Expected Behavior -  WebDriver connects to the browser. ## Actual Behavior -  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 42424 after 45000 ms. Firefox console output: }"",""syncGUID"":""ALxJgp7_YQ3u"",""location"":""app-global"",""version"":""46.0.1"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files (x86)\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1462254391049,""updateDate"":1462254391049,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":22012,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""46.0.1"",""maxVersion"":""46.0.1""}],""targetPlatforms"":[],""seen"":true} 1462751801279   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1462751801280   DeferredSave.extensions.json    DEBUG   Save changes 1462751801280   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1462751801280   addons.xpi-utils    DEBUG   Updating add-on states 1462751801281   addons.xpi-utils    DEBUG   Writing add-ons list 1462751801284   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1462751801285   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1462751801285   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1462751801285   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0 1462751801286   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1462751801287   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.2.6 1462751801305   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1462751801305   addons.manager  DEBUG   Provider finished startup: XPIProvider 1462751801305   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1462751801305   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1462751801305   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1462751801306   addons.manager  DEBUG   Starting provider: GMPProvider 1462751801310   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1462751801310   addons.manager  DEBUG   Provider finished startup: GMPProvider 1462751801310   addons.manager  DEBUG   Starting provider: PluginProvider 1462751801311   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1462751801311   addons.manager  DEBUG   Provider finished startup: PluginProvider 1462751801311   addons.manager  DEBUG   Completed startup sequence 1462751801679   addons.manager  DEBUG   Starting provider:  1462751801679   addons.manager  DEBUG   Registering shutdown blocker for  1462751801680   addons.manager  DEBUG   Provider finished startup:  1462751801680   DeferredSave.extensions.json    DEBUG   Starting write 1462751801862   addons.repository   DEBUG   No addons.json found. 1462751801863   DeferredSave.addons.json    DEBUG   Save changes 1462751801864   DeferredSave.addons.json    DEBUG   Starting timer 1462751801887   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1462751801887   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1462751801887   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1462751801890   DeferredSave.extensions.json    DEBUG   Write succeeded 1462751801890   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1462751801916   DeferredSave.addons.json    DEBUG   Starting write 1462751801959   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:123) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at it.unimaticaspa.firmant.web.jsf.TestJsfTag.setUp(TestJsfTag.java:83) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:606) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) ``` ## Steps to reproduce -  Just use Firefox 46.0.1 with Selenium 2.53.0 for Java.","closed","","giacgbj","2016-05-09T00:06:23Z","2019-08-20T03:10:01Z"
"","1936","How.XPath, Using=""""","## Meta -  OS: Windows 10 Selenium Version:  Browser: Firefox Browser Version: 45.0.1 64b ## Expected Behavior -  When using FindsBy(How = How.XPath, Using = ""//a[contains(@href,\""Summary\"")]"")], I expect to have a IWebElement available to use.   ## Actual Behavior -  I receive a null object reference when I try to access this property on my page class.   ## Steps to reproduce -  My Page class is below:  [Fact]         public void _4530_U_V_Career_Field_Code_by_Career_Field()         {             Login(""automationuser1@automation.com"");             Repo.LandingPage.ExperienceLink.Click(); //This found using Driver.FindElement(By)             Assert.Contains(""Duty History"", Repo.SharedElements.H2Text.Text);             PageFactory.InitElements(Driver, Repo.ExperiencePage);             *_//At this point, ExperienceSummary should be initialized.  But is not. *_         }  public class SeeMyExperiencePage : Page {      [FindsBy(How = How.XPath, Using = ""//a[contains(@href,\""Summary\"")]"")]      public IWebElement ExperienceSummary;      public SeeMyExperiencePage(IWebDriver driver): base(driver)      {           Driver = driver;      } } public class Page {      public IWebDriver Driver { get; set; }      public Page(IWebDriver driver)         {             Driver = driver;         }     }  public class ElementsRepository {      public string user;        public SeeMyExperiencePage ExperiencePage => new SeeMyExperiencePage(driver);      public SharedElements SharedElements => new SharedElements(driver);      public ElementsRepository(IWebDriver Driver)       {           driver = Driver;       } }","closed","","minoseah629","2016-04-06T23:13:15Z","2019-08-20T09:09:36Z"
"","1921","Browser wont close while running multiple testcases on multiple browser parallely","## Meta -  OS: Windows Selenium Version: latest Browser: chrome n firefox Browser Version: 64bit ## Expected Behavior -Browser wont close during multiple testcases execution ## Actual Behavior -Browser should close during multiple testcases execution ## Steps to reproduce -    1.Followed keyword driver framwork 2.hub, 1 node - chrome , 2 -node -firefox initialized using selenium grid concept 3.Running 2 testcases on chrome and firefox browser 4. ->result folder statement 1st  testcase - firefox   ->result folder statement 1st  testcase - chrome   ->execution of 1st testcase complets and close chrome browser  ->execution of 1st testcase  still processing on firefox  ->result folder statement Start 2nd testcase on chrome  ->Wont display result folder statement  ->Start 2nd testcase on firefox(1st testcase process goes to idle state and start processing 2nd testcase)  ->Complete 2nd testcase on chrome(close the browser)  ->Complete 2nd testcase on firefox(close the browser)  ->result folder statment Start  2nd testcase on firefox(as new browser)  ->complete process and close firefox browser(2nd testcase)  finally---- 1st testcase (which is idle on firefox browser) still available, it wont close  Any solution we have ? Any gird problem ?","closed","","poojagadekar89","2016-04-05T12:45:37Z","2019-08-20T09:09:42Z"
"","1935","Tests failed using IE driver","## Meta -  OS: windows Selenium Version: 2.53.0 Browser: IE Browser Version:2.53.0.1  I used IEDriverServer.exe version 2.53.0.1 and my test case is opening an URL(not public URL local to my machine) and clicking on one of the link on the page.The page opens after the click on the link but I get the timeout exception and test fails, below is the code used to initialize the webdriver:  InternetExplorerOptions options = new InternetExplorerOptions();  options.PageLoadStrategy = InternetExplorerPageLoadStrategy.Eager;  webDriver = new InternetExplorerDriver(ConfigurationManager.AppSettings[""IDEServerPath""].ToString(), options, TimeSpan.FromMinutes(2));  If any one can guide me on this that will be great as I am new to the selenium.This test case works fine using firefox driver.","closed","","swathikvsr","2016-04-06T21:48:36Z","2019-08-19T08:10:02Z"
"","2171","It's impossible to disable images in Firefox","## Meta -  OS: Windows Selenium Version:  2.53 Browser: Firefox Browser Version:  46.0.1 ## Steps to reproduce -  create driver instance using this capabilities   ``` DesiredCapabilities capabilities = new DesiredCapabilities(); FirefoxProfile profile = new FirefoxProfile(); profile.setPreference(""permissions.default.image"", 2); capabilities.setCapability(""firefox_profile"", profile); ```  _Note_ if I use exist FF profile `FirefoxProfile  profile = new ProfilesIni().getProfile(""existProfile"")` images are disabled ## Expected Behavior -  Images are disabled in broswer ## Actual Behavior -  Images aren't disabled in broswer","closed","D-firefox,","emaks","2016-05-27T09:04:38Z","2019-08-17T01:10:03Z"
"","1982","driver.quit() throws exception in selenium version 2.53.0","## Meta -  OS: Window 7 Professional Selenium Version: Webdriver 2.53.0 Browser: Internet Explorer  Browser Version: 11.0.9600.1628 (64-bit) ## Expected Behavior - driver.quit() should close the IEDriverServer and its session. ## Actual Behavior -  Exception occured whenever **driver.quit()** encountered in code. ## Steps to reproduce -  when I updated selenium webdriver from 2.43.1 to 2.53.0, I got exception when jvm run the driver.quit() method. Find below the portion of stacktrace.  `Exception in thread ""Thread-2"" java.lang.NoClassDefFoundError: com/sun/jna/platform/win32/Kernel32     at java.lang.ClassLoader.defineClass1(Native Method)     at java.lang.ClassLoader.defineClass(Unknown Source)     at java.security.SecureClassLoader.defineClass(Unknown Source)     at java.net.URLClassLoader.defineClass(Unknown Source)     at java.net.URLClassLoader.access$100(Unknown Source)     at java.net.URLClassLoader$1.run(Unknown Source)     at java.net.URLClassLoader$1.run(Unknown Source)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     at org.openqa.selenium.os.ProcessUtils.killWinProcess(ProcessUtils.java:133)     at org.openqa.selenium.os.ProcessUtils.killProcess(ProcessUtils.java:81)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.destroyHarder(UnixProcess.java:247)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.access$2(UnixProcess.java:246)     at org.openqa.selenium.os.UnixProcess.destroy(UnixProcess.java:125)     at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:155)     at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:196)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:94)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)     at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:526)`","closed","","hvardhan89","2016-04-18T11:14:18Z","2019-08-19T12:10:01Z"
"","1924","Refreshing page with different webdriver object not working","## Meta -  OS: Window 7  Selenium  Version:2.52.0 Browser:  IE 11 , Chrome  49.0.2623.110 , Firefox Browser Version: 64 bit ## Expected Behavior -  It should refresh page every time  ## Actual Behavior -  It is not refreshing. ## Steps to reproduce -  I have set of test cases which has to refresh page.   Steps 1) Navigate to website url 2) login to website 3) Landing page has to refresh again.  above steps is common for most of test cases so we put in common action method. But first test case it succeed and rest of test case it fail only on refreshing page. If i go to website url with out login refresh page in two different test method it work fine.   FYI: I am killing webdriver instance after each test case finish and creating new one when test start.   Browser = WebDriverBrowser.Browser.Chrome;             new LoginPage().NavigateTo(""{url}"")             .LoginToWC2()             .WaitFor(4000)             .Refresh();             new MenuPage().WaitFor(4000);","closed","","tlktoash","2016-04-05T23:17:01Z","2019-08-19T08:09:59Z"
"","2175","Flex - Load Flex-Pilot-x","## Meta -  OS: Win7      Selenium Version:      Browser: Firefox     Browser Version: 2.27.0     ## Expected Behavior -  Load and activate Flex-pilot-X ## Actual Behavior -  No activae pluging ## Steps to reproduce -    O Selenium IDE, select in Option|Option men,  fill the field extension in adding flexpilotx.js with "";"" separator  When i try to record sequence, i obtain an bug in selenium console [info] Failure to activate flex movie: id=FLEX_APPLICATION","closed","C-ide,","fredoprobtp","2016-05-27T14:48:50Z","2019-08-17T17:09:36Z"
"","1877","file upload not stable in Internet Explorer 11","## Meta -  OS: win2008 Selenium Version: 2.53 Browser: ie 2.53.0 32bit Browser Version: ie11 ## Expected Behavior -  proper work with input type=""file"" ## Actual Behavior -  ie hanging with file choose menu opened ## Steps to reproduce -  fill multiple inputs with type=""file""  driver capabilities:         capabilities.setCapability(""ie.ensureCleanSession"", true);         capabilities.setCapability(""enablePersistentHover"", false);         capabilities.setCapability(""requireWindowFocus"", true);         capabilities.setCapability(""unexpectedAlertBehaviour"", ""accept"");  similar issue, closed with no explanation: https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/3858","closed","","xlenz","2016-03-24T17:39:17Z","2019-08-19T20:09:40Z"
"","1937","Timeout exception when element is not found on a page.","## Meta -  OS: Win 8.1 Selenium Version I tested with:  2.51.0, 2.52.0, 2.53.0 Browser: Firefox Browser Version: 45.0.1 Webdriver: C# ## Expected Behavior -  WebDriver.FindElement() and WebDriver.FindElements() functions should return an empty collection/null/NoSuchElementException if the element is not found found on a page. ## Actual Behavior -  It will throw an exception after the configured wait time. Exception: ""An exception of type 'OpenQA.Selenium.WebDriverException' occurred in WebDriver.dll but was not handled in user code  Additional information: The HTTP request to the remote WebDriver server for URL http://localhost:7055/hub/session/19e937df-9d51-4624-a700-33f0ec6be98c/element timed out after 60 seconds."" ## Steps to reproduce -  I tested it with multiple functions (By.Xpath, By.ClassName, By.CssSelector, etc.)  var webDriver = new FirefoxDriver(); webDriver.Manage().Timeouts().ImplicitlyWait(new TimeSpan(0, 0, 0, 60)); webDriver.Navigate().GoToUrl(""http://google.com""); var resultElement = webDriver.FindElement(By.ClassName(""NonExistingClass""));  However if I search for an element that exists the code works fine.","closed","","username9876","2016-04-07T07:16:55Z","2019-08-20T04:10:00Z"
"","1869","Sporadic issues with FF click()","## Meta -  OS: Win 7 (Saucelabs) Selenium Version: 2.52.0 Browser: Firefox Browser Version: 44.0 ## Expected Behavior -  element click ## Actual Behavior -  element click isn't working ## Steps to reproduce -  very similar to issues discussed in below tickets. element click works sometime and fails randomly. we run exactly the same tests in chrome as well, no issues with chrome.  is there any suggestion?  https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/7031 https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/6112","closed","","sahas-","2016-03-23T20:29:16Z","2019-08-20T10:09:38Z"
"","1862","Firefox Developer Edition (47.0a2) crashes using Java Selenium 2.53.0 (and 2.52.0, 2.48.2)","## Meta -  OS: Ubuntu 14.04 LTS Selenium Version: 2.53.0, 2.52.0, 2.48.2 Browser: Firefox Browser Version: Firefox Developer Edition (47.0a2) ## Expected Behavior  Execute Java selenium test using the Firefox Developer Edition (47.0a2).  I am using the following code to start the driver:  ``` driver = new FirefoxDriver(new FirefoxBinary(new File(firefoxBin)),                          new FirefoxProfile()); ```  Where ""firefoxBin"" is an String with the full path of Firefox binary file. ## Actual Behavior -  The Firefox process dies after starting up. The Java selenium process returns a timeout error.  I have reviewed the Java code of Selenium and I have tried to run the Firefox process manually using the same options. I have confirmed that the problem is not caused by the ""-foreground"" or the environment options, the issue appears when the Selenium extensions are deployed in the profile.  Unfortunately the Firefox process dies without returning any error.  I have tried with multiple versions of Selenium (2.53.0, 2.52.0 or 2.48.2), the issue seems to be the same with all of them. ## Steps to reproduce -  Just try to run a Java selenium script with Selenium 2.53 and Firefox Developer Edition (47.0a2)  This is the output of my script:  ``` org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:     Updating database with changes to installed add-ons 1458659376845   addons.xpi-utils    DEBUG   Updating add-on states 1458659376846   addons.xpi-utils    DEBUG   Writing add-ons list 1458659376847   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/e10srollout@mozilla.org.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1458659376848   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/firefox@getpocket.com.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0 1458659376850   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/loop@mozilla.org.xpi 1458659376850   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.1.12 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1458659376873   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458659376873   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1458659376874   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1458659376874   addons.manager  DEBUG   Starting provider: GMPProvider 1458659376880   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458659376881   addons.manager  DEBUG   Starting provider: PluginProvider 1458659376881   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: PluginProvider 1458659376882   addons.manager  DEBUG   Completed startup sequence  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378322   addons.manager  DEBUG   Starting provider:  1458659378322   addons.manager  DEBUG   Registering shutdown blocker for  1458659378323   addons.manager  DEBUG   Provider finished startup:  1458659378641   DeferredSave.extensions.json    DEBUG   Write succeeded 1458659378642   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1458659378642   DeferredSave.extensions.json    DEBUG   Starting timer 1458659378667   DeferredSave.extensions.json    DEBUG   Starting write 1458659378677   addons.repository   DEBUG   No addons.json found. 1458659378678   DeferredSave.addons.json    DEBUG   Save changes 1458659378684   DeferredSave.addons.json    DEBUG   Starting timer 1458659378730   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1458659378730   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1458659378731   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1458659378742   DeferredSave.addons.json    DEBUG   Starting write 1458659378755   DeferredSave.extensions.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378851   DeferredSave.addons.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message      at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at com.smartbear.tests.examples.SimpleWebTest.init(SimpleWebTest.java:158)     at com.smartbear.tests.examples.SimpleWebTest.(SimpleWebTest.java:130)     at com.smartbear.tests.examples.SimpleWebTest$1.run(SimpleWebTest.java:82)     at java.lang.Thread.run(Thread.java:745) Unexpected error at thread Thread-1: org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/opt/firefox_dev_jmb/firefox) on port 7055; process output follows:     Updating database with changes to installed add-ons 1458659376845   addons.xpi-utils    DEBUG   Updating add-on states 1458659376846   addons.xpi-utils    DEBUG   Writing add-ons list 1458659376847   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/e10srollout@mozilla.org.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1458659376848   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/firefox@getpocket.com.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0 1458659376850   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/loop@mozilla.org.xpi 1458659376850   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.1.12 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1458659376873   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458659376873   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1458659376874   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1458659376874   addons.manager  DEBUG   Starting provider: GMPProvider 1458659376880   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458659376881   addons.manager  DEBUG   Starting provider: PluginProvider 1458659376881   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: PluginProvider 1458659376882   addons.manager  DEBUG   Completed startup sequence  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378322   addons.manager  DEBUG   Starting provider:  1458659378322   addons.manager  DEBUG   Registering shutdown blocker for  1458659378323   addons.manager  DEBUG   Provider finished startup:  1458659378641   DeferredSave.extensions.json    DEBUG   Write succeeded 1458659378642   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1458659378642   DeferredSave.extensions.json    DEBUG   Starting timer 1458659378667   DeferredSave.extensions.json    DEBUG   Starting write 1458659378677   addons.repository   DEBUG   No addons.json found. 1458659378678   DeferredSave.addons.json    DEBUG   Save changes 1458659378684   DeferredSave.addons.json    DEBUG   Starting timer 1458659378730   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1458659378730   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1458659378731   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1458659378742   DeferredSave.addons.json    DEBUG   Starting write 1458659378755   DeferredSave.extensions.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378851   DeferredSave.addons.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'selenium', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-59-generic', java.version: '1.8.0_72' Driver info: driver.version: FirefoxDriver org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/opt/firefox_dev_jmb/firefox) on port 7055; process output follows:     Updating database with changes to installed add-ons 1458659376845   addons.xpi-utils    DEBUG   Updating add-on states 1458659376846   addons.xpi-utils    DEBUG   Writing add-ons list 1458659376847   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/e10srollout@mozilla.org.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1458659376848   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/firefox@getpocket.com.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0 1458659376850   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/loop@mozilla.org.xpi 1458659376850   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.1.12 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1458659376873   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458659376873   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1458659376874   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1458659376874   addons.manager  DEBUG   Starting provider: GMPProvider 1458659376880   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458659376881   addons.manager  DEBUG   Starting provider: PluginProvider 1458659376881   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: PluginProvider 1458659376882   addons.manager  DEBUG   Completed startup sequence  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378322   addons.manager  DEBUG   Starting provider:  1458659378322   addons.manager  DEBUG   Registering shutdown blocker for  1458659378323   addons.manager  DEBUG   Provider finished startup:  1458659378641   DeferredSave.extensions.json    DEBUG   Write succeeded 1458659378642   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1458659378642   DeferredSave.extensions.json    DEBUG   Starting timer 1458659378667   DeferredSave.extensions.json    DEBUG   Starting write 1458659378677   addons.repository   DEBUG   No addons.json found. 1458659378678   DeferredSave.addons.json    DEBUG   Save changes 1458659378684   DeferredSave.addons.json    DEBUG   Starting timer 1458659378730   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1458659378730   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1458659378731   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1458659378742   DeferredSave.addons.json    DEBUG   Starting write 1458659378755   DeferredSave.extensions.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378851   DeferredSave.addons.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'selenium', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-59-generic', java.version: '1.8.0_72' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:124)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at com.smartbear.tests.examples.SimpleWebTest.init(SimpleWebTest.java:158)     at com.smartbear.tests.examples.SimpleWebTest.(SimpleWebTest.java:130)     at com.smartbear.tests.examples.SimpleWebTest$1.run(SimpleWebTest.java:82)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:     Updating database with changes to installed add-ons 1458659376845   addons.xpi-utils    DEBUG   Updating add-on states 1458659376846   addons.xpi-utils    DEBUG   Writing add-ons list 1458659376847   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/e10srollout@mozilla.org.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1458659376848   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/firefox@getpocket.com.xpi 1458659376848   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0 1458659376850   addons.xpi  DEBUG   Registering manifest for /opt/firefox_dev_jmb/browser/features/loop@mozilla.org.xpi 1458659376850   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.1.12 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1458659376873   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458659376873   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1458659376873   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1458659376874   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1458659376874   addons.manager  DEBUG   Starting provider: GMPProvider 1458659376880   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458659376881   addons.manager  DEBUG   Starting provider: PluginProvider 1458659376881   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1458659376881   addons.manager  DEBUG   Provider finished startup: PluginProvider 1458659376882   addons.manager  DEBUG   Completed startup sequence  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378322   addons.manager  DEBUG   Starting provider:  1458659378322   addons.manager  DEBUG   Registering shutdown blocker for  1458659378323   addons.manager  DEBUG   Provider finished startup:  1458659378641   DeferredSave.extensions.json    DEBUG   Write succeeded 1458659378642   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1458659378642   DeferredSave.extensions.json    DEBUG   Starting timer 1458659378667   DeferredSave.extensions.json    DEBUG   Starting write 1458659378677   addons.repository   DEBUG   No addons.json found. 1458659378678   DeferredSave.addons.json    DEBUG   Save changes 1458659378684   DeferredSave.addons.json    DEBUG   Starting timer 1458659378730   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1458659378730   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1458659378731   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1458659378742   DeferredSave.addons.json    DEBUG   Starting write 1458659378755   DeferredSave.extensions.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message 1458659378851   DeferredSave.addons.json    DEBUG   Write succeeded  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message  (firefox:29623): GConf-WARNING **: Client failed to connect to the D-BUS daemon: //bin/dbus-launch terminated abnormally without any error message      at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112)     ... 9 more ```","closed","","javiermorante","2016-03-22T15:30:15Z","2019-08-19T22:09:50Z"
"","2007","Editing formatter source doesn't change the way it behaves","## Meta -  OS: Ubuntu 14.04 Selenium Version: IDE 2.9.1 Browser: Firefox Browser Version: 45.0.2 One plugin installed - Selblocks ## Expected Behavior - changing the source of the formatter should affect the configForm. ## Actual Behavior - after changing the source of the formatter the configForm stays the same. Reopening the source shows that it has correct content, but the configForm stays wrong. Restarting the IDE doesn't help. Restarting the browser doesn't help. ## Steps to reproduce - 1. Go into formats section of options. 2. Click ""add"" 3. Give it a title (e.g. ""simpleformat"") 4. Give it simple content - this.configForm = 'It doesn't work' 5. Close and open the options panel, see that the format has the provided text in it 6. Edit the formatter's source - this.configForm = 'It works!' 7. Close and open the options panel - the text hasn't changed 8. Open the formatter's source - it shows the correct, edited text","closed","C-ide,","pudlovich","2016-04-25T12:46:26Z","2019-08-17T17:09:38Z"
"","1920","[java] SessionNotFoundException deprecated?","## Meta -  OS: Ubuntu 14.04 Selenium Version: 2.53 java API Browser: Any Browser Version: Any ## Expected Behavior -  My compiler not to raise warnings or a clear explanation why `SessionNotFoundException` is deprecated ## Actual Behavior -  Found `SessionNotFoundException` deprecated without a documentation ## Steps to reproduce -  `import org.openqa.selenium.remote.SessionNotFoundException;` And notice the deprecation warning","closed","","lenntt","2016-04-05T07:51:21Z","2019-08-20T09:09:46Z"
"","1823","[ FirefoxDriver]  java.lang.NoClassDefFoundError: org/openqa/selenium/io/CircularOutputStream","## Meta -  OS: Ubuntu 14.04 Selenium Version: 2.53 Browser: Firefox Browser Version: 45.0 ## Expected Behavior -  Creating an instance of FirefoxDriver should work. ## Actual Behavior -  I crash with following message : java.lang.NoClassDefFoundError: org/openqa/selenium/io/CircularOutputStream ## Steps to reproduce -  ``` java import org.openqa.selenium.firefox.FirefoxDriver;  public class SeleniumCrash {      public static void main(String[] args) {         new FirefoxDriver();     }  } ```  ``` Exception in thread ""main"" java.lang.NoClassDefFoundError: org/openqa/selenium/io/CircularOutputStream     at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:60)     at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:56)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at SeleniumCrash.main(SeleniumCrash.java:6)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144) Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.io.CircularOutputStream     at java.net.URLClassLoader.findClass(URLClassLoader.java:381)     at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)     at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     ... 9 more ```","closed","","Toilal","2016-03-16T10:06:57Z","2019-08-17T20:09:41Z"
"","1926","Firefox:: ScreenShot : shows overlapped ui [ for single page application]","## Meta -  OS: Ubuntu ( EC2 AWS instance) / Macbook Selenium Version: 2.52.0 Browser: Firefox 39.0 / 44.0.2 ## Actual Behaviour -  Observe the Top Header bar is coming in between of the page (notice the breadcrumb icon on left), there is a long page with scroller ![image](https://cloud.githubusercontent.com/assets/12966925/14312119/703ea786-fc08-11e5-83c7-aa545b1d13a8.png) ## Expected Behaviour -  Should save screenshot as it is (no additional overlapping) observe the header is on top ![image](https://cloud.githubusercontent.com/assets/12966925/14312170/b1de87f6-fc08-11e5-9949-44551000ad74.png)  Note: when same is checked physically, its all fine and top header at top itself on its place (ran test and viewed physically) + for chrome also,  appropriate screenshot is being taken. Its necessary to get right screenshot because if test fails for some reason Ex. the header is hiding an element behind ( screenshot) and on click of it, it fails with: Element is not clickable at point (572.6500244140625, 14.949996948242188). Other element would receive the click:  ] But in actual, the top header never came on the way so it gives wrong impression of the cause of failure. [the reason of failure is different] ## Steps to reproduce -  Its an angular application (material design-single page application with vertical & horizontal scrollbar),  the page is containing multiple tabs, there are checkboxes( Android, Windows): on ticking, respective tabs gets enabled down. ![image](https://cloud.githubusercontent.com/assets/12966925/14308539/6c596a02-fbf4-11e5-8c6f-6fb161f6adce.png)","closed","D-firefox,","shahp00ja","2016-04-06T09:54:08Z","2019-08-14T14:09:51Z"
"","2016","Element is not clickable for selecting drop down with Firefox driver 2.53 and FF version 46","## Meta -  OS: OSX os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.4' Selenium Version:  2.53.0 Browser:  Firefox Browser Version: 46 ## Expected Behavior -  select an element from drop down list. ## Actual Behavior -  Not selecting element from the drop down list ## Steps to reproduce -  Clicked on the drop down, then clicked on the element that displayed. org.openqa.selenium.WebDriverException: Element is not clickable at point (849.86669921875, 11). Other element would receive the click:  Command duration or timeout: 71 milliseconds","closed","","indiamithu","2016-04-27T22:08:50Z","2019-08-20T07:09:51Z"
"","2119","Grid-Safari-Selenium is getting stuck on SafariDriver Launcher page[second Tab] by not closing it and NOT switching back to first Tab where actual URL opens","## Meta -  OS: OSX El capitan Selenium Version: 2.53.0  Browser: Safari Browser Version: 9.1  SafariDriver version: 2.48.0 which is latest as per SeleniumHQ site. ## Expected Behavior -  SafariDriver Launcher page/tab should get closed automatically and get switched to first tab where my URL is getting opened. ## Actual Behavior -  Selenium is getting stuck on SafariDriver Launcher page[Tab] by not closing it and switching back to first Tab ## Steps to reproduce -  Trying to execute n number of test cases from TestNG.xml, but few TCs are getting executed properly by closing SafariDriver Launcher page[tab]. But for few cases Selenium is getting stuck on SafariDriver Launcher page[Tab] by not closing it and switching back to first Tab where my URL will get opened. ## Required Solution -  I wanna first check how many tabs are currently opened by:- if(browser.equals(""safari"")){             capability=DesiredCapabilities.safari();             capability.setBrowserName(""safari"");             capability.setPlatform(Platform.MAC);             capability.setVersion(""9.1"");             capability.setJavascriptEnabled(true);             driver=new RemoteWebDriver(new URL(grid_url),capability);             driver.get(url);             Thread.sleep(2000);             String windowHandle = driver.getWindowHandle();             ArrayList tabs = new ArrayList (driver.getWindowHandles());             if(tabs.size()>0){  ```                              driver.switchTo().window(tabs.get(0));         } ```  }","closed","A-needs new owner,","praveenashok","2016-05-18T05:59:32Z","2019-08-19T15:09:57Z"
"","2390","Node.js client firefox tests do not pass","## Meta -  OS: OSX 10.9.5 Selenium Version: master branch Node Version: v4.2.2 Firefox Version: tried 46.0.1, 47, dev GeckoDriver Version: v0.8.0 ## Expected Behavior -  Tests pass. ## Actual Behavior -  27 firefox tests fail. [output.txt](https://github.com/SeleniumHQ/selenium/files/336409/output.txt) ## Steps to reproduce -  `npm test`  I'm trying to make some changes to the node client but cannot get the tests pass. Is there a specific version of firefox that i need to run the tests? Thanks.","closed","D-firefox,","oddui","2016-06-28T07:01:53Z","2019-08-20T00:09:33Z"
"","1985","Error: Timed out waiting for the WebDriver server","## Meta -  OS: OSX 10.11.4 Selenium Version: 2.53.1 Browser: Firefox Browser Version: 45.0.2 ## Expected Behavior -  When I use selenium-webdriver/remote's SeleniumServer class to create a grid hub and start() it, I should get a promise which resolves into the server address for the hub. ## Actual Behavior -  When I start() the SeleniumServer, the process hangs for 30 seconds (or however long I've configured the timeout) before throwing this error:  ``` /path/to/project/node_modules/selenium-webdriver/lib/promise.js:654     throw error;     ^  Error: Timed out waiting for the WebDriver server at http://127.0.0.1:4444/wd/hub     at Error (native)     at onError (/path/to/project/node_modules/selenium-webdriver/http/util.js:87:11)     at ManagedPromise.invokeCallback_ (/path/to/project/node_modules/selenium-webdriver/lib/promise.js:1343:14)     at TaskQueue.execute_ (/path/to/project/node_modules/selenium-webdriver/lib/promise.js:2868:14)     at TaskQueue.executeNext_ (/path/to/project/node_modules/selenium-webdriver/lib/promise.js:2851:21)     at /path/to/project/node_modules/selenium-webdriver/lib/promise.js:2730:27     at /path/to/project/node_modules/selenium-webdriver/lib/promise.js:639:7     at process._tickCallback (node.js:379:9) ``` ## Steps to reproduce - ### 1. Create a grid hub  ``` const remote = require(""selenium-webdriver/remote"");  let options = { ""args"": [ ""-role"", ""hub"", ""-hubConfig"", config_path ], ""loopback"": true, ""port"": 4444 },     hub     = new remote.SeleniumServer(jar_path, options); ```  The hub config file looks like this:  ``` {     ""port"":       4444,     ""maxSession"": 1 } ``` ### 2. Start the hub  ``` hub.start()     .then(function (hub_addr) {         console.log(""Selenium grid hub started: %s"", hub_addr);     }); ``` ### 3. Check the console  Immediately after starting the hub, open a browser and load http://localhost:4444/grid/console.  Click the ""view config"" link there.  This is the output I see:  > Config for the hub : > host : null > port : 4444 > cleanUpCycle : 5000 > timeout : 300000 > browserTimeout : 0 > newSessionWaitTimeout : -1 > grid1Mapping : {} > throwOnCapabilityNotPresent : true > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > prioritizer : null > servlets :  >  > all params : >  > browserTimeout : 0 > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > cleanUpCycle : 5000 > host : null > hubConfig : /path/to/project/config/selenium_grid_hub.json > jettyMaxThreads : -1 > maxSession : 1 > newSessionWaitTimeout : -1 > nodePolling : 5000 > port : 4444 > prioritizer : null > role : hub > servlets : [] > throwOnCapabilityNotPresent : true > timeout : 300000 >  > Config details : > hub launched with :-port 4444 -role hub -hubConfig /path/to/project/config/selenium_grid_hub.json  > the final configuration comes from : > the default : > host : null > port : 4444 > cleanUpCycle : 5000 > timeout : 300000 > browserTimeout : 0 > newSessionWaitTimeout : -1 > grid1Mapping : {} > throwOnCapabilityNotPresent : true > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > prioritizer : null > servlets :  >  > all params : >  > browserTimeout : 0 > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > cleanUpCycle : 5000 > host : null > jettyMaxThreads : -1 > maxSession : 5 > newSessionWaitTimeout : -1 > nodePolling : 5000 > port : 4444 > prioritizer : null > servlets : [] > throwOnCapabilityNotPresent : true > timeout : 300000 >  > updated with grid1 config :No grid1 file specified. To specify one, use -grid1Yml XXX.yml where XXX.yml is a grid1 config file >  > updated with grid2 config : /path/to/project/config/selenium_grid_hub.json > host : null > port : 4444 > cleanUpCycle : 5000 > timeout : 300000 > browserTimeout : 0 > newSessionWaitTimeout : -1 > grid1Mapping : {} > throwOnCapabilityNotPresent : true > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > prioritizer : null > servlets :  >  > all params : >  > browserTimeout : 0 > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > cleanUpCycle : 5000 > host : null > jettyMaxThreads : -1 > maxSession : 1 > newSessionWaitTimeout : -1 > nodePolling : 5000 > port : 4444 > prioritizer : null > servlets : [] > throwOnCapabilityNotPresent : true > timeout : 300000 >  > updated with params : > host : null > port : 4444 > cleanUpCycle : 5000 > timeout : 300000 > browserTimeout : 0 > newSessionWaitTimeout : -1 > grid1Mapping : {} > throwOnCapabilityNotPresent : true > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > prioritizer : null > servlets :  >  > all params : >  > browserTimeout : 0 > capabilityMatcher : org.openqa.grid.internal.utils.DefaultCapabilityMatcher > cleanUpCycle : 5000 > host : null > hubConfig : /path/to/project/config/selenium_grid_hub.json > jettyMaxThreads : -1 > maxSession : 1 > newSessionWaitTimeout : -1 > nodePolling : 5000 > port : 4444 > prioritizer : null > role : hub > servlets : [] > throwOnCapabilityNotPresent : true > timeout : 300000 ### 4. Wait 30 seconds  After waiting the length of the selenium server default timeout (30 seconds) I see the error message printed above.","closed","C-nodejs,","adamlacoste","2016-04-18T21:35:04Z","2019-08-16T17:09:39Z"
"","1999","It is taking too long just to find element by id","## Meta -  OS: OSX 10.11.4 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0.2 ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -  Just run a simple findElement test. With my configure above just a simple find element takes about 462778ms","closed","","nmorado","2016-04-21T17:00:29Z","2019-08-20T08:09:34Z"
"","1914","Some new browser logs are not captured","## Meta -  OS: OSX 10.11.3 Selenium Version: v2.52.0 Browser: Chrome Browser Version: 49.0.2623.87 ## Behavior  I have a sample site which logs an error to the browser console using `console.error('foo')` once on load and once two seconds later.  ``` js console.error('first'); setTimeout(function() {   console.error('second'); }, 2000); ```  I run webdriver against it and capture browser logs once right away and once ten seconds later. I expect the second error to show up in the second captured logs, but instead it is empty:  ``` js driver.manage().logs().get('browser').then(function(logs) {   console.log('------ first logs:');   console.log(logs); // This has the first error, as expected. });  driver.sleep(10000);  driver.manage().logs().get('browser').then(function(logs) {   // The page logs a second error in the past 10 seconds, but these are emtpy.     console.log('------ second logs:');     console.log(logs); // This is empty - the second error is lost. }); ``` ## Steps to reproduce -  Script showing the issue at: https://github.com/juliemr/webdriver-bugs/blob/master/no-new-logs.js The site it's testing against is: https://github.com/juliemr/webdriver-bugs/blob/gh-pages/index.html","closed","C-nodejs,","juliemr","2016-04-04T17:41:24Z","2019-08-14T05:09:55Z"
"","1933","When calling `setSize` in selenium-webdriver (nodejs), error thrown: ""Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source""","## Meta -  OS: OSX 10.11.3 Selenium Version: `selenium-webdriver` (node) 2.53.1 Browser: Chrome 51.0.2700.0 dev, ChromeDriver 2.21.371459 Node.js v4.3.1 ## Expected Behavior -  Running the below script opens a Chrome window and resizes it as specified ## Actual Behavior -  Running the below script throws the following error:  ``` $ node testcase.js /Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/promise.js:654     throw error;     ^  WebDriverError: unknown error: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: ""script-src 'self' blob: filesystem: chrome-extension-resource:"".  JavaScript stack: EvalError: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: ""script-src 'self' blob: filesystem: chrome-extension-resource:"".      at executeAsyncScript (:329:5)     at apply.height (:345:29)     at callFunction (:237:33)     at apply.height (:247:23)     at :248:3   (Session info: chrome=51.0.2700.0)   (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Mac OS X 10.11.3 x86_64)     at WebDriverError (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/error.js:27:10)     at Object.checkLegacyResponse (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/error.js:639:15)     at parseHttpResponse (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/http/index.js:528:13)     at /Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/http/index.js:466:11     at ManagedPromise.invokeCallback_ (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/promise.js:1343:14)     at TaskQueue.execute_ (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/promise.js:2868:14)     at TaskQueue.executeNext_ (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/promise.js:2851:21)     at /Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/promise.js:2775:25     at /Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/promise.js:639:7     at process._tickCallback (node.js:364:9) From: Task: WebDriver.manage().window().setSize(1024, 768)     at Driver.schedule (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/webdriver.js:386:17)     at Window.setSize (/Users/dylan/dev/shyp.com/node_modules/selenium-webdriver/lib/webdriver.js:1404:25)     at Object. (/Users/dylan/dev/shyp.com/testcase.js:4:26)     at Module._compile (module.js:409:26)     at Object.Module._extensions..js (module.js:416:10)     at Module.load (module.js:343:32)     at Function.Module._load (module.js:300:12)     at Function.Module.runMain (module.js:441:10)     at startup (node.js:134:18)     at node.js:962:3 ``` ## Steps to reproduce -  testcase.js:  ``` const webdriver = require('selenium-webdriver'); const driver = new webdriver.Builder().withCapabilities({ browserName: 'chrome' }).build();  driver.manage().window().setSize(1024, 768); ```","closed","","dylanpyle","2016-04-06T18:57:07Z","2019-08-20T09:09:39Z"
"","1947","Clicking Elements Inside a Frame no longer works after the frame refreshes in Safari","## Meta -  OS: OSX 10.11 Selenium Version: 2.48.0 Browser: Safari Browser Version: 9.0 ## Expected Behavior -  Clicking Element should click ## Actual Behavior -  Clicking Element has not effect ## Steps to reproduce -  I'm testing a Plug-in for Outlook online I change frame to the one of the Plug-in I can Enter the UserName, Password, Click Login Button (Frame refreshes after login) Problem: After the login  I can no longer click any elements on the page.  I can find them, but when it performs the Click, nothing occurs and no error is returned.   Note that I've tested this in Chrome and it works fine.","closed","","Gio77","2016-04-08T14:41:13Z","2019-08-19T15:09:36Z"
"","1892","java.lang.NoClassDefFoundError: org/openqa/selenium/io/CircularOutputStream on Junit test startup.","## Meta -  OS: OSX 10.10.2 Selenium Version: 2.53.0  Browser: Firefox Browser Version: 45.0.1 IDE: Intellij  ## Expected Behavior -  Junit test would launch the browser and begin testing using concordion. ## Actual Behavior -  No browser launched and this stack trace.  java.lang.NoClassDefFoundError: org/openqa/selenium/io/CircularOutputStream  ``` at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:60) at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:56) at org.openqa.selenium.firefox.FirefoxDriver.getBinary(FirefoxDriver.java:203) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:128) at .web.Browser.(Browser.java:221) at .web.BrowserUtil.getBrowser(BrowserUtil.java:134) at .web.BrowserUtil.getBrowser(BrowserUtil.java:62) at .web.WebConcordionTestBase.getBrowser(WebConcordionTestBase.java:121) at .web.WebConcordionTestBase.before(WebConcordionTestBase.java:71) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) at org.junit.runners.ParentRunner.run(ParentRunner.java:309) at org.junit.runner.JUnitCore.run(JUnitCore.java:160) at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69) at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234) at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:497) at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144) ```  Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.io.CircularOutputStream     at java.net.URLClassLoader.findClass(URLClassLoader.java:381)     at java.lang.ClassLoader.loadClass(ClassLoader.java:424)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)     at java.lang.ClassLoader.loadClass(ClassLoader.java:357)     ... 36 more ## Steps to reproduce -  Nothing special, in intellij, run a junit test that is using 2.53.0 selenium-java and this error occurs.  After playing with the versions, I find that this error message doesn't occur at 2.50.0 but it starts appearing at 2.50.1.  I suspect this commit might have caused it: https://github.com/SeleniumHQ/selenium/commit/976b5e9357229b8acf29f2f0857e0be9d4619306  Using this version and lower ones results in a ""org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms."" error with a long stack trace (when used with FF45) so downgrading the selenium version isn't an option.","closed","","insacuri","2016-03-29T14:43:42Z","2019-08-20T09:09:56Z"
"","2172","[SafariDriver] Parallel execution with TestNG safari driver not able to click certain elements sometimes","## Meta -  OS: OSX     Selenium Version:  2.53    Browser:  Safari    Browser Version:  latest 64 bit   ## Expected Behavior - ## Actual Behavior -  Parallel execution with TestNG safari driver not able to click certain elements sometimes. Please note that parallel execution with chrome, firefox and IS is working fine in my framework but only with Safari click() command is sometime working sometimes not working in parallel execution. In sequenctial execution safai is working fine but this issue occurs only when i run it in multithreading environment. I have tested in Mac machine and Saucelabs also, both hasve same results. ## Steps to reproduce -    I am using TestNG and maven to execute tests in parallel.  For parallelixation i am also using TestNG dataProvider with parallel = true","closed","","sethisandeepsethi","2016-05-27T11:51:05Z","2019-08-20T05:09:34Z"
"","2252","IDE: Change in Base URL is not indicated in the Test Case pane","## Meta -  OS: OSX Selenium Version: 2.9.1 Browser: Firefox Browser Version: 47.0 ## Expected Behavior -  When changing the ""Base URL"" I'd expect some kind of indication that the 'Test Case' has changed. e.g. an Asterisk next to the name of the test case in the 'Test Case' pane. ## Actual Behavior -  No indication. ## Steps to reproduce -  ``` * Open a Test Suite with at least on Test Case in it that has a 'Base URL' * Change the 'Base URL' * There is no Asterisk next to the test case name in the 'Test Case' pane. ```  Apparently even this indication does not protect me from data loss. See #2251","closed","C-ide,","szabgab","2016-06-10T06:27:33Z","2019-08-17T16:10:01Z"
"","2251","IDE: Changed Test can be Deleted without any warning - loosing my changes","## Meta -  OS: OSX Selenium Version: 2.9.1 Browser: Firefox Browser Version: 47.0 ## Expected Behavior -  The IDE should ask if I would like to save my changes before closing a Test Case ## Actual Behavior -  Silently closes the Test Cases loosing my changes ## Steps to reproduce -  `````` * Open a Test Suite with at least one Test Case in it. * Edit the 'Target' of one of the steps. (e.g. add a character). * (Note, an asterisk ```*``` appears next to the name of the test in the 'Test Suite' pane.) * Right click on the name of the Test Case and click on Delete  * Click in the Test Case pane and click on 'Add Test Case' * Find and select the filename of the previously deleted Test Case and open it * Find the step that was changed and see it returned to the original value ``````","closed","C-ide,","szabgab","2016-06-10T06:21:48Z","2019-08-17T16:10:02Z"
"","1932","Server Grid breaks PhantomJS","## Meta -  OS: OSX Selenium Version: 2.53.0 Browser: PhantomJS Browser Version: 2.1.1 ## Expected Behavior -  Getting a RemoteWebDriver for phantomjs from a Grid hub with connected nodes opens a phantomJS instance on an available node and returns a webdriver object to Python. ## Actual Behavior -  The hub receives the session request. Nothing further is logged on the hub or either node; however Python throws a `WebDriverException` with the message `Error forwarding the new session cannot find : Capabilities [{browserName=phantomjs}]`.  I have verified this with the hub and node running on the same machine as well as on different hosts on the same network. ## Steps to reproduce - - run selenium server standalone - get remote webdriver for phantomjs from server - stop standalone server, start hub and node on same host or two separate ones - get remote webdriver for phantomjs from server  [Python script for testing](https://github.com/SeleniumHQ/selenium/files/207004/seleniumbug.txt) [WebDriverException stack trace](https://github.com/SeleniumHQ/selenium/files/207006/stacktrace.txt)","closed","C-grid,","fpiesche","2016-04-06T18:05:08Z","2019-08-16T23:09:36Z"
"","1816","SafariDriver - sendKeys cant put negative value into number field","## Meta -  OS: OS X El Capitan Selenium Version: 2.48 Browser: Safari Browser Version: 9.0.1  ## Expected Behavior -  In safari browser, I am at a webpage that has an input field of type ""number"" with min and max values set. I am using sendKeys to attempt to put a negative number (which is greater than the minimum value) into the field.  I would expect the field to show the negative value. ## Actual Behavior -  The input field displays the number without the negative sign. In my example below, the field shows the value of 5. ## Steps to reproduce -  java code: String value = ""-5""; String id = ""myinputvalue""; WebElement inputElement = browser.findElement(By.id(id)); inputElement.clear(); inputElement.sendKeys(value);  webpage source < input type=""number"" min=""-10"" max=""10"" id=""myinputvalue"" class=""text"" size=""20"" name=""myinputvalue"">","closed","","smathistad","2016-03-15T21:05:43Z","2019-08-19T15:09:35Z"
"","1866","Browser-Safari: OpenGL elements are not present on screenshot taken by OpenQA.Selenium.Remote.RemoteWebDriver.GetScreenshot()","## Meta -  OS: OS X 10.10.5 Selenium Version: WebDriver.dll, v2.48.2.0, Safari WebDriver Extension 2.48.0  Browser: Safari Browser Version: 9.0.3 ## Expected Behavior -  OpenGL objects are present on taken screenshot ## Actual Behavior -  OpenGL elements are not present on screenshot taken by OpenQA.Selenium.Remote.RemoteWebDriver.GetScreenshot() ## Steps to reproduce -  I‚Äôm taking screenshots of the application in Safari 9 by OpenQA.Selenium.Remote.RemoteWebDriver.GetScreenshot() (ITakesScreenshot.GetScreenshot()). But OpenGL elements are not present on taken screenshot. How this issue could be solved?","closed","A-needs new owner,","Hoverla","2016-03-23T12:49:32Z","2019-08-19T15:09:57Z"
"","2014","document.write/document.writeln hangs firefox driver","## Meta -  OS: OS X Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0.2  Originally reported [here](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/3460), and confirmed this is still occurring. Not sure if that archive is looked at at all, so I'm making the issue here as it's affecting us directly. ## Expected Behavior -  Write to the browser window and continue with the rest of the unit test. ## Actual Behavior -  FF Driver just hangs until I manually kill the browser. ## Steps to reproduce - 1. Create unit test with the following in it (With or without `driver.get(""about:blank"");`):        `JavascriptExecutor js = (JavascriptExecutor) driver;    js.executeScript(""document.write(\""Test\"");document.close()"");` 2. Execute the unit test.","closed","","borski","2016-04-27T00:36:23Z","2019-08-19T09:09:45Z"
"","1931","Selecting Input Element to Enter Text not working in IE11 Microsoft Windows Server 2008 R2 Standard Service Pack 1","## Meta -  OS: Microsoft Windows Server 2008 R2 Standard Service Pack 1 Selenium Version: 2.53 tried and 2.44.0 tried using jar Browser: Remote IE Browser Version: IE11 11.0.9600.18230 (32 bit) Task Manager: FireDaemon Pro Service Manager v3.7 GA  Task Manager is running every 3000 milliseconds: ""C:\Program Files (x86)\Java\jre1.8.0_25\bin\java"" -jar C:\seleniumserver\selenium-server-standalone-2.44.0.jar -Dwebdriver.ie.driver=""C:\seleniumserver\IEDriverServer.exe"" -Dwebdriver.firefox.bin=""C:\Program Files (x86)\Mozilla Firefox\firefox.exe"" ## Expected Behavior -  For the send keys to work in the input.  I'm able to select an element to click (tested), select and element and confirm the right text is there.  But I am unable to select and element and have it input text either by class or id. I am running this via a task manager and firing my python to work in remote IE. I've run through all the security permissions make sure it's on Medium or lower.  Turned of EPM to ensure I'm on 32 bit.  I'm using the 32 bit windows driver.  And I have fixed the registry for the FEATURE_BFCACHE ""iexplore.exe""=dword:00000000.  found here: http://heliumhq.com/docs/internet_explorer ## Actual Behavior -  It doesn't select element to input the text.  Although clicks a button so I know the click is working. I changed my url to google.com and saw that the send_keys were firing because google puts the keys in the input even if the input is not selected.  So still not working with google's input.  It is not selecting the input for google.com as well.  ## Steps to reproduce -    ```     Test = self.driver.find_by_id('Search')  **input element     Test.clear() **removed and kept     Test.click()  **removed and kept     Test.send_keys('ITWORKS')     Test.send_keys('BATMAN')     time.sleep(10) ```","closed","","C0deS1ayer","2016-04-06T16:14:58Z","2019-08-19T08:10:00Z"
"","1895","BUG: Cannot Resize Window when ChromeDriver is running in incognito mode","## Meta -  OS: Mac El Capitan -10.11.4 Selenium Version: 2.53.0 Browser: Google ChromeDriver 2.21 Browser Version: 49.0.2623.87 is the installed Chrome browser on my computer  My Pom.xml:  > ``` >      >         org.seleniumhq.selenium >         selenium-java >         2.53.0 >      > ``` ## Expected Behavior -  I should be able to resize a chrome window when its running in incognito mode. ## Actual Behavior -  After starting the browser, an exception is thrown when I try to resize().  Note, if you remove the adding of the options to the desired capabilities, the code will work just fine (resizes correctly when not in incognito mode). ## Steps to reproduce -  (In Java)  ```         //Build Active Driver         ChromeOptions options = new ChromeOptions();                 options.addArguments(""-incognito"");         LoggingPreferences loggingprefs = new LoggingPreferences();         loggingprefs.enable(LogType.BROWSER, Level.ALL);                 DesiredCapabilities capabilities = DesiredCapabilities.chrome();                 capabilities.setCapability(CapabilityType.LOGGING_PREFS, loggingprefs);      //Setup Logging                 capabilities.setCapability(ChromeOptions.CAPABILITY, options);                  //Sets up Chrome for local usage.                 System.setProperty(""webdriver.chrome.driver"",  System.getProperty(""user.dir"") + ""/chromedriver"");                  driver = new ChromeDriver(capabilities);          //Sets Script timeout to 5 seconds. Used for Synthetic Actions (executing of Javascript)         driver.manage().timeouts().setScriptTimeout(5, TimeUnit.SECONDS);          //Set default Explicit wait times to default wait time (currently 30 seconds instead of 10).         waiter = new WebDriverWait(driver, defaultTimeOutInSeconds);          //Ignore StaleElementReferenceExceptions while waiting in addition to the NotFoundException.         waiter.ignoring(StaleElementReferenceException.class);          //Create Javascript Executor object for directly executing Javascript in the browser.         js = (JavascriptExecutor) driver;          //Sets browser window size to 1280x1024         driver.manage().window().setSize(new Dimension(1280, 1024)); //Fails Here ```  When executing the last line, I get the following stack trace:  > org.openqa.selenium.WebDriverException: unknown error: No current window > JavaScript stack: > Error: No current window >     at checkForExtensionError (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:14:17) >     at Object.callback (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:67:5) >     at safeCallbackApply (extensions::sendRequest:21:15) >     at handleResponse (extensions::sendRequest:72:7) >   (Session info: chrome=49.0.2623.110) >   (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Mac OS X 10.11.4 x86_64) (WARNING: The server did not provide any stacktrace information) > Command duration or timeout: 148 milliseconds > Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' > System info: host: 'MacBook-Pro.local', ip: '10.0.21.150', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.4', java.version: '1.8.0_60' > Driver info: org.openqa.selenium.chrome.ChromeDriver > Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4), userDataDir=/var/folders/_3/1bmspbg951b41lnrh70jp8_c0000gn/T/.org.chromium.Chromium.1700q1}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=49.0.2623.110, platform=MAC, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] > Session ID: 3f4e4ad8de0c282b79e73e39699caec1 >   at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) >   at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) >   at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) >   at java.lang.reflect.Constructor.newInstance(Constructor.java:422) >   at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) >   at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) >   at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678) >   at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.setSize(RemoteWebDriver.java:891)","closed","","JasonSmiley208","2016-03-30T15:15:23Z","2019-08-18T17:10:02Z"
"","2505","Could remote webdriver support cookies as part of the RPC calls?","## Meta -  OS: Linux/Docker Selenium Version:  2.53.6, Python Browser:  phantomjs Browser Version:  latest snapshot ## Expected Behavior -  Selenium remote webdriver should respect cookies for load balancing purposes ## Actual Behavior -  Selenium remote webdriver completely disregards cookies ## Steps to reproduce -  I'm attempting to run haproxy as a load balancer for a cluster of phantomjs webdriver servers.  Remote webdriver has its own setup for session ids where a new session id is sent in the body of the response when a `POST /session` request is made.  Then, subsequent requests use the session id in the URL, such as `GET /sessions/SESSION_ID/source`.  This is super inconvenient for systems like haproxy.  Haproxy can just send its own cookies along to handle session management (i.e. tying the session to which server it balanced the initial request to).  But, as it stands, the remote webdriver code disregards cookies, probably because the RPC API doesn't use them.  But adding support could only help things, right?","closed","","hexpunk","2016-07-21T21:29:39Z","2019-08-19T22:09:40Z"
"","2242","setPosition changes the window size in Linux","## Meta -  OS: Linux Mint 17.3 Cinnamon 64-Bit Selenium Version: 2.53.0 (in Java) Browser: Any Browser Version: Any ## Expected Behavior -  the position would change ## Actual Behavior -  the window does not move ## Steps to reproduce -  driver.manage().window().setPosition(new Point(rect.x, rect.y))","closed","OS-linux,","jbrower2","2016-06-08T19:36:06Z","2019-08-14T14:09:39Z"
"","1984","selenium/standalone-chrome:latest docker image does not work as of 2.53.0","## Meta -  OS: Linux (Ubuntu 15.10) with Docker 1.10.2 Selenium Version: 2.53.0 (selenium/standalone-chrome:latest docker image as of 2016-04-18) Browser: Google Chrome Browser Version: Unknown (whatever is in the docker image) ## Expected Behavior -  Assuming docker is installed correctly, running docker run -d -P selenium/standalone-chrome  should start Selenium with Google Chrome in a docker container. ## Actual Behavior -  The container immediately dies with a message saying it can't find /opt/bin/functions.sh ## Steps to reproduce -  $ docker run -d -P selenium/standalone-chrome 3b17acfa1613ee153d9ff980e7727335d5eb77562a618061d446976e75cb1c2f $ docker logs 3b17acfa1613ee153d9ff980e7727335d5eb77562a618061d446976e75cb1c2f  /opt/bin/entry_point.sh: line 3: /opt/bin/functions.sh: No such file or directory /opt/bin/entry_point.sh: line 16: get_server_num: command not found ## Notes  selenium/standalone-chrome:2.53.0 seems to work correctly. It's only the image currently tagged ""latest"" which fails in this way.","closed","","gedkins","2016-04-18T19:34:23Z","2019-08-20T08:09:43Z"
"","1884","invalid code lengths set exception when uploading a Firefox profile containing a shared library","## Meta -  OS: Linux Selenium Version: 2.53.0 server, selenium-webdriver 2.53.1 javascript bindings as client Browser: Firefox Browser Version: 45.0 ## Expected Behavior -  A profile containing a shared library is transferred to the selenium server correctly. This is likely similar to this issue (probably #640) from the selenium-webdriver JS changelog for 2.48.0:  ``` * FIXED: zip files created for transfer to a remote WebDriver server are no     longer compressed. If the zip contained a file that was already compressed,     the server would return an ""invalid code lengths set"" error. ``` ## Actual Behavior -  the client exits with: WebDriverError: invalid code lengths set The server throws a lengthy exception ([full log](https://github.com/SeleniumHQ/selenium/files/190405/selenium-issue.txt)) which boils down to   ``` Caused by: org.openqa.selenium.WebDriverException: java.util.zip.ZipException: invalid code lengths set ``` ## Steps to reproduce -  1) run selenium-server-standalone-2.53.0.jar 2) run attached nodejs script [bug.txt](https://github.com/SeleniumHQ/selenium/files/190409/bug.txt) with the contents of [this zip](https://github.com/SeleniumHQ/selenium/files/190410/buggyprofile.zip) unzipped in the proper location","closed","","fippo","2016-03-26T09:14:24Z","2019-08-20T07:09:42Z"
"","2008","InvocationTargetException received when trying to create new Selenium session","## Meta -  OS: CENTOS 7 docker image Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0.2 ## Expected Behavior -  No Exception should be raised when trying to create a new session ## Actual Behavior -  Stack trace is received: ` 12:36:44.301 INFO [26] org.openqa.selenium.remote.server.FirefoxDriverProvider - Creating a new session for Capabilities [{platform=ANY, acceptSslCerts=true, javascriptEnabled=true, browserName=firefox, name=M3 Script}] 12:37:29.507 WARN [14] org.openqa.selenium.remote.server.DriverServlet - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: '9bf0228b7c38', ip: '172.17.18.95', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-327.10.1.el7.x86_64', java.version: '1.7.0_99' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:188)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:79)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)     at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)     at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)     at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)     at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)     at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)     at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)     at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)     at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)     at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: '9bf0228b7c38', ip: '172.17.18.95', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-327.10.1.el7.x86_64', java.version: '1.7.0_99' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.FirefoxDriverProvider.callConstructor(FirefoxDriverProvider.java:101)     at org.openqa.selenium.remote.server.FirefoxDriverProvider.newInstance(FirefoxDriverProvider.java:68)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.server.FirefoxDriverProvider.callConstructor(FirefoxDriverProvider.java:91)     ... 9 more ` ## Steps to reproduce -  I am using Nightwatchjs selenium based testing framework. From time to time, I get this error when trying to create a new session and run a new test.","closed","","mariusioana","2016-04-25T12:54:37Z","2019-08-20T07:09:58Z"
"","2503","Execute Async Script, callback doesn't get called inside window.setTimeout","## Meta -  OS: Arch Linux (os.version: '4.6.4-1-ARCH') Selenium Version:  2.53.0 Browser:  chromium, chrome, firefox Browser Version:     ## Expected Behavior -  ``` const webdriver = require('selenium-webdriver'); const chrome = require('selenium-webdriver/chrome');  // Tried with firefox, google-chrome and chromium let options = new chrome.Options(); options.setChromeBinaryPath('/usr/bin/google-chrome-stable');  let driver = new webdriver.Builder()         .forBrowser('firefox')         .usingServer('http://localhost:4444/wd/hub')         //.setChromeOptions(options)         .build();   driver.get('http://google.com'); driver.executeAsyncScript(() => {     var callback = arguments[arguments.length - 1];     window.setTimeout(() => {         callback({hamid: 'hamid'});     }, 500) }) ```  It's supposed to call the callback after setTimeout, but got an error. ## Actual Behavior -  ``` 17:20:05.585 INFO - Executing: [execute async script: return (() => {     var callback = arguments[arguments.length - 1];     window.setTimeout(() => {         callback({hamid: hamid});     }, 500) }).apply(null, arguments);, []]) 17:20:05.718 WARN - Exception thrown org.openqa.selenium.TimeoutException: Timed out waiting for async script result after 1ms Command duration or timeout: 129 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' ```","closed","","elaich","2016-07-21T16:29:54Z","2019-08-19T22:09:42Z"
"","1822","[Python webdriver] switch_to.alert does not call alert.text","## Meta -  OS: any Selenium Version: Webdriver Browser: Any Language: Python ## Expected Behavior -  driver.switch_to.alert should initialize the Alert object by calling alert.text for feature parity with Java. ## Actual Behavior -  Alert object with driver instance is created, but no Alert is actually received from server because no command is executed, so no exceptions are thrown. ## Steps to reproduce -  ``` try:     alert = driver.switch_to.alert except NoAlertPresentException:     print 'We never get here as alert is not requested from server' ```","closed","C-py,","rouke-broersma","2016-03-16T08:45:03Z","2019-08-16T22:09:58Z"
"","1965","Since 2.53: Unable to use custom Firefox path in (non-remote) WebDriver","## Meta -  OS: any Selenium Version: since 2.53, Python bindings Browser: Firefox Browser Version: any ## Expected Behavior -  When calling `selenium.webdriver.firefox.webdriver.WebDriver()` with a custom path to a Firefox binary it should use this one instead the default one. ## Actual Behavior -  The setting is either silently ignored or produces a traceback. ## Steps to reproduce - - Using `FirefoxBinary` is ignored:      ```   from selenium.webdriver.firefox.firefox_binary import FirefoxBinary      selenium.webdriver.firefox.webdriver.WebDriver(firefox_binary= FirefoxBinary('/path/to/my/firefox'))   ```      Because of https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/webdriver.py#L67   and `_get_firefox_start_cmd()` ignoring the path set in `__init__`, see https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/firefox/firefox_binary.py#L142 - Using a plain path `selenium.webdriver.firefox.webdriver.WebDriver(firefox_binary='/path/to/my/firefox')` fails:      ```   File "".../selenium/webdriver/firefox/webdriver.py"", line 103, in __init__     self.binary, timeout)   File "".../selenium/webdriver/firefox/extension_connection.py"", line 51, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   AttributeError: 'str' object has no attribute 'launch_browser'   ``` - Using `firefox_options` as argument:       ```   from selenium.webdriver.firefox.options import Options   from selenium.webdriver.firefox.firefox_binary import FirefoxBinary      options = Options()   options.binary_location = FirefoxBinary('/path/to/my/firefox')   selenium.webdriver.firefox.webdriver.WebDriver(firefox_options=options)   ```      fails:      ```   File "".../selenium/webdriver/firefox/webdriver.py"", line 107, in __init__     keep_alive=True)   File "".../selenium/webdriver/remote/webdriver.py"", line 91, in __init__     self.start_session(desired_capabilities, browser_profile)   File "".../selenium/webdriver/remote/webdriver.py"", line 173, in start_session     'desiredCapabilities': desired_capabilities,   File "".../selenium/webdriver/remote/webdriver.py"", line 231, in execute     response = self.command_executor.execute(driver_command, params)   File "".../selenium/webdriver/remote/remote_connection.py"", line 392, in execute     data = utils.dump_json(params)   File "".../selenium/webdriver/remote/utils.py"", line 32, in dump_json     return json.dumps(json_struct)   File "".../lib/python2.7/json/__init__.py"", line 244, in dumps     return _default_encoder.encode(obj)   File "".../lib/python2.7/json/encoder.py"", line 207, in encode     chunks = self.iterencode(o, _one_shot=True)   File "".../lib/python2.7/json/encoder.py"", line 270, in iterencode     return _iterencode(o, 0)   File "".../lib/python2.7/json/encoder.py"", line 184, in default     raise TypeError(repr(o) + "" is not JSON serializable"")   TypeError:  is not JSON serializable   ```","closed","","icemac","2016-04-13T15:06:43Z","2019-08-19T09:09:36Z"
"","1928","Selenium standalone server not pushed to maven","## Meta -  OS: any Selenium Version: grid Browser: any Browser Version: any  I use the jenkins selenium grid plugin found here: https://wiki.jenkins-ci.org/display/JENKINS/Selenium+Plugin This plugin uses selenium standalone server and downloads this from maven. Selenium team has decided some time (years?) ago to no longer provide the selenium standalone server jar on maven. As a workaround the plugin maintainer implemented an ant task that downloads the jar from the selenium hosting site, then uploads it to the jenkins private maven repository. This however requires that a jenkins core team member runs a script every time a selenium update comes out. The plugin maintainer himself is not a jenkins core team member. Due to this the plugin is stuck on selenium version 2.41.  I would like selenium to once again provide the selenium server standalone jar through maven, so that the jenkins plugin can use a more recent version more easily. Is this possible?  The jenkins selenium plugin currently has more than 1700 installs. I do not believe this is an insignificant part of the selenium user base, is it?","closed","","rouke-broersma","2016-04-06T13:16:02Z","2019-08-20T01:10:00Z"
"","1864","HTMLRunner report could not display text properly if encoding of test case different from ISO_8859_1","## Meta -  OS: Any Selenium Version: 2.52.0 Browser: Any Browser Version: Any ## Expected Behavior -  ![report-good](https://cloud.githubusercontent.com/assets/17738390/13958624/d5a072ce-f061-11e5-8679-646df4df5bb7.png) ## Actual Behavior -  ![report-bed](https://cloud.githubusercontent.com/assets/17738390/13958264/825f4f82-f060-11e5-8218-4cbaba764666.png) ## Steps to reproduce -  Scenario `open http://ru.wikipedia.org/wiki/Selenium` `assertText id=content *–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç*`  Target page http://ru.wikipedia.org/wiki/Selenium ![target-page](https://cloud.githubusercontent.com/assets/17738390/13958435/1d1e8254-f061-11e5-875b-e70e510494fc.png) ## Description  If test case contains non ISO_8859_1 characters html report could not display them correctly.  Pull request https://github.com/SeleniumHQ/selenium/pull/1794 fix this issue.","closed","C-ide,","swarmshine","2016-03-22T16:11:25Z","2019-08-17T17:09:43Z"
"","2168","Python bindings: Unhelpful error message given when PhantomJS exits unexpectedly","## Meta -  OS: Any Selenium Version:  2.53.2 Browser:  PhantomJS 2.1.1 ## Expected Behavior -  Prior to checking connectivity to the PhantomJS process Selenium should check that the process is still running. ## Actual Behavior -  Selenium does not check that the PhantomJS process is running prior to checking connectivity. This results in unhelpful error message when the subprocess unexpectedly exits. (In my case it exited due to missing shared libs on the testing server but the error message led me to believe that the issue was inability to open a port). ## Steps to reproduce -  Replace the PhantomJS executable with a script that exits immediately. Selenium will make 30 tries to connect to it and finally exit with error: ""Can not connect to the Service xxx"", with xxx being the actual executable path.","closed","","gtzampanakis","2016-05-26T12:34:07Z","2019-08-20T05:09:33Z"
"","2637","Python - Selenium won't start browser because it assumes port as closed","## Meta -  OS: 4.6.4-301.fc24.x86_64 Selenium Version:  2.53.5 Browser:  Firefox (But the issue probably affect also Chrome and PhantomJS) Browser Version:  48 ## Expected Behavior -  Start Browser ## Actual Behavior -  Error  ``` Traceback (most recent call last):   File """", line 1, in    File ""/home/vagrant/.virtualenvs/venv/lib/python3.5/site-packages/selenium/webdriver/firefox/webdriver.py"", line 81, in __init__     self.binary, timeout)   File ""/home/vagrant/.virtualenvs/venv/lib/python3.5/site-packages/selenium/webdriver/firefox/extension_connection.py"", line 51, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""/home/vagrant/.virtualenvs/venv/lib/python3.5/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""/home/vagrant/.virtualenvs/venv/lib/python3.5/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 108, in _wait_until_connectable     % (self.profile.path)) selenium.common.exceptions.WebDriverException: Message: Can't load the profile. Profile Dir: /tmp/tmp7h3kzj0f If you specified a log_file in the FirefoxBinary constructor, check it for details. ``` ## Steps to reproduce -  ``` browser = webdriver.Firefox() ```  Not sure what causes this, but I found out where is the problem.  https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/common/utils.py#L97-L113  Port is opened:  ``` nmap -p T:42487 127.0.0.1  Starting Nmap 7.12 ( https://nmap.org ) at 2016-08-21 00:19 UTC Nmap scan report for ### (127.0.0.1) Host is up (0.00015s latency). PORT      STATE SERVICE 47035/tcp open  unknown ```  I tried the function outside in shell:  ``` >>> import socket >>> socket_ = socket.create_connection((""127.0.0.1"", ""47035""), 1) # Works >>> socket_ = socket.create_connection((""localhost"", ""47035""), 1) # Fails Traceback (most recent call last):   File """", line 1, in    File ""/usr/lib64/python3.5/socket.py"", line 711, in create_connection     raise err   File ""/usr/lib64/python3.5/socket.py"", line 702, in create_connection     sock.connect(sa) ConnectionRefusedError: [Errno 111] Connection refused >>> socket_ = socket.create_connection((""127.0.0.1"", ""47035""), 1) # Works >>>  ```","closed","","fdobrovolny","2016-08-21T00:41:27Z","2019-08-19T19:09:43Z"
"","2677","Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.","## Meta -  OS:  Wndows 10 Selenium Version:  selenium_server_standalone_3.0.0-beta2.jar Browser:  Firefox 48.0.2 64bit ## Expected Behavior -  Launch the Firefox browser while running from Selenium webdriver. ## Actual Behavior -  > org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. > Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' > System info: host: 'sattiieshh-PC', ip: '192.168.29.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_73' > Driver info: driver.version: FirefoxDriver >   at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:670) >   at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:247) >   at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:232) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:220) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:215) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) >   at com.rajyasree.zenphoto.ZenPhotoLogin.setUp(ZenPhotoLogin.java:36) >   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) >   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) >   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) >   at java.lang.reflect.Method.invoke(Method.java:497) >   at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) >   at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) >   at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) >   at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) >   at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) >   at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) >   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) >   at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) >   at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) >   at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) >   at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) >   at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) >   at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) >   at org.junit.runners.ParentRunner.run(ParentRunner.java:363) >   at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) >   at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) >   at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) >   at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) >   at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) >   at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)  ## Steps to reproduce -  I have tried to connect to a website and lauch the Firefox driver.But I got the below error  > Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console  So I used the new port in Firefox profile as 7056 and tried to relaunch.  Please find my code here with:  ``` public void setUp() throws Exception {         FirefoxProfile p = new FirefoxProfile();         p.setPreference(""webdriver_firefox_port"", 7056);          System.setProperty(""webdriver.gecko.driver"", ""C:\\Program Files (x86)\\Mozilla Firefox\\firefox.exe"");          driver = new FirefoxDriver(p);         baseUrl = ""http://www.google.com/"";         driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);     }  ```  This gave me the above error. Please help.  I have even tried to disable firewall for Firefox on TCP. But the issue still persists.","closed","","rajyasree","2016-08-28T17:01:12Z","2019-08-19T18:09:59Z"
"","2224","aaa","## Meta -  OS:  Windows7    Selenium Version:  dotnet    Browser:  Google Chrome    Browser Version:  51.0.2704.63 m (64-bit)   ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Siva-pi","2016-06-07T00:54:13Z","2019-08-20T04:09:43Z"
"","2671","SEC_ERROR_UNKNOWN_ISSUER error in 3.0.0 beta2","## Meta -  OS:  Windows7    Selenium Version:  3.0.0 Beta2    Browser:  Firefox V     Browser Version:  48.0.2   ## Expected Behavior - It need  to bypass the error of SSL certificates and SEC_ERROR_UNKNOWN_ISSUER ## Actual Behavior - It is not bypassing. I wrote the code to bypass it by using DesiredCapabilities, Profiles, Taking existing profiles. None are working. ## Steps to reproduce -  package test;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.firefox.internal.ProfilesIni;  public class T1 {  ``` public static void main(String[] args) {     // TODO Auto-generated method stub     System.setProperty(""webdriver.gecko.driver"", "".\\Driver\\geckodriver.exe"");     /*DesiredCapabilities cap=DesiredCapabilities.firefox();     cap.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);*/     /*FirefoxProfile pro=new FirefoxProfile();     pro.setAcceptUntrustedCertificates(true);     pro.setAssumeUntrustedCertificateIssuer(false);*/     ProfilesIni prof=new ProfilesIni();     FirefoxProfile pro=prof.getProfile(""Selenium"");     pro.setAcceptUntrustedCertificates(true);     pro.setAssumeUntrustedCertificateIssuer(true);     pro.setPreference(""setAcceptUntrustedCertificates"",""true"");     pro.setPreference(""setAssumeUntrustedCertificateIssuer"",""false"");     WebDriver driver=new FirefoxDriver(pro);      driver.get(""Use SSL Certificate error website"");  } ```  }","closed","","Takkaiscool","2016-08-26T11:16:00Z","2019-08-19T04:09:55Z"
"","2347","Slow Sendkeys IE11 Windows Server 2012 R2 with 32bit IEDriverServer over Grid","## Meta -  OS:  Windows Server 2012 R2 (64 bit) Selenium Version:  2.53, .NET bindings via nuget Browser:  Internet explorer via IEDriverServer 32bit Browser Version:  11 ## Expected Behavior -  Sendkeys speed be at normal speed/near equivalent to Firefox/Chrome webdrivers.  ## Actual Behavior -  Sendkeys speed is very slow, one key every ~8 seconds ## Steps to reproduce - - Setup Windows Server 2012 R2 as per configuration instructions in https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver   - This includes the registry values TabProcGrowth and BFCache - Configure a selenium node/hub   - Was using this node configuration (with IEDriverServer 32 bit in path): https://ptpb.pw/t_k4/json     - edit: This bug was also present with this config.json: https://ptpb.pw/zV5H/json   - default hub configuration. - Launch IE driver on grid (I'm launching with ensureCleanSession) - try to enter text at https://framework.civicplus.com/admin, in the username field, note slow input.   - note: this issue is visible on any website/text field, this is just the one pertinent to our testing.   Here's an attached log from the node: https://ptpb.pw/YTpH . I had stopped the driver/test after 3-4 characters were entered.   edit: I intend to try and reproduce this in a windows 7 machine to see if it's a configuration issue that I've overlooked somehow -- I've done a fair amount of searching on this and seen that the accepted/reported solution is to use the 32bit version of IE/IEDriverServer. Filing this issue as a result of that not working.","closed","","neeasade","2016-06-23T13:23:57Z","2019-08-20T01:09:51Z"
"","2063","Selenium grid refuses more than 5 active browsers on node","## Meta -  OS:  Windows server 2012 R2 Selenium Version:  Grid + webdriver 2.53.0 Browser:  Google Chrome ## Expected Behavior -  When setting max instances to 10, and max threads to 10, 10 tests should receive a browser at the same time. ## Actual Behavior -  A maximum of 5 instances are available at any given time. Seems related to this open bug report:  https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/6397  > mei 06, 2016 3:36:33 PM org.openqa.grid.internal.BaseRemoteProxy getNewSession > INFO: Node http://APEX02.aspect.local:4445 has no free slots  ![wuttt](https://cloud.githubusercontent.com/assets/3595932/15074794/33b85cca-13a1-11e6-8069-52dd960e65ea.PNG)","closed","","rouke-broersma","2016-05-06T13:43:54Z","2019-08-20T06:10:01Z"
"","2304","Se - Providing a custom Firefox profile to Marionette causes Firefox to hang on start (not crash)","## Meta -  OS:  Windows Server 2012 R2 Selenium Version:  2.53.0 Browser: Firefox 47 ## Expected Behavior -  Providing a Firefox profile to Marionette Driver should allow Firefox to start up with that profile. ## Actual Behavior -  Firefox will launch and then hang. ## Steps to reproduce - 1. Create a Firefox profile called ""Eliza"" 2. Run the code below.    `import org.openqa.selenium.WebDriver;    import org.openqa.selenium.firefox.FirefoxDriver;    import org.openqa.selenium.firefox.FirefoxProfile;    import org.openqa.selenium.firefox.MarionetteDriver;    import org.openqa.selenium.firefox.internal.ProfilesIni;    import org.openqa.selenium.remote.DesiredCapabilities;  public class Selenium2Example  {     public static void main(String[] args) {  ```     ProfilesIni profile = new ProfilesIni();     FirefoxProfile eliza = profile.getProfile(""Eliza"");     DesiredCapabilities dc=DesiredCapabilities.firefox();     dc.setCapability(FirefoxDriver.PROFILE, eliza);     WebDriver driver = new MarionetteDriver(dc);      driver.quit(); } ```  }`","closed","","Inglonias","2016-06-16T15:40:58Z","2019-08-20T02:09:46Z"
"","2341","Add IWebDriver instance reference to IWebElement","## Meta -  OS:  Windows Server 2012 Selenium Version:  2.53.0 Browser:  N/A  Browser Version:  Any ## Expected Behavior -  Be able to get the IWebDriver instance from an IWebElement ## Actual Behavior -  There is no way to get to the IWebDriver instance from an IWebElement ## Steps to reproduce -","closed","","aedwill","2016-06-22T16:31:26Z","2019-08-20T01:09:55Z"
"","2387","Unable to switch to active frame using Webdriver 2.53 and ChromeDriver 2.22 versions.","## Meta -  OS:  Windows Server 2008 R2 Standard Selenium Version:   Browser:  Chrome  Hi There,   Currently we are using http://code.google.com/p/selenium/issues/detail?id=6354 for switching frames.  Now the code which is there in the above url is not working when we have upgraded webdriver to 2.53 from 2.52 and ChromeDriver to 2.22 from 2.16.  I have already gone through so many blogs and searched in google as well. But I didn't get anything.  May I know how to switching the frames using latest version of Webdriver and Chromedriver?   Appreciate your help.","closed","","umamaheshch","2016-06-27T06:47:28Z","2019-08-19T10:09:49Z"
"","2676","DesiredCapability ie.EnsureCleanSession not working Grid","## Meta -  OS:  Windows Server 2008 R2 6.1  |  v2.53.1  |  ra36b8b1    Selenium Version:  Selenium.Support 2.53.1 Selenium.WebDriver 2.53.1 Selenium.WebDriver.IEDriver 2.53.1.1    Browser:  Internet Explorer    Browser Version:  11.0.9600.18282 64-bit   ## Expected Behavior -  Setting the capability EnsureCleanSession = true that the browser is started in a clean session with clear cache. ## Actual Behavior -  Setting the capability appears to work as I can check `capability.HasCapability(options.EnsureCleanSession.ToString()` that this value is set to `True` but when I run the test I can see that my login session from previous tests persist.  ## Steps to reproduce -  Here is a sample test I am running on grid  ``` using System; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Support.UI; using OpenQA.Selenium.Remote; using OpenQA.Selenium.IE; using POMAuctivaTest.AuctivaPageModels;  namespace POMAuctivaTest.TestSuite {     [TestFixture]     [Category(""test"")]     public class Test     {         public IWebDriver driver { get; set; }         [OneTimeSetUp]         public void setUp()         {             InternetExplorerOptions ieOptions = new InternetExplorerOptions();             DesiredCapabilities capabilities = DesiredCapabilities.InternetExplorer();             capabilities.SetCapability(CapabilityType.BrowserName, ""internet explorer"");             capabilities.SetCapability(CapabilityType.Platform, new Platform(PlatformType.Windows));             capabilities.SetCapability(CapabilityType.Version, ""11"");             capabilities.SetCapability(""requireWindowFocus"", true);             capabilities.SetCapability(ieOptions.EnsureCleanSession.ToString(), true);             driver = new RemoteWebDriver(new Uri(""http://10.34.161.112:5555/wd/hub""), capabilities);             //driver = new InternetExplorerDriver();             driver.Manage().Timeouts().SetPageLoadTimeout(TimeSpan.FromSeconds(30));             driver.Manage().Window.Maximize();             driver.Navigate().GoToUrl(""https://passport.yandex.com/passport?mode=auth&retpath=https%3A%2F%2Fmail.yandex.com%2Flite%2Finbox"");             By usernameSelector = By.CssSelector(""#login"");             By passwordSelector = By.CssSelector(""#passwd"");             By loginButtonSelector = By.CssSelector(""body > div > div.layout-inner > div.domik-wrap > div > div.domik-content > form > div.domik-row > div > button"");             WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(30));             wait.Until(ExpectedConditions.ElementExists(loginButtonSelector));             driver.FindElement(usernameSelector).SendKeys(""webdrivertest2016@yandex.com"");             driver.FindElement(passwordSelector).SendKeys(""selenium"");             driver.FindElement(loginButtonSelector).Click();         }          [Test]         public void testIE()         {                             driver.Manage().Window.Maximize();                 System.Threading.Thread.Sleep(5000);                   }          [OneTimeTearDown]         public void tearDown()         {             driver.Quit();         }     } }  ```","closed","D-IE,","jburns24","2016-08-26T21:53:44Z","2019-08-19T17:09:38Z"
"","2002","Unable to launch Mozilla browser-43.0.2","## Meta -  OS:  Windows Server 2008 R2 Selenium Version: 2.52.0 Browser: Firefox Browser Version:  43.0.2 ## Expected Behavior -  Selenium Webdriver should be able to open browser window and navigate to application URL. ## Actual Behavior -  Selenium throws an exception while opening FF browser ## Steps to reproduce -  I am automating the application which will close and open the browser multiple times during the execution. It will then navigate to the application URL. Opening and navigating is working fine for three times then suddenly on fourth time when browser is opened the below error is thrown.  Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7067; process output follows:  talled' for fxdriver@googlecode.com 1461271073860   addons.xpi-utils    DEBUG   Make addon app-profile:fxdriver@googlecode.com visible 1461271073861   DeferredSave.extensions.json    DEBUG   Save changes 1461271073861   addons.xpi-utils    DEBUG   Make addon app-global:{972ce4c6-7e08-4474-a285-3208198ce6fd} visible 1461271073861   DeferredSave.extensions.json    DEBUG   Save changes 1461271073862   addons.xpi  DEBUG   Updating XPIState for {""id"":""fxdriver@googlecode.com"",""syncGUID"":""NTVFpd8jlLxx"",""location"":""app-profile"",""version"":""2.53.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Firefox WebDriver"",""description"":""WebDriver implementation for Firefox"",""creator"":""Simon Stewart"",""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Users\PNAGAR~1\AppData\Local\Temp\2\anonymous3948280881312400475webdriver-profile\extensions\fxdriver@googlecode.com"",""installDate"":1461271054533,""updateDate"":1461271054533,""applyBackgroundUpdates"":1,""bootstrap"":false,""size"":3249525,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":true,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""3.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[{""os"":""Darwin"",""abi"":null},{""os"":""SunOS"",""abi"":null},{""os"":""FreeBSD"",""abi"":null},{""os"":""OpenBSD"",""abi"":null},{""os"":""WINNT"",""abi"":null},{""os"":""Linux"",""abi"":null}],""multiprocessCompatible"":false,""signedState"":0} 1461271073862   addons.xpi  DEBUG   getModTime: Recursive scan of fxdriver@googlecode.com 1461271073874   addons.xpi  DEBUG   Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""msh1vqrl2Qm8"",""location"":""app-global"",""version"":""43.0.2"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files (x86)\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""installDate"":1459489083081,""updateDate"":1459489083081,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":24172,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""43.0.2"",""maxVersion"":""43.0.2""}],""targetPlatforms"":[]} 1461271073877   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1461271073880   DeferredSave.extensions.json    DEBUG   Save changes 1461271073880   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1461271073880   addons.xpi-utils    DEBUG   Updating add-on states 1461271073884   addons.xpi-utils    DEBUG   Writing add-ons list 1461271073913   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1461271073914   addons.manager  DEBUG   Provider finished startup: XPIProvider 1461271073914   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1461271073914   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1461271073915   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1461271073916   addons.manager  DEBUG   Starting provider: GMPProvider 1461271073937   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1461271073937   addons.manager  DEBUG   Provider finished startup: GMPProvider 1461271073938   addons.manager  DEBUG   Starting provider: PluginProvider 1461271073938   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1461271073938   addons.manager  DEBUG   Provider finished startup: PluginProvider 1461271073939   addons.manager  DEBUG   Completed startup sequence","closed","","abhinavm88","2016-04-22T09:22:13Z","2019-08-19T09:09:49Z"
"","2193","NoSuchElementException calling PageFactory.InitElements when an element is not present on the page","## Meta -  OS:  Windows Server 2008 R2 Selenium Version:  2.53.0.0 Browser:  InternetExplorer Browser Version:  8.0.7601.17514 (64-bit) ## Expected Behavior -  IWebElement, declared with FindsBy on page object, should not be loaded until they are used. The page object could be created and initialized even the driver is not on the page.` ## Actual Behavior -  When PageFactory.InitElements is called on a page object, if one of the IWebElement could not be found, a NoSuchElementException is thrown. ## Steps to reproduce - - Create a simple PageObject class with one IWebElement not present on the page - Call PageFactory.initElements - A NoSuchElementException is thrown  ``` public class MyPageObject {         [FindsBy(How = How.Id, Using = ""somethingThatNotExist"")]         private IWebElement unknownElement; } class MyTest {                [Test]         public void initPageObjectTest()         {             IWebDriver driver = getDriver();                        MyPageObject page = new MyPageObject();             PageFactory.InitElements(driver, page); // An NoSuchElementException is thrown here         }         private static IWebDriver getDriver()         {             // Create your driver here         } } ```  I located the problem on the method PageFactory.InitElements when SetValue is called to set the field with the proxy. The method GetType is called on the WebElementProxy. Then the WebElementProxy.Invoke method is called. In the Invoke method, the Element is used, so the LocateElement method is called and the NoSuchElementException is thrown.  When I create myself the ReturnMessage when the method GetType is invoked and I return before the Element is used, that works. It's certainly not the fix it have to be done but it shows where the problem is.   Here, the modifed code of WebElementProxy class  ```  public override IMessage Invoke(IMessage msg) {     IMethodCallMessage methodCallMessage = msg as IMethodCallMessage;         // Specific treatment when GetType method is called     if (methodCallMessage.MethodName == ""GetType"")     {         return new ReturnMessage(GetProxiedType(), null, 0, methodCallMessage.LogicalCallContext, methodCallMessage);     }      var element = this.Element;     if (typeof(IWrapsElement).IsAssignableFrom((methodCallMessage.MethodBase as MethodInfo).DeclaringType))     {         return new ReturnMessage(element, null, 0, methodCallMessage.LogicalCallContext, methodCallMessage);     }     return WebDriverObjectProxy.InvokeMethod(methodCallMessage, element); } ```","closed","C-dotnet,","sfauvel","2016-06-01T16:49:03Z","2019-08-16T08:09:43Z"
"","2058","Many network connections to port 7055","## Meta -  OS:  Windows Server 2008 R2    Selenium Version:  2.53.0    Browser:  Firefox    Browser Version:  45.0.x   ## Expected Behavior - ## Actual Behavior -  I am running Firefox tests on a Windows Server VM hosted on Amazon EC2. Everything was fine for the past couple of months until several days ago, when I started seeing a large number of network related exceptions in Selenium. Here are two such examples that I see:  ``` OpenQA.Selenium.WebDriverException: A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:7055/hub/session/1296d801-c6bb-4452-84d5-67f2abbad5b3/element/%7Bea57d4ac-5b8d-499b-8bc6-fff24e995d8d%7D/attribute/value. The status of the exception was ConnectFailure, and the message was: Unable to connect to the remote server ```  ``` OpenQA.Selenium.WebDriverException: Unexpected error. System.Net.WebException: Unable to connect to the remote server ---> System.Net.Sockets.SocketException: Only one usage of each socket address (protocol/network address/port) is normally permitted 127.0.0.1:7055 ```  These exceptions go away for several hours if the VM is rebooted, but they eventually come back. And when they do, I see a large number of connections involving port 7055. Using Window's ""netstat"" tool, I see **thousands upon thousands** of connections to/from port 7055 that are left in the ""TIME_WAIT"" state. Is this normal? ## Steps to reproduce -","closed","D-firefox,","yoongu","2016-05-05T18:08:49Z","2019-08-14T14:09:54Z"
"","2026","IEDriverServer fails to extract and launch on","## Meta -  OS:  Windows Server 2008 r2    Selenium Version:  2.53    Browser:  IE    Browser Version:  11   ## Expected Behavior -  IEDriverServer launches ## Actual Behavior -  Failed to launch with: Failed to load the library from temp directory: C:\Users\MERLIN~1.USE\AppData\Local\Temp\1Apr 29, 2016 9:22:26 AM org.openqa.selenium.os.UnixProcess checkForError  Probably caused by deleted temp folder. When trying to run the IEDriverServer, it creates a file ""1"" instead of a folder ""1"" in the temp folder. Manually creating the folder in the temp folder solved the issue, but it probably should be fixed in the code.","closed","D-IE,","sebastianhoe","2016-04-29T08:41:40Z","2019-08-14T05:09:51Z"
"","2082","InvalidOperationException when clicking a button inside a frame that pops an alert","## Meta -  OS:  Windows 8.1 Enterprise Selenium Version:  2.21 Browser:  Google Chrome Version 50.0.2661.94 m ## Expected Behavior -  The call to Click should succeed ## Actual Behavior -  The call to Click fails with the following exception: Test method SeleniumDemo.FramesDemoWithoutEssentials.TestMethod1 threw exception:  System.InvalidOperationException: unknown error: cannot determine loading status from unknown error: unhandled inspector error: {""code"":-32000,""message"":""Can not access given context.""}   (Session info: chrome=50.0.2661.94)   (Driver info: chromedriver=2.20.353145 (343b531d31eeb933ec778dbcf7081628a1396067),platform=Windows NT 6.3 x86_64) ## Steps to reproduce - 1. Create a page that contains an iframe with name=""frame1"" 2. Inside the iframe add a button with id=""inner"" and onclick=""alert('bla')"" 3. Create a test (using Selenium WebDriver of course) that navigates to the outer page 4. Swtich().ToFrame(""name1"") 5. var button = FindElement(By.Id(""inner"")) 6. button.Click()  [SeleniumBug.zip](https://github.com/SeleniumHQ/selenium/files/258880/SeleniumBug.zip)  See attached files","closed","","arnonax","2016-05-11T08:43:25Z","2019-08-20T06:09:52Z"
"","2265","Firefox 47 crashes with Selenium 2.53","## Meta -  OS:  Windows 8.1    Selenium Version:  2.53, VS 2013    Browser:  Firefox    Browser Version:  47.0 32-bit   ## Expected Behavior - Successful launch of Firefox browser. ## Actual Behavior - Firefox crashed ## Steps to reproduce -      var capabilities = DesiredCapabilities.Firefox();   capabilities.SetCapability(""marionette"", true);   var driver = new FirefoxDriver(capabilities);","closed","","kabilanvk","2016-06-10T21:44:35Z","2019-08-20T03:09:52Z"
"","2125","Cannot get .click or sendKeys Return/Enter to work as expected","## Meta -  OS:  Windows 8  Selenium Version:  2.53.0 Browser:  Internet Explorer Browser Version: 11.0.9600.18321 ## Expected Behavior - I expect the login button to be clicked when using sendKeys Return/Enter or using .click ## Actual Behavior - Page refreshes ## Steps to reproduce -  Here is a snippet of the code, firstly let me apologize if this is a coding issue as I am new to Selenium and Java but I would expect the login button to be clicked but the page just refreshes, I have tried sendKeys(Keys.Return) as well as a simple .click(). I also perform a negative test where the username and password are incorrect and this seems to work as it shows the expected incorrect username and password warning in the application. I have also attempted different ways of identifying the element with the .click() method but to no avail. I should also state that when clicked manually the user is logged into the application. Pom Class file: //Set user name in textbox        public void setusername(String strusername){        username.sendKeys(strusername);     }      //Set password in password textbox      public void setpassword(String strpassword){      password.sendKeys(strpassword);     }       //Click Login button       public void clickLogin(){ loginbutton.sendKeys(Keys.ENTER);     } public void loginTodartOCM(String strusername, String strpassword){          //Fill user name         this.setusername(strusername);         //Fill password         this.setpassword(strpassword);         //Click Login button this.clickLogin(); } This is then called in the Test Class file: //Log into the application     LoginPage.loginToApplication("""","""");","closed","","stevie24xx","2016-05-19T08:30:45Z","2019-08-20T05:09:56Z"
"","2511","Clickandhold , MoveToElement , MoveByoffset and Release chain action dosn't give desired output for dom which implemented with hammer.js","## Meta -  OS:  windows 8    Selenium Version:  2.53    Browser:  Firefox 46.01    Browser Version:  46.01   ## Expected Behavior - We have an website which developed using hammer.js  , where have an user action to draw the highlighter. We tried to automate those with selenium webdriver actions chain action code and that you can find below  ``` Actions act = new Actions(chromeDriv);  act.ClickAndHold(annotHolder).MoveToElement(annotHolder, 50, 50).MoveToElement(annotHolder).MoveByOffset(200, 150).Release().Perform(); ``` we expected a result that draw an highlighter over an div area.  the above code works fine before implementing hammer support by developing team. ## Actual Behavior - it won't draw anything , and crashed if the area have scroll bar.  My assumption is that by default driver goes to center of the element. ## Steps to reproduce -  **below code is an example for drag drop a div element implemented using hammer.js . Try to drag and drop using webdriver action _using click and hold and release**_  ```        Test                 #drag {             background: blue;             width: 100px;             height: 100px;             /*display: inline-block;*/             position: absolute;             z-index: 1;             /*top:50px;             left:50px;*/         }        #drop{             background: gray;             width: 400px;             height: 400px;             position: relative;             top:127px;         }             Drag       var stage = document.getElementById('drag');     var manager = new Hammer.Manager(stage);     var Pan = new Hammer.Pan();     manager.add(Pan);      var deltaX = 0;     var deltaY = 0;     var panstart = true;     var offsetLeft,offsetTop;     manager.on('panstart', function(event) {         console.log(event)      })     manager.on('panmove', function(event) {     console.log(event)     stage.style.left =  100 + 'px';       stage.style.top = 100+ 'px';      });     manager.on('panend', function(event) { console.log(event)               console.log('end clientY:' + event.clientY +' clientX: '+ event.clientX + ' screenX :' + event.screenX+ 'screenY :' + event.screenY)      });      ```","closed","D-atoms,","sujithsuresh05","2016-07-22T10:09:05Z","2021-09-05T09:12:33Z"
"","2180","Selenium not throwing error when browser is not navigated to url or loading","## Meta -  OS:  Windows 7 x64    Selenium Version:  2.49.0.0     Browser:  Internet explorer     Browser Version:    IE 11 ## Expected Behavior -Selenium should throw error ## Actual Behavior - Selenium not throwing error when browser is not navigated to url or loading ## Steps to reproduce -  Refer IEdriver server logs  [HA.TestExecute.Reporting.REP_CPM_7267.txt](https://github.com/SeleniumHQ/selenium/files/289206/HA.TestExecute.Reporting.REP_CPM_7267.txt)    Issue observed for about 3 - 4 hrs after that killed iexplorer.exe maually for selenium to throw an error","closed","","YeRaghuRam","2016-05-30T08:52:11Z","2019-08-20T03:09:34Z"
"","2201","The HTTP request to the remote WebDriver server for URL http://localhost:60355/session timed out after 60 seconds.","## Meta -  OS:  Windows 7 Professional, 64 bit    Selenium Version:  2.52.0.0    Browser:  Google Chrome     Browser Version:  51.0.2704.79   ## Expected Behavior - ## Actual Behavior -  The below line of code throwing error ""The HTTP request to the remote WebDriver server for URL http://localhost:60355/session timed out after 60 seconds."" ChromeDriver webDriver = new ChromeDriver() ## Steps to reproduce -    The below line of code throwing error ""The HTTP request to the remote WebDriver server for URL http://localhost:60355/session timed out after 60 seconds."" ChromeDriver webDriver = new ChromeDriver()","closed","","kvk123456","2016-06-02T14:03:07Z","2019-08-17T14:09:53Z"
"","2616","NullPointerException being thrown in ""main"" thread for org.openqa.grid.selenium.GridLauncherV3.buildLauncher","## Meta -  OS:  Windows 7 Professional N    Selenium Version:  IDE    Browser:  Firefox     Browser Version:  47.0.1   ## Expected Behavior -  Executing `java -jar C:\git\sniper-selenium\selenium.jar -timeout '70000' -htmlSuite '*chrome' 'http://devel.auctionsniper.com/' 'Regression_new_and_improved2.html' 'C:\git\sniper-selenium\report.html' -UserExtensions 'C:\git\sniper -selenium\user-extensions.js' -port 44760 -trustAllSSLCertificates` from the working directory would start the standalone server and run selenium ide script ## Actual Behavior -  ![sniperpowershell](https://cloud.githubusercontent.com/assets/19497855/17708342/6bf9aa4c-6399-11e6-90e3-703515d64c5e.PNG)  This is using the latest standalone server  http://selenium-release.storage.googleapis.com/3.0-beta2/selenium-server-standalone-3.0.0-beta2.jar I get the same results using standalone server 2.53.1 ## Steps to reproduce -","closed","","jburns24","2016-08-16T17:12:04Z","2019-08-19T15:09:35Z"
"","2775","Inconsistent use of tabs and spaces error in safari drivers","## Meta -  OS:  Windows 7 Professional    Selenium Version:   Selenium IDE 2.9.1  Browser: Chrome (but the errors are in the safari drivers)    Python Version: 3.5.2  Bindings Version: 3.0.0b2 ## Expected Behavior -  Selenium exported Python tests will run with latest selenium bindings  ## Actual Behavior -  Hit error during execution:  C:\git\acme_bowling>python bowling_selenium_test.py Traceback (most recent call last):   File ""bowling_selenium_test.py"", line 2, in      from selenium import webdriver   File ""C:\Users\dchadwell\AppData\Local\Programs\Python\Python35\lib\site-packa ges\selenium-3.0.0b2-py3.5.egg\selenium\webdriver__init__.py"", line 25, in      from .safari.webdriver import WebDriver as Safari  # noqa   File ""C:\Users\dchadwell\AppData\Local\Programs\Python\Python35\lib\site-packa ges\selenium-3.0.0b2-py3.5.egg\selenium\webdriver\safari\webdriver.py"", line 49     executable_path = os.environ.get(""SELENIUM_SERVER_JAR"")                                                           ^ TabError: inconsistent use of tabs and spaces in indentation  C:\git\acme_bowling>python bowling_selenium_test.py Traceback (most recent call last):   File ""bowling_selenium_test.py"", line 2, in      from selenium import webdriver   File ""C:\Users\dchadwell\AppData\Local\Programs\Python\Python35\lib\site-packa ges\selenium-3.0.0b2-py3.5.egg\selenium\webdriver__init__.py"", line 25, in      from .safari.webdriver import WebDriver as Safari  # noqa ImportError: No module named 'selenium.webdriver.safari' ## Steps to reproduce -  Should always happen with 3.0.0b2","closed","","Ctesias","2016-09-14T18:44:37Z","2019-08-19T17:09:44Z"
"","2100","Querying window state on closed window does not trigger a NoSuchWindow error","## Meta -  OS:  Windows 7 Professional    Selenium Version:  2.52.0    Browser:  Firefox    Browser Version:  45.0.2   ## Expected Behavior -  Methods related to closed browser window return null ## Actual Behavior -  There are several methods related to browser window: - getCurrentUrl - getPageSource - getTitle - getWindowHandle - getWindowHandles  When we call them after calling of ""close()"" method, they return the same value as before calling of ""close()"". ## Steps to reproduce -   1. Start FireFox - driver = new FirefoxDriver(Binary, profile); 2. Call one of the following methods: 3. getCurrentUrl 4. getPageSource 5. getTitle 6. getWindowHandle 7. getWindowHandles 8. Return value of these methods is not null. For example value of ""getCurrentUrl()"" is ""about:blank"". 9. Call ""close()"" method to close current opened window of browser. 10. Window is closed. 11. Call one of the following methods: 12. getCurrentUrl 13. getPageSource 14. getTitle 15. getWindowHandle 16. getWindowHandles 17. Return value of these methods is not null. For example value of ""getCurrentUrl()"" is still ""about:blank"".  Returning of null would allow to verify whether browser window is closed.","closed","D-firefox,","beluha","2016-05-13T07:31:31Z","2019-08-16T23:09:49Z"
"","2495","SSL_ERROR_HANDSHAKE_FAILURE_ALERT","## Meta -  OS:  windows 7 Enterprise x64    Selenium Version:  2.53.1    Browser:  Firefox 47.0.1    Browser Version:      47.0.1 ## Expected Behavior -  Trying to reach one page https .. associated to a certificate. I don't get the popup  ""User identication request Choose a certificate to present as identification""  Can you advise..  ## Actual Behavior -  I directly get  Secure Connection Failed  An error occurred during a connection to ................................ SSL peer was unable to negotiate an acceptable set of security parameters. Error code: SSL_ERROR_HANDSHAKE_FAILURE_ALERT ## Steps to reproduce -  Ive already tried different things like playing with firefoxProfile.setAcceptUntrustedCertificates(true); firefoxProfile.setAssumeUntrustedCertificateIssuer(true); firefoxProfile.setPreference(""network.automatic-ntlm-auth.trusted-uris"", ""TheURL"");  or  //DesiredCapabilities dc = DesiredCapabilities.firefox();  //dc.setCapability(FirefoxDriver.PROFILE, firefoxProfile);  //dc.setCapability(""acceptSslCerts"",true);  //return new   FirefoxDriver(dc);  Current Code  :   public static FirefoxDriver getFireFoxDriver (Config config, String pathFirefoxBinary) {         try {             File pathToBinary = new File(pathFirefoxBinary);             FirefoxBinary ffBinary = new FirefoxBinary(pathToBinary);              FirefoxProfile firefoxProfile = new FirefoxProfile();                         return new FirefoxDriver(ffBinary,firefoxProfile);         } catch (WebDriverException exc) {             throw new SanityCheckException(config, ""Technical Error with Firefox Driver"",                     ""Could  not retrieve the firefox driver"");         }  ``` } ```  ---  The return driver is used later in the code ... driver.get(config.getTheAppUrl());  => Stays blocked on the following message   Secure Connection Failed  An error occurred during a connection to ................................ SSL peer was unable to negotiate an acceptable set of security parameters. Error code: SSL_ERROR_HANDSHAKE_FAILURE_ALERT  Thanks","closed","D-firefox,","chantalv","2016-07-20T15:33:30Z","2019-08-14T14:09:45Z"
"","2667","close() & quit() commands dont work in Firefox Browser Version 48.0","## Meta -  OS:  Windows 7 Enterprise 64 Bit  Selenium Version:  selenium-server-standalone-3.0.0-beta2.jar Package  Browser:  Firefox Browser Version 48.0  Geckodriver Version: geckodriver-v0.10.0-win64 ## Expected Behavior -  in Firefox Browser: The driver.close() command should close the current browser window on which the focus is set. The driver.quit() command should close all opened browser windows and end the whole WebDriver session. ## Actual Behavior -  When I run my test in Selenium WebDriver using Java everything works fine so far. But with execution of driver.quit() command in the @After hook I get the following error:  `[Child 12868] ###!!! ABORT: Aborting on channel error.: file c:/builds/moz2_slave/m-rel-w32-00000000000000000000/build/src/ipc/glue/MessageChannel.cpp, line 2046`  One second later the firefox browser closes as wished but directly followed by UnreachableBrowserException with below stacktrace and the test results in a fail:  `Failure in after hook:StepDefinitionsBrowserCombinationTestWithHooks.tearDownFirefox() Message: org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'PC45770', ip: '141.77.197.75', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: driver.version: RemoteWebDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, appBuildId=20160817112116, version=, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=48.0.1, platformVersion=6.1, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: fef2d090-008f-4d43-ba5b-6ec66cae2aab     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:670)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:706)     at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:531)     at cucumber.features.StepDefinitionsBrowserCombinationTestWithHooks.tearDownFirefox(StepDefinitionsBrowserCombinationTestWithHooks.java:68)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at cucumber.runtime.Utils$1.call(Utils.java:37)     at cucumber.runtime.Timeout.timeout(Timeout.java:13)     at cucumber.runtime.Utils.invoke(Utils.java:31)     at cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:60)     at cucumber.runtime.Runtime.runHookIfTagsMatch(Runtime.java:223)     at cucumber.runtime.Runtime.runHooks(Runtime.java:211)     at cucumber.runtime.Runtime.runAfterHooks(Runtime.java:205)     at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:46)     at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)     at cucumber.runtime.Runtime.run(Runtime.java:121)     at cucumber.api.cli.Main.run(Main.java:36)     at cucumber.api.cli.Main.main(Main.java:18) Caused by: java.lang.IllegalStateException: UnixUtils may not be used on Windows     at org.openqa.selenium.os.ProcessUtils.getProcessId(ProcessUtils.java:188)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.getPID(UnixProcess.java:222)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.access$300(UnixProcess.java:201)     at org.openqa.selenium.os.UnixProcess.destroy(UnixProcess.java:132)     at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:155)     at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:196)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:94)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:649)     ... 19 more`  When I use the close() command instead nothing happens as if Selenium would ignore this code line. That means that currently I have to manually close all browser windows after every test execution to not to receive UnreachableBrowserException which ends up in a failed test. With IE and Google Chrome Browser I dont experience the issue described as above. ## Steps to reproduce -  Just try to run a simple test (like open the browser, wait a few seconds and close the browser again) against Firefox Browser Version 48.0 using Selenium beta2 Version and geckodriver. Try out both - close() and quit() - methods.  Is there anyone else facing the same problem? Any help is appreciated! Thanks in advance","closed","","Easyman123","2016-08-25T09:51:11Z","2019-08-18T19:09:45Z"
"","1842","Selenium 2.52.0 Firefox 38.6.1 launching issue","## Meta -  OS:  Windows 7 Enterprise Selenium Version:  Selenium 2.52.0 Browser:  Firefox 38.6.1 ESR vesrion Browser Version:  64 bit ## Expected Behavior -  Firefox should launch and corresponding scripts should start ## Actual Behavior -  Firefox failing to launch after checking for addons compatibility with below error log:  Caused by: org.openqa.selenium.WebDriverException: Failed to connect to binary F irefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; p rocess output follows: G       Make addon winreg-app-global:fiddlerhook@fiddler2.com visible 1458299336611   DeferredSave.extensions.json    DEBUG   Save changes 1458299336611   DeferredSave.extensions.json    DEBUG   Save changes 1458299336611   addons.xpi      DEBUG   Updating XPIState for {""id"":""fiddlerhook @fiddler2.com"",""syncGUID"":""hVrgAb0ThP44"",""location"":""winreg-app-global"",""version "":""2.4.4.5"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"": null,""optionsURL"":null,""optionsType"":null,""aboutURL"":""chrome://fiddlerhook/conte nt/about.xul"",""iconURL"":""chrome://fiddlerhook/content/fiddlerhook.png"",""icon64UR L"":null,""defaultLocale"":{""name"":""FiddlerHook"",""description"":""Integrate Fiddler i nto Firefox"",""creator"":""Telerik"",""homepageURL"":""https://www.fiddler2.com/r/?id=F IDDLERHOOKHELP""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"" :false,""descriptor"":""C:\Program Files (x86)\Fiddler2\FiddlerHook"",""installDat e"":1377685951608,""updateDate"":1377685951608,""applyBackgroundUpdates"":1,""bootstra p"":false,""size"":32976,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":fal se,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false ,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384 }"",""minVersion"":""3.0"",""maxVersion"":""28.*""}],""targetPlatforms"":[],""multiprocessCo mpatible"":false} 1458299336611   addons.xpi      DEBUG   New add-on {9F17B1A2-7317-49ef-BCB7-7BB4 7BDE10F8} installed in winreg-app-global 1458299336651   addons.xpi      WARN    Disabling foreign installed add-on {9F17 B1A2-7317-49ef-BCB7-7BB47BDE10F8} in winreg-app-global 1458299336652   DeferredSave.extensions.json    DEBUG   Save changes 1458299336652   addons.xpi      DEBUG   New add-on {D19CA586-DD6C-4a0a-96F8-1464 4F340D60} installed in winreg-app-global 1458299336652   addons.xpi      WARN    addMetadata: Add-on {D19CA586-DD6C-4a0a- 96F8-14644F340D60} is invalid: Error: Directory C:\Program Files (x86)\Common Fi les\McAfee\SystemCore does not contain a valid install manifest (resource://gre/ modules/addons/XPIProvider.jsm:1022) JS Stack trace: loadManifestFromDir@XPIProv ider.jsm:1022:1 < loadManifestFromFile@XPIProvider.jsm:1120:12 < addMetadata@XPI Provider.jsm:3174:22 < XPI_processFileChanges@XPIProvider.jsm:3452:23 < XPI_chec kForChanges@XPIProvider.jsm:3613:34 < XPI_startup@XPIProvider.jsm:2097:25 < call Provider@AddonManager.jsm:208:12 < _startProvider@AddonManager.jsm:794:5 < AMI_s tartup@AddonManager.jsm:965:9 < AMP_startup@AddonManager.jsm:2629:5 < AMC_observ e@addonManager.js:58:7 1458299336653   addons.xpi      WARN    Could not uninstall invalid item from lo cked install location 1458299336653   addons.xpi      DEBUG   Updating database with changes to instal led add-ons 1458299336653   addons.xpi-utils        DEBUG   Updating add-on states 1458299336708   addons.xpi-utils        DEBUG   Writing add-ons list 1458299336803   addons.manager  DEBUG   Registering shutdown blocker for XPIProv ider 1458299336804   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458299336804   addons.manager  DEBUG   Starting provider: LightweightThemeManag er 1458299336804   addons.manager  DEBUG   Registering shutdown blocker for Lightwe ightThemeManager 1458299336804   addons.manager  DEBUG   Provider finished startup: LightweightTh emeManager 1458299336805   addons.manager  DEBUG   Starting provider: GMPProvider 1458299336807   addons.manager  DEBUG   Registering shutdown blocker for GMPProv ider 1458299336807   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458299336807   addons.manager  DEBUG   Starting provider: PluginProvider 1458299336807   addons.manager  DEBUG   Registering shutdown blocker for PluginP rovider 1458299336808   addons.manager  DEBUG   Provider finished startup: PluginProvide r 1458299336808   addons.manager  DEBUG   Completed startup sequence 1458299339344   DeferredSave.extensions.json    DEBUG   Starting timer 1458299339376   DeferredSave.extensions.json    DEBUG   Starting write 1458299341209   DeferredSave.extensions.json    DEBUG   Write succeeded 1458299341209   addons.xpi-utils        DEBUG   XPI Database saved, setting sche ma version preference to 16 console.error:   [CustomizableUI]   Custom widget with id loop-button does not return a valid node  Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:06:42' System info: host: 'AINDDB71R4P1', ip: '10.228.5.128', os.name: 'Windows 7', os. arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: FirefoxDriver         at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.st art(NewProfileExtensionConnection.java:124)         at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.j ava:271)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.jav a:119)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:2 18)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:2 11)         at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:1 29)         ... 14 more Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: G       Make addon winreg-app-global:fiddlerhook@fiddler2.com visible 1458299336611   DeferredSave.extensions.json    DEBUG   Save changes 1458299336611   DeferredSave.extensions.json    DEBUG   Save changes 1458299336611   addons.xpi      DEBUG   Updating XPIState for {""id"":""fiddlerhook @fiddler2.com"",""syncGUID"":""hVrgAb0ThP44"",""location"":""winreg-app-global"",""version "":""2.4.4.5"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"": null,""optionsURL"":null,""optionsType"":null,""aboutURL"":""chrome://fiddlerhook/conte nt/about.xul"",""iconURL"":""chrome://fiddlerhook/content/fiddlerhook.png"",""icon64UR L"":null,""defaultLocale"":{""name"":""FiddlerHook"",""description"":""Integrate Fiddler i nto Firefox"",""creator"":""Telerik"",""homepageURL"":""https://www.fiddler2.com/r/?id=F IDDLERHOOKHELP""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"" :false,""descriptor"":""C:\Program Files (x86)\Fiddler2\FiddlerHook"",""installDat e"":1377685951608,""updateDate"":1377685951608,""applyBackgroundUpdates"":1,""bootstra p"":false,""size"":32976,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":fal se,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false ,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384 }"",""minVersion"":""3.0"",""maxVersion"":""28.*""}],""targetPlatforms"":[],""multiprocessCo mpatible"":false} 1458299336611   addons.xpi      DEBUG   New add-on {9F17B1A2-7317-49ef-BCB7-7BB4 7BDE10F8} installed in winreg-app-global 1458299336651   addons.xpi      WARN    Disabling foreign installed add-on {9F17 B1A2-7317-49ef-BCB7-7BB47BDE10F8} in winreg-app-global 1458299336652   DeferredSave.extensions.json    DEBUG   Save changes 1458299336652   addons.xpi      DEBUG   New add-on {D19CA586-DD6C-4a0a-96F8-1464 4F340D60} installed in winreg-app-global 1458299336652   addons.xpi      WARN    addMetadata: Add-on {D19CA586-DD6C-4a0a- 96F8-14644F340D60} is invalid: Error: Directory C:\Program Files (x86)\Common Fi les\McAfee\SystemCore does not contain a valid install manifest (resource://gre/ modules/addons/XPIProvider.jsm:1022) JS Stack trace: loadManifestFromDir@XPIProv ider.jsm:1022:1 < loadManifestFromFile@XPIProvider.jsm:1120:12 < addMetadata@XPI Provider.jsm:3174:22 < XPI_processFileChanges@XPIProvider.jsm:3452:23 < XPI_chec kForChanges@XPIProvider.jsm:3613:34 < XPI_startup@XPIProvider.jsm:2097:25 < call Provider@AddonManager.jsm:208:12 < _startProvider@AddonManager.jsm:794:5 < AMI_s tartup@AddonManager.jsm:965:9 < AMP_startup@AddonManager.jsm:2629:5 < AMC_observ e@addonManager.js:58:7 1458299336653   addons.xpi      WARN    Could not uninstall invalid item from lo cked install location 1458299336653   addons.xpi      DEBUG   Updating database with changes to instal led add-ons 1458299336653   addons.xpi-utils        DEBUG   Updating add-on states 1458299336708   addons.xpi-utils        DEBUG   Writing add-ons list 1458299336803   addons.manager  DEBUG   Registering shutdown blocker for XPIProv ider 1458299336804   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458299336804   addons.manager  DEBUG   Starting provider: LightweightThemeManag er 1458299336804   addons.manager  DEBUG   Registering shutdown blocker for Lightwe ightThemeManager 1458299336804   addons.manager  DEBUG   Provider finished startup: LightweightTh emeManager 1458299336805   addons.manager  DEBUG   Starting provider: GMPProvider 1458299336807   addons.manager  DEBUG   Registering shutdown blocker for GMPProv ider 1458299336807   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458299336807   addons.manager  DEBUG   Starting provider: PluginProvider 1458299336807   addons.manager  DEBUG   Registering shutdown blocker for PluginP rovider 1458299336808   addons.manager  DEBUG   Provider finished startup: PluginProvide r 1458299336808   addons.manager  DEBUG   Completed startup sequence 1458299339344   DeferredSave.extensions.json    DEBUG   Starting timer 1458299339376   DeferredSave.extensions.json    DEBUG   Starting write 1458299341209   DeferredSave.extensions.json    DEBUG   Write succeeded 1458299341209   addons.xpi-utils        DEBUG   XPI Database saved, setting sche ma version preference to 16 console.error:   [CustomizableUI]   Custom widget with id loop-button does not return a valid node  ```     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.st ```  art(NewProfileExtensionConnection.java:112)         ... 19 more 16:39:46.690 WARN - Exception: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: G       Make addon winreg-app-global:fiddlerhook@fiddler2.com visible 1458299336611   DeferredSave.extensions.json    DEBUG   Save changes 1458299336611   DeferredSave.extensions.json    DEBUG   Save changes 1458299336611   addons.xpi      DEBUG   Updating XPIState for {""id"":""fiddlerhook @fiddler2.com"",""syncGUID"":""hVrgAb0ThP44"",""location"":""winreg-app-global"",""version "":""2.4.4.5"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"": null,""optionsURL"":null,""optionsType"":null,""aboutURL"":""chrome://fiddlerhook/conte nt/about.xul"",""iconURL"":""chrome://fiddlerhook/content/fiddlerhook.png"",""icon64UR L"":null,""defaultLocale"":{""name"":""FiddlerHook"",""description"":""Integrate Fiddler i nto Firefox"",""creator"":""Telerik"",""homepageURL"":""https://www.fiddler2.com/r/?id=F IDDLERHOOKHELP""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"" :false,""descriptor"":""C:\Program Files (x86)\Fiddler2\FiddlerHook"",""installDat e"":1377685951608,""updateDate"":1377685951608,""applyBackgroundUpdates"":1,""bootstra p"":false,""size"":32976,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":fal se,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false ,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384 }"",""minVersion"":""3.0"",""maxVersion"":""28.*""}],""targetPlatforms"":[],""multiprocessCo mpatible"":false} 1458299336611   addons.xpi      DEBUG   New add-on {9F17B1A2-7317-49ef-BCB7-7BB4 7BDE10F8} installed in winreg-app-global 1458299336651   addons.xpi      WARN    Disabling foreign installed add-on {9F17 B1A2-7317-49ef-BCB7-7BB47BDE10F8} in winreg-app-global 1458299336652   DeferredSave.extensions.json    DEBUG   Save changes 1458299336652   addons.xpi      DEBUG   New add-on {D19CA586-DD6C-4a0a-96F8-1464 4F340D60} installed in winreg-app-global 1458299336652   addons.xpi      WARN    addMetadata: Add-on {D19CA586-DD6C-4a0a- 96F8-14644F340D60} is invalid: Error: Directory C:\Program Files (x86)\Common Fi les\McAfee\SystemCore does not contain a valid install manifest (resource://gre/ modules/addons/XPIProvider.jsm:1022) JS Stack trace: loadManifestFromDir@XPIProv ider.jsm:1022:1 < loadManifestFromFile@XPIProvider.jsm:1120:12 < addMetadata@XPI Provider.jsm:3174:22 < XPI_processFileChanges@XPIProvider.jsm:3452:23 < XPI_chec kForChanges@XPIProvider.jsm:3613:34 < XPI_startup@XPIProvider.jsm:2097:25 < call Provider@AddonManager.jsm:208:12 < _startProvider@AddonManager.jsm:794:5 < AMI_s tartup@AddonManager.jsm:965:9 < AMP_startup@AddonManager.jsm:2629:5 < AMC_observ e@addonManager.js:58:7 1458299336653   addons.xpi      WARN    Could not uninstall invalid item from lo cked install location 1458299336653   addons.xpi      DEBUG   Updating database with changes to instal led add-ons 1458299336653   addons.xpi-utils        DEBUG   Updating add-on states 1458299336708   addons.xpi-utils        DEBUG   Writing add-ons list 1458299336803   addons.manager  DEBUG   Registering shutdown blocker for XPIProv ider 1458299336804   addons.manager  DEBUG   Provider finished startup: XPIProvider 1458299336804   addons.manager  DEBUG   Starting provider: LightweightThemeManag er 1458299336804   addons.manager  DEBUG   Registering shutdown blocker for Lightwe ightThemeManager 1458299336804   addons.manager  DEBUG   Provider finished startup: LightweightTh emeManager 1458299336805   addons.manager  DEBUG   Starting provider: GMPProvider 1458299336807   addons.manager  DEBUG   Registering shutdown blocker for GMPProv ider 1458299336807   addons.manager  DEBUG   Provider finished startup: GMPProvider 1458299336807   addons.manager  DEBUG   Starting provider: PluginProvider 1458299336807   addons.manager  DEBUG   Registering shutdown blocker for PluginP rovider 1458299336808   addons.manager  DEBUG   Provider finished startup: PluginProvide r 1458299336808   addons.manager  DEBUG   Completed startup sequence 1458299339344   DeferredSave.extensions.json    DEBUG   Starting timer 1458299339376   DeferredSave.extensions.json    DEBUG   Starting write 1458299341209   DeferredSave.extensions.json    DEBUG   Write succeeded 1458299341209   addons.xpi-utils        DEBUG   XPI Database saved, setting sche ma version preference to 16 console.error:   [CustomizableUI]   Custom widget with id loop-button does not return a valid node ## Steps to reproduce -  Launch a simple FirefoxDriver using selenium 2.52.0 and FF 38.6.1 version..","closed","","bhavicool","2016-03-18T11:12:29Z","2019-08-20T08:09:52Z"
"","1859","IEBrowser hangs indefinitely when RequireWindowFocus sets true","## Meta -  OS:  Windows 7 and Windows 8.1 Selenium Version: 2.49 Browser:  Browser Version:  ## Expected Behavior -  When user switches focus from the Selenium launched IE browser and returns back to the browser again, Browser shouldn't be hanged. ## Actual Behavior -  When user switches focus from the Selenium launched IE browser, Browser Hanged indefinitely even though user returns back to the browser again. Browser is completely unresponsive. It just hanged.  Snippet from IEDriver Server log file: T 2016-03-22 13:00:53:844 IECommandExecutor.cpp(569) Entering IECommandExecutor::GetCurrentBrowser T 2016-03-22 13:00:53:844 IECommandExecutor.cpp(575) Entering IECommandExecutor::GetManagedBrowser T 2016-03-22 13:00:53:844 InputManager.cpp(59) Entering InputManager::PerformInputSequence **D 2016-03-22 13:00:53:844 InputManager.cpp(80) Mutex acquired for user interaction.** T 2016-03-22 13:00:53:844 InputManager.cpp(232) Entering InputManager::SetFocusToBrowser T 2016-03-22 13:00:53:844 Browser.cpp(175) Entering Browser::GetWindowHandle T 2016-03-22 13:00:53:844 Browser.cpp(380) Entering Browser::GetTopLevelWindowHandle  ## Steps to reproduce - 1. Create IE Driver instance as follows...    System.setProperty(""webdriver.ie.driver"",WorkingEnvironment.getWebdriverIEServerEXEPath());    DesiredCapabilities ieCapabilities = DesiredCapabilities.internetExplorer();    **ieCapabilities.setCapability(InternetExplorerDriver.REQUIRE_WINDOW_FOCUS, true);**    ieCapabilities.setCapability(""enablePersistentHover"", false);    ieCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);        ```    if (ignoreCertificateErrors) {            ieCapabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);    }    ```        InternetExplorerDriverService.Builder service = new  InternetExplorerDriverService.Builder();        service = service.withLogLevel(InternetExplorerDriverLogLevel.TRACE);        service = service.withLogFile(new File(""c:\logs\selenium.log""));      webDriver = new InternetExplorerDriver(service.build(), ieCapabilities);  [IEDriverServerLogfile.txt](https://github.com/SeleniumHQ/selenium/files/183682/IEDriverServerLogfile.txt)","closed","D-IE,","Prasannajnaeyulu","2016-03-22T07:56:18Z","2019-10-29T18:45:22Z"
"","2187","MoveTargetOutOfBoundsException: Offset within element cannot be scrolled into view when scrolled for element","## Meta -  OS:  Windows 7 and MAC 10.10    Selenium Version: 2.52.0,  2.53.0    Browser:  Firefox only    Browser Version:  46.0.1    ## Expected Behavior -  Scroll should work ## Actual Behavior - Getting error while scrolling to element  org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: Offset within element cannot be scrolled into view: (309, 752): [object HTMLDivElement] Command duration or timeout: 16 milliseconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'Pradeepy', ip: '192.168.10.0', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 596b1121-4c94-41ad-9679-1f755fe95322 ## Steps to reproduce -   1. Open web application which has droppable elements. {Page has scroll bar visible} 2. Go to the top and select an element and scroll down and drop element to bottom.  I am using code; WebElement DragElement = Driver.findElement(By.xpath(""SomeXPATH""));  if(DragElement.isDisplayed){     int yPos = dropElement.getLocation().getY();  ```         ((JavascriptExecutor)Driver).executeScript(""window.scrollTo(0, ""+yPos+"");""); ```  }             Actions builder = new Actions(Driver);           builder.moveToElement(DragElement,10, 10)         .clickAndHold()         .build()         .perform();         Thread.sleep(1000);  WebElement dropElement = Driver.findElement(By.xpath(""SomeXPATH"")); if(dropElement.isDisplayed()){     int yPos = dropElement.getLocation().getY(); ((JavascriptExecutor)seleniumDriver).executeScript(""window.scrollTo(0, ""+yPos+"");""); //Also used ((JavascriptExecutor) Driver).executeScript(""arguments[0].scrollIntoView(true);"", dropElement );  }       builder.moveToElement(dropElement,309,752)         .release()         .build()         .perform();  Everything works fine on Chrome.","closed","","pradiipyadav","2016-05-31T14:19:11Z","2019-08-19T23:09:38Z"
"","2402","Selenium 3 : Jar help is mission on the command prompt console","## Meta -  OS:  Windows 7 64bit Selenium Version:  Selenium 3 ## Expected Behavior -  the following command should provide the help on the command prompt console  ""java -jar selenium-server-standalone-latest.jar -h""  Help Ex:  -port : the port number the selenium server should use    (default 4444)  -timeout : an integer number of seconds we should allow a    client to be idle  -browserTimeout : an integer number of seconds a browser is    allowed to hang  -interactive: puts you into interactive mode.  See the tutorial for    more details etc... ## Actual Behavior -  the above command throws the following error  ""Unknown role: NOT_GRID"" ## Steps to reproduce -  Run the following command on the windows command prompt  ""java -jar selenium-server-standalone-latest.jar -h""","closed","","YatheeshKumar","2016-06-29T07:45:05Z","2019-08-20T00:09:48Z"
"","2045","Not able to handle Multiple windows in IE using Selenium Webdriver","## Meta -  OS:  windows 7 64 BIt    Selenium Version:  2.53    Browser:  IE    Browser Version:  11   ## Expected Behavior -Using getwindowhandles() we should able to get all the windows opened and able to switch to child window ## Actual Behavior -Using getwindowhandles() returning only one window (only original window) ## Steps to reproduce -We have a scenario where Clicking on button it will open another  window, i want to perform some action on newly opened window  using Selenium Web driver  but somehow IE is not able to find that and driver.getWindowHandles() is returning a set with size 1 (only original window). Note :This issue is not observing in Chrome","closed","","Ajantasy","2016-05-03T10:56:06Z","2019-08-20T07:09:37Z"
"","1872","driver.quit does not kill IE","## Meta -  OS:  Windows 7  Selenium Version: 2.52.0 Browser: IE11 Browser Version: 11.0.9600.18163 ## Expected Behavior -  driver.quit should close IE ## Actual Behavior -  All other browsers behave as expected upon using driver.quit except IE ## Steps to reproduce -  using System; using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.IE; using OpenQA.Selenium.Chrome; using System.Collections.ObjectModel;  namespace UnitTestProject1 {     [TestClass]     public class diffbrowser     {         [TestMethod]         public void TestInFirefox()         {             IWebDriver driver = new FirefoxDriver();             driver.Navigate().GoToUrl(""http://google.com"");             System.Threading.Thread.Sleep(1000);             driver.Quit();         }         [TestMethod]         public void TestInChrome()         {             IWebDriver driver = new ChromeDriver(""C:\Users\myname\Downloads\chromedriver_win32"");             driver.Navigate().GoToUrl(""http://google.com"");             System.Threading.Thread.Sleep(1000);             driver.Quit();         }         [TestMethod]         public void TestinIE()         {             IWebDriver driver = new InternetExplorerDriver(""C:\Users\myname\Downloads\IEDriverServer_x64_2.53.0"");             driver.Navigate().GoToUrl(""http:/google.com"");             System.Threading.Thread.Sleep(10000);             driver.Quit();                    }     } }","closed","","punams","2016-03-24T06:50:14Z","2019-08-19T09:09:37Z"
"","2571","ParameterException when starting selenium-server-standalone-3.0.0-beta2.jar via command line","## Meta -  OS:  Windows 7 Selenium Version: selenium-server-standalone-3.0.0-beta2.jar ## Expected Behavior -  I want to start my local standalone server as I did with previous versions with selenium-server-standalone (2.xx) I did this via the command line `java -jar selenium-server-standalone-3.0.0-beta2.jar -Dwebdriver.chrome.driver=chromedriver.exe` ## Actual Behavior -  `Exception in thread ""main"" com.beust.jcommander.ParameterException: Unknown option: -Dwebdriver.chrome.driver=chromedriver.exe         at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)         at com.beust.jcommander.JCommander.parse(JCommander.java:282)         at com.beust.jcommander.JCommander.parse(JCommander.java:265)         at com.beust.jcommander.JCommander.(JCommander.java:210)         at org.openqa.grid.selenium.GridLauncherV3$1.setConfiguration(GridLauncherV3.java:202)         at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:130)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:67) ` ## Steps to reproduce -  Start selenium-server-standalone with Parameter -Dwebdriver.chrome.driver  Is there any documentation on this how you start the standalone driver version 3 via command line and the parameters for the different drivers?   Thank you.","closed","","martinzehetmeier1078","2016-08-04T09:16:33Z","2019-08-17T02:09:45Z"
"","2302","Mocha BDD wrapping incorrectly for it.only","## Meta -  OS:  Windows 7 Selenium Version: 2.53.2  Mocha version : 2.5.3 ## Expected Behavior -  ""it.only"" function inside [javascript/node/selenium-webdriver/testing/index.js](https://github.com/SeleniumHQ/selenium/blob/ede98def1f85600ec120536bd1f36f244a331b86/javascript/node/selenium-webdriver/testing/index.js) should correctly wrapped for asynchronous code.  ``` exports.it = wrapped(global.it); exports.iit = exports.it.only = wrapped(global.it.only); ``` ## Actual Behavior -  Since mocha V2.4.1 and this [commit](https://github.com/mochajs/mocha/commit/08bf74d8440b811e42bf4b8150a4977a05472c9a) ""it.only"" function is not correctly wrapped because it call original ""it"" mocha function and no more ""it"" wrapped function. So, test is not run in asynchronous mode.  ``` context.it.only = function(title, fn) {    var test = it(title, fn); // => Since mocha 2.4.1 - use original mocha ""it"" function    var reString = '^' + escapeRe(test.fullTitle()) + '$';    mocha.grep(new RegExp(reString));    return test; } ```  mocha issue : [https://github.com/mochajs/mocha/issues/2157](https://github.com/mochajs/mocha/issues/2157#issuecomment-224475198)  Now using own `it.only` function is necessary instead of wrapping.","closed","C-nodejs,","noisette44","2016-06-16T14:27:57Z","2019-08-20T01:09:54Z"
"","2042","verifySelectedLabel and verifySelectOptions omit Values when exported to Python","## Meta -  OS:  Windows 7 Selenium Version:  IDE 2.0.1 Browser:  Firefox  Browser Version:  45.0.2  ## Expected Behavior -  Then the following IDE code is entered:  ```      verifySelectedLabel     id=panelid     MyStuff             verifySelectOptions     id=panelid     item1,item2     ```    Then that code is Exported via the ""Python 2 / unittest / webdriver"" option, expected results are:    (the appropriate python-compatable command) ## Actual Behavior -  > ``` >     # ERROR: Caught exception [ERROR: Unsupported command [getSelectedLabel | id=panelid | ]] >     # ERROR: Caught exception [ERROR: Unsupported command [getSelectOptions | id=panelid | ]] > ``` ## Steps to reproduce - 1. Type in the two commands above 2. File 3. Export Test Case As... 4. Python 2 / unittest / webdriver 5. (send to appropriate filename, then display in editor)  Note that the Values in the Selenese code above have been omitted in the exported python code.  One of two options would be better: 1.  Export this to operational python code 2.  Include the Values in the error messages. Any suggestions on how we might achieve one of those two sought results?","closed","C-ide,","smithnuc","2016-05-03T00:45:07Z","2019-08-17T17:09:37Z"
"","2609","Firefoxdriver: Window/current/position did not match a known command","## Meta -  OS:  Windows 7 Selenium Version:  3.0 Beta 2 Browser:  Firefox Browser Version:  48.0 ## Expected Behavior -  The driver should return a window position and size when driver.Manage().Window.Position is called. ## Actual Behavior -  Exception is raised: driver.Manage().Window GET /session/e982ecfb-6557-461a-a68f-f00081fe8fe8/window/current/position did not match a known command ## Steps to reproduce -  var driver = new FirefoxDriver(new FirefoxOptions()); var position = driver.Manage().Window.Position;","closed","D-marionette,","datatooldev","2016-08-12T20:32:04Z","2019-08-19T14:09:40Z"
"","2652","While taking screenshot, only part of the viewport is captured and remaining portion remains white.","## Meta -  OS:  Windows 7 Selenium Version:  3.0 (Java - Webdriver)  Browser:   Internet Explorer 11 ## Expected Behavior -  Selenium should capture the screenshot gracefully. ## Actual Behavior -  While taking screenshot, only part of the viewport is captured and remaining portion remains white. But this is intermittent. ## Steps to reproduce -  Take screenshot on any webpage.","closed","D-IE,","552366","2016-08-23T10:50:43Z","2019-08-16T23:09:45Z"
"","2532","Occasionally it hangs exact 1 hour to wait http response from IEDriverServer","## Meta -  OS:  Windows 7 Selenium Version:  2.53.1 Browser:  Internet Explorer Browser Version:  9, 10, 11 ## Expected Behavior - We expect test running continously without any hang ## Actual Behavior - Occasionally it hangs exact 1 hour to wait http response from IEDriverServer ## Steps to reproduce - we are trying to run serveral test scripts, and it will cost 50 minustes to finish, but sometime it costs more than 1 or 2 hour to finish it, we found that test execution was hang up for exact 1 hour after clicking some element, and it's not easy to reporudce every time.  I've set the timeout to 30 seconds by explicit waiting for each html actions: wait = new WebDriverWait(driver,30, 500)                 .ignoring(StaleElementReferenceException.class)                 .ignoring(NoSuchElementException.class)                 .ignoring(UnreachableBrowserException.class)                 .ignoring(InvalidElementStateException.class);  Here is our test log: (you will see there is 1 hour between clicking search link and next action) 14:49:19.170 [pool-8-thread-1] DEBUG org.yiwan.webcore.web.InternetExplorerDriverWrapper - clicking search instrument (ag.frame.search) WebButton 14:49:22.977 [pool-8-thread-1] DEBUG org.yiwan.webcore.web.InternetExplorerDriverWrapper - clicking search instrument result (ag.frame.link) Link 15:49:26.867 [pool-8-thread-1] DEBUG org.yiwan.webcore.web.InternetExplorerDriverWrapper - switching to default content  Here is the debug log of selenium: (we found it returns response after exact 1 hour) 14:49:23.148 [Forwarding isElementEnabled on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.impl.execchain.MainClientExec - Connection can be kept alive indefinitely 14:49:23.148 [Forwarding isElementEnabled on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager - Connection [id: 105][route: {}->http://172.20.30.107:4444] can be kept alive indefinitely 14:49:23.148 [Forwarding isElementEnabled on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager - Connection released: [id: 105][route: {}->http://172.20.30.107:4444][total kept alive: 1; route allocated: 1 of 2000; total allocated: 1 of 2000] 14:49:23.148 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.client.protocol.RequestAddCookies - CookieSpec selected: default 14:49:23.148 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.client.protocol.RequestAuthCache - Auth cache not set in the context 14:49:23.148 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager - Connection request: [route: {}->http://172.20.30.107:4444][total kept alive: 1; route allocated: 1 of 2000; total allocated: 1 of 2000] 14:49:23.148 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.impl.conn.PoolingHttpClientConnectionManager - Connection leased: [id: 105][route: {}->http://172.20.30.107:4444][total kept alive: 0; route allocated: 1 of 2000; total allocated: 1 of 2000] 14:49:23.148 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.impl.execchain.MainClientExec - Stale connection check 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 > POST /wd/hub/session/dc34c937-f105-4854-b362-c15ec61ad434/element/129/click HTTP/1.1 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.headers - http-outgoing-105 >> Content-Type: application/json; charset=utf-8 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.headers - http-outgoing-105 >> Content-Length: 12 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.headers - http-outgoing-105 >> Host: 172.20.30.107:4444 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.headers - http-outgoing-105 >> Connection: Keep-Alive 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.headers - http-outgoing-105 >> User-Agent: Apache-HttpClient/4.5.2 (Java/1.7.0_17) 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.headers - http-outgoing-105 >> Accept-Encoding: gzip,deflate 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""POST /wd/hub/session/dc34c937-f105-4854-b362-c15ec61ad434/element/129/click HTTP/1.1[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""Content-Type: application/json; charset=utf-8[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""Content-Length: 12[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""Host: 172.20.30.107:4444[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""Connection: Keep-Alive[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""User-Agent: Apache-HttpClient/4.5.2 (Java/1.7.0_17)[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""[\r][\n]"" 14:49:23.164 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105 >> ""{""id"":""129""}"" 14:49:23.616 [LittleProxy-105-ProxyToServerWorker-7] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x38aa975a, L:/172.20.30.79:57340 - R:urs.microsoft.com/191.232.139.180:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 14:49:23.632 [LittleProxy-105-ProxyToServerWorker-0] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x1a301f20, L:/172.20.30.79:57341 - R:urs.microsoft.com/191.232.139.180:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 14:49:23.663 [LittleProxy-105-ClientToProxyWorker-4] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xd73d17bb, L:/172.20.30.79:57122 - R:/172.20.30.107:52849] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 14:49:23.663 [LittleProxy-105-ClientToProxyWorker-5] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xa5742613, L:/172.20.30.79:57122 - R:/172.20.30.107:52850] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 14:49:27.766 [LittleProxy-105-ProxyToServerWorker-2] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x8afd35f8, L:/172.20.30.79:57345 - R:urs.microsoft.com/191.232.139.180:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 14:49:27.797 [LittleProxy-105-ClientToProxyWorker-7] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x00b88154, L:/172.20.30.79:57122 - R:/172.20.30.107:52864] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:29:04.653 [LittleProxy-105-ProxyToServerWorker-5] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x984c1131, L:/172.20.30.79:58592 - R:urs.microsoft.com/40.68.222.212:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:29:04.653 [LittleProxy-105-ProxyToServerWorker-4] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xa722efea, L:/172.20.30.79:58591 - R:urs.microsoft.com/40.68.222.212:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:29:05.449 [LittleProxy-105-ClientToProxyWorker-4] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xeaf04e36, L:/172.20.30.79:57122 - R:/172.20.30.107:56442] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:29:05.449 [LittleProxy-105-ClientToProxyWorker-3] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xfd9a3d84, L:/172.20.30.79:57122 - R:/172.20.30.107:56441] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:46:26.261 [LittleProxy-105-ProxyToServerWorker-6] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xbd1ca7f5, L:/172.20.30.79:59014 - R:r20swj13mr.microsoft.com/93.184.221.200:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:46:28.055 [LittleProxy-105-ClientToProxyWorker-5] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xfc0a21f0, L:/172.20.30.79:57122 - R:/172.20.30.107:58009] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:46:28.960 [LittleProxy-105-ProxyToServerWorker-7] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x8f3ca740, L:/172.20.30.79:59015 - R:r20swj13mr.microsoft.com/93.184.221.200:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:46:28.991 [LittleProxy-105-ClientToProxyWorker-6] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x31cded91, L:/172.20.30.79:57122 - R:/172.20.30.107:58013] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:47:03.840 [LittleProxy-105-ProxyToServerWorker-0] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x3edbcb26, L:/172.20.30.79:59028 - R:iecvlist.microsoft.com/93.184.221.200:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:47:04.746 [LittleProxy-105-ClientToProxyWorker-7] DEBUG io.netty.handler.ssl.SslHandler - [id: 0xb577848e, L:/172.20.30.79:57122 - R:/172.20.30.107:58068] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:47:05.700 [LittleProxy-105-ProxyToServerWorker-1] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x65d1f7a1, L:/172.20.30.79:59031 - R:iecvlist.microsoft.com/93.184.221.200:443] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:47:05.731 [LittleProxy-105-ClientToProxyWorker-0] DEBUG io.netty.handler.ssl.SslHandler - [id: 0x3bb81652, L:/172.20.30.79:57122 - R:/172.20.30.107:58072] HANDSHAKEN: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 15:49:26.477 [Forwarding clickElement on session dc34c937-f105-4854-b362-c15ec61ad434 to remote] DEBUG org.apache.http.wire - http-outgoing-105","closed","D-IE,","tcwmj","2016-07-27T10:00:01Z","2019-08-16T16:09:44Z"
"","2513","IE hangs when switching windows","## Meta -  OS:  Windows 7 Selenium Version:  2.53.1 Browser:  Internet Explorer Browser Version:  11.0.9600.18349 ## Expected Behavior -  The test consists of 3 pages.  Step 1: The first page gets loaded and a button click opens page 2 in a new browser window.  Step 2: The tests checks if the correct pages are loaded in each window. Step 3: After a while, a page 3 gets loaded in the first window.  ## Actual Behavior -  When executing step 3, the whole test hangs forever. Visually, every page is loaded correctly.  No problems in chrome and FF, its only with IE.  In a small, isolated example, Step 3 gets executed successfully: [Selenium_IEWebDriver_Bug.zip](https://github.com/SeleniumHQ/selenium/files/378448/Selenium_IEWebDriver_Bug.zip)  But in the real app, which runs with AngularJS, and the pageload of step 3 is initiated by a websocket event, the browser hangs forever.  When step 3 fails, the following log entries can be found in IEWebDrivers logfile:  I 2016-07-22 16:51:43:936 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-07-22 16:51:43:973 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-07-22 16:51:44:088 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-07-22 16:51:44:214 VariantUtilities.cpp(179) Unknown type of dispatch is found in result, assuming IHTMLElement I 2016-07-22 16:51:44:225 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-07-22 16:51:44:267 Browser.cpp(124) No child frame focus. Focus is on top-level frame W 2016-07-22 16:51:44:461 Browser.cpp(256) Unable to get window name, IHTMLWindow2::get_name failed or returned a NULL value I 2016-07-22 16:51:44:630 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-07-22 16:51:44:744 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-07-22 16:51:44:884 VariantUtilities.cpp(179) Unknown type of dispatch is found in result, assuming IHTMLElement I 2016-07-22 16:51:44:910 Browser.cpp(124) No child frame focus. Focus is on top-level frame W 2016-07-22 16:51:45:131 Browser.cpp(256) Unable to get window name, IHTMLWindow2::get_name failed or returned a NULL value ## Steps to reproduce -  I'm currently not able to reproduce it in an isolated example.","closed","D-IE,","BBinottoADC","2016-07-22T14:54:33Z","2019-08-14T05:09:47Z"
"","2560","Firefox / JQuery-layout: Button doesn't receive click","## Meta -  OS:  Windows 7 Selenium Version:  2.53.1 Browser:  Firefox Browser Version:  45.2.0 ## Expected Behavior  The click() method call results in triggering the onclick event of the button. ## Actual Behavior  The onclick event is not triggered ## Steps to reproduce -  I created a sample page (https://olibutzki.github.io/selenium-jquery-layout-issue/sample.html) and a Maven project including a JUnit test to reproduce the behaviour: https://github.com/OLibutzki/selenium-jquery-layout-issue  Please read the [README.md](https://github.com/OLibutzki/selenium-jquery-layout-issue/blob/master/README.md) of the GitHub project for further information.","closed","D-firefox,","OLibutzki","2016-08-03T06:07:13Z","2019-08-16T12:09:48Z"
"","2081","windows in IE","## Meta -  OS:  windows 7 Selenium Version:  2.53.0 Browser:  IE Browser Version:  11.0.9600.18282 (64bit) ## Expected Behavior -  When opening new window through click on page the new window should be opened and switched to and manipulated (with findElement) or closed. ## Actual Behavior -  New window is opened but can't be correctly switched to and after a while it's not managed by selenium and can't be manipulated nor closed. ## Steps to reproduce -  setup simple project with selenium 2.53 library in path and start IE driver java -jar selenium-server-standalone-2.53.0.jar -Dwebdriver.ie.driver=C:\IEDriverServer.exe  create file c:\x.html and c:\y.html as in attachment  start these 2 example tests from attachment file   and see comments in test  full exception is also in attachment  attachment: [files.zip](https://github.com/SeleniumHQ/selenium/files/258765/files.zip)  I checked also other ways to create new window or tab (ctrl+N, ctrl+T) and I couldn't manipulate them anyway.","closed","D-IE,","mkobylan","2016-05-11T07:36:49Z","2019-08-18T18:09:58Z"
"","2580","command line server for the ie driver has stopped working","## Meta -  OS:  Windows 7 Selenium Version:  2.53. Browser:  IE  Browser Version:  9 and also tried in 11 Expected Behavior - Should accept certificates and proceed navigation Actual Behavior - Unable to proceed further automation with IE  In my automation i navigate to site ""https://testuat.linenhouse.com.au/"" and the site opens in normal context only. When i click on Sign In Image and there is a 'Join Now', then when i click on here the page navigates to ""https"" context. I am attaching the screenshot of the error i am getting.  I tried two to handle certificates:  ```  DesiredCapabilities cap=DesiredCapabilities.internetExplorer(); //DesiredCapabilities cap =new DesiredCapabilities(); Tried this also but didnt help cap.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); System.setProperty(""webdriver.ie.driver"",""IE driver path""); WebDriver driver=newInternetExplorerDriver(cap); ```  2nd Option is: `driver.navigate().to(""javascript:document.getElementById('overridelink').click()"");` ![ie error](https://cloud.githubusercontent.com/assets/10852370/17469245/cc263784-5d4d-11e6-835d-f2454b5041a1.png)","closed","D-IE,","udayanem","2016-08-08T04:22:35Z","2019-10-29T18:45:16Z"
"","1996","Firefox 38.7 does not open in selenium","## Meta -  OS:  windows 7 Selenium Version:  2.53 Browser:  Firefox Browser Version:  38.7 ## Expected Behavior - Firefox 38.7 should launch using selenium webdriver ## Actual Behavior - Throws Exception ## Steps to reproduce -  java.lang.reflect.InvocationTargetException     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at com.aonhewitt.aft.keyword.InvokeKeywordForExecution.performAction(InvokeKeywordForExecution.java:50)     at com.aonhewitt.aft.drivers.ExcelDriver.handleReusablePageComponent(ExcelDriver.java:2122)     at com.aonhewitt.aft.drivers.ExcelDriver.TestCaseProcessor(ExcelDriver.java:522)     at com.aonhewitt.aft.drivers.ExcelDriver.Executor(ExcelDriver.java:202)     at com.aonhewitt.aft.mainClass.AFTMobileAutomation.AFTExecutor(AFTMobileAutomation.java:68)     at com.aonhewitt.aft.mainClass.AFTMobileAutomation.main(AFTMobileAutomation.java:21) Caused by: java.lang.NoClassDefFoundError: org/openqa/selenium/remote/internal/CircularOutputStream     at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:60)     at org.openqa.selenium.firefox.FirefoxBinary.(FirefoxBinary.java:56)     at org.openqa.selenium.firefox.FirefoxDriver.getBinary(FirefoxDriver.java:208)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:133)     at com.aonhewitt.aft.keyword.UseSeleniumWebDriver.Launch(UseSeleniumWebDriver.java:920)     ... 10 more Caused by: java.lang.ClassNotFoundException: org.openqa.selenium.remote.internal.CircularOutputStream     at java.net.URLClassLoader$1.run(Unknown Source)     at java.net.URLClassLoader$1.run(Unknown Source)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)","closed","","SumathiChn","2016-04-21T05:17:02Z","2019-08-20T08:09:35Z"
"","2588","RemoteWebDriver: missing dispose for StartSession timeouts","## Meta -  OS:  Windows 7 Selenium Version:  2.49.0 Browser:  PhantomJS  The constructor RemoteWebDriver starts a new session (StartSession) executing DriverCommand.NewSession, which could result in DriverService.InitializationTimeout (20 sec. ) exception. In this case programmers do not have the ability to dispose the created process for loading the webdriver. The process exists forever. ## Expected Behavior -  Calling PhantomJSDriver contructor returns an object, where user can check initialization status and finally can do a dispose. Similar: all other WebDriver constructors. ## Actual Behavior -  DriverService.Start throws an Exception when WaitForServiceInitialization fails and access to DriverService.driverServiceProcess is lost. Thus user can not dispose the created webdriver process. ## Steps to reproduce -  Very high load (CPU+RAM) on host, then call  var res = new PhantomJSDriver(myPath);","closed","C-dotnet,","DirkRichter","2016-08-09T15:30:00Z","2019-08-14T05:09:52Z"
"","2426","Nothing happens when execute script window.scrollTo in PhantomJS","## Meta -  OS:  Windows 7 Selenium Version:  2.48.0.0 Browser:  PhantomJS Browser Version:  2.1.1 ## Expected Behavior -  Page scrolled to specific position ## Actual Behavior -  Nothing happens ## Steps to reproduce -  Open a page with vertical scroll bar in PhantomJS, then execute below script: `window.scrollTo(0, 300);`","closed","","zhaihm","2016-07-05T06:26:50Z","2019-08-19T23:10:00Z"
"","2608","Selenium getText is normalizing white space","## Meta -  OS:  Windows 7 Selenium Version:  2.46 Browser:  Internet Explorer  Browser Version:   11.0.9600.18349 ## Expected Behavior -  `getText` should not normalize spaces. For example, given a `WebElement` that has a text of ""Hello  World"", `getText` should return ""Hello  World"" ## Actual Behavior -  `getText` is not normalizing white spaces. The return value becomes ""Hello World"" ## Steps to reproduce - 1. Create an HTML Page with a span tag of simple text ""Hello  World"" 2. Using Selenium, access the `WebElement` and do `getText()` 3. Observe that the value is changed to ""Hello World""","closed","","leolorenzoluis","2016-08-12T15:10:22Z","2019-08-16T13:09:37Z"
"","1991","Firefox 38.7 does not open in selenium","## Meta -  OS:  Windows 7 Selenium Version:  2.44 Browser:  Firefox Browser Version:  38.7 ## Expected Behavior - Selenium webdriver needs to launch the browser ## Actual Behavior - selenium webdriver does not launch the browser ## Steps to reproduce - Error message mentioned below.  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ing provider: PluginProvider 1461130843741   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1461130843742   addons.manager  DEBUG   Provider finished startup: PluginProvider 1461130843742   addons.manager  DEBUG   Completed startup sequence 2016-04-20 11:10:52: stackwalker.cc:125: INFO: Couldn't load symbols for: wntdll.pdb|CBFD5777D96446E6B2A2062BB8C5EE832 2016-04-20 11:10:52: stackwalker.cc:125: INFO: Couldn't load symbols for: wkernelbase.pdb|E7143382C83F4B9FAD4A421DEFE4D14A1 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x58347c 2016-04-20 11:10:52: stackwalker.cc:125: INFO: Couldn't load symbols for: DgApi.pdb|089DDCB6C5B84B028F4E7D2EB35DE1171 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x5833c8 2016-04-20 11:10:52: stackwalker.cc:125: INFO: Couldn't load symbols for: wkernel32.pdb|85B61A7739C74C638917100792BA161A2 2016-04-20 11:10:52: stackwalker.cc:125: INFO: Couldn't load symbols for: xul.pdb|524D32682A1B4B42800B9944CC68A3312 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x5340ce 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0xebc030f 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x240fd93 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0xeba02a7 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x240fd93 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0xeb9fd47 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x530900 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x3ee9167c 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x3 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x4eb74b8 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x4eb74e8 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0xe424190 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x5 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1fb6a8 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x4eb74e8 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x2cf1b00 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x2c615c0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0xc 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x2b9 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x2c615c0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0xdc1c460 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1fb718 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1fe4d8 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1fe398 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1fe4d8 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x2c615c0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x2c615c0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1fb618 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x0 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x1 2016-04-20 11:10:52: basic_code_modules.cc:88: INFO: No module at 0x4e5 JavaScript error: jar:file:///C:/Program%20Files%20(x86)/Mozilla%20Firefox/browser/omni.ja!/components/nsBrowserGlue.js, line 1703: NS_ERROR_FAILURE: Component returned failure code: 0x80004005 (NS_ERROR_FAILURE) [nsIPrefBranch.getComplexValue]  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:122) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:276) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:221) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:133) at com.aonhewitt.aft.keyword.UseSeleniumWebDriver.Launch(UseSeleniumWebDriver.java:920) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at com.aonhewitt.aft.keyword.InvokeKeywordForExecution.performAction(InvokeKeywordForExecution.java:50) at com.aonhewitt.aft.drivers.ExcelDriver.handleReusablePageComponent(ExcelDriver.java:2122) at com.aonhewitt.aft.drivers.ExcelDriver.TestCaseProcessor(ExcelDriver.java:522) at com.aonhewitt.aft.drivers.ExcelDriver.Executor(ExcelDriver.java:202) at com.aonhewitt.aft.mainClass.AFTMobileAutomation.AFTExecutor(AFTMobileAutomation.java:68) at com.aonhewitt.aft.mainClass.AFTMobileAutomation.main(AFTMobileAutomation.java:21) ```","closed","","SumathiChn","2016-04-20T05:54:49Z","2019-08-20T08:09:36Z"
"","2328","scrollLeft is not working in internet explorer","## Meta -  OS:  Windows 7 Selenium Version:  2.35 Browser:   Internet Explorer 11  scrollLeft for customized scrollbar is not working in internet explorer .  ((JavascriptExecutor)driver).executeScript(""arguments[0].scrollLeft =200;"",webElement);","closed","D-IE,","eloraparija","2016-06-21T04:45:23Z","2019-08-16T23:09:47Z"
"","2653","How to use ChromeDriver with proxy with user/password???","## Meta -  OS:  Windows 7 Selenium Version:   3.0.0 beta2 Browser:  All  Hi,    I can start a new session of chromeDrive, i got the following error  org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: 'unknown', revision: 'f233563', time: '2016-07-28 17:43:42 -0700' System info: host: 'XXXXXX', ip: 'xx.xxx.xxx.xxx', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_66' org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Driver info: driver.version: ChromeDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:670)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:247)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143)     at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:170)     at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:138)     at selenium.TestChromeSelenium.testGoogleSearc(TestChromeSelenium.java:89)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)     at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: java.lang.IllegalStateException: The process has not exited yet therefore no result is available ...     at org.apache.commons.exec.DefaultExecuteResultHandler.getException(DefaultExecuteResultHandler.java:76)     at org.openqa.selenium.os.UnixProcess.checkForError(UnixProcess.java:171)     at org.openqa.selenium.os.CommandLine.checkForError(CommandLine.java:185)     at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:177)     at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:166)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:649)     ... 29 more  And my code is   File file = new File(PATH_TO_CHROMEDRIVER);         System.setProperty(""webdriver.chrome.driver"", file.getAbsolutePath());         DesiredCapabilities capabilities = new DesiredCapabilities();         capabilities.setCapability(CapabilityType.PROXY, getProxy());         ChromeOptions options = new ChromeOptions();         options.addArguments(""test-type"");          options.addArguments(""--proxy-server=http://user:password@proxy:proxyport"");         capabilities.setCapability(ChromeOptions.CAPABILITY, options);         ChromeDriver driver = new ChromeDriver(capabilities);  --- ## BUT     When i refactor the code HttpURLConnection connectToUrl to the following code , i connect to chromeDriver server  New code of connectToUrl      URL url = new URL(ADDRESSODCHROMEDRIVER) ;             java.net.Proxy proxy = new java.net.Proxy(java.net.Proxy.Type.HTTP, new InetSocketAddress(PROXY, PROXYPORT));             Authenticator authenticator = new Authenticator() {  ```             public PasswordAuthentication getPasswordAuthentication() {                 return (new PasswordAuthentication(USer,                         Password.toCharArray()));             }         };         Authenticator.setDefault(authenticator);            HttpURLConnection connection = (HttpURLConnection) url.openConnection(proxy);         connection.setConnectTimeout(5000);         connection.setReadTimeout(1000);           connection.connect(); ```  I  was using Selenium 3.0.0-beta1 and the latest ChromeDriver","closed","","jean13360","2016-08-24T07:44:13Z","2019-08-18T21:09:37Z"
"","2641","test case Dependency overwrites priority in TestNG","## Meta -  OS:  Windows 7  Selenium Version:  2.53.0 WebDriver   Browser:  Chrome ## Expected Behavior - While Running Tests with the combination of dependency and priority through testNG the priority must have higher execution precision. ## Actual Behavior - The Dependency overwrites the precision of priority. ## Steps to reproduce - Please execute below mentioned simple Driver class.  package test.pack;  import org.testng.annotations.Test;  public class dependencyTest {  ``` @Test(priority = 1) public void testMethod001() {     System.out.println(""TC-1""); }  @Test(dependsOnMethods = { ""testMethod001"" }, priority = 1) public void testMethod002() {     System.out.println(""TC-2""); }  @Test(dependsOnMethods = { ""testMethod002"" }, priority = 1) public void testMethod003() {     System.out.println(""TC-3""); }  @Test(dependsOnMethods = { ""testMethod001"" }, priority = 2) public void testMethod004() {     System.out.println(""TC-4""); } ```  } ###### Output  TC-1 TC-2 TC-4 TC-3 PASSED: testMethod001 PASSED: testMethod002 PASSED: testMethod004 PASSED: testMethod003 #   ``` Default test Tests run: 4, Failures: 0, Skips: 0 ``` #  #   Default suite # Total tests run: 4, Failures: 0, Skips: 0","closed","","nirajsharma999","2016-08-22T10:14:30Z","2019-08-19T19:09:48Z"
"","2523","Firefox Driver not working with Firefox version 47.0.1","## Meta -  OS:  Windows 7  Selenium Version:  2.53.0 IDE: Visual Studio 2015, C#  Browser:  Firefox   Browser Version: 47.0.1 (32 Bit)  ## Expected Behavior -  Browser window opens and runs application tests ## Actual Behavior -  Browser window opens, does not load website and provides following error;  OpenQA.Selenium.WebDriverException : Failed to start up socket within 45000 milliseconds. Attempted to connect to the following addresses: 127.0.0.1:7055 TearDown : System.NullReferenceException : Object reference not set to an instance of an object.  Uninstalling Firefox version 47.0.1 and installing 46.0.1 resolves issue.  All tests work as expected within older firefox version","closed","","mart44","2016-07-26T16:27:06Z","2019-08-19T21:09:55Z"
"","2110","Firefox 47 - Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms.","## Meta -  OS:  Windows 7  Selenium Version:  2.52.0  Browser:  Firefox  Browser Version:  47.0b5 ## Expected Behavior -  Open Browser -> Maximize Window -> Go to Website ## Actual Behavior -  Open Bwoeser -> Exception Message='Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. ## Additional Information -  Running NUnit Tests using Selenium Grid. Issue cannot reproduce with Firefox 46 or previous versions.","closed","I-regression,","mmwwipula","2016-05-16T12:54:09Z","2016-06-30T19:55:26Z"
"","2492","facing selenium issues only in IE browser and the code is working fine in other browsers","## Meta -  OS:  Windows 7  Selenium Version:  2.50.1  Browser:   Internet Explore  When I open my application though automation its start blinking and because of these the element are not able to click or identify, these issues are seen only in Internet explorer browser. I am using selenium 2.50.1 version and IE11. I am performing automation testing using junit-cucumber-selenium-java. My scripts are working 100% fine in other browsers expect in IE but there is a need to run my scripts in IE. I am setting  following desired capabilities for IE11: DesiredCapabilities ieCapabilities=DesiredCapabilities.internetExplorer();     ieCapabilities.setCapability(""nativeEvents"",false);         ieCapabilities.setCapability(""unexpectedAlertBehaviour"",""accept"");     ieCapabilities.setCapability(""ignoreProtectedModeSettings"",true);     ieCapabilities.setCapability(""disable-popup-blocking"",true);     ieCapabilities.setCapability(""PersistentHover"",false);     ieCapabilities.setCapability(""RequireWindowFocus "", true);     ieCapabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGN ORING_SECURITY_DOMAINS,true);        ieCapabilities.setCapability(CapabilityType.ACCEPT_SSL_CERTS,true);  But when I am using these capabilities I am unable to perform MouseOver function in my application. when I won‚Äôt use these capabilities the jss code which is written in my application is not loading properly because of this I am getting some unexpected behaviors like my application is blinking when loaded because of this its giving error like elements not found, cannot click on element, cannot locate element and so on. Is there any other capabilities I need to add? I am not finding.  Browser Version:  IE11","closed","","NaveenJayaramaiah","2016-07-20T09:30:33Z","2019-08-19T16:09:53Z"
"","2043","Error forwarding the new session Empty pool of VM for setup Capabilities [{platform=ANY, browserName=firefox, version=46.0}]","## Meta -  OS:  WINDOWS 7  Selenium Version:   Standalone server 2.53.0  Browser:    Firefox Browser Version:    46.0 (64-bit ## Expected Behavior -  should open a fire fox driver where node is running ## Actual Behavior -  getting error on executing the code given below  error is :-  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Error forwarding the new session Empty pool of VM for setup Capabilities [{platform=ANY, browserName=firefox, version=46.0}] Command duration or timeout: 484 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'ofss312865', ip: '10.180.32.62', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_25' Driver info: org.openqa.selenium.remote.RemoteWebDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:158)     at Drivers.main(Drivers.java:45) Caused by: org.openqa.selenium.WebDriverException: Error forwarding the new session Empty pool of VM for setup Capabilities [{platform=ANY, browserName=firefox, version=46.0}] Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'ofss312865', ip: '10.180.32.62', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_25' Driver info: driver.version: unknown     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:115)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Unknown Source) ## Steps to reproduce -  created a hub on hum machine : - java -jar selenium-server-standalone-2.53.0.jar -role hub.  created a node on remote machine :-  java -Dwebdriver.server.session.timeout=864000000 -jar selenium-server-standalone-2.53.0.jar -role webdriver -hub http://10.180.32.62: 4444/grid/register -port 4444 -browser browserName=firefox,maxInstances=2 -browser browserName=chrome,maxInstances=2 -browser browserName=iexplore,maxInstances=2 -maxSession 2  node is registed with the hud, verified it on console.  code in Main method including all packages :-           DesiredCapabilities cap =DesiredCapabilities.firefox();     cap.setBrowserName(""firefox"");         cap.setPlatform(Platform.ANY);         cap.setVersion(""46.0"");  ```      //RemoteWebDriver d = new RemoteWebDriver(new URL(""http://localhost:4444/""),cap);      URL TESTURL = new URL(""http://localhost:4444/wd/hub"");      WebDriver driver = new RemoteWebDriver(TESTURL, cap); ```","closed","","chai4444","2016-05-03T06:23:38Z","2019-08-14T12:09:44Z"
"","2057","Click on Dynamic date link","## Meta -  OS:  Windows 7  Selenium Version:   IDE Browser:    Firefox  Browser Version:   46.0 ## Expected Behavior -  Should click on first(topmost)date link in the table. date link is very dynamic. ## Actual Behavior -  not able to make it dynamic, hence clicks on static date link ## Steps to reproduce -  A table is displayed with the date links on it. every time you add a new record, it is saved under the date link of the day you added the record. My question is how do i make it click on the most current link no matter what the date is? Dynamic??","closed","","karimahirani","2016-05-05T11:44:19Z","2019-08-20T06:10:03Z"
"","2161","Unable to locate drop down element","## Meta -  OS:  Windows 7    Selenium Version: 2.53.0     Browser: Chrome,IE,Firefox    Browser Version: Chrome Version 50.0.2661.102 m (64-bit), Firefox(38.2.0) ,IE 9.0.8112.16421 64 bit edition,   ## Expected Behavior - 1.Open Browser. 2. Go to website. 3. Click On Country drop down. 4. Click on ""Australia"" value. ## Actual Behavior -step 1 and 2 is working fine. getting issue in Step 3 with below error :+1:  Starting ChromeDriver 2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4) on port 26597 Only local connections are allowed. log4j:WARN No appenders could be found for logger (org.apache.http.client.protocol.RequestAddCookies). log4j:WARN Please initialize the log4j system properly. log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info. Exception in thread ""main"" org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""id"",""selector"":""country""}   (Session info: chrome=50.0.2661.102)   (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 16 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'LT-00006212', ip: '10.0.0.234', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4), userDataDir=C:\Users\CRuhidas\AppData\Local\Temp\scoped_dir16984_21672}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=50.0.2661.102, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: f77b20d7809273f2eff97c28256cecb0 **\* Element info: {Using=id, value=country}     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)     at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)     at org.openqa.selenium.By$ById.findElement(By.java:218)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)     at formpf.test.LaunchMDBapplication.main(LaunchMDBapplication.java:25) ## Steps to reproduce -    Code :+1:   package New.test; import java.io.IOException; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.*;  public class LaunchMDBapplication {  ``` public static void main(String[] args) throws InterruptedException, IOException {     System.setProperty(""webdriver.chrome.driver"", ""C:/Users/cruhidas/Downloads/Path_chromedriver_win32/chromedriver.exe"");     //System.setProperty(""webdriver.ie.driver"", ""C:/IEDriverServer/IEDriverServer.exe"");     WebDriver driver = new ChromeDriver();     //driver.quit();     //driver =new ChromeDriver();     //WebDriver driver =new InternetExplorerDriver();     //WebDriver driver = new FirefoxDriver();     Thread.sleep(4000);     driver.get(""http://jsfiddle.net/bdhacker/eRv2W/"");     Thread.sleep(4000);     driver.findElement(By.id(""country"")).click();     Thread.sleep(2000);     driver.findElement(By.xpath(""//*[@id='country']/option[14]"")).click(); ```  } }","closed","","chandra078272","2016-05-25T09:09:07Z","2019-08-20T05:09:40Z"
"","2068","IEDriver get stuck when loading special web pages","## Meta -  OS:  Windows 7    Selenium Version:  selenium-server-standalone-2.52.0    Browser:  IE (I used the latest IEDriver.exe file.)    Browser Version:  11.0.9600.18282 (64-bit)   ## Expected Behavior -  When loading 3 different special web pages, the whole testing will be stuck. But it can work fine when load other web page URL. ## Actual Behavior -  The 3 different web pages should be opened successfully first. And then, they can be closed correctly. ## Steps to reproduce -    **Java code:**  ``` void seStartWebBrowser() throws Exception{     System.setProperty(""webdriver.ie.driver"", ""C:/SeleniumPlus/extra/IEDriverServer.exe"");           DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer();     capabilities.setCapability(""nativeEvents"", true);     capabilities.setCapability(""requireWindowFocus"", true);     capabilities.setJavascriptEnabled(true);     capabilities.setCapability(CapabilityType.TAKES_SCREENSHOT, true);      org.openqa.selenium.WebDriver wd1 = new InternetExplorerDriver(capabilities);        org.openqa.selenium.WebDriver wd2 = new InternetExplorerDriver(capabilities);     org.openqa.selenium.WebDriver wd3 = new InternetExplorerDriver(capabilities);      String url1 = ""http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_alert"";     String url2 = ""http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_confirm"";     String url3 = ""http://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_prompt"";      wd1.get(url1);     wd2.get(url2);     wd3.get(url3);      wd1.quit();     wd2.quit();     wd3.quit(); } ```  When calling this method about 12 times,  ``` for (int i = 0; i < 6; i++) {     seStartWebBrowser(); } ```  It may get stuck at about 3rd or 4th calling.  But if we use another group of URLs, like:  ``` url1 = ""https://www.google.com""; url2 = ""https://www.baidu.com""; url3 = ""http://www.bing.com"";  ```  It won't get stuck with 12 times calling.","closed","D-IE,","kid551","2016-05-09T03:25:41Z","2019-10-29T18:45:20Z"
"","2702","Webdriver Sendkeys not inputting all spaces","## Meta -  OS:  Windows 7    Selenium Version:  Java 3.0.0-beta2    Browser:  Chrome     Browser Version:  Version 52.0.2743.116 m   ## Expected Behavior -   i am trying to type an address into a text box EX. trying to imput ""9910 sw 73rd st"" ## Actual Behavior -  the actual behavior is random rearly does it actually input the actual address what usally ends up happenig the test will eat some of the spaces resulting in something like ""9910sw 73rd st"" casusing my test to fail since im unable to validate that address. ## Steps to reproduce -  Below i have added the code used in test. you cant run it since this is an internal application but i beleave this is an issue with snedkeys or the way im using it has anyone else expecienced this issue.  all help and comments are appreciated thanks in advance,  @Test     public void addressValidation() throws Exception {             login();             driver.findElement(                     By.cssSelector(""#answer_hub > div:nth-child(1) > span > input.ic_field.h24.address_reset""))                     .sendKeys(""9910 sw 73rd st"");             driver.findElement(By.cssSelector(""#answer_hub > div:nth-child(1) > span > input.submit.h32.button.blue""))                     .click();             Thread.sleep(3000);             driver.findElement(By.cssSelector(                     ""#answer_hub > div:nth-child(1) > span > input.ic_valid.button_icon.visibility_visible""))                     .isDisplayed();         }     }","closed","","angelmartin54","2016-09-01T15:11:32Z","2019-08-19T18:09:48Z"
"","2662","Cached proxy credentials","## Meta -  OS:  Windows 7    Selenium Version:  3.0.0.beta2.1    Browser:  Firefox Developer Edition    Browser Version:  50.0a2 (2016-08-24) (64 bit)    ## Expected Behavior -  Use a proxy authentication such as cached credentials via C#  ``` var webProxy = new WebProxy(WebRequest.DefaultWebProxy.GetProxy(new Uri({TheURLoftheService}))); webProxy.Credentials = CredentialCache.DefaultCredentials; webProxy.UseDefaultCredentials = true; service.Proxy = webProxy; ``` ## Actual Behavior -  Won't authenticate my proxy, proxy is script based, doesn't contain username or password. ## Steps to reproduce -  Try to authenticate a script based proxy that has no username or password. ## Misc -  The above code will grab cached credentials from the proxy, and allow you to run through the proxy without actually inputting the information.","closed","","Ekultek","2016-08-24T23:55:38Z","2019-08-19T13:10:00Z"
"","2595","Unable to close the browser","## Meta -  OS:  windows 7    Selenium Version:  3.0 beta 2    Browser:  firefox     Browser Version:    48 ## Expected Behavior -  when user driver.close(), the browser is not closed. when used driver.quit(), Error message is displayed. ## Actual Behavior -  when close() or quit() is used then the browser should be closed. ## Steps to reproduce -","closed","","suryaprusty","2016-08-10T12:04:02Z","2019-08-19T19:10:03Z"
"","2202","isTextPresentXML user extension stopped working","## Meta -  OS:  Windows 7    Selenium Version:  2.9.1 IDE    Browser:  Firefox    Browser Version:  46.0.1   ## Expected Behavior -  isTextPresentXML used to work a year back (as user-extension command) ## Actual Behavior -  isTextPresentXML user extension command no longer available now ## Steps to reproduce -  Below is the user extension: Selenium.prototype.isTextPresentXML = function(pattern) {   /** - Verifies that the specified text pattern appears somewhere in the entire XML document - (as opposed to text only within <body/> tags). - Note that when defining text patterns in your test case you should - escape HTML characters. For example: <userInRole> - (not ). - @param pattern a pattern to match with the text of the document - @return boolean true if the pattern matches the text, false otherwise   */      // the only code that differs from the stock Selenium isTextPresent   //  is the code to retrieve allText...   // IE   var allText = this.browserbot.getDocument().xml;   if (allText == null) {       // Firefox       allText = new XMLSerializer().serializeToString(this.browserbot.getDocument());   }      var patternMatcher = new PatternMatcher(pattern);   if (patternMatcher.strategy == PatternMatcher.strategies.glob) {           if (pattern.indexOf(""glob:"")==0) {                   pattern = pattern.substring(""glob:"".length); // strip off ""glob:""               }       patternMatcher.matcher = new PatternMatcher.strategies.globContains(pattern);   }   else if (patternMatcher.strategy == PatternMatcher.strategies.exact) {               pattern = pattern.substring(""exact:"".length); // strip off ""exact:""       return allText.indexOf(pattern) != -1;   }   return patternMatcher.matches(allText);   };","closed","","brightland","2016-06-02T17:20:24Z","2019-08-20T04:09:54Z"
"","2469","pause command executed problem","## Meta -  OS:  Windows 7    Selenium Version:  2.53.1    Browser:  Internet Explorer    Browser Version:  IE 11.0.9600.18349   ## Expected Behavior -  continue execute command ## Actual Behavior -  the rest command those after pause command, will not wait, after clickAndWait execute,it will immediatly execute next command, not wait for page loaded ## Steps to reproduce -  record a clickAndWait command, and add pause command before it.","closed","","terrylao","2016-07-15T09:25:04Z","2019-08-19T22:09:53Z"
"","2701","MarionetteDriver#quit() => java.lang.IllegalStateException: UnixUtils may not be used on Windows","## Meta -  OS:  Windows 7    Selenium Version:  2.53.1    Browser:  Firefox with GeckoDriver 0.10.0.    Browser Version:  48 & nightly (both)   ## Expected Behavior -  `MarionetteDriver.quit()` should not throw an exception. ## Actual Behavior -  `java.lang.IllegalStateException: UnixUtils may not be used on Windows` ## Steps to reproduce -  Compile and run this JUnit test. It fails with an exception when reaching `driver.quit()`.  ``` java package ihm.test;  import org.junit.Test; import org.openqa.selenium.firefox.MarionetteDriver;  public class MarionetteTest {      @Test     public void assertOk() {         MarionetteDriver driver = new MarionetteDriver();          try {             driver.navigate().to(""http://www.chezmoicamarche.org/"");         } finally {             driver.quit();         }     } } ```  ```     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)     at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:526)     at ihm.test.MarionetteTest.assertOk(MarionetteTest.java:15)     ... Caused by: java.lang.IllegalStateException: UnixUtils may not be used on Windows     at org.openqa.selenium.os.ProcessUtils.getProcessId(ProcessUtils.java:189)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.getPID(UnixProcess.java:222)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.access$300(UnixProcess.java:201)     at org.openqa.selenium.os.UnixProcess.destroy(UnixProcess.java:132)     at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:155)     at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:196)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:94)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     ... 30 more  ```","closed","C-java,","Toilal","2016-09-01T13:53:32Z","2019-08-17T14:09:45Z"
"","2565","Firefox WebDriver could not be verified for Firefox","## Meta -  OS:  Windows 7    Selenium Version:  2.53.1    Browser:  Firefox    Browser Version:      47.0.1 64-bit (same with 48 64-bit) ## Expected Behavior -  Firefox WebDriver addon to work properly, allowing selenium tests to work. ## Actual Behavior -  Firefox WebDriver is disabled with an error message ""Firefox WebDriver could not be verified for use in Firefox and has been disabled"". ## Steps to reproduce -    Use maven with the following dependency:               org.seleniumhq.selenium             selenium-java             2.53.1   Set up a firefox profile using the following method:  FirefoxBinary binary = new FirefoxBinary(); File profileFolder = new File(""/pathtofolder/profile""); FirefoxProfile profile = new FirefoxProfile(profileFolder); profile.setAcceptUntrustedCertificates(true); final WebDriver driver = new FirefoxDriver(binary, profile);  Load a page with driver.get(). Firefox will load a blank window with no URL in the address bar. If you go to the Extensions in the current firefox window, the Firefox WebDriver error will be displayed.","closed","","shanewignall","2016-08-03T19:49:25Z","2019-08-19T20:10:03Z"
"","2397","Using PhantomJS with a proxy","## Meta -  OS:  Windows 7    Selenium Version:  2.53.0, C#    Browser: PhantomJSdriver     Browser Version: 2.1.1   ## Expected Behavior -  I want to connect via proxy. ## Actual Behavior -  It appears to be working fine, according to the console window my proxyType is set to ""none"" and the httpProxy to the ip of the proxy. But I got suspicious to if it was acctually working so I had it connect to a random IP-checking website and take a screenshot. It showed my real IP. ## Steps to reproduce -  ``` PhantomJSDriverService service = PhantomJSDriverService.CreateDefaultService(); service.IgnoreSslErrors = true; service.SslProtocol = ""any"";  var options = new PhantomJSOptions();                         options.AddAdditionalCapability(CapabilityType.Proxy, new Dictionary      {            {""proxyType"", ""none""},            {""httpProxy"", proxyL}      });  ```  Any ideas? The console seems to show the correct settings.","closed","","upn0rth","2016-06-28T17:42:09Z","2019-08-20T00:09:46Z"
"","2039","Selenium Chrome Mobile Emulator testing with specific phone resoultion","## Meta -  OS:  WINDOWS 7    Selenium Version:  2.53.0 for java    Browser:  CHROME    Browser Version:  49.0.2623.110 m   ## Expected Behavior -  I am writing selenium script for testing different mobile views, I used below code to run the script for ""Apple iPhone 5"" for the instance.  ``` static DesiredCapabilities  capabilities;      static String deviceName;      public static void main(String[] args) {       //some Sample Devices. Complete list can be found here: https://code.google.com/p/chromium/codesearch#chromium/src/chrome/test/chromedriver/chrome/mobile_device_list.cc       //pick any of the device      //  deviceName = ""Google Nexus 5"";     //  deviceName = ""Samsung Galaxy S4"";     //  deviceName = ""Samsung Galaxy Note 3"";     //  deviceName = ""Samsung Galaxy Note II"";     //  deviceName = ""Apple iPhone 4"";       deviceName = ""Apple iPhone 5"";     //  deviceName = ""Apple iPad 3 / 4"";        System.setProperty(""webdriver.chrome.driver"", ""C:\\path\\to\\driver\\chromedriver.exe"");        Map mobileEmulation = new HashMap();       mobileEmulation.put(""deviceName"", deviceName);        Map chromeOptions = new HashMap();       chromeOptions.put(""mobileEmulation"", mobileEmulation);        capabilities = DesiredCapabilities.chrome();       capabilities.setCapability(ChromeOptions.CAPABILITY, chromeOptions);       WebDriver driver = new ChromeDriver(capabilities);        driver.manage().window().maximize();       driver.navigate().to(""http://www.google.com"");       } ```  When I run this I am getting error like `unknown error: unrecognized chrome option: mobileEmulation`  > Please help me to get proper reference to write selenium script for mobile emulation(mobile height and width should be changed based on device), > and let me know the issue with the existing code. ## Actual Behavior -  Getting error like `unknown error: unrecognized chrome option: mobileEmulation` ## Steps to reproduce -  please compile code given in expected result.","closed","","chandrasekhar4u","2016-05-02T08:41:46Z","2019-08-20T07:09:43Z"
"","2112","ExpectedConditions.visibilityOfElementLocated is not working correctly","## Meta -  OS:  Windows 7    Selenium Version:  2.53.0    Browser:  Firefox, Chrome    Browser Version:  ESR 38.7.1 (Firefox), 50.0.2661.102 m (Chrome)   ## Expected Behavior -  Find visible element that is present in HTML using _ExpectedConditions.visibilityOfElementLocated_ method and print its id attribute. ## Actual Behavior -  Element is not found and _TimeoutException_ exception is thrown. ## Steps to reproduce -    Code: https://gist.github.com/adambbn/beee14d9a66ca91115fa9a306c51e274 Two element are present in HTML. First is not visible, second is visible. Finding element using _ExpectedConditions.visibilityOfElementLocated_ method is not working. If visible element is present before invisible element method works fine.","closed","","adambbn","2016-05-17T10:08:42Z","2019-08-19T09:10:01Z"
"","2620","IWebdriver problems with avas?","## Meta -  OS:  Windows 7    Selenium Version:  2.53.0    Browser:  Firefox    Browser Version:     ## Expected Behavior - Firefox should connect with drivers. ## Actual Behavior - Since a Avast update, got timeout, when increasing timeout, get a more detailed message. ## Steps to reproduce - With Avast 12.2.2276, just try to initiates a IWebdriver as such:  IWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""), DesiredCapabilities.Firefox(), TimeSpan.FromSeconds(80));  I get the following error (**however even closing Avast doesn't work**):  CBrowser.cs, startBrowser: RemoteWebDriver for Firefox couldn't be initialised. Following error: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: "":2,""seen"":true} 1471442370018   addons.xpi  DEBUG   Updating XPIState for {""id"":""sp@avast.com"",""syncGUID"":""CFhLiGOAHaB9"",""location"":""winreg-app-global"",""version"":""10.3.5.39"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://sp/content/common/skin/img/logo-safeprice-48.png"",""icon64URL"":null,""defaultLocale"":{""name"":""Avast SafePrice"",""description"":""Safe shopping extension"",""creator"":""AVAST Software"",""homepageURL"":""http://www.avast.com/""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":false,""descriptor"":""C:\\Program Files\AVAST Software\Avast\SafePrice\FF"",""installDate"":1471146557689,""updateDate"":1471146557689,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":1877359,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""38.0a1"",""maxVersion"":""43.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1471442370019   DeferredSave.extensions.json    DEBUG   Save changes 1471442370019   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1471442370019   addons.xpi-utils    DEBUG   Updating add-on states 1471442370020   addons.xpi-utils    DEBUG   Writing add-ons list 1471442370023   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1471442370024   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1471442370025   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1471442370025   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1471442370026   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1471442370027   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1471442370054   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1471442370054   addons.manager  DEBUG   Provider finished startup: XPIProvider 1471442370054   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1471442370054   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1471442370054   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1471442370055   addons.manager  DEBUG   Starting provider: GMPProvider 1471442370065   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1471442370065   addons.manager  DEBUG   Provider finished startup: GMPProvider 1471442370065   addons.manager  DEBUG   Starting provider: PluginProvider 1471442370065   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1471442370066   addons.manager  DEBUG   Provider finished startup: PluginProvider 1471442370066   addons.manager  DEBUG   Completed startup sequence 1471442371500   DeferredSave.extensions.json    DEBUG   Starting timer 1471442371513   addons.manager  DEBUG   Starting provider:  1471442371513   addons.manager  DEBUG   Registering shutdown blocker for  1471442371513   addons.manager  DEBUG   Provider finished startup:  1471442371558   DeferredSave.extensions.json    DEBUG   Starting write 1471442371725   addons.repository   DEBUG   No addons.json found. 1471442371726   DeferredSave.addons.json    DEBUG   Save changes 1471442371729   DeferredSave.addons.json    DEBUG   Starting timer 1471442371802   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1471442371802   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1471442371803   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1471442371976   DeferredSave.addons.json    DEBUG   Starting write 1471442371983   DeferredSave.extensions.json    DEBUG   Write succeeded 1471442372231   DeferredSave.addons.json    DEBUG   Write succeeded","closed","","cherrr","2016-08-17T13:53:59Z","2019-08-19T20:09:37Z"
"","2305","Unable to execute WebDriver scripts using Ant, Maven and testng","## Meta -  OS:  Windows 7    Selenium Version:  2.53    Browser:  Firefox    Browser Version:  2.46   ## Expected Behavior -  Ant build.xml will run my webdriver script ## Actual Behavior -  It is ending up with an exception below. com.google.common.collect.Multimaps.transformValues(Lcom/google/common/collect/ListMultimap;Lcom/google/common/base/Function;)Lcom/google/common/collect/ListMultimap;                             at com.google.common.net.MediaType.toString(MediaType.java:668)                             at org.openqa.selenium.remote.http.JsonHttpCommandCodec.encode(JsonHttpCommandCodec.java:232)                             at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:139)                             at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)                             at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)                             at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)                             at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)                             at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)                             at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)                             at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)                             at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)                             at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)                             at testng.advanced.practice.TestNGAnnotations.superTest(Unknown Source)                             at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                             at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)                             at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)                             at java.lang.reflect.Method.invoke(Method.java:498)                             at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)                             at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)                             at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)                             at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)                             at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)                             at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)                             at org.testng.TestRunner.privateRun(TestRunner.java:782)                             at org.testng.TestRunner.run(TestRunner.java:632)                             at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)                             at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)                             at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)                             at org.testng.SuiteRunner.run(SuiteRunner.java:268)                             at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)                             at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)                             at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)                             at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)                             at org.testng.TestNG.run(TestNG.java:1064)                             at org.testng.TestNG.privateMain(TestNG.java:1385)                             at org.testng.TestNG.main(TestNG.java:1354) ## Steps to reproduce -    Build.xml                   ```                                                                                                                                                             ```    pom.xml -       4.0.0     TestNG_Advanced     TestNG_Advanced     0.0.1-SNAPSHOT  ```      1.2.17     2.53.0     6.9.10        src                           maven-compiler-plugin             3.3                              1.8                 1.8                                            org.apache.maven.plugins             maven-surefire-plugin             2.19.1                                                   testng.xml                                                             org.testng         testng         ${testng.version}                   org.seleniumhq.selenium         selenium-java         ${selenium.version}                   log4j         log4j         ${log4j.version}       ```    testng.xml                                                                           TestAnnonations.java package testng.advanced.practice;  import java.io.IOException; import java.util.Date;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.testng.Reporter; import org.testng.annotations.Test;  public class TestNGAnnotations {     @Test(dependsOnMethods = { ""superTest"", ""dependTest"" })     public void testNGTest() {         Reporter.log(""In Test"");     }  ``` @Test public void dependTest() throws IOException {     Reporter.log(""Depend Test""); }  @Test public void superTest() {     Reporter.log(""Super Test"");     WebDriver driver = new FirefoxDriver();     driver.get(""http://www.google.com""); } ```  }","closed","","gitissuepost","2016-06-17T06:10:51Z","2019-08-20T02:09:41Z"
"","2148","IE WebDriver with enabled desired capability ""Allow blocked content"" opens local page with ""Allow blocked content"" prompt","## Meta -  OS:  Windows 7    Selenium Version:  2.52.0    Browser:  Internet Explorer 11    Browser Version:  11.0.9600.18314CO   ## Expected Behavior -  IE WebDriver opens local page without ""Allow blocked content"" prompt when desired capability ""Allow blocked content"" is enabled ## Actual Behavior -  IE WebDriver with enabled desired capability ""Allow blocked content"" opens local page with ""Allow blocked content"" prompt ## Steps to reproduce -  **Setup**: In the java code:  ``` DesiredCapabilities capabilities = DesiredCapabilities.internetExplorer(); capabilities.setCapability(InternetExplorerDriver.NATIVE_EVENTS, false); capabilities.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true); capabilities.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, true); capabilities.setCapability(""allow-blocked-content"", true); capabilities.setCapability(""allowBlockedContent"", true); System.setProperty(""webdriver.ie.driver"", Log.gsAutomationAutoPath + ""IEDriverServer.exe""); WebDriver driver = new InternetExplorerDriver(capabilities); ```  **Step**: Run simple test step checking any widget presence on the page.  **Result**: 1. IE browser is opened with 'Allow blocked content' prompt    ![allowblockedcontentie11](https://cloud.githubusercontent.com/assets/19341020/15469641/41820ca6-20f4-11e6-8063-905662d1344a.PNG) 2. Exception in the code with message:  14:21:19 - 00:01:21.809 - FAIL - org.openqa.selenium.TimeoutException: Timed out after 10 seconds waiting for visibility of element located by By.xpath: //input[@name='firstname'] Build info: version: '2.52.0', revision: '4c2593cfc3689a7fcd7be52549167e5ccc93ad28', time: '2016-02-11 11:22:43' System info: host: 'DD-3900783', ip: '10.60.216.87', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_71' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{browserAttachTimeout=0, ie.enableFullPageScreenshot=true, enablePersistentHover=false, ie.forceCreateProcessApi=false, ie.forceShellWindowsApi=false, pageLoadStrategy=normal, ignoreZoomSetting=true, ie.fileUploadDialogTimeout=3000, version=11, platform=WINDOWS, proxy={proxyType=}, nativeEvents=false, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=false, browserName=internet explorer, initialBrowserUrl=http://localhost:4386/, javascriptEnabled=true, ignoreProtectedModeSettings=true, enableElementCacheCleanup=true, unexpectedAlertBehaviour=dismiss}] Session ID: 61670229-0edf-476f-baf3-cc4c2b233fdd  **Pay attention**: Capabilities doesn't have neither ""allow-blocked-content"" nor ""allowBlockedContent"". I don't know should they be.","closed","","beluha","2016-05-23T11:34:41Z","2019-08-16T16:09:54Z"
"","2741","HOVER Issues","## Meta -  OS:  Windows 7    Selenium Version:    3.0.0 Beta, Eclipse ,neon Browser:      Internet Explorer Browser Version:   11.0.9600 1. I have one web element/Control once i navigate to it it popups the MouseHOver Control. 2. In that Control I have to click on the Control which is listed in Mouseoverpanel.    However in IE the MouseOVer Control started flickering and unable to click the control in MouseOVerpanel ## Expected Behavior - it's has to navigate to mouse over control &  click on the control in Mouseover panel ## Actual Behavior - it's not clicking the Mouse overpanel start flickering ## Steps to reproduce -   1. I have tried with all possible scenario I am unable to solve this issue.  Note: The same set of code is working fine (i..e Firefox and Chrome)","closed","D-IE,","karthikeyanMani","2016-09-08T12:37:30Z","2019-08-18T18:10:01Z"
"","2094","Blank Firefox window and error message in eclipse","## Meta -  OS:  Windows 7    Selenium Version:      Browser:  Firefox    Browser Version:  46   ## Expected Behavior - Small widow with desired website ## Actual Behavior - Blank maximized  window ## Steps to reproduce -    code from eclipse-- package eezar_test;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; public class test_sample {     public static void main(String[] args) {  ```      WebDriver driver = new FirefoxDriver();      driver.get(""www.gmail.com""); } ```  }  Error: Exception in thread ""main"" org.openqa.selenium.WebDriverException: Target URL www.gmail.com is not well-formed. Command duration or timeout: 620 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'admin-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 14d90792-c7c9-4828-a2d2-0de6707c86c5     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:316)     at eezar_test.test_sample.main(test_sample.java:15) Caused by: org.openqa.selenium.WebDriverException: Target URL www.gmail.com is not well-formed. Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'admin-PC', ip: '192.168.0.102', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: driver.version: unknown     at .FirefoxDriver.prototype.get(file:///C:/Users/Monojit/AppData/Local/Temp/anonymous3216851504162366486webdriver-profile/extensions/fxdriver@googlecode.com/components/driver-component.js:10636)     at .DelayedCommand.prototype.executeInternal_/h(file:///C:/Users/Monojit/AppData/Local/Temp/anonymous3216851504162366486webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:12661)     at .DelayedCommand.prototype.executeInternal_(file:///C:/Users/Monojit/AppData/Local/Temp/anonymous3216851504162366486webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:12666)     at .DelayedCommand.prototype.execute/","closed","D-firefox,","Monloop3r","2016-05-12T14:43:08Z","2019-08-16T23:09:54Z"
"","2050","WebDriver - select option by value with backslash not working","## Meta -  OS:  Windows 2012 Selenium Version:  2.53.2 Browser:  Google Chrome Browser Version:  50.0.2661.94 m (64-bit) ## Expected Behavior -  Web element ""option"" selected by value  ## Actual Behavior -  Error returned:   ``` >           raise NoSuchElementException(""Cannot locate option with value: %s"" % value) E           NoSuchElementException: Message: Cannot locate option with value: domain\00031478 ``` ## Steps to reproduce - 1. Create simple HTML with next code  ```     Alex Foo   Kevin Bar  ``` 1. Try to find option element by value (in Python):  ``` locator = (By.ID, ""someid"") element = driver.find_element(locator) select = Select(element) select.select_by_value(""domain\\00031478"") ```","closed","","bolatbekb","2016-05-04T08:04:09Z","2019-08-19T09:09:59Z"
"","2342","[Java] FirefoxDriver does not handle clicking multi-select options when using Action builder","## Meta -  OS:  Windows 10/Linux Mint Selenium Version:  2.53.0 Browser:  Firefox  Browser Version:  46.0.1 ## Expected Behavior -  Clicking on any `` of a multi-select `` element should select only that option (all others should not be selected). The behavior of Shift+Click also does not work. ## Actual Behavior -  Each subsequent option clicked simply toggles whether it is selected or not. For example, if you click on option A, then option C, both option A and C will be selected afterward, where only C should actually be selected. This observed behavior is what I would expect from performing a Ctrl+Click. Note that the actual behavior is the same regardless of whether you add the SHIFT modifier or not. ## Steps to reproduce -  HTML example: `` `A` `B` `C` ``  For a normal click: `new Actions(driver).click(optA).perform();` `new Actions(driver).click(optC).perform();` `// I would expect this to select A, then when it clicks on C, A becomes de-selcted and only C is selected` `// It actually selects A and C (but not B)`  For a shift-click: `new Actions(driver).click(optA).perform();` `new Actions(driver).keyDown(Keys.SHIFT).click(optC).keyUp(Keys.SHIFT).perform();` `// I would expect this to select A, then when it clicks on C, all three options become selected` `// It actually selects A and C (but not B) like the normal click`","closed","D-firefox,","jbrower2","2016-06-22T19:08:07Z","2019-08-14T14:09:41Z"
"","2759","please publish selenium 2.53 with the new gecko driver params support","## Meta -  OS:  Windows 10/7  Selenium Version: 2.53.6 (python)  Browser:  Firefox  Browser Version:  48","closed","","RonenHoffer","2016-09-11T13:45:51Z","2019-08-19T16:09:58Z"
"","2592","Unable to delete HTTPONLY cookie on IE 10 and IE 11 in iedriver v2.53.1","## Meta -  OS:  Windows 10, Windows 8.1    Selenium Version:  iedriver 2.53.1    Browser:  IE 10, IE 11    Browser Version:      11.0.9600.17801 10.0.9200.16580 ## Expected Behavior -  Using the DELETE_COOKIE command should delete the specified HTTPonly cookie. According to the changelog for the IEdriver, v2.46.0.6 / v2.46.0.5 should afford this functionality.  https://raw.githubusercontent.com/SeleniumHQ/selenium/master/cpp/iedriverserver/CHANGELOG ## Actual Behavior -  Using the DELETE_COOKIE command and then refreshing the page does not delete the cookie.  Using the DELETE_ALL_COOKIES command deletes all cookies including HTTPonly successfully. ## Steps to reproduce -   1. Start the IE driver.  2. Login to a Gmail account. 3. Delete the 'NID' cookie with webdriver. (This is an HTTPonly cookie) 4. Refresh the page. Notice cookie is still present.","closed","D-IE,","coffeesippa","2016-08-09T20:01:08Z","2019-08-14T05:09:49Z"
"","2774","[C#][Firefox] NoSuchElement exceptions turn into FormatExceptions due to ""?"" JS line numbers","## Meta -  OS:  Windows 10 Pro Anniversary Edition Selenium Version:  2.53.1, using C# bindings Browser:  Firefox Browser Version:  50.0a2 (with signing enforcement, compat checking, and Electrolysis preffed off) ## Expected Behavior -  If a FindElement call cannot locate an element, a NoSuchElementsException is thrown. ## Actual Behavior -  FirefoxDriver generates a NoSuchElementsError in JavaScript, and marshals it to the client, but when the client is trying to unpack the browser-side call stack to throw the NoSuchElementsException, it throws a FormatException instead while parsing line numbers into integers. Specifically, ""?"" is not an integer.  Inspecting the Response object shows, among other more normal looking stack trace elements, this one:  ``` methodName: ""setTimeout handler*DelayedCommand.prototype.execute@[WebDriver profile directory]         /extensions/fxdriver@googlecode.com/components/command-processor.js"" fileName: ""?"" lineNumber: ""?"" columnNumber: ""?"" ```","closed","","TwelveBaud","2016-09-14T15:59:50Z","2019-08-19T17:09:36Z"
"","2547","IE Times out when trying get cookies","## Meta -  OS:  Windows 10 Pro 64-bit  Selenium Version:   2.53.1  Browser:   Internet Explorer  Browser Version:   11.0.10240.16384 64-bit ## Expected Behavior -  Should get the cookies from the site.  Of note, IE is setup correctly and works for pretty much everything else I've tried to do. ## Actual Behavior -  When trying to retrieve cookies gets a timeout error.  OpenQA.Selenium.WebDriverException was unhandled by user code   HResult=-2146233088   Message=The HTTP request to the remote WebDriver server for URL http://localhost:16639/session/be71f8d4-b65c-44e9-af83-f13b3617742b/cookie timed out after 60 seconds.   Source=WebDriver   StackTrace:        at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)        at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)        at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)        at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteCookieJar.GetAllCookies()        at OpenQA.Selenium.Remote.RemoteCookieJar.get_AllCookies()        at WebAutomation.Tests.SeleniumWebAutomationTests.TestIeClickNewTabCookies() in C:\Users\Menoh\OneDrive\Documents\Visual Studio 2015\Projects\NetLabs\WebAutomationTests1\SeleniumWebAutomationTests.cs:line 964   InnerException:         HResult=-2146233079        Message=The request was aborted: The operation has timed out.        Source=System        StackTrace:             at System.Net.HttpWebRequest.GetResponse()             at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)        InnerException:  ## Steps to reproduce -    ``` [TestMethod]     public void TestIeClickNewTabCookies()     {         const string navURL = @""http://www.aidata.me/"";         const string xPath = @""/html/body/div[1]/div[3]/div/div/div[2]/div/div/div[1]/a[3]"";          var driver = new InternetExplorerDriver();         driver.Navigate().GoToUrl(navURL);          var parentHandle = driver.CurrentWindowHandle;          var cookies = driver.Manage().Cookies.AllCookies.ToList(); //","closed","D-IE,","MemnochDaCoder","2016-08-01T19:27:34Z","2019-08-15T12:09:41Z"
"","2424","ChromeDriver Timed Out after 60 seconds on new ChromeDriver()","## Meta -  OS:  Windows 10 and others    Selenium Version:  2.53.1    Browser:  Chrome     Browser Version:  51.0.2704.106 m   ## Expected Behavior -  ChromeDriver server to respond ## Actual Behavior -  Inside Visual Studio, both in debug or run modes, ChromeDriver server console opens and runs as expected, almost instantly. However, running outside Visual Studio, in a Windows Service application, the server keeps timing out, every time, with the following messages and Call Stack:  Message:  The HTTP request to the remote WebDriver server for URL http://localhost:9413/session timed out after 60 seconds.  Call Stack:    at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeDriverService service, ChromeOptions options) ## Steps to reproduce -  using (Driver = new ChromeDriver()) {    //some code }","closed","","paulodrjr","2016-07-04T19:35:42Z","2019-08-19T22:09:59Z"
"","2388","Edge WebDriver does not wait for ""document.readyState == 'complete'""","## Meta -  OS:  Windows 10 (using the testing VM from the MS website)  Selenium Version:   2.52.0 Browser:   MS Edge  ``` var webdriver = require('selenium-webdriver')  var edge            = require('selenium-webdriver/edge') var edgeOptions     = new edge.Options()  edgeOptions.setPageLoadStrategy('normal')  var builder = new webdriver.Builder()     .forBrowser('MicrosoftEdge')     .setEdgeOptions(edgeOptions);  var driver = builder.build();  driver.get('http://lh/siesta/examples/index.html');  driver.executeScript(function () { return document.readyState }).then(function (res) {     console.log(res) })  driver.quit() ``` ## Expected Behavior -  To always see the ""complete"" as the result of the script above ## Actual Behavior -  The results of running the script above 4 times in row:  ``` L:\JavaScript\siesta>bin\binary\nodejs\win32\node.exe misc\edgebug\script.js loading ^C L:\JavaScript\siesta>bin\binary\nodejs\win32\node.exe misc\edgebug\script.js loading  L:\JavaScript\siesta>bin\binary\nodejs\win32\node.exe misc\edgebug\script.js complete  L:\JavaScript\siesta>bin\binary\nodejs\win32\node.exe misc\edgebug\script.js loading  L:\JavaScript\siesta> ```  As you can see, the behavior is sporadically different.  As a side note - the script above also ""hangs"" at the end (also sporadically) and one need to stop it with CTRL+C (see the ""^C"" above). ## Steps to reproduce -  The url in the script should point to a website served from local webserver (the issue is noticed less frequently for http://google.com)","closed","","canonic-epicure","2016-06-27T13:47:43Z","2019-08-20T00:10:00Z"
"","2604","implicitly wait keyword is not working","## Meta -  OS:  Windows 10  Selenium Version:  3.0  Browser:  crome    code:driver.manage().timeouts().implicitlyWait(10,TimeUnit.MINUTES); ## Expected Behavior -must wait for 10 min ## Actual Behavior -execute withing seconds ## Steps to reproduce -1.open browser using selenium  2.open url using driver.get("" ....""); 3.write driver.manage().timeouts().implicitlyWait(10,TimeUnit.MINUTES);","closed","","QETestEngineer","2016-08-11T18:17:11Z","2019-08-19T20:09:45Z"
"","2283","Select fields are not filled in","## Meta -  OS:  Windows 10 Selenium Version: 2.53.2  Browser:  Firefox 47 with marionette 0.8 Browser Version:    Request a dev instance here -> http://www.servicenow.com/ Running this code (ruby):  ``` @driver = Selenium::WebDriver.for :firefox, marionette: true @driver.manage.timeouts.implicit_wait = 30 @accept_next_alert = true BASE_URL = *your instance url here* @driver.get(BASE_URL + '/nav_to.do?uri=%2Fchange_request.do%3Fsysparm_stack%3Dchange_request_list.do%26sys_id%3D-1%26sysparm_query%3Dactive%3Dtrue') @driver.switch_to().frame('gsft_main') select_field_element = Selenium::WebDriver::Support::Select.new(@driver.find_element(:id, 'change_request.type')) select_field_element.select_by(:text, 'Normal') ```  Does not select the given value in a select field and does not throw any exception. This exact same code works with the old FF driver and with chrome","closed","","MarioStoilov","2016-06-14T13:19:26Z","2019-08-20T02:09:56Z"
"","2619","Context Click not working in FF48 (GeckoDriver) with selenium 3.0.0 beta 2","## Meta -  OS:  Windows 10 Selenium Version:  3.0.0-beta2 Browser: Firefox Browser Version:  48.0 (GeckoDriver version v0.10.0) ## Expected Behavior -  right click should open menu options ## Actual Behavior -  No exception is thrown but Menu Option is NOT opened ## Steps to reproduce -  Test site used is http://automationpractice.com/index.php  // Code for right Click Actions actions = new Actions(driver); actions.contextClick(onElement);","closed","","sunnysachdeva","2016-08-17T07:44:04Z","2019-08-17T13:09:43Z"
"","2531","Selenium sendkeys not inputting the text","## Meta -  OS:  Windows 10 Selenium Version:  2.53.1 Browser:  IE11  Browser Version:  IE-11.306.10586.0 ## Expected Behavior - After switching to the new window driver should be able to sendKeys to the textbox. ## Actual Behavior -  sendKeys not throwing any error but the actual input text is not entered into text box. ## Steps to reproduce - 1. Click on a button in window. 2. Current window closes and opens new window. 3. Switches to new window and input username and password.  Below is the code:  ``` WebElement element=null;         try {             driver.getWindowHandles();             for (String winHandle : driver.getWindowHandles()) {                     driver.switchTo().window(winHandle);                     try {                             element = driver.findElement(By.xpath(""//*[@id='username']""));                     } catch (Exception e) {                         continue;                     }                     if (element.isDisplayed()) {                         windowFound = 1;                         break;                     }                 }             } element.sendKeys(""Testingusername"");  ```  In chromedriver it works fine.  When I tried to input using javascriptexecutor also this works. But I do not want use javascriptexecutor.","closed","D-IE,","abhinavm88","2016-07-27T08:11:20Z","2019-08-16T17:09:38Z"
"","2271","geckodriver executable not found if it is in a folder with other executables","## Meta -  OS:  windows 10 Selenium Version:  2.53.1 Browser:  Firefox (version irrelevant) ## Expected Behavior - geckodriver to be found ## Actual Behavior - geckdriver is not found ## Steps to reproduce -  put the geckodriver executable in a folder with other exes and try to start the webdriver with marionette","closed","C-rb,","MarioStoilov","2016-06-13T07:17:51Z","2019-08-20T02:10:02Z"
"","2303","Click doesn't work if global scaling is above 100%","## Meta -  OS:  Windows 10 Selenium Version:  2.52.0 Browser:  Internet Explorer Browser Version:  11 (32-bit) ## Expected Behavior -  element.click() should send click event to the element being clicked ## Actual Behavior -  element.click() does not work if global scaling in Windows is >100% ## Steps to reproduce - 1. Set global scaling in Windows to >100% (Desktop > rclick > Display Settings) 2. Do some clicking on any small elements (like a button, link, etc.)  An alternative fix would be to add 'The global zoom level must be set to 100%' point to the https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration","closed","","yuri-kalinin","2016-06-16T15:20:41Z","2019-08-20T01:09:54Z"
"","2232","With Windows 10 and IE11, the same issue #8302(JavaScriptExecutor fails) exists.","## Meta -  OS:  Windows 10 Selenium Version:   2.53.0 Browser: IE11 Browser Version:  11.0.10240.16841(64-bit) ## Error Log:  2016-06-07T22:05:38.333+0530  WARNING  Cannot determine whether page supports ready state. Abandoning wait. org.openqa.selenium.WebDriverException: JavaScript error (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 143 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'INLN50908341A', ip: '192.168.43.239', os.name: 'Windows 8.1', os.arch: 'x86', os.version: '6.3', java.version: '1.7.0_79' Session ID: d21453eb-a448-4950-bdcd-3b3a32eb7bfb Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{platform=WINDOWS, javascriptEnabled=true, elementScrollBehavior=0, ignoreZoomSetting=false, enablePersistentHover=true, ie.ensureCleanSession=false, browserName=internet explorer, enableElementCacheCleanup=true, ie.enableFullPageScreenshot=true, unexpectedAlertBehaviour=dismiss, ie.fileUploadDialogTimeout=3000, ie.forceShellWindowsApi=false, version=11, pageLoadStrategy=normal, ignoreProtectedModeSettings=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:46412/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.browserCommandLineSwitches=}]     at sun.reflect.GeneratedConstructorAccessor13.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)     at com.sap.viz.browser.selenium.VizBrowserTestDriver.testPageLoaded(VizBrowserTestDriver.java:1697)     at com.sap.viz.browser.selenium.VizBrowserTestDriver.waitForPageLoaded(VizBrowserTestDriver.java:351)     at com.sap.viz.browser.selenium.VizBrowserTestDriver.seleniumDriverOK(VizBrowserTestDriver.java:1220)     at com.sap.viz.browser.selenium.VizBrowserTestDriver.input(VizBrowserTestDriver.java:1178)     at com.sap.viz.execution.TestCaseExecution.input(TestCaseExecution.java:1383)     at com.sap.viz.execution.TestCaseExecution.executebyKeyword(TestCaseExecution.java:905)     at com.sap.viz.execution.XMLExecutor.ExecuteTestStep(XMLExecutor.java:838)     at com.sap.viz.execution.XMLExecutor.ExecuteTestStep(XMLExecutor.java:803)     at com.sap.viz.execution.XMLExecutor.ExecuteTestCase(XMLExecutor.java:780)     at com.sap.viz.execution.XMLExecutor.ExecuteTestCase(XMLExecutor.java:758)     at com.sap.viz.execution.XMLExecutor.ExecuteTestSet(XMLExecutor.java:706)     at com.sap.viz.execution.XMLExecutor.ExecuteAllTestSetsByPlatform(XMLExecutor.java:582)     at com.sap.viz.execution.XMLExecutor.ExecuteAllTestSets(XMLExecutor.java:575)     at com.sap.viz.execution.XMLExecutionThread.run(XMLExecutionThread.java:108)     at java.lang.Thread.run(Thread.java:745)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745)","closed","","ThangaGanesh","2016-06-08T02:44:08Z","2019-08-20T03:09:39Z"
"","2727","Selenium 3.0.0-beta3 node maxSession = 1 causes hub registration of default 5 instead of 1","## Meta -  OS:  Windows 10 Selenium Version:   3.0.0-beta3 node (win10) and 3.0.0-beta3 hub (linux) Browser:   all Browser Version:   any ## Expected Behavior -  Setting node maxSession = 1 should restrict node's active sessions to one. ## Actual Behavior -  Setting node maxSession = 1 via command line argument or json causes registration at hub to be 5. Consequently the hub will spawn 5 concurrent sessions. Setting to maxSession = 2 or higher registers correctly on the hub. ## Steps to reproduce -  Set -maxSession 1 or in json configuration ""maxSession"": 1 causes registration at hub of maxSession: 5. Unregister node, set maxSession to 2 and registration correctly sets 2 and honors that value.","closed","","james-crocker","2016-09-06T18:31:52Z","2019-08-19T17:09:59Z"
"","2382","Selenium automation problem-Browser opening with error Message","## Meta -  OS:  Windows 10 Selenium Version:   2.53.5 Browser: Firefox ## Expected Behavior - Open with google homepage for the typed code ## Actual Behavior -opening with error message saying firefox stopped working and python message is remote connection was forcibly closed ## Steps to reproduce -","closed","","rohanricky","2016-06-26T06:28:45Z","2019-08-20T01:09:36Z"
"","2235","Elements in iframes unreachable","## Meta -  OS:  Windows 10 Selenium Version:   2.53 Browser:   Firefox  Browser Version:  47 (update 8 june, dunno the exact version) ## Problem - Using marionette (as per your unwillingness to fix a simple bug, which prevents firefox starting using the old way), I am unable to locate elements within iframes. Running the **same**  code with the old driver (without marionette) works. ## Steps to reproduce -  Request a dev instance here -> http://www.servicenow.com/ run this code (ruby):  ``` @driver = Selenium::WebDriver.for :firefox, marionette: true @driver.manage.timeouts.implicit_wait = 30 @accept_next_alert = true BASE_URL = *your instance url here* @driver.get(BASE_URL + '/nav_to.do?uri=%2Fchange_request.do%3Fsysparm_stack%3Dchange_request_list.do%26sys_id%3D-1%26sysparm_query%3Dactive%3Dtrue') @driver.switch_to().frame('gsft_main') @driver.find_element(:id, 'change_request.form_scroll') #failure ```  Error is:  ``` 1465379820627   Marionette  TRACE   conn0 -> [0,48,""findElement"",{""using"":""css selector"",""value"":""#change_request.form_scroll""}] JavaScript error: chrome://marionette/content/proxy.js, line 228: TypeError: l is undefined 1465379850654   Marionette  TRACE   conn0","closed","","MarioStoilov","2016-06-08T10:00:09Z","2019-08-20T03:10:00Z"
"","2234","TypeLoad/NotImplemented exception thrown when calling SwitchTo() on EventFiringWebDriver","## Meta -  OS:  Windows 10 IDE: Visual Studio Professional 2015 Update 1  Selenium Version:   2.53.0  Browser:   Google Chrome  Browser Version:   51.0.2704.84 m (64 bit) ## Expected Behavior -  Driver to switch to newly opened tab ## Actual Behavior -  Exception is thrown: `at OpenQA.Selenium.Support.Events.EventFiringWebDriver.SwitchTo()    at Admin.UITests.Admin.Reports.MonitoringReport.ReportsMonitoringReportTests`1.Reports_MonitoringReport_SmartrakUser_CrmHistoryLink_WorksCorrectly_Test() in C:\Users\matt\Documents\SVN\stkcore\Branches\MonitoringReport_SP_263\Admin\UITests\Admin\Reports\MonitoringReport\ReportsMonitoringReportTests.cs:line 807 Result1 Message:    System.TypeLoadException : Method 'ParentFrame' in type 'EventFiringTargetLocator' from assembly 'WebDriver.Support, Version=2.42.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.` ## Steps to reproduce -  `public void ThisFails()         {             ChromeDriverService chromeDriverService = ChromeDriverService.CreateDefaultService(@""C:\"", ""chromedriver.exe"");             chromeDriverService.HideCommandPromptWindow = true;  ```         EventFiringWebDriver driver = new EventFiringWebDriver(new ChromeDriver(chromeDriverService));          driver.Navigate().GoToUrl(""http://www.nzherald.co.nz/"");          Thread.Sleep(5000);          driver.FindElement(OpenQA.Selenium.By.ClassName(""bkt-WatchMe"")).Click();          Thread.Sleep(2000);          driver.SwitchTo().Window(driver.WindowHandles.Last());     }` ```","closed","C-dotnet,","BeigeBadger","2016-06-08T05:04:01Z","2019-08-19T23:09:45Z"
"","2660","Python: Error occurs when running WebDriver with Desired Capabilites ['marionette'] = True","## Meta -  OS:  Windows 10  Selenium Version:  3.0.0b2 (python bindings)  Selenium Standalone Server Version: selenium-server-standalone-3.0.0-beta2.jar  Python Version: 3.5.1  Browser:  Ha, I feel like I've installed them all, not sure what else I can do. Here's the list that I installed and the order in which I installed: - Firefox - Firefox Dev Edition - Firefox Beta  Browser Version: Firefox = After installing Firefox Beta, the version number of this browser is no longer available (not sure why this browser disappeared). The version that was present immediatly prior to the Firefox Beta install = 46.0.1  Firefox Beta = 49.0b6  Firefox Dev Edition = 50.0a2 (2016-08-24) ## Expected Behavior -  After hitting run or debug in my Automation project in my PyCharm IDE, my tests should run successfully as they did prior to upgrading Selenium to use capabilities['marionette'] = True.   Firefox should launch, the tests should run, and after the suite is finished, Firefox should close down. ## Actual Behavior -  The following error occurs:  > selenium.common.exceptions.WebDriverException: Message: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases > E       Stacktrace: > E           at com.google.common.base.Preconditions.checkState (Preconditions.java:199) > E           at org.openqa.selenium.remote.service.DriverService.findExecutable (DriverService.java:109) > E           at org.openqa.selenium.firefox.GeckoDriverService.access$100 (GeckoDriverService.java:38) > E           at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable (GeckoDriverService.java:91) > E           at org.openqa.selenium.remote.service.DriverService$Builder.build (DriverService.java:296) > E           at org.openqa.selenium.firefox.MarionetteDriver.setupService (MarionetteDriver.java:91) > E           at org.openqa.selenium.firefox.MarionetteDriver. (MarionetteDriver.java:69) > E           at org.openqa.selenium.firefox.MarionetteDriver. (MarionetteDriver.java:47) > E           at sun.reflect.NativeConstructorAccessorImpl.newInstance0 (None:-2) > E           at sun.reflect.NativeConstructorAccessorImpl.newInstance (None:-1) > E           at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (None:-1) > E           at java.lang.reflect.Constructor.newInstance (None:-1) > E           at org.openqa.selenium.remote.server.FirefoxDriverProvider.callConstructor (FirefoxDriverProvider.java:90) > E           at org.openqa.selenium.remote.server.FirefoxDriverProvider.newInstance (FirefoxDriverProvider.java:66) > E           at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance (DefaultDriverFactory.java:60) > E           at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call (DefaultSession.java:222) > E           at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call (DefaultSession.java:209) > E           at java.util.concurrent.FutureTask.run (None:-1) > E           at org.openqa.selenium.remote.server.DefaultSession$1.run (DefaultSession.java:176) > E           at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1) > E           at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1) > E           at java.lang.Thread.run (None:-1) ## Steps to reproduce -  Here's my code that launches the browser. Am I doing something wrong in the code here, or did I find a bug?  ``` python     import os     from selenium.webdriver.remote.webdriver import WebDriver     from selenium.webdriver.firefox.firefox_profile import FirefoxProfile     from selenium.webdriver.common.desired_capabilities import DesiredCapabilities      class Browser(metaclass=Singleton):         """"""Encapsulates Selenium functionality regarding the web browser itself. Launching, Quiting, etc.""""""         def __init__(self):             self.driver = Browser.create_browser(self)          def create_browser(self):             """"""Creates and returns a web browser 'driver' object.              This method launches a browser and creates the connections to remotely control it using Selenium.             """"""             os.environ[""webdriver.gecko.driver""] = ""C:\\Users\My_User\Downloads\Installs\geckodriver-v0.9.0-win64\wires.exe""              capabilities = DesiredCapabilities.FIREFOX.copy()             capabilities['platform'] = ""WIN10""             capabilities['marionette'] = True             capabilities['binary'] = ""C:\Program Files (x86)\Firefox Developer Edition\\firefox.exe""              ff_profile_dir = ""C:\\Users\My_User\PycharmProjects\Automation\FirefoxProfile""             ff_profile = FirefoxProfile(profile_directory=ff_profile_dir)              driver = WebDriver(command_executor='http://127.0.0.1:4444/wd/hub',                                desired_capabilities=capabilities,                                browser_profile=ff_profile)              driver.implicitly_wait(30)             return driver ```","closed","","arosszay","2016-08-24T18:24:18Z","2019-08-19T19:09:36Z"
"","2793","Selenium-3.0.0-3.0.0-beta3- Firefox -Not loading Application","## Meta -  OS:  Windows 10  Selenium Version:  3.0.0-beta3 Geckodriver version =10 Browser:  Firefox 46.0b9 / 47.0 ## Expected Behavior -Application should load in Firefox browser ## Actual Behavior -1474294590858   Marionette  INFO    Listening on port 57784  JavaScript error: chrome://marionette/content/listener.js, line 1243: NS_ERROR_FILE_NOT_FOUND:  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Error loading page (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 44 milliseconds Build info: version: 'unknown', revision: 'f233563', time: '2016-07-28 17:43:42 -0700' System info: host: 'AUTOMATION', ip: '10.111.130.99', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, marionette=true, appBuildId=20160407053945, version=, platform=XP, proxy={}, specificationLevel=1, acceptSslCerts=false, browserVersion=46.0, platformVersion=10.0, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: 1ee20cdf-c603-49be-b8c2-c85daa107b17     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)     at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:331)     at com.tavant.test.Test.main(Test.java:15) ## Steps to reproduce -  public static void main(String h[]) throws InterruptedException{         DesiredCapabilities capabilities = DesiredCapabilities.firefox();         capabilities.setCapability(""marionette"", true);         System.setProperty(""webdriver.gecko.driver"",""D:\xyz\geckodriver.exe"");         WebDriver driver = new FirefoxDriver(capabilities);  ```     driver.get(""www.testapp.com"");     Thread.sleep(5000); } ```  ![screenff](https://cloud.githubusercontent.com/assets/20138147/18635399/9522c09c-7ea2-11e6-9087-b6e313485d57.png)","closed","","santoshchk","2016-09-19T14:23:00Z","2019-08-19T16:09:56Z"
"","2773","Issues with ""moveToElement"" with Firefox and ""(new Actions(driver).click()"" with Edge","## Meta -  OS:  Windows 10  Selenium Version:  3.0.0 beta, eclipse neon  Browser:  Firefox, Edge   Hi, my tests are working very good with chrome and the IE (very slow ;D ) but with the Edge and Firefox they didn¬¥t work. 1. issue with Firefox:    i get this error message  > org.openqa.selenium.UnsupportedCommandException: >  POST /session/3feae85e-0261-411c-bd0e-35161792d53e/moveto did not match a known command (WARNING: The server did not provide any stacktrace information)   `private static final String MENU_SELECTION = ""Fahrzeugb√∂rse"";`  `System.setProperty(""webdriver.gecko.driver"", ""mypath to/geckodriver.exe"");` `driver = new FirefoxDriver();` `driver.get(""http://www.unterberger.cc/de/""); `  `WebElement fb = driver.findElement(By.xpath("".//*[@title= '"" + MENU_SELECTION + ""']""));`  `// hover over menu entry, here triggers the exception` `(new Actions(driver)).moveToElement(fb).moveToElement(fb).build().perform();`  On chrome, Edge and IE there are no problems with this code.  --- 1. Issue with Edge  The hover over the Menu code from above works with Edge, but next the click on the submenu, throws this exception  > org.openqa.selenium.WebDriverException: Invalid argument (WARNING: The server did not provide any stacktrace information) > Command duration or timeout: 3 milliseconds > Build info: version: '3.0.0-beta3', revision: 'c7b525d', time: '2016-09-01 14:57:03 -0700' > System info: host: 'Design4', ip: '10.30.30.140', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_102' > Driver info: org.openqa.selenium.edge.EdgeDriver  ``` private static final String MENU_UNTERPUNKT = ""Gebrauchtwagen""; ```  `List listMenuCheck = driver.findElements(By.xpath("".//*[@id='model-link']""));`  ```     for (WebElement element : listMenuCheck)      {                if(element.getText().equalsIgnoreCase(MENU_UNTERPUNKT))         {                                            Assert.assertEquals(element.getAttribute(""title""), MENU_UNTERPUNKT);             (new Actions(driver).click(element)).build().perform();             break;         }     } ```  The element is visible but the click throws an exception.","closed","","Schwonsen","2016-09-14T14:10:43Z","2019-08-19T17:09:46Z"
"","2783","java.lang.reflect.InvocationTargetException thrown by MSEdge init","## Meta -  OS:  Windows 10  Selenium Version:  2.53.1  Browser:   MSEdge  Browser Version:   25.105886.0.0 ## Expected Behavior -  Browser should navigate to desaired page ## Actual Behavior -  Browser closes....Gri has below call stack. 11:21:53.174 WARN [20] org.openqa.selenium.remote.server.DriverServlet - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03' System info: host: 'mo-251272ca8', ip: '10.97.90.38', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.7.0_79' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:188)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:79)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)     at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)     at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)     at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)     at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)     at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)     at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)     at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)     at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)     at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03' System info: host: 'mo-251272ca8', ip: '10.97.90.38', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.7.0_79' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:113)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)     ... 9 more Caused by: org.openqa.selenium.WebDriverException: Unknown error (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 3.02 seconds Build info: version: '2.53.1', revision: 'a36b8b1', time: '2016-06-30 17:37:03' System info: host: 'mo-251272ca8', ip: '10.97.90.38', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.7.0_79' Driver info: org.openqa.selenium.edge.EdgeDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144)     at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:152)     at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:120) ## Steps to reproduce -  run any webtest that open a page on selenium grid.","closed","","shankarkc","2016-09-16T04:30:13Z","2019-08-19T16:10:02Z"
"","2411","Failed to connect to binary FirefoxBinary","## Meta -  OS:  Windows 10  Selenium Version:  2.53  Browser:  Firefox 47.01  Failed to lanuch the URL in Firefox browser.  Log: org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(C:\Program Files (x86)\Mozilla Firefox\firefox.exe) on port 7055; process output follows:  722 addons.xpi  DEBUG   Updating database with changes to installed add-ons 1467266392722   addons.xpi-utils    DEBUG   Updating add-on states 1467266392729   addons.xpi-utils    DEBUG   Writing add-ons list 1467266392746   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1467266392748   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1467266392749   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1467266392752   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1467266392756   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1467266392759   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1467266392834   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1467266392834   addons.manager  DEBUG   Provider finished startup: XPIProvider 1467266392834   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1467266392835   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1467266392835   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1467266392836   addons.manager  DEBUG   Starting provider: GMPProvider 1467266392856   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1467266392857   addons.manager  DEBUG   Provider finished startup: GMPProvider 1467266392857   addons.manager  DEBUG   Starting provider: PluginProvider 1467266392858   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1467266392859   addons.manager  DEBUG   Provider finished startup: PluginProvider 1467266392860   addons.manager  DEBUG   Completed startup sequence 1467266394751   addons.manager  DEBUG   Starting provider:  1467266394751   addons.manager  DEBUG   Registering shutdown blocker for  1467266394753   addons.manager  DEBUG   Provider finished startup:  1467266395358   DeferredSave.extensions.json    DEBUG   Write succeeded 1467266395359   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1467266395359   DeferredSave.extensions.json    DEBUG   Starting timer 1467266395399   DeferredSave.extensions.json    DEBUG   Starting write 1467266395428   addons.repository   DEBUG   No addons.json found. 1467266395430   DeferredSave.addons.json    DEBUG   Save changes 1467266395440   DeferredSave.addons.json    DEBUG   Starting timer 1467266395573   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1467266395574   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1467266395574   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1467266395587   DeferredSave.addons.json    DEBUG   Starting write 1467266395687   DeferredSave.extensions.json    DEBUG   Write succeeded 1467266395837   DeferredSave.addons.json    DEBUG   Write succeeded 1467266409576   addons.xpi  DEBUG   Calling bootstrap method shutdown on e10srollout@mozilla.org version 1.0 1467266409577   addons.xpi  DEBUG   Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.2 1467266409579   addons.xpi  DEBUG   Calling bootstrap method shutdown on loop@mozilla.org version 1.3.2 1467266410075   addons.manager  DEBUG   shutdown 1467266410077   addons.manager  DEBUG   Calling shutdown blocker for XPIProvider 1467266410078   addons.xpi  DEBUG   shutdown 1467266410079   addons.xpi-utils    DEBUG   shutdown 1467266410082   addons.manager  DEBUG   Calling shutdown blocker for LightweightThemeManager 1467266410085   addons.manager  DEBUG   Calling shutdown blocker for GMPProvider 1467266410116   addons.manager  DEBUG   Calling shutdown blocker for PluginProvider 1467266410117   addons.manager  DEBUG   Calling shutdown blocker for  1467266410125   addons.manager  DEBUG   Calling shutdown blocker for PreviousExperimentProvider 1467266410135   addons.xpi  DEBUG   Notifying XPI shutdown observers 1467266410145   addons.manager  DEBUG   Async provider shutdown done  Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'MIN-0915-228', ip: '10.10.10.198', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.7.0_79' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120)     at com.mize.core.DriverScript.launchBrowser(DriverScript.java:61)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)     at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)     at org.testng.TestRunner.privateRun(TestRunner.java:782)     at org.testng.TestRunner.run(TestRunner.java:632)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)     at org.testng.SuiteRunner.run(SuiteRunner.java:268)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)     at org.testng.TestNG.run(TestNG.java:1064)     at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: 722 addons.xpi  DEBUG   Updating database with changes to installed add-ons 1467266392722   addons.xpi-utils    DEBUG   Updating add-on states 1467266392729   addons.xpi-utils    DEBUG   Writing add-ons list 1467266392746   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\e10srollout@mozilla.org.xpi 1467266392748   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1467266392749   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\firefox@getpocket.com.xpi 1467266392752   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1467266392756   addons.xpi  DEBUG   Registering manifest for C:\Program Files (x86)\Mozilla Firefox\browser\features\loop@mozilla.org.xpi 1467266392759   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1467266392834   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1467266392834   addons.manager  DEBUG   Provider finished startup: XPIProvider 1467266392834   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1467266392835   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1467266392835   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1467266392836   addons.manager  DEBUG   Starting provider: GMPProvider 1467266392856   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1467266392857   addons.manager  DEBUG   Provider finished startup: GMPProvider 1467266392857   addons.manager  DEBUG   Starting provider: PluginProvider 1467266392858   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1467266392859   addons.manager  DEBUG   Provider finished startup: PluginProvider 1467266392860   addons.manager  DEBUG   Completed startup sequence 1467266394751   addons.manager  DEBUG   Starting provider:  1467266394751   addons.manager  DEBUG   Registering shutdown blocker for  1467266394753   addons.manager  DEBUG   Provider finished startup:  1467266395358   DeferredSave.extensions.json    DEBUG   Write succeeded 1467266395359   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1467266395359   DeferredSave.extensions.json    DEBUG   Starting timer 1467266395399   DeferredSave.extensions.json    DEBUG   Starting write 1467266395428   addons.repository   DEBUG   No addons.json found. 1467266395430   DeferredSave.addons.json    DEBUG   Save changes 1467266395440   DeferredSave.addons.json    DEBUG   Starting timer 1467266395573   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1467266395574   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1467266395574   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1467266395587   DeferredSave.addons.json    DEBUG   Starting write 1467266395687   DeferredSave.extensions.json    DEBUG   Write succeeded 1467266395837   DeferredSave.addons.json    DEBUG   Write succeeded 1467266409576   addons.xpi  DEBUG   Calling bootstrap method shutdown on e10srollout@mozilla.org version 1.0 1467266409577   addons.xpi  DEBUG   Calling bootstrap method shutdown on firefox@getpocket.com version 1.0.2 1467266409579   addons.xpi  DEBUG   Calling bootstrap method shutdown on loop@mozilla.org version 1.3.2 1467266410075   addons.manager  DEBUG   shutdown 1467266410077   addons.manager  DEBUG   Calling shutdown blocker for XPIProvider 1467266410078   addons.xpi  DEBUG   shutdown 1467266410079   addons.xpi-utils    DEBUG   shutdown 1467266410082   addons.manager  DEBUG   Calling shutdown blocker for LightweightThemeManager 1467266410085   addons.manager  DEBUG   Calling shutdown blocker for GMPProvider 1467266410116   addons.manager  DEBUG   Calling shutdown blocker for PluginProvider 1467266410117   addons.manager  DEBUG   Calling shutdown blocker for  1467266410125   addons.manager  DEBUG   Calling shutdown blocker for PreviousExperimentProvider 1467266410135   addons.xpi  DEBUG   Notifying XPI shutdown observers 1467266410145   addons.manager  DEBUG   Async provider shutdown done  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 33 more ```","closed","","pradeeppuchalapalli","2016-06-30T06:15:48Z","2019-08-18T11:09:35Z"
"","2593","FirefoxDriver: fireMouseEvent() rounds away precision in coordinates","## Meta -  OS:  Windows 10    Selenium Version: 2.53.1      Browser:  Firefox    Browser Version: 47.0.1   ## Expected Behavior -  A button that's only **partially** covered by another element should still be clickable. ## Actual Behavior -  Depending on the button's exact coordinates, it may or may not be clicked. ## Steps to reproduce -  Here's a JSFiddle: https://jsfiddle.net/e17Ldm77/  Let's assume you have a fairly large button with `position: absolute` and `left: 0.1px`. Let's further assume that the exact center of the button happens to be covered by another element. It's only the center that's covered, the button's four edges and corners are not covered.  In this case, `utils.js::Utils.getClickablePoint()` determines that the center of the button is unclickable. Instead, it returns the upper-left corner of the button which is **not** covered by the other element.  But when `syntheticMouse.js::SyntheticMouse.EventEmitter.prototype.fireMouseEvent()` calls `utils.sendMouseEventToWindow()`, it **rounds down** the x coordinate of the upper-left corner from `0.1px` to `0px`. So the mouse-click happens at `0.1px` left of where the button actually starts.","closed","D-firefox,","yoongu","2016-08-09T22:01:12Z","2019-08-14T14:09:47Z"
"","2693","-Dwebdriver.chrome.driver option throw an exception during seting up selenium Grid node","## Meta -  OS:  Windows 10    Selenium Version:  selenium-server-standalone-3.0.0-beta2    Browser:  Remote    Browser Version:     ## Expected Behavior -  Node is regestered to the hub ## Actual Behavior -  Node throwing exeption.  `C:\SeleniumServer>java -jar selenium-server-standalone-3.0.0-beta2.jar -role node -hub http://localhost:4444/grid/register -Dwebdriver.chrome.driver=""C:/chromedriver_win32/chromedriver.exe"" -Dwebdriver.gecko.driver=""C:/geckodriver/geckodriver.exe"" Exception in thread ""main"" com.beust.jcommander.ParameterException: Unknown option: -Dwebdriver.chrome.driver=C:/chromedriver_win32/chromedriver.exe         at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)         at com.beust.jcommander.JCommander.parse(JCommander.java:282)         at com.beust.jcommander.JCommander.parse(JCommander.java:265)         at com.beust.jcommander.JCommander.(JCommander.java:210)         at org.openqa.grid.selenium.GridLauncherV3$3.setConfiguration(GridLauncherV3.java:231)         at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:130)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:67)` ## Steps to reproduce -    1.Create simple hub: `java -jar selenium-server-standalone-3.0.0-beta2.jar -role hub` 2. Create simple node: `java -jar selenium-server-standalone-3.0.0-beta2.jar -role node -hub http://localhost:4444/grid/register -Dwebdriver.chrome.driver=""C:/chromedriver_win32/chromedriver.exe""`","closed","","semakd","2016-08-31T12:35:09Z","2019-08-19T18:09:53Z"
"","2721","Settings supplied via json are not applied when starting hub & node using selenium-server-standalone-3.0.0-beta2.jar","## Meta -  OS:  Windows 10    Selenium Version:  3.0.0-beta2    Browser:  N/A    Browser Version:     ## Expected Behavior -  Settings from hubConfig.json & nodeConfig.json are applied when starting selenium-server-standalone as hub or node (the attached hubConfig.json is set to run the hub on port 7777 with timeout:15 & browserTimeout:15, and nodeConfig.json is set to run the node on port 6666 with fairly standard settings) ## Actual Behavior -  The hub runs on port 4444 with default timeouts set and the node on 5555. There is no mention of the hubConfig.json settings under the 'the final configuration comes from' heading when viewing the Grid Console page ## Steps to reproduce -   1. Unpack the attached example.zip to any location on your machine 2. Run grid-hub.bat 3. Run grid-node.bat 4. Open http://localhost:4444/grid/console?config=true&configDebug=true ## Additional Info -  When swapping out selenium-server-standalone-3.0.0-beta2.jar for the 2.53.1 version (and changing the SELENIUM_VERSION value to 2.53.1 in both batch files), all settings in the json files are applied as expected when starting the hub & node The same behaviour is also seen when running with selenium-server-standalone-3.0.0-beta1.jar  [example.zip](https://github.com/SeleniumHQ/selenium/files/455622/example.zip)","closed","","blackburn-ian","2016-09-05T21:36:13Z","2019-08-18T09:09:57Z"
"","2586","Not able to select element from a select list using Select class in firefox 48","## Meta -  OS:  Windows 10    Selenium Version:  3.0.0-beta2    Browser:  Firefox (GECKODRIVER)    Browser Version:  48   ## Expected Behavior - I should be able to select element from select list using Select class ## Actual Behavior - I am not able to select element from a select list in firefox 48 where as it is working in chrome. ## Steps to reproduce -  Code for selecting :  Select select = new Select(driver.findElement(By.id(""edit-turnaround-time""))); select.selectByVisibleText(""Regular"")","closed","","deepaknik123","2016-08-09T11:47:28Z","2019-08-19T20:09:51Z"
"","2651","UnreachableBrowserException after completing the execution of @Test and @AfterTest.","## Meta -  OS:  Windows 10    Selenium Version:  3.0 Beta2    Browser:  Firefox 48.0.1    Browser Version:  48.0.1   ## Expected Behavior -Once @AfterTest execution is finished, test should be passed. ## Actual Behavior -[Child 12164] ###!!! ABORT: Aborting on channel error.: file c:/builds/moz2_slave/m-rel-w32-00000000000000000000/build/src/ipc/glue/MessageChannel.cpp, line 2046  Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 18.071 sec","closed","","amodmahajan2016","2016-08-23T07:00:33Z","2019-08-19T19:09:45Z"
"","2666","Can't execute JavaScript on an element with python","## Meta -  OS:  windows 10    Selenium Version:  2.53.6    Browser:  All,Python language, Anaconda    Browser Version:  All   ## Expected Behavior -  execute JavaScript on an element ## Actual Behavior -  ``` python 2016-08-25 16:34:41 ERROR  is not JSON serializable Traceback (most recent call last):   File ""framework\Element.py"", line 484, in execute_script     self.driver.execute_script(script, args)   File ""C:\Users\xxx\Anaconda2\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 465, in execute_script     'args': converted_args})['value']   File ""C:\Users\xxx\Anaconda2\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 234, in execute     response = self.command_executor.execute(driver_command, params)   File ""C:\Users\xxx\Anaconda2\lib\site-packages\selenium\webdriver\remote\remote_connection.py"", line 398, in execute     data = utils.dump_json(params)   File ""C:\Users\xxx\Anaconda2\lib\site-packages\selenium\webdriver\remote\utils.py"", line 34, in dump_json     return json.dumps(json_struct)   File ""C:\Users\xxx\Anaconda2\lib\json\__init__.py"", line 244, in dumps     return _default_encoder.encode(obj)   File ""C:\Users\xxx\Anaconda2\lib\json\encoder.py"", line 207, in encode     chunks = self.iterencode(o, _one_shot=True)   File ""C:\Users\xxx\Anaconda2\lib\json\encoder.py"", line 270, in iterencode     return _iterencode(o, 0)   File ""C:\Users\xxx\Anaconda2\lib\json\encoder.py"", line 184, in default     raise TypeError(repr(o) + "" is not JSON serializable"") TypeError:  is not JSON serializable ``` ## Steps to reproduce -    ``` python element = driver.find_element_by_id('p') driver.execute_script('arguments[0].setAttribute(""style"", ""color: red; border: 5px solid red;"");',element) ```","closed","","GoverSky","2016-08-25T09:22:05Z","2019-08-18T17:10:00Z"
"","2207","Inconsistent behavior when running IEServerDriver.exe","## Meta -  OS:  Windows 10    Selenium Version:  2.53.0    Browser:  IE    Browser Version:  11.306.10586.0   ## Expected Behavior -  when launching IEServer driver and navigating to url i'm able to find the element i'm looking for and click the button ## Actual Behavior -  when launching IEServerDriver.exe and navigating to a url i'm unable to find the element after repeating the test. setting enablenativeevents = true every other time enables the IEserverdriver to find the element. ## Steps to reproduce -     private InternetExplorerOptions options = new InternetExplorerOptions         {             PageLoadStrategy = InternetExplorerPageLoadStrategy.Eager,             EnableNativeEvents = false,             IgnoreZoomLevel = true,             RequireWindowFocus = false,             EnsureCleanSession = true,             EnablePersistentHover = false             //InitialBrowserUrl = baseURL         }; public void RunTests() { options.InitialBrowserUrl = """";             driver = new InternetExplorerDriver(options);  ```             driver.FindElement(By.Id(""QCB1_Button2"")).Click(); ```  }","closed","","v-krmo","2016-06-03T18:37:34Z","2019-08-20T04:09:50Z"
"","2024","Test Issue (delete me)","## Meta -  OS:  Windows 10    Selenium Version:  2.53.0    Browser:  Google Chrome    Browser Version:  49   ## Expected Behavior -  I expect this issue to be created successfully, and the comments above ^ to be omitted ## Actual Behavior - ## Steps to reproduce -  File an issue","closed","","ddavison","2016-04-28T20:11:43Z","2019-08-20T07:09:50Z"
"","2463","Element.Text doesn't include child text nodes","## Meta -  OS:  Windows 10    Selenium Version:  2.53    Browser:  Chrome    Browser Version:   51.0.2704.103   ## Expected Behavior -  Element.Text should return `Brown, Bob (bob.brown)` ## Actual Behavior -  It returns `Brown, Bob` ## Steps to reproduce -    Simply access the .Text property of the IWebElement in question.  Here's the html for the element:  ```                                                                 Brown, Bob (bob.brown)            ```  My workaround for the moment is to use jquery for the lookup, and .innerText.trim() to get the normalized text content.","closed","","distinctdan","2016-07-13T15:55:23Z","2019-08-19T22:10:02Z"
"","2561","Cannot upload file to selenium server on Win10","## Meta -  OS:  Windows 10    Selenium Version:  2.52.1 and 3.0.0 beta1    Browser:  Chrome    Browser Version:  52.0.2743.82   ## Case Description -  I need to upload a binary file with selenium python client. Basically, I should be able to use 'element.send_keys' to begin the upload process. But the upload failed. After reading the code in '/py/selenium/webdriver/remote/webelement.py', I find selenium client will firstly try to upload file to the selenium server if it finds the file locally. I think it is reasonable in most cases. However it cannot work correctly on Windows 10 (Windows 7 is fine). It always throws error 'Illegal base64 character'. Looks like the root cause should be here:          content = base64.encodestring(fp.getvalue())         if not isinstance(content, str):             content = content.decode('utf-8') ## Expected Behavior -  selenium client should upload both text and binary file to selenium server. ## Actual Behavior - 1. selenium client can upload text file to selenium server. 2. selenium client cannot upload binary file to selenium server. ## Steps to reproduce - 1. Run a case which is using 'element.send_keys' to upload a binary file 2. This binary file is located on selenium client but not the selenium server 3. Upload failed.","closed","","MrDefinite","2016-08-03T06:36:24Z","2019-08-19T17:09:57Z"
"","1891","Element not clickable using Selnium","## Meta -  OS:  Windows  Selenium Version:  2.53.0 Browser:   Firefox Browser Version: 43 ## Expected Behavior -  Button should be Clicked (Was working fine in older version of selenium 2.45.0) ## Actual Behavior -  Getting error : Element not clickable using Selenium ## Steps to reproduce -  When i try to click on the element (button/ checkbox) through webdriver it is not able to click. If i scroll to the element and execute that click method it is working. In the old version of selenium it was working fine. No need to scroll before calling click() method","closed","","Jairaj88","2016-03-29T10:03:47Z","2019-08-20T09:09:54Z"
"","2512","Firefox issue with selenium 2.53.1","## Meta -  OS:  Windows     Selenium Version:  2.53.1    Browser:  Firefox    Browser Version:  47   ## Expected Behavior -  It should run with Firefox.   ## Actual Behavior -  Currently I am using selenium 2.52.0 and it works fine with my application. To add support for latest browsers, We upgraded it to 2.53.1 and encountered lot of errors.  I can see there is total 9mb of diffrence in both .jar files. So can you give me list of dependencies you have removed form 2.53.1?  If i add them as external dependancy,there is possibility that my errors may have gone. ## Steps to reproduce -","closed","","hardi1501","2016-07-22T10:54:47Z","2019-08-19T22:09:35Z"
"","2487","Unable to use existing Firefox profile","## Meta -  OS:  Windows Selenium Version:  2.53.6 Browser:  Firefox Browser Version:  46.0.1 ## Expected Behavior -  Should be able to use an existing Firefox profile:  ``` >>> from selenium import webdriver >>> profile = webdriver.FirefoxProfile(r'C:\Users\Name\AppData\Local\Mozilla\Firefox\Profiles\df734jds.default') >>> profile.path 'C:\\Users\\Name\\AppData\\Local\\Mozilla\\Firefox\\Profiles\\df734jds.default' ``` ## Actual Behavior -  Instead selenium will create a temporary profile anyway:  ``` >>> from selenium import webdriver >>> profile = webdriver.FirefoxProfile(r'C:\Users\Name\AppData\Local\Mozilla\Firefox\Profiles\df734jds.default') >>> profile.path 'C:\\Users\\Name\\AppData\\Local\\Temp\\tmpa98ejaaa\\webdriver-py-profilecopy' ``` ## Steps to reproduce -  The above commands were run in Python 3.4.3","closed","","dirkbike","2016-07-19T02:44:38Z","2019-08-19T22:09:49Z"
"","2413","Upgrade from selenium 2.48 to Selenium 2.53 has missing class 'org.apache.commons.lang3.StringUtils'","## Meta -  OS:  Windows Selenium Version:  2.53 Browser:  Firefox ESR 38 ## Expected Behavior -  Should not have thrown below exception after  upgrade Caused by: java.lang.ClassNotFoundException: org.apache.commons.lang3.StringUtils     at java.net.URLClassLoader.findClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     at java.lang.ClassLoader.loadClass(Unknown Source)     ... 8 more ## Actual Behavior - ## Steps to reproduce -  I am using a java project with selenium stand alone jar 2.48 and just replaced the jar with latest 2.53","closed","","Preeti214","2016-06-30T16:27:50Z","2019-08-20T00:09:40Z"
"","2332","When a Windows client is killed, Grid nodes can leave sessions/browsers open indefinitely","## Meta -  OS:  Windows Selenium Version:  2.53 ## Expected Behavior -  When a client has disconnected for any reason, an attempt is _always_ made to cleanup the session on the remote node, at least by the expiration of the idle timeout. ## Actual Behavior -  If the Selenium Grid hub detects a client ""is gone"" or ""Socket timed out"", it terminates/frees the session on the Grid, but no attempt is made to delete the session on the remote node. This is handled in [RequestHandler.java:#L131-136](https://github.com/SeleniumHQ/selenium/blob/aee3d8790d021beb899110c774b13441399b14d9/java/server/src/org/openqa/grid/web/servlet/handler/RequestHandler.java#L131-136):  ``` java         } catch (ClientGoneException e) {           log.log(Level.WARNING, ""The client is gone for session "" + session + "", terminating"");           registry.terminate(session, SessionTerminationReason.CLIENT_GONE);         } catch (SocketTimeoutException e) {           log.log(Level.SEVERE, ""Socket timed out for session "" + session + "", "" + e.getMessage());           registry.terminate(session, SessionTerminationReason.SO_TIMEOUT); ```  [`registry.terminate()`](https://github.com/SeleniumHQ/selenium/blob/aee3d8790d021beb899110c774b13441399b14d9/java/server/src/org/openqa/grid/internal/Registry.java#L102-117) specifies this in the docstring:  ``` java   /**    * Ends this test session for the hub, releasing the resources in the hub / registry. It does not    * release anything on the remote. ```  This means sessions are left on the node and will never be cleaned up, which can cause dozens of web browsers left running eventually leading to resource exhaustion on the node and slow/failing tests. `maxSession` does not matter in this case.  We see this in our environment when our continuous integration server (TeamCity) kills a build on a Windows agent during a Selenium test, either manually or due to overrunning the allowed run time. ## Steps to reproduce -  I can _only_ reproduce this using Windows as a client, I am not sure if there's something different in the way it handles connections, or why exactly. I imagine it's possible on other OS, but not as easy to reproduce.  Since this is a Grid hub specific issue, there are a few steps: 1. Start a grid server with an idle timeout of 10 seconds:        ```    java -jar selenium-server-standalone-2.53.0.jar -role hub -timeout 10    ``` 2. Start a Grid node on the same machine:        ```    java -jar selenium-server-standalone-2.53.0.jar -role node    ``` 3. **On a Windows machine from command prompt** run a script equivalent to this (replace localhost with the Grid IP, if different):        ``` python    # Start a Grid session and browse to google.com 30 times    from selenium import webdriver        driver = webdriver.Remote('http://localhost:4444/wd/hub', {'browserName':'chrome'})    for i in range(30):       driver.get('http://www.google.com')    ``` 4. **While the script is running** close the terminal window (do **not** ctrl-c or kill the process)  You should see this in the log:  ``` 13:35:12.062 WARN - The client is gone for session ext. key 59d33b92-47ac-4b44-a5a1-b53e32b4455e ```  This means the session is freed on the Grid, but the session is left running on the node. You can confirm this by browsing to your node's URL (e.g. http://localhost:5555/wd/hub/static/resource/hub.html). ## Solutions -  I have a (very small) commit on my forked branch which removes the `session.terminate()` calls when handling these types of client disconnects - https://github.com/jessehudl/selenium/commit/fe5fafb392ba39d4af94448e068f7e7dff618c56  Removing the `session.terminate()` allows the Grid to clean up the sessions like it usually would - after the idle timeout has expired. If you re-run the ""Steps to reproduce"", you will see that after the client is gone, the session is still cleaned up after 10 seconds and the browser is closed on the node.  This is working well for us internally but I wanted to gain some insight from the core devs before submitting a PR: 1. Is there a reason these sessions are currently handled the way they are? 2. Is there a better way to clean them up? 3. Since 2.X development is closed, would this have to be submitted to 3.X?","closed","C-grid,","jessehudl","2016-06-21T18:35:03Z","2019-08-16T20:09:39Z"
"","2215","Backslashes get reduced to half","## Meta -  OS:  Windows Selenium Version:   Selenium IDE 2.9.1 (and any since 31st Mar 2006) Browser:  Firefox Browser Version:  any ## Expected and Actual Behavior -  Enter a new command:  ``` getEval | alert( '\\' ) ```  If you type `alert( '\\' )` in 'Target' text box, then in read-only Target column it becomes `alert( '\' )`. Even worse, when running that command, it fails - because it executes the version with half amount of backslashes: `alert('\')`.  A backslash should stay a backslash. There is no need to escape them in HTML test cases.  This is not a theoretical problem. SeLite SelBlocks Global provides Selenium.download(). It accepts a filepath to store the download. Windows uses backslash, and then this problem kicks in. ## Steps to reproduce -  As above.  This is caused by encodeText() and decodeText in treeView.js. That was introduced at https://github.com/SeleniumHQ/selenium/commit/697e11e20a178e7a4685ec85bc8ac8406754eafd. The commit comment mentioned SIDE-36, but I can't find that jira issue online.  Is there any explanation why that was thought to be needed, and for what it was a fix/workaround?   Was this for test cases exported to WebDriver - code Python, Java etc? If so, then would you refactor this to be be in the formatters (if at all), but not at for-all level, please.","closed","C-ide,","peter-kehl","2016-06-06T06:32:41Z","2019-08-17T17:09:34Z"
"","2351","Can anyone suggest, Selenium supports SAP application? if yes, How to work with through Selenium?","## Meta -  OS:  Windows    Selenium Version:      Browser:  IE and Firefox both    Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","siva2bunny","2016-06-24T03:00:25Z","2019-08-20T01:09:48Z"
"","2800","java.lang.OutOfMemoryError: Java heap space","## Meta -  OS:  Win7 Enterprise  Selenium Version:   Selenium.WebDriver.2.53.1 selenium-server-standalone-2.53.1 Browser:   Firefox  Browser Version:   47 ## Expected Behavior -  Initiate remote driver - ff ## Actual Behavior -  Java heap issue  ## Steps to reproduce -  This is my code snippet in C#  ```     private static FirefoxProfile GetFirefoxProfile()     {         FirefoxProfile profile = new FirefoxProfile();        FirefoxProfileManager mgr = new FirefoxProfileManager();         profile = mgr.GetProfile(""default"");         return profile;      }      private static IWebDriver GetRemoteDriver()     {          DesiredCapabilities cap =  DesiredCapabilities.Firefox();         var Profile = GetFirefoxProfile();         cap.SetCapability(FirefoxDriver.ProfileCapabilityName, Profile.ToBase64String());         cap.SetCapability(CapabilityType.BrowserName, ""firefox"");         cap.SetCapability(CapabilityType.Platform,""Windows 7"");         IWebDriver driver = new RemoteWebDriver(new Uri(""http:///wd/hub""), cap, TimeSpan.FromSeconds(180));         return driver;     } ```  But getting the java heap issue at the node  19:18:03.980 WARN - Error for /wd/hub/session java.lang.OutOfMemoryError: Java heap space         at java.util.Arrays.copyOf(Unknown Source)         at java.lang.AbstractStringBuilder.expandCapacity(Unknown Source)         at java.lang.AbstractStringBuilder.ensureCapacityInternal(Unknown Source )         at java.lang.AbstractStringBuilder.append(Unknown Source)         at java.lang.StringBuffer.append(Unknown Source)         at java.io.StringWriter.write(Unknown Source)         at com.google.gson.stream.JsonWriter.string(JsonWriter.java:561)         at com.google.gson.stream.JsonWriter.value(JsonWriter.java:419)         at com.google.gson.internal.bind.TypeAdapters$25.write(TypeAdapters.java :690)         at com.google.gson.internal.bind.TypeAdapters$25.write(TypeAdapters.java :704)         at com.google.gson.internal.bind.TypeAdapters$25.write(TypeAdapters.java :642)         at com.google.gson.internal.Streams.write(Streams.java:68)         at com.google.gson.JsonElement.toString(JsonElement.java:324)         at java.lang.String.valueOf(Unknown Source)         at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConv erter.java:89)         at org.openqa.selenium.remote.JsonToBeanConverter.convertMap(JsonToBeanC onverter.java:344)         at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConv erter.java:215)         at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConv erter.java:43)         at org.openqa.selenium.remote.http.JsonHttpCommandCodec.decode(JsonHttpC ommandCodec.java:274)         at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleReques t(JsonHttpCommandHandler.java:74)        at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverS ervlet.java:204)         at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet. java:166)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)         at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet .java:132)         at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)         at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.jav a:428)         at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler .java:680)         at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.j ava:571)         at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)         at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)         at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)         at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)","closed","","debasisj","2016-09-20T09:32:10Z","2019-08-19T16:09:38Z"
"","2163","Webdriver cannot continue execute JS script on firefox on 2.53 version","## Meta -  OS:  win7 64    Selenium Version: 2.53.0      Browser:  firefox    Browser Version:   43.0.4 64 bit   ## Expected Behavior -  When I run a JS script in selenium, the parameter is larger. The firefox pop up  an alert message box, warning me to continue,debug or ignore. I want to continue run the scripts to get the right response. I set the webdriver as :  capability = DesiredCapabilities.firefox();  capability.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR,UnexpectedAlertBehaviour.ACCEPT);  But it is not work, the ACCEPT is to monitor the text in the browser. In selenium the relation text as follow:   ACCEPT (""accept""),   DISMISS (""dismiss""),   IGNORE (""ignore"")   There is no ""Continue"" options..... ## Actual Behavior - ## Steps to reproduce -","closed","","RalfWang","2016-05-26T04:44:55Z","2019-08-19T09:10:02Z"
"","2069","Feature request: support phantomjs-prebuilt in selenium-webdriver","## Meta -  OS:  Win32    Selenium Version:  2.53.2    Browser:  phantomjs, which installed by `npm install phantomjs-prebuilt`    Browser Version:  2.1.7   ## Expected Behavior -  ``` bash npm install selenium-webdriver npm install phantomjs-prebuilt ```  node js source  ``` javascript const driver = new WebDriver.Builder() .withCapabilities(   WebDriver.Capabilities.phantomjs() ).build() ```  should find phantomjs executable, and return success. ## Actual Behavior -  cant find phantomjs executable.  ``` test\node_modules\selenium-webdriver\phantomjs.js:80     throw Error(     ^  Error: The PhantomJS executable could not be found on the current PATH. Please download the latest version from http://phantomjs.org/download.html and ensure it can be found on your PATH. For more information, see https://github.com/ariya/phantomjs/wiki     at Error (native)     ... ``` ## Steps to reproduce -    step 1. open cmd window step 2. run  ``` bash mkdir test cd test npm install selenium-webdriver npm install phantomjs-prebuilt ```  step 3. then run this node js source    ``` const WebDriver = require('selenium-webdriver') const driver = new WebDriver.Builder() .withCapabilities(   WebDriver.Capabilities.phantomjs() ).build() ```  step 4. webdriver said that cant find phantomjs executable.    ## Steps to quick fix -  step 1. find executable installed by phatomjs-prebuilt in node_modules.bin  ```   D:\test>dir node_modules\.bin\phantomjs*    node_modules\.bin ÁöÑÁõÆÂΩï    2016/05/09  11:59               335 phantomjs   2016/05/09  11:59               212 phantomjs.cmd ```  step 2. reason: in selenium-webdriver/phantomjs.js:  ``` javascript   const PHANTOMJS_EXE =       process.platform === 'win32' ? 'phantomjs.exe' : 'phantomjs'; ```    it only find .exe . but the phantomjs-prebuilt installed executable name is `.cmd` step 3. fix: add `.cmd` to search `io.findPath`:  ``` javascript function findExecutable(opt_exe) {   const PHANTOMJS_CMD = 'phantomjs.cmd'   var exe = opt_exe || io.findInPath(PHANTOMJS_EXE, true) || io.findInPath(PHANTOMJS_CMD, true); ```","closed","I-enhancement,","huan","2016-05-09T05:02:55Z","2019-08-17T21:09:58Z"
"","2377","Selenium 3 : Virtual - Webdriver unable to switchto iframe","## Meta -  OS:  Win 8.1    Selenium Version:  Selenium Beta 3    Browser:  FF    Browser Version:  45.0.2   ## Expected Behavior -  Switchto iframe functionality should work. ## Actual Behavior -  Webdriver unable to switchto iframe and instead execute action on previous element. ## Steps to reproduce -    driver.switchTo().frame(driver.findElement(By.xpath(MailBody_Frame))); try {                   WebDriverWait wait = new WebDriverWait(driver, 10);                   WebElement element = wait.until(ExpectedConditions                               .visibilityOfElementLocated(mailBody_Txt));             //    return element;             } catch (Exception e) {                   WebElement element = driver.findElement(mailBody_Txt);                   safeJavaScriptClick(mailBody_Txt);       //          return element;             } Element. getText();","closed","D-firefox,","naukri-engineering","2016-06-25T07:17:20Z","2019-08-16T17:09:34Z"
"","2380","Selenium 3 : Virtual - Suggestion: Support for Windows Popup","## Meta -  OS:  Win 8.1    Selenium Version:  Selenium Beta 3    Browser:  FF    Browser Version:  40   ## Expected Behavior -  We should allow support for Windows popUp's ## Actual Behavior -  No Support Available as of now.","closed","","naukri-engineering","2016-06-25T09:57:23Z","2019-08-19T10:09:48Z"
"","2379","Selenium 3 : Virtual - Debugging Issue with FF 40","## Meta -  OS:  Win 8.1    Selenium Version:  Selenium 3 Beta    Browser: FF     Browser Version:  40.0.3    Eclipse Version: Kepler Service Release 2 ## Expected Behavior -  User should be able to use the ‚ÄúDisplay‚Äù and ‚ÄúWatch‚Äù feature while Debugging. ## Actual Behavior -  User not able to use the ‚ÄúDisplay‚Äù and ‚ÄúWatch‚Äù feature while Debugging. ## Steps to reproduce -    1)  Put debugger on  a Test Step in your case (using Eclipse) where you are finding an element 2)  Select that part of LOC 3)  Right click and Select ‚ÄúDisplay‚Äù option and observe that result is not shown.  Note: Same is working fine with Chrome 47 ## Stack Trace -  1466847802291 Marionette    TRACE  conn0 -> [0,44,""findElement"",{""using"":""xpath"",""value"":""//nav[@id='navId']//a[contains(text(),'My Referrals')]""}] 1466847802294 Marionette    TRACE  conn0  [0,45,""getElementText"",{""id"":""4aea0203-13d8-4659-bbcb-fc14261693de""}] 1466847802306 Marionette    TRACE  conn0  [0,46,""findElement"",{""using"":""xpath"",""value"":""//nav[@id='navId']//a[contains(text(),'My Referrals')]""}] 1466847802393 Marionette    TRACE  conn0  [0,47,""findElement"",{""using"":""xpath"",""value"":""//nav[@id='navId']//a[contains(text(),'My Referrals')]""}] 1466847802411 Marionette    TRACE  conn0  [0,48,""findElement"",{""using"":""xpath"",""value"":""//nav[@id='navId']//a[contains(text(),'My Referrals')]""}] 1466847802429 Marionette    TRACE  conn0  [0,49,""getElementText"",{""id"":""4aea0203-13d8-4659-bbcb-fc14261693de""}] 1466847802454 Marionette    TRACE  conn0","closed","","naukri-engineering","2016-06-25T09:48:46Z","2019-08-19T10:09:47Z"
"","2365","Selenium 3 : Virtual - driver.manage().window().fullscreen() throwing org.openqa.selenium.UnsupportedCommandException","## Meta -  OS:  Win 8.1    Selenium Version:  Selenium 3 Beta    Browser:  FF     Browser Version:  30   ## Expected Behavior -  driver.manage().window().fullscreen(); should not throw exception. ## Actual Behavior -  driver.manage().window().fullscreen(); function throws exception after opening the page in full window.  ## Steps to reproduce -  1) Try using driver.manage().window().fullscreen() function in any of your project. 2) Execute the script. ## Stack Trace-  org.openqa.selenium.UnsupportedCommandException: POST /session/2bec213d-fb74-49cf-92f9-664ecd567843/window/fullscreen did not match a known command (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 8 milliseconds Build info: version: '2.42.2', revision: '75f266f', time: '2014-07-30 09:11:33' System info: host: 'nd0308002035289', ip: '192.168.172.151', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_65' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, appBuildId=20160604131506, version=, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=47.0, platformVersion=6.3, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: 2bec213d-fb74-49cf-92f9-664ecd567843                 at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)                 at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)                 at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)                 at java.lang.reflect.Constructor.newInstance(Unknown Source)                 at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)                 at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)                 at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)                 at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:706)                 at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.fullscreen(RemoteWebDriver.java:958)                at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)                 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)                 at java.lang.reflect.Method.invoke(Unknown Source)                 at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)                 at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)                 at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)                 at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)                 at org.testng.TestRunner.beforeRun(TestRunner.java:641)                 at org.testng.TestRunner.run(TestRunner.java:609)                 at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)                 at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)                 at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)                 at org.testng.SuiteRunner.run(SuiteRunner.java:240)                 at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)                 at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)                 at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)                 at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)                 at org.testng.TestNG.run(TestNG.java:1057)                 at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)                 at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)                 at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)","closed","D-firefox,","naukri-engineering","2016-06-24T15:16:56Z","2019-08-18T02:09:45Z"
"","2375","Selenium 3 : Virtual - FF version specified in FirefoxBinary should get opened while script execution","## Meta -  OS:  Win 8.1    Selenium Version:  Selenium 3 Beta    Browser:  FF    Browser Version:  40   ## Expected Behavior -  FF version specified in FirefoxBinary should get opened while script execution. ## Actual Behavior -  Script getting executed on Default/installed FF version instead of  FF version specified in FirefoxBinary. ## Steps to reproduce -    Used following code:  FirefoxProfile profile = new FirefoxProfile(); profile.setAcceptUntrustedCertificates(true);  profile.setAssumeUntrustedCertificateIssuer(false); System.setProperty(""webdriver.gecko.driver"", ""D:\jars\geckodriver.exe""); driver = new FirefoxDriver(new FirefoxBinary(new File(""D:\MozillaVersions\Mozilla Firefox40\firefox.exe"")), profile);  ## Stack Trace-  [TestNG] Running:  log4j:WARN No appenders could be found for logger (org.apache.http.client.protocol.RequestAddCookies). log4j:WARN Please initialize the log4j system properly. 1466837249941 Marionette    DEBUG  Marionette enabled via build flag and pref 1466837250500 Marionette    INFO   Listening on port 2828 1466837251584 Marionette    DEBUG  Accepted connection conn0 from 127.0.0.1:50498 1466837251611 Marionette    TRACE  conn0 -> [0,1,""newSession"",{""capabilities"":{""desiredCapabilities"":{""browserName"":""firefox"",""platform"":""ANY"",""version"":""""},""requiredCapabilities"":{}},""sessionId"":null}] 1466837251612 Marionette    CONFIG Changing capabilities: {""browserName"":""Firefox"",""browserVersion"":""47.0"",""platformName"":""Windows_NT"",""platformVersion"":""6.3"",""specificationLevel"":0,""raisesAccessibilityExceptions"":false,""rotatable"":false,""acceptSslCerts"":false,""takesElementScreenshot"":true,""takesScreenshot"":true,""proxy"":{},""platform"":""WINDOWS_NT"",""XULappId"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""appBuildId"":""20160604131506"",""device"":""desktop"",""version"":""""} 1466837252963 Marionette    DEBUG  loaded listener.js 1466837252966 Marionette    DEBUG  loaded listener.js 1466837253272 Marionette    TRACE  conn0  [0,2,""timeouts"",{""ms"":15000,""type"":""implicit""}] 1466837253322 Marionette    TRACE  conn0  [0,3,""maximizeWindow"",{}] 1466837253352 Marionette    TRACE  conn0  [0,4,""get"",{""url"":""https://testcompany.referralrecruit.com""}] 1466837255534 Marionette    TRACE  conn0  [0,5,""findElement"",{""using"":""xpath"",""value"":""//input[@id='emailId']""}] 1466837255554 Marionette    TRACE  conn0  [0,6,""sendKeysToElement"",{""id"":""07ff304c-87a3-4eb4-a5dd-a004741e25f1"",""value"":[""a"",""n"",""k"",""u"",""r"",""."",""g"",""u"",""p"",""t"",""a"",""1"",""@"",""n"",""a"",""u"",""k"",""r"",""i"",""."",""c"",""o"",""m""]}] 1466837255567 Marionette    DEBUG  Element does not have an accessible object: id: emailId, tagName: INPUT, className: text-input ie7Fix width94 1466837255615 Marionette    TRACE  conn0  [0,7,""findElement"",{""using"":""xpath"",""value"":""//input[@id='pwd']""}] 1466837255633 Marionette    TRACE  conn0  [0,8,""sendKeysToElement"",{""id"":""c73074ca-6912-461a-a9b2-086a96621afc"",""value"":[""1"",""2"",""3"",""4"",""5"",""6""]}] 1466837255642 Marionette    DEBUG  Element does not have a correct accessibility role and may not be manipulated via the accessibility API: id: pwd, tagName: INPUT, className: text-input ie7Fix width94 1466837255673 Marionette    TRACE  conn0  [0,9,""findElement"",{""using"":""xpath"",""value"":""//button[@id='loginBtn']""}] 1466837255680 Marionette    TRACE  conn0  [0,10,""clickElement"",{""id"":""472d5d28-2443-4095-a650-dad1311beb41""}] 1466837255731 Marionette    TRACE  conn0  [0,11,""refresh"",{}] 1466837261908 Marionette    TRACE  conn0  [0,12,""findElement"",{""using"":""xpath"",""value"":""//div[@class='userDetails']//p""}] 1466837265944 Marionette    TRACE  conn0  [0,13,""getElementText"",{""id"":""36955eed-550b-4909-876c-0e4165ee0dcc""}] 1466837265960 Marionette    TRACE  conn0  [0,14,""timeouts"",{""ms"":500,""type"":""implicit""}] 1466837265965 Marionette    TRACE  conn0  [0,15,""findElements"",{""using"":""xpath"",""value"":""//nav[@id='navId']""}] 1466837265973 Marionette    TRACE  conn0  [0,16,""timeouts"",{""ms"":10000,""type"":""implicit""}] 1466837265982 Marionette    TRACE  conn0  [0,17,""quitApplication"",{""flags"":[""eForceQuit""]}] 1466837265992 Marionette    TRACE  conn0","closed","","naukri-engineering","2016-06-25T07:03:45Z","2019-08-20T01:09:37Z"
"","2366","Selenium 3 : Virtual - Browser Window Restore's Down on execution of driver.manage().window().maximize(); function.","## Meta -  OS:  Win 8.1    Selenium Version:  Selenium 3    Browser:  FF    Browser Version:  30   ## Expected Behavior -  Browser Window should get maximized on execution of driver.manage().window().maximize(); function. ## Actual Behavior -  Browser Window Restore's Down on execution of driver.manage().window().maximize(); function. ## Steps to reproduce -  1) Try using driver.manage().window().maximize() function in any of your project. 2) Execute the script.","closed","","naukri-engineering","2016-06-24T15:28:46Z","2019-08-20T01:09:40Z"
"","2363","Selenium 3 : Virtual - org.apache not compatible with selenium 3","## Meta -  OS:  Win 8    Selenium Version:  Selenium Beta 3    Browser:  NA    Browser Version:NA      ## Expected Behavior -  org.apache should be compatible with selenium 3 ## Actual Behavior -  org.apache not compatible with selenium 3 ## Steps to reproduce -    Try to use org.apache in any project","closed","","naukri-engineering","2016-06-24T13:16:58Z","2019-08-20T01:09:43Z"
"","2362","Selenium 3 : Virtual - FileUtils class not supported in Selenium 3","## Meta -  OS:  Win 8    Selenium Version:  Selenium 3 Beta    Browser:  NA    Browser Version:  NA   ## Expected Behavior -  FileUtils class should be available in selenium jars. ## Actual Behavior -  FileUtils class not available in selenium jars. ## Steps to reproduce -    Try to use FileUtils class in any project","closed","","naukri-engineering","2016-06-24T13:12:00Z","2019-08-20T00:09:36Z"
"","2364","Selenium 3 : Virtual - org.bouncycastle class not compatible with selenium 3","## Meta -  OS:  Win 8    Selenium Version:  Selenium 3    Browser:  NA    Browser Version:  NA   ## Expected Behavior -  org.bouncycastle class not compatible with selenium 3 ## Actual Behavior -  org.bouncycastle class should be compatible with selenium 3 ## Steps to reproduce -  Try to use org.bouncycastle class in any project","closed","","naukri-engineering","2016-06-24T13:31:21Z","2019-08-20T01:09:42Z"
"","2357","Selenium 3: if Marionette Session gets closed in between tests then the Exception generated doesn't tell connection has been closed or something like that","## Meta -  OS:  Win 7 64    Selenium Version: Selenium 3 Beta      Browser:  Firefox 47    Browser Version:     ## Expected Behavior -  It should Generated Exception clearly display that Connection is closed or Something like that ## Actual Behavior -  Exception Generated in this Case org.openqa.selenium.WebDriverException: Failed to decode response from marionette (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 19 milliseconds Build info: version: '2.42.2', revision: '75f266f', time: '2014-07-30 09:11:33' System info: host: 'NOI1-CIS616', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_73' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, appBuildId=20160604131506, version=47.0, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=47.0, platformVersion=6.1, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: c0018882-0a3a-45f7-8a48-43fca8499b7b **\* Element info: {Using=css selector, value=#username}     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:422)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:377)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:498)     at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:429)     at org.openqa.selenium.By$ById.findElement(By.java:218)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:369) ## Steps to reproduce -    Start your Test Click Marionette instance in between your tests WebDriver will generate this exception and exit","closed","","abhinav1708","2016-06-24T12:00:23Z","2019-08-19T10:09:44Z"
"","2360","Selenium 3: No such Method Exception generated for MoveToElement function using Marionette Driver","## Meta -  OS:  Win 7 64    Selenium Version:  Selenium 3 Beta    Browser:  Firefox 47    Browser Version:     ## Expected Behavior -  Move to Element should work ## Actual Behavior -  Generates exception no Such Method ## Steps to reproduce -    Sample Code to reproduce Actions builder=new Actions(driver);         builder.moveToElement(element).build().perform();","closed","","abhinav1708","2016-06-24T13:01:40Z","2019-08-18T04:10:03Z"
"","2361","Selenium 3: Firefox(Marionette) Sessions doesn't run in Isolation","## Meta -  OS:  Win 7 64    Selenium Version:  Selenium 3 Beta    Browser:  Firefox 47    Browser Version:     ## Expected Behavior -  Browser Sessions should run in isolation independent of each other ## Actual Behavior -  When we run new Test it reuses the previously opened Session and also launches another firefox session with only FireFox first use Page ## Steps to reproduce -    Run your Test Stop your Test in between - Don't close Session Re run Test  it will use already opened Session and launches a browser session Firefox first use page","closed","","abhinav1708","2016-06-24T13:08:11Z","2019-08-19T10:09:45Z"
"","2372","Selenium 3: Information Request: org.openqa.selenium.server Class does not exist","## Meta -  OS:  Win 7 64    Selenium Version:  3 beta    Browser:  Firefox 47    Browser Version:     ## Expected Behavior - ## Actual Behavior -  org.openqa.selenium.server Class does not exist, Yes there is no Selenium Core but I think in the talk it was mentioned that Selenium core will be supported by emulators or something like that This is more of a request how the Server part will be supported  ## Steps to reproduce -","closed","","abhinav1708","2016-06-25T05:34:06Z","2019-08-19T23:09:54Z"
"","2368","Selenium 3: Proxy not working with Firefox Driver (Marionette)","## Meta -  OS:  Win 7 64    Selenium Version:  3 Beta    Browser:  Firefox 47    Browser Version:     ## Expected Behavior -  Traffic should go through Specified Proxy ## Actual Behavior -  It is not using the Specified proxy and performing web Actions Directly ## Steps to reproduce -    Sample Code to reproduce  ```  String prx=""localhost:3128"";        Proxy proxy = new Proxy();       proxy.setHttpProxy(prx).setFtpProxy(prx).setSslProxy(prx);       DesiredCapabilities des= new DesiredCapabilities();       des.setCapability(CapabilityType.PROXY,proxy);      driver = new FirefoxDriver(des); ```","closed","","abhinav1708","2016-06-24T17:49:52Z","2019-08-20T01:09:40Z"
"","2373","Selenium 3: Firefox 47 getting Crashed with Selenium 3 Beta Jar","## Meta -  OS:  Win 7 64    Selenium Version:  3 Beta    Browser:  FireFox 47    Browser Version:     ## Expected Behavior -  Firefox Should Launch Successfully ## Actual Behavior -  Firefox Crashes while Launching Exception Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '2.42.2', revision: '75f266f', time: '2014-07-30 09:11:33' System info: host: 'NOI1-CIS616', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_73' Driver info: driver.version: Driver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:670)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:247)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:131) ## Steps to reproduce -    Set Marionette Capability to false and Launch Firefox Driver Sample Code  ``` DesiredCapabilities des = new DesiredCapabilities();         des.setCapability(FirefoxDriver.MARIONETTE, false);         driver = new FirefoxDriver(des); ```","closed","","abhinav1708","2016-06-25T05:58:44Z","2019-08-20T01:09:38Z"
"","2378","Selenium 3: Improvement Suggestion: If Element is not visible or Hidden by some Popup then Exception generated can be changed to Provide better info","## Meta -  OS:  Win 7 64    Selenium Version:  3 beta    Browser:  Firefox 45    Browser Version:     ## Expected Behavior -  Exception can be improved to explicitly state that Element is not visible for interaction ## Actual Behavior -  When we pass a click action for an element and if it is not visible or hidden by some popup then Exception is org.openqa.selenium.WebDriverException: Element is not clickable at point (839, 147). Other element would receive the click: <input tabindex=""4"" name=""refId1"" id=""refId1Add"" style=""width:230px;vertical-align: middle;"" maxlength=""250"" class=""textField"" type=""text"" align=""left""> ## Steps to reproduce -","closed","","abhinav1708","2016-06-25T08:43:44Z","2019-08-19T10:09:46Z"
"","2359","Selenium 3: Time and Version of Selenium 3 Beta Jar is Incorrect","## Meta -  OS:  Win 7    Selenium Version:  Selenium    Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior -  console displays version: '2.42.2', revision: '75f266f', time: '2014-07-30 09:11:33' JAR METAINF also displays this information ## Steps to reproduce -","closed","","abhinav1708","2016-06-24T12:59:50Z","2019-08-20T01:09:33Z"
"","2645","Unable to launch firefox 48 with custom profile using Geckodriver","## Meta -  OS:  Win 10 x64    Selenium Version:   3.0 Browser:   Firefox    Browser Version:      Firefox 48.0.1 ## Expected Behavior -  geckoriver should launch Firefox48 with custom profile ## Actual Behavior -  geckodriver still launches Firefox with new profile ## Steps to reproduce -  01: Zip default profile folder  02: Getting default profile location  string prof = (@""...\AppData\Roaming\Mozilla\Firefox\Profiles\6uqm9vnl.default.zip"");  03: Converting to base64-encoded string var prof1 = System.Text.Encoding.UTF8.GetBytes(prof); var prof2 = System.Convert.ToBase64String(prof1); FirefoxProfile profile = new FirefoxProfile(prof2);  04: Initializing FirefoxDriver new FirefoxDriver(profile);","closed","D-marionette,","furqanmlk","2016-08-22T17:59:39Z","2019-08-17T14:09:40Z"
"","2730","Selenium And Prebid V12 Header Bidding","## Meta -  OS:  W7    Selenium Version:  2.53.1 , 2.53    Browser:  FF 47, FF 43    Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -     [Selenium_Prebid.docx](https://github.com/SeleniumHQ/selenium/files/457783/Selenium_Prebid.docx)","closed","","pbasin","2016-09-06T21:02:18Z","2019-08-19T18:09:37Z"
"","2088","Python - ""Connection refused"" exception during wait and repeated script execution","## Meta -  OS:  Ubuntu 16.04 x64    Selenium Version:  2.53.2 (Python 3)    Browser:  Google Chome and Firefox    Browser Version:  46.0 and 50.0.2661.94   ## Expected Behavior -  No ""[Errno 111] Connection refused"" exception to be raised. ## Actual Behavior -  ""[Errno 111] Connection refused"" exception is raised. ## Steps to reproduce -    I can't provide a small example because the issue doesn't consistently occur, it's quite sporadic.  The best I can provide is a stack trace:  ```   File ""my_client_code.py"", line 21, in _record_id_present     'return !!$("".tab_window_form"").attr(""data-record_id"")')   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 461, in execute_script     {'script': script, 'args':converted_args})['value']   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/webdriver.py"", line 231, in execute     response = self.command_executor.execute(driver_command, params)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/remote_connection.py"", line 395, in execute     return self._request(command_info[0], url, body=data)   File ""/usr/local/lib/python3.5/dist-packages/selenium/webdriver/remote/remote_connection.py"", line 425, in _request     self._conn.request(method, parsed_url.path, body, headers)   File ""/usr/lib/python3.5/http/client.py"", line 1106, in request     self._send_request(method, url, body, headers)   File ""/usr/lib/python3.5/http/client.py"", line 1151, in _send_request     self.endheaders(body)   File ""/usr/lib/python3.5/http/client.py"", line 1102, in endheaders     self._send_output(message_body)   File ""/usr/lib/python3.5/http/client.py"", line 934, in _send_output     self.send(msg)   File ""/usr/lib/python3.5/http/client.py"", line 877, in send     self.connect()   File ""/usr/lib/python3.5/http/client.py"", line 849, in connect     (self.host,self.port), self.timeout, self.source_address)   File ""/usr/lib/python3.5/socket.py"", line 711, in create_connection     raise err   File ""/usr/lib/python3.5/socket.py"", line 702, in create_connection     sock.connect(sa) [Errno 111] Connection refused ```  So I'm calling `WebDriver.execute_script()` (checking if an element has a certain attribute value), from a `WebDriverWait.until()`.  It affects both Chrome and Firefox, so I'm guessing that rules out issues with the web drivers and places the blame on Selenium, somehow.  If it helps, the issue usually arises when I max out of my CPU cores with parallel processes of differing client code (which all do the same wait condition, at various stages, multiple times).","closed","","begincalendar","2016-05-12T07:48:14Z","2019-08-16T17:10:03Z"
"","2663","Using Selenium with PhantonJS","## Meta -  OS:  Ubuntu 16.04 Selenium Version: Python-Selenium 2.47.1   Browser:  PhantonJS  Browser Version:  2.1.1 64bit  I'm trying to run my Python Selenium testing with PhantomJS but I came across several issues. The first test is very basic, but this is how I used to use I think  ``` python from selenium import webdriver driver = webdriver.PhantomJS() ``` ## Expected Behavior - ## Actual Behavior -  And I receive below stacktrace  ``` Traceback (most recent call last):   File ""test.py"", line 3, in      driver = webdriver.PhantomJS()   File ""/home/someone/bin/pyvenv-3.5/lib/python3.5/site-packages/selenium/webdriver/phantomjs/webdriver.py"", line 56, in __init__     desired_capabilities=desired_capabilities)   File ""/home/someone/bin/pyvenv-3.5/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 87, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/home/someone/bin/pyvenv-3.5/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 136, in start_session     'desiredCapabilities': desired_capabilities,   File ""/home/someone/bin/pyvenv-3.5/lib/python3.5/site-packages/selenium/webdriver/remote/webdriver.py"", line 196, in execute     self.error_handler.check_response(response)   File ""/home/someone/bin/pyvenv-3.5/lib/python3.5/site-packages/selenium/webdriver/remote/errorhandler.py"", line 102, in check_response     value = json.loads(value_json)   File ""/usr/lib/python3.5/json/__init__.py"", line 319, in loads     return _default_decoder.decode(s)   File ""/usr/lib/python3.5/json/decoder.py"", line 339, in decode     obj, end = self.raw_decode(s, idx=_w(s, 0).end())   File ""/usr/lib/python3.5/json/decoder.py"", line 357, in raw_decode     raise JSONDecodeError(""Expecting value"", s, err.value) from None json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0) ```  Any help is appreciate!","closed","","YuanZheCSYZ","2016-08-25T06:22:01Z","2019-08-19T13:09:49Z"
"","2169","ActionChains - drag_and_drop, move_to_element and release fail - minimal code sample provided - Chrome and Firefox","## Meta -  OS:  Ubuntu 16.04 Selenium Version: 2.53.2 Browser: Google Chrome,Firefox Browser Version: Chrome 50.0.2661.102 (64-bit), FIrefox 46.0.1 ## Expected Behavior -  Please see ""expected behavior"" comments in the Python code below. ## Actual Behavior -  Please see ""actual behavior"" comments in the Python code below. ## Steps to reproduce -  Unzip drag_test.zip, which will give you two files, test.py and test.html. Put both files in the same directory and execute test.py. WebDriver will open two Chrome windows and two Firefox windows. Each one will demonstrate a problem with one or more of the ActionChains methods.  Here are links to some similar problem reports on StackOverflow and GitHub http://stackoverflow.com/questions/36705738/selenium-move-mouse-to-element-doesnt-work https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/1835 http://stackoverflow.com/questions/36705738/selenium-move-mouse-to-element-doesnt-work https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/7520 https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/6468  [drag_test.zip](https://github.com/SeleniumHQ/selenium/files/285060/drag_test.zip)","closed","D-firefox,","steve-swipetospin","2016-05-26T18:37:04Z","2019-08-19T21:09:53Z"
"","2150","selenium window().setSize beyond current resolution","## Meta -  OS:  Ubuntu 16.04 Selenium Version:  2.53.0 Browser:  Chrome Browser Version:  49.0.2623.110 (64-bit) ## Expected Behavior -  driver.manage().window().setSize(new Dimension(width, height)); This line should resize the browser to any dimension, but if you use a height beyond your pc resolution, it just maximizes the browser instead of using the desired size. ## Actual Behavior -  Now the browser just resize to your pc resolution ## Steps to reproduce -  ``` package com.bbva.crawler.selenium;  import java.io.File; import java.io.IOException;  import org.apache.commons.io.FileUtils; import org.openqa.selenium.Dimension; import org.openqa.selenium.OutputType; import org.openqa.selenium.Point; import org.openqa.selenium.TakesScreenshot; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class App1 {     public static WebDriver driver;     public static String seed = ""http://www.google.com"";      private final static int DEFAULT_WIDTH = 1280;     private final static int DEFAULT_HEIGHT = 500;      public static void main(String[] args) throws IOException {         driver = new FirefoxDriver();         driver.manage().window().setSize(new Dimension(DEFAULT_WIDTH, DEFAULT_HEIGHT));          driver.get(seed);         takeScreenShoot(seed);          driver.close();         // let the gc kill this item         driver = null;     }      public static void takeScreenShoot(String fileName) throws IOException {         System.out.println(""taking screenshoot"");         int newHeight = 3000;         driver.manage().window().setSize(new Dimension(DEFAULT_WIDTH, newHeight));          File scrFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);         // Now you can do whatever you need to do with it, for example copy         // somewhere         fileName = fileName.replace(""/"", ""-"");         fileName = fileName.replace("":"", """");         FileUtils.copyFile(scrFile, new File(""/tmp/screenshoots/"" + fileName + "".png""));     }  } ```","closed","","biaggi","2016-05-23T16:24:20Z","2019-08-20T05:09:43Z"
"","2706","selenium-html-runner throws BindException","## Meta -  OS:  Ubuntu 16.04    Selenium Version:  3.0.0-beta3    Browser:  Firefox     Browser Version:  48.0   ## Expected Behavior -  Seeing new Firefox opening and browsing to www.google.com ## Actual Behavior -  Firefox opens and then closes immediately with following error message.  ## Steps to reproduce -    With latest geckodriver and simple IDE test.  ``` vainiju@vainiju-ThinkPad-P50 ~/selenium-html ¬ª l yhteens√§ 19M -rw-r--r-- 1 vainiju vainiju  763 2016-09-02 12:41 simple-ide-generated-test.html -rwxrwxr-x 1 vainiju vainiju 3.7M 2016-08-03 01:49 geckodriver -rw-r----- 1 vainiju vainiju  15M 2016-09-02 01:29 selenium-html-runner-3.0.0-beta3.jar ```  Executing selenium-html-runner causes following error.  ``` vainiju@vainiju-ThinkPad-P50 ~/selenium-html  ¬ª /opt/tools/oracle-jdk/jdk1.8.0_91/bin/java -jar selenium-html-runner-3.0.0-beta3.jar /tmp/output-selenium simple-ide-generated-test.html http://www.google.com false *firefox  Sep 02, 2016 1:37:41 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Attempting bi-dialect session, assuming Postel's Law holds true on the remote end 1472812662277   Marionette  INFO    Listening on port 42734 1472812663347   Marionette  INFO    startBrowser d26740c7-6738-4f90-8628-dd5fecdbf346 1472812663355   Marionette  INFO    sendAsync d26740c7-6738-4f90-8628-dd5fecdbf346  (process:7296): GLib-CRITICAL **: g_path_get_basename: assertion 'file_name != NULL' failed Sep 02, 2016 1:37:43 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C 2016-09-02 13:37:43.549:INFO::main: Logging initialized @2243ms 2016-09-02 13:37:43.577:INFO:osjs.Server:main: jetty-9.2.z-SNAPSHOT 2016-09-02 13:37:43.590:INFO:osjs.ServerConnector:main: Started ServerConnector@1ddf84b8{HTTP/1.1}{0.0.0.0:7330} 2016-09-02 13:37:43.591:INFO:osjs.Server:main: Started @2284ms 2016-09-02 13:37:43.592:INFO:osjs.ServerConnector:main: Stopped ServerConnector@1ddf84b8{HTTP/1.1}{0.0.0.0:7330} [Child 7296] ###!!! ABORT: Aborting on channel error.: file /build/firefox-6p7T67/firefox-48.0+build2/ipc/glue/MessageChannel.cpp, line 2046 [Child 7296] ###!!! ABORT: Aborting on channel error.: file /build/firefox-6p7T67/firefox-48.0+build2/ipc/glue/MessageChannel.cpp, line 2046 Sep 02, 2016 1:37:43 PM org.openqa.selenium.server.htmlrunner.HTMLLauncher mainInt WARNING: Test of browser failed: *firefox java.io.IOException: java.lang.RuntimeException: java.net.BindException: Osoite on jo k√§yt√∂ss√§     at org.openqa.selenium.server.htmlrunner.HTMLLauncher.determineSuiteUrl(HTMLLauncher.java:188)     at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:120)     at org.openqa.selenium.server.htmlrunner.HTMLLauncher.runHTMLSuite(HTMLLauncher.java:85)     at org.openqa.selenium.server.htmlrunner.HTMLLauncher.mainInt(HTMLLauncher.java:239)     at org.openqa.selenium.server.htmlrunner.HTMLLauncher.main(HTMLLauncher.java:251) Caused by: java.lang.RuntimeException: java.net.BindException: Osoite on jo k√§yt√∂ss√§     at org.openqa.selenium.net.PortProber.pollPort(PortProber.java:154)     at org.openqa.selenium.net.PortProber.pollPort(PortProber.java:137)     at org.openqa.selenium.server.htmlrunner.HTMLLauncher.determineSuiteUrl(HTMLLauncher.java:182)     ... 4 more Caused by: java.net.BindException: Osoite on jo k√§yt√∂ss√§     at java.net.PlainSocketImpl.socketBind(Native Method)     at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:387)     at java.net.Socket.bind(Socket.java:644)     at org.openqa.selenium.net.PortProber.pollPort(PortProber.java:146)     ... 6 more ```","closed","","vainikkaj","2016-09-02T12:42:40Z","2019-08-17T04:09:37Z"
"","2698","The location of geckodriver.log in python implementation should to be customized by user.","## Meta -  OS:  Ubuntu 16.04    Selenium Version:  2.53.6    Browser:  Mozilla Firefox 49.0    Browser Version:     ## Expected Behavior -  The location of `geckodriver.log` should to be customized by user. ## Actual Behavior -  The location of `geckodriver.log`  is settled to current workspace, users can not modify it. Seeing [L 76](https://github.com/SeleniumHQ/selenium/blob/selenium-2.53.0/py/selenium/webdriver/firefox/webdriver.py#L76) in `webdriver.py`, it do not pass a file path to `Service` class when init the instance. ## Steps to reproduce -","closed","C-py,","triostones","2016-09-01T06:22:26Z","2019-08-19T03:09:44Z"
"","2184","Using selenium standalone server jar v2.48.0 & up fails to click buttons in firefox on ppc64le","## Meta -  OS:  Ubuntu 15.10, ppc64le    Selenium Version: 2.48 & up, selenium standalone server jar (from here: http://selenium-release.storage.googleapis.com/index.html)    Browser:  Firefox     Browser Version:  39   ## Expected Behavior -  The issue is with the selenium standalone server jar for versions 2.48.0 & up on ppc64le machines. HTML buttons do not get clicked in the spawned browser via the Firefox WebDriver API.   Issue affects run of Kibana test cases on ppc64le (separate issue created there referencing this issue), Kibana uses intern test framework (https://github.com/theintern/intern)  Steps below are using a sample intern tutorial app https://github.com/theintern/intern-tutorial, the app has a submit button which is clicked through intern apis (which are ultimately wrappers over the selenium apis) ## Actual Behavior -  In step 8 below, using selenium-server-standalone-2.48.0.jar does not correctly click the submit button, using selenium-server-standalone-2.47.0.jar does. Below are the log snippets:    13:45:57.106 INFO - Done: [find child element: 15 [[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded], By.cssSelector: #loginForm input[type=submit]] 13:45:57.111 INFO - Executing: [click: 17 [[[[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded]] -> css selector: #loginForm input[type=submit]]]) 13:45:57.174 INFO - Done: [click: 17 [[[[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded]] -> css selector: #loginForm input[type=submit]]] 13:46:07.193 INFO - Executing: [find child element: 15 [[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded], By.id: greeting]) 13:46:07.209 INFO - Done: [find child element: 15 [[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded], By.id: greeting] 13:46:07.214 INFO - Executing: [get text: 18 [[[[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded]] -> id: greeting]]) 13:46:07.225 INFO - Done: [get text: 18 [[[[FirefoxDriver: firefox on LINUX (a3c20537-6728-470e-8c70-abe7ca41b248)] -> css selector: body.loaded]] -> id: greeting]] √ó firefox on any platform - index - greeting form (11.024s) AssertionError: Greeting should be displayed when the form is submitted: expected 'Please enter your name' to equal 'Hello, Elaine!'   at Assertion.assertEqual     at Assertion.ctx.(anonymous function) [as equal]     at Function.assert.strictEqual     at Command.     at runCallback     at Command.     at    at Object.run [as _onImmediate]     at processImmediate [as _immediateCallback]  timers.js:330:15   at Command.then     at Test.registerSuite.greeting form [as test]     at start.then.finally.self.timeElapsed     at    at runCallbacks     at    at Object.run [as _onImmediate]     at processImmediate [as _immediateCallback]  timers.js:330:15 No unit test coverage for firefox on any platform firefox on any platform: 1/1 tests failed  13:46:07.303 INFO - Executing: [execute script: return (function getCoverageData(coverageVariable) {         var coverageData = (function () { return this; })()[coverageVariable];         return coverageData && JSON.stringify(coverageData);     }).apply(this, arguments);, [__internCoverage]]) 13:46:07.312 INFO - Done: [execute script: return (function getCoverageData(coverageVariable) {         var coverageData = (function () { return this; })()[coverageVariable];         return coverageData && JSON.stringify(coverageData);     }).apply(this, arguments);, [__internCoverage]] 13:46:07.317 INFO - Executing: [delete session: 6a5d81f4-1346-4ac8-8b47-bcd721abfc09]) 13:46:07.388 INFO - Done: [delete session: 6a5d81f4-1346-4ac8-8b47-bcd721abfc09]  -----------|----------|----------|----------|----------|----------------| File       |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines | -----------|----------|----------|----------|----------|----------------|  app/      |       50 |        0 |       50 |       50 |                |   hello.js |       50 |        0 |       50 |       50 |           8,10 | -----------|----------|----------|----------|----------|----------------| All files  |       50 |        0 |       50 |       50 |                | -----------|----------|----------|----------|----------|----------------|  TOTAL: tested 1 platforms, 1/1 tests failed  > 14:46:54.723 INFO - Done: [send keys: 16 [[[[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded]] -> id: nameField], [Elaine]] 14:46:54.729 INFO - Executing: [find child element: 15 [[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded], By.cssSelector: #loginForm input[type=submit]]) 14:46:54.740 INFO - Done: [find child element: 15 [[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded], By.cssSelector: #loginForm input[type=submit]] 14:46:54.745 INFO - Executing: [click: 17 [[[[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded]] -> css selector: #loginForm input[type=submit]]]) 14:46:54.829 INFO - Done: [click: 17 [[[[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded]] -> css selector: #loginForm input[type=submit]]] 14:47:04.848 INFO - Executing: [find child element: 15 [[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded], By.id: greeting]) 14:47:04.865 INFO - Done: [find child element: 15 [[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded], By.id: greeting] 14:47:04.871 INFO - Executing: [get text: 18 [[[[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded]] -> id: greeting]]) 14:47:04.883 INFO - Done: [get text: 18 [[[[FirefoxDriver: firefox on LINUX (0a8ab54a-5d08-49cc-b251-fcd417377f3d)] -> css selector: body.loaded]] -> id: greeting]] ‚úì firefox on any platform - index - greeting form (10.887s) No unit test coverage for firefox on any platform firefox on any platform: 0/1 tests failed  14:47:04.902 INFO - Executing: [execute script: return (function getCoverageData(coverageVariable) {         var coverageData = (function () { return this; })()[coverageVariable];         return coverageData && JSON.stringify(coverageData);     }).apply(this, arguments);, [__internCoverage]]) 14:47:04.915 INFO - Done: [execute script: return (function getCoverageData(coverageVariable) {         var coverageData = (function () { return this; })()[coverageVariable];         return coverageData && JSON.stringify(coverageData);     }).apply(this, arguments);, [__internCoverage]] 14:47:04.921 INFO - Executing: [delete session: b707b2b5-d785-4645-be49-5cd073b814a5]) 14:47:04.998 INFO - Done: [delete session: b707b2b5-d785-4645-be49-5cd073b814a5]  -----------|----------|----------|----------|----------|----------------| File       |  % Stmts | % Branch |  % Funcs |  % Lines |Uncovered Lines | -----------|----------|----------|----------|----------|----------------|  app/      |      100 |       50 |      100 |      100 |                |   hello.js |      100 |       50 |      100 |      100 |                | -----------|----------|----------|----------|----------|----------------| All files  |      100 |       50 |      100 |      100 |                | -----------|----------|----------|----------|----------|----------------|  TOTAL: tested 1 platforms, 0/1 tests failed ## Steps to reproduce -    Following are the steps to setup and run the sample tutorial intern app  1) git clone https://github.com/theintern/intern-tutorial 2) cd intern-tutorial 3) npm install --save-dev intern 4) mkdir tests 5) cp node_modules/intern/tests/example.intern.js tests/intern.js 6) Follow steps here to write a functional test: https://github.com/theintern/intern-tutorial#step-4-write-a-functional-test 7) Change the ""tunnel"" and ""environments"" options in tests/intern.js to use the local Selenium Server instead of BrowserStack, have the options as follows      tunnel: 'NullTunnel',     environments: [         { browserName: 'firefox' }     ] 8) Start the selenium server: eg java -jar selenium-server-standalone-2.48.0.jar 9) Run the functional test: ./node_modules/.bin/intern-runner config=tests/intern","closed","D-firefox,","vaibhavsood","2016-05-31T09:48:14Z","2019-08-14T14:09:38Z"
"","2527","WebDriver 2.53.1 - Java8, Firefox 47 - default user profile, browser crashes","## Meta -  OS:  ubuntu 14.04, 64 bit Selenium Version:  2.53.1 Browser:  Firefox 47  Java bindings (maven dependency to selenium-java, version 2.53.1):  `acolomitchi@travel:~$ uname -a` `Linux travel 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux` `acolomitchi@travel:~$ firefox -version` `Mozilla Firefox 47.0` `acolomitchi@travel:~$ java -version` `java version ""1.8.0_101""` `Java(TM) SE Runtime Environment (build 1.8.0_101-b13)` `Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)` ## Steps to reproduce -  `FirefoxDriver w=new FirefoxDriver();` `w.navigate().to(""https://maps.google.com"");` ## Expected behavior -  Browser should open and maps.google.com page is shown ## Actual behaviour -  browser opens, stays empty for a little while, then crashes. Application throws an exception telling the browser might have exited.","closed","","acolomitchi","2016-07-27T04:50:42Z","2019-08-19T07:09:59Z"
"","2528","WebDriver 2.53.1 - Java8, Firefox 47 - empty user profile dir, browser does not start, timeout after 45000 ms","## Meta -  OS:  ubuntu 14.04, 64 bit Selenium Version:  2.53.1 Browser:  Firefox 47  Java bindings (maven dependency to selenium-java, version 2.53.1):  `acolomitchi@travel:~$ uname -a` `Linux travel 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux` `acolomitchi@travel:~$ firefox -version` `Mozilla Firefox 47.0` `acolomitchi@travel:~$ java -version` `java version ""1.8.0_101""` `Java(TM) SE Runtime Environment (build 1.8.0_101-b13)` `Java HotSpot(TM) 64-Bit Server VM (build 25.101-b13, mixed mode)` ## Steps to reproduce -   `String home=System.getProperty(""user.home"");` `File profileDir=new File(home+File.separator+""deleteme""+File.separator+""googlemaps"");` `profileDir.mkdirs();` `FirefoxDriver w=new FirefoxDriver(new FirefoxProfile(profileDir));` `w.navigate().to(""https://maps.google.com"");` ## Expected behavior -  Browser should open and maps.google.com page is shown. This used to work about one month ago (pre-Firefox 47 and selenium-java v 2.53.0) ## Actual behaviour -  Browser does not show. The application throws an exception: `org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: Firefox."",""creator"":""Canonical Ltd."",""homepageURL"":null},{""locales"":[""sv-SE""],""name"":""Ubuntu Modifications"",""description"":""Ubuntu-paket f√∂r Firefox."",""creator"":""Canonical Ltd."",""homepageURL"":null},{""locales"":[""uk""],""name"":""Ubuntu Modifications"",""description"":""–£–±—É–Ω—Ç—ñ–≤—Å—å–∫—ñ –¥–æ–ø–æ–≤–Ω–µ–Ω–Ω—è –¥–æ Firefox."",""creator"":""Canonical Ltd."",""homepageURL"":null},{""locales"":[""zh-CN""],""name"":""Ubuntu Modifications"",""description"":""Ubuntu ÁÅ´ÁãêÊâ©Â±ïÂåÖ."",""creator"":""Canonical Ltd."",""homepageURL"":null},{""locales"":[""zh-TW""],""name"":""Ubuntu Modifications"",""description"":""Ubuntu Firefox Êì¥ÂÖÖÂåÖ„ÄÇ"",""creator"":""Canonical Ltd."",""homepageURL"":null}],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""9.0"",""maxVersion"":""37.0a1""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true}` etc. (console text attached [selenium-console.txt](https://github.com/SeleniumHQ/selenium/files/385321/selenium-console.txt) )","closed","","acolomitchi","2016-07-27T05:09:18Z","2019-08-19T21:09:52Z"
"","2572","FirefoxProfile passed to FirefoxDriver ctor not considered when using Marionette","## Meta -  OS:  Ubuntu 14.04 LTS, 64bit Selenium Version:  3.0.0-beta1 Browser:  Firefox Browser Version: 47.0.1 ## Expected Behavior -  Firefox starts with the passed profile. ## Actual Behavior -  Firefox starts with an empty profile. ## Steps to reproduce -  Invoke the FirefoxDriver constructor with a reference to a FirefoxProfile object as argument, e.g.:  ``` java WebDriver driver = new FirefoxDriver(new FirefoxBinary(), profile); driver.get(""http://seleniumhq.org""); ```  The only workaround I've seen is to use capabilities that have the profile set. But since the profile is extracted from the caps anyway and FirefoxDriver provides a proper constructor to pass the profile directly, I'm wondering why you pointlessly force the user to use caps. As the legacy driver works fine with this way, Marionette should do so too.","closed","G-w3c,","h-arlt","2016-08-04T10:02:43Z","2018-04-06T14:56:22Z"
"","2530","WebDriver 2.53.1 - Mono/Linux, Firefox 47 - browser starts with empty page and no navigation","## Meta -  OS:  ubuntu 14.04 Firefox: 47 Selenium version: 2.53.1 (nuget package) Mono: 4.4.1  `acolomitchi@black:~$ uname -a` `Linux black 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux` `acolomitchi@black:~$ firefox -version` `Mozilla Firefox 47.0` `acolomitchi@black:~$ mono -V` `Mono JIT compiler version 4.4.1 (Nightly 4.4.1.0/4747417 Wed Jun 22 11:14:49 UTC 2016)` `Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com` `TLS:           __thread` `SIGSEGV:       altstack` `Notifications: epoll` `Architecture:  amd64` `Disabled:      none` `Misc:          softdebug`  `LLVM:          supported, not enabled.` `GC:            sgen`  If, after investigation, the root cause is found to be the same, feel free to mark this issue as a duplicate of #2527 (for what I know, the behaviour is slightly different, but it might be cause by the new Firefox version breaking compatibility with selenium). ## Steps to reproduce -  Similar with #2527 `IWebDriver driver = new FirefoxDriver ();` `driver.Navigate ().GoToUrl (""https://maps.google.com"");` ## Expected Behavior -  Self-evident (browser opens and navigates to maps.google.com ## Actual Behavior -  Browser start showing the home page (Ubuntu start page in this case), but no navigation. After 45 seconds, a timeout exception with the trace attached.  [selenium-mono.txt](https://github.com/SeleniumHQ/selenium/files/385371/selenium-mono.txt)","closed","","acolomitchi","2016-07-27T05:54:32Z","2019-08-19T21:09:50Z"
"","2428","Unable to handle HTTP authentication popup when login with Facebook","## Meta -  OS:  Ubuntu 14.04  Selenium Version:   2.53.1 Browser: Firefox  Browser Version:  47.0 ## Expected Behavior - When trying to login with Facebook on our dev environment  https://dev.preplane.com/  a HTTP authentication popup displayed, we tried below things but none worked: 1. Tried to switch on alert using     `driver.switchTo().alert()`     Unable to switch on alert. ## Actual Behavior -  We should be able to switch to alert and authenticate using credentials. ## Steps to reproduce - 1.  go to https://dev.preplane.com/ 2.  click on Login  3. click on login with Facebook 4. Enter valid credentials for Facebook and click on login 5. HTTP Authentication popup displayed but unable to switch on the alert.  Below is selenium web driver code in java:  update your facebook email and password for debugging.  ` import org.openqa.selenium.Alert; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class Main {  ``` public static void main(String[] args) {     WebDriver driver = new FirefoxDriver();     driver.get(""https://dev.preplane.com/"");     driver.findElement(By.linkText(""LOGIN"")).click();     driver.findElement(By.id(""FbBtn"")).click();     // to login with facebook     driver.findElement(By.id(""email"")).sendKeys(""youremail@gmail.com"");     driver.findElement(By.id(""pass"")).sendKeys(""Yourpassword"");     driver.findElement(By.id(""loginbutton"")).click();     // http authentication popup displayed try to switch on it     Alert alert = driver.switchTo().alert(); // this step not executed.     alert.dismiss();// not working  } ```  } `","closed","","clmathuriya","2016-07-05T13:40:06Z","2019-08-16T15:09:46Z"
"","2405","Failed to load module node_modules/selenium-webdriver","## Meta -  OS:  Ubuntu 14    Selenium Version: 2.53      Browser:  Chrome    Browser Version:  51.0.2704.103 (64-bit)   ## Expected Behavior -  The selenium-driver is imported. ## Actual Behavior -  ``` Got following parameters: seleniumserver.port: 4444 chrome.driver.path: selenium/chromedriver/linux64/chromedriver kibi.url: http://192.168.50.10 kibi.shield.password: undefined kibi.shield.username: undefined Running ""intern:community"" (intern) task Error: Failed to load module node_modules/selenium-webdriver from /home/trex/Development/Siren/kibi-integration/node_modules/selenium-webdriver.js (parent: tests/functional/support/page/Datasource)   at ReadFileContext.callback     at FSReqWrap.readFileAfterOpen [as oncomplete]   Warning: Test failure; check output above for details. Use --force to continue. ``` ## Steps to reproduce -    /_global define_/ An exempt of my code.  ``` define([   'intern!object',   'intern/chai!assert',   'require',   '../support/page/EnhSearchTable',   '../support/page/KibiDashboard',   '../support/page/Datasource' ], function (registerSuite, assert, require, EnhSearchTable, KibiDashboard, Datasource) {   var intern = require('intern');   var args = intern.args;   var webdriver = require('selenium-webdriver');   var driver = new webdriver.Builder().build(); ... ... ... }); ```","closed","","sergibondarenko","2016-06-29T13:00:13Z","2019-08-20T00:09:53Z"
"","2760","It's not possible to set a logfile for GeckoDriver","## Meta -  OS:  Ubuntu Selenium Version:  3.0.0b2 Browser:  Firefox Browser Version:  48.0 (64-bit) ## Expected Behavior -  Similar to FirefoxBinary's log_file, there should be a way to specify a log file/path for GeckoDriver. ## Actual Behavior -  Geckodriver always use the default ""geckodriver.log"" file, there's no way to set the log_path from the  FirefoxDriver/FirefoxBinary constructor. ## Steps to reproduce - ##   GeckoDriver service object has a [log_path argument](https://github.com/SeleniumHQ/selenium/blob/18432f5b0fb4fcd477fec1f02914c9ddd8c72793/py/selenium/webdriver/firefox/service.py#L26), but it's not used when the Service constructor is called [in firefox/webdriver.py](https://github.com/SeleniumHQ/selenium/blob/18432f5b0fb4fcd477fec1f02914c9ddd8c72793/py/selenium/webdriver/firefox/webdriver.py#L67). There's no easy way to set a log file for GeckoDriver, which you could easily do for FirefoxBinary using the log_file argument in the constructor.","closed","","gunesacar","2016-09-12T00:45:41Z","2019-08-19T16:09:47Z"
"","2589","Selenium can't find/click a button randomly in Safari","## Meta -  OS:  OSX Yosemite Selenium Version:  2.48 Browser:  Safari 8.0.8  We're doing UI tests through Atlassian's Confluence. One of the steps is to click the button ""Create"" to create a new page and it's in every page in Confluence. We randomly receive timeouts from selenium trying to find or click the button, as if it were not in screen. It goes too fast to notice if the button is drawn correctly, and the issue is not 100% sure to appear (can't determine the conditions when it will appear for a test run).","closed","","addteq-roberto","2016-08-09T18:50:23Z","2019-08-19T20:09:50Z"
"","2459","SELENIUM_PLATFORM is not set this used in Builder.build()","## Meta -  OS:  OSX El Captain  Selenium Version:   2.53.0  I'm using the javascript flavor of selenium-webdriver and try to set capabilities like below:  ```     driver = new webdriver.Builder().       withCapabilities({         'browserName': process.env.SELENIUM_BROWSER,         'platform': process.env.SELENIUM_PLATFORM,         'version': 'latest'       }).       build(); ```  And I run my script as: `SELENIUM_BROWSER=chrome SELENIUM_PLATFORM='OSX 10.11' npm test` ## Expected Behavior -  This is expected to to run my script on Mac/chrome. ## Actual Behavior -  It runs it on Linux (which is the default platform when 'platform' capability is not set.) ## Temporary Workaround  I worked around this issue by using another environment variable and using that in my test as below:  ```       driver = new webdriver.Builder().       withCapabilities({         'browserName': process.env.MYBROWSER,         'platform': process.env.MYPLATFORM,         'version': 'latest'       }).       build(); ```  and while running my test:  ```    export MYPLATFORM=""$SELENIUM_PLATFORM""     export MYBROWSER=""$SELENIUM_BROWSER""     unset SELENIUM_PLATFORM     unset SELENIUM_BROWSER     npm test ```  Looks like the enviroment variables are not being handled properly by the webdriver.","closed","","ramyaa","2016-07-13T11:42:44Z","2019-08-19T23:09:33Z"
"","2154","Error 403 Forbidden for Proxy","## Meta -  OS:  OSX El Capitan 10.11.13 Selenium Version:   wdio v4.0.7 Browser:   Firefox Browser Version:   46.0.1 ## Expected Behavior -  should run test ## Actual Behavior -  ``` ERROR:   Error 403 Forbidden for Proxy   HTTP ERROR: 403Forbidden for Proxy RequestURI=/session Powered by Jetty://   ``` ## Steps to reproduce -  Test file  ``` javascript const assert = require('assert');  describe(`test`, function() {   it('ok', function() {     assert.ok(true);   }); });  module.exports = null; ```  ``` ./node_modules/.bin/wdio wdio.config.js ```  ``` exports.config = {   specs: [     `./test/index.js`   ],   maxInstances: 10,   path: '/',   capabilities: [{     browserName: `firefox`   }],   sync: true,   logLevel: `error`,   coloredLogs: true,   screenshotPath: `./errorShots/`,   baseUrl: `http://localhost:3000`,   waitforTimeout: 15000,   connectionRetryTimeout: 90000,   connectionRetryCount: 3,   mochaOpts: {     ui: `bdd`   } }; ```","closed","","miguelmota","2016-05-23T22:06:01Z","2019-08-20T05:09:45Z"
"","2687","Wrong element receiving .click() call","## Meta -  OS:  OSX El Capitan    Selenium Version:  3.0.0-beta2    Browser:  Firefox    Browser Version:  46.0.1   ## Expected Behavior -  In Selenium 2.53.1, attempting to click an element which is covered by another element would throw an exception: ""org.openqa.selenium.WebDriverException: Element is not clickable at point.... Other element would receive the click: "" ## Actual Behavior -  Attempting to click an element covered by another element results in the covering element being clicked and no exception is thrown. ## Steps to reproduce -  Create a new instance of FirefoxDriver and navigate to ""http://www.w3schools.com/css/css_navbar.asp"": `System.setProperty(""webdriver.gecko.driver"", ""geckodriver""); WebDriver driver = new FirefoxDriver(); driver.get(""http://www.w3schools.com/css/css_navbar.asp"");`  Then manually scroll the page down so that the ""","closed","","ejahns","2016-08-30T20:41:26Z","2019-08-19T13:09:43Z"
"","2490","[safaridriver] right click doesn't work in safari","## Meta -  OS:  OSX 10.11.6 Selenium Version:  2.53.0 Browser:  safari Browser Version:  9.1.2 ## Expected Behaviour -  intern framework is used, both cases below worked fine in Chrome on both windows and Mac 1> .findByCssSelector(elementSelector).clickMouseButton(2) should perform a right click on the element, which in my case will bring up a context menu 2> .findByCssSelector(elementSelector).pressKeys(keys.CONTROL).click().pressKeys(keys.CONTROL) should perform a right click ## Actual Behavior -  both cases perform a left click like action, context menu doesn't pop based on the info in log, it seems worked fine and clicked button 2 in the first case, pressed CONTROL key + click in the second case, but on UI the popup didn't show. 1>    {         ""level"": ""INFO"",         ""message"": ""org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [execute script: return (function simulateMouse(kwArgs) {\n\tvar position = kwArgs.position;\n\n\tfunction dispatch(kwArgs) {\n\t\tvar event = document.createEvent('MouseEvents');\n\t\tevent.initMouseEvent(\n\t\t\tkwArgs.type,\n\t\t\tkwArgs.bubbles || true,\n\t\t\tkwArgs.cancelable || false,\n\t\t\twindow,\n\t\t\tkwArgs.detail || 0,\n\t\t\twindow.screenX + position.x,\n\t\t\twindow.screenY + position.y,\n\t\t\tposition.x,\n\t\t\tposition.y,\n\t\t\tkwArgs.ctrlKey || false,\n\t\t\tkwArgs.altKey || false,\n\t\t\tkwArgs.shiftKey || false,\n\t\t\tkwArgs.metaKey || false,\n\t\t\tkwArgs.button || 0,\n\t\t\tkwArgs.relatedTarget || null\n\t\t);\n\n\t\treturn kwArgs.target.dispatchEvent(event);\n\t}\n\n\tfunction click(target, button, detail) {\n\t\tif (!down(target, button)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!up(target, button)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn dispatch({\n\t\t\tbutton: button,\n\t\t\tcancelable: true,\n\t\t\tdetail: detail,\n\t\t\ttarget: target,\n\t\t\ttype: 'click'\n\t\t});\n\t}\n\n\tfunction down(target, button) {\n\t\treturn dispatch({\n\t\t\tbutton: button,\n\t\t\tcancelable: true,\n\t\t\ttarget: target,\n\t\t\ttype: 'mousedown'\n\t\t});\n\t}\n\n\tfunction up(target, button) {\n\t\treturn dispatch({\n\t\t\tbutton: button,\n\t\t\tcancelable: true,\n\t\t\ttarget: target,\n\t\t\ttype: 'mouseup'\n\t\t});\n\t}\n\n\tfunction move(currentElement, newElement, xOffset, yOffset) {\n\t\tif (newElement) {\n\t\t\tvar bbox = newElement.getBoundingClientRect();\n\n\t\t\tif (xOffset == null) {\n\t\t\t\txOffset = (bbox.right - bbox.left) \* 0.5;\n\t\t\t}\n\n\t\t\tif (yOffset == null) {\n\t\t\t\tyOffset = (bbox.bottom - bbox.top) \* 0.5;\n\t\t\t}\n\n\t\t\tposition = { x: bbox.left + xOffset, y: bbox.top + yOffset };\n\t\t}\n\t\telse {\n\t\t\tposition.x += xOffset || 0;\n\t\t\tposition.y += yOffset || 0;\n\n\t\t\tnewElement = document.elementFromPoint(position.x, position.y);\n\t\t}\n\n\t\tif (currentElement !== newElement) {\n\t\t\tdispatch({ type: 'mouseout', target: currentElement, relatedTarget: newElement });\n\t\t\tdispatch({ type: 'mouseleave', target: currentElement, relatedTarget: newElement, bubbles: false });\n\t\t\tdispatch({ type: 'mouseenter', target: newElement, relatedTarget: currentElement, bubbles: false });\n\t\t\tdispatch({ type: 'mouseover', target: newElement, relatedTarget: currentElement });\n\t\t}\n\n\t\tdispatch({ type: 'mousemove', target: newElement, bubbles: true });\n\n\t\treturn position;\n\t}\n\n\tvar target = document.elementFromPoint(position.x, position.y);\n\n\tif (kwArgs.action === 'mousemove') {\n\t\treturn move(target, kwArgs.element, kwArgs.xOffset, kwArgs.yOffset);\n\t}\n\telse if (kwArgs.action === 'mousedown') {\n\t\treturn down(target, kwArgs.button);\n\t}\n\telse if (kwArgs.action === 'mouseup') {\n\t\treturn up(target, kwArgs.button);\n\t}\n\telse if (kwArgs.action === 'click') {\n\t\treturn click(target, kwArgs.button, 0);\n\t}\n\telse if (kwArgs.action === 'dblclick') {\n\t\tif (!click(target, kwArgs.button, 0)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!click(target, kwArgs.button, 1)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn dispatch({\n\t\t\ttype: 'dblclick',\n\t\t\ttarget: target,\n\t\t\tbutton: kwArgs.button,\n\t\t\tdetail: 2,\n\t\t\tcancelable: true\n\t\t});\n\t}\n}).apply(this, arguments);, [{**button=2, action=click**, position={x=264.70899963378906, y=460.5}}]]"",         ""timestamp"": 1468959524610     }, 2>     {         ""level"": ""INFO"",         ""message"": ""org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [execute script: return (function simulateKeys(keys) {\n\tvar target = document.activeElement;\n\n\tfunction dispatch(kwArgs) {\n\t\tvar event = document.createEvent('KeyboardEvent');\n\t\tevent.initKeyboardEvent(\n\t\t\tkwArgs.type,\n\t\t\tkwArgs.bubbles || true,\n\t\t\tkwArgs.cancelable || false,\n\t\t\twindow,\n\t\t\tkwArgs.key || '',\n\t\t\tkwArgs.location || 3,\n\t\t\tkwArgs.modifiers || '',\n\t\t\tkwArgs.repeat || 0,\n\t\t\tkwArgs.locale || ''\n\t\t);\n\n\t\treturn target.dispatchEvent(event);\n\t}\n\n\tfunction dispatchInput() {\n\t\tvar event = document.createEvent('Event');\n\t\tevent.initEvent('input', true, false);\n\t\treturn target.dispatchEvent(event);\n\t}\n\n\tkeys = Array.prototype.concat.apply([], keys.map(function (keys) {\n\t\treturn keys.split('');\n\t}));\n\n\tfor (var i = 0, j = keys.length; i < j; ++i) {\n\t\tvar key = keys[i];\n\t\tvar performDefault = true;\n\n\t\tperformDefault = dispatch({ type: 'keydown', cancelable: true, key: key });\n\t\tperformDefault = performDefault && dispatch({ type: 'keypress', cancelable: true, key: key });\n\n\t\tif (performDefault) {\n\t\t\tif ('value' in target) {\n\t\t\t\ttarget.value = target.value.slice(0, target.selectionStart) + key +\n\t\t\t\t\ttarget.value.slice(target.selectionEnd);\n\t\t\t\tdispatchInput();\n\t\t\t}\n\t\t\telse if (target.isContentEditable) {\n\t\t\t\tvar node = document.createTextNode(key);\n\t\t\t\tvar selection = window.getSelection();\n\t\t\t\tvar range = selection.getRangeAt(0);\n\t\t\t\trange.deleteContents();\n\t\t\t\trange.insertNode(node);\n\t\t\t\trange.setStartAfter(node);\n\t\t\t\trange.setEndAfter(node);\n\t\t\t\tselection.removeAllRanges();\n\t\t\t\tselection.addRange(range);\n\t\t\t}\n\t\t}\n\n\t\tdispatch({ type: 'keyup', cancelable: true, key: key });\n\t}\n}).apply(this, arguments);, [[ÓÄâ]]]"",         ""timestamp"": 1468956901104     },","closed","A-needs new owner,","sophiecdd","2016-07-19T20:23:13Z","2019-08-19T14:10:04Z"
"","2732","Unable To Run Any Selenium Unit Tests","## Meta -  OS:  OSX 10.11.6  Selenium Version:   3.0.0b2 Browser:   FF 48.0.2 **(I am aware of the issue using geckodriver. Geckodriver is currently in the PATH)** ## Expected Behavior -  running `./go test_py` Would run all python tests for them to pass. ## Actual Behavior -  All tests fail with the E (error code) They all have the same error.  ``` ====================================================================== ERROR: test_we_can_launch_multiple_firefox_instances (__main__.FirefoxLauncherTests) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""ff_launcher_tests.py"", line 39, in test_we_can_launch_multiple_firefox_instances     self.webdriver1 = webdriver.Firefox(capabilities=capabilities)   File ""/Users/jdorlus/.virtualenvs/selenium-test/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/firefox/webdriver.py"", line 85, in __init__     self.binary, timeout)   File ""/Users/jdorlus/.virtualenvs/selenium-test/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/firefox/extension_connection.py"", line 52, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""/Users/jdorlus/.virtualenvs/selenium-test/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/firefox/firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""/Users/jdorlus/.virtualenvs/selenium-test/lib/python2.7/site-packages/selenium-3.0.0b2-py2.7.egg/selenium/webdriver/firefox/firefox_binary.py"", line 108, in _wait_until_connectable     % (self.profile.path)) WebDriverException: Message: Can't load the profile. Profile Dir: /var/folders/py/xhpmll4n68s689s14p8tktlh0000gp/T/tmpzPfr_B If you specified a log_file in the FirefoxBinary constructor, check it for details. ``` ## Steps to reproduce -  1.) Download and upgrade Selenium 3.0.0b2 to latest commit 2.) Download geckodriver and build from source from latest commit  3.) Put gecko driver in PATH (i.e. /usr/local/bin) 4.) Navigate to selenium root folder 5.) Make sure you have FF 48.0.2 installed 6.) Run `./go test_py`","closed","","cuff-links","2016-09-07T00:01:41Z","2019-08-19T14:09:55Z"
"","2678","WebDriverError: Unable to parse new session response, when doing the google_search tutorial test","## Meta -  OS:  OSX 10.11.6    Selenium Version:  2.52.0    Browser:  Firefox 48.0.1, Chrome 52.0    Followed the [Quick Start Guide](https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs) exactly with both geckodriver and chromedriver in my path. ## Expected Behavior -  Firefox: That the test gets executed. Chrome: That browser open and test gets executed. ## Actual Behavior -  Firefox: browser opens but the test isn't executed. Get error:  ``` $ node google_search /Users/selj/node_modules/selenium-webdriver/lib/promise.js:654     throw error;     ^  WebDriverError: Unable to parse new session response: {""error"":""unknown error"",""message"":""connection refused""}     at WebDriverError (/Users/selj/node_modules/selenium-webdriver/lib/error.js:26:26)     at /Users/selj/node_modules/selenium-webdriver/lib/http.js:333:17     at process._tickCallback (internal/process/next_tick.js:103:7) From: Task: WebDriver.createSession()     at Function.createSession (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:366:24)     at Driver (/Users/selj/node_modules/selenium-webdriver/firefox/index.js:537:38)     at Builder.build (/Users/selj/node_modules/selenium-webdriver/index.js:549:16)     at Object. (/Users/selj/Development/Projects/Test Automation/google_search.js:8:6)     at Module._compile (module.js:413:34)     at Object.Module._extensions..js (module.js:422:10)     at Module.load (module.js:357:32)     at Function.Module._load (module.js:314:12)     at Function.Module.runMain (module.js:447:10)     at startup (node.js:146:18) From: Task: WebDriver.navigate().to(http://www.google.com/ncr)     at Driver.schedule (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:414:17)     at Navigation.to (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:1042:25)     at Driver.get (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:832:28)     at Object. (/Users/selj/Development/Projects/Test Automation/google_search.js:10:8)     at Module._compile (module.js:413:34)     at Object.Module._extensions..js (module.js:422:10)     at Module.load (module.js:357:32)     at Function.Module._load (module.js:314:12)     at Function.Module.runMain (module.js:447:10)     at startup (node.js:146:18) ```  Chrome: No browser opens. Throws error:  ``` $ node google_search       /Users/selj/node_modules/selenium-webdriver/lib/promise.js:654     throw error;     ^  SessionNotCreatedError: session not created exception from disconnected: unable to connect to renderer   (Session info: chrome=52.0.2743.116)   (Driver info: chromedriver=2.23.409710 (0c4084804897ac45b5ff65a690ec6583b97225c0),platform=Mac OS X 10.11.6 x86_64)     at WebDriverError (/Users/selj/node_modules/selenium-webdriver/lib/error.js:26:26)     at SessionNotCreatedError (/Users/selj/node_modules/selenium-webdriver/lib/error.js:213:26)     at Object.checkLegacyResponse (/Users/selj/node_modules/selenium-webdriver/lib/error.js:505:15)     at parseHttpResponse (/Users/selj/node_modules/selenium-webdriver/lib/http.js:396:13)     at /Users/selj/node_modules/selenium-webdriver/lib/http.js:328:11     at process._tickCallback (internal/process/next_tick.js:103:7) From: Task: WebDriver.createSession()     at Function.createSession (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:366:24)     at Driver (/Users/selj/node_modules/selenium-webdriver/chrome.js:804:38)     at Builder.build (/Users/selj/node_modules/selenium-webdriver/index.js:546:16)     at Object. (/Users/selj/Development/Projects/Test Automation/google_search.js:8:6)     at Module._compile (module.js:413:34)     at Object.Module._extensions..js (module.js:422:10)     at Module.load (module.js:357:32)     at Function.Module._load (module.js:314:12)     at Function.Module.runMain (module.js:447:10)     at startup (node.js:146:18) From: Task: WebDriver.navigate().to(http://www.google.com/ncr)     at Driver.schedule (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:414:17)     at Navigation.to (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:1042:25)     at Driver.get (/Users/selj/node_modules/selenium-webdriver/lib/webdriver.js:832:28)     at Object. (/Users/selj/Development/Projects/Test Automation/google_search.js:10:8)     at Module._compile (module.js:413:34)     at Object.Module._extensions..js (module.js:422:10)     at Module.load (module.js:357:32)     at Function.Module._load (module.js:314:12)     at Function.Module.runMain (module.js:447:10)     at startup (node.js:146:18) ``` ## Steps to reproduce -    I followed the [Quick Start Guide](https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs) exactly with both geckodriver and chromedriver in my path.","closed","","xeppen","2016-08-29T12:01:51Z","2019-08-18T07:09:36Z"
"","2285","Mouse Over goes in error with Marionette webdriver","## Meta -  OS:  OSX 10.11.5  Selenium Version:   2.53.5 Browser:   Firefox   Browser Version:   47 ## Expected Behavior -  Creating a test with RobotFramework and Selenium2Library i'm using the keyword ""Mouse Over"" to emulate the mouse, so the page should react. ## Actual Behavior -  When the Mouse Over Keyword is called i got this error : WebDriverException: Message: POST /session/5ffe9453-d8cc-6345-bdf1-fa4faef431f3/moveto did not match a known command. On Chrome everything is working fine ## Steps to reproduce -    ##Marionette capabilities is added in an init keyword##   *_RoboFramework test *_ Open browser  firefox  https://www.google.co.uk/ Mouse Over  id=lst-ib  Do you have any idea ? is this related to Selenium or i need to open the issue to Firefox/Marionette team?  Thanks","closed","D-marionette,","VitoAlbano","2016-06-14T15:12:48Z","2017-03-19T00:15:26Z"
"","2231","Firefox 47 crashing a few seconds after launch by Selenium 2.53.0 on OSX 10.11.5","## Meta -  OS:  OSX 10.11.5 Selenium Version:   2.53.0 Browser:   Firefox Browser Version:   47.0 ## Expected Behavior -  Firefox doesn't crash shortly after launch. ## Actual Behavior -  Shortly after webdriver.Firefox() is called, Firefox is launched. Sometimes almost immediately, sometimes after first URL is navigated to, Firefox crashes, and the following problem report comes up:  ```     Process:               firefox-bin [50402]     Path:                  /Applications/Firefox.app/Contents/MacOS/firefox-bin     Identifier:            org.mozilla.firefox     Version:               47.0 (4716.6.4)     Code Type:             X86-64 (Native)     Parent Process:        Python [50397]     Responsible:           Terminal [25432]     User ID:               501      Date/Time:             2016-06-07 16:08:22.955 -0700     OS Version:            Mac OS X 10.11.5 (15F34)     Report Version:        11     Anonymous UUID:        FB1ED8A9-3A61-DC92-F91C-55B2A620E6CF      Sleep/Wake UUID:       84C91FD4-D04B-41C6-995F-9BE9447F3B85      Time Awake Since Boot: 23000 seconds     Time Since Wake:       6500 seconds      System Integrity Protection: enabled      Crashed Thread:        7  Socket Thread      Exception Type:        EXC_BAD_ACCESS (SIGSEGV)     Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000      VM Regions Near 0:     -->          __TEXT                 0000000100000000-0000000100004000 [   16K] r-x/rwx SM=COW  /Applications/Firefox.app/Contents/MacOS/firefox-bin      Thread 0:: Dispatch queue: com.apple.main-thread     0   libsystem_kernel.dylib          0x00007fff8cb84f72 mach_msg_trap + 10     1   libsystem_kernel.dylib          0x00007fff8cb843b3 mach_msg + 55     2   com.apple.CoreFoundation        0x00007fff817a81c4 __CFRunLoopServiceMachPort + 212     3   com.apple.CoreFoundation        0x00007fff817a768c __CFRunLoopRun + 1356     4   com.apple.CoreFoundation        0x00007fff817a6ed8 CFRunLoopRunSpecific + 296     5   com.apple.HIToolbox             0x00007fff84901935 RunCurrentEventLoopInMode + 235     6   com.apple.HIToolbox             0x00007fff8490176f ReceiveNextEventCommon + 432     7   com.apple.HIToolbox             0x00007fff849015af         _BlockUntilNextEventMatchingListInModeWithFilter + 71     8   com.apple.AppKit                0x00007fff927eddf6 _DPSNextEvent + 1067     9   com.apple.AppKit                0x00007fff927ed226 -[NSApplication         _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454     10  XUL                             0x0000000102eea262 0x1012b6000 + 29573730 ``` ## Steps to reproduce -  Call Firefox webdriver, crashes shortly after.","closed","","samyun","2016-06-07T23:26:34Z","2019-08-20T04:09:41Z"
"","2261","Crashing with Firefox 47","## Meta -  OS:  OSX 10.11.4 Selenium Version:  2.53.1 Browser:  Firefox Browser Version:  47.0 64-bit ## Expected Behavior -  It should open Firefox and perform actions ## Actual Behavior -  Firefox quits unexpectedly [(dump)](https://gist.github.com/rachel-carvalho/fdcc3f7dac32e15d6ff31cb0fbd69ed0) ## Steps to reproduce -  [Run ruby API Example from wiki](https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings#api-example) will try to open Firefox, it will crash and there's a timeout  ``` /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/firefox/launcher.rb:90:in `connect_until_stable': unable to obtain stable firefox connection in 60 seconds (127.0.0.1:7055) (Selenium::WebDriver::Error::WebDriverError)     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/firefox/launcher.rb:55:in `block in launch'     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/common/socket_lock.rb:43:in `locked'     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/firefox/launcher.rb:51:in `launch'     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/firefox/bridge.rb:43:in `initialize'     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/common/driver.rb:53:in `new'     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver/common/driver.rb:53:in `for'     from /Users/rcarvalho/.rvm/gems/ruby-2.3.1/gems/selenium-webdriver-2.53.1/lib/selenium/webdriver.rb:84:in `for'     from ../selenium.rb:3:in `' ```","closed","","rachel-carvalho","2016-06-10T19:02:23Z","2019-08-20T03:09:54Z"
"","2267","Python Install/Setup","## Meta -  OS:  OSX 10.11.4    Selenium Version:  2.53.5    Browser:  Firefox ## Expected Behavior -  Created virtualenv, activate, pip installed selenium  ``` shell (selenium_python) ~/selenium_python $ pip list pip (6.1.1) selenium (2.53.5) setuptools (15.0) ```  Running python python_test.py :  ``` shell from selenium import webdriver  browser = webdriver.Firefox() browser.get('http://seleniumhq.org/') ```  Expected to launch browser. ## Actual Behavior -  ``` shell (selenium_python) ~/selenium_python $ python python_test.py Traceback (most recent call last):   File ""python_test.py"", line 3, in      browser = webdriver.Firefox() AttributeError: 'module' object has no attribute 'Firefox' ```","closed","","jmieleiii","2016-06-11T16:33:37Z","2019-08-18T23:10:00Z"
"","2059","io/exec.js fails to set commandline arguments","## Meta -  OS:  OSX 10.11.3 Selenium Version:   2.53.0  Browser:  Firefox 46.0.1 ## Expected Behavior -  Firefox should open listening with the debugger server and dhtml profile. ## Actual Behavior -  Firefox opens, but the command line options are not set. Interestingly, a `ps` shows that the command was executed with those options, but they were not applied. ## Steps to reproduce  ``` js var binary = new firefox.Binary('/Applications/Firefox.app/Contents/MacOS/firefox-bin'); binary.addArguments('--start-debugger-server 6080', '-P dhtml') let options = (new firefox.Options()).setBinary(firefoxBinary()); const driver = new firefox.Driver(options); ``` ## Suspected bug  I believe the issue is with node's child process spawn, when I switched that out for exec it worked fine.  ``` js const child = require('child_process');  command = ""/Applications/Firefox.app/Contents/MacOS/firefox-bin -P dhtml""; args = [ '-foreground', '--start-debugger-server 6080', '-P dhtml' ];  //fails child.spawn(command, args)  // succeeds child.exec(command + "" "" + args.join("" "")) ```","closed","","jasonLaster","2016-05-05T19:10:02Z","2019-08-20T06:10:02Z"
"","2404","Tests crashed on Mac OS X in Firefox > 44.0","## Meta -  OS:  OSX 10.11 Selenium Version:  selenium-standalone 5.3.1 Framework: webdriver.io 3.4, 4.0.8 Browser:  Firefox 45.0, 46, 47 ## Expected Behavior -  Tests successfully performed. ## Actual Behavior -  Firefox start & closed. Tests are failed. ## Steps to reproduce -  I used webdriver.io 4.0.9 (and lower versions) that run tests on selenum-standalone-server 5.3.1 (and lower versions) on Firefox > 44.0. Than browser crashed.","closed","","demshin","2016-06-29T12:36:04Z","2019-08-20T00:09:45Z"
"","2208","[SafariDriver] cleanSession=true desired capability is not working","## Meta -  OS:  OSX 10.10.5    Selenium Version:  2.53.0    Browser:  Safari     Browser Version: 9.0.3   ## Expected Behavior -  Setting **cleanSession=true** clears the Safari browser cache and cookies, starting the test in a clean state (ie, without being logged in).  ## Actual Behavior -  The cleanSession property does not seem to have an effect. Browser cookies and cache remain. ## Steps to reproduce - 1. Set the cleanSession=true property for SafariDriver. 2. Run a test that requires you to login. Do not logout. 3. Rerun the test. Notice that you are still logged in. This is not a clean session.  ## Workaround -  In the browser Preferences > General, set the 'Safari opens with' to 'A new private window'. This seems to resolve the issue. Why can't cleanSession=true be analogous to starting with a new private window or tab?","closed","","coffeesippa","2016-06-03T22:55:37Z","2019-08-20T04:09:48Z"
"","2325","Mac locked screen slows down Firefox","## Meta -  OS:  OSX 10.10.5    Selenium Version:  2.53.0    Browser:  Mozilla Firefox    Browser Version:   46.0.1    Running: Selenium Standalone Jar ## Expected Behavior -  Running a python script to connect to the webdriver.Remote should be able to click on elements and run js within a reasonable amount of time.  This works fine when the screen is not locked ## Actual Behavior -  Screen locked.  Each command to the web driver takes 5-30 seconds.  This turns a short test into a 30 minute test.  The execution speed returns to normal when the screen is unlocked. ## Steps to reproduce -    Create a 100 step script which alternates between interacting with elements and running simple js.  Run it against a mac with the screen locked, then run it with the screen unlocked.  There should be a large time discrepancy ### Example Log:  ``` .2016-06-20 13:56:28,647 - root - INFO - Run: Add source 1 to scene (click) .2016-06-20 13:56:28,648 - root - INFO - Click id:'scenepage_sceneaddsource_btn' .2016-06-20 13:56:28,648 - selenium.webdriver.remote.remote_connection - DEBUG - POST http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/element {""using"": ""id"", ""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""value"": ""scenepage_sceneaddsource_btn""} .2016-06-20 13:56:28,771 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:28,771 - selenium.webdriver.remote.remote_connection - DEBUG - GET http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/element/22/displayed {""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""id"": ""22""} .2016-06-20 13:56:28,809 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:28,809 - selenium.webdriver.remote.remote_connection - DEBUG - POST http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/execute {""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""args"": [{""element-6066-11e4-a52e-4f735466cecf"": ""22"", ""ELEMENT"": ""22""}], ""script"": ""arguments[0].scrollIntoView(false);""} .2016-06-20 13:56:28,829 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:28,829 - selenium.webdriver.remote.remote_connection - DEBUG - POST http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/element/22/click {""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""id"": ""22""} .2016-06-20 13:56:29,070 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:30,071 - root - INFO - Run: Create a scene 3 (click) .2016-06-20 13:56:30,071 - root - INFO - Click id:'scenepage_newscene_btn' .2016-06-20 13:56:30,071 - selenium.webdriver.remote.remote_connection - DEBUG - POST http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/element {""using"": ""id"", ""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""value"": ""scenepage_newscene_btn""} .2016-06-20 13:56:34,812 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:34,813 - selenium.webdriver.remote.remote_connection - DEBUG - GET http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/element/20/displayed {""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""id"": ""20""} .2016-06-20 13:56:34,830 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:34,830 - selenium.webdriver.remote.remote_connection - DEBUG - POST http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/execute {""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""args"": [{""element-6066-11e4-a52e-4f735466cecf"": ""20"", ""ELEMENT"": ""20""}], ""script"": ""arguments[0].scrollIntoView(false);""} .2016-06-20 13:56:54,813 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request .2016-06-20 13:56:54,813 - selenium.webdriver.remote.remote_connection - DEBUG - POST http://some_address:4444/wd/hub/session/47db6b18-f01b-4d63-810a-1b445d93f665/element/20/click {""sessionId"": ""47db6b18-f01b-4d63-810a-1b445d93f665"", ""id"": ""20""} .2016-06-20 13:56:54,913 - selenium.webdriver.remote.remote_connection - DEBUG - Finished Request ```","closed","D-firefox,","cam72cam","2016-06-20T19:08:26Z","2019-08-16T23:09:46Z"
"","2179","Test failed with UnreachableBrowserException during local automation, but was able to obtain screenshot immediately afterward","## Meta -  OS:  OSX 10.10.5    Selenium Version:  2.53.0    Browser:  Chrome    Browser Version:  50.0.2661.102 (64-bit)    Driver Version: 2.21.371459 ## Expected Behavior -  Driver should have switched to default content. ## Actual Behavior -  ``` org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'C02LM0FDFD59', ip: '10.71.24.187', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_60' Driver info: driver.version: RemoteWebDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={chromedriverVersion=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4), userDataDir=/var/folders/w6/sfgz6j2j5074zm575cbd3qfnhv5szw/T/.org.chromium.Chromium.LvVRqm}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=50.0.2661.102, platform=MAC, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 9e444e20f07dc2a1fbc2318c5738511c     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)     at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.defaultContent(RemoteWebDriver.java:1039)     at com.rei.selenous.pages.Page.switchTo(Page.java:377)     at com.rei.selenous.pages.PageMethodInterceptor.intercept(PageMethodInterceptor.java:68)     at com.rei.online.test.pages.account.YourAccountLoginPage$$EnhancerByCGLIB$$af8226b0.checkPageLoadCondition()     at com.rei.online.test.pages.account.YourAccountLoginPage.validateLoaded(YourAccountLoginPage.java:28)     at com.rei.online.test.pages.account.YourAccountLoginPage$$EnhancerByCGLIB$$af8226b0.CGLIB$validateLoaded$6()     at com.rei.online.test.pages.account.YourAccountLoginPage$$EnhancerByCGLIB$$af8226b0$$FastClassByCGLIB$$16df6888.invoke()     at net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)     at com.rei.selenous.pages.PageMethodInterceptor.intercept(PageMethodInterceptor.java:78)     at com.rei.online.test.pages.account.YourAccountLoginPage$$EnhancerByCGLIB$$af8226b0.validateLoaded()     at com.rei.selenous.pages.PageValidator$1.apply(PageValidator.java:171)     at com.rei.selenous.pages.PageValidator$1.apply(PageValidator.java:167)     at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)     at com.rei.selenous.pages.PageValidator.validatePageLoaded(PageValidator.java:119)     at com.rei.selenous.pages.Pages.validatePageLoaded(Pages.java:93)     at com.rei.selenous.pages.Pages.initPage(Pages.java:77)     at com.rei.selenous.support.WebDriverTestSupport.getPageAtUrl(WebDriverTestSupport.java:175)     at com.rei.selenous.support.WebDriverTestSupport.getPageAtUrl(WebDriverTestSupport.java:160)     at com.rei.selenous.support.WebDriverTestSupport.getPageAtPath(WebDriverTestSupport.java:128)     at com.rei.selenous.support.WebDriverTestSupport.getAnnotatedPage(WebDriverTestSupport.java:192)     at com.rei.online.test.support.ReiOnlineTestSupport.loginToYourAccount(ReiOnlineTestSupport.java:591)     at com.rei.online.test.support.ReiOnlineTestSupport.createUserAccountAndLogin(ReiOnlineTestSupport.java:437)     at com.rei.online.test.AccountBillingIT.testNoCVV2FieldInPaymentPreferences(AccountBillingIT.java:379)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: java.net.SocketException: Connection reset     at java.net.SocketInputStream.read(SocketInputStream.java:209)     at java.net.SocketInputStream.read(SocketInputStream.java:141)     at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:136)     at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:152)     at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:270)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)     at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)     at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:161)     at sun.reflect.GeneratedMethodAccessor14.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.apache.http.impl.conn.CPoolProxy.invoke(CPoolProxy.java:138)     at com.sun.proxy.$Proxy34.receiveResponseHeader(Unknown Source)     at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)     at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:254)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:85)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:186)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     ... 36 common frames omitted ``` ## Steps to reproduce -    The test associated with this failure had progressed quite far by the time the failure occurred. The assertion that the browser may have died is in serious doubt, given that the test framework was able to grab a screenshot and page source, then gracefully closed out the session.  This is a random failure with no easy repro steps. Apparently, if the ""SwitchToFrame"" command had been retried, it may have succeeded, as commands that were issued afterward were processed successfully.  Could this potentially be an issue with http-thread-pool settings of chromedriver? I don't think these are configurable, but this issue happens more frequently when I run more tests in parallel.","closed","","sbabcoc","2016-05-30T04:27:15Z","2019-08-20T03:09:34Z"
"","2109","Unable to capture JS console output","## Meta -  OS:  OSX ,LCapitan Selenium Version: 2.52.0 Browser:  Firefox Browser Version:  41 ## Actual Behavior   FirefoxDriver is not configured to capture JS console output.but works on chrome","closed","","irfanahmadin","2016-05-15T17:13:51Z","2019-08-20T06:09:38Z"
"","2241","Selenium 2.53.3 not compatible with Firefox 47","## Meta -  OS:  OSX Selenium Version: 2.53.3 Browser:  Firefox Browser Version: 47  ## Expected Behavior -  A browser window should open. ## Actual Behavior -  A WebDriverException is raised.  See detail below in steps to reproduce. ## Steps to reproduce -  With Firefox 46 this works fine, but after upgrading to Firefox 47 the following simgple test fails.  Downgrading back to 46 fixes the issue.  $ python Python 2.7.10 (default, Oct 23 2015, 19:19:21)  [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. ))) from selenium import webdriver ))) d=webdriver.Firefox() Traceback (most recent call last):   File """", line 1, in    File ""/Library/Python/2.7/site-packages/selenium/webdriver/firefox/webdriver.py"", line 81, in **init**     self.binary, timeout)   File ""/Library/Python/2.7/site-packages/selenium/webdriver/firefox/extension_connection.py"", line 51, in **init**     self.binary.launch_browser(self.profile, timeout=timeout)   File ""/Library/Python/2.7/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""/Library/Python/2.7/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 98, in _wait_until_connectable     raise WebDriverException(""The browser appears to have exited "" selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details.","closed","","melewitz","2016-06-08T19:29:13Z","2019-08-20T04:09:33Z"
"","2015","Chrome driver crashes (works in FF driver)","## Meta -  OS:  OSX Selenium Version: 2.53.0 Browser: Google Chrome Browser Version: 50.0.2661.86 (64-bit) Library: Webdriver-io ## Expected Behavior -  It works ## Actual Behavior -  { [Error: disconnected: Unable to receive message from renderer]   message: 'disconnected: Unable to receive message from renderer',   type: 'RuntimeError',   seleniumStack:    { status: 13,      type: 'UnknownError',      message: 'An unknown server-side error occurred while processing the command.',      orgStatusMessage: 'disconnected: Unable to receive message from renderer\n  (Session info: chrome=50.0.2661.86)\n  (Driver info: chromedriver=2.21.371459 (36d3d07f66 0ff2bc1bf28a75d1cdabed0983e7c4),platform=Mac OS X 10.11.4 x86_64) ## Steps to reproduce -    ``` ts const client = wd.remote(options).init() client.url(test.url) await client.execute(parseScript /* String of script */) //","closed","","michaelmesser","2016-04-27T01:06:21Z","2019-08-20T07:09:54Z"
"","2636","WebdriverJS hangs until timeout in case of error in `before` hook","## Meta -  OS:  OSX Selenium Version:  npm selenium-webdriver 3.0.0-beta-2 Browser:  does not matter  If error is thrown in `before` hook webdriverjs hangs until timeout elapsed.  ## Expected Behavior -  Suite should shutdown with 1 error message about thrown error in before hook. ## Actual Behavior -  Suite shutdown only after timeout elapsed with 2 errors: - error about before hook that was thrown - error about timeout in after hook  It looks like `driver.quit()` hangs because `driver.session_` is rejected promise. ## Steps to reproduce -  Run following test with mocha and webdriverjs  ``` js var webdriver = require('selenium-webdriver'),   test = require('selenium-webdriver/testing');  test.describe('suite', function() {   let driver;    test.before(function() {     console.log('before');     driver = new webdriver.Builder()       .forBrowser('chrome')       .build();      throw new Error('Error on first tick in before hook');   });    test.after(function() {     console.log('after');     driver.quit();   });    test.it('test1', function() {     console.log('ok1');   }); }); ```  Result:  ```   suite before     1) ""before all"" hook after     2) ""after all"" hook    // delay of 2000 ms (!!!)    0 passing (2s)   2 failing    1) suite ""before all"" hook:      Error: Error on first tick in before hook       at ...    2) suite ""after all"" hook:      Error: timeout of 2000ms exceeded. Ensure the done() callback is being called in this test. ```  The quick fix I tried is to re-throw error up to controlFlow here: https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/testing/index.js#L156  ``` js ...     }, runnable.fullTitle()).then(seal(done), e => {       done(e);      // re-throw error to stop controlflow       throw e;     }); ```  But it is not a solution as it breaks all tests in case of single error.","closed","C-nodejs,","vitalets","2016-08-20T14:09:16Z","2019-08-19T19:09:59Z"
"","2680","Selenium 3 - Safaridriver","## Meta -  OS:  OSX Selenium Version:  3.0.0 Beta 2 Browser:   Safari 10 - remote automation enabled  I create a selenium Node and Hub  java -jar selenium-server-standalone3.0.0-beta2.jar -role node -browser browserName=safari,maxInstances=1,platform=mac -maxSession 1 -browserTimeout 120 -timeout 120  java -jar selenium-server-standalone3.0.0-beta2.jar -role node  Now i want to run a test.  The session request come in. Nothing happens After a few seconds I get an exception  The test works on other browsers   `DesiredCapabilities desiredCapabilities = new DesiredCapabilities();                 desiredCapabilities.setCapability(""browserName"", ""safari"")                 new  RemoteWebDriver(new URL(TestConfig.DESTINATION + "":"" + TestConfig.PORT + ""/wd/hub""), desiredCapabilities)`  `19:27:14.730 INFO - Executing: [new session: Capabilities [{browserName=safari}]]) 19:27:14.758 INFO - Creating a new session for Capabilities [{browserName=safari}] 19:27:34.948 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'test-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:192)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:36)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:79)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'test-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:113)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:209)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     ... 1 more Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)     ... 9 more Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'test-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: SafariDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:670)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:247)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:69)     ... 14 more Caused by: java.lang.IllegalStateException: The process has not exited yet therefore no result is available ...     at org.apache.commons.exec.DefaultExecuteResultHandler.getException(DefaultExecuteResultHandler.java:76)     at org.openqa.selenium.os.UnixProcess.checkForError(UnixProcess.java:171)     at org.openqa.selenium.os.CommandLine.checkForError(CommandLine.java:185)     at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:177)     at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:166)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:649)     ... 19 more 19:27:34.965 WARN - Exception: The process has not exited yet therefore no result is available ... 19:27:35.072 INFO - Executing: [new session: Capabilities [{browserName=safari}]]) 19:27:35.073 INFO - Creating a new session for Capabilities [{browserName=safari}] 19:27:55.142 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'test-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:192)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:124)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:59)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:36)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:79)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:204)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:166)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:132)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'test-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:113)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:209)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     ... 1 more Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)     ... 9 more Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '3.0.0-beta2', revision: '2aa21c1', time: '2016-08-02 15:03:28 -0700' System info: host: 'test-Mac-mini.local', ip: '10.66.11.176', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.6', java.version: '1.8.0_101' Driver info: driver.version: SafariDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:670)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:247)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:143)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:78)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:69)     ... 14 more Caused by: java.lang.IllegalStateException: The process has not exited yet therefore no result is available ...     at org.apache.commons.exec.DefaultExecuteResultHandler.getException(DefaultExecuteResultHandler.java:76)     at org.openqa.selenium.os.UnixProcess.checkForError(UnixProcess.java:171)     at org.openqa.selenium.os.CommandLine.checkForError(CommandLine.java:185)     at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:177)     at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:166)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:78)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:649)     ... 19 more 19:27:55.143 WARN - Exception: The process has not exited yet therefore no result is available ...`  After that I tried   https://webkit.org/blog/6900/webdriver-support-in-safari-10/  but this also get me an exception  ``` ====================================================================== ERROR: test_feature_status_page_filters (__main__.WebKitFeatureStatusTest) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""test_webkit.py"", line 22, in test_feature_status_page_filters     self.driver.get(""https://webkit.org/status/"") AttributeError: 'WebKitFeatureStatusTest' object has no attribute 'driver'  ====================================================================== ERROR: test_feature_status_page_search (__main__.WebKitFeatureStatusTest) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""test_webkit.py"", line 8, in test_feature_status_page_search     self.driver.get(""https://webkit.org/status/"") AttributeError: 'WebKitFeatureStatusTest' object has no attribute 'driver'  ---------------------------------------------------------------------- Ran 2 tests in 0.000s  FAILED (errors=2) ```  any idee to solve this problem?  or is it a Bug?","closed","","Lightmoor","2016-08-29T17:47:32Z","2016-08-31T15:55:18Z"
"","2277","Safari Extension Local Ruby","## Meta -  OS:  OSX Selenium Version:  3.0 Browser:  Safari ## Expected Behavior -  `client.js` file should allow Ruby's server to drive safari via extension ## Actual Behavior -  Safari starts but will not connect  If I comment out [this line](https://gist.github.com/titusfortner/f816a67d75091a34a3564ed117009fe9#file-client-js-L460), it works.   My best guess is that there is something else that I need to build for my ruby bindings that is already present when building the server, but I can't figure out what it is. That being said, I can delete all of the `goog.DEPENDENCIES_ENABLED` code in client.js and all of my tests pass both locally and through the server, so does it need to be there at all?","closed","C-rb,","titusfortner","2016-06-14T05:03:50Z","2019-08-20T02:09:54Z"
"","2250","IDE: Test Case / Properties filename looks editable but it isn't","## Meta -  OS:  OSX Selenium Version:  2.9.1 Browser:  Firefox  Browser Version:  47.0 ## Expected Behavior -  Either allow the user to rename a test case by changing the name in the Properties window, or make it clear the field is read-only. ## Actual Behavior - ## Steps to reproduce -  Right click on the name of a Test case and the click on Properties... You get a window with two text entry boxes, one with the name of the file and another one with the title of the script. The filename is not editable but there is no visual indications for this. The two fields look the same and they both look editable. See attached screenshot. ![screen shot 2016-06-10 at 9 02 57 am](https://cloud.githubusercontent.com/assets/48833/15955484/459f97dc-2eea-11e6-9386-dbc737bfdef5.png)","closed","C-ide,","szabgab","2016-06-10T06:04:19Z","2019-08-17T16:10:03Z"
"","2509","python client bindings do not support remote https selenium grid endpoints.","## Meta -  OS:  OSX Selenium Version:  2.53.6 on Python 2.7.12 Browser:  NA Browser Version:  NA ## Expected Behavior -  When specified a https grid location like `https://ondemand.saucelabs.com/wd/hub` user should be able to run tests the same as the http endpoint. ## Actual Behavior -  The python client throws the following error.  ``` >               % (hostname, ', '.join(map(repr, dnsnames)))) E           CertificateError: hostname '66.201.41.7' doesn't match either of '*.browserstack.com', 'browserstack.com'  /usr/local/Cellar/python/2.7.12/Frameworks/Python.framework/Versions/2.7/lib/python2.7/ssl.py:272: CertificateError ``` ## Steps to reproduce -  Attempt to start any session using the `https://ondemand.saucelabs.com/wd/hub` url for command executor.","closed","","mehmetg","2016-07-22T00:28:45Z","2019-08-19T12:09:51Z"
"","2299","firefox 47 has been release, please update accordingly","## Meta -  OS:  OSX Selenium Version:  2.53.2 JS Browser:  Firefox 47  I know i am logging a duplicate of #2110, but the browser has been released a week ago the the WebDriver has not been updated accordingly.  It is still looking for a **development** version of firefox which is not the case anymore, and thus not working with normal Firefox 47 release.","closed","","shaharmor","2016-06-16T10:11:57Z","2019-08-20T02:09:40Z"
"","2238","Firefox 48.0a2 crashed after loading webdriver extension","## Meta -  OS:  OSX Selenium Version:  2.53.0 Browser:  Firefox Browser Version:  48.0a2 ## Steps to reproduce -  [webdriver.zip](https://github.com/SeleniumHQ/selenium/files/305258/webdriver.zip) 1. Open webdriver.xpi file and edit install.rdf file. 2. Change maxVersion from 47.0 to 49.0 and save. 3. Open Firefox 48.0a2 (developer edition) and load webdriver extension. ## Actual Behavior -  Firefox crashed with error:  AdapterDeviceID: 0x0d26 AdapterVendorID: 0x8086 Add-ons: fxdriver%40googlecode.com:2.53.0,%7B972ce4c6-7e08-4474-a285-3208198ce6fd%7D:48.0a2,e10srollout%40mozilla.org:1.0,firefox%40getpocket.com:1.0.3b1,loop%40mozilla.org:1.4.0 AddonsShouldHaveBlockedE10s: 1 BuildID: 20160601004014 CrashTime: 1464794063 DOMIPCEnabled: 1 E10SCohort: unsupportedChannel EMCheckCompatibility: true Email:  FramePoisonBase: 7ffffffff0dea000 FramePoisonSize: 4096 InstallTime: 1464793833 MozCrashReason: MOZ_CRASH() Notes: AdapterVendorID: 0x8086, AdapterDeviceID: 0x0d26FP(D000-L10000-W00000000-T0100) GL Layers? GL Context? GL Context+ GL Layers+  ProductID: {ec8030f7-c20a-464f-9b0e-13a3a9e97384} ProductName: Firefox ReleaseChannel: aurora SafeMode: 0 SecondsSinceLastCrash: 21 StartupTime: 1464794058 TelemetryEnvironment: {""build"":{""applicationId"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""applicationName"":""Firefox"",""architecture"":""x86-64"",""buildId"":""20160601004014"",""version"":""48.0a2"",""vendor"":""Mozilla"",""platformVersion"":""48.0a2"",""xpcomAbi"":""x86_64-gcc3"",""hotfixVersion"":null,""architecturesInBinary"":""i386-x86_64""},""partner"":{""distributionId"":null,""distributionVersion"":null,""partnerId"":null,""distributor"":null,""distributorChannel"":null,""partnerNames"":[]},""system"":{""memoryMB"":16384,""virtualMaxMB"":null,""cpu"":{""count"":8,""cores"":4,""vendor"":""GenuineIntel"",""family"":6,""model"":70,""stepping"":1,""l2cacheKB"":256,""l3cacheKB"":6144,""speedMHz"":2200,""extensions"":[""hasMMX"",""hasSSE"",""hasSSE2"",""hasSSE3"",""hasSSSE3"",""hasSSE4_1"",""hasSSE4_2""]},""os"":{""name"":""Darwin"",""version"":""15.4.0"",""locale"":""en-IL""},""hdd"":{""profile"":{""model"":null,""revision"":null},""binary"":{""model"":null,""revision"":null},""system"":{""model"":null,""revision"":null}},""gfx"":{""D2DEnabled"":null,""DWriteEnabled"":null,""adapters"":[{""description"":null,""vendorID"":""0x8086"",""deviceID"":""0x0d26"",""subsysID"":null,""RAM"":null,""driver"":null,""driverVersion"":null,""driverDate"":null,""GPUActive"":true}],""monitors"":[{""screenWidth"":1440,""screenHeight"":900,""scale"":2},{""screenWidth"":1920,""screenHeight"":1080,""scale"":1}],""features"":{""compositor"":""none""}}},""settings"":{""blocklistEnabled"":true,""e10sEnabled"":true,""e10sCohort"":""unsupportedChannel"",""telemetryEnabled"":true,""locale"":""en-US"",""update"":{""channel"":""aurora"",""enabled"":true,""autoDownload"":true},""userPrefs"":{""browser.cache.disk.capacity"":358400,""browser.newtabpage.enhanced"":true,""browser.shell.checkDefaultBrowser"":false,""devtools.chrome.enabled"":true,""devtools.debugger.remote-enabled"":true,""xpinstall.signatures.required"":false},""addonCompatibilityCheckEnabled"":true,""isDefaultBrowser"":false},""profile"":{""creationDate"":16945},""addons"":{""activeAddons"":{""e10srollout@mozilla.org"":{""blocklisted"":false,""description"":""Staged rollout of Firefox multi-process feature."",""name"":""Multi-process staged rollout"",""userDisabled"":false,""appDisabled"":false,""version"":""1.0"",""scope"":1,""type"":""extension"",""foreignInstall"":false,""hasBinaryComponents"":false,""installDay"":16945,""updateDay"":16953,""isSystem"":true},""firefox@getpocket.com"":{""blocklisted"":false,""description"":""When you find something you want to view later, put it in Pocket."",""name"":""Pocket"",""userDisabled"":false,""appDisabled"":false,""version"":""1.0.3b1"",""scope"":1,""type"":""extension"",""foreignInstall"":false,""hasBinaryComponents"":false,""installDay"":16945,""updateDay"":16953,""isSystem"":true},""loop@mozilla.org"":{""blocklisted"":false,""description"":""Web sharing for Firefox"",""name"":""Firefox Hello"",""userDisabled"":false,""appDisabled"":false,""version"":""1.4.0"",""scope"":1,""type"":""extension"",""foreignInstall"":false,""hasBinaryComponents"":false,""installDay"":16945,""updateDay"":16953,""isSystem"":true},""fxdriver@googlecode.com"":{""blocklisted"":false,""description"":""WebDriver implementation for Firefox"",""name"":""Firefox WebDriver"",""userDisabled"":false,""appDisabled"":false,""version"":""2.53.0"",""scope"":1,""type"":""extension"",""foreignInstall"":false,""hasBinaryComponents"":true,""installDay"":16953,""updateDay"":16953,""signedState"":0,""isSystem"":false}},""theme"":{""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""blocklisted"":false,""description"":""The default theme."",""name"":""Default"",""userDisabled"":false,""appDisabled"":false,""version"":""48.0a2"",""scope"":4,""foreignInstall"":false,""hasBinaryComponents"":false,""installDay"":16945,""updateDay"":16953},""activePlugins"":[{""name"":""Default Browser Helper"",""version"":""601"",""description"":""Provides information about the default web browser"",""blocklisted"":false,""disabled"":false,""clicktoplay"":true,""mimeTypes"":[""application/apple-default-browser""],""updateDay"":16845},{""name"":""Java Applet Plug-in"",""version"":""Java 8 Update 77 build 03"",""description"":""Displays Java applet content, or a placeholder if Java is not installed."",""blocklisted"":false,""disabled"":false,""clicktoplay"":true,""mimeTypes"":[""application/x-java-applet;deploy=11.77.2"",""application/x-java-applet;version=1.4"",""application/x-java-applet;version=1.2.1"",""application/x-java-applet;version=1.2.2"",""application/x-java-applet;version=1.3"",""application/x-java-applet;version=1.8"",""application/x-java-vm"",""application/x-java-applet;version=1.1.1"",""application/x-java-applet;version=1.2"",""application/x-java-applet;version=1.7"",""application/x-java-applet;version=1.4.1"",""application/x-java-applet;version=1.1.2"",""application/x-java-applet"",""application/x-java-applet;jpi-version=1.8.0_77"",""application/x-java-applet;javafx=8.0.72"",""application/x-java-applet;version=1.1"",""application/x-java-applet;version=1.1.3"",""application/x-java-applet;version=1.6"",""application/x-java-applet;version=1.4.2"",""application/x-java-applet;version=1.3.1"",""application/x-java-applet;version=1.5""],""updateDay"":16881}],""activeGMPlugins"":{""gmp-gmpopenh264"":{""version"":""1.5.3"",""userDisabled"":false,""applyBackgroundUpdates"":1},""gmp-widevinecdm"":{""version"":""1.4.8.866"",""userDisabled"":false,""applyBackgroundUpdates"":1}},""activeExperiment"":{},""persona"":""firefox-devedition@mozilla.org""}} TextureUsage: 121936896 Theme: classic/1.0 Throttleable: 1 URL: about:sessionrestore UptimeTS: 5.15889829 Vendor: Mozilla Version: 48.0a2 useragent_locale: en-US","closed","","ronkorland","2016-06-08T16:40:16Z","2019-08-20T04:09:37Z"
"","2091","' > a' IS NOT WORK","## Meta -  OS:  OSX Selenium Version:  2.53.0 Browser:  Chrome Browser Version:  41 (64-bit)   BUG: ' > a' IS NOT WORK $('body > div.wrapper > div.container > div.content-wrapper > div > table > tbody > tr:nth-child(2) > td.first.nsb').find(' > a');  org.openqa.selenium.InvalidSelectorException: invalid selector: An invalid or illegal selector was specified **\* Element info: {Using=css selector, value= > a}","closed","","gMan1990","2016-05-12T09:30:26Z","2019-08-20T06:09:43Z"
"","2559","Firefox driver in 2.53.4 not working with Firefox 48","## Meta -  OS:  OSX  Selenium Version:  2.53.4  Browser:  Firefox  Browser Version:  48 ## Expected Behavior -  Firefox starts and is able to be controlled via Selenium ## Actual Behavior -  Firefox starts, but does nothing. After waiting long enough, I see an error like: ""`connect_until_stable': unable to obtain stable firefox connection in 60 seconds"". ## Steps to reproduce -  ``` rb Selenium::WebDriver.for :firefox ```  Downgrading to Firefox 47.0.1 resolves this issue for me.","closed","","lencioni","2016-08-02T23:12:10Z","2019-08-16T16:09:55Z"
"","2540","Selenium Grid Node crashes on startup when attempting to start node without -browser flag","## Meta -  OS:  OSX     Selenium Version:  '3.0.0-beta1', revision: '8e4315c'    Browser:  Not related to a specific browser    Browser Version:  Not related to a specific browser   ## Expected Behavior -  Node should spawn and get hooked to the Grid. ## Actual Behavior -  The node JVM crashes with the below stacktrace.  ```  java.lang.NullPointerException     at org.openqa.grid.common.RegistrationRequest.build(RegistrationRequest.java:186)     at org.openqa.grid.selenium.GridLauncherV3$3.launch(GridLauncherV3.java:242)     at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:85) ```  I believe the bug is due to this commit : https://github.com/SeleniumHQ/selenium/commit/55e987831d2550e57451b294262cd16b343d22da ## Steps to reproduce -  Download the latest released version of Selenium server standalone [3.0.0-beta1] and try spawning a Grid/Node setup using the below commands  Grid : `java -jar selenium-server-standalone-3.0.0-beta1.jar -role hub`  Node :  `java -jar selenium-server-standalone-3.0.0-beta1.jar -role node -hub http://localhost:4444/grid/register/`","closed","","krmahadevan","2016-07-30T17:17:17Z","2019-08-19T21:09:43Z"
"","2272","phantomjs of the process is not completed on osx","## Meta -  OS:  OSX    Selenium Version:  2.53.4    Browser:  phantomjs    Browser Version:  2.1.1    ``` $ phantomjs --version 2.1.1 ```  Python Version etc...:  ``` $ python Python 3.5.1 (default, Jun 11 2016, 19:40:49) [GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.72)] on darwin Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> import selenium >>> selenium.__version__ '2.53.4' >>> ``` ## Expected Behavior -  I hope that the process of phantomjs does not remain.  run.py  ``` :run.py from selenium.webdriver.phantomjs.webdriver import WebDriver driver = WebDriver() driver.close() driver.quit() ``` ## Actual Behavior -  However , there is a case that the process remains. ## Steps to reproduce -    ``` $ ps -ef | grep phantomjs   501 51810 15789   0  7:41PM ttys001    0:00.00 grep --color phantomjs $ python run.py $ ps -ef | grep phantomjs   501 51826     1   0  7:42PM ttys001    0:01.35 /Users/sximada/.nvm/versions/node/v6.2.0/lib/node_modules/phantomjs/lib/phantom/bin/phantomjs --cookies-file=/var/folders/hx/xp4thw0x7rj15r_2w57_wvfh0000gn/T/tmpci5a6uae --webdriver=62051   501 51830 15789   0  7:42PM ttys001    0:00.00 grep --color phantomjs $ ``` ## Details  First phantomjs is about,  When we run ""npm install phantomjs"", npm create a file ""node_modules/.bin/phantomjs"". ""node_modules/.bin/phantomjs"" is the following files .  ``` $ cat node_modules/.bin/phantomjs #!/usr/bin/env node  /**  * Script that will execute the downloaded phantomjs binary.  stdio are  * forwarded to and from the child process.  *  * The following is for an ugly hack to avoid a problem where the installer  * finds the bin script npm creates during global installation.  *  * {NPM_INSTALL_MARKER}  */  var path = require('path') var spawn = require('child_process').spawn  var binPath = require(path.join(__dirname, '..', 'lib', 'phantomjs')).path  var args = process.argv.slice(2)  // For Node 0.6 compatibility, pipe the streams manually, instead of using // `{ stdio: 'inherit' }`. var cp = spawn(binPath, args) cp.stdout.pipe(process.stdout) cp.stderr.pipe(process.stderr) process.stdin.pipe(cp.stdin)  cp.on('error', function (err) {   console.error('Error executing phantom at', binPath)   console.error(err.stack) })  cp.on('exit', function(code){   // Wait few ms for error to be printed.   setTimeout(function(){     process.exit(code)   }, 20) });  process.on('SIGTERM', function() {   cp.kill('SIGTERM')   process.exit(1) }) ```  A real phantomjs process be born using `spawn` function by childprocess (""node_modules/.bin/phantomjs"" proccess). It is the grandchild process.  Structure at this time , is the following structure .  ``` [current process]        [child process]                                  [grandchild process] selenium (python) ->  node_modules/.bin/phantomjs ->  node_modules/phantomjs/lib/phantomjs.js ```  Implementation of the termination process is the following (this is selenium python binding code).  https://github.com/SeleniumHQ/selenium/blob/051c8b110a1aec35247cd45fa4db85c6e522cdcb/py/selenium/webdriver/common/service.py#L151-L153  ```                 self.process.terminate()                 self.process.kill()                 self.process.wait() ```  In Posix OS process.terminate () is SIGTERM, process.kill () is SIGKILL. If child process before issuing the SIGTERM to grandchild process, parent process issued SIGKILL to child process... A child process will die, but a grandchild process will continue to live as a zombie. Actually, Stops correctly, sleep between ""self.process.ternimate()"" and ""self.process.kill()""  In Windows OS process.terminate () is Win32 API TerminateProcess(), and  process.kill() s Win32 API TerminateProcess() too. So it completed successfully, it work correctly child process's SIGTERM Handler.  node_modules/.bin/phantomjs  ``` process.on('SIGTERM', function() {   cp.kill('SIGTERM')   process.exit(1) }) ```  The cause of this problem is that it does not properly close their phantomjs.  To fix it will be considered in three ways.  (1) Correctly to end the phantomjs ( using the shutdown API). (2) Sleep between process.terminate() and process.kill(). (3) Only if the child process has not been completed in certain time, parent process call self.process.kill().","closed","C-py,","TakesxiSximada","2016-06-13T10:44:57Z","2019-08-16T22:09:54Z"
"","2127","Mocha BDD wrapping incorrectly handles pending tests","## Meta -  OS:  OSX    Selenium Version:  2.53.2, Node.js   ## Expected Behavior -  The `wrapped` function inside `javascript/node/selenium-webdriver/testing/index.js` should correctly return arguments to the wrapped function for pending tests. ## Actual Behavior -  In cases of pending tests, the first and only argument is a title string but the wrapper returns a new function with a function as the first argument instead. The title string is discarded entirely. The issue is not immediately apparent as the test run will continue without error. However, the Test object will not have all properties as expected which can cause issues for some advanced reporters. ## Steps to reproduce -    Create a test  ``` js // test.js var test = require('selenium-webdriver/testing'); test.it('Pending test should be written'); ```  Run the test via CLI  ``` bash mocha test.js ```  The `wrapped` function will be called with one argument, a string, ""Pending test should be written"". It will then call this function:  ``` js // selenium-webdriver/testing/index.js function makeAsyncTestFn(fn) {   var async = fn.length > 0; // if test function expects a callback, its ""async""    var ret = /** @type {function(this: mocha.Context)}*/ (function(done) {     var runnable = this.runnable();     var mochaCallback = runnable.callback;     runnable.callback = function() {       flow.reset();       return mochaCallback.apply(this, arguments);     };      var testFn = fn.bind(this);     flow.execute(function controlFlowExecute() {       return new promise.Promise(function(fulfill, reject) {         if (async) {           // If testFn is async (it expects a done callback), resolve the promise of this           // test whenever that callback says to.  Any promises returned from testFn are           // ignored.           testFn(function testFnDoneCallback(err) {             if (err) {               reject(err);             } else {               fulfill();             }           });         } else {           // Without a callback, testFn can return a promise, or it will           // be assumed to have completed synchronously           fulfill(testFn());         }       }, flow);     }, runnable.fullTitle()).then(seal(done), done);   });    ret.toString = function() {     return fn.toString();   };    return ret; } ```  The return will be an object, `ret` with a `runnable` property that, if called, will fail due to `var testFn = fn.bind(this)`. You cannot call `.bind()` on a string. There is no obvious error, however, because this all gets wrapped in a promise.","closed","","adamgruber","2016-05-19T15:41:51Z","2019-08-20T05:09:54Z"
"","2537","Random chrome session always hangs/stops responding in selenium node","## Meta -  OS:  OSX    Selenium Version:  2.53.1    Browser:  Chrome    Browser Version:  52.0.2743.82 (64-bit)   ## Expected Behavior -  A chrome session should open and navigate to the given url ## Actual Behavior -  Chrome session hangs and says Application not responding. It is not the same session that always hangs. A random session hangs when opening n number of sessions. ## Steps to reproduce -  Register 5 nodes to the hub Open more than 5 sessions in each node and do some operation A random session hangs during the automation run","closed","","ossa619","2016-07-29T07:49:17Z","2019-08-19T21:09:45Z"
"","2746","Event triggered by moveToElement incorrectly simulates left mouse button pressed","## Meta -  OS:  OSX    Selenium Version:  2.53.0 Browser:  Firefox    Browser Version:  44.0    I'm simulating `hover` using `moveToElement`.  ## Expected Behavior -  Event (`mousemove`, `mouseenter`) triggered by `moveToElement` should have the fields `event_.buttons` and `event_.which` set to 0. ## Actual Behavior -  Mentioned fields are set to 1. ## Steps to reproduce -  ``` java Actions action = new Actions(browser); WebElement we = browser.findElement(By.cssSelector(""someselector"")); action.moveToElement(we).perform(); ```","closed","D-atoms,","petrsimon","2016-09-09T05:47:12Z","2020-05-05T21:24:30Z"
"","2037","Files uploaded using chromedriver get content_type 'application/octet-stream'","## Meta -  OS:  OSX    Selenium Version:  2.51.0    Browser:  Google Chrome    Browser Version:  50.0.2661.94 (64-bit) Chromedriver Version: 2.21.371459   ## Expected Behavior -  CSV files inputted to the file input field (using send_keys) should have their content_type `text/csv` ## Actual Behavior -  They are of the content type `application/octet-stream`, so if the field is validated to accept only certain types (`text/csv'` or `'application/vnd.ms-excel'`) in my case, the file will fail to upload ## Steps to reproduce -   1. Use selenium to navigate to a page that has an input field of the type `file` 2. use `send_keys` to fill out the input field with the path to the file  3. Verify the content_type of the uploaded file  I can provide a more detailed example if needed.","closed","","siegcollado","2016-05-02T06:05:10Z","2019-08-20T07:09:45Z"
"","2072","FireFox WebDriver does not accept javascript alert","## Meta -  OS:  OS: Mac OS X 10.11.4 x86_64    Selenium Version:  v2.53.0, with Core v2.53.0. Built from revision 35ae25b    Browser:  Firefox    Browser Version:  46.0.1   ## Expected Behavior -  unexpectedAlertBehaviour: 'ignore'  Javascript alert pops up  Using the text of alert and assert the text accept alert ## Actual Behavior -  Javascript alert pops up  closes immidiately  throw [Facebook\WebDriver\Exception\UnexpectedAlertOpenException]  ## Steps to reproduce -  StartSession (using codeception)  $driver->executeJS('alert(\'text\')');","closed","D-firefox,","AxelBeckert","2016-05-10T09:09:00Z","2019-08-17T02:09:34Z"
"","2022","FireFox WebDriver fails to open. After calling driver.close() in the @AfterMethod","## Meta -  OS:  os.version : 10.10.5 Selenium Version:  Browser: < --> FireFox  Browser Version:  45.0.2 ## Expected Behavior - The Firefox Webdriver should open after driver.close() in the @AfterMethod ## Actual Behavior - Currently After running 4 tests. The new Firefox web-browser fails to open. ## Steps to reproduce -    @Before Method = driver = new FirefoxDriver(); @Test - 17 tests. @AfterMethod = driver.close(). 4 tests pass. Skips all the tests from 5 - 17 .   Stack trace : - FAILED CONFIGURATION: @AfterMethod closeBrowser org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 16:57:40' System info: host: 'Sauravs-MacBook-Pro.local', ip: '10.4.16.19', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_25' Driver info: driver.version: RemoteWebDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=45.0.2, platform=MAC, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: cebb9a3c-d46f-3949-8766-7250f88fd012     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)     at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:521)     at com.qa.automation.util.SeleniumTest.closeWebBrowser(SeleniumTest.java:67)     at com.qa.automation.testcase.HomePage.closeBrowser(HomePage.java:132)     at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)     at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:216)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:712)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)     at org.testng.TestRunner.privateRun(TestRunner.java:778)     at org.testng.TestRunner.run(TestRunner.java:632)     at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)     at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)     at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)     at org.testng.SuiteRunner.run(SuiteRunner.java:268)     at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)     at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)     at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)     at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)     at org.testng.TestNG.runSuites(TestNG.java:1075)     at org.testng.TestNG.run(TestNG.java:1047)     at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)     at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)     at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58) Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:7055 [/127.0.0.1] failed: Connection refused     at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:151)     at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)     at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)     at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)     ... 30 more Caused by: java.net.ConnectException: Connection refused     at java.net.PlainSocketImpl.socketConnect(Native Method)     at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)     at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)     at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)     at java.net.Socket.connect(Socket.java:589)     at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)     at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:134)     ... 45 more","closed","","skhuntia87","2016-04-28T18:39:04Z","2019-08-19T09:09:53Z"
"","2132","SafariDriver no longer works with 2.53","## Meta -  OS:  OS X: 10.10.5 Selenium Version:   2.53 Browser:  Safari Browser Version:    9.1.1 (10601.6.17) ## Expected Behavior -  Displays the Title was: Google ## Actual Behavior -  16:30:25.120 WARN - Exception: Failed to connect to SafariDriver after 10058 ms ## Steps to reproduce  [See this github repo](https://github.com/kurtharriger/safari-driver-issue) for minimal example, logs and screenshots","closed","A-needs new owner,","kurtharriger","2016-05-19T22:54:18Z","2019-08-20T04:09:53Z"
"","2628","Chrome 54 Failing to connect","## Meta -  OS:  OS X, Gnome Ubuntu 16.04 Selenium Version:   3.0.0-beta-2 Browser:   Chrome  Browser Version:   54 ## Expected Behavior -  To open browser and get page when calling get('https://google.com/') ## Actual Behavior -  The browser opens but the page is never navigated to ## Steps to reproduce -  Just try call get on a webdriver pointing at Chrome 54  Error Given:   SessionNotCreatedError: session not created exception from unknown error: Runtime.executionContextCreated has invalid 'context': {""auxData"":{""frameId"":""17195.1"",""isDefault"":true},""id"":1,""name"":"""",""origin"":""://""}   (Session info: chrome=54.0.2824.0)   (Driver info: chromedriver=2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4),platform=Mac OS X 10.11.6 x86_64)","closed","","gauntface","2016-08-18T19:02:25Z","2019-08-19T04:09:56Z"
"","2457","How do I prevent Selenium from catching an Error?","## Meta -  OS:  OS X 10.11.15 Selenium Version:  2.53.3 Browser:  Chrome ## Question  I am calling Selenium from Meteor (running on the server on top of Node.js), as follows:  ``` var webdriver = require('selenium-webdriver')  function getPage(page) {      driver = driver || new webdriver.Builder().forBrowser('chrome').build();      driver.get(page).catch(function(error){         throw new Meteor.Error(""Can't get page "" + page)     }) } ```  When the page is not found and `Meteor.Error` is thrown, I am getting the following:  ``` W20160712-12:49:40.093(-7)? (STDERR)  W20160712-12:49:40.104(-7)? (STDERR) /Users/irinaapex/irina/meteor/selenium/node_modules/selenium-webdriver/lib/promise.js:654 W20160712-12:49:40.104(-7)? (STDERR)     throw error; W20160712-12:49:40.105(-7)? (STDERR)     ^ W20160712-12:49:40.105(-7)? (STDERR) Error: [Can't get page i] W20160712-12:49:40.118(-7)? (STDERR)     at imports/somethingSel.js:35:15 W20160712-12:49:40.120(-7)? (STDERR)     at ManagedPromise.invokeCallback_ (/Users/irinaapex/irina/meteor/selenium/node_modules/selenium-webdriver/lib/promise.js:1379:14) W20160712-12:49:40.121(-7)? (STDERR)     at TaskQueue.execute_ (/Users/irinaapex/irina/meteor/selenium/node_modules/selenium-webdriver/lib/promise.js:2913:14) W20160712-12:49:40.123(-7)? (STDERR)     at TaskQueue.executeNext_ (/Users/irinaapex/irina/meteor/selenium/node_modules/selenium-webdriver/lib/promise.js:2896:21) W20160712-12:49:40.124(-7)? (STDERR)     at /Users/irinaapex/irina/meteor/selenium/node_modules/selenium-webdriver/lib/promise.js:2775:27 W20160712-12:49:40.132(-7)? (STDERR)     at /Users/irinaapex/irina/meteor/selenium/node_modules/selenium-webdriver/lib/promise.js:639:7 W20160712-12:49:40.134(-7)? (STDERR)     at /Users/irinaapex/.meteor/packages/promise/.0.8.3-beta.9.1fbal0n++os+web.browser+web.cordova/npm/node_modules/meteor-promise/fiber_pool.js:32:39 => Exited with code: 1 W20160712-12:49:53.217(-7)? (STDERR) Debugger listening on port 49906 => Meteor server restarted ```  Looks like Selenium is catching the Error and exiting. How do I suppress this behavior? I want to recover gracefully from a url not found.  Sorry if this is not an ""issue"", I could not find an answer elsewhere.","closed","","OptimisticLock","2016-07-12T23:36:15Z","2019-08-19T22:10:01Z"
"","2600","Make it possible to choose Geckodriver for Firefox","## Meta -  OS:  OS X Selenium Version: v3.0.0-beta-2 Browser:  Firefox 48 Javascript/NodeJS version  In the current version the Geckodriver is found searching the PATH. I would love to see the same implementation as for Chrome and Chromedriver where you can specify the Chromedriver using the ServiceBuilder. Or a simpler solution for now where you can specify the path to Geckodriver using a property.   That would make it easier for us to automatically choose which Geckodriver to use, so the user doesn't need to be involved (in an embedded app).","closed","I-enhancement,","soulgalore","2016-08-11T07:01:55Z","2019-08-18T08:10:02Z"
"","2720","Running `test_javascript` tests fails due to attempting to use the old WebDriver with Firefox 48","## Meta -  OS:  OS X    Selenium Version:  Latest master (73b4d1c659d12e5012c92a009ab90f2dafedf7b9) Browser:  Firefox 48 installed in /Applications/Firefox.app/    Browser Version:  48.0.1   ## Expected Behavior -  `./go test_javascript` should pass after running tests. ## Actual Behavior -  `./go test_javascript` does a few things, and then hangs when Firefox starts up. Looking in Tools -> Add-ons shows that the old WebDriver extensions is installed but disabled due to not being signed. ## Steps to reproduce -   - Check out latest source - Run `./go clean test_javascript`","closed","","Standard8","2016-09-05T18:43:32Z","2019-08-19T13:10:01Z"
"","2578","Driver.get(url) never works outside the function that creates the driver","## Meta -  OS:  Mac OSX El Captain, Version 10.11.6 Selenium Version:  2.53.3 Browser:  Firefox  Browser Version:  47.0.1 ## Expected Behavior -  driver.get(url) should navigate to the new url anytime it is called. ## Actual Behavior -  driver.get(url) navigates only if you use it in the same function that created the driver instance. If you store driver globally and then use driver.get(url) then it doesn't navigate ## Steps to reproduce -  Set up a mocha selenium test like this:   var driver; //global function createSeleniumDriver {       var driver = new selenium.Builder().           withCapabilities(TestConstants.BROWSER_TO_USE).           build();       driver.manage().window().maximize();       driver.manage().timeouts().implicitlyWait(10000);       return driver; };  test.before(function(done){             this.timeout(20000);             driver = createSeleniumDriver();             driver.get('http://localhost:3000/sign_in'); //navigates to url correctly             // do some thing on the sign in page to sign in             var url = 'http://localhost:3000/flow/123';             driver.get(url); //navigates to url correctly             done();    });    test.beforeEach(function(done){       var url = 'http://localhost:3000/flow/456';       driver.get(url); //this navigation never happens - ISSUE!       done();   });    The driver.get(url) never works outside the before.","closed","C-nodejs,","dhiviyadhanasekar","2016-08-05T23:10:33Z","2019-08-19T19:09:56Z"
"","2794","maximize method is not working. OS : MAC","## Meta -  OS:  MAC OSX Selenium Version:   selenium : selenium-java-3.0.0-beta3 Browser:   All browsers(Except Marionette) Inches : 15 ## Expected Behavior - driver.manage().window().maximize should maximize the browser window.  As a workaround I am using   public static void maximizeScreen(WebDriver driver) {         java.awt.Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();         Point position = new Point(0, 0);         driver.manage().window().setPosition(position);         Dimension maximizedScreenSize =             new Dimension((int) screenSize.getWidth(), (int) screenSize.getHeight());         driver.manage().window().setSize(maximizedScreenSize);       } ## Actual Behavior - driver.manage().window().maximize() is not working.","closed","","hemanthsridhar","2016-09-19T18:40:45Z","2019-08-16T17:09:46Z"
"","2665","Enabling javascript when interacting with Selenium to Google Translate website fails","## Meta -  OS:  Mac OS X 10.11.6  Selenium Version:  3 beta (driver)  Browser:  All, Java language  Browser Version:  All ## Expected Behavior -  No exception must be reported ## Actual Behavior -  Exception: `Caused by: java.lang.RuntimeException: com.gargoylesoftware.htmlunit.ScriptException: TypeError: Cannot delete property ""1"" of undefined (https://translate.google.it/translate/releases/twsfe_w_20160822_RC00/r/js/desktop_module_main.js#16)` ## Steps to reproduce -  Simply try the following code:  ``` WebDriver driver = new HtmlUnitDriver(true); driver.get(""https://translate.google.it""); ```","closed","","davide1995","2016-08-25T08:50:45Z","2019-08-19T19:09:35Z"
"","2309","WebDriver Proxy setting does not work","## Meta -  OS:  Mac OS X 10.11.5 Selenium Version: 2.53.2 ## Expected Behavior -  Expect selenium-webdriver to connect to a remote Selenium server through a proxy when using `usingWebDriverProxy`. ## Actual Behavior -  selenium-webdriver does not proxy requests correctly to remote Selenium server, even when `usingWebDriverProxy` option is set correctly. Instead, it sends webdriver requests directly to the proxy server. ## Steps to reproduce - 1. On Mac, install and run [SquidMan](http://squidman.net/) proxy server on port 8080 (default settings) 2. Run the code below using NodeJS, which attempts to connect to a remote Selenium server. 3. When run, will output an error. Should instead get ""successful connection using proxy"" message.  ``` var webdriver = require('selenium-webdriver'); new webdriver.Builder()     .forBrowser('chrome')     .usingWebDriverProxy('http://localhost:8080')     .usingServer('http://ondemand.saucelabs.com/wd/hub')     .buildAsync()     .then(function(driver) {         driver.quit();     })     .catch(function(ex) {         var err = ex.stack.toString();         if (err.indexOf('Sauce Labs Authentication Error') > -1) {             return console.log('Successful connection using proxy!')         }         console.error(err);     }); ```","closed","C-nodejs,","loyalchow","2016-06-17T18:26:56Z","2019-08-20T01:10:00Z"
"","2228","Feature Request: Tell Chrome to Launch with Developer Tools Open","## Meta -  OS:  Mac OS X 10.11.5  Selenium Version:  selenium-webdriver (2.53.0)  Browser:    Chrome   Browser Version:   50.0.2661.102 (64-bit)  I am using chrome via Capybara on a Mac. I am using Capybara 2.7.1 on a Rails 4.1.14.2 app  in my spec_helper, I have configured selenium like so:  ``` Capybara.register_driver :chrome do |app|   Capybara::Selenium::Driver.new(app, :browser => :chrome) end  Capybara.javascript_driver = :chrome ``` ## Expected Behavior -  I want to be configure the driver to open Developer Tools **when the test first starts to run**, i.e., when the chrome driver instance is launched. If I knew how to launch Chrome with dev tools open I think that https://github.com/SeleniumHQ/selenium/issues/2227 would be moot and also I could use this to drop into my debugger while running a Capybara test ## Actual Behavior -  not applicable","closed","","jasonfb","2016-06-07T13:52:10Z","2019-08-16T18:09:43Z"
"","2227","When using Chrome, dev tools annoyingly difficult to open","## Meta -  OS:  Mac OS X 10.11.5  Selenium Version:  selenium-webdriver (2.53.0)  Browser:    Chrome   Browser Version:   50.0.2661.102 (64-bit)  I am using chrome via Capybara on a Mac. I am using Capybara 2.7.1 on a Rails 4.1.14.2 app  in my spec_helper, I have configured selenium like so:  ``` Capybara.register_driver :chrome do |app|   Capybara::Selenium::Driver.new(app, :browser => :chrome) end  Capybara.javascript_driver = :chrome ``` ## Expected Behavior -  I want to be able to open Developer Tools while a test is running to inspect Javascript in realtime. ## Actual Behavior -  When I choose Dev tools from the menu or Cmd-Option-I from the keyboard, Chrome does not open Dev tools. Sometimes I must do it about 4 times (or 5) times before Chrome actually opens the developer console. developer üò¢  . ## Steps to reproduce -   1. create a spec with capybara, set a high wait timeout 2. run your spec 3. try Cmd-Option-I to open developer tools while the spec is running 4. developer tools do not open, or it opens intermittently, or you must repeat step 3 about 4 or 5 times before it opens","closed","","jasonfb","2016-06-07T13:48:10Z","2019-08-16T18:09:55Z"
"","2160","JsonWire: Unexpected error on command sendKeys","## Meta -  OS:  Mac OS X 10.11.4 x86_64 Selenium Version:  v2.53.0, with Core v2.53.0. Built from revision 35ae25b Browser:  Firefox  Browser Version:  46.0.1 (64-bit) ## Expected Behavior -  The command sendKeys should populate the targeted field with keys from the string passed in parameter. Reference [W3C WebDriver](https://www.w3.org/TR/webdriver/) ## Actual Behavior -  The command sendKeys terminates with an error, without sending the keys to the browser.  ``` Json {   ""state"": ""unhandled error"",   ""sessionId"": null,   ""hCode"": 1167126709,   ""value"": {     ""additionalInformation"": ""\nDriver info: driver.version: unknown"",     ""localizedMessage"": ""POST /session/b3ae7d05-176c-4479-b67e-faf7e1e0204b/element/0/sendKeys\nBuild info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58'\nSystem info: host: 'xxxxxxxxx.local', ip: 'xx.xx.xx.xx', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.4', java.version: '1.8.0_91'\nDriver info: driver.version: unknown"",     ""supportUrl"": null,     ""systemInformation"": ""System info: host: 'xxxxxxxxx.local', ip: 'xx.xx.xx.xx', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.4', java.version: '1.8.0_91'"",     ""cause"": null,     ""stackTrace"": [       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null     ],     ""suppressed"": [],     ""message"": ""POST /session/b3ae7d05-176c-4479-b67e-faf7e1e0204b/element/0/sendKeys\nBuild info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58'\nSystem info: host: 'xxxxxxxxx.local', ip: 'xx.xx.xx.xx', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.4', java.version: '1.8.0_91'\nDriver info: driver.version: unknown"",     ""hCode"": 774560526,     ""class"": ""org.openqa.selenium.UnsupportedCommandException"",     ""buildInformation"": null   },   ""class"": ""org.openqa.selenium.remote.Response"",   ""status"": 13 } ```  The server debug logs does not provide any relevant information: ` 18:46:55.766 DEBUG [15] org.openqa.selenium.remote.server.DriverServlet - Handling: POST /session/b3ae7d05-176c-4479-b67e-faf7e1e0204b/element/0/sendKeys 18:46:55.766 DEBUG [15] org.openqa.selenium.remote.server.DriverServlet - Error on: POST /session/b3ae7d05-176c-4479-b67e-faf7e1e0204b/element/0/sendKeys ` ## Steps to reproduce -  Using REST client (e.g. Postman for Chrome), setup a new session and send keys to an input field: ` http://127.0.0.1:4444/wd/hub/session/:sessionId:/element/0/sendKeys ` ` {       ""value"": ""shoes"" } ` I have tested using ""text"" instead of ""value"" as a parameter, also tested using array char instead of string.","closed","","edno","2016-05-24T18:04:20Z","2019-08-20T05:09:41Z"
"","2220","SafariDriver - Timed out awaiting response to command","## Meta -  OS:  Mac OS X 10.11.3  Selenium Version:   2.48.2  Browser:   Safari  Browser Version:   9.0.3 ## Expected Behavior - ## Actual Behavior -  SafariDriver is failing with:  org.openqa.selenium.TimeoutException: Timed out awaiting response to command ""findElement"" after 30005 ms (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 30.12 seconds ## Steps to reproduce -  The problem is that I don't have concrete steps to reproduce as this failure is intermittent. Roughly speaking if I run a suite of 20 tests, 2 - 3 test will fail with this TimeoutException.  The command that is actually failing is not only findElement. I got also the same error for clickElement.  **Below the stack trace of the error:** Caused by: org.openqa.selenium.TimeoutException: Timed out awaiting response to command ""clickElement"" after 30007 ms (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 30.01 seconds Build info: version: '2.48.2', revision: '41bccdd', time: '2015-10-09 19:59:12' System info: host: 'macos02.servers.qanet.ecircle.de', ip: '10.40.0.155', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.3', java.version: '1.8.0_91' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{browserName=safari, takesScreenshot=true, javascriptEnabled=true, version=9.0.3, cssSelectorsEnabled=true, platform=MAC, secureSsl=true}] Session ID: null Build info: version: '2.48.2', revision: '41bccdd10cf2c0560f637404c2d96164b67d9d67', time: '2015-10-09 13:08:06' System info: host: '52cd9da1f321', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.5.0-coreos-r1', java.version: '1.8.0_72' Driver info: driver.version: RemoteWebDriver sun.reflect.GeneratedConstructorAccessor41.newInstance(Unknown Source) sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) java.lang.reflect.Constructor.newInstance(Constructor.java:423) org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:647) org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:326) org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84) sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement$1.invoke(EventFiringWebDriver.java:334) com.sun.proxy.$Proxy2.click(Unknown Source) org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.click(EventFiringWebDriver.java:347) sun.reflect.GeneratedMethodAccessor15.invoke(Unknown Source) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) org.openqa.selenium.remote.server.KnownElements$1.invoke(KnownElements.java:64) com.sun.proxy.$Proxy3.click(Unknown Source) org.openqa.selenium.remote.server.handler.ClickElement.call(ClickElement.java:30) org.openqa.selenium.remote.server.handler.ClickElement.call(ClickElement.java:1) java.util.concurrent.FutureTask.run(FutureTask.java:266) org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) java.lang.Thread.run(Thread.java:745)  **The second stack**  Caused by: org.openqa.selenium.TimeoutException: Timed out awaiting response to command ""findElement"" after 30005 ms (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 30.12 seconds Build info: version: '2.48.2', revision: '41bccdd', time: '2015-10-09 19:59:12' System info: host: 'macos02.servers.qanet.ecircle.de', ip: '10.40.0.155', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.3', java.version: '1.8.0_91' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{browserName=safari, takesScreenshot=true, javascriptEnabled=true, version=9.0.3, cssSelectorsEnabled=true, platform=MAC, secureSsl=true}] Session ID: null **\* Element info: {Using=name, value=srch_name} Build info: version: '2.48.2', revision: '41bccdd10cf2c0560f637404c2d96164b67d9d67', time: '2015-10-09 13:08:06' System info: host: '52cd9da1f321', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '4.5.0-coreos-r1', java.version: '1.8.0_72' Driver info: driver.version: EventFiringWebDriver sun.reflect.GeneratedConstructorAccessor41.newInstance(Unknown Source) sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) java.lang.reflect.Constructor.newInstance(Constructor.java:423) org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206) org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158) org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:647) org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353) org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:451) org.openqa.selenium.By$ByName.findElement(By.java:303) org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:345) sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source) sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.lang.reflect.Method.invoke(Method.java:498) org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:102) com.sun.proxy.$Proxy1.findElement(Unknown Source) org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:187) org.openqa.selenium.remote.server.handler.FindElement.call(FindElement.java:48) org.openqa.selenium.remote.server.handler.FindElement.call(FindElement.java:1) java.util.concurrent.FutureTask.run(FutureTask.java:266) org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176) java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) java.lang.Thread.run(Thread.java:745)","closed","A-needs new owner,","ghost","2016-06-06T14:32:16Z","2019-08-22T07:56:25Z"
"","2583","SafariDriver: assumes that all returned JavaScript objects with `nodeType: 1` are HTMLElement nodes","## Meta -  OS:  Mac OS X OS Version: 10.11 Selenium Version:  2.53.1 Browser:  Safari Browser Version:  9.0 ## Expected Behavior -  Objects returned from `JavascriptExecutor.executeScript(String)` may contain properties named ""nodeType"" with value `1` and not be HTMLElement nodes. ## Actual Behavior -  Attempting to get any object via `JavascriptExecutor.executeScript(String)` which has a property named ""nodeType"" and a value of `1` causes a `WebDriverException` with message, ""undefined is not an object (evaluating 'c.tagName.toLowerCase')"". ## Steps to reproduce -  ``` java import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.Platform; import org.openqa.selenium.WebDriver; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver;  import java.net.MalformedURLException; import java.net.URL;  public class SafariAssumedElementDemo {     public static void main(String... args) throws MalformedURLException {         String username = System.getenv(""SAUCE_USERNAME"");         String accessKey = System.getenv(""SAUCE_ACCESS_KEY"");         String host = ""ondemand.saucelabs.com:80"";         URL remoteAddress = new URL(String.format(""http://%s:%s@%s/wd/hub"", username, accessKey,                 host));         DesiredCapabilities desiredCapabilities = DesiredCapabilities.safari();         desiredCapabilities.setPlatform(Platform.EL_CAPITAN);         desiredCapabilities.setVersion(""latest"");         WebDriver webDriver = new RemoteWebDriver(remoteAddress, desiredCapabilities);         try {             JavascriptExecutor javascriptExecutor = (JavascriptExecutor) webDriver;             javascriptExecutor.executeScript(""return { nodeType: 1 }"");         } finally {             webDriver.quit();         }     } } ``` ### Example Output -  ``` Exception in thread ""main"" org.openqa.selenium.WebDriverException: undefined is not an object (evaluating 'c.tagName.toLowerCase') (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 14 milliseconds Build info: version: '2.48.0', revision: 'b7b081a', time: '2015-10-07 15:48:56' System info: host: 'itako47035.prod.miso', ip: '172.20.47.35', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11', java.version: '1.8.0_92' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{browserName=safari, takesScreenshot=true, javascriptEnabled=true, version=9.0, cssSelectorsEnabled=true, platform=MAC, secureSsl=true}] Session ID: null Command duration or timeout: 321 milliseconds Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09' System info: host: 'NTISP138', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_60' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{webdriver.remote.sessionid=18708d5480904f159be40770f90149f3, takesScreenshot=true, browserName=safari, javascriptEnabled=true, hasMetadata=true, version=9.0, cssSelectorsEnabled=true, platform=MAC, secureSsl=true}] Session ID: 18708d5480904f159be40770f90149f3     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:422)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)     at SafariAssumedElementDemo.main(SafariAssumedElementDemo.java:23)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147) Caused by: org.openqa.selenium.WebDriverException: undefined is not an object (evaluating 'c.tagName.toLowerCase') (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 14 milliseconds Build info: version: '2.48.0', revision: 'b7b081a', time: '2015-10-07 15:48:56' System info: host: 'itako47035.prod.miso', ip: '172.20.47.35', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11', java.version: '1.8.0_92' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{browserName=safari, takesScreenshot=true, javascriptEnabled=true, version=9.0, cssSelectorsEnabled=true, platform=MAC, secureSsl=true}] Session ID: null Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09' System info: host: 'NTISP138', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_60' Driver info: driver.version: EventFiringWebDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:647)     at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:556)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:102)     at com.sun.proxy.$Proxy1.executeScript(Unknown Source)     at org.openqa.selenium.support.events.EventFiringWebDriver.executeScript(EventFiringWebDriver.java:216)     at org.openqa.selenium.remote.server.handler.ExecuteScript.call(ExecuteScript.java:56)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ```","closed","","mfulton26","2016-08-08T16:04:58Z","2019-08-19T15:10:00Z"
"","2496","Drag and drop is not working for HTML 5 demo site","## Meta -  OS:  Mac os Selenium Version:   2.53.1 Browser:   FF 47, Google chrome  Browser Version:   47 ## Expected Behavior -  Drag and drop should work ## Actual Behavior -  not Dragging content to the drop zone ## Steps to reproduce -  Run Below program  import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.interactions.Actions; import org.openqa.selenium.interactions.Action; import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.By;  import java.awt.*; import java.util.concurrent.TimeUnit;  public class Automation1 {     public static void main(String[] args) throws InterruptedException {         WebDriver driver = new FirefoxDriver();         driver.manage().timeouts().implicitlyWait(1,TimeUnit.MINUTES);         driver.get(""http://html5demos.com/drag"");  ```     WebElement dragElement = driver.findElement(By.id(""one""));     WebElement dropElement = driver.findElement(By.id(""bin""));      Actions builder = new Actions(driver);     builder.dragAndDrop(dragElement, dropElement).build().perform();     driver.close(); } ```  }","closed","","ridhdhi85","2016-07-20T16:37:23Z","2019-08-19T22:09:46Z"
"","2264","Firefox 47.0","## Meta -  OS:  Mac OS    Selenium Version:  2.53    Browser:  Firefox 47    Browser Version:     ## Expected Behavior -  Open Firefox ## Actual Behavior -  Not Open ## Steps to reproduce -","closed","","marcelosato","2016-06-10T19:58:00Z","2019-08-20T03:09:53Z"
"","2754","Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms.- Seems the same issues of #7819 (google code issues) in the new versions","## Meta -  OS:  Mac 10.11.3 Selenium Version:  3.0.0-beta3 Browser:  Firefox  Browser Version:  48.0 ## Expected Behaviour - It should open the url ## Actual Behaviour - It didn't open the url. Instead of that, Browser only opened. Not more further step moved. ## Code i used-  package selenium;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class FirstProgram {  ``` public static void main(String[] args) {     // TODO Auto-generated method stub      System.setProperty(""webdriver.firefox.marionette"",""/Users/Mohan/Downloads/geckodriver-v0.10.0-macos.tar "");     WebDriver driver=new FirefoxDriver();     driver.get(""http://www.twitter.com""); } ```  } ## Error What I got is:  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: 8-4474-a285-3208198ce6fd}"",""syncGUID"":""hpg-IO8jp9Cu"",""location"":""app-global"",""version"":""48.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1469550613000,""updateDate"":1469550613000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1473451836143   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1473451836145   DeferredSave.extensions.json    DEBUG   Save changes 1473451836145   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473451836145   addons.xpi-utils    DEBUG   Updating add-on states 1473451836146   addons.xpi-utils    DEBUG   Writing add-ons list 1473451836147   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1473451836148   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1473451836148   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1473451836148   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473451836149   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1473451836150   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1473451836201   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473451836202   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473451836202   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473451836202   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473451836203   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473451836204   addons.manager  DEBUG   Starting provider: GMPProvider 1473451836213   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473451836213   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473451836214   addons.manager  DEBUG   Starting provider: PluginProvider 1473451836214   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473451836214   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473451836214   addons.manager  DEBUG   Completed startup sequence 1473451836734   DeferredSave.extensions.json    DEBUG   Starting write 1473451836746   addons.manager  DEBUG   Starting provider:  1473451836746   addons.manager  DEBUG   Registering shutdown blocker for  1473451836747   addons.manager  DEBUG   Provider finished startup:  1473451836970   addons.repository   DEBUG   No addons.json found. 1473451836971   DeferredSave.addons.json    DEBUG   Save changes 1473451836973   DeferredSave.addons.json    DEBUG   Starting timer 1473451837035   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473451837035   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473451837035   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473451837040   DeferredSave.extensions.json    DEBUG   Write succeeded 1473451837041   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473451837042   DeferredSave.addons.json    DEBUG   Starting write 1473451837068   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:314) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:231) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:210) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:123) at selenium.FirstProgram.main(FirstProgram.java:14) ```  Exception in thread ""main"" org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/Applications/Firefox.app/Contents/MacOS/firefox-bin) on port 7055; process output follows:  8-4474-a285-3208198ce6fd}"",""syncGUID"":""hpg-IO8jp9Cu"",""location"":""app-global"",""version"":""48.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1469550613000,""updateDate"":1469550613000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1473451836143   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1473451836145   DeferredSave.extensions.json    DEBUG   Save changes 1473451836145   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473451836145   addons.xpi-utils    DEBUG   Updating add-on states 1473451836146   addons.xpi-utils    DEBUG   Writing add-ons list 1473451836147   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1473451836148   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1473451836148   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1473451836148   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473451836149   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1473451836150   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1473451836201   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473451836202   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473451836202   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473451836202   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473451836203   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473451836204   addons.manager  DEBUG   Starting provider: GMPProvider 1473451836213   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473451836213   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473451836214   addons.manager  DEBUG   Starting provider: PluginProvider 1473451836214   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473451836214   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473451836214   addons.manager  DEBUG   Completed startup sequence 1473451836734   DeferredSave.extensions.json    DEBUG   Starting write 1473451836746   addons.manager  DEBUG   Starting provider:  1473451836746   addons.manager  DEBUG   Registering shutdown blocker for  1473451836747   addons.manager  DEBUG   Provider finished startup:  1473451836970   addons.repository   DEBUG   No addons.json found. 1473451836971   DeferredSave.addons.json    DEBUG   Save changes 1473451836973   DeferredSave.addons.json    DEBUG   Starting timer 1473451837035   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473451837035   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473451837035   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473451837040   DeferredSave.extensions.json    DEBUG   Write succeeded 1473451837041   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473451837042   DeferredSave.addons.json    DEBUG   Starting write 1473451837068   DeferredSave.addons.json    DEBUG   Write succeeded  Build info: version: 'unknown', revision: 'c7b525d', time: '2016-09-01 14:52:30 -0700' System info: host: 'Mohankumars-MacBook-Air.local', ip: '192.168.0.100', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.3', java.version: '1.8.0_74' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:314)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:117)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:231)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:219)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:214)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:210)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:123)     at selenium.FirstProgram.main(FirstProgram.java:14) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: 8-4474-a285-3208198ce6fd}"",""syncGUID"":""hpg-IO8jp9Cu"",""location"":""app-global"",""version"":""48.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1469550613000,""updateDate"":1469550613000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""48.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[],""seen"":true} 1473451836143   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1473451836145   DeferredSave.extensions.json    DEBUG   Save changes 1473451836145   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1473451836145   addons.xpi-utils    DEBUG   Updating add-on states 1473451836146   addons.xpi-utils    DEBUG   Writing add-ons list 1473451836147   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1473451836148   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1473451836148   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1473451836148   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.4 1473451836149   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1473451836150   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.4.3 1473451836201   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1473451836202   addons.manager  DEBUG   Provider finished startup: XPIProvider 1473451836202   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1473451836202   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1473451836203   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1473451836204   addons.manager  DEBUG   Starting provider: GMPProvider 1473451836213   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1473451836213   addons.manager  DEBUG   Provider finished startup: GMPProvider 1473451836214   addons.manager  DEBUG   Starting provider: PluginProvider 1473451836214   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1473451836214   addons.manager  DEBUG   Provider finished startup: PluginProvider 1473451836214   addons.manager  DEBUG   Completed startup sequence 1473451836734   DeferredSave.extensions.json    DEBUG   Starting write 1473451836746   addons.manager  DEBUG   Starting provider:  1473451836746   addons.manager  DEBUG   Registering shutdown blocker for  1473451836747   addons.manager  DEBUG   Provider finished startup:  1473451836970   addons.repository   DEBUG   No addons.json found. 1473451836971   DeferredSave.addons.json    DEBUG   Save changes 1473451836973   DeferredSave.addons.json    DEBUG   Starting timer 1473451837035   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1473451837035   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1473451837035   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1473451837040   DeferredSave.extensions.json    DEBUG   Write succeeded 1473451837041   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1473451837042   DeferredSave.addons.json    DEBUG   Starting write 1473451837068   DeferredSave.addons.json    DEBUG   Write succeeded  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 8 more ```","closed","","imohank","2016-09-09T20:38:54Z","2019-08-19T17:09:52Z"
"","2292","Could not multiple options in multi select list via Select class , using Marionette driver","## Meta -  OS:  Lubuntu 14.04 Selenium Version:  2.53.0 Browser:  Firefox 47  Browser Version:  47.0 ## Expected Behavior  Able to select multiple options in multi select list via Select class , using Marionette driver ## Actual Behavior  Only one value is selected. Side note - using Chrome , everything is working as expected. ## Steps to reproduce  ```    WebElement webElement = webDriver.findElement( By.name( ""listbox1"" ) );      Select select = new Select( webElement );      for( String value : values ) {          select.selectByVisibleText( value );      } ```","closed","","ghost","2016-06-15T10:40:46Z","2019-08-22T07:55:32Z"
"","2740","Attaching file results in a zero sized file","## Meta -  OS:  Linux/Mac OSX 10.11.6  Selenium Version:   2.53.1 standalone, 2.53.1 grid (docker images), 3 (beta) Browser:   Chrome  Browser Version:   52.0.2743.116 (64-bit) ## Expected Behavior -  file is filled with a non zero sized file, correct file ## Actual Behavior -  File is attached with correct name, type, size ## Steps to reproduce -  Created a GIST with all files. https://gist.github.com/nickrealdini/c8d0dd301680c2305e41e05ffedcd758 - Behat runs the selenium SendKeys with firefox/chrome. In the details of the GIST you can see the  - page used/ just a simple page with a file input - description of all the setup in behat and also a description of what selenium drivers and versions used. We usually use docker containers to run selenium and also tried a standalone version to see the page running.  1 - attach a file to the page 2 - the page should have a correct File object in the file input, with non zero sized value and also trigger the change event on the file element  I hope the description is comprehensive. If I have skipped something pls let me know","closed","","bizmate","2016-09-08T10:13:15Z","2019-08-19T17:10:00Z"
"","2462","standalone-2.52.0: starts up and complains forever for no intelligible reason","## Meta -  OS:  Linux Ubuntu 16.04 Selenium Version:  standalone-2.52.0 Browser:  None yet per session; occurred after using phantomjs first time after firefox  [If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver]","closed","","QS-EXT-7NXT","2016-07-13T15:07:39Z","2019-08-19T22:09:48Z"
"","2489","Cookies are not served in spite of beeing in session","## Meta -  OS:  Linux Ubuntu Selenium Version:  2.53.0 Browser:  Firefox Browser Version:  45.0.2 ## Expected Behavior -  Session cookies to be served also in from new RemoteWebDriver if it is created from the same session ## Actual Behavior -  Session cookies, in spite of beeing in the session, are not forwarded ## Steps to reproduce -  //login to a page webdriver1 [login function] String latesturl = webdriver1.getCurrentUrl() //Retrieve the remote webdriver by session id with  capabilities.setCapability(""webdriver.remote.sessionid"", sessionId) -> webdriver2 //get the cookies Set cookies = webdriver2.manage.getCookies() //so far so good... //get the latest url  webdriver2.get(latesturl) //and you are logged out?!?!?!?!?! //why? //cookies are not server in spite of being in session! Set cookies2 = webdriver2.manage().getCookies() webdriver2.get(latesturl) //to set cookies cookies2.forEach { cookie ->  newWebDriver.manage().addCookie(cookie) }  newWebDriver.navigate().refresh() //and you are loggedin again  I believe this is not a desired behaviour, cookies should be served from session","closed","D-firefox,","gorgia","2016-07-19T17:59:44Z","2019-08-19T22:09:47Z"
"","2025","selenium cause many hung chrome processes issue","## Meta -  OS:  linux red hat     Selenium Version:  2.47.1    Browser:  Google Chrome    Browser Version:  google-chrome-stable-50.0.2661.75-1   ## Expected Behavior -  we run some scripts every five minutes in remote selenium mode , the results are usually good . But some times there will occur some hang process of chrome and they will never end . In the end it will never start session successful . ## Actual Behavior -  the hang process after selenium runs two days  ps -eo pid,tty,comm,user,lstart,etime |grep -i chrome 24153 ?        chrome          root     Wed Apr 20 09:55:00 2016  2-20:09:29 24229 ?        chrome          root     Wed Apr 20 09:55:00 2016  2-20:09:29 24859 ?        chrome          root     Wed Apr 20 09:55:02 2016  2-20:09:27 24875 ?        chrome          root     Wed Apr 20 09:55:02 2016  2-20:09:27 25034 ?        chrome          root     Wed Apr 20 09:55:03 2016  2-20:09:26 25344 ?        chrome          root     Wed Apr 20 09:55:12 2016  2-20:09:17 ## Steps to reproduce -    run 40 scripts  every 5 minutes in remote mode   for two days , and i think  it will occurs a lot of hang chrome process. the example of our scripts , you can run it via selenese runner [Jack-bing-com.zip](https://github.com/SeleniumHQ/selenium/files/241986/Jack-bing-com.zip)","closed","","leoforever","2016-04-29T08:40:49Z","2019-08-19T09:09:54Z"
"","2491","Selenium remote server can not run test failed with Unable to connect to host 127.0.0.1 on port 7055","## Meta -  OS:  Linux CentOS 7    Selenium Version:  2.53.1    Browser:  Firefox    Browser Version:  47.0   ## Expected Behavior -  Selienum could run ok for test ## Actual Behavior -   Exception: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: Error: GDK_BACKEND does not match available displays ## Steps to reproduce -    1.Setup a Selenium server  and run it like below: java -jar selenium-server-standalone-2.53.1.jar  1. Start firefox in above selenium server like below:    Xvfb :10 -ac    export DISPLAY=:10    firefox 2.  I have a second server which is for writing test scripts, like bleow example  ``` #!/usr/bin/env python  from selenium import webdriver  driver = webdriver.Remote(             desired_capabilities=webdriver.DesiredCapabilities.FIREFOX,             command_executor='http://:4444/wd/hub'             ) driver.get('http://saucelabs.com/test/guinea-pig') id = self.driver.session_id print 'Link to your job: https://saucelabs.com/jobs/%s' % id driver.quit()  ``` 1. Run above python script and got error below:  ``` Traceback (most recent call last):   File ""remotekick.py"", line 7, in      command_executor='http://10.15.240.120:4444/wd/hub'   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 90, in __init__     self.start_session(desired_capabilities, browser_profile)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 177, in start_session     response = self.execute(Command.NEW_SESSION, capabilities)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 236, in execute     self.error_handler.check_response(response)   File ""/usr/lib/python2.7/site-packages/selenium/webdriver/remote/errorhandler.py"", line 192, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: Error: GDK_BACKEND does not match available displays  Stacktrace:     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start (NewProfileExtensionConnection.java:112)     at org.openqa.selenium.firefox.FirefoxDriver.startClient (FirefoxDriver.java:271)     at org.openqa.selenium.remote.RemoteWebDriver. (RemoteWebDriver.java:119)     at org.openqa.selenium.firefox.FirefoxDriver. (FirefoxDriver.java:218)     at org.openqa.selenium.firefox.FirefoxDriver. (FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver. (FirefoxDriver.java:129)     at sun.reflect.NativeConstructorAccessorImpl.newInstance0 (NativeConstructorAccessorImpl.java:-2)     at sun.reflect.NativeConstructorAccessorImpl.newInstance (NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance (DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance (Constructor.java:526)     at org.openqa.selenium.remote.server.FirefoxDriverProvider.callConstructor (FirefoxDriverProvider.java:91)     at org.openqa.selenium.remote.server.FirefoxDriverProvider.newInstance (FirefoxDriverProvider.java:68)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance (DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call (DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call (DefaultSession.java:1)     at java.util.concurrent.FutureTask.run (FutureTask.java:262)     at org.openqa.selenium.remote.server.DefaultSession$1.run (DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:615)     at java.lang.Thread.run (Thread.java:745)  ```","closed","","HackToday","2016-07-20T05:39:09Z","2019-08-18T04:10:00Z"
"","2093","Firefox Timed out waiting for the WebDriver server at http://127.0.0.1:38407/hub","## Meta -  OS:  Linux and OSX  Selenium Version:  selenium-webdriver 2.53.2   Browser:   Firefox  Browser Version:   47.0b4 ## Expected Behavior -  Firefox to open, navigate to a web page and perform actions via the driver API ## Actual Behavior -  Firefox opens but fails to react to the driver API calls ## Steps to reproduce - - Grab code from: https://github.com/GoogleChrome/sw-testing-helpers - npm install - npm install gulp -g - Run `npm run build test`","closed","","gauntface","2016-05-12T13:15:25Z","2019-08-20T05:09:42Z"
"","2650","WebDriver Exception is being thrown in place of NoSuchElementException or TimeoutException for FindElement","## Meta -  OS:  Linux 3.13.0-74-generic x86_64  Selenium Version:  2.47.1  Browser:  Google Chrome  Browser Version:   51.0.2704.106 ## Expected Behavior -  driver.findElementbyID should through either NoSuchElementException or TimeoutException ## Actual Behavior -  driver.findElementbyID is throwing WebDriverException ## Steps to reproduce -  I am trying to scrape a website and seeing this issue on the website. The stacktrace is below The Html pages contain some user information which I am seeking a permission to share with you .But would like you to kindly suggest by having a look at the below stacktrace. The browser is working perfectly for multiple websites and for one particular website I am receiving this error.  I have tried with the latest chromedriver as well as previous versions as well.  Aug 23, 2016 6:03:15 AM org.openqa.selenium.support.ui.ExpectedConditions findElement WARNING: WebDriverException thrown by findElement(By.id: ABC) org.openqa.selenium.WebDriverException: unknown error: unhandled inspector error: {""code"":-32000,""message"":""Cannot find context with specified id""}   (Session info: chrome=51.0.2704.106)   (Driver info: chromedriver=2.23.409687 (c46e862757edc04c06b1bd88724d15a5807b84d1),platform=Linux 3.13.0-74-generic x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 624 milliseconds Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44' System info: host: 'ip-172-31-36-46', ip: '172.31.36.46', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-74-generic', java.version: '1.7.0_101' **\* Element info: {Using=id, value=ABC} Session ID: 261ad282e17a0d2d511b4f6e6fd0149c Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{platform=LINUX, acceptSslCerts=true, javascriptEnabled=true, browserName=chrome, chrome={userDataDir=/tmp/.org.chromium.Chromium.7Tpf1F, chromedriverVersion=2.23.409687 (c46e862757edc04c06b1bd88724d15a5807b84d1)}, networkConnectionEnabled=false, rotatable=false, locationContextEnabled=true, mobileEmulationEnabled=false, version=51.0.2704.106, takesHeapSnapshot=true, databaseEnabled=false, cssSelectorsEnabled=true, handlesAlerts=true, browserConnectionEnabled=false, webStorageEnabled=true, nativeEvents=true, hasTouchScreen=false, applicationCacheEnabled=false, takesScreenshot=true}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:348)     at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:389)     at org.openqa.selenium.By$ById.findElement(By.java:215)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:340)     at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:861)     at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)     at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)     at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)     at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)","closed","","shashwat51","2016-08-23T06:35:57Z","2019-08-16T12:09:34Z"
"","2230","Selenium  gives NoSuchDriverError when the tests  run more than 30 min","## Meta -  OS:  Linux 3.13    Selenium Version:  selenium-server-standalone-2.47.0.jar    Browser:  chromedriver=2.16.333243    Browser Version:  chromedriver=2.16.333243   ## Expected Behavior -  Test should  run without  throwing this  exception ## Actual Behavior -  throws  exception ## Steps to reproduce -  It's hard to  explain. When the  tests run through jenkins it  throws the  exception as  follows and  failed all  tests.  Selenium::WebDriver::Error::NoSuchDriverError:         Selenium::WebDriver::Error::NoSuchDriverError: no such session           (Driver info: chromedriver=2.16.333243 (0bfa1d3575fc1044244f21ddb82bf870944ef961),platform=Linux 3.13.0-43-generic x86_64)             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/response.rb:52:in `assert_ok'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/response.rb:15:in`initialize'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/http/common.rb:59:in `new'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/http/common.rb:59:in`create_response'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/http/default.rb:66:in `request'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/http/common.rb:40:in`call'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/bridge.rb:640:in `raw_execute'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/bridge.rb:618:in`execute'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/remote/bridge.rb:232:in `setWindowSize'             /var/lib/jenkins/.bundler/gems/selenium-webdriver-2.44.0/lib/selenium/webdriver/common/window.rb:78:in`resize_to'","closed","","graman71","2016-06-07T20:34:51Z","2019-08-20T03:09:38Z"
"","2133","Very slow loading of browser using phantomjs proxy","## Meta -  OS:  Linux (Ubuntu 15.10)    Selenium Version:      Browser:  phantomjs    Browser Version:  2.1.1   ## Expected Behavior -  Loading of page early  ## Actual Behavior -  Doesn't load and if it loads takes around 5 minutes And my code is:   for (var i = 0; i < array.length; i++) {         var webdriver = require('selenium-webdriver'),             proxy = require('selenium-webdriver/proxy');         var By = webdriver.By,             until = webdriver.until;         var driver = new webdriver.Builder()             .withCapabilities(webdriver.Capabilities.phantomjs())             .setProxy(proxy.manual({ http: array[i] }))             .build();         driver.manage().window().setSize(1920, 1080);         driver.get('http://example.com/')         driver.wait(webdriver.until.elementLocated(webdriver.By.tagName('h1')), 9000);         driver.findElement(webdriver.By.tagName('h1')).getInnerHtml().then(function(data){console.log(data);});  ---- In array i have sent array of working proxies","closed","C-nodejs,","rebatov","2016-05-20T06:24:11Z","2019-08-17T05:09:57Z"
"","2538","Cannot select an option in select (FF47 Marionette)","## Meta -  OS:  Linux (Debian)    Selenium Version:  2.53.4 (Ruby driver)    Browser:  Firefox 47 (Marionette)  Browser Version:   Firefox 47 (Marionette) ## Expected Behavior -  ``` driver.find_element_by_css_selector('select[name=""year""]').click() driver.find_element_by_css_selector('select[name=""year""] option[value=""2017""]').click() ```  Should select an option in select. ## Actual Behavior -  `driver.find_element_by_css_selector('select[name=""year""]').click()` Does not ""click"" on select (the select does not show the options). As a result trying to:  `driver.find_element_by_css_selector('select[name=""year""] option[value=""2017""]').click()`  results in:  `Selenium::WebDriver::Error::ElementNotVisibleError: Element is not visible`","closed","","swistak","2016-07-29T14:55:17Z","2019-08-19T21:09:44Z"
"","2524","Firefox WebDriver crashes with httplib.BadStatusLine","## Meta -  OS:  Linux (Debian Jessie) Selenium Version:  2.53.6 (python bindings) Browser:  Firefox Browser Version:  47.0.1 ## Expected Behavior -  Selenium will successfully navigate to a page (http://taobao.com). When manually navigated in the browser this completes sucessfully. ## Actual Behavior -  The webdriver and browser crash with `httplib.BadStatusLine`. ## Steps to reproduce -  ``` from selenium import webdriver                                                    driver = webdriver.Firefox()                                                     driver.get(""http://taobao.com"")                                                  driver.close()  ```  ``` Traceback (most recent call last):   File ""test_firefox.py"", line 4, in      driver.get(""http://taobao.com"")   File ""python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 248, in get     self.execute(Command.GET, {'url': url})   File ""python2.7/site-packages/selenium/webdriver/remote/webdriver.py"", line 234, in execute     response = self.command_executor.execute(driver_command, params)   File ""python2.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 401, in execute     return self._request(command_info[0], url, body=data)   File ""/python2.7/site-packages/selenium/webdriver/remote/remote_connection.py"", line 433, in _request     resp = self._conn.getresponse()   File ""/usr/lib/python2.7/httplib.py"", line 1073, in getresponse     response.begin()   File ""/usr/lib/python2.7/httplib.py"", line 415, in begin     version, status, reason = self._read_status()   File ""/usr/lib/python2.7/httplib.py"", line 379, in _read_status     raise BadStatusLine(line) httplib.BadStatusLine: ''  ```","closed","D-firefox,","royragsdale","2016-07-26T17:13:31Z","2019-08-15T17:10:02Z"
"","2311","org.openqa.selenium.remote.RemoteWebDriver.execute cannot get response intermittently","## Meta -  OS:  Linux Selenium Version: selenium-server-standalone-2.53.0.jar   Browser: Firefox 44.0.2 ## Expected Behavior -  After we call driver.get(""""), it is supposed to launch Firefox and enter the url, from the debug log, we can get 200 OK from the browser side  ``` _Line 854959: FINE: http-outgoing-5300: set socket timeout to 10800000 Line 854967: FINE: http-outgoing-5300 >> POST /hub/session HTTP/1.1 Line 854969: FINE: http-outgoing-5300 >> Content-Type: application/json; charset=utf-8 Line 854971: FINE: http-outgoing-5300 >> Content-Length: 105 Line 854973: FINE: http-outgoing-5300 >> Host: 127.0.0.1:7058 Line 854975: FINE: http-outgoing-5300 >> Connection: Keep-Alive Line 854977: FINE: http-outgoing-5300 >> User-Agent: Apache-HttpClient/4.5.1 (Java/1.7.0_79) Line 854979: FINE: http-outgoing-5300 >> Accept-Encoding: gzip,deflate Line 854981: FINE: http-outgoing-5300 >> ""POST /hub/session HTTP/1.1[\r][\n]"" Line 854983: FINE: http-outgoing-5300 >> ""Content-Type: application/json; charset=utf-8[\r][\n]"" Line 854985: FINE: http-outgoing-5300 >> ""Content-Length: 105[\r][\n]"" Line 854987: FINE: http-outgoing-5300 >> ""Host: 127.0.0.1:7058[\r][\n]"" Line 854989: FINE: http-outgoing-5300 >> ""Connection: Keep-Alive[\r][\n]"" Line 854991: FINE: http-outgoing-5300 >> ""User-Agent: Apache-HttpClient/4.5.1 (Java/1.7.0_79)[\r][\n]"" Line 854993: FINE: http-outgoing-5300 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" Line 854995: FINE: http-outgoing-5300 >> ""[\r][\n]"" Line 854997: FINE: http-outgoing-5300 >> ""{""desiredCapabilities"":{""platform"":""ANY"",""browserName"":""firefox"",""version"":""""},""requiredCapabilities"":{}}"" Line 854999: FINE: http-outgoing-5300 > Accept-Encoding: gzip,deflate Line 98693: FINE: http-outgoing-755 >> ""POST /hub/session HTTP/1.1[\r][\n]"" Line 98695: FINE: http-outgoing-755 >> ""Content-Type: application/json; charset=utf-8[\r][\n]"" Line 98697: FINE: http-outgoing-755 >> ""Content-Length: 105[\r][\n]"" Line 98699: FINE: http-outgoing-755 >> ""Host: 127.0.0.1:7057[\r][\n]"" Line 98701: FINE: http-outgoing-755 >> ""Connection: Keep-Alive[\r][\n]"" Line 98703: FINE: http-outgoing-755 >> ""User-Agent: Apache-HttpClient/4.5.1 (Java/1.7.0_79)[\r][\n]"" Line 98705: FINE: http-outgoing-755 >> ""Accept-Encoding: gzip,deflate[\r][\n]"" Line 98707: FINE: http-outgoing-755 >> ""[\r][\n]"" Line 98709: FINE: http-outgoing-755 >> ""{""desiredCapabilities"":{""platform"":""ANY"",""browserName"":""firefox"",""version"":""""},""requiredCapabilities"":{}}""_ ``` ## Steps to reproduce -  Check the logic in this method org.openqa.selenium.remote.RemoteWebDriver.execute(String, Map)  /\*  772 _/       if (response == null) { /_      _/         return null; /_      */       }  If we intermittently cannot get response from the browser side, for example, when the browser side is busy  or some unexpected things happen. 1. Do we suppose to throw exception instead of doing nothing? 2. Is there any way we can avoid no response? Or retry to get the browser connected? 3. Is there any way we can see why the browser side has no response?","closed","","sunswei","2016-06-17T22:52:16Z","2019-08-19T10:09:37Z"
"","2392","sendKeys throwing error with contenteditable","## Meta -  OS:  Linux Selenium Version:  2.53.2 Browser:  PhantomJS Browser Version:  2.1.7 ## Expected Behavior -  .sendKeys is able to send key sequences to contenteditable elements. ## Actual Behavior -  The following error is returned:  ```      WebDriverError: {""errorMessage"":""undefined is not an object (evaluating 'b.value.length')"",""request"":{""headers"":{""Accept"":""application/json; charset=utf-8"",""Connection"":""close"",""Content-Length"":""55"",""Content-Type"":""application/json;charset=UTF-8"",""Host"":""192.168.5.3:55158""},""httpVersion"":""1.1"",""method"":""POST"",""post"":""{\""value\"":[\""f\"",\""f\"",\""f\"",\""f\"",\""d\"",\""f\"",\""d\"",\""f\"",\""d\"",\""f\"",\""d\""]}"",""url"":""/value"",""urlParsed"":{""anchor"":"""",""query"":"""",""file"":""value"",""directory"":""/"",""path"":""/value"",""relative"":""/value"",""port"":"""",""host"":"""",""password"":"""",""user"":"""",""userInfo"":"""",""authority"":"""",""protocol"":"""",""source"":""/value"",""queryKey"":{},""chunks"":[""value""]},""urlOriginal"":""/session/78624e40-3d08-11e6-b2de-f52277c9effa/element/:wdc:1467101730092/value""}}          at WebDriverError (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/error.js:26:26)          at Object.checkLegacyResponse (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/error.js:639:15)          at parseHttpResponse (/home/joseph/projects/jernl/node_modules/selenium-webdriver/http/index.js:538:13)          at /home/joseph/projects/jernl/node_modules/selenium-webdriver/http/index.js:472:11          at ManagedPromise.invokeCallback_ (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/promise.js:1379:14)          at TaskQueue.execute_ (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/promise.js:2913:14)          at TaskQueue.executeNext_ (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/promise.js:2896:21)          at /home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/promise.js:2820:25          at /home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/promise.js:639:7          at process._tickCallback (node.js:377:9)      From: Task: WebElement.sendKeys()          at Driver.schedule (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/webdriver.js:377:17)          at WebElementPromise.schedule_ (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/webdriver.js:1744:25)          at WebElementPromise.sendKeys (/home/joseph/projects/jernl/node_modules/selenium-webdriver/lib/webdriver.js:1924:19)          at World.module.exports.__setDriver.fillFormWithProfile.typeTextInElementWithinElement (/home/joseph/projects/jernl/e2e/web-support/actions.js:38:115)          at doNTCallback0 (node.js:428:9) ``` ## Steps to reproduce -  ```  ```  Call `.sendKeys('asdf')` on it.","closed","","jsdevel","2016-06-28T08:28:17Z","2019-08-20T00:09:45Z"
"","2281","Setting marionette to true in Selenium::WebDriver::Remote::Capabilities sets Webdriver to local","## Meta -  OS:  Linux Selenium Version:  2.53.1 (selenium-webdriver Ruby gem) Browser:  Firefox 46 ## Expected Behavior -  A new session starts in selenium grid ## Actual Behavior - Test fails stating that there is no firefox binary in the same machine ## Steps to reproduce -  Just try to use marionette on a Selenium grid using ruby:  ```                 caps = Selenium::WebDriver::Remote::Capabilities.firefox(:marionette => true)                 Selenium::WebDriver.for(:remote,                                         :url => ""http://172.17.0.5:4444/wd/hub"",                                         :desired_capabilities => caps) ```  The call never gets to selenium-server, instead it fails with the following message:  Selenium::WebDriver::Error::WebDriverError:        Could not find Firefox binary (os=linux). Make sure Firefox is installed or set the path manually with Selenium::WebDriver::Firefox::Binary.path=","closed","C-rb,","Marcelovk","2016-06-14T09:13:43Z","2019-08-20T02:09:53Z"
"","2263","java.util.ConcurrentModificationException on grids with many nodes","## Meta -  OS:  Linux Selenium Version:  2.53.0 Grid Browser:  Firefox Browser Version:  38.3.0 ESR ## Expected Behavior -  A selenium hub should be able to accommodate an arbitrary number of nodes without error ## Actual Behavior -  When running a grid with 256 nodes, I frequently see the following stack trace on the hub:  ``` 19:17:43.916 ERROR - cannot forward the request null java.util.ConcurrentModificationException     at java.util.HashMap$HashIterator.nextNode(HashMap.java:1429)     at java.util.HashMap$EntryIterator.next(HashMap.java:1463)     at java.util.HashMap$EntryIterator.next(HashMap.java:1461)     at org.apache.http.pool.AbstractConnPool.purgePoolMap(AbstractConnPool.java:469)     at org.apache.http.pool.AbstractConnPool.closeIdle(AbstractConnPool.java:500)     at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.closeIdleConnections(PoolingHttpClientConnectionManager.java:358)     at org.openqa.selenium.remote.internal.HttpClientFactory.getGridHttpClient(HttpClientFactory.java:116)     at org.openqa.grid.internal.TestSession.getClient(TestSession.java:204)     at org.openqa.grid.internal.TestSession.sendRequestToNode(TestSession.java:365)     at org.openqa.grid.internal.TestSession.forward(TestSession.java:228)     at org.openqa.grid.web.servlet.handler.RequestHandler.forwardRequest(RequestHandler.java:97)     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:130)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) ```  This causes tests to fail with exceptions like `org.openqa.selenium.WebDriverException: Session [3216d4b3-1d92-4dbd-a9b2-d682e3406272] was terminated due to FORWARDING_TO_NODE_FAILED` ## Steps to reproduce -  Run a hub with a large number of selenium nodes and attempt to start a large number of tests simultaneously","closed","C-grid,","ekuefler","2016-06-10T19:26:04Z","2019-08-16T23:09:52Z"
"","2782","Any Way to Debug Selenium.js?","## Meta -  OS:  Irrelevant Selenium Version:  Current Browser:  Irrelevant  Selenium used to have `getInnerHtml` and `getOuterHtml` methods.  While those methods were understandably problematic, and while it's perfectly understandable why they were deprecated and then removed, nothing was added to fill their place (or at least nothing I can find in the documentation source code).  Furthermore much (all?) of the supplementary documentation on the web (ie. Stack Overflow posts, blog posts, etc.) all reference the html methods when explaining how to debug Selenium.  It is EXTREMELY helpful (borderline necessary) to be able to say ""what the heck is this WebElement I've got?"", but as far as I can tell there's no way to do that in Selenium.js today.   Therefore could you please add a `something` method to `WebElement` such that `console.log(aWebElement.something()` provides useful debugging info?  Failing that, a `aWebElement.getDebugInfo().then((x) => console.log(x))` would also be helpful, albeit less so.  Even if this method could only be used in 80% of the cases (because of the 20% of cases that made you remove the html methods) it would still be so much better than not having any way to debug at all.  P.S. While I am aware that one can do something like:  ``` Promse.all(     aWebElement.getId(),     aWebElement.getTagName(),     aWebElement.getText(),     aWebElement.getAttribute('attr1'),     aWebElement.getAttribute('attr2'),    etc. ).then(() => console.log(arguments) ```  ... is that really how you want every user of this library to have to debug their WebElements?  One has to imagine that there's a better way.","closed","","machineghost","2016-09-15T23:46:45Z","2019-08-19T16:10:01Z"
"","2576","Firefox 46.0.1 not opening with correct profile on Selenium Grid 2.53.1","## Meta -  OS:  hub=OSX, node=Windows 10 ## Selenium Version:  2.53.1 ## Browser:  Firefox  ## Browser Version:  46.0.1 ## Expected Behavior -  Browser launches with firefox profile configuration (or copy of configuration) specified in nodeconfig.json. ## Actual Behavior -  Browser appears to be launching with default profile. ## Steps to reproduce -  Save a Firefox profile, ""testprofile"" via firefox.exe -P.  Set something specific via about:config such as general.useragent.override.  Create a nodeconfig.json similar to the following:  ```         ""browserName"": ""firefox"",         ""firefox_profile"": ""testprofile"",         ""platform"": ""WIN10"",         ""firefox_binary"": ""C:\\Program Files\ (x86)\\Mozilla\ Firefox\\firefox.exe"" ```  Start hub, start node.  For node:  `java -cp selenium-server-standalone-2.53.0.jar org.openqa.grid.selenium.GridLauncher -role node -nodeConfig nodeconfig.json -hub http://xxx.xxx.xxx.xxx:4444/grid/register`  Launch code, similar to:  ``` DefaultCapabilities capabilities = new DesiredCapabilities(BrowserType.FIREFOX, ‚Äú‚Äù, Platform.ANY); return new RemoteWebDriver(new URL(‚Äúhttp://xxx.xxx.xxx.xxx:4444/wd/hub‚Äù), capabilities); ```  Note that the launched browser does not reflect configuration settings of the requested profile.","closed","","pennycurich","2016-08-04T19:02:02Z","2019-08-19T13:09:56Z"
"","2275","python: WebDriver capabilities argument not taken into account correctly","## Meta -  OS:  Debian 8 Selenium Version:  2.53.5 Browser: Firefox Browser Version: 47.0 ## Expected Behavior -  The following code  ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  capabilities = DesiredCapabilities.FIREFOX.copy() capabilities['marionette'] = True capabilities['acceptSslCerts'] = True driver = webdriver.Firefox(capabilities=capabilities) driver.quit() ```  should result in the 'acceptSslCerts' capability to be pass to geckodriver as a desiredCapabilities but this is not always the case, because of a bug in the start_session method of selenium.webdriver.remote.webdriver.WebDriver.  The bug is: - when start_session is called...   - desired_capabilities is a dict looking like this (simplified): {'acceptSslCerts': True, 'desiredCapabilities': {'binary': '/usr/bin/firefox', 'firefox_profile': u'...', 'args': []}}   - note that the 'desiredCapabilities' key has been added by the call to ""capabilities.update(self.options.to_capabilities())"" in the init method of selenium.webdriver.firefox.webdriver.WebDriver   - capabilities is a dict: {'desiredCapabilities': {}} - then the code iterates on desired_capabilities.items(). If the iteration ""process"" the key 'acceptSslCerts' _before_ the key 'desiredCapabilities', then the 'acceptSslCerts' capability will be lost ## Actual Behavior -  Depending on the iteration order of the desired_capabilities dict in start_session, the capabilities you pass will be ignored. ## Steps to reproduce -  Have a setup with firefox and geckodriver.  Run this code:  ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  capabilities = DesiredCapabilities.FIREFOX.copy() capabilities['marionette'] = True capabilities['acceptSslCerts'] = True  driver = webdriver.Firefox(capabilities=capabilities) driver.quit() ```  Look at the output of geckodriver.log: if you hit the bug, you'll see that the acceptSslCerts is not passed to newSession.  The bug is dependent on the iteration order of a python dictionary, so some people might not observe it depending on the python version and the content of the dictionary, etc.","closed","","elessard1","2016-06-13T14:42:20Z","2019-08-20T02:09:58Z"
"","2216","Timeout X milliseconds, multiple times, random behaviour","## Meta -  OS:  Debian 8 Selenium Version:  '2.53.0' Browser:  Firefox, PhantomJS, Selenium Grid, RemoteWebDriver Browser Version:   ## Expected Behavior  No exception is expected ## Actual Behavior -  Sometimes, whitout any reason nor clue it raise this exception on command like ""remoteWebDriver.manage().deleteAllCookies()"" ""remoteWebDriver.close()"" ""remoteWebDriver.navigate.refresh()"" org.openqa.selenium.WebDriverException: Session [12f4af00-2bd6-11e6-9ba7-11adcda9f531] was terminated due to TIMEOUT Command duration or timeout: 9 milliseconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'andrea-Z820-Ubu', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-23-generic', java.version: '1.8.0_91' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, handlesAlerts=false, databaseEnabled=false, version=2.0.0, platform=LINUX, browserConnectionEnabled=false, proxy={proxyType=direct}, nativeEvents=true, acceptSslCerts=false, driverVersion=1.2.0, locationContextEnabled=false, webStorageEnabled=false, browserName=phantomjs, takesScreenshot=true, driverName=ghostdriver, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 12f4af00-2bd6-11e6-9ba7-11adcda9f531     at sun.reflect.GeneratedConstructorAccessor70.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)     at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions.deleteAllCookies(RemoteWebDriver.java:773) [...] Caused by: org.openqa.grid.common.exception.GridException: Session [12f4af00-2bd6-11e6-9ba7-11adcda9f531] was terminated due to TIMEOUT     at org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:105)     at org.openqa.grid.internal.Registry.getExistingSession(Registry.java:425)     at org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:240)     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:120)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doDelete(DriverServlet.java:73)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     ... 1 common frames omitted ## Steps to reproduce -  Issue commands for about 15 minutes multiple times on the same instance of remote driver ""remoteWebDriver.manage().deleteAllCookies()"" ""remoteWebDriver.close()"" ""remoteWebDriver.navigate.refresh()""","closed","","gorgia","2016-06-06T11:31:43Z","2019-08-15T14:09:54Z"
"","2074","Aliases in /etc/hosts for 127.0.0.1 causes a ""Bad request"" error","## Meta -  OS:  Debian 7.10    Selenium Version:  2.53.0    Browser:  Firefox    Browser Version:  45 (package is 45.1.0esr-1~bpo70+1)    I've created a daemon which, when run, starts up Xvfb and Selenium 2.53.0 in the background. When I run my test, I get the following error:  ``` When I visit ""user""                                                                                                                    # Drupal\DrupalExtension\Context\MinkContext::assertAtPath()       Could not open connection: Bad request       Command duration or timeout: 11 milliseconds       Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58'       System info: host: 'server.example.net', ip: ‚Äò172.xx.xx.xx', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-4-amd64', java.version: '1.7.0_101'       Driver info: org.openqa.selenium.firefox.FirefoxDriver (Behat\Mink\Exception\DriverException) ```  After discussing with a colleague, it was determined the error was occurring due to the order of the 127.0.0.1 entry in /etc/hosts, which directly relates to https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/3280. I have this in /etc/hosts:  ``` 127.0.0.1       localhost.localdomain   localhost ```  When I reverse that to be:  ``` 127.0.0.1       localhost   localhost.localdomain ```  the test runs fine.   The /etc/hosts file is Puppet managed across our infrastructure, but more importantly, it was correct in the first place: an FQDN should come first followed by the short name.  In the archived issue linked above, this issue seems to have been fixed since 2.43.0, so it looks like there has potentially been a regression of sorts?  Does anyone else still experience this issue using the latest standalone server, 2.53.0? ## Steps to reproduce  This would be to simply adjust your /etc/hosts file and put localhost in front of any other aliases, like so:  ``` 127.0.0.1       localhost   localhost.localdomain alias etc ```  Thanks, Emlyn","closed","","EmlynK","2016-05-10T13:42:21Z","2019-08-15T10:09:48Z"
"","2739","selenium.common.exceptions.WebDriverException: Message: Can't load the profile.","## Meta -  OS:  Debian 3.16.36-1+deb8u1 (2016-09-03) x86_64 GNU/Linux Selenium Version:  2.53.6 Browser:  Firefox ESR Browser Version:  45.3.0(64-bit) Python Version: 3.4.2 ## Expected Behavior - 1. Open the browser 2. and open the url (https://www.baidu.com) ## Actual Behavior - 1. Open the browser 2. quit the browser 3. output the error message to the terminal  ``` bash (py342) woohoodai@Oycir:~/workspace/superlists$ python functional_test.py  Traceback (most recent call last):   File ""functional_test.py"", line 3, in      driver = webdriver.Firefox()   File ""/home/woohoodai/.pyenv/versions/py342/lib/python3.4/site-packages/selenium/webdriver/firefox/webdriver.py"", line 80, in __init__     self.binary, timeout)   File ""/home/woohoodai/.pyenv/versions/py342/lib/python3.4/site-packages/selenium/webdriver/firefox/extension_connection.py"", line 52, in __init__     self.binary.launch_browser(self.profile, timeout=timeout)   File ""/home/woohoodai/.pyenv/versions/py342/lib/python3.4/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 68, in launch_browser     self._wait_until_connectable(timeout=timeout)   File ""/home/woohoodai/.pyenv/versions/py342/lib/python3.4/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 108, in _wait_until_connectable     % (self.profile.path)) selenium.common.exceptions.WebDriverException: Message: Can't load the profile. Profile Dir: /tmp/tmpmtam_wio If you specified a log_file in the FirefoxBinary constructor, check it for details. ``` ## Steps to reproduce - 1. Run the script  ``` python from selenium import webdriver  driver = webdriver.Firefox()  driver.get('https://www.baidu.com') ```","closed","D-firefox,","WooHooDai","2016-09-08T08:57:26Z","2019-08-15T00:09:49Z"
"","2493","Selenium web remote driver can be slow for some website","## Meta -  OS:  CentOS 7    Selenium Version:  2.53.1    Browser:  Firefox    Browser Version:   47.0.1 ## Expected Behavior -  Python unitest should run quickly ## Actual Behavior -  Python unittest run slow ## Steps to reproduce -   - Setup remote selenium server, suppose ip is `10.10.12.23` - Install selenium client through pip - Then run following python test  ``` #encoding=utf8 import unittest from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  class PythonOrgSearch(unittest.TestCase):      def setUp(self):         print ""Setup now""         self.driver = webdriver.Remote(desired_capabilities=webdriver.DesiredCapabilities.FIREFOX, command_executor='http://10.10.12.23:4444/wd/hub')     def test_search_in_python_org(self):         print ""running simple now""         driver = self.driver         driver.get(""http://www.python.org"")         self.assertIn(""Python"", driver.title)         print ""find title here""         elem = driver.find_element_by_name(""q"")         elem.send_keys(""pycon"")         elem.send_keys(Keys.RETURN)         print ""send search ops""         assert ""No results found."" not in driver.page_source       def tearDown(self):         self.driver.quit()  if __name__ == ""__main__"":     unittest.main()  ``` - The running result is:  ``` Setup now running simple now   find title here send search ops . ---------------------------------------------------------------------- Ran 1 test in 187.743s  OK  ```  I did not know why it would spend 187 seconds. It seems some default wait time was setting in selenium server.  I did not want one test run so long time","closed","I-performance,","HackToday","2016-07-20T10:21:03Z","2019-08-14T14:09:44Z"
"","2548","DefaultRemoteProxy Connection Timed out, trying to connect physical mac mini device to docker hub","## Meta -  OS:  AWS, Docker, Mac Mini 10.11.5    Selenium Version:  selenium server 2.53.0     Browser:    Created a docker hub and able to connect other docker nodes to the docker hub   When I attempt to connect a physical node (mac mini)   java -jar selenium-server-standalone-2.53.0.jar -role node -hub hub_ip:4444/grid/register -browser browserName=firefox  - I've also tried adding -remoteHost :port   I get the output INFO - The node is registered to the hub and ready to use  When I navigate to the grid/console it takes a significant amount of time to load and I receive the  DefaultRemoteProxy unknown version, connect to :port /  failed: Connection timed out  The docker hub is sitting on an AWS instance with openVPN installed. The openVPN configs exist on the node as well.   From the physical node (mac mini) I am able to wget hub_ip:4444/grid/register and it returns a 200  When I ssh into the hub, I try to telnet mac_mini_ip:port I get  ERROR 403: Forbidden for Proxy  Not sure if this is causing the DefaultRemoteProxy, but as of now I'm unable to connect a physical node to a hub on AWS is there a solution for this?","closed","","kevinyu-ias","2016-08-01T19:29:14Z","2019-08-16T05:09:36Z"
"","2312","FirefoxDriver does not click on an element that disappears on click","## Meta -  OS:  Any, but I've reproduced on Linux and Mac Selenium Version:  2.53 Browser:  Firefox Browser Version:  46.0.1 ## Expected Behavior -  In the test below, the driver should click the ""Month"" dropdown and then click ""April"" (language may vary depending on your location). ## Actual Behavior -  The `mousedown` event is fired, but `click` and `mouseup` are not fired on the `.goog-menuitem` div.  I'm aware that I should use Marionette instead, but we're trying to live with FirefoxDriver until FF48 arrives.  This click did work correctly before @barancev 's 0eec81da52ba4dfb16de590e6e82ebafa452416f and 5eb8c3ec6c16aeafc4aa57e02c62133821ef452a from 8 months ago. The latter commit addresses disappearing elements, but doesn't seem to solve this case for some reason. ## Steps to reproduce -  I'm sorry to say I haven't been able to reproduce this on a self-contained example. Hopefully seeing it reproduce on a public-facing site is somewhat helpful.  ``` import selenium from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  driver = webdriver.Remote(     command_executor='http://localhost:4444/wd/hub',     desired_capabilities=DesiredCapabilities.FIREFOX.copy())  try:     driver.get('https://accounts.google.com/SignUp')      month_div = driver.find_element_by_css_selector('#BirthMonth div')     month_div.click()     months = driver.find_elements_by_css_selector('.goog-menuitem')     months[3].click()  # April finally:     raw_input('Press Enter to quit')     driver.quit() ```","closed","D-firefox,","juangj","2016-06-18T02:02:29Z","2019-08-14T14:09:40Z"
"","2626","No way to wait for page change/load","## Meta -  OS:  Any Selenium Version:  Any Browser:  Any Browser Version:  Any ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -  There is currently no way to check for a page load event. Case: - load page - press a button that invokes AJAX call   -- as a result of AJAX call, javascript submits a form or just change location - there is no way to wait for page load  In python there is expected_conditions, but the only way to use it in this case is to wait for some element on that page, not for the page itself.  Example code:  ``` action = webdriver.ActionChains(self.browser) action.send_keys(valid_card, Keys.ENTER).perform() # this invokes AJAX that on success will load an other page.  wait = WebDriverWait(self.browser, 10) wait.until(expected_conditions.location_to_load(expected_url)) ```","closed","","atheros","2016-08-18T11:32:10Z","2019-08-19T20:09:33Z"
"","1900","After update of Webdriver 2.53.0 and Firefox 45.0.1, firefox taking long time to launch on remote machine","## Meta -  OS:  Any Selenium Version:  2.53.0 Browser:  Firefox Browser Version:  64 ## Expected Behavior -  Firefox should launch quickly as earlier before update to Firefox 45.0.1 and Webdriver 2.53.0 ## Actual Behavior -  Firefox takes long time to launch on remote machine and sometimes timesout after default 60 sec ## Steps to reproduce -  Try to launch firefox on remote machine using remoteWebdriver, firefox fails to launch within 60 sec","closed","D-firefox,","svaze","2016-03-31T05:02:48Z","2019-08-17T15:09:55Z"
"","2115","Utility to check element present or not","## Meta -  OS:  Any    Selenium Version: 2.53    Browser:  chrome    Browser Version:  50.0.2661.94 m   ## Expected Behavior -  It's better to have an utility method (inside selenium api) which will allow us to check particular web element is present or not. Please let me know if there is any api available already. ## Actual Behavior -  we need to get elements(instead of element) then we need to check the size of the elements, like below.  ``` List elements=driver.findElements(By.className(""myCSS""));         if(elements.size()>=1){             --do some operation         } ``` ## Steps to reproduce -  Get an element, and check whether it exists or not.","closed","","chandrasekhar4u","2016-05-17T15:46:28Z","2019-08-20T05:09:44Z"
"","2591","Update netty version","## Meta -  OS:  Any    Selenium Version:  Current    Browser:  No    Browser Version:  No   ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -    Please update the netty version. The one you are using (3.5.2) is more than 4 years old:  http://repo1.maven.org/maven2/io/netty/netty/  I have elasticsearch in my classpath and it expects 3.10.5 so there are `ClassNotFound` exceptions. I have managed to come around it by excluding the netty that selenium brings, but still it would be nice if selenium would keep it's dependencies up-to-date","closed","C-java,","ptahchiev","2016-08-09T19:31:57Z","2019-08-17T23:10:02Z"
"","2455","SELENIUM_BROWSER overrides set capabilities","## Meta -  OS:  All Selenium Version:   selenium-webdriver@2.52.0 (though probably earlier) Browser:   All ## Expected Behavior -  When providing capabilities I expect them to be used. The saucelabs Jenkins plugin sets a bunch of env variables which are consumed by various frameworks. This includes SELENIUM_BROWSER, SELENIUM_VERSION and SELENIUM_PLATFORM which many users consume in their configs. ## Actual Behavior -  Selenium-webdriver javascript library silently overrides platform and version if SELENIUM_BROWSER is set. ## Steps to reproduce -  https://github.com/chris-broes/JS-Protractor-Selenium/blob/jenkins/conf.js  ``` export SELENIUM_BROWSER=chrome export SELENIUM_VERSION=51 export SELENIUM_PLATFORM='Mac 10.11' ```  Working code:  ``` export SELENIUM_BROWSER=""chrome:51:MAC 10.11"" ``` ## Comments -  With this behavior in place. I'd like to see it either documented clearly, or not override all 3 parts (unless colons are provided).  Is the SELENIUM_BROWSER variable documented somewhere?","closed","C-nodejs,","halkeye","2016-07-12T18:36:41Z","2019-08-19T23:09:36Z"
"","2116","Inconsistent definition of sessionId in webdriver.js","## Meta -  OS:  All    Selenium Version:  2.53    Browser:  All    Browser Version:  All   ## Expected Behavior -  execute resolves parameters ## Actual Behavior -  fail in http POST because of a bad URL path: /session/[object Object]/window/current/maximize ## Steps to reproduce -    ``` js   var executor = Executors.createExecutor(selServer);   var browser = webdriver.WebDriver.attachToSession(executor, selId);   browser.manage().window().maximize().then(function() { ... never gets here ```  When we get to   https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/http/index.js#L462  The command for window().maximize() still contains a promise for a sessionId. That is a result of setting the sessionId in  https://github.com/SeleniumHQ/selenium/blob/a368fca55fe5e8d202face6cd0f505bffc38d319/javascript/node/selenium-webdriver/lib/webdriver.js#L357 to `this.sessionId_` which is a promise: https://github.com/SeleniumHQ/selenium/blob/a368fca55fe5e8d202face6cd0f505bffc38d319/javascript/node/selenium-webdriver/lib/webdriver.js#L270","closed","","johnjbarton","2016-05-17T22:59:42Z","2019-08-20T05:09:59Z"
"","2213","Selenium Version: 2.53.0 Browser:  Firefox-45 not compatible. Which version is compatible?","## Meta -  OS:  - Windows  Selenium Version:  2.53.0, Browser:   Firefox  Browser Version:  45(32bit) ## Actual Behavior -  When i try to launch firefox browser i am getting  below error Could you please help me which firefox version is compatible for webdriver 2.53.0?  org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: ow you can chat about it on Skype by sharing the web page directly into your conversation using the Skype add-on."",""creator"":""Microsoft Corporation"",""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files\Mozilla Firefox\browser\extensions\{82AF8DCA-6DE9-405D-BD5E-43525BDAD38A}.xpi"",""installDate"":1452090606000,""updateDate"":1452090606000,""applyBackgroundUpdates"":1,""bootstrap"":true,""size"":326715,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""26.0"",""maxVersion"":""30.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2} 1465123066728   addons.xpi  DEBUG   getModTime: Recursive scan of {82AF8DCA-6DE9-405D-BD5E-43525BDAD38A} 1465123066737   addons.xpi  DEBUG   Loading bootstrap scope from C:\Program Files\Mozilla Firefox\browser\extensions{82AF8DCA-6DE9-405D-BD5E-43525BDAD38A}.xpi 1465123066744   addons.xpi  DEBUG   Calling bootstrap method install on {82AF8DCA-6DE9-405D-BD5E-43525BDAD38A} version 8.0.0.9103 1465123066744   addons.xpi  DEBUG   New add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} installed in app-global 1465123066756   addons.xpi-utils    DEBUG   Make addon app-global:{972ce4c6-7e08-4474-a285-3208198ce6fd} visible 1465123066757   DeferredSave.extensions.json    DEBUG   Save changes 1465123066757   DeferredSave.extensions.json    DEBUG   Save changes 1465123066757   addons.xpi  DEBUG   Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""0CU4ISZdpKJh"",""location"":""app-global"",""version"":""42.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""C:\Program Files\Mozilla Firefox\browser\extensions\{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""installDate"":1465122431257,""updateDate"":1465122431257,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":24301,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""42.0"",""maxVersion"":""42.0""}],""targetPlatforms"":[]} 1465123066757   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1465123066759   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1465123066759   addons.xpi-utils    DEBUG   Updating add-on states 1465123066760   addons.xpi-utils    DEBUG   Writing add-ons list 1465123066763   addons.xpi  DEBUG   Registering manifest for C:\Program Files\Mozilla Firefox\browser\extensions{82AF8DCA-6DE9-405D-BD5E-43525BDAD38A}.xpi 1465123066763   addons.xpi  DEBUG   Calling bootstrap method startup on {82AF8DCA-6DE9-405D-BD5E-43525BDAD38A} version 8.0.0.9103 1465123066824   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1465123066825   addons.manager  DEBUG   Provider finished startup: XPIProvider 1465123066825   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1465123066825   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1465123066825   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1465123066826   addons.manager  DEBUG   Starting provider: GMPProvider 1465123066832   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1465123066833   addons.manager  DEBUG   Provider finished startup: GMPProvider 1465123066833   addons.manager  DEBUG   Starting provider: PluginProvider 1465123066833   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1465123066833   addons.manager  DEBUG   Provider finished startup: PluginProvider 1465123066833   addons.manager  DEBUG   Completed startup sequence  ``` at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:120) at com.google.gmail.inbox.A.main(A.java:11) ```","closed","","JMadhusri","2016-06-05T11:12:01Z","2019-08-18T22:09:57Z"
"","2290","Firefox quit unexpectedly (OSX 10.11.5 and Firefox 47)","## Meta -  OS:  **OSX 10.11.5** Selenium Version:  **2.52.0** Browser:  **Firefox** Browser Version:  **47.0** ## Expected Behavior -  Able to create new session using the browser Firefox 47.0 ## Actual Behavior -  Unable to create new session using the browser Firefox 47.0. Error: ""Firefox quit unexpectedly""  PD: I fixed the problem installing Firefox 46.0. ## Steps to reproduce - 1. Open [http://localhost:4444/wd/hub](http://localhost:4444/wd/hub)  2. Click on `Create new session` button  3. Choose `firefox` 4. Click `OK`","closed","","aluzardo","2016-06-15T10:04:47Z","2019-08-20T02:09:51Z"
"","2655","WebDriver Capability 'overlappingCheckDisabled' has no effect on IE & Chrome webdrivers","## Meta -  OS:   Windows 7 - 64 bit  Selenium Version:  selenium-java 2.53.0   Browser:   (a) Firefox 45.3.0 (ESR) (b) Internet Explorer 11.0.9600.18426 (c) Chrome 52.0.2743.116 m ## Expected Behavior -  I have a sample Webpage with two buttons: Button 1 completely overlaps Button 2. The question of concern is what happens when Button 2 is clicked.  Case 1: By default - as I understand it from the Selenium Java Changelog - WebDriver should throw an WebDriverException, when Button 2 is clicked. Message: ""Element is not clickable at point (x, y). Other element would receive the click""  Case 2: When setting the WebDriver Capability 'overlappingCheckDisabled' to 'true', WebDriver should be able to click Button 2, without throwing an exception. ## Actual Behavior -  (a) Firefox: works as expected  (b) Chrome & (c) Internet Explorer Case 1: no Exception is thrown, i.e. Button 2 is clickable although being overlapped Case 2: works as expected  Conclusion:  It seems as if the default behavior of both Chrome & IE (unlike Firefox) is to allow for overlapped WebElements to be clicked, i.e.: 'overlappingCheckDisabled=true' It is not possible to configure the respective web drivers via Capability 'overlappingCheckDisabled=false' not to accept clicks on the elements.  From the Selenkum Changelog, I concluded that the flag ""overlappingCheckDisabled"" is available for all WebDriver implementations. Was I wrong about this? Is it only available for Firefox? Or am I setting the capabiltity wrong for IE & Chrome (see Code excerpts below). ## Steps to reproduce -  This is the example website with two overlaying buttons:  `` `` `` `` `` `Button 1` `` `` ``  This is how I set the cabalitities (example for setting the cabalitity in question to 'true' for Firefox), setting it for IEDriver & Chrome the same way.  `DesiredCapabilities capabilities = ...` `capabilities.setCapability(""overlappingCheckDisabled"", true);` `return new FirefoxDriver(capabilities);`","closed","D-IE,","stestr82","2016-08-24T12:41:30Z","2019-08-18T18:10:00Z"
"","2799","Select Method with selectby index is not working for the Selenium 3.0.0-beta3","## Meta -  OS:   Windows 7  Selenium Version: 3.0.0-beta3, Eclipse Neon Browser:   Firefox48 with GECKODRIVER  Browser Version:  48.0.2 ## Expected Behavior - It should select the dropdown value as it was working in 2.53 version of selenium ## Actual Behavior - not selecting the dropdown option. ## Steps to reproduce -  ![selenium select issue](https://cloud.githubusercontent.com/assets/22299372/18665156/7ea75a98-7f43-11e6-9685-128e55aadbed.png)","closed","","pardeepkmail","2016-09-20T09:31:00Z","2019-08-17T02:09:53Z"
"","2575","When I use 3.0.0-beta2 from 'mvn test' it seems to use TestNG instead of JUnit","## Meta -  OS:   Windows 10  Selenium Version:   3.0.0-beta 2  Browser:    Any ## Expected Behavior -  ""mvn test"" normally runs my tests using JUnit ## Actual Behavior -  With beta2 ""mvn test"" seems to try and run with TestNG and as a result no tests are run  During the maven output I see:  ""Running TestSuite Configuring TestNG with: org.apache.maven.surefire.testng.conf.TestNG652Configurator@77468bd9 Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.424 sec ""  If I change the version of Selenium to ""3.0.0-beta1"" my tests run normally.  If I change the version of Selenium 2 ""2.53.1"" my tests run normally.  This behaviour of 'no tests running' only happens when Selenium version is ""3.0.0-beta2"" ## Steps to reproduce -  You could check out this project https://github.com/eviltester/wdci and change the version of webdriver to ""3.0.0-beta2""  Or  Have a look at the Travic-ci build that illustrates the problem:  This build is running against 2.53.1 and passes as normal  https://travis-ci.org/eviltester/wdci/builds/149754565  I amended the pom.xml to use 3.0.0-beta1  https://travis-ci.org/eviltester/wdci/builds/149755782  This ran the test as expected, and failed as expected because wires.exe is not available and 3.0.0 defaults to Marionette for Firefox.  I then amended the pom.xml to use 3.0.0-beta2 expecting the same results as the beta1 build, but no tests ran and the build tries to use TestNG  https://travis-ci.org/eviltester/wdci/builds/149756300  Then I change it back to 2.53.1 to get the build back to normal  https://travis-ci.org/eviltester/wdci/builds/149756706","closed","","eviltester","2016-08-04T13:26:36Z","2019-08-19T18:10:02Z"
"","2352","Selenium 3: Unable to Download Jar breaks at 8.5 MB everytime","## Meta -  OS:   Win &    Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce - Download the JAR using the link http://ci.seleniumhq.org:8080/job/Build_All_Java/lastSuccessfulBuild/artifact/selenium-server-standalone-latest.jar","closed","","abhinav1708","2016-06-24T06:02:03Z","2019-08-20T01:09:45Z"
"","2615","[Firefox]Remote driver and Local driver behave not same","## Meta -  OS:   Linux Centos  7.2    Selenium Version:   2.53.0    Browser:   Firefox    Browser Version:     User selenium docker images  ## Expected Behavior -  expect remote driver pass the test ## Actual Behavior -  remote driver can not pass the test while local driver can work ## Steps to reproduce -   1. download docker image  `selenium/standalone-firefox:2.53.0`  `https://github.com/SeleniumHQ/docker-selenium` 1. run test 2. test failed with following error:  ``` 04:07:15.841 INFO - Executing: [find element: By.xpath: //button[contains(text(), ""??"")]]) 04:07:26.475 WARN - Exception thrown org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""xpath"",""selector"":""//button[contains(text(), \""??\"")]""} Command duration or timeout: 10.02 seconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: '42422b778b8e', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-123.el7.x86_64', java.version: '1.8.0_03-Ubuntu' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=45.0.2, platform=LINUX, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: d1765426-01ed-4d1e-82f1-a0871445bf6d *** Element info: {Using=xpath, value=//button[contains(text(), ""??"")]}     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:423)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)     at org.openqa.selenium.By$ByXPath.findElement(By.java:361)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:498)     at org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:103)     at com.sun.proxy.$Proxy1.findElement(Unknown Source)     at org.openqa.selenium.support.events.EventFiringWebDriver.findElement(EventFiringWebDriver.java:188)     at org.openqa.selenium.remote.server.handler.FindElement.call(FindElement.java:48)     at org.openqa.selenium.remote.server.handler.FindElement.call(FindElement.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""xpath"",""selector"":""//button[contains(text(), \""??\"")]""} For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: '42422b778b8e', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-123.el7.x86_64', java.version: '1.8.0_03-Ubuntu' Driver info: driver.version: unknown     at .FirefoxDriver.prototype.findElementInternal_(file:///tmp/anonymous2909717002201304317webdriver-profile/extensions/fxdriver@googlecode.com/components/driver-component.js:10770)  ```","closed","","HackToday","2016-08-16T11:11:57Z","2019-08-18T15:09:46Z"
"","2327","Internet Explorer can not load complete, hanging in process.","## Meta -  OS:   windows xp Selenium Version:   2.53.0 Browser:   Internet Explorer   Browser Version:   ie8 32bit ## Expected Behavior -  can load complete all pages any time. ## Actual Behavior -  some times can not load complete pages. and not error throws, it looks like this: [http://chuantu.biz/t5/11/1466479013x3738746547.jpg](url) it loading forever and never complete ## Steps to reproduce -  i can not reproduce it, it happened accidently.","closed","D-IE,","zhiying8710","2016-06-21T03:30:49Z","2019-08-18T18:09:59Z"
"","2713","Screenshot hangs up consuming excessive CPU for IE driver 2.53.1 64-bit","## Meta -  OS:   Windows Server 2012 on AWS (64 bit)  Selenium Version:   2.53.1  Browser:   Internet Explorer (64 bit)  Browser Version:   11.0.9  IE Driver:   2.53.1- 64 bit ## Expected Behavior -  Screenshot should work without any issues ## Actual Behavior -  Screenshot hangs up consuming excessive CPU. ## Steps to reproduce - 1. Set FEATURE key for browser as suggested  2. dump of capabilities-  ``` ie.enableFullPageScreenshot:false,webdriver.remote.quietExceptions:true,browserAttachTimeout:0,enablePersistentHover:true,ie.forceCreateProcessApi:true,pageLoadStrategy:normal,ie.usePerProcessProxy:false,ignoreZoomSetting:false,handlesAlerts:true,version:11,platform:WINDOWS,nativeEvents:false,ie.ensureCleanSession:true,requireWindowFocus:false,javascriptEnabled:true,ignoreProtectedModeSettings:false,enableElementCacheCleanup:true,cssSelectorsEnabled:true,unexpectedAlertBehaviour:dismiss ``` 1. Set Zoom levels to 100% 2. Set zone to same levels 3. Take screenshot on page with some Ajax behaviour(page changes status) 4. IE driver maxes out CPU and hangs when trying to capture screenshot.","closed","D-IE,","vipulnsward","2016-09-04T16:56:03Z","2019-08-14T17:09:53Z"
"","2757","IE 11: Not able to switch/identify to frame when running from Jenkins","## Meta -  OS:   Windows Server 2012 Selenium Version:   2.53.1.0 Browser:   IE 11  Browser Version:   11.0.34 ## Expected Behavior -  Switch to Frame ## Actual Behavior -  Element not found. ## Steps to reproduce -","closed","","gauthampai13","2016-09-10T22:28:31Z","2019-08-19T13:10:02Z"
"","2790","Selenium Webdriver not interacting with the elements on IE11 in Windows server 2008 R2","## Meta -  OS:   Windows Server 2008 R2  Selenium Version:   2.53.0, IDE Browser:    Internet Explorer 11  ## Expected Behavior -  Webdriver should interact with the elements on the page ## Actual Behavior -  Webdriver passes the url but not able to interact with any elements on the page. ## Steps to reproduce -  Launching the IE11 using the following code snippet.  ``` try{System.setProperty(""webdriver.ie.driver"", ""src/main/resources/bin/IEDriverServer.exe"");             }             catch (Exception ex){                 Reporter.log(""\nException in getting and setting the webdriver IE driver: ""+ ex.getMessage() + ex.getClass(),true);                 ex.printStackTrace();             }             WebDriverManager.browser = browser;             DesiredCapabilities desiredCapabilities = DesiredCapabilities.internetExplorer();              desiredCapabilities.setCapability(""ignoreZoomSetting"", true);             driver = new EventFiringWebDriver(new InternetExplorerDriver(desiredCapabilities));             driver.manage().deleteAllCookies();             driver.manage().window().maximize(); ```  Now after launching the browser, it passes the URL but after that it complains not able to find element on the page. I tried to run the same on my Windows 7 machine and it works fine.","closed","C-java,","chanchow88","2016-09-19T02:28:55Z","2019-08-17T20:09:47Z"
"","2468","FirefoxDriver occassionally does not react to any commands after get and maximise","## Meta -  OS:   Windows Server 2008 R2 Selenium Version:   2.53.1 Browser:   Firefox  Browser Version:   24.0 ESR and 31.0 ESR ## Expected Behavior -  The Firefox window is maximized after loading the site and the driver responds to commands. ## Actual Behavior -  `10:29:34.397 INFO [13] org.openqa.selenium.remote.server.DriverServlet - Executing: [maximise window])` is logged and the driver does not react to any commands anymore. The browser window shows the site but is not maximized. ## Steps to reproduce -  Start a hub and node with selenium-standalone-server-2.53.1.jar and use the RemoteWebDriver with Firefox capabilities.  Then execute the following commands  ``` driver.get(...); driver.manage().window().maximize(); ```   The site loads but in about 1 of 10 tries the error occurs.","closed","D-firefox,","reconman","2016-07-15T08:36:52Z","2019-08-14T14:09:43Z"
"","2596","In FireFox WebDriver After SwitchToFrame(id) is done, it comes out of Frame randomly.","## Meta -  OS:   Windows Server 2008 Selenium Version:   WebDriver-2.53.1 Programming Language - C# .net Browser:   Firefox (46.0.1) ## Description.  In FireFox WebDriver After SwitchToFrame("""") is done, it comes out of IFrame randomly. And then exception unable to locate element is thrown.  In Reference to the Issue Raised before (SwitchTo losing context when using a frame id #4876) a Javascript patch file is given in this issue. But how to apply this patch in C# binding as there is only dlls included. Also when I downloaded the Source code for .Net I couldn't find any java script files in .Net Folder.  Reference Issue: https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/4876  This happens when the webpage has only one OuterFrame. And this doesn't happens when web pages have Multiple inner frame. Is there a appropriate patch for C# WebDriver Bindings? ## Expected Behavior -  When SwitchToFrame("""") is done it should not come out of frame till SwicthTo().DefaultContenet() is given but it comes out of the frame randomly. ## Actual Behavior -  When SwitchToFrame("""") is done it should not come out of frame till SwicthTo().DefaultContenet() is given but it comes out of the frame randomly. ## Steps to reproduce -  Run Automation Tests in continuous batch with an application which has webpages with only one Outer Frame.","closed","D-firefox,","LakshmanShiva","2016-08-10T15:09:39Z","2019-08-14T14:09:46Z"
"","2296","FirefoxDriver has a profile issue when using FirefoxDriverService","## Meta -  OS:   Windows 8.1 Selenium Version:   2.53+ (.Net) Browser:   Firefox  Browser Version:   47 (64bit) ## Expected Behavior -  I should be able to set profile for Firefox when I am using FirefoxDriver constructor with a FirefoxDriverService. ## Actual Behavior -  The profile doesn't set even if you add the firefox_profile as an additional capability. It seems the profile need to be set on line 185 of FirefoxDriver.cs after converting options to capability and extracting profile. ## Steps to reproduce -  set a profile in a FirefoxOptions object options.AddAdditionalCapability(""firefox_profile"", GetProfile().ToBase64String());  call a FirefoxDriver constructor like below new FirefoxDriver(service, options, DefaultCommandTimeout)","closed","D-firefox,","salirezam","2016-06-16T08:55:51Z","2019-08-19T21:09:42Z"
"","2716","UrlChecker Thread in Selenium causes sun.misc.Unsafe.park on Tomcat context reload","## Meta -  OS:   Windows 8.1  Selenium Version:   2.53.1 Browser:   Chrome  Browser Version:   52.02 ## Expected Behavior -  UrlChecker class provides a clean way to dispose the private THREAD_POOL. ## Actual Behavior -  sun.misc.Unsafe.park Exception on application shutdown ## Steps to reproduce -  1) create and start a ChromeDriver service in a tomcat application:  ```         chromeDriverService = new ChromeDriverService.Builder()                 .usingDriverExecutable(exe)                 .usingAnyFreePort()                 .build();         chromeDriverService.start(); ```  2) Trigger tomcat reload.  The issue is documented here: http://stackoverflow.com/questions/39289762/urlchecker-thread-in-selenium-causes-sun-misc-unsafe-park-on-tomcat-context-relo","closed","C-java,","spc16670","2016-09-05T09:17:35Z","2021-09-05T10:02:44Z"
"","2734","The SearchContext of the locator object cannot be null Parameter name: locator","## Meta -  OS:   Windows 7. Selenium Version:   2.53.1 Browser:   Issue Seen in both  I.E. 11 and Chrome  Browser Version:   Chrome 52.0.2743.116 m (64-bit) I.E 11.0.9600.18426IS ## Expected : Tests should run ## Actual : They give the following error message  System.ArgumentException : The SearchContext of the locator object cannot be null Parameter name: locator ## Steps to reproduce - 1. Using Visual Studio create a new page object file 2. Write a simple test which uses the page object file and run it (Should run ok) 3. rename the page object file in V.S. 4. Try and run the tests (error message shows as follows)  System.ArgumentException : The SearchContext of the locator object cannot be null Parameter name: locator","closed","","MartinDudeDude","2016-09-07T13:37:35Z","2019-08-19T18:09:34Z"
"","2500","network.http.max-connections-per-server doesn't exist in Firefox45 preferences","## Meta -  OS:   Windows 7, Redhat 7(or more platforms)  Selenium Version:   2.53.0  Browser:   Firefox  Browser Version:   Mozilla Firefox 45.2.0 ## Expected Behavior -  The preference set in `webdriver_prefs.json` should exist in about:config ## Actual Behavior -  `network.http.max-connections-per-server` doesn't exist in Firefox45 preferences. Only a similar firefox preference `network.http.max-persistent-connections-per-server` in about:config. ## Steps to reproduce -  Look into the source code:  [selenium/javascript/firefox-driver/webdriver.json#L64](https://github.com/SeleniumHQ/selenium/blob/master/javascript/firefox-driver/webdriver.json#L64)","closed","","xmhubj","2016-07-21T05:28:46Z","2019-08-19T22:09:37Z"
"","2036","Firefox beta (47.0b1) crashes when opened through Webdriver","## Meta -  OS:   Windows 7  Selenium Version:   2.53 Browser:   Firefox Browser Version:   47.0b1 ## Expected Behavior -  Browser loads. ## Actual Behavior -  Browser crashes. ## Steps to reproduce -  Run:         FirefoxBinary b  = new FirefoxBinary(new File(""C:\FirefoxBeta\firefox.exe""));          FirefoxDriver f = new FirefoxDriver(b, new FirefoxProfile());  http://sscce.org/ -->","closed","","nirp1981","2016-05-01T09:12:49Z","2019-08-20T07:09:41Z"
"","2674","UnreachableBrowserException on using driver.quit for Firefox 48.0.2 & selenium-java-3.0.0-beta2","## Meta -  OS:   Windows 7 Selenium Version:   selenium-java-3.0.0-beta2 Browser:   Firefox 48.0.2  Browser Version:   48.0.2 (64-bit)  ## Expected Behavior -  driver.quit() should quit the browser instead unreachableBrowserException is displayed ## Actual Behavior -  driver.quit() should quit the browser instead unreachableBrowserException is displayed ## Steps to reproduce -  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.remote.DesiredCapabilities;  public class TesterFile {  ``` public static WebDriver wd; public static void main(String[] args) {      System.setProperty(""webdriver.gecko.driver"",""C:\\Users\\\\tools\\geckodriver.exe"");     wd = new FirefoxDriver();     wd.get(""http://www.google.com"");      wd.close();     wd.quit(); } ```  }","closed","","saladisathish","2016-08-26T21:29:20Z","2019-08-19T18:10:01Z"
"","2097","No Selenium Command to Verify Addition/Deletion of Table Rows","## Meta -  OS:   Windows 7 Selenium Version:   2.9.0 Browser:   Firefox Browser Version:   43.0.3 ## Expected Behavior -Search for the existence of a table row (option list or table) using the same partial/exact match/regexp used in an addSelection command.  When verifying that the row is absent, matching a row should produce an error and not matching a row should have a successful result.  When verifying that the row is present, matching a row should have a successful result and not matching a row should produce an error. ## Actual Behavior -Selenium IDE has no commands that verify the existence of a table row using a partial/exact/regexp match.  All verify commands look for an exact match.  The application I am testing constructs an option list with with labels that contain multiple ""columns"".  I can find rows using a partial/regexp match for the key ""column"", but verifying a rows existence requires matching all of the data exactly, including ""columns"" that are likely to change. ## Steps to reproduce -    The sensitivity of the data precludes including a compilable example.  The option list would look like the following:   9619  |  Key Field 01  |  VA  |  01/05/2001    9625  |  Key Field 02  |  MD  |  11/25/2009    9633  |  Key Field 03  |  DE  |  09/12/2012    9621  |  Key Field 04  |  DC  |  07/08/2010    9640  |  Key Field 05  |  VA  |  04/30/2006    Delete the row with ""Key Field 03"", label=regexp:[\d\D]_Key Field 03[\d\D]_ Verify that there is no ""Key Field 03"" row Add a ""Key Field 07"" row Verify that the table includes a ""Key Field 07"" row","closed","","AlanRashid","2016-05-12T19:20:10Z","2019-08-20T06:09:36Z"
"","2256","Find element by id on IE is not accurate","## Meta -  OS:   Windows 7 Selenium Version:   2.53.0, WebDriver Browser:   Internet Explorer  Browser Version:   11.0.30 (https://support.microsoft.com/en-us/kb/3148198)  ## Expected Behavior -  Finds element by id ## Actual Behavior -  Does not always find the element ## Steps to reproduce -  is not always experienced.  `try {             return wait                     .ignoring(StaleElementReferenceException.class)                     .ignoring(NoSuchElementException.class)                     .until(ExpectedConditions.presenceOfElementLocated(locator));         } catch (TimeoutException e)`  Once the page containing the element with the given id is shown, it waits for the element to be shown (it's already shown but the webdriver returns 'Unable to find element with id == theGivenId') and when the wait limit passes, it fails.  Not any issues with not focusing on the right iframe etc because in most of the cases it works.","closed","","ckorakidis","2016-06-10T13:11:01Z","2019-08-20T03:09:56Z"
"","2297","WebDriverException: Unrecognised locator type: 'css'","## Meta -  OS:   Windows 7 Selenium Version:   2.53.0, Selenium standalone server Browser:   Firefox Browser Version:   42.0 (32-bit)  ## Expected Behavior -  I run a test script of the following:        cssselector      cssselector       open     /            waitForText     css=div.tsl-message     To sign in, enter your email and tap ""Next""        It can be run successfully in IDE. But when I run it with Selenium Firefox WebDriver, I got WebDriverException: Unrecognised locator type: 'css'.   14:06:54.120 WARN - Exception thrown org.openqa.selenium.WebDriverException: Unrecognised locator type: 'css' Command duration or timeout: 55 milliseconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'xxx', ip: 'x.x.x.x', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0' Session ID: 8ba9b6f9-9050-48e3-9e1b-ef4509239937 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cs sSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts =true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationCont extEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=42. 0}]         at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)  ```     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstruct ```  orAccessorImpl.java:86)         at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingC onstructorAccessorImpl.java:58) ## Steps to reproduce -  As above.  Please investigate if this a bug. Thanks.","closed","","wangzhih","2016-06-16T09:25:27Z","2019-08-20T02:09:47Z"
"","2170","WebDriver Actions class method contextClick works when nativeEvents capability is set to false and dragAndDrop works when nativeEvents capability is set to true for IE11","## Meta -  OS:   Windows 7 Selenium Version:   2.53 Browser:   IE Browser Version:   11.0.9600.18314 ## Expected Behavior - ## Actual Behavior -  Looks Webdriver Actions class behaves differently depends on Desired Capability type InternetExplorerDriver.NATIVE_EVENTS. In my case, Method contextClick on a particular element works only if InternetExplorerDriver.NATIVE_EVENTS is set to  false and dragAndDrop works when InternetExplorerDriver.NATIVE_EVENTS is set to  true.  Tester needs to perform these actions in same scenario and I guess we can't dynamically toggle web driver capability for a single webdriver instance.","closed","D-IE,","sameer-ss","2016-05-27T08:11:23Z","2019-08-16T23:09:51Z"
"","2715","How to open new tab/window with same session with current ?","## Meta -  OS:   Windows 7 Selenium Version:   2.44.0 Browser:   Internet Explorer  Browser Version:   11.0.9600.18282 ## Expected Behavior -  Open link with current session ## Actual Behavior -  Open link with new session ## Steps to reproduce -  Hi Guys,  I have an issue with open new tab/window by selenium with current session, currently, I opened new tab in IE by javascript windows.open('','_blank') but it only open new window with new session. May I know do we have anyway to open new window with same session with old window ?","closed","","phunb3101","2016-09-05T08:08:12Z","2019-08-19T18:09:43Z"
"","2629","selenium IE driver could not find element by xpath and can not execut javascript","## Meta -  OS:   windows 7  Selenium Version:   2.53.1  Browser:   internet explorer 11  Browser Version:   ## Expected Behavior - 1. find element by text with xpath: //*[text()='abc'] 2. execute javascript by calling driver.executeScript()    ## Actual Behavior - 3. can not find any element. And for many other xpath patterns driver can not find related element 4. call executeScript() method to execute javascript, but bring exception ""unable to get browser""","closed","","zhuchuji","2016-08-19T08:19:28Z","2019-08-19T20:09:34Z"
"","2594","System.InvalidOperationException : unknown error: Cannot read property 'length' of undefined","## Meta -  OS:   Windows 7  Selenium Version:   2.53.0  Browser:   Google Chrome   Browser Version:   Version 52.0.2743.116 m  Version 52.0.2743.116 m  Actually we are getting this error during finding element using C#. Please see below code:  System.Threading.Thread.Sleep(20000);             do             {                 IWebElement e = driver.FindElement(By.XPath(""//*[@id='ctl00_udpnlMasterPage']""));                 Console.WriteLine(""Boolean:"" + e.Displayed);             } while (true);  Result Error: Below error generate on ""e.Displayed"" console write line. error text mention as below:  Result Message:  System.InvalidOperationException : unknown error: Cannot read property 'length' of undefined   (Session info: chrome=52.0.2743.116)   (Driver info: chromedriver=2.22.397933 (1cab651507b88dec79b2b2a22d1943c01833cc1b),platform=Windows NT 6.1.7601 SP1 x86) Result StackTrace:   at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.get_Displayed()","closed","","jigneshpatel1407","2016-08-10T11:23:19Z","2019-08-19T13:09:56Z"
"","2681","_driver.Navigate().GoToUrl(""url"") lost active window on remote IE","## Meta -  OS:   Windows 2012R2 Selenium Version:  2.5.2    Browser:  IE 11  Browser Version:   IE 11 ## Expected Behavior -  Remote web driver should not lost active window after navigate to url. remote driver SHOULD NOT lost its active window and when trying to find  a element it should not throw window closed exception ## Actual Behavior -  remote driver losing active window after calling navigate go to url method. getting no window closed exception.  ## Steps to reproduce -  I did set up Selenium grid  and running selenium test  on hub.   ```       DesiredCapabilities caps = DesiredCapabilities.InternetExplorer();         caps.SetCapability(""ignoreZoomSetting"", true);         caps.SetCapability(""nativeEvents"", true);         caps.SetCapability(""allow-blocked-content"", true);         caps.SetCapability(""disable-popup-blocking"", true);         caps.SetCapability(""allowBlockedContent"", true);         caps.SetCapability(""ignoreProtectedModeSettings"", true);         caps.SetCapability(""ie.browserCommandLineSwitches"", true);         caps.SetCapability(""ie.ensureCleanSession"", true);         caps.SetCapability(""ie.browserCommandLineSwitches"", true);          _driver = new RemoteWebDriver(new Uri(_serverUri), caps, TimeSpan.FromSeconds(1600));          _driver.Manage().Timeouts().ImplicitlyWait(TimeSpan.FromSeconds(1600));             _driver.Navigate().GoToUrl(""hhttps://www.google.com/""); ```    _driver.FindElement(By.Id(""lst-ib"")); throwing following Unable to find element on closed window (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 32 milliseconds Build info: version: '2.51.0', revision: '1af067d', time: '2016-02-05 19:15:17'","closed","","aravindmungara","2016-08-29T21:45:26Z","2019-08-19T17:09:37Z"
"","2627","IEDriverServer.exe crashes with latest wave of windows updates: KB3139923, KB3135998, KB3156016","## Meta -  OS:   Windows 10 (also crashes on Windows Server 2012 RC2 Standard) Selenium Version:   2.53.1 (also crashes with 2.53.1.1, 2.53.0, 2.52 and 2.48) Browser:   IE 11  Browser Version:   11.545.10586.0 (also crashes on WinServer 2012RC2 with IE11 version 11.0.9600.19283)  Summary: IEDriverServer.exe crashes with latest wave of windows updates: KB3139923, KB3135998, KB3156016.  Description: Any execution against web driver causes IEDriverServer.exe to crash. This happens when using InternetExplorerDriver for a local run, and also happens when using RemoteWebDriver via SeleniumGrid. When it crashes the standard Windows Application Stopped Working pop-up shows up, and right after closing it, the cmd window for the node shows the following:  14:24:37.056 INFO - I/O exception (java.net.SocketException) caught when processing request to {}->http://localhost:4411 9: Connection reset  Here is some info from EventViewer:  ---  [WIN10]   Faulting application name: IEDriverServer.exe, version: 2.53.1.0, time stamp: 0x57028f40 Faulting module name: IEDBEDD.tmp, version: 0.0.0.0, time stamp: 0x57028f3b Exception code: 0xc0000005 Fault offset: 0x0006c520 Faulting process id: 0x2938 Faulting application start time: 0x01d1f8b5f1e60668 Faulting application path: C:-----------------------------\IEDriverServer.exe Faulting module path: C:\Users\GALLAK~1\AppData\Local\Temp\IEDBEDD.tmp Report Id: 6aaa9943-5164-453f-997f-7781d8600648 Faulting package full name:  Faulting package-relative application ID:   ---   Fault bucket 108347897099, type 1 Event Name: APPCRASH Response: Not available Cab Id: 107715139556  Problem signature: P1: IEDriverServer.exe P2: 2.53.1.0 P3: 57028f40 P4: IEDBEDD.tmp P5: 0.0.0.0 P6: 57028f3b P7: c0000005 P8: 0006c520 P9:  P10:   ---  [WIN2012 RC2] Problem signature:   Problem Event Name:   APPCRASH   Application Name: IEDriverServer.exe   Application Version:  2.53.1.0   Application Timestamp:    57028f40   Fault Module Name:    IED95BF.tmp   Fault Module Version: 0.0.0.0   Fault Module Timestamp:   57028f3b   Exception Code:   c0000005   Exception Offset: 0002325c   OS Version:   6.3.9600.2.0.0.272.7   Locale ID:    1033   Additional Information 1: 5861   Additional Information 2: 5861822e1919d7c014bbb064c64908b2   Additional Information 3: 1318   Additional Information 4: 13181ae637ac2592fac0ca2dd662cdcc  After the crash, the command window just exits and the C# code executing web driver simply times out from no response.  I haven't tried pulling the selenium source and building / debugging it but I would appreciate any help if someone could repro this issue or identify why the specific windows updates is causing it to crash. FWIW Microsoft put out some press in the last few days mentioning Windows 10 updates will cause crashes. I haven't found any articles related to IEDriverServer crashing. Let me know if you need more info. Thanks!  -George","closed","","gallak87","2016-08-18T14:46:25Z","2019-08-19T20:09:35Z"
"","2339","Getting:","## Meta -  OS:   Windows 10 Selenium Version:  2.53.0, IDE: RubyMine Browser:  Firefox  Firefox 47? Did you search for issues first? You're likely logging a duplicate bug of #2110   I tried all what was suggested in #2110. I added marionette to my ruby bin path and follow the steps in this page here: https://developer.mozilla.org/en-US/docs/Mozilla/QA/Marionette/WebDriver  Now I'm getting: unable to connect to Mozilla geckodriver 127.0.0.1:4444  Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -  I just initialized my automated testing with cucumber command","closed","","pgandarillas","2016-06-22T14:52:00Z","2019-08-19T17:09:53Z"
"","2355","[Selenium 3-beta] Node is not getting registered to Hub","## Meta -  OS:   Windows 10 Selenium Version:   3.0.0 Beta Browser:  NA  After starting grid hub, trying to create node and it threw an error as below :  Exception in thread ""main"" com.beust.jcommander.ParameterException: Unknown option: -hub         at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)         at com.beust.jcommander.JCommander.parse(JCommander.java:282)         at com.beust.jcommander.JCommander.parse(JCommander.java:265)         at com.beust.jcommander.JCommander.(JCommander.java:210)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:104) ## Expected Behavior - Node should get registered successfully. ## Actual Behavior - Throwing above error. ## Steps to reproduce -  Start Grid : start cmd /k java -jar ......\Lib\selenium-3.0\selenium-server-standalone-latest-3.0.jar -role hub  Start Node : start cmd /k java -jar ......\Lib\selenium-3.0\selenium-server-standalone-latest-3.0.jar -role node -hub http://localhost:4444/grid/register -browser ""browserName=chrome,version=ANY,platform=WINDOWS,maxInstances=3"" -port 5556 -Dwebdriver.chrome.driver=......\Lib\Drivers\v2.21\chromedriver.exe","closed","","rudreshtrivedi","2016-06-24T09:36:38Z","2019-08-19T22:10:00Z"
"","2358","3.0b - Incorrect version reported in Console","## Meta -  OS:   Windows 10 Selenium Version:   3.0b Browser:   N/A  Browser Version:   NA ## Expected Behavior -  Grid console reports a version of  v3.0 ## Actual Behavior -  Selenium Grid Console v.2.42.2 ## Steps to reproduce -  java -jar selenium-server-standalone-3.0.0-beta-5d363.jar -role hub Nav to localhost:4444 and click console.","closed","","danielmaddern","2016-06-24T12:46:31Z","2019-08-20T01:09:35Z"
"","2376","Selenium 3: Drag and drop is not working as expected.","## Meta -  OS:   Windows 10 Selenium Version:   3 Browser:   nigtly mozilla.  Below is the description   org.openqa.selenium.UnsupportedCommandException: POST /session/9317eb24-e9cb-41d6-b2a1-7a7225da1269/moveto did not match a known command (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 2 milliseconds Build info: version: '2.42.2', revision: '75f266f', time: '2014-07-30 09:11:33' System info: host: 'GSHYD-PK33NV6', ip: '172.16.1.162', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, appBuildId=20160624030212, version=, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, processId=6264, browserVersion=50.0a1, platformVersion=10.0, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: 9317eb24-e9cb-41d6-b2a1-7a7225da1269","closed","","gs-schalla","2016-06-25T07:13:04Z","2019-08-20T01:09:38Z"
"","2776","Native clicks do not work in internet explorer v 11","## Meta -  OS:   Windows 10 Selenium Version:   2.531 Browser:   IE 11  FIREFOX 48+ IS ONLY COMPATIBLE WITH GECKODRIVER. Any issue logged here for 48+ will be closed as a duplicate of #2559  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:   v11 ## Expected Behavior -  click function to click on element ## Actual Behavior -  When I set nativeEvents capability = true, clicks do not work in IE v 11.0. When I set nativeEvents = false, clicks on elements work. How can I get native clicks to work? ## Steps to reproduce -  Set desired capability nativeEvents -> true Try using click function on elements Native clicks do not work","closed","","naissa12","2016-09-14T20:30:21Z","2019-08-19T17:09:34Z"
"","2323","#2110 ISSUE RETEST : Unable to open Firefox 47 using Marionette WebDriver","## Meta -  OS:   Windows 10 Selenium Version:   2.53.0 Browser:   Firefox  Browser Version:   47(64-bit)  ## Expected Behavior - FF browser session opens and executes the scripts ## Actual Behavior - FF Browser window never appears ## Steps to reproduce -  1) Download the latest version of your system compatible geckodriver executable file from path --> https://github.com/mozilla/geckodriver/releases 2) Extract and rename geckodriver executable file to wires.exe 3) Update the path variable on Windows os to add full directory path to the executable (In my case, i have updated path variable with - C:\Sharma\Study\Softwares\IE_GC_Updates  , where wires.exe file is present) 4) Updating the tests to use Marionette","closed","","Shifupo","2016-06-20T16:23:24Z","2019-08-20T00:09:51Z"
"","2257","Firefox 47 does not work with 2.53 version","## Meta -  OS:   Windows 10 Selenium Version:   2.53.0 Browser:   FireFox  Browser Version:   47.0.0 ## Expected Behavior -  When I run my test I expect firefox to open and the test should navigate to my system's login page. ## Actual Behavior -  Firefox either won't open or it will crash soon after opening. ## Steps to reproduce - 1. Upgrade for FIrefox 47 2. Run any test that uses firefox web driver.  NOTE: downgrading back to Firefox 46.0.1 fixed the issue (for now).","closed","","murdog05","2016-06-10T13:11:12Z","2019-08-16T00:09:59Z"
"","2075","Edge webdriver not included in nuget packages?","## Meta -  OS:   Windows 10 Selenium Version:   2.53.0 Browser:   Edge ## Expected Behavior -  I would expect Webdriver for the Edge browser to be included in the nuget package? According to http://www.clemensreijnen.nl/post/2015/07/28/Run-your-Automated-UI-Tests-on-the-new-Microsoft-Edge-Browsere280a6-Windows10 Selenium itself is updated to support Edge?  Is it correct that Edge is not supported by in nuget packages or am I doing something wrong?  ![2016-05-10 16_47_39-search](https://cloud.githubusercontent.com/assets/1454200/15150802/03ccea36-16cf-11e6-88d2-2e8e014607ed.png)","closed","","DanielSundberg","2016-05-10T14:46:06Z","2019-08-20T06:09:58Z"
"","2429","#Unable to get number of stars for hotel booking test case in southwest.com","## Meta -  OS:   Windows 10 Selenium Version:   2.53.0 Browser:   Chrome  Browser Version:   51.0.2704.103  (64-bit) ## Expected Behavior - Expected the number of stars (webelements ) to be identified by the use of size() method ## Actual Behavior - Incorrect number of stars are being returned by using size() method  [TS1_Results.txt](https://github.com/SeleniumHQ/selenium/files/347975/TS1_Results.txt) ## Steps to reproduce -  /_Here is the script which I used and attached the output file as well. Expected the number of visible stars to be counted and put into the output file. But, incorrect value, 36 is printed in the o/p file.Kindly check my code and suggest me a solution_/  public class CopyOfSouthWestAppTest {  ``` WebDriver oBrw; private int iEachHotelStarRating; private int iHotelStarLT4; ```  @Before     public void openApplication(){         System.setProperty(""webdriver.chrome.driver"",""C:\User\IE_GC_Updates\chromedriver.exe"");         oBrw = new ChromeDriver();         oBrw.manage().window().maximize();         oBrw.get(""https://www.southwest.com/"");  ``` } ```  @Test      public void hotelSearch(){  ```     WebDriverWait wait = new WebDriverWait(oBrw, 5);     wait.until(ExpectedConditions.visibilityOf(oBrw.findElement(By.id(""booking-form--hotel-tab""))));     oBrw.findElement(By.id(""booking-form--hotel-tab"")).click();     oBrw.findElement(By.id(""hotel-city-destination"")).clear();     oBrw.findElement(By.id(""hotel-city-destination"")).sendKeys(""Chelsea"");      // SCRIPTING USING CHECKIN AND CHECKOUT ICONS      oBrw.findElement(By.xpath(""//a[contains(@class,'check-in-icon')]"")).click();     oBrw.findElement(By.id(""calendar-july-6"")).click();     oBrw.findElement(By.xpath(""//a[contains(@class,'check-out-icon')]"")).click();     oBrw.findElement(By.id(""calendar-july-9"")).click();      oBrw.findElement(By.xpath(""//form[contains(@id,'booking-form--hotel-panel')]//button[@type='submit']"")).click();  } ```  @After     public void hotelSerchResVerify() throws Exception{  ``` iHotelStarLT4 = 0; iEachHotelStarRating = 0;      List uiHotelNames = oBrw.findElements(By.xpath(""//li[@class='hotel_description_outer_container']//span[@class='hotelName']""));     List uiHotelRatings = oBrw.findElements(By.xpath(""//span[@class='hotelName']/ancestor::li[@class='hotel_description_outer_container']/child::div/div[2]/div[3]/div/span[contains(@id,'hotelRating')]""));       File oResultsFile = new File(""C:/User/Scripts_OP_results/TS1_Results.txt"");     PrintWriter oUpdatefile = new PrintWriter(oResultsFile);     for (WebElement uiEachHotel:uiHotelNames){         oUpdatefile.println(uiEachHotel.getText()+""\r\n"");         }       for (WebElement uiHotelRatingEach:uiHotelRatings){         List uiNumOfStars = uiHotelRatingEach.findElements(By.xpath(""//span[@class='hotelName']/ancestor::li[@class='hotel_description_outer_container']/child::div/div[2]/div[3]/div/span/span[contains(@class,'star_rating_yellow')]""));          iEachHotelStarRating=uiNumOfStars.size();          oUpdatefile.println(iEachHotelStarRating+""\r\n"");          if (iEachHotelStarRating > 0 )                        if (iEachHotelStarRating < 4 )                 iHotelStarLT4++;     }      oUpdatefile.println(""Number of hotels with less than 4 stars is equal to: "" + iHotelStarLT4);     oUpdatefile.flush();     oUpdatefile.close();   } ```  }","closed","","Shifupo","2016-07-05T14:44:12Z","2019-08-19T23:10:01Z"
"","2587","Not able to select element using SelectElement class in FireFox 48, Im using the latest drivers (marionette)","## Meta -  OS:   Windows 10 Selenium Version:   2.53 Browser:   Firefox  I'm using the Gecko driver. My references to the project are,            Browser Version:   Firefox 48 ## Expected Behavior -  I have a dropdown which have the values  Test1 Test2  Test3 bo Test4   Of which Test3 is set as default selected.   ```           FirefoxDriverService service = FirefoxDriverService.CreateDefaultService();              service.FirefoxBinaryPath = @""C:\Program Files (x86)\Mozilla Firefox\firefox.exe"";               string localURL = ""http://localhost:82/Home/"";`              driver.Navigate().GoToUrl(localURL);              var div = driver.FindElement(By.Id(""TestContainer""));              div.Click();              IWebElement dropDownListBox = div.FindElement(By.TagName(""select""));              SelectElement demoSelect = new SelectElement(dropDownListBox);              demoSelect.SelectByText(""Test2""); ```  ``  When i execute the above code, I'm expecting the selection to change to Test2 in the dropdown. ## Actual Behavior -  The value in the dropdown doesnt change. ## Steps to reproduce - 1. Create a select element with 4 entries as shown below in a view.        ```                                                            Test1                            Test2                           Test3                            Test4                                     ``` 2. Execute the below code to changes the selected value of the above dropdown.  ```                 FirefoxDriverService service = FirefoxDriverService.CreateDefaultService();                  service.FirefoxBinaryPath = @""C:\Program Files (x86)\Mozilla Firefox\firefox.exe"";                  string localURL = ""http://localhost:82/Home/"";                driver.Navigate().GoToUrl(localURL);                 var div = driver.FindElement(By.Id(""TestContainer""));                 div.Click();                 IWebElement dropDownListBox = div.FindElement(By.TagName(""select""));                 SelectElement demoSelect = new SelectElement(dropDownListBox);                 demoSelect.SelectByText(""Test2""); ```","closed","","vmukunda","2016-08-09T12:36:30Z","2019-08-19T20:09:52Z"
"","2403","Marionette/Selenium start-up issue  - windows","## Meta -  OS:   Windows 10 Selenium Version:   2.5.3 Browser:   47.0.1 - using Marionette - marionette start up issue.  I am trying to start marionette via protractor on windows. I have added the gecko driver to my path and I've also added the following property to the environment:  webdriver.gecko.driver=C:\tools\gecko  I've also tried to add it here too:  ```     capabilities: {         'browserName': 'firefox',         marionette : true,         ""webdriver.gecko.driver"" : ""/tools/gecko"", ```  And I've also added the \tools\gecko to the path variable (all users) too.  The env vars are printed correctly when I use windows ""set"".  I get the following error when trying to activate the driver:  c:\work\ema\rms-web\RMS-Web\node_modules\protractor\node_modules\selenium-webdriver\error.js:26   constructor(opt_error) {                          ^ WebDriverError: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/jgraham/wires. The latest version can be downloaded from https://github.com/jgraham/wires  The command I use is:  node.exe c:\work\node_modules\protractor\built\cli.js   What is actually needed so that this is picked up correctly? This doesn't seem to be working currently in Windows and appears bugged.  Your advice is appeciated.","closed","C-nodejs,","inthegarage","2016-06-29T10:34:10Z","2019-08-20T00:09:50Z"
"","2329","WebDriver: Firefox has stopped working","## Meta -  OS:   Windows 10  Selenium Version:   With both the versions of Pytractor Pytractor-0.2.1 pytractor-0.2.2.dev1-py2.7.egg-info  Browser:   Mozilla Firefox - 47.0  Browser Version:   47.0 and 41.0 ## Expected Behavior -  Should open the browser and navigate to the url mentioned. ## Actual Behavior -  ""Firefox has stopped working  A problem caused the program to stop working correctly. Windows will clos the program and notify you if a solution is available."" ## Steps to reproduce - 1. Install pytractor in Anaconda 2 environment.    [Anaconda2] C:\Users\Santosh_2>pip install https://github.com/kpodl/pytractor/zipball/master 2. After successful installation of pytractor    [Anaconda2] C:\Users\Santosh_2>ipython 3. It will open a python prompt. 4. Run the below commands  In [1]: from pytractor.webdriver import Firefox In [2]: driver = Firefox('https://www.google.co.in/')  **Result:-** error                                     Traceback (most recent call last)  in () ----> 1 driver = Firefox('https://www.google.co.in/')","closed","","dfdf-santosh","2016-06-21T06:22:33Z","2019-08-20T01:10:02Z"
"","2028","driver.getWindowHandles() is inconsistent","## Meta -  OS:   Win 7 Selenium Version:   2.53.0 Browser:   IE Browser Version:   11 ## Expected Behavior -  driver.getWindowHandles() should return correct size ## Actual Behavior -  driver.getWindowHandles() always returning 1 ## Steps to reproduce -  Hi Team,  When I click on one link on my application a new window will open with ""Certificate Error"" , there I need to click on ""Continue this website"" link. But this window is not identified during run time. I have used driver.getWindowHandles() but its size is always returning 1 only. I got correct size only first time after updating the registry settings (as mentioned in IE 11 prerequisite settings), but second time onwards its returning 1 only.  Win OS: Win 7  IE : 11  Selenium webdriver : selenium-2.53.0 with IE Driver 2.53.0  Here is my code as below:  import java.text.SimpleDateFormat;  import java.util.Date;  import java.util.Set;  import java.util.concurrent.TimeUnit;  import org.openqa.selenium.By;  import org.openqa.selenium.WebDriver;  import org.openqa.selenium.WebDriverException;  import org.openqa.selenium.WebElement;  import org.openqa.selenium.ie.InternetExplorerDriver;  import org.openqa.selenium.remote.DesiredCapabilities;  import org.openqa.selenium.support.ui.ExpectedCondition;  import org.openqa.selenium.support.ui.ExpectedConditions;  import org.openqa.selenium.support.ui.Select;  import org.openqa.selenium.support.ui.WebDriverWait;  public class PolicyGenerate {  public static WebDriver objDriver; public static void main(String[] args) {     try {         System.setProperty(""webdriver.ie.driver"", ""C:\selenium-2.53.0\IEDriverServer_Win32_2.53.0\IEDriverServer.exe"");  ```     loginLogin(); } catch(Exception objEx) {     objEx.printStackTrace(); } // TODO Auto-generated method stub ```  }  public static void waitForNewWindowAndSwitchToIt(WebDriver driver, String cHandle, String strTitle) throws InterruptedException {  ``` String newWindowHandle = null;   //Wait for 20 seconds for the new window and throw exception if not found for (int i = 0; i < 20; i++) {     Set allWindowHandles = driver.getWindowHandles();      if (allWindowHandles.size() > 1) {         for (String allHandlers : allWindowHandles) {                                if (!allHandlers.equals(cHandle))                 newWindowHandle = allHandlers;         }         driver.switchTo().window(newWindowHandle);         if(driver.getTitle().startsWith(strTitle)) {             cHandle = driver.getTitle();             break;         }         else {             Thread.sleep(1000);         }     } else {         Thread.sleep(1000);     } } if (cHandle == newWindowHandle) {     throw new RuntimeException(             ""Time out - No window found""); } ```  }  static void loginLogin() {     WebElement objElement;  ``` try {      DesiredCapabilities objCap = DesiredCapabilities.internetExplorer();     objCap.setCapability(InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);     objCap.setCapability(InternetExplorerDriver.IGNORE_ZOOM_SETTING, true);      //  Accept unexpected alerts     objCap.setCapability(""requireWindowFocus"", true);     objCap.setCapability(""enablePersistentHover"", false);      objDriver = new InternetExplorerDriver(objCap);       objDriver.manage().timeouts().pageLoadTimeout(180,TimeUnit.SECONDS);     objDriver.manage().timeouts().implicitlyWait(180, TimeUnit.SECONDS);      objDriver.get(""https://www.test.com/home.html"");       objDriver.manage().window().maximize();      objElement = objDriver.findElement(By.cssSelector(""a[class='loginBtn medium']""));     objElement.click();      (new WebDriverWait(objDriver, 90)).until(new ExpectedCondition() {         public Boolean apply(WebDriver d) {             return d.findElement(By.id(""loginId"")).isDisplayed();         }     });     Thread.sleep(2000);     objElement.sendKeys("""");     Thread.sleep(2000);     objElement = objDriver.findElement(By.id(""loginId""));     objElement.sendKeys(""scindex2"");     Thread.sleep(2000);     objElement = objDriver.findElement(By.id(""loginPassword""));     objElement.sendKeys("""");     objElement.sendKeys(""Life1234"");     Thread.sleep(2000);      objElement = objDriver.findElement(By.xpath(""//*[@id='loginPanel']/div[2]/form/div/div/fieldset/div[2]/div[1]/button""));     objElement.click();     (new WebDriverWait(objDriver, 90)).until(new ExpectedCondition() {             public Boolean apply(WebDriver d) {                 return d.getTitle().startsWith(""Test"");             }         });     (new WebDriverWait(objDriver, 90)).until(ExpectedConditions.elementToBeClickable(By.linkText(""TOOLS"")));          objElement = objDriver.findElement(By.linkText(""TOOLS""));          objElement.click();          Thread.sleep(2000);     (new WebDriverWait(objDriver, 90)).until(new ExpectedCondition() {             public Boolean apply(WebDriver d) {                 return d.getTitle().startsWith(""Test"");             }         });     Thread.sleep(2000);     (new WebDriverWait(objDriver, 90)).until(ExpectedConditions.elementToBeClickable(By.linkText(""nbA - Life 2012"")));         objElement = objDriver.findElement(By.linkText(""auto""));         objElement.click();         Thread.sleep(2000);     (new WebDriverWait(objDriver, 90)).until(new ExpectedCondition() {             public Boolean apply(WebDriver d) {                 return d.findElement(By.tagName(""Font"")).isDisplayed();             }         });     Thread.sleep(2000);     String cHandle = objDriver.getWindowHandle();      objElement = objDriver.findElement(By.linkText(""QA5""));     objElement.click();      Thread.sleep(5000);      objDriver.manage().timeouts().implicitlyWait(90, TimeUnit.SECONDS);           waitForNewWindowAndSwitchToIt(objDriver, cHandle, ""Certificate Error"");                    objElement = objDriver.findElement(By.name(""overridelink""));         objElement.click();         Thread.sleep(5000);         objDriver.manage().timeouts().implicitlyWait(90, TimeUnit.SECONDS);          waitForNewWindowAndSwitchToIt(objDriver, cHandle, ""Certificate Error"");           objElement = objDriver.findElement(By.name(""overridelink""));         objElement.click();   } catch (Exception e) {     // TODO Auto-generated catch block     e.printStackTrace(); }    ```  }","closed","","dratnakar","2016-04-29T12:36:31Z","2019-08-15T17:09:39Z"
"","2248","java.net.SocketException: Connection reset","## Meta -  OS:   Ubuntu 16.04     Selenium Version:   2.53        Browser:   Firefox       Browser Version:   47.0 ## Expected Behavior -  It completes the simple test without error. ## Actual Behavior -  It throws a java.net.SocketException with the message 'Connection reset.' Im using phpunit with the selenium2 extension. The actual error given in the console is 'PHPUnit_Extensions_Selenium2TestCase_WebDriverException: Connection reset' but if you follow the phpunit stack trace, the underlying Selenium exception is a java.net.SocketException. Stack dump is included at end of this message. ## Steps to reproduce - - Install Selenium - Install the phpunit-selenium extension [info](https://phpunit.de/manual/4.8/en/selenium.html) - Use this simple test:  ``` php","closed","","zachleigh","2016-06-10T00:35:44Z","2019-08-20T03:09:58Z"
"","2118","Browser exited before we could connect","## Meta -  OS:   Ubuntu 14.04.4 LTS with GUI  Selenium Version:   2.53.2  Browser:   Firefox  Browser Version:   46.0.1 ## Expected Behavior -  in Python: from selenium import webdriver DRIVER = webdriver.Firefox()  Firefox should start afterwards. ## Actual Behavior -  WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details. ## Steps to reproduce -  in Python: from selenium import webdriver DRIVER = webdriver.Firefox() ## Explanation  Firefox could start with webdriver.Firefox() before I update my Ubuntu using:  sudo apt-get update        # Fetches the list of available updates sudo apt-get upgrade       # Strictly upgrades the current packages sudo apt-get dist-upgrade  # Installs updates (new ones)  After the update, it has the Exception. I Google this Exception message, but most of them are talking about setting up the display for a non-GUI Ubuntu. Therefore, it does not apply to my case here.   Any suggestion about how to diagnose and correct this issue?","closed","","cniedotus","2016-05-18T02:40:27Z","2019-08-20T05:09:52Z"
"","2585","trouble setting up NON - headless - in Ubuntu 14.04","## Meta -  OS:   Ubuntu 14.04 or 16.04 Selenium Version:   latest Browser:   chrome  I've been looking everywhere for how to install and set it up so that it works with nodejs.   what is the easiest way to set up everything to run a simple test in ubuntu with node with chromewebdriver?  thanks!","closed","","spencer1573","2016-08-09T00:24:37Z","2019-08-19T20:09:50Z"
"","2136","Canceled mousedown events causing blur","## Meta -  OS:   RedHat Enterprise Linux 6.8 Selenium Version:   2.53 Browser:   Firefox ESR Browser Version:   45.1.1 ## Expected Behavior -  If a mousedown on another element is canceled, it should not cause the currently focused field to blur. ## Actual Behavior -  It does blur, in Firefox (but not Chrome). ## Steps to reproduce - 1. Create the following test script, which uses the JavaScript API.   Filename ""wd_test.js"":        ```    var assert = require('assert');    var webdriver = require('selenium-webdriver'),    By = webdriver.By,    until = webdriver.until;        var driver = new webdriver.Builder()    .forBrowser('firefox')    .build();        driver.get('https://jsfiddle.net/vkdt0uu4/');    driver.switchTo().frame(driver.findElement(By.css('iframe[name=""result""]')));    driver.findElement(By.id('testfield')).click();    driver.switchTo().activeElement().getAttribute('id').then(function(elID) {    assert.equal(elID, 'testfield');    });    driver.findElement(By.id('testbutton')).click();    driver.switchTo().activeElement().getAttribute('id').then(function(elID) {    assert.equal(elID, 'testfield');    });    driver.quit();    ``` 2. Start selenium server:  java -jar selenium-server-standalone-2.53.0.jar & 3. Run the above test script:  node ./wd_test.js  The test script opens a JSFiddle which displays an input field and a button.  There is a listener on the button that cancels mouse down events.  The test script focuses the field and then clicks on the button.  It tests to make sure the input field still has focus, but that test fails (for Firefox):  ``` AssertionError: 'testbutton' == 'testfield'     at /.../wd_test.js:18:10 ```  I don't know if this is a bug with Selenium or with Firefox.","closed","D-firefox,","plynchnlm","2016-05-20T16:41:40Z","2019-08-14T14:09:37Z"
"","2191","[SafariDriver] KeyboardEvent.which property is not defined for event resulting from Selenium's sendKeys method. This then breaks jQuery's normalisation of the which value.","## Meta -  OS:   OSX: 10.9.5 Selenium Version:   2.53.0 Browser:   Safari Browser Version:   9.1.1 ## Expected Behavior -  event.which should return the key code. ## Actual Behavior -  event. which is 0 ## Steps to reproduce -  Create a page with a simple jquery event handler:  ``` $(document).on(""keydown"",function(event){    console.log(""which:""+event.which+"", keyCode:""+event.keyCode); });  ```  If you press the for example the left arrow key the output will be ""which: 37.keyCode:37"".  If you do the same with selenium, e.g. `documentElement.sendKeys(Keys.LEFT);`, the output will be ""which: 0, keyCode:37""  The work around is simple enough- making handlers use `event.which||event.keyCode`, but the problem is [that `which` is the normalised value in jquery](https://api.jquery.com/keydown/) so most handlers use it and I don't have so much control over third party code.","closed","A-needs new owner,","JoolsCaesar","2016-05-31T20:41:43Z","2019-08-19T15:09:58Z"
"","2566","[Selenium 3-beta] Server fails to start when launched with chromedriver v2.22","## Meta -  OS:   OSX 10.11.6 Selenium Version:   Se3 Beta 2 Browser:   N/A  Browser Version:   chromedriver v2.22 ## Expected Behavior -  Selenium server should start using the following command line  `java -debug -jar /Users/mehmetgerceker/workspace/nerdytests/resources/selenium-server-standalone-3.0.0-beta2.jar -Dwebdriver.chrome.driver=/Users/mehmetgerceker/workspace/nerdytests/resources/chromedriver-2.22 -Dwebdriver.gecko.driver=/Users/mehmetgerceker/workspace/nerdytests/resources/geckodriver-0.10.0` ## Actual Behavior -  Selenium server throws the following error  ``` Exception in thread ""main"" com.beust.jcommander.ParameterException: Unknown option: -Dwebdriver.chrome.driver=/Users/mehmetgerceker/workspace/nerdytests/resources/chromedriver-2.22         at com.beust.jcommander.JCommander.parseValues(JCommander.java:742)         at com.beust.jcommander.JCommander.parse(JCommander.java:282)         at com.beust.jcommander.JCommander.parse(JCommander.java:265)         at com.beust.jcommander.JCommander.(JCommander.java:210)         at org.openqa.grid.selenium.GridLauncherV3$1.setConfiguration(GridLauncherV3.java:202)         at org.openqa.grid.selenium.GridLauncherV3.buildLauncher(GridLauncherV3.java:130)         at org.openqa.grid.selenium.GridLauncherV3.main(GridLauncherV3.java:67) ``` ## Steps to reproduce -   `java -debug -jar /Users/mehmetgerceker/workspace/nerdytests/resources/selenium-server-standalone-3.0.0-beta2.jar -Dwebdriver.chrome.driver=/Users/mehmetgerceker/workspace/nerdytests/resources/chromedriver-2.22 -Dwebdriver.gecko.driver=/Users/mehmetgerceker/workspace/nerdytests/resources/geckodriver-0.10.0`","closed","","mehmetg","2016-08-04T01:03:40Z","2016-11-03T19:18:33Z"
"","2287","Latest Firefox version does not work with Selenium Firefox driver","## Meta -  OS:   OSX --> Selenium Version:   2.53.0 Browser:   Firefox   Test won't run -->  Browser Version:   Firefox 47.0 ## Expected Behavior -  Test should run ## Actual Behavior -  Test won;t even start up the browser ## Steps to reproduce -  Run as TestNG","closed","","abmadrigal","2016-06-14T22:31:36Z","2019-08-20T00:09:43Z"
"","2427","Launching Safari WebDriver is opening a localhost:xxxx page and gives error UnreachableBrowserException","## Meta -  OS:   OSX Selenium Version:   2.53 Browser:   Safari  Browser Version:   9.1.1 (10601.6.17) ## Expected Behavior -  Opens up a Safari browser en goes to a page ## Actual Behavior -  Opens up a Safari browser and tries going to localhost:xxxx  and then launches an error:  ``` jul 05, 2016 2:03:01 PM org.openqa.selenium.safari.SafariDriverServer start INFO: Server started on port 42753 jul 05, 2016 2:03:01 PM org.openqa.selenium.safari.SafariDriverCommandExecutor start INFO: Launching Safari jul 05, 2016 2:03:01 PM org.openqa.selenium.safari.SafariDriverCommandExecutor start INFO: Waiting for SafariDriver to connect jul 05, 2016 2:03:11 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutting down jul 05, 2016 2:03:11 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Stopping Safari jul 05, 2016 2:03:12 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Stopping server jul 05, 2016 2:03:12 PM org.openqa.selenium.safari.SafariDriverServer stop INFO: Stopping server jul 05, 2016 2:03:12 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutdown complete jul 05, 2016 2:03:12 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutting down jul 05, 2016 2:03:12 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Stopping server jul 05, 2016 2:03:12 PM org.openqa.selenium.safari.SafariDriverCommandExecutor stop INFO: Shutdown complete  org.openqa.selenium.remote.UnreachableBrowserException: Failed to connect to SafariDriver after 10069 ms Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'MacBook-Pro-van-MacBook-2.local', ip: '192.168.0.100', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_45' Driver info: driver.version: SafariDriver      at org.openqa.selenium.safari.SafariDriverCommandExecutor.start(SafariDriverCommandExecutor.java:121)     at org.openqa.selenium.safari.SafariDriver.startClient(SafariDriver.java:72)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:58)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:42)     at tests.MostRecentComponentTest.setUp(MostRecentComponentTest.java:40)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.junit.runner.JUnitCore.run(JUnitCore.java:137)     at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119)     at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)     at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)     at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)  ``` ## Steps to reproduce -  install the safari extension install the safari certificate  WebDriver driver = new SafariDriver(); driver.get(""google.be"");","closed","","BartVanRaemdonck","2016-07-05T12:09:13Z","2019-08-19T23:09:57Z"
"","2054","Using edge browser in Selenium grid","## Meta -  OS:   OS X Yosemite  Selenium Version:    2.32.0, IDE: IntelliJ 14, etc Browser:   Microsoft Edge Browser Version:   20.10240.16384.0 ## Expected Behavior -  Start test on local Mac computer with selenium grid, grid calls the VM with a Windows 10 on it, and launches Edge browser and navigates to a website. ## Actual Behavior -  Microsoft Edge browser launches but then there is an error.  Java code:  ``` public class Grid {      WebDriver driver;     String baseUrl, nodeURL;      @Before     public void setUp() throws MalformedURLException {          baseUrl= ""http://google.com"";         nodeURL=""http://testlab.rto.be:4444/wd/hub"";         DesiredCapabilities capability = DesiredCapabilities.edge();         capability.setBrowserName(""MicrosoftEdge"");        // capability.setBrowserName(BrowserType.EDGE);         capability.setPlatform(Platform.WIN10);         driver = new RemoteWebDriver(new URL(nodeURL),capability);     }      @Test     public void simpleTest(){          //driver.navigate().to(""http://google.com"");         driver.get(baseUrl);         Assert.assertEquals(""Google"", driver.getTitle());     }      @After    public void afterTest(){        driver.quit();     }  }  ```  code to lauch the node on the VM machine (Different attempts I have tried):  ``` java -jar selenium-server-standalone-2.53.0.jar -role node  -hub http://testlab.rto.be:4444/grid/register  -browser browserName=firefox,firefox_binary=""C:\Program Files (x86)\Mozilla Firefox\firefox.exe"",maxInstances=5,platform=WINDOWS -browser browserName=chrome,webdriver.chrome.driver=""C:\Selenium\chromedriver.exe"",maxInstances=5,platform=WINDOWS -browser browserName=""MicrosoftEdge"",webdriver.edge.driver=""C:\Selenium\MicrosoftWebDriver.exe,maxInstances=5,platform=WINDOWS   java -jar selenium-server-standalone-2.53.0.jar -role node  -hub http://testlab.rto.be:4444/grid/register -browser browserName=""MicrosoftEdge"",webdriver.edge.driver=""C:\\Selenium\\MicrosoftWebDriver.exe"",maxInstances=5,platform=WINDOWS  java -jar selenium-server-standalone-2.53.0.jar -role node  -hub http://testlab.rto.be:4444/grid/register -browser browserName=""MicrosoftEdge"",webdriver.edge.driver=""C:\\Program Files (x86)\\Microsoft Web Driver\\MicrosoftWebDriver.exe"",maxInstances=5,platform=WIN10  java -jar selenium-server-standalone-2.53.0.jar -role node  -hub http://testlab.rto.be:4444/grid/register -browser browserName=""MicrosoftEdge"",maxInstances=5,platform=WIN10  java -jar selenium-server-standalone-2.53.0.jar -role node  -hub http://testlab.rto.be:4444/grid/register -browser browserName=""MicrosoftEdge"",webdriver.edge.driver=""C:/Program Files (x86)/Microsoft Web Driver/MicrosoftWebDriver.exe"",maxInstances=5,platform=WIN10 ```  Stacktrace:  ``` org.openqa.selenium.WebDriverException: No such driver (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 1.92 seconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'V10061', ip: '10.24.75.234', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_91' Driver info: org.openqa.selenium.edge.EdgeDriver Command duration or timeout: 2.78 seconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'mbpvanmacbook2.rto.be', ip: '10.1.16.201', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.7.0_79' Driver info: org.openqa.selenium.remote.RemoteWebDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:158)     at Grid.setUp(Grid.java:42)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.junit.runner.JUnitCore.run(JUnitCore.java:137)     at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)     at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)     at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140) Caused by: org.openqa.selenium.remote.SessionNotFoundException: No such driver (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 1.92 seconds Build info: version: '2.53.0', revision: '35ae25b', time: '2016-03-15 17:00:58' System info: host: 'V10061', ip: '10.24.75.234', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_91' Driver info: org.openqa.selenium.edge.EdgeDriver Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'mbpvanmacbook2.rto.be', ip: '10.1.16.201', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.7.0_79' Driver info: driver.version: EdgeDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144)     at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:152)     at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:120)     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(Unknown Source)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)     at java.lang.Thread.run(Unknown Source)   java.lang.NullPointerException     at Grid.afterTest(Grid.java:55)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.junit.runner.JUnitCore.run(JUnitCore.java:137)     at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)     at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)     at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)   java.lang.NullPointerException     at Grid.afterTest(Grid.java:55)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.junit.runner.JUnitCore.run(JUnitCore.java:137)     at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)     at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)     at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)   Process finished with exit code 255  ```","closed","D-edge,","BartVanRaemdonck","2016-05-04T12:56:49Z","2019-08-16T15:09:40Z"
"","2280","Firefox crashing on selenium tests after upgrade (46 to 47)","## Meta -  OS:   OS X 10.8.5 Selenium Version:   2.53.2 Browser:   Firefox 47  Running simple tests working with Firefox 46, cause crash after upgrade to Firefox 47.  Temporary fix: downgrade to Firefox 46","closed","","gabbork","2016-06-14T09:06:17Z","2019-08-20T02:09:59Z"
"","2502","Driver not locating element with certain xpaths","## Meta -  OS:   OS X 10.11.6 Selenium Version:   2.53.4 Browser:   Chrome  51.0.2704.106 (64-bit) ## Expected Behavior - locate the element ## Actual Behavior - not locating the element ## Steps to reproduce -  Use this html:  https://jsfiddle.net/rk8acdg4/  Use this ruby code:  ``` field_full_question_xpath = './/tr[@id=\'element.checkbox_container_f5f86d3c37f06e005f4963d2b3990e5a\']/td//div/div//*[contains(@class, \'control-label\')]/span[2]' driver.find_element(:xpath, field_full_question_xpath).text ```  get this error:  > Selenium::WebDriver::Error::NoSuchElementError: no such element: Unable to locate element: {""method"":""xpath"",""selector"":"".//tr[@id='element.checkbox_container_f5f86d3c37f06e005f4963d2b3990e5a']/td//div/div//*[contains(@class, 'control-label')]/span[2]""} >   (Session info: chrome=51.0.2704.106) >   (Driver info: chromedriver=2.22.397929 (fb72fb249a903a0b1041ea71eb4c8b3fa0d9be5a),platform=Mac OS X 10.11.6 x86_64)  xpath tested with external tool (firepath) on the same html and works. It also works in other html snippets, will give them here if required (they are a little big).","closed","","MarioStoilov","2016-07-21T11:51:52Z","2019-08-19T22:09:36Z"
"","2579","Firefox 47 crashes upon start","## Meta -  OS:   OS X 10.11 Selenium Version:   2.53.1-2.53.6 Browser:   Firefox  -->  Browser Version:   47.0 64bit ## Expected Behavior -  Firefox opens ## Actual Behavior -  Firefox exits before selenium can connect to it. Selenium reports  ``` Traceback (most recent call last): File ""functional_tests.py"", line 2, in browser = webdriver.Firefox() File ""/home/peter/Documents/Virtenvs/all/b2bapp/lib/python3.5/site-packages/selenium/webdriver/firefox/webdriver.py"", line 80, in init self.binary, timeout) File ""/home/peter/Documents/Virtenvs/all/b2bapp/lib/python3.5/site-packages/selenium/webdriver/firefox/extension_connection.py"", line 52, in init self.binary.launch_browser(self.profile, timeout=timeout) File ""/home/peter/Documents/Virtenvs/all/b2bapp/lib/python3.5/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 68, in launch_browser self._wait_until_connectable(timeout=timeout) File ""/home/peter/Documents/Virtenvs/all/b2bapp/lib/python3.5/site-packages/selenium/webdriver/firefox/firefox_binary.py"", line 99, in _wait_until_connectable ""The browser appears to have exited "" selenium.common.exceptions.WebDriverException: Message: The browser appears to have exited before we could connect. If you specified a log_file in the FirefoxBinary constructor, check it for details. ```  log_file:  ``` 1470447997417   addons.manager  DEBUG   Application has been upgraded 1470447997440   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/addons/XPIProvider.jsm: [""XPIProvider""] 1470447997442   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/LightweightThemeManager.jsm: [""LightweightThemeManager""] 1470447997447   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/addons/GMPProvider.jsm 1470447997449   addons.manager  DEBUG   Loaded provider scope for resource://gre/modules/addons/PluginProvider.jsm 1470447997450   addons.manager  DEBUG   Starting provider: XPIProvider 1470447997451   addons.xpi  DEBUG   startup 1470447997451   addons.xpi  INFO    Mapping fxdriver@googlecode.com to /var/folders/_z/tg84rj7d38d093h0xvpn3v9r0000gn/T/tmpjgu1hxcu/extensions/fxdriver@googlecode.com 1470447997452   addons.xpi  INFO    SystemAddonInstallLocation directory is missing 1470447997453   addons.xpi  INFO    Mapping e10srollout@mozilla.org to /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1470447997453   addons.xpi  INFO    Mapping firefox@getpocket.com to /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1470447997453   addons.xpi  INFO    Mapping loop@mozilla.org to /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1470447997454   addons.xpi  INFO    Mapping {972ce4c6-7e08-4474-a285-3208198ce6fd} to /Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi 1470447997454   addons.xpi  DEBUG   Skipping unavailable install location app-system-share 1470447997455   addons.xpi  INFO    Mapping web2pdfextension@web2pdf.adobedotcom to /Library/Application Support/Mozilla/Extensions/{ec8030f7-c20a-464f-9b0e-13a3a9e97384}/web2pdfextension@web2pdf.adobedotcom 1470447997456   addons.xpi  DEBUG   checkForChanges 1470447997457   addons.xpi  DEBUG   Loaded add-on state from prefs: {} 1470447997457   addons.xpi  DEBUG   New add-on fxdriver@googlecode.com in app-profile 1470447997458   addons.xpi  DEBUG   getModTime: Recursive scan of fxdriver@googlecode.com 1470447997461   addons.xpi  DEBUG   New add-on e10srollout@mozilla.org in app-system-defaults 1470447997461   addons.xpi  DEBUG   getModTime: Recursive scan of e10srollout@mozilla.org 1470447997462   addons.xpi  DEBUG   New add-on firefox@getpocket.com in app-system-defaults 1470447997462   addons.xpi  DEBUG   getModTime: Recursive scan of firefox@getpocket.com 1470447997462   addons.xpi  DEBUG   New add-on loop@mozilla.org in app-system-defaults 1470447997462   addons.xpi  DEBUG   getModTime: Recursive scan of loop@mozilla.org 1470447997463   addons.xpi  DEBUG   New add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} in app-global 1470447997463   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1470447997464   addons.xpi  DEBUG   New add-on web2pdfextension@web2pdf.adobedotcom in app-system-local 1470447997464   addons.xpi  DEBUG   getModTime: Recursive scan of web2pdfextension@web2pdf.adobedotcom 1470447997465   addons.xpi  DEBUG   getInstallState changed: true, state: {""app-profile"":{""fxdriver@googlecode.com"":{""d"":""/var/folders/_z/tg84rj7d38d093h0xvpn3v9r0000gn/T/tmpjgu1hxcu/extensions/fxdriver@googlecode.com"",""st"":1470447997000,""mt"":1470447997000}},""app-system-defaults"":{""e10srollout@mozilla.org"":{""d"":""/Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi"",""st"":1465554665000},""firefox@getpocket.com"":{""d"":""/Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi"",""st"":1465554665000},""loop@mozilla.org"":{""d"":""/Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi"",""st"":1465554665000}},""app-global"":{""{972ce4c6-7e08-4474-a285-3208198ce6fd}"":{""d"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""st"":1465554665000}},""app-system-local"":{""web2pdfextension@web2pdf.adobedotcom"":{""d"":""/Library/Application Support/Mozilla/Extensions/{ec8030f7-c20a-464f-9b0e-13a3a9e97384}/web2pdfextension@web2pdf.adobedotcom"",""st"":1469108621000,""mt"":1466710987000}}} 1470447997474   addons.xpi-utils    DEBUG   Opening XPI database /var/folders/_z/tg84rj7d38d093h0xvpn3v9r0000gn/T/tmpjgu1hxcu/extensions.json 1470447997476   addons.xpi-utils    DEBUG   New add-on fxdriver@googlecode.com installed in app-profile *** Blocklist::_loadBlocklistFromFile: blocklist is disabled 1470447997493   DeferredSave.extensions.json    DEBUG   Save changes 1470447997494   addons.xpi-utils    DEBUG   New add-on e10srollout@mozilla.org installed in app-system-defaults 1470447997497   DeferredSave.extensions.json    DEBUG   Starting timer 1470447997499   DeferredSave.extensions.json    DEBUG   Save changes 1470447997499   addons.xpi-utils    DEBUG   New add-on firefox@getpocket.com installed in app-system-defaults 1470447997505   DeferredSave.extensions.json    DEBUG   Save changes 1470447997506   addons.xpi-utils    DEBUG   New add-on loop@mozilla.org installed in app-system-defaults 1470447997515   DeferredSave.extensions.json    DEBUG   Save changes 1470447997515   addons.xpi-utils    DEBUG   New add-on {972ce4c6-7e08-4474-a285-3208198ce6fd} installed in app-global 1470447997518   DeferredSave.extensions.json    DEBUG   Save changes 1470447997519   addons.xpi-utils    DEBUG   New add-on web2pdfextension@web2pdf.adobedotcom installed in app-system-local 1470447997527   DeferredSave.extensions.json    DEBUG   Starting write 1470447997536   addons.xpi-utils    WARN    Disabling foreign installed add-on web2pdfextension@web2pdf.adobedotcom in app-system-local 1470447997536   DeferredSave.extensions.json    DEBUG   Save changes 1470447997536   DeferredSave.extensions.json    DEBUG   Data changed while write in progress 1470447997537   addons.xpi-utils    INFO    Hiding the updated system add-ons. 1470447997537   addons.manager  DEBUG   Registering startup change 'installed' for fxdriver@googlecode.com 1470447997537   addons.xpi-utils    DEBUG   Make addon app-profile:fxdriver@googlecode.com visible 1470447997537   DeferredSave.extensions.json    DEBUG   Save changes 1470447997545   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1470447997559   addons.xpi  DEBUG   Calling bootstrap method install on e10srollout@mozilla.org version 1.0 1470447997560   addons.xpi-utils    DEBUG   Make addon app-system-defaults:e10srollout@mozilla.org visible 1470447997560   DeferredSave.extensions.json    DEBUG   Save changes 1470447997561   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1470447997567   addons.xpi  DEBUG   Calling bootstrap method install on firefox@getpocket.com version 1.0.2 1470447997567   addons.xpi-utils    DEBUG   Make addon app-system-defaults:firefox@getpocket.com visible 1470447997567   DeferredSave.extensions.json    DEBUG   Save changes 1470447997568   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1470447997575   addons.xpi  DEBUG   Calling bootstrap method install on loop@mozilla.org version 1.3.2 1470447997575   addons.xpi-utils    DEBUG   Make addon app-system-defaults:loop@mozilla.org visible 1470447997576   DeferredSave.extensions.json    DEBUG   Save changes 1470447997576   addons.xpi-utils    DEBUG   Make addon app-global:{972ce4c6-7e08-4474-a285-3208198ce6fd} visible 1470447997577   DeferredSave.extensions.json    DEBUG   Save changes 1470447997577   addons.manager  DEBUG   Registering startup change 'installed' for web2pdfextension@web2pdf.adobedotcom 1470447997577   addons.xpi-utils    DEBUG   Make addon app-system-local:web2pdfextension@web2pdf.adobedotcom visible 1470447997577   DeferredSave.extensions.json    DEBUG   Save changes 1470447997578   addons.xpi  DEBUG   Updating XPIState for {""id"":""fxdriver@googlecode.com"",""syncGUID"":""Mg92LaRrtL18"",""location"":""app-profile"",""version"":""2.53.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Firefox WebDriver"",""description"":""WebDriver implementation for Firefox"",""creator"":""Simon Stewart"",""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/var/folders/_z/tg84rj7d38d093h0xvpn3v9r0000gn/T/tmpjgu1hxcu/extensions/fxdriver@googlecode.com"",""installDate"":1470447997000,""updateDate"":1470447997000,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":3249525,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":true,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""3.0"",""maxVersion"":""48.0""}],""targetPlatforms"":[{""os"":""Darwin"",""abi"":null},{""os"":""SunOS"",""abi"":null},{""os"":""FreeBSD"",""abi"":null},{""os"":""OpenBSD"",""abi"":null},{""os"":""WINNT"",""abi"":null},{""os"":""Linux"",""abi"":null}],""multiprocessCompatible"":false,""signedState"":0,""seen"":true} 1470447997578   addons.xpi  DEBUG   getModTime: Recursive scan of fxdriver@googlecode.com 1470447997581   addons.xpi  DEBUG   Updating XPIState for {""id"":""e10srollout@mozilla.org"",""syncGUID"":""KH3y_vJ2zzYG"",""location"":""app-system-defaults"",""version"":""1.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Multi-process staged rollout"",""description"":""Staged rollout of Firefox multi-process feature."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi"",""installDate"":1465554665000,""updateDate"":1465554665000,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":4580,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""seen"":true} 1470447997581   addons.xpi  DEBUG   getModTime: Recursive scan of e10srollout@mozilla.org 1470447997581   addons.xpi  DEBUG   Updating XPIState for {""id"":""firefox@getpocket.com"",""syncGUID"":""vqkdWdGOkfZK"",""location"":""app-system-defaults"",""version"":""1.0.2"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Pocket"",""description"":""When you find something you want to view later, put it in Pocket."",""creator"":null,""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi"",""installDate"":1465554665000,""updateDate"":1465554665000,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":894473,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""seen"":true} 1470447997581   addons.xpi  DEBUG   getModTime: Recursive scan of firefox@getpocket.com 1470447997582   addons.xpi  DEBUG   Updating XPIState for {""id"":""loop@mozilla.org"",""syncGUID"":""itc8lrnnKNGI"",""location"":""app-system-defaults"",""version"":""1.3.2"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Firefox Hello"",""description"":""Web sharing for Firefox"",""creator"":""Mozilla"",""homepageURL"":null},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi"",""installDate"":1465554665000,""updateDate"":1465554665000,""applyBackgroundUpdates"":1,""bootstrap"":true,""skinnable"":false,""size"":4239140,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""46.0a1"",""maxVersion"":""47.*""},{""id"":""xpcshell@tests.mozilla.org"",""minVersion"":""0"",""maxVersion"":""10""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""seen"":true} 1470447997582   addons.xpi  DEBUG   getModTime: Recursive scan of loop@mozilla.org 1470447997582   addons.xpi  DEBUG   Updating XPIState for {""id"":""{972ce4c6-7e08-4474-a285-3208198ce6fd}"",""syncGUID"":""TcqbUrxR2Dro"",""location"":""app-global"",""version"":""47.0"",""type"":""theme"",""internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1465554665000,""updateDate"":1465554665000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7134,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0"",""maxVersion"":""47.0""}],""targetPlatforms"":[],""seen"":true} 1470447997583   addons.xpi  DEBUG   getModTime: Recursive scan of {972ce4c6-7e08-4474-a285-3208198ce6fd} 1470447997583   addons.xpi  DEBUG   Updating XPIState for {""id"":""web2pdfextension@web2pdf.adobedotcom"",""syncGUID"":""FPrND2wO6yoG"",""location"":""app-system-local"",""version"":""2.0"",""type"":""extension"",""internalName"":null,""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{},""iconURL"":""chrome://web2pdfextension/skin/C_AdobeLogo_48x48.png"",""icon64URL"":""chrome://web2pdfextension/skin/C_AdobeLogo_64x64.png"",""defaultLocale"":{""name"":""Adobe Acrobat - Create PDF"",""description"":""Converts a web page to PDF"",""creator"":""Adobe Systems Incorporated"",""homepageURL"":""http://www.adobe.com/""},""visible"":true,""active"":false,""userDisabled"":true,""appDisabled"":false,""descriptor"":""/Library/Application Support/Mozilla/Extensions/{ec8030f7-c20a-464f-9b0e-13a3a9e97384}/web2pdfextension@web2pdf.adobedotcom"",""installDate"":1469108621000,""updateDate"":1469108621000,""applyBackgroundUpdates"":1,""bootstrap"":false,""skinnable"":false,""size"":148797,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":true,""hasBinaryComponents"":false,""strictCompatibility"":false,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""4.0"",""maxVersion"":""46.0""}],""targetPlatforms"":[],""multiprocessCompatible"":false,""signedState"":2,""seen"":true} 1470447997584   DeferredSave.extensions.json    DEBUG   Save changes 1470447997584   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1470447997584   addons.xpi-utils    DEBUG   Updating add-on states 1470447997585   addons.xpi-utils    DEBUG   Writing add-ons list 1470447997586   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1470447997587   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1470447997587   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1470447997587   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1470447997588   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1470447997589   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1470447997612   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1470447997613   addons.manager  DEBUG   Provider finished startup: XPIProvider 1470447997613   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1470447997613   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1470447997614   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1470447997614   addons.manager  DEBUG   Starting provider: GMPProvider 1470447997621   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1470447997622   addons.manager  DEBUG   Provider finished startup: GMPProvider 1470447997622   addons.manager  DEBUG   Starting provider: PluginProvider 1470447997622   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1470447997623   addons.manager  DEBUG   Provider finished startup: PluginProvider 1470447997623   addons.manager  DEBUG   Completed startup sequence 1470447998023   addons.manager  DEBUG   Starting provider:  1470447998023   addons.manager  DEBUG   Registering shutdown blocker for  1470447998023   addons.manager  DEBUG   Provider finished startup:  1470447998156   DeferredSave.extensions.json    DEBUG   Write succeeded 1470447998156   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17 1470447998156   DeferredSave.extensions.json    DEBUG   Starting timer 1470447998178   addons.repository   DEBUG   No addons.json found. 1470447998179   DeferredSave.addons.json    DEBUG   Save changes 1470447998181   DeferredSave.addons.json    DEBUG   Starting timer 1470447998222   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1470447998222   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1470447998222   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1470447998226   DeferredSave.extensions.json    DEBUG   Starting write 1470447998234   DeferredSave.addons.json    DEBUG   Starting write 1470447998250   DeferredSave.extensions.json    DEBUG   Write succeeded 1470447998264   DeferredSave.addons.json    DEBUG   Write succeeded ``` ## Steps to reproduce -  ``` from selenium import webdriver webdriver.Firefox() ```","closed","","randomshinichi","2016-08-06T02:06:31Z","2019-08-19T20:09:55Z"
"","2525","webelement::get_attribute returns non-None (null) value for non-existing tags","## Meta -  OS:   MacOs Selenium Version:   Client Python 2.53.6 , Server 2.53.1, ChromeDriver 2.22 Browser:   Chrome, Firefox -->  Browser Version:   Fails on: FF 47.0.1, Chrome  51.0.2704.106 (64-bit) Works on:  Edge 13 ## Expected Behavior -  For non-existing tags the server should return None. ## Actual Behavior -  The server/client lib returns an empty unicode string `u''`  ## Steps to reproduce -  _Failure_: Req body: `{""sessionId"": ""4bd1ef02-3a08-4b0d-b700-2b6c2b892c0a"", ""name"": ""style"", ""id"": ""31""}` Response body: `{""state"":""success"",""sessionId"":""4bd1ef02-3a08-4b0d-b700-2b6c2b892c0a"",""hCode"":1500749704,""value"":"""",""class"":""org.openqa.selenium.remote.Response"",""status"":0}` _Success_: Req body: `'{""sessionId"": ""2828bfad26d7437fa528b8105690f4ac"", ""name"": ""style"", ""id"": ""31""}'` Response body: `'{""status"": 0, ""sessionId"": ""2828bfad26d7437fa528b8105690f4ac"", ""value"": null, ""state"": ""success"", ""hCode"": 23251683, ""class"": ""org.openqa.selenium.remote.Response""}'`","closed","","mehmetg","2016-07-27T01:02:28Z","2019-08-19T13:09:55Z"
"","2520","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:","## Meta -  OS:   Mac OS x Selenium Version:   WebDRiver 2.53 Browser:    Firefox - 47 ## Log trace:  org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/Applications/Firefox.app/Contents/MacOS/firefox-bin) on port 7055; process output follows:  internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1431984092000,""updateDate"":1469452774000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7140,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0.1"",""maxVersion"":""47.0.1""}],""targetPlatforms"":[],""seen"":true} 1469473440774   DeferredSave.extensions.json    DEBUG   Save changes 1469473440774   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1469473440774   addons.xpi-utils    DEBUG   Updating add-on states 1469473440775   addons.xpi-utils    DEBUG   Writing add-ons list 1469473440783   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1469473440783   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1469473440800   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1469473440818   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1469473440819   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1469473440821   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1469473440821   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1469473440822   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1469473440825   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1469473440827   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1469473440827   addons.manager  DEBUG   Provider finished startup: XPIProvider 1469473440827   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1469473440827   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1469473440828   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1469473440828   addons.manager  DEBUG   Starting provider: GMPProvider 1469473440835   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1469473440835   addons.manager  DEBUG   Provider finished startup: GMPProvider 1469473440835   addons.manager  DEBUG   Starting provider: PluginProvider 1469473440836   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1469473440836   addons.manager  DEBUG   Provider finished startup: PluginProvider 1469473440837   addons.manager  DEBUG   Completed startup sequence 1469473441052   DeferredSave.extensions.json    DEBUG   Starting timer 1469473441064   addons.manager  DEBUG   Starting provider:  1469473441064   addons.manager  DEBUG   Registering shutdown blocker for  1469473441065   addons.manager  DEBUG   Provider finished startup:  1469473441112   DeferredSave.extensions.json    DEBUG   Starting write 1469473441235   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1469473441235   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1469473441235   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1469473441249   DeferredSave.extensions.json    DEBUG   Write succeeded 1469473441249   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17  Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'Shabanas-MBP.lan', ip: '192.168.1.213', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.5', java.version: '1.8.0_91' Driver info: driver.version: AbstractDriver at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:125) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:216) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:207) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at com.test.ee.config.AbstractDriver.setUp(AbstractDriver.java:32) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: internalName"":""classic/1.0"",""updateURL"":null,""updateKey"":null,""optionsURL"":null,""optionsType"":null,""aboutURL"":null,""icons"":{""32"":""icon.png"",""48"":""icon.png""},""iconURL"":null,""icon64URL"":null,""defaultLocale"":{""name"":""Default"",""description"":""The default theme."",""creator"":""Mozilla"",""homepageURL"":null,""contributors"":[""Mozilla Contributors""]},""visible"":true,""active"":true,""userDisabled"":false,""appDisabled"":false,""descriptor"":""/Applications/Firefox.app/Contents/Resources/browser/extensions/{972ce4c6-7e08-4474-a285-3208198ce6fd}.xpi"",""installDate"":1431984092000,""updateDate"":1469452774000,""applyBackgroundUpdates"":1,""skinnable"":true,""size"":7140,""sourceURI"":null,""releaseNotesURI"":null,""softDisabled"":false,""foreignInstall"":false,""hasBinaryComponents"":false,""strictCompatibility"":true,""locales"":[],""targetApplications"":[{""id"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""minVersion"":""47.0.1"",""maxVersion"":""47.0.1""}],""targetPlatforms"":[],""seen"":true} 1469473440774   DeferredSave.extensions.json    DEBUG   Save changes 1469473440774   addons.xpi  DEBUG   Updating database with changes to installed add-ons 1469473440774   addons.xpi-utils    DEBUG   Updating add-on states 1469473440775   addons.xpi-utils    DEBUG   Writing add-ons list 1469473440783   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1469473440783   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/loop@mozilla.org.xpi 1469473440800   addons.xpi  DEBUG   Calling bootstrap method startup on loop@mozilla.org version 1.3.2 1469473440818   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1469473440819   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/e10srollout@mozilla.org.xpi 1469473440821   addons.xpi  DEBUG   Calling bootstrap method startup on e10srollout@mozilla.org version 1.0 1469473440821   addons.xpi  DEBUG   Registering manifest for /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1469473440822   addons.xpi  DEBUG   Loading bootstrap scope from /Applications/Firefox.app/Contents/Resources/browser/features/firefox@getpocket.com.xpi 1469473440825   addons.xpi  DEBUG   Calling bootstrap method startup on firefox@getpocket.com version 1.0.2 1469473440827   addons.manager  DEBUG   Registering shutdown blocker for XPIProvider 1469473440827   addons.manager  DEBUG   Provider finished startup: XPIProvider 1469473440827   addons.manager  DEBUG   Starting provider: LightweightThemeManager 1469473440827   addons.manager  DEBUG   Registering shutdown blocker for LightweightThemeManager 1469473440828   addons.manager  DEBUG   Provider finished startup: LightweightThemeManager 1469473440828   addons.manager  DEBUG   Starting provider: GMPProvider 1469473440835   addons.manager  DEBUG   Registering shutdown blocker for GMPProvider 1469473440835   addons.manager  DEBUG   Provider finished startup: GMPProvider 1469473440835   addons.manager  DEBUG   Starting provider: PluginProvider 1469473440836   addons.manager  DEBUG   Registering shutdown blocker for PluginProvider 1469473440836   addons.manager  DEBUG   Provider finished startup: PluginProvider 1469473440837   addons.manager  DEBUG   Completed startup sequence 1469473441052   DeferredSave.extensions.json    DEBUG   Starting timer 1469473441064   addons.manager  DEBUG   Starting provider:  1469473441064   addons.manager  DEBUG   Registering shutdown blocker for  1469473441065   addons.manager  DEBUG   Provider finished startup:  1469473441112   DeferredSave.extensions.json    DEBUG   Starting write 1469473441235   addons.manager  DEBUG   Starting provider: PreviousExperimentProvider 1469473441235   addons.manager  DEBUG   Registering shutdown blocker for PreviousExperimentProvider 1469473441235   addons.manager  DEBUG   Provider finished startup: PreviousExperimentProvider 1469473441249   DeferredSave.extensions.json    DEBUG   Write succeeded 1469473441249   addons.xpi-utils    DEBUG   XPI Database saved, setting schema version preference to 17  at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:113) ... 31 more  java.lang.NullPointerException at com.test.ee.config.AbstractDriver.tearDown(AbstractDriver.java:41) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33) at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) at org.junit.runners.ParentRunner.run(ParentRunner.java:363) at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86) at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382) at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider loogging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","skhanam","2016-07-25T19:11:56Z","2019-08-19T21:10:01Z"
"","2078","Python: webdriver.firefox.logfile ignored?","## Meta -  OS:   Linux Selenium Version:   selenium==2.53.1 (according to `pip`) Browser:   Firefox Browser Version:   Mozilla Firefox 45.1.0 ## Expected Behavior -  The following code put before the selenium test results in stderr being captured:  ```     profile = webdriver.FirefoxProfile()     profile.set_preference(""webdriver.firefox.logfile"",                            ""/tmp/firefox_console"")     self.browser = webdriver.Firefox(profile) ``` ## Actual Behavior -  `/tmp/firefox_console` doesn't even get run ## Steps to reproduce -  (skipped in hope that the bug report will be reproducible without them)","closed","","d33tah","2016-05-10T18:58:16Z","2019-08-18T15:09:51Z"
"","2544","Selenium is calling geckodriver with the wrong parameter (webdriver-port was changed to port)","## Meta -  OS:   Linux Selenium Version:   2.53.4 and 3.0.0-beta 1  Trying to run firefox in a selenium grid with marionette + a version compiled from the current source of geckodriver yelds an error in geckodriver telling that webdriver-port is an invalid argument. Looking at this commit https://github.com/mozilla/geckodriver/commit/9e05d53902a9b8a72912815f012c4608b10524f7, they changed the argument from 'webdriver-port' to 'port'  I have opened an issue there  https://github.com/mozilla/geckodriver/issues/154  And the current answer from them is that this changed to be more in line with chromedriver. So I am opening here as well.","closed","","Marcelovk","2016-08-01T13:07:25Z","2019-08-19T21:09:41Z"
"","2128","Double click does not work on Firefox with selenium 2.53","## Meta -  OS:   Linux Selenium Version:   2.53 Browser:   Firefox  Browser Version:   36.0.1 ## Expected Behavior -  Double Click on SVG Element should work ## Actual Behavior -  Double click does not work on SVG element It use to work on selenium 2.48 ## Steps to reproduce -  Double click on SVG DOM.   For example, double click on a node in following URL using selenium http://mbostock.github.io/d3/talk/20111018/tree.html","closed","D-firefox,","kmcsekar","2016-05-19T16:42:15Z","2019-08-16T20:10:01Z"
"","2400","Session [*] was terminated due to SO_TIMEOUT","## Meta -  OS:   Jenkins running in Linux usind TestNG to run Tests in Selenium Grid where the nodes run in Windows 7 Selenium Version:  WebDriver: 2.48.2 IEDriver: 2.48.0 Browser:   Internet Explorer Browser Version:   11 ## Expected Behavior -  Tests run Multithreaded using TestNG on multiple nodes without timeour. ## Actual Behavior -  Our Tests run only 2 out of about 8 times a day without an SO_TIMEOUT. The other test runs, suddenly the tests start failing with the following stacktrace:  `     Exception org.openqa.selenium.WebDriverException  ``` Message: Session [6919ba25-53b6-4615-bd59-e97399bf1e12] was terminated due to SO_TIMEOUT Command duration or timeout: 3 milliseconds Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44' System info: host: 'myhost', ip: 'myip', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-23-generic', java.version: '1.7.0_05' Session ID: 6919ba25-53b6-4615-bd59-e97399bf1e12 Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities [{platform=WINDOWS, javascriptEnabled=true, elementScrollBehavior=0, enablePersistentHover=true, ignoreZoomSetting=false, ie.ensureCleanSession=false, enableElementCacheCleanup=true, browserName=internet explorer, unexpectedAlertBehaviour=dismiss, webdriver.remote.sessionid=6919ba25-53b6-4615-bd59-e97399bf1e12, pageLoadStrategy=normal, version=11, ie.usePerProcessProxy=false, cssSelectorsEnabled=true, ignoreProtectedModeSettings=false, requireWindowFocus=false, initialBrowserUrl=http://localhost:12863/, handlesAlerts=true, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.browserCommandLineSwitches=, takesScreenshot=true}] Stacktrace:     at sun.reflect.GeneratedConstructorAccessor83.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:525)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)     at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:306)     .     .     .     some trace from our code that calls RemoteWebDriver.get(url)     .     .     .     at sun.reflect.GeneratedMethodAccessor24.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:601)     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)     at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)     at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)     at org.testng.internal.Invoker.invokeMethod(Invoker.java:585)     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)     at java.lang.Thread.run(Thread.java:722) Caused by: org.openqa.grid.common.exception.GridException: Session [6919ba25-53b6-4615-bd59-e97399bf1e12] was terminated due to SO_TIMEOUT     at org.openqa.grid.internal.ActiveTestSessions.getExistingSession(ActiveTestSessions.java:105)     at org.openqa.grid.internal.Registry.getExistingSession(Registry.java:425)     at org.openqa.grid.web.servlet.handler.RequestHandler.getSession(RequestHandler.java:240)     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:120)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) ```  `  We have not clue anymore what the problem might be. Today be upgrade WebDriver and IEDriver to the latest releases, but going through the changelog doesnt semm that this is fixed.  Out timeouts are set like this: `     ""nodePolling"": 5000,     ""cleanUpCycle"": 5000,     ""browserTimeout"": 300000,     ""timeout"": 600000, `  Any ideas whats going on or if we need some different timeout settings? ## Steps to reproduce -  Not found a way to reproduce it although this happens more than once a day.","closed","","benzman81","2016-06-28T21:44:37Z","2019-08-16T14:09:52Z"
"","2431","IDE > Error forwarding the new session cannot find : Capabilities [{browserName=*webdriver}]","## Meta -  OS:   hub: Mac OS X 10.11.5, node: Windows 10  Selenium Version: 2.53.1 IDE: 2.9.1  Browser Version:   Firefox 47 (and 42), Internet Explorer 11, Chrome ## Expected Behavior -  Selenium IDE works just fine with Firefox or with Chrome + Webdriver playback in a standalone Selenium server. Also it works fine with a grid set-up which is comprised of a hub (Mac OS X) and a node (Windows 10) of Selenium servers when I run test cases using a ruby code and webdriver. It doesn't matter if I use chrome or internet explorer for webDriver. ## Actual Behavior -  But when I use a grid set-up with Selenium IDE webdriver playback feature, it fails with the error (a log of hub) below.  ``` 18:55:46.989 INFO - Got a request to create a new session: Capabilities [{browserName=internet explorer}] 18:55:46.990 INFO - Available nodes: [http://10.0.1.6:7777] 18:55:46.990 INFO - Trying to create a new session on node http://10.0.1.6:7777 18:55:46.990 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, browserName=internet explorer, maxInstances=5, version=11, platform=WINDOWS} 18:55:50.745 INFO - Got a request to create a new session: Capabilities [{browserName=*webdriver}] 2016-07-06 18:55:50.745:WARN:osjs.ServletHandler:qtp1484594489-34: /selenium-server/driver/ java.io.IOException: org.openqa.grid.common.exception.GridException: Error forwarding the new session cannot find : Capabilities [{browserName=*webdriver}]     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:126)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.grid.common.exception.GridException: Error forwarding the new session cannot find : Capabilities [{browserName=*webdriver}]     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:115)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) Caused by: org.openqa.grid.common.exception.CapabilityNotPresentOnTheGridException: cannot find : Capabilities [{browserName=*webdriver}]     at org.openqa.grid.internal.ProxySet.verifyAbilityToHandleDesiredCapabilities(ProxySet.java:182)     at org.openqa.grid.internal.Registry.addNewSessionRequest(Registry.java:247)     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:109)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)     at org.seleniumhq.jetty9.servlet.ServletHolder.handle(ServletHolder.java:808)     at org.seleniumhq.jetty9.servlet.ServletHandler.doHandle(ServletHandler.java:587)     at org.seleniumhq.jetty9.server.session.SessionHandler.doHandle(SessionHandler.java:221)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)     at org.seleniumhq.jetty9.servlet.ServletHandler.doScope(ServletHandler.java:515)     at org.seleniumhq.jetty9.server.session.SessionHandler.doScope(SessionHandler.java:185)     at org.seleniumhq.jetty9.server.handler.ContextHandler.doScope(ContextHandler.java:1061)     at org.seleniumhq.jetty9.server.handler.ScopedHandler.handle(ScopedHandler.java:141)     at org.seleniumhq.jetty9.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)     at org.seleniumhq.jetty9.server.Server.handle(Server.java:499)     at org.seleniumhq.jetty9.server.HttpChannel.handle(HttpChannel.java:310)     at org.seleniumhq.jetty9.server.HttpConnection.onFillable(HttpConnection.java:257)     at org.seleniumhq.jetty9.io.AbstractConnection$2.run(AbstractConnection.java:540)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)     at org.seleniumhq.jetty9.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)     at java.lang.Thread.run(Thread.java:745) ``` ## Steps to reproduce - 1. run a hub    `java -jar selenium-server-standalone-2.53.1.jar -role hub -timeout 30 -browserTimeout 60    ` 2. run a node    `Java -jar selenium-server-standalone-2.53.1.jar -role node -port 7777 -hub http://10.0.1.2:4444/grid/register/ -maxSession 10 -browser ""browserName=chrome,version=51, platform=WINDOWS, maxInstances=5, seleniumProtocol=WebDriver"" -browser ""browserName=internet explorer, version=11, platform=WINDOWS, maxInstances=5, seleniumProtocol=WebDriver""` 3. open Firefox and Selenium IDE and run any test case  Please help.","closed","C-ide,","nextofsearch","2016-07-06T10:25:30Z","2019-08-17T16:09:59Z"
"","2123","Poor performance in Firefox on pages with constant Ajax requests (2.53.0; FF45)","## Meta -  OS:   Grid 2.53.0 runs on Debian Linux; Nodes 2.53.0 on Windows Server 2003 SP2 Selenium Version:   2.53.0 (tried 2.52.0 and 2.42.2 as well) Browser:   Firefox Browser Version:   45.1.1 and 38.0.0 ## Expected Behavior -  Normal work as usual ## Actual Behavior -  With multiplay ajax requests running in background (15 to 20 per second) Firefox takes up a minute to perform a single action on element (findElement, click, sendKeys etc.)  If we have multiple instances of Firefox experiencing this issue on one Grid (i.e. Grid + 4 Nodes + 2 Firefox instances on each node - 8 in total) it eventually leeds to complete shutdown of nodes and Grid Hub - all actions are stuck until we manually close browser windows ## Steps to reproduce -  Unfortunately, we do not have open public page. But I can mention services which causes all those background requests - due to an issue in test env Salesforce Live Agent started spamming background requests on client side pages which led to performance issues in Firefox running under Selenium (Google Chrome continues to work fine though)  ![screen shot 2016-05-18 at 11 30 49](https://cloud.githubusercontent.com/assets/5063579/15354194/baf19f68-1cec-11e6-8a3c-75f37827d672.png)","closed","","letsrokk","2016-05-18T09:35:42Z","2019-08-20T05:10:00Z"
"","2564","BrowserLocator class is no longer present in 3.0.0-beta2","## Meta -  OS:   Any Selenium Version:   3.02 beta Browser:   Any  My current testing framework has BrowserLocator and its implementations usage, but with the upgrade to 3.0.0-beta2, I can no longer find BrowserLocator implementations with the latest release.  The following classes are no longer found with 3.02 beta  org.openqa.selenium.browserlaunchers.locators.BrowserLocator; org.openqa.selenium.browserlaunchers.locators.FirefoxLocator; org.openqa.selenium.browserlaunchers.locators.GoogleChromeLocator; org.openqa.selenium.browserlaunchers.locators.InternetExplorerLocator; org.openqa.selenium.browserlaunchers.locators.SafariLocator;","closed","","wolfy027","2016-08-03T17:46:22Z","2019-08-19T21:09:33Z"
"","2545","GridLauncher class is missing from selenium-server-3.0.0-beta1.jar","## Meta -  OS:   Any Selenium Version:   3-beta Browser:   any ## Expected Behavior -  Node is registered against selenium hub ## Actual Behavior -  Error: Could not find or load main class org.openqa.grid.selenium.GridLauncher ## Steps to reproduce -  I have a folder with selenium jars that I'm pulling from maven. Then I use those to start selenium nodes against a grid. After selenium3 got released a few days ago, the node registration started to fail with the above error. Here is the command that I use:  java -cp ""lib/*"" org.openqa.grid.selenium.GridLauncher -nodeConfig node.json -role node -host   GridLauncher used to be in selenium-server.jar, but now it's not there.","closed","","irusev","2016-08-01T13:39:46Z","2019-08-18T06:09:48Z"
"","2291","[Improvement] Configurable speed for dragging elements","## Meta -  OS:   All Selenium Version:   next Browser:   All ## Expected Behavior -  I want to be able to set the element drag speed. In some cases it's too fast. ## Actual Behavior -  As far as I know the drag speed is hard-coded and I can't change it.","closed","D-firefox,","Cipirel","2016-06-15T10:23:53Z","2020-04-25T08:19:50Z"
"","2239","element click doesn't work after upgrading to 2.53","## Meta -  OS:   10.10.5 Selenium Version:   2.53 Browser:   Fire fox  Browser Version:   38.8.0 ## Expected Behavior -  Click on element that displays popup doesn't work. Ex: Element xpath: //a[contains(.,'EightyCharacterLengthGroupNameEightyCharacterLengthGroupNameEightyCharacterLengt')]/ancestor::tr//a[contains(@href,'javascript')] ## Actual Behavior -  It highlights the url though click doesn't throw error. ## Steps to reproduce -  a) Create an element with a href that executes a javascript to display a popup b) Get the element and call click on it  Note:   If we perform the same click using JavascriptExecutor it works.","closed","","jpreddygithub","2016-06-08T18:01:56Z","2019-08-20T04:09:35Z"
"","2337","firfox getting crash just after opening once","## Meta -  OS:   < OSX captain > Selenium Version:   < 2.53.0, Webdriver, etc > Browser:   <  Firefox >  Browser Version:     ## Expected Behavior - it should be open and Work normally ## Actual Behavior - but this is getting crash as we try to call Browser with selenium webdriver. ## Steps to reproduce -  < try to run a Selenium webdriver script on mac os (captain) It is generated very easly>","closed","","AkhileshCh","2016-06-22T11:53:03Z","2019-08-20T01:09:57Z"
"","2486","Selenium IDE: Check Box action is recorded as Click action in IDE","## Meta -  OS:    Windows 8.1 Selenium Version:   IDE ## Expected Behavior - The Command recorded should be ""check"" ## Actual Behavior - The command recorded is ""click"". ## Steps to reproduce -  https://jsfiddle.net/gy972x2x/        check Box      check Box       open     /gy972x2x/            selectFrame     result            click     //input","closed","C-ide,","arifullah","2016-07-18T16:52:32Z","2019-08-17T16:09:58Z"
"","2334","Session expiry issue when clicked on login button through automation by webdriver","## Meta -  OS:    Windows 7 Selenium Version:    Selenium Webdriver Browser:      Browser Version:    IE 11( 32 bit) ## Expected Behavior - Automation should successfully log into the system ## Actual Behavior - Automation throws error and shows session expired ## Steps to reproduce -   This code is attached in document [Session expire issue.docx](https://github.com/SeleniumHQ/selenium/files/327136/Session.expire.issue.docx) [Logs_Session expiry issue.txt](https://github.com/SeleniumHQ/selenium/files/327137/Logs_Session.expiry.issue.txt)","closed","","nitishk2016","2016-06-22T07:10:15Z","2019-08-19T10:09:43Z"
"","2568","FF 48 not open in selenium 3.0 beta version ..Help MEE friends...","## Meta -  OS:    window 7 32bit  Selenium Version:   3.0 betaaa    Browser:  Firefox 48    Browser Version:   48   ## Expected Behavior - Firefox  not starts and is able to be controlled via Selenium  FF 48 version ## Actual Behavior - ..Firefox starts, but does nothing. After waiting long enough, I see an error like:Firefox starts, but does nothing.  I see an error like: Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser ## Steps to reproduce -","closed","","kuttyv","2016-08-04T08:43:48Z","2019-08-19T19:09:49Z"
"","2044","Chrome Test Failure","## Meta -  OS:      Windows 7 , 64-bit Selenium Version:      2.53.0  Browser:      Google Chrome Browser Version:      50.0 (64-bit) ## Expected Behavior -  Test Script should work on Google chrome.  ## Actual Behavior -  Result Message: Initialization method UnitTestHRPortal.LoginTests.Init threw exception. System.InvalidOperationException: System.InvalidOperationException: unknown error: unrecognized Blink revision: 0c319c380220abe3daf0277e40a2d0b22a7c4550   (Driver info: chromedriver=2.10.267521,platform=Windows NT 6.1 x86_64). Result StackTrace:   at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor(ChromeOptions options)    at OpenQA.Selenium.Chrome.ChromeDriver..ctor()    at HRPortalAutomation.Driver.Initialize() in c:\Users\dell\Documents\Visual Studio 2012\Projects\HRPortalAutomation\HRPortalAutomation\Driver.cs:line 18    at UnitTestHRPortal.LoginTests.Init() in c:\Users\dell\Documents\Visual Studio 2012\Projects\HRPortalAutomation\UnitTestHRPortal\LoginTests.cs:line 16 ## Steps to reproduce -    Google chrome Test Script failure while i try to run the same script for firefox and it runs successfully but does not work for chrome.","closed","","awaiskhalil","2016-05-03T07:42:08Z","2019-08-20T07:09:40Z"
"","2577","Unable to load webdriver firefox","## Meta -  OS:      Selenium Version:  3.0    Browser:  firefox 45  i am getting error as below   Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases     at com.google.common.base.Preconditions.checkState(Preconditions.java:199)     at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)     at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:38)     at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:91)     at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)     at org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:245)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:220)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:215)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124)     at Servicenow.LoginwithSSO.main(LoginwithSSO.java:13)  -- Internet Explorer?  Firefox?   FIREFOX 48+ IS ONLY COMPATIBLE WITH GECKODRIVER. Any issue logged here for 48+ will be closed as a duplicate of #2559  If the issue is with Google Chrome consider logging an issue with chromedriver instead: https://sites.google.com/a/chromium.org/chromedriver/help  If the issue is with Microsoft Edge consider logging an issue with Microsoft instead: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/  If the issue is with Firefox GeckoDriver (aka Marionette) consider logging an issue with Mozilla: https://bugzilla.mozilla.org/buglist.cgi?product=Testing&component=Marionette  If the issue is with PhantomJS consider logging an issue with Ghostdriver: https://github.com/detro/ghostdriver  -->  Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Bandatej","2016-08-04T21:24:55Z","2019-08-18T08:10:01Z"
"","2199","Selenium continued perform on the element with click or move to action in IE browser","## Meta -  OS:      Selenium Version:  2.53.1    Browser:  IE10/IE11/IE8    Browser Version:      32bit ## Expected Behavior -  element.click() method should just perform once. ## Actual Behavior -  element.click() method perform continued. And I found the element was flashing on the IE browser.  I download the IEDriver from: http://selenium-release.storage.googleapis.com/2.53/IEDriverServer_Win32_2.53.1.zip ## Steps to reproduce -    1.Just open a new IE browser instance. from selenium import webdriver a=webdriver.Ie() a.get('http://www.xxx.com')  2.Perform a click method on a element a.find_element_by_css_selector('[]').click()","closed","","yisake","2016-06-02T10:37:31Z","2019-08-20T03:09:36Z"
"","2434","Clicking inside iframe with webdriver on Firefox causing page scroll unexpectedly","## Meta -  OS:      Selenium Version:  2.53.0, 2.53.1    Browser:  Firefox 47, Firefox 48.0b4    Browser Version:  47, 48   ## Expected Behavior -  Clicking inside iframe should not cause the unexpected scrolling ## Actual Behavior -  Clicking inside iframe caused the unexpected scrolling ## Steps to reproduce -   1. I made this sample page containing an iframe inside which there are 5 buttons with absolute positions 2. I used firefox webdriver to click buttons from right to left one by one, when clicking on the last one, page scrolled unexpectedly  ``` FirefoxDriver driver = new FirefoxDriver(); driver.get(""http://seleniumbug.rf.gd/""); driver.switchTo().frame(""game-frame""); driver.findElement(By.id(""myButton1"")).click(); driver.findElement(By.id(""myButton2"")).click(); driver.findElement(By.id(""myButton3"")).click(); driver.findElement(By.id(""myButton4"")).click(); driver.findElement(By.id(""myButton5"")).click(); ``` ## Comment - 1. I only tried with latest 2 versions of selenium and firefox,  but I believe this is related to this commit: https://github.com/SeleniumHQ/selenium/commit/2f4a6d884e5a3eff6791b1006bb65f045c6d2494,   I have to say it's very arguable to add scrollintoview in the click function; from my point of view scrollintoview is better to go as a separate function instead of modifying the existing click function, if it's badly needed, because click should be as simple as possible to do just clicking, and selenium should give flexibility to users to scroll or not, rather than brutally scroll regarless; besides, we as users of selenium are highly depending on the click function, I would prefer you don't add uncertain things to it unless you can test it properly, that would be highly appreciated","closed","D-firefox,","wyhmichael","2016-07-07T00:56:23Z","2019-08-14T14:09:42Z"
"","2581","Actions Class not working with gecko driver","## Meta -  OS:      Selenium Version:   3.0.0 beta 2 Browser:   Firefox 48 and chrome ## Expected Behavior -  Actions class should work properly . We should be able generate the mouse action hovering. ## Actual Behavior -  With  Selenium-Java 2.43.0 , this command is working fine. With the update 3.0.0-beta2, started access firefox driver through gecko driver, in that case we are getting the below excpetion  org.openqa.selenium.UnsupportedCommandException: POST /session/625b7993-e503-4acf-b50e-01ca01690e26/moveto did not match a known command (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 7 milliseconds Build info: version: 'unknown', revision: '31c43c8', time: '2016-08-02 21:57:56 -0700' System info: host: 'LMTN202461', ip: '10.15.2.63', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{rotatable=false, raisesAccessibilityExceptions=false, appBuildId=20160726073904, version=, platform=XP, proxy={}, command_id=1, specificationLevel=0, acceptSslCerts=false, browserVersion=48.0, platformVersion=6.1, XULappId={ec8030f7-c20a-464f-9b0e-13a3a9e97384}, browserName=Firefox, takesScreenshot=true, takesElementScreenshot=true, platformName=Windows_NT, device=desktop}] Session ID: 625b7993-e503-4acf-b50e-01ca01690e26     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:683)     at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:35)     at org.openqa.selenium.remote.RemoteMouse.mouseMove(RemoteMouse.java:89)     at org.openqa.selenium.interactions.MoveMouseAction.perform(MoveMouseAction.java:39)     at org.openqa.selenium.interactions.CompositeAction.perform(CompositeAction.java:50)     at com.maax.businessmanager.util.TestBase.hovermouse(TestBase.java:225) ## Steps to reproduce -  Actions class not working with new gecko driver.   Have the below line of code in script  and execute it  Actions act= new Actions(d1); act.moveToElement(d1.findElement(By.xpath(""path of the element"")).build().perform();","closed","","naveenv20","2016-08-08T05:45:11Z","2019-08-19T20:09:54Z"
"","2098","Missing javadoc and sources artifacts from selenium-java","## Meta -  OS:      Selenium Version:   2.53 Browser:      Browser Version:     ## Expected Behavior -  The selenium-java artifacts should include javadoc and sources ## Actual Behavior -  The selenium-java project does not include javadoc and sources see http://repo1.maven.org/maven2/org/seleniumhq/selenium/selenium-java/2.53.0/ ## Steps to reproduce -","closed","","psufoxman","2016-05-12T20:13:24Z","2019-08-20T06:09:43Z"
"","2030","Selenium webdriver (2.52.0 and 2.53.0) are not performing a click on the webelement and passed the step without any error.","## Meta -  OS:      Selenium Version:     ## Expected Behavior - The code is expected to click on payment templates and then click on load more link which appears in that page  @Test     @Parameters({""browser"", ""userName"", ""password""})     public void loginWebFX(String browser, String userName, String password) throws Exception {         String userNameTextBox = PropertiesFileReader.getPropertyValue(""login.userName.textBox"");         String passwordTextBox = PropertiesFileReader.getPropertyValue(""login.password.textBox"");         String menuIcon = PropertiesFileReader.getPropertyValue(""home.page.menu.icon"");         String paymentTemplates = PropertiesFileReader.getPropertyValue(""home.page.menu.paymentTemplates"");         String loadMore = PropertiesFileReader.getPropertyValue(""paymentTemplates.loadMore"");         String rowsPT = PropertiesFileReader.getPropertyValue(""paymentTemplates.rows"");  ```     DriverUtil.launchBrowserDriver(browser);     DriverUtil.getUrl(PropertiesFileReader.getPropertyValue(""webfx.login.url""));     DriverUtil.enterText(userNameTextBox, userName);     DriverUtil.enterText(passwordTextBox, password);     DriverUtil.pressEnter(passwordTextBox);     DriverUtil.click(menuIcon);     log.debug(DriverUtil.findElement(paymentTemplates));     Assert.assertTrue(DriverUtil.findElement(paymentTemplates).isDisplayed(),""PTs not displayed"");      DriverUtil.click(paymentTemplates);     DriverUtil.waitforElementVisibility(loadMore, 20);     log.debug(DriverUtil.findElement(loadMore));     if (DriverUtil.findElement(loadMore) != null) {         int intialPT = DriverUtil.findElements(rowsPT).size();         log.debug(""Initial rows are "" + intialPT);         String[] loadLinkText = DriverUtil.getElementText(loadMore).split("" "");         int templatesToLoad = Integer.parseInt(loadLinkText[1]);         log.debug(""Payment templates to load "" + templatesToLoad);         DriverUtil.click(loadMore);         int loadedPT = DriverUtil.findElements(rowsPT).size();         Assert.assertTrue(intialPT + templatesToLoad == loadedPT,                 templatesToLoad + "" are to be loadedd, but failed"");         log.debug(""Payment templates after load "" + loadedPT);          DriverUtil.captureScreenshot(""Loaded more"");         log.info(""Load is tested"");     } else {         log.info(""Nothing to load"");     }  }  @AfterMethod public void tearDown() {     DriverUtil.closeBrowser();     DriverUtil.shutDownDriver(); } ``` ## Actual Behavior -  But actually the selenium passes the click step without actually clicking on the payment templates link though it is available.  After searching for the solutions in google i doubt my maven dependencies are in compatable with latest selenium jar ie 2.52.0 or 2.53.0  '''--------pom.xml------------'''       4.0.0     com.maven     com.maven.testng     0.0.1-SNAPSHOT     Maven-Testng setup     Maven-Testng setup  ```   jar       testng.xml                    org.testng         testng         6.9.10         test                         org.seleniumhq.selenium         selenium-java         2.52.0                           org.apache.poi         poi-ooxml         3.14-beta1                        org.uncommons         reportng         1.1.4         test                                       org.testng                 testng                                           com.google.inject         guice         4.0         test      ```           org.apache.logging.log4j     log4j-api     2.5           org.apache.logging.log4j     log4j-core     2.5              com.microsoft.sqlserver  sqljdbc41  4.1 runtime   ```                                                 org.apache.maven.plugins                 maven-compiler-plugin                 3.5.1                                      1.7                     1.7                                                             org.apache.maven.plugins                 maven-surefire-plugin                 2.19.1                                                                                            usedefaultlisteners                             false                                                                               listener                             org.uncommons.reportng.HTMLReporter,                                 org.uncommons.reportng.JUnitXMLReporter                                                               org.uncommons.reportng.velocity-log             true                                                   target/                                                ${suiteXmlFile}                                                                     ```    ''''------------------''' ''''-------testng.xml-----------'''     ```                                                                                                                ```   ''''------------------'''  At times i am getting staleElementReferenceException as well when trying to click the element, please provide me resolution for this problem.  Thanks in advance.","closed","D-IE,","Kiran-CGI","2016-04-29T14:56:33Z","2019-08-18T18:09:57Z"
"","2494","Unable to run Selenium test with an Imporsenated context - IEWebdriver","## Meta -  OS:      Selenium Version:      Browser:  Internet Explorer  When running Selenium tests under an Impersonated user context, Getting exception with IEWebdriver: 1. Cannot start the driver service on http://localhost:1878/  If we are running normallr (with out Impersonation) every thing is working as expected.  Any clues?","closed","D-IE,","anandacc","2016-07-20T13:58:04Z","2019-08-14T05:09:53Z"
"","2670","NoSuchWindowError: Unable to get browser","## Meta -  OS:      Selenium Version:      Browser:     ## Expected Behavior -  ""use strict""  const webDriver=require(""selenium-webdriver""),     fs=require(""fs""),     mkdirp=require(""mkdirp""); let driver=new webDriver.Builder()                 .withCapabilities(webDriver.Capabilities.ie())                 .build(); let htmlString=""""; let url=process.argv[2]; let loopFlag=true; mkdirp.sync(""./html/""); setTimeout(function(){     start(); },3000); function start(){     driver.get(url)         .then(function(){             setTimeout(function(){                 insertJS();             });         }); }  function insertJS(){     driver.executeScript(function(){         if(window.data){             document.title=""Â∑≤ÁªèÊ≥®ÂÖ•"";             if(window.data==""king""){                 return window.data;             }else{                 var d=window.data;                 window.data=""king"";                 return d;             }  ```     }else{         document.title=""Êú™Ê≥®ÂÖ•"";         window.copyTimes=0;         window.data=""king"";         document.onkeydown=function(event){              var e = event || window.event || arguments.callee.caller.arguments[0];              if(e && e.keyCode==119){//ÊåâF8                 window.data=document.documentElement.outerHTML;             }         };         document.title=""Â∑≤ÁªèÊ≥®ÂÖ•"";         return ""new"";     } }) .then(function(dataString){     if(dataString==""king""){         console.log(""ÁΩëÈ°µÊó†Âà∑Êñ∞‰∏îÊó†Êï∞ÊçÆ"");         /* if(loopFlag){             loopFlag=false;             setTimeout(function(){                 loop();             });         } */         setTimeout(function(){             insertJS();         },3000);     }else if(dataString==""new""){         console.log(""Êñ∞ÁΩëÈ°µ"");          setTimeout(function(){             insertJS();         },3000);     }else{         console.log(""ÁΩëÈ°µÊó†Âà∑Êñ∞‰∏îÊúâÊï∞ÊçÆ"");         driver.takeScreenshot()             .then(function(data){                 let base64Data=data.replace(/^data:image\/png;base64,/,"""");                 fs.writeFile(""./html/""+Date.now()+"".png"", base64Data, 'base64', function(err){                     if(err){                         console.log(err);                     }else{                         console.log(""Êà™ÂõæÊàêÂäü"");                     }                 });             })             .then(function(){                 fs.writeFileSync(""./html/""+Date.now()+"".html"",dataString);             })             .then(function(){                 driver.executeScript(function(){                     document.title=""‰øùÂ≠òÊ¨°Êï∞Ôºö""+(++window.copyTimes)+"",""+new Date().toLocaleString();                 });             })             .then(function(){                 setTimeout(function(){                     insertJS();                 },3000);             });         /* fs.writeFileSync(""./html/""+Date.now()+"".html"",dataString);         driver.executeScript(function(){             document.title=""‰øùÂ≠òÊ¨°Êï∞Ôºö""+(++window.copyTimes)+"",""+new Date().toLocaleString();         }); */         /* setTimeout(function(){             insertJS();         },3000); */     } }); ```  } ## Actual Behavior -  NoSuchWindowError: Unable to get browser     at WebDriverError (C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\error.js:27:10)     at NoSuchWindowError (C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\error.js:192:10)     at Object.checkLegacyResponse (C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\error.js:505:15)     at parseHttpResponse (C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\http.js:396:13)     at C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\http.js:328:11     at process._tickCallback (node.js:369:9) From: Task: WebDriver.executeScript()     at Driver.schedule (C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\webdriver.js:414:17)     at Driver.executeScript (C:\Users\king\AppData\Roaming\npm\node_modules\selenium-webdriver\lib\webdriver.js:563:16)     at insertJS (C:\Users\king\Desktop\IEBrowser.js:95:9)     at null._onTimeout (C:\Users\king\Desktop\IEBrowser.js:20:5)     at Timer.listOnTimeout (timers.js:92:15)  help please!","closed","","XJinChang","2016-08-26T05:00:11Z","2019-08-19T18:09:57Z"
"","2729","I am getting this error in selenium webdriver, please help","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - To open Firefox Browser ## Actual Behavior - error Exception in thread ""main"" java.lang.IllegalStateException: The driver executable does not exist: C:\Users\Aurora\Downloads\geckodriver-v0.8.0-win32.zip\geckodriver.exe  ``` at com.google.common.base.Preconditions.checkState(Preconditions.java:199) at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121) at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116) at org.openqa.selenium.firefox.GeckoDriverService.access$100(GeckoDriverService.java:38) at org.openqa.selenium.firefox.GeckoDriverService$Builder.findDefaultExecutable(GeckoDriverService.java:91) at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296) at org.openqa.selenium.firefox.FirefoxDriver.createCommandExecutor(FirefoxDriver.java:245) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:220) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:215) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:124) at learn.learn.main(learn.java:12) ``` ## Steps to reproduce - code  package learn;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class learn {  ``` public static void main(String[] args) {     // TODO Auto-generated method stub     System.setProperty(""webdriver.gecko.driver"",             ""C:\\Users\\Aurora\\Downloads\\geckodriver-v0.8.0-win32.zip\\geckodriver.exe"");     WebDriver driver = new FirefoxDriver();   } ```  }","closed","","SARAR-R","2016-09-06T20:56:50Z","2019-08-19T18:09:36Z"
"","2535","How Selenium Grid chooses the node to execute the test case?","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - I am working on an automation application that uses Selenium grid to automate the test cases. Now multiple client can connect to my application(which in turn will cause multiple node to connect with hub, that's ok!). Now lets say machine A submits something to Hub to run..now as per my understanding hub RANDOMLY chooses the node from the available ones. On the contrary I want that test case should run on the node that submitted the request. Is it possible? ## Actual Behavior - ## Steps to reproduce -","closed","","devanshagr","2016-07-28T18:19:16Z","2019-08-19T21:09:48Z"
"","2791","Java Robot class on chrome browser","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","kritik-asg","2016-09-19T06:18:10Z","2019-08-19T16:09:56Z"
"","2786","browser time out selenium grid exception while iOS mobile testing.","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","babusurendra","2016-09-16T17:38:18Z","2019-08-19T16:10:00Z"
"","2781","png","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","denis690","2016-09-15T21:30:38Z","2019-08-19T16:10:03Z"
"","2779","version","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","saphalcisin","2016-09-15T13:26:37Z","2019-08-19T17:09:40Z"
"","2764","selenium-java-2.53.0","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tumionline","2016-09-12T11:07:52Z","2019-08-19T17:09:48Z"
"","2761","getLog","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","gonomk","2016-09-12T03:33:09Z","2019-08-19T17:09:50Z"
"","2758","Failed to connect to binary FirefoxBinary","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tr2000","2016-09-11T08:49:28Z","2019-08-19T17:09:51Z"
"","2744","safari","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","poornimaprasad","2016-09-08T19:43:46Z","2019-08-19T17:09:58Z"
"","2737","title","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","YY88Xu","2016-09-08T05:17:15Z","2019-08-19T17:10:03Z"
"","2710","HAHA","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","huangben555","2016-09-04T10:05:10Z","2019-08-19T18:09:44Z"
"","2692","Control flow","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","dangdangkhtn","2016-08-31T10:34:55Z","2019-08-19T18:09:51Z"
"","2691","Control","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","dangdangkhtn","2016-08-31T10:34:34Z","2019-08-19T18:09:52Z"
"","2648","doc","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","f2acode","2016-08-23T03:33:07Z","2019-08-19T19:09:46Z"
"","2642","Fail to start Chrome","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","shailesh290","2016-08-22T11:07:09Z","2019-08-19T19:09:53Z"
"","2640","aaaa","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","akkkkky","2016-08-22T09:39:42Z","2019-08-19T19:09:54Z"
"","2639","d","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","danielhaish","2016-08-21T12:51:12Z","2019-08-19T19:09:57Z"
"","2635","chrome driver","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","vbhalla","2016-08-20T04:07:00Z","2019-08-19T19:10:00Z"
"","2623","ChromeDriver","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","xiongbiao","2016-08-18T02:50:16Z","2019-08-19T20:09:37Z"
"","2618","Have ceased –∑–∞–ø—É—Å–∫—Ç—å—Å—è autotests from Jenkins after the browser chrome was updated to version 52.0.2743.116 m (64-bit) Tests worked at the previous version steadily. Tests are written on C# with use of Silenium and are started steadily only from Visual Studio. It is necessary for me that tests were started from Jenkins.","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","cont-inik","2016-08-17T06:26:07Z","2019-08-19T13:09:58Z"
"","2612","ntlm","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","abhigogna","2016-08-14T15:34:51Z","2019-08-19T20:09:40Z"
"","2603","2559","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","chessbuzz","2016-08-11T18:14:06Z","2019-08-19T20:09:46Z"
"","2590","WebDriver is not recognizing the second window on IE","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Prudwi","2016-08-09T19:14:51Z","2019-08-19T20:09:48Z"
"","2569","org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output:","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","appunikki","2016-08-04T08:59:02Z","2019-08-19T20:09:59Z"
"","2553","ok","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","volodimirchernov","2016-08-02T11:07:38Z","2019-08-19T21:09:38Z"
"","2551","alert()","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","dushyantovyas","2016-08-02T09:02:18Z","2019-08-19T21:09:37Z"
"","2550","java","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","IqbalHassan","2016-08-02T06:12:45Z","2019-08-19T21:09:39Z"
"","2536","switch","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","rajatbhardwaj","2016-07-29T05:10:09Z","2019-08-19T21:09:47Z"
"","2529","getCurrentURL","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ghost","2016-07-27T05:24:09Z","2019-08-22T07:56:04Z"
"","2515","aa","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","zhaohui0514","2016-07-25T08:20:00Z","2019-08-19T21:10:02Z"
"","2508","C#: Firefox: Cannot disable addons.manager and addons.xpi DEBUG message.","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tonycjr","2016-07-21T23:32:54Z","2019-08-19T22:09:38Z"
"","2507","se","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","divyaqa31","2016-07-21T22:38:12Z","2019-08-19T22:09:39Z"
"","2484","driver","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","yiqihcx","2016-07-18T03:54:40Z","2019-08-19T22:09:51Z"
"","2461","Unable to find elements on closed window","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","arabbetts","2016-07-13T14:18:07Z","2019-08-19T22:10:04Z"
"","2454","Pop up Child window and As well as Unable to Run Script on IE browser.","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Sandeeppanigrahi","2016-07-12T13:33:25Z","2019-08-19T23:09:34Z"
"","2453","authorization","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","AlexLAA","2016-07-12T10:13:22Z","2019-08-19T23:09:37Z"
"","2444","[Errno 13] Permission denied: 'ghostdriver.log'","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ghost","2016-07-11T07:18:48Z","2019-08-22T07:55:49Z"
"","2440","Page objects","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","anderson-rolim","2016-07-08T12:11:50Z","2019-08-19T23:09:50Z"
"","2430","regis","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tenikiwano","2016-07-06T07:45:24Z","2019-08-19T23:09:59Z"
"","2422","a","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","w-zhang1224","2016-07-04T08:32:06Z","2019-08-19T23:10:03Z"
"","2414","5653","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","samirmnd","2016-07-01T05:29:13Z","2019-08-20T00:09:41Z"
"","2398","WebDriver.js","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","mfbower","2016-06-28T17:58:27Z","2019-08-20T00:09:57Z"
"","2386","DesiredCapabilities.Chrome","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tjz90","2016-06-27T03:18:28Z","2019-08-20T00:10:02Z"
"","2385","teste","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ederzadravec","2016-06-26T21:11:50Z","2019-08-20T00:09:59Z"
"","2384","A exception with a null response was thrown sending an HTTP request to the remote WebDriver server for URL http://localhost:7055/hub/session","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","mpvlv","2016-06-26T20:02:02Z","2019-08-20T00:10:02Z"
"","2370","windows","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","leongiles","2016-06-24T19:27:42Z","2019-08-20T01:09:43Z"
"","2354","No Support for for other languages like C#,Perl,Groovy etc since only Jar is supported only for Java","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","abhishekvsony","2016-06-24T06:42:42Z","2019-08-20T01:09:47Z"
"","2353","Selenium 3 Jar failing to download even after multiple tries","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","abhishekvsony","2016-06-24T06:38:53Z","2019-08-20T01:09:46Z"
"","2336","opera","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","mikaeldrott","2016-06-22T11:50:05Z","2019-08-20T01:09:58Z"
"","2333","window object not available in protractor","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ghost","2016-06-22T06:10:35Z","2019-08-22T07:55:39Z"
"","2326","My pictures","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","sassyjava-12","2016-06-20T22:55:58Z","2019-08-20T02:09:33Z"
"","2324","chrome browser","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","rvrbabu434","2016-06-20T17:20:44Z","2019-08-20T02:09:34Z"
"","2300","#2110","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Orfik","2016-06-16T14:05:46Z","2019-08-20T02:09:48Z"
"","2295","load strategy","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","root1alex","2016-06-15T15:25:27Z","2019-08-20T02:09:49Z"
"","2276","selenium","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Imrserg","2016-06-13T15:35:09Z","2019-08-20T03:09:40Z"
"","2270","chromedrvier","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","halfdanox","2016-06-13T06:19:29Z","2019-08-20T03:09:42Z"
"","2253","touchmove","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","cds803","2016-06-10T10:16:41Z","2019-08-20T03:09:56Z"
"","2240","too big","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","kenjchan","2016-06-08T19:06:32Z","2019-08-20T04:09:34Z"
"","2223","aaa","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Siva-pi","2016-06-07T00:46:18Z","2019-08-20T04:09:43Z"
"","2219","new","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","nouman87","2016-06-06T13:51:28Z","2019-08-20T04:09:45Z"
"","2218","new","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","nouman87","2016-06-06T11:57:32Z","2019-08-20T04:09:45Z"
"","2212","Selenium Version:    Browser Version:","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","JMadhusri","2016-06-05T11:12:00Z","2019-08-20T04:09:47Z"
"","2192","IE WebDriver working too slow with 64 and just working in debug mode with 32","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","jhenyffer","2016-06-01T16:37:14Z","2019-08-20T04:09:59Z"
"","2190","command","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","samuel-prates","2016-05-31T16:43:10Z","2019-08-20T04:10:00Z"
"","2188","How to use WebDriver for IE11, for exemple to conect with the usual webDriver I only have to direct the path where the .exe is, but for the webDriver It is not possible, as It does not generates a .exe in the same page.","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","jhenyffer","2016-05-31T14:21:46Z","2019-08-20T04:09:58Z"
"","2182","launching chrome browser","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ManasaHC","2016-05-31T07:51:16Z","2019-08-20T04:10:03Z"
"","2166","SWITCH","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","houqingchun","2016-05-26T08:12:39Z","2019-08-20T05:09:38Z"
"","2147","Web Testing","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","pramd","2016-05-23T11:33:51Z","2019-08-20T05:09:47Z"
"","2145","Selenium Grid","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","kolikan","2016-05-22T01:26:19Z","2019-08-20T05:09:49Z"
"","2124","POP_1","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","TakTest","2016-05-18T19:13:42Z","2019-08-20T05:09:57Z"
"","2122","chrome","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","jayzhang667","2016-05-18T08:34:20Z","2019-08-20T05:10:01Z"
"","2120","maximize","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ggcaponetto","2016-05-18T07:12:04Z","2019-08-20T05:10:02Z"
"","2113","selenium plugins for chrome","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","pritpalsingh1","2016-05-17T11:04:16Z","2019-08-20T06:09:34Z"
"","2096","SeleniumRepository","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","apconsult","2016-05-12T19:04:39Z","2019-08-20T06:09:45Z"
"","2095","refresh","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","mickyto","2016-05-12T16:55:25Z","2019-08-20T06:09:45Z"
"","2092","firefox","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Barabashka86","2016-05-12T10:05:05Z","2019-08-20T06:09:48Z"
"","2089","JBehave can't open Chrome even it installed","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","TBN779","2016-05-12T08:05:52Z","2019-08-20T06:09:47Z"
"","2087","se","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","panghongliang","2016-05-12T00:20:29Z","2019-08-20T06:09:50Z"
"","2085","webdriver.safari.noinstall","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","versha-pradhan","2016-05-11T22:42:22Z","2019-08-20T06:09:51Z"
"","2073","selenium","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Rimehch","2016-05-10T09:57:57Z","2019-08-20T06:09:59Z"
"","2066","111","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Shamrikova","2016-05-08T17:49:53Z","2019-08-20T06:10:00Z"
"","2053","asda","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","inspyk","2016-05-04T11:52:13Z","2019-08-20T06:10:04Z"
"","2047","Overriding_the_Chrome_binary_location","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tomasNajun","2016-05-03T14:07:42Z","2019-08-20T07:09:36Z"
"","2046","Exception in thread ""main"" java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see http://code.google.com/p/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html 	at com.google.common.base.Preconditions.checkState(Preconditions.java:177) 	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:105) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:75) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:107) 	at nibe.nibe_start.main(nibe_start.java:23)","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","nibpanda","2016-05-03T12:35:50Z","2019-08-20T07:09:36Z"
"","2040","How to uninstall selenium web driver from ubuntu","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","renukajoshi","2016-05-02T11:37:53Z","2019-08-20T07:09:44Z"
"","2038","Selenium","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","wuyuzhou12345","2016-05-02T07:00:13Z","2019-08-20T07:09:43Z"
"","2236","Why ""test_google.py"" contain ""webhp"" in URL?","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:     ## Expected Behavior - ## Actual Behavior -  Why there is ""webhp"" in Google URL? I understand that webhp is some kind of ""hijacker"" http://www.anvisoft.com/resources/homepage-changed-to-google-comwebhp-how-to-remove/ ## Steps to reproduce -","closed","","coderLeprosy","2016-06-08T11:07:14Z","2019-08-20T04:09:39Z"
"","2723","id column delimited NoSuchElement","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:      FF 40.0.1 but in IE seems the same ## Expected Behavior -  find the element ## Actual Behavior -  NuSuchElementException ## Steps to reproduce -    https://jsfiddle.net/minchev/LLa09h1s/  webDriver.findElement(By.xpath(""//input[@id='login:login-email-text']""); webDriver.findElement(By.id(""login:login-email-text""));","closed","","nickyminch","2016-09-06T15:09:51Z","2019-08-19T18:09:40Z"
"","2472","Remote WebDriver and subclasses in Python fail methods if w3c is not defined","## Meta -  OS:      Selenium Version:      Browser:      Browser Version:      Apologies if the Github repo is not the right place for this yet, here is my observation. ## Expected Behavior -  All methods that check  if self.w3c: Should not fail, as the spec is still unfinished. ## Actual Behavior -  Methods such as get_window_size() that check  if self.w3c: Fail with a Remote WebDriver or subclass instance having no attribute w3c ## Steps to reproduce -","closed","","uchuugaka","2016-07-15T15:29:37Z","2019-08-19T22:09:54Z"
"","2668","Select Command not works in geckodriver","## Meta -  OS:      Browser:    https://gist.github.com/anonymous/74bba1626bf3ba737ff18b4b26592846  -->  Browser Version:","closed","","fraja89","2016-08-25T13:26:12Z","2019-08-16T00:09:55Z"
"","2497","Click doesn't work if the element has border-radius set and it's partially covered by another element (2.51.0+)","## Meta -  OS:  Windows 7  Selenium Version:  2.51.0+  Browser:  Firefox  Browser Version:  Firefox 44.0.2+ ## Expected Behavior -  An element should be click or an exception should be raised if it's partially covered. ## Actual Behavior -  The click was performed outside the element. ## Steps to reproduce -  The issue is probably caused by 65dbe9a154469fcad6318fba82452805281d6159 and is reproducible when the element has 'border-radius' set, its middle point is covered by another element, and some corner points are not covered. It clicks point that doesn't belong to the element. As a result the element is not clicked and the exception is not raised.  I have also seen the issue in cases when the element didn't have border-radius set. In that cases WebDriver clicked one pixel right from lower right corner.  jsfiddle - https://jsfiddle.net/aliaksandr_basau/tve0sf2w/ Code:  ```     [TestFixture]     public class Tests     {         [Test]         public void Verify()         {             using (var driver = new FirefoxDriver())             {                 try                 {                     driver.Navigate().GoToUrl(""https://jsfiddle.net/aliaksandr_basau/tve0sf2w/embedded/result/"");                      driver.SwitchTo().Frame(0);                      driver.ExecuteScript(""window.scrollBy(0,990)"");                      var searchBtn = driver.FindElement(By.ClassName(""btn""));                      searchBtn.Click();                      IAlert alert = null;                     try                     {                         alert = driver.SwitchTo().Alert();                     }                     catch (NoAlertPresentException)                     {                     }                      if (alert != null)                     {                         alert.Accept();                     }                      Assert.NotNull(alert, ""The button was not clicked."");                 }                 finally                 {                     driver.Close();                     driver.Quit();                 }             }         }     } ```","closed","","abasau","2016-07-20T17:17:57Z","2019-08-19T22:09:35Z"
"","1971","IE seems to click NOT on the element findby ID, PATH, CSS, NAME, etc...","## Meta -  OS:  Selenium Version:  Selenium Version:  Selenium Version:  Browser:  ## Expected Behavior -  The click on the element should open a complete new window.... ## Actual Behavior -  ...but it just show an other menu part of the website. ## Steps to reproduce -  The debug shows the details...:  ``` D 2016-04-13 10:58:37:168 server.cc(246) Command: POST /session/5e91f41f-ccda-4283-ac5c-411ae92fecd2/element {""using"":""partial link text"",""value"":""Fachauskunft""} D 2016-04-13 10:58:37:168 command.cc(36) Raw JSON command: { ""name"" : ""findElement"", ""locator"" : { ""sessionid"" : ""5e91f41f-ccda-4283-ac5c-411ae92fecd2"" }, ""parameters"" : {""using"":""partial link text"",""value"":""Fachauskunft""} } D 2016-04-13 10:58:37:168 IECommandExecutor.cpp(562) No alert handle is found D 2016-04-13 10:58:37:168 ElementFinder.cpp(53) Using FindElement atom to locate element having partialLinkText = Fachauskunft I 2016-04-13 10:58:37:168 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-04-13 10:58:37:261 VariantUtilities.cpp(179) Unknown type of dispatch is found in result, assuming IHTMLElement D 2016-04-13 10:58:37:261 ElementRepository.cpp(66) Element is not yet managed D 2016-04-13 10:58:37:277 server.cc(320) Response: {""sessionId"":""5e91f41f-ccda-4283-ac5c-411ae92fecd2"",""status"":0,""value"":{""ELEMENT"":""d77e5789-4eee-4871-93ce-95cc61ccb318"",""element-6066-11e4-a52e-4f735466cecf"":""d77e5789-4eee-4871-93ce-95cc61ccb318""}} D 2016-04-13 10:58:37:776 server.cc(246) Command: GET /session/5e91f41f-ccda-4283-ac5c-411ae92fecd2/element/d77e5789-4eee-4871-93ce-95cc61ccb318/location {} D 2016-04-13 10:58:37:776 command.cc(36) Raw JSON command: { ""name"" : ""getElementLocation"", ""locator"" : { ""sessionid"" : ""5e91f41f-ccda-4283-ac5c-411ae92fecd2"", ""id"" : ""d77e5789-4eee-4871-93ce-95cc61ccb318"" }, ""parameters"" : {} } D 2016-04-13 10:58:37:776 IECommandExecutor.cpp(562) No alert handle is found I 2016-04-13 10:58:37:776 Browser.cpp(124) No child frame focus. Focus is on top-level frame I 2016-04-13 10:58:37:792 Browser.cpp(124) No child frame focus. Focus is on top-level frame D 2016-04-13 10:58:37:854 VariantUtilities.cpp(95) Result type is JScriptTypeInfo I 2016-04-13 10:58:37:854 Browser.cpp(124) No child frame focus. Focus is on top-level frame D 2016-04-13 10:58:37:901 Script.cpp(439) Result type is string D 2016-04-13 10:58:37:917 server.cc(320) Response: {""sessionId"":""5e91f41f-ccda-4283-ac5c-411ae92fecd2"",""status"":0,""value"":{""x"":127,""y"":24}}  D 2016-04-13 10:58:37:948 server.cc(246) Command: POST /session/5e91f41f-ccda-4283-ac5c-411ae92fecd2/element/d77e5789-4eee-4871-93ce-95cc61ccb318/click {""id"":""d77e5789-4eee-4871-93ce-95cc61ccb318""} D 2016-04-13 10:58:37:948 command.cc(36) Raw JSON command: { ""name"" : ""click"", ""locator"" : { ""sessionid"" : ""5e91f41f-ccda-4283-ac5c-411ae92fecd2"", ""id"" : ""d77e5789-4eee-4871-93ce-95cc61ccb318"" }, ""parameters"" : {""id"":""d77e5789-4eee-4871-93ce-95cc61ccb318""} } D 2016-04-13 10:58:37:948 IECommandExecutor.cpp(562) No alert handle is found I 2016-04-13 10:58:37:948 Browser.cpp(124) No child frame focus. Focus is on top-level frame D 2016-04-13 10:58:37:963 InputManager.cpp(81) Mutex acquired for user interaction. D 2016-04-13 10:58:38:026 Element.cpp(461) Element is inline with multiple client rects, finding first non-zero sized client rect D 2016-04-13 10:58:38:088 Script.cpp(439) Result type is string D 2016-04-13 10:58:38:088 Element.cpp(354) (x, y, w, h): 129, 26, 170, 20 D 2016-04-13 10:58:38:088 InputManager.cpp(470) Using SendMessage method for mouse move D 2016-04-13 10:58:38:135 InputManager.cpp(241) Using SendMessage method for mouse click D 2016-04-13 10:58:38:197 Browser.cpp(442) Navigate Events Completed. D 2016-04-13 10:58:38:197 Browser.cpp(458) Browser busy property is true. D 2016-04-13 10:58:38:400 Browser.cpp(442) Navigate Events Completed. D 2016-04-13 10:58:38:400 Browser.cpp(497) Waiting for document to complete... D 2016-04-13 10:58:38:400 Browser.cpp(502) Not in navigating state D 2016-04-13 10:58:38:416 server.cc(320) Response: {""sessionId"":""5e91f41f-ccda-4283-ac5c-411ae92fecd2"",""status"":0,""value"":null} ```  Can anyone explain what the DEBUG details are saying in words?  ``` D 2016-04-13 10:58:37:948 server.cc(246) Command: POST /session/5e91f41f-ccda-4283-ac5c-411ae92fecd2/element/d77e5789-4eee-4871-93ce-95cc61ccb318/click {""id"":""d77e5789-4eee-4871-93ce-95cc61ccb318""}  ...  D 2016-04-13 10:58:38:026 Element.cpp(461) Element is inline with multiple client rects, finding first non-zero sized client rect D 2016-04-13 10:58:38:088 Script.cpp(439) Result type is string D 2016-04-13 10:58:38:088 Element.cpp(354) (x, y, w, h): 129, 26, 170, 20 D 2016-04-13 10:58:38:088 InputManager.cpp(470) Using SendMessage method for mouse move D 2016-04-13 10:58:38:135 InputManager.cpp(241) Using SendMessage method for mouse click ```  FF and Chrom works fine with the Selenium check to the website. IE seems to click on a wrong part of the web page...  Thanks Volker59  Updated with the right DEBUG details - sorry!","closed","D-IE,","Volker-59","2016-04-14T10:15:15Z","2019-08-14T05:09:57Z"
"","1852","IE11 Unable to find element","## Meta -  OS:  Selenium Version:  Browser: IE 11.0.28 X64 -->  Hey everybody   I have a problem with selenium   I try to run selenium on IE 11 but the problem is I have 2 Pc. the same coden selenium and I upgrade IE 11. on the first PC (let's call it PC 1 ) all the block is work but on the second(PC 2 ) not. the error is that they tell me Unable to find element on closed window or other similar like noSuchWindow Exception on this line for example : "" IWebElement element = driver.FindElement(By.XPath(""//div[@id='smenu4']/input[@value='Chercher (FIN)']""));""  but if I run it on PC 1 it work fine. that's make me crazy  Thank you","closed","","SeifBenayed","2016-03-21T14:14:44Z","2019-08-19T08:09:56Z"
"","1976","JavaScript executor function does not trigger click function properly in selenium 2.53 version","## Meta -  OS:  Selenium Version:  Browser: Google Chrome, Firefox  Browser Version:  ## Expected Behavior -  There is a next button on the footer of my application , when click on the next button it should move to the next page and should display all the expected element on the page and footer . ## Actual Behavior -  When click on the next button using javascript executor directly for click event , then it looks like it moves to the next page but it does not display all the expected button on the footer . My application works as expected .there is no issue . But this issue i am facing when using javascript executor . Even the click function does not work  . ## Steps to reproduce -  I can share the URL of my app to those who are desired to look on to this issue , please provide your email id to me so that i can share the credential to you in separate email .   I cant say the exact scenario and steps  , may be it depends up on the scenario that i am facing now . These functionality were working as expected in older version of selenium , But now it seems it is broken . Even click function also does not work This is very serous issue in selenium 2.53 version . Need to fix immediately .  Please help me. ## I have attached the screen shot below   ![sc2](https://cloud.githubusercontent.com/assets/10355092/14569500/c627ed78-035c-11e6-994d-7b2752113f34.png) ![sc1](https://cloud.githubusercontent.com/assets/10355092/14569501/c679d5d4-035c-11e6-9a74-96040709a1cc.png)","closed","","perwez123","2016-04-15T17:23:55Z","2019-08-20T08:09:46Z"
"","1997","I'm trying to find this field in firefinder","## Meta -  OS:  Selenium Version:  Browser: Firefox --> Browser Version:  ## Expected Behavior -  HTML IS: Close  I'm trying to find this field in firefinder using  [onclick*='courseOfferingClose']  a[contains(@onclick,'courseOfferingClose')]  [contains(@onclick,'courseOfferingClose')]  And none work... Any ideas please","closed","","ciaran12","2016-04-21T07:43:19Z","2019-08-20T08:09:33Z"
"","1962","Please Stop Firefox Driver Opening Firefox First Run Page - Do We Really Have To Live With This?","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  IDE  Language  Test Runner  ## Expected Behavior -  Firefox driver will open Firefox to requested web url. ## Actual Behavior -  Firefox driver opens Firefox First Run page and test cannot continue. I have tried various methods now to overcome this issue and I am just sick of it. Can you not just fix Selenium so it doesn't do this? With Selenium being tightly binded to Firefox you would think this issue would not exist.  I have tried: - Create firefox profile and call it in the c# code - Does Not Work  `string path = @""C:\Users\username\AppData\Local\Mozilla\Firefox\Profiles\w0izu99q.Test Profile""; FirefoxProfile ffprofile = new FirefoxProfile(path); driver = new FirefoxDriver(ffprofile);` - In c# code force Firefox to open to blank page - Does Not Work  `FirefoxProfile prof = new FirefoxProfile();             prof.SetPreference(""browser.startup.homepage_override.mstone"", ""ignore"");             prof.SetPreference(""startup.homepage_welcome_url.additional"", ""about:blank"");             driver = new FirefoxDriver(prof);` - Rolled back to older version of Firefox - Does Not Work - Used older version of web driver - Does Not Work ## Steps to reproduce -  1) Create Selenium test in Visual Studio with C# that implements Firefox web driver 2) Run test 3) Observe Firefox always opens first run page","closed","","QATester1","2016-04-13T10:45:13Z","2019-08-19T19:09:39Z"
"","1972","When trying to open a URL containing some parameters, IE is not able to open it using webdriver","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Steps to reproduce -  I am trying to open a url: ""http://localhost:8000/qconsole/?qa=1"" in Internet Explorer using driver.get() command, but not able to open the same. If i go to URL panel, select it and hit enter - page opens.  Instead I am able to open page: ""http://localhost:8000/qconsole"" without any issues,  Please help ## Expected Behavior -  Page should open ## Actual Behavior -  Page not opening","closed","","goyalvipul","2016-04-15T02:46:55Z","2019-08-19T09:09:46Z"
"","1968","How to handle Data-Attributes (HTML5)  using Selenium WebDriver New Version.","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  ""if the web elements is having  HTML5 (data Attributes), Does selenium Web Driver support for HTML5 Lang?"". ## Actual Behavior -   Unable to locate element: {""method"":""css selector"",""selector"":"".LM6RPg[data-reactid='73']""}","closed","","banu2016","2016-04-14T06:46:48Z","2019-08-19T09:09:42Z"
"","1871","OSX 10.11.2 Safari 9.0.3 - Unable to install safari driver extension","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -    I tried to install safari driver extension in this version safari, i downloaded the extension ‚ÄúSafariDriver.safariextz‚Äù and installed it. i click ""Trust"" button and Popup disappears leaving me with empty extensions dialog.  i tried a lot of methods to solve this issue and failed. I can access to the mac using VNC and without physical keyboard can be operated. https://github.com/seleniumhq/selenium/issues/1553","closed","","churey","2016-03-24T03:31:04Z","2019-08-19T15:09:33Z"
"","2021","282","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ivan-pronin","2016-04-28T10:50:28Z","2019-08-20T07:09:50Z"
"","2013","proxy","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","pydevil","2016-04-26T11:40:04Z","2019-08-20T07:09:55Z"
"","2010","-","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","alysaber","2016-04-25T16:36:16Z","2019-08-20T07:09:58Z"
"","2009","-","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","alysaber","2016-04-25T16:35:42Z","2019-08-20T07:10:00Z"
"","2006","screen","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","zulvi45","2016-04-25T08:13:51Z","2019-08-20T07:10:01Z"
"","1994","selenium wd","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","sheod","2016-04-20T15:55:03Z","2019-08-20T08:09:39Z"
"","1988","windows 8","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Sallyfang","2016-04-19T15:04:18Z","2019-08-20T08:09:41Z"
"","1986","f","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ToTony","2016-04-19T07:51:58Z","2019-08-20T08:09:42Z"
"","1980","cookies","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","yearofthedan","2016-04-18T03:17:55Z","2019-08-20T08:09:45Z"
"","1978","wait","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","ncp1113","2016-04-16T11:33:11Z","2019-08-20T08:09:47Z"
"","1955","DesiredCapabilities cap = new DesiredCapabilities(); 		 		cap.setBrowserName(""firefox""); 		cap.setJavascriptEnabled(true);","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","kjy2123","2016-04-11T06:31:16Z","2019-08-20T08:09:57Z"
"","1953","user-agent","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Prozpe","2016-04-09T16:52:08Z","2019-08-20T08:09:59Z"
"","1939","My English is very poor","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","sycing","2016-04-07T16:32:25Z","2019-08-20T09:09:37Z"
"","1929","NoSuchElementException","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","webislife","2016-04-06T13:23:44Z","2019-08-20T09:09:39Z"
"","1925","noclass","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","java-MagicWang","2016-04-06T06:01:09Z","2019-08-20T09:09:40Z"
"","1893","NoSuchWindow IE11","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","eddiechihyi","2016-03-29T22:11:54Z","2019-08-20T09:09:55Z"
"","1885","Toan","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","vantoan4351","2016-03-26T12:34:32Z","2019-08-20T09:09:59Z"
"","1880","Page Object model(Khuram)","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","skhussain170","2016-03-25T11:01:44Z","2019-08-20T09:10:03Z"
"","1873","the eo nao","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","boxingnguyen","2016-03-24T10:12:41Z","2019-08-20T10:09:36Z"
"","1870","ElementNotVisible:","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","eddiechihyi","2016-03-23T21:38:01Z","2019-08-20T10:09:40Z"
"","1855","shadow dom","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","sayaara","2016-03-21T17:31:04Z","2020-05-05T22:19:18Z"
"","1850","h","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","wuxiaoyun12345678","2016-03-21T09:18:33Z","2019-08-20T10:09:43Z"
"","1836","1q","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","aovestrang","2016-03-17T07:00:37Z","2019-08-20T10:09:53Z"
"","1835","1","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","aovestrang","2016-03-17T06:52:00Z","2019-08-20T10:09:54Z"
"","1825","firefox","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","tarasok","2016-03-16T12:13:39Z","2019-08-20T10:10:01Z"
"","1969","Element is not clickable","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  The element should be clickable . ## Actual Behavior -  The element is not being clickable and throwing an error  Exception in performing operation Unable to perform click on  link   Element is not clickable at point (50, 366.3999938964844). Other element would receive the click:  Command duration or timeout: 80 milliseconds Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'XXXXXXXXXXX', ip: '10.200.16.202', os.name: 'Windows Server 2008 R2', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_91' Session ID: 4394eb74-ac8d-4de0-9e1e-1da9de455470 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=45.0}] - By.linkText: Content Manager 20160414 03:00:57.063 :  INFO :  buildnumber : nobuild logDirName : c:\users\pchoda~1\appdata\local\temp\3\RIDEowoxfl.d\log.html 20160414 03:00:57.089 :  FAIL :  Exception in performing  navigations Unable to perform click on  Manager link   Element is not clickable at point (50, 366.3999938964844). Other element would receive the click:  Command duration or timeout: 80 milliseconds Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: 'XXXXXXXX', ip: 'xx.xx.xx.xx', os.name: 'Windows Server 2008 R2', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_91' Session ID: 4394eb74-ac8d-4de0-9e1e-1da9de455470 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=45.0}] - By.linkText: Content Manager ## Steps to reproduce -","closed","","phanisrikar","2016-04-14T07:18:58Z","2019-08-20T08:09:51Z"
"","2019","Not able to enter email and password in this site. ""Permission denied for 'handle-event'""","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  Should enter user name and password in the text box  ## Actual Behavior -  Shows this error message:   Exception in thread ""main"" org.openqa.selenium.WebDriverException: Permission denied to access property ""handleEvent"" Command duration or timeout: 183 milliseconds Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'prabhat-Inspiron-3543', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-36-generic', java.version: '1.7.0_80' **\* Element info: {Using=name, value=email} Session ID: 8da8e7b8-8148-4d52-8b2b-263aa8b47f5a Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=LINUX, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=46.0}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:461)     at org.openqa.selenium.By$ByName.findElement(By.java:303)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)     at PostInToggle.PivotalTracker.OpenToggleAndLogIn(PivotalTracker.java:43)     at PostInToggle.PivotalTracker.main(PivotalTracker.java:34) Caused by: org.openqa.selenium.WebDriverException: Permission denied to access property ""handleEvent"" Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46' System info: host: 'prabhat-Inspiron-3543', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-36-generic', java.version: '1.7.0_80' Driver info: driver.version: unknown     at .[55]","closed","D-firefox,","PrabhatPandey","2016-04-28T08:46:25Z","2019-08-14T14:09:53Z"
"","1826","Selenium 2.53.0 is released, but on official site it still says 2.52.0","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  On the site seleniumhq.org, it should be 2.53.0 against java ## Actual Behavior -   it is 2.52.0 against java ## Steps to reproduce -   1. go to seleniumhq.org","closed","","g-tiwari","2016-03-16T12:39:59Z","2019-08-20T10:09:56Z"
"","2023","selenium submit , select and etc functions","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  just need to find out to run simple script well. ## Actual Behavior -  example script :","closed","","mr-lks","2016-04-28T18:49:20Z","2019-08-20T07:09:49Z"
"","1943","Selenium Webdriver - Unable to select drop down in grid, it gets enabled and hide spontaneously","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  Dear all, please help me with this issues, in our web application most of the pages having dropdown‚Äôs in grid. While automating such process, it simply clicks the td (cell of the grid) and spontaneously the dropdown displayed and get hide. Because if its getting hide immediate we can‚Äôt perform next operation. How can we deal with such issues?  So that we can‚Äôt proceed further.  I just tried with following functions in selenium webdriver.am using java(selenium version 2.52.0) Click Clickandhold Tab keys Double click  Enter keys  Please advice? Thanks in advance. ## Actual Behavior -  drodpown in the grid enabled and hide spontaneously not able to perform action in the dropdown. ![after action](https://cloud.githubusercontent.com/assets/18043965/14373879/458924c0-fd6c-11e5-82d8-f04ffe351c5d.png) ![on action](https://cloud.githubusercontent.com/assets/18043965/14373880/458e5288-fd6c-11e5-8537-5a7db0f0f261.png)","closed","","techiebuddhas","2016-04-08T04:01:05Z","2019-08-20T08:10:01Z"
"","1990","Manual update of selenium server causes taskkill problems","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  close browser when finished ## Actual Behavior -  get warning at org.openqa.selenium.os.ProcessUtils killWinProcess:  WARNING: Process refused to die after 10 seconds, and couldn't taskkill it java.lang.NUllPointerException: Unable to find executable for: taskkill ## Notes-  This issue happened after upgrading selenium-server-standalone from 2.44.0 to 2.53.0 and the selenium-java from 2.44 to 2.53.  Reverting back to 2.44 fixes the issue","closed","","tckelly38","2016-04-19T16:21:15Z","2019-08-20T08:09:39Z"
"","1975","Unable to launch Chromedriver while running my testng test suite through command prompt","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  Chromedriver process should be launched and Chrome browser should be opened , while running my testng test suite through command prompt ## Actual Behavior - 1. The testng.xml is instantiated, but Chromedriver is not instantiated while running through the command prompt 2. I do not see chrome.exe appear in the task manager when running the test through command prompt and testng    The test runs fine while running them through Eclipse IDE with TestNG ## Steps to reproduce -  1.Download appropriate prebuilt server as instructed on the webdriver wiki page.http://code.google.com/p/selenium/wiki/ChromeDriver 2.specified its location via the webdriver.chrome.driver system property 3. Instantiate the driver 4. I have also added the chromedriver exe path and the Chrome browser exe path on my OS ""PATH"" Environment variable this is my ""Path"" PATH=C:\ProgramData\Oracle\Java\javapath;%JAVA_HOME%\bin;C:\Program Files\Java\jdk1.8.0_77\bin;C:\Users\mbr9\workspace\FinalAutomation\lib;C:\Program Files (x86)\Google\Chrome\Application;C:\Program Files\Microsoft MPI\Bin\;c:\PROGRA~1\ds_shell\code\bin\ds_shell;C:\Oracle11gR2_32bCli\client_1\bin;C:\Oracle11gR2_64bCli\client_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;c:\Program Files (x86)\Microsoft SQL Server\90\Tools\binn\;C:\Progr am Files\Microsoft\Web Platform Installer\;C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET Web Pages\v1.0\;C:\Program Files (x86)\Windows Kits\8.0\Windows Performance Toolkit\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Lenovo\Access Connections\;C:\Program Files\Lenovo\Fingerprint Manager Pro\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;c:\Program Files\ThinkPad\Bluetooth Software\;c:\Program Files\ThinkPad\Bluetooth Sof tware\syswow64; ![testngchromedrivecommandprompt](https://cloud.githubusercontent.com/assets/18446660/14561997/6eda2708-031a-11e6-86af-fe160f5be0d6.png) 1. able to run C:\Program Files (x86)\Google\Chrome\Application\chrome.exe manually 2. My testng tests run well with Eclipse IDE using Chromedrive, issue is when running them though commandprompt. these testng test run great on Firefox while running through command prompt    6.Chromedriver process is opened by typing  ""chromedriver"" through the command prompt , i.e. I get this message ""Starting ChromeDriver 2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4) on port 9515    Only local connections are allowed.""  Here is my code;  public class TestNGMyClass {    public static WebDriver driver1;  @BeforeMethod //@BeforeTest     public void setup() { System.setProperty(""webdriver.chrome.driver"", ""C:\Users\mbr9\workspace\FinalAutomation\lib\chromedriver.exe""); driver1 = new ChromeDriver(); driver1.manage().window().maximize();         driver1.navigate().refresh();         driver1.manage().deleteAllCookies(); driver1.navigate().to(""https://www.google.com""); } }","closed","","Manceee","2016-04-15T13:02:03Z","2019-08-19T09:09:47Z"
"","1868","Critical IE (10,11)Issue:Exception: A JavaScript error was encountered executing the findElement atom","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -  Ability to launch and run IE using webdriver coe. ## Actual Behavior -  Unable to find element with id == userid (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 60.21 seconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.52.0', revision: '4c2593c', time: '2016-02-11 19:03:33' System info: host: 'istx305', ip: '129.97.244.177', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_74' Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{browserAttachTimeout=0, enablePersistentHover=true, ie.forceCreateProcessApi=false, pageLoadStrategy=normal, ie.usePerProcessProxy=false, ignoreZoomSetting=false, handlesAlerts=true, version=11, platform=WINDOWS, nativeEvents=true, ie.ensureCleanSession=false, elementScrollBehavior=0, ie.browserCommandLineSwitches=, requireWindowFocus=false, browserName=internet explorer, initialBrowserUrl=http://localhost:48140/, takesScreenshot=true, javascriptEnabled=true, ignoreProtectedModeSettings=false, enableElementCacheCleanup=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=dismiss}] Session ID: 7ee539cf-57cd-4922-88ab-3b444670010c **\* Element info: {Using=id, value=userid} ## Steps to reproduce -    I wanted to add my comments to the previous thread, but it appears to be closed: https://github.com/seleniumhq/selenium/issues/1590  I also experienced this error when trying to run the IE webdriver. The code worked from Firefox and Chrome, but not for IE. I investigated and tried numerous solutions, including a newer version of the IE Webdriver executable, then eventually found success by following a colleague's suggestion to change the security settings in IE.  In the Internet Options dialog box, I checked on Enable Protected Mode in all categories (Internet, Local internet, Trusted Sites and Restricted Sites). This solved the problem.  Hope this helps!  Regards, Lannois","closed","","Lannois","2016-03-23T16:13:29Z","2019-08-20T09:10:04Z"
"","1916","Firefox find_element_by_xpath().click()  misses selections on borders","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Expected Behavior -   find_element_by_xpath().click()  takes me to the new url ## Actual Behavior -  The screen jumps, but there is no action taken.  This only happens when the element I am trying to select is partially visible (an image) or it is very close to a border.  find_element_by_xpath().is_displayed() works fine. ## Steps to reproduce -","closed","","JimHofman","2016-04-04T18:14:43Z","2019-08-20T08:09:55Z"
"","1963","DropDown selection doesn't work in IE","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:  ## Description -  Tests using DropDown.SelectByVule() or DropDown.SelectByIndex(), that works fine in FF and Chrome are not working in IE causing the exception. ## Expected Behavior -  Drop downs should work fine in IE ## Actual Behavior -  Tests fail with following error: `System.InvalidOperationException : Cannot click on option element. Executing JavaScript click function returned an unexpected error, but no error could be returned from Internet Explorer's JavaScript engine. (UnexpectedJavaScriptError)`","closed","","phoenixcz","2016-04-13T11:56:44Z","2019-08-20T08:09:53Z"
"","1910","ReadMe for Python is incorrect","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:   The ReadMe for for Python is misleading as it does not call out that the Java server is still required for Safari, as it simply wraps the RemoteWebDriver class.","closed","C-docs,","uchuugaka","2016-04-02T22:35:47Z","2019-08-16T22:09:55Z"
"","1915","Unable to connect to host 127.0.0.1 on port 7056 / Selenium 2.53 with ff 45.0","## Meta -  OS:  Selenium Version:  Browser:  Browser Version:   **After upgrading from 2.45 jar to 2.53 and ff37 to ff45 I'm getting this error. Please give me a feedback asap.  I`ve tried 2.52 and ff44 - same issue was raised** Tests are trigger by a jenkins job, if matters. ## Expected Behavior - Firefox should start without problems ## Actual Behavior - Error from summary is thrown  `Caused by: org.openqa.selenium.remote.ErrorHandler$UnknownServerException: Unable to connect to host 127.0.0.1 on port 7056 after 45000 ms. Firefox console output:  Build info: version: '2.53.0', revision: '4c2593c', time: '2016-02-11 19:06:42' System info: host: 'v-is-jk-01.synygy.net', ip: '10.220.10.103', os.name: 'Linux', os.arch: 'amd64', os.version: '3.8.13-55.2.1.el6uek.x86_64', java.version: '1.8.0_31' Driver info: driver.version: FirefoxDriver at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:112) at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:271) at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:119) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:218) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:211) at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:129) at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:525) at org.openqa.selenium.remote.server.FirefoxDriverProvider.callConstructor(FirefoxDriverProvider.java:91) at org.openqa.selenium.remote.server.FirefoxDriverProvider.newInstance(FirefoxDriverProvider.java:68) at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60) at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222) at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1) at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) at java.util.concurrent.FutureTask.run(FutureTask.java:166) at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603) at java.lang.Thread.run(Thread.java:722)`  Here is also my firefox profile: `private FirefoxProfile getFirefoxProfileSettings() {  ```     FirefoxProfile firefoxProfile = new FirefoxProfile();     firefoxProfile.setPreference(""browser.download.folderList"", 2);     firefoxProfile.setPreference(""browser.download.manager.showWhenStarting"", false);     firefoxProfile.setPreference(""browser.download.dir"",);        firefoxProfile.setPreference(""plugin.disable_full_page_plugin_for_types"", ""application/pdf,application/vnd.fdf"");     firefoxProfile.setPreference(""browser.helperApps.alwaysAsk.force"", false);     firefoxProfile.setPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/excel,application/vnd.ms-excel,application/x-excel,application/x-msexcel,application/pdf);     firefoxProfile.setPreference(""pdfjs.disabled"", true);     firefoxProfile.setEnableNativeEvents(false);     firefoxProfile.setPreference(""dom.max_script_run_time"", 0);     firefoxProfile.setPreference(""dom.max_chrome_script_run_time"", 0);     return firefoxProfile;  } ```  `","closed","D-firefox,","andrey2good","2016-04-04T18:06:45Z","2019-08-16T16:09:52Z"
"","1960","Issue with Chrome Browser communication with selenium script","## Meta -  OS:  Selenium Version:  Browser:  ## Expected Behavior -The Site should open with desired result ## Actual Behavior -  Hi,  I am using the code mentioned below,I am using selenium server 2.53 and chrome driver 2.21 ,both are latest according to selenium.org. The issue is Chrome browser opens but nothing displays it keeps on running,Just the message in console is  ""Starting ChromeDriver 2.21.371459 (36d3d07f660ff2bc1bf28a75d1cdabed0983e7c4) on port 54702 Only local connections are allowed"".  public class first { public static void main(String[] args) {  {         System.setProperty(""webdriver.chrome.driver"",""D:\chromedriver_win32\chromedriver.exe"");         WebDriver driver = new ChromeDriver();         driver.navigate().to(""http://www.msn.com"");  ```     }  } ```  }  I was previously using 2.48 selenium server for chrome browser but still it was same.","closed","","RaviVadhava","2016-04-12T06:43:41Z","2019-08-19T09:09:34Z"
"","2690","Possible compatibility problem with mocha 3.0.2","## Meta -  OS: Windows 7 Selenium Version:   2.53.3 Browser:   Firefox  Browser Version:   48.0.2 (64-bit) ## Expected Behavior -  no error ## Actual Behavior - ## The following error is reported:  Message:     Test `title` should be a ""string"" but ""function"" was given instead. Stack: Error: Test `title` should be a ""string"" but ""function"" was given instead.     at new Test (D:\MyDev\ljs_app\trunk\periscope\build\node_modules\mocha\lib\test.js:24:11)     at context.it.context.specify (D:\MyDev\ljs_app\trunk\periscope\build\node_modules\mocha\lib\interfaces\bdd.js:84:18)     at Object.it (D:\MyDev\ljs_app\trunk\periscope\build\node_modules\selenium-webdriver\testing\index.js:95:14)     at Suite. (D:\MyDev\ljs_app\trunk\periscope\build\test\selenium\tests\1-pageobjects\BasePage-test.js:251:8)     at Object.create (D:\MyDev\ljs_app\trunk\periscope\build\node_modules\mocha\lib\interfaces\common.js:114:19)     at Object.context.describe.context.context [as describe](D:MyDevljs_apptrunkperiscopebuildnode_modulesmochalibinterfacesbdd.js:42:27)     at Suite. (D:\MyDev\ljs_app\trunk\periscope\build\test\selenium\tests\1-pageobjects\BasePage-test.js:250:7)     at Object.create (D:\MyDev\ljs_app\trunk\periscope\build\node_modules\mocha\lib\interfaces\common.js:114:19)     at Object.context.describe.context.context [as describe](D:MyDevljs_apptrunkperiscopebuildnode_modulesmochalibinterfacesbdd.js:42:27) ##     at Object. (D:\MyDev\ljs_app\trunk\periscope\build\test\selenium\tests\1-pageobjects\BasePage-test.js:50:6) ## Steps to reproduce -  I'm using the selenium webdriver for JavaScript in conjunction with gulp. The tests are written using mocha and executed using the gulp-mocha plugin. Everything worked as expected until the gulp-mocha plugin needed to be upgraded from version 2.2.0 to 3.0.1 and therefore also pulling in a new version of the mocha package that went from 2.5.3 to 3.0.2. After upgrading mocha in the following code example an error ""Test `title` should be a ""string"" but ""function"" was given instead."" is reported in line 2.  ---  const test = require('selenium-webdriver/testing'); ## test.describe('module', function () {});","closed","C-nodejs,","doberkofler","2016-08-31T07:18:25Z","2019-08-19T09:09:40Z"
"","2441","Firefox WebDriver is Very Slow","## Meta -  OS: Windows 10 Selenium Version:   2.44.0 trough 2.53.1 Browser:   Firefox (45 & 47)  Browser Version:   45 through 47.0.1 maybe older versions too 31.4.0 (on a Mac) doesn't seem to have this issue. ## Expected Behavior -  I would expect the driver to be moderately performant.  A test that takes about 3 minutes with ChromeDriver or IEDriver takes about 7 minutes with the Firefox WebDriver (Selenium WebDriver).  Both local Selenium and RemoteWebDriver. ## Steps to reproduce -  I think the easiest way to uncover the issue is to open a Firefox browser and attempt to go to an intensive page (www.ace.com seems to cause the browser to crash).  Repeating the same exact steps with a native browser session has no performance issues.","closed","","J-Phipps","2016-07-08T21:28:25Z","2019-08-19T23:09:49Z"
"","2183","Getting element text","## Meta -  OS: OSX Selenium Version: 2.53.0 Browser: Chrome Browser Version: Version 50.0.2661.102 (64-bit)  I've got a simple HTML strong tag with some text in it. However I am unable to extract the text from using WebElement.text.  ``` html      Select all               203       ``` ## Expected Behavior -  When I get the span element using:  ``` py element = driver.find_element_by_css_selector(""a[class='select-all'] > strong > span"") x = element.text ```  I expect x to be '203' ## Actual Behavior -  When I get the span element and text using:  ``` py element = driver.find_element_by_css_selector(""a[class='select-all'] > strong > span"") x = element.text ```  The value of x is ''  Note: - WebElement.get_attribute('innerText') works - WebElement.get_attribute('innerHTML') works - WebElement.get_attribute('textContent') works  What is the command that get performed when calling WebElement.text?","closed","C-py,","remcowesterhoud","2016-05-31T08:46:40Z","2019-08-14T14:10:02Z"
"","2780","WebDriver is changing the context on click event of webelement in SPA","## Meta -  OS:","closed","","sshekhar89","2016-09-15T21:12:05Z","2019-08-19T17:09:33Z"
"","2442","Firefox: Unable to connect to host 127.0.0.1 on port 7056 after 45000 ms","## Meta -  OS Host: Ubuntu 14.04.3 LTS 3.19.0-28-generic (Travis worker) OS Container: Ubuntu 16.10 yakkety 20160708 (Docker container) Selenium Version: standalone 2.53.1 Browser:  Firefox Browser Version:  47.0.1 ## Expected Behavior -  Can run N Firefox tests in parallel on the same network interface. ## Actual Behavior -  Some sort of race condition on ports 7054 ... 7056 giving errors: - [Message: Unable to connect to host 127.0.0.1 on port 7056 after 45000 ms](https://travis-ci.org/elgalu/docker-selenium/jobs/143561228#L5727) - `selenium.common.exceptions.WebDriverException: Message: Unable to bind to locking port 7054 within 45000 ms` - [org.openqa.selenium.internal.SocketLock.lock](https://travis-ci.org/elgalu/docker-selenium/jobs/143563522#L5417)  By race condition I mean it happens sometimes but most time works fine.  Seems somehow related to [issue-archive/7272](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/7272) and/or [issue-archive/4790](https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/4790) ## Steps to reproduce -  See - [failed travis build 233](https://travis-ci.org/elgalu/docker-selenium/jobs/143561228#L5727) - [failed travis build 234](https://travis-ci.org/elgalu/docker-selenium/jobs/143563522#L5417)  Or: install Docker and Docker-Compose and:  ``` sh git clone git@github.com:elgalu/docker-selenium.git cd docker-selenium ./test/script_scenario_compose_N_N ```  **UPDATE 1** It only seems to happen on Ubuntu [yakkety-20160708](https://hub.docker.com/r/library/ubuntu/) or xenial-20160706 however I rolled back to xenial-20160629 and I cannot reproduce the issue anymore.  **UPDATE 2** False alarm regarding Ubuntu versions, it [also happened again on xenial-20160629](https://travis-ci.org/elgalu/docker-selenium/jobs/143606031#L5750)","closed","","elgalu","2016-07-09T14:33:44Z","2019-08-19T23:09:41Z"
"","2294","Consider reopening issue #2293","## Meta -  I am sorry for opening an other issue, but I have the feeling my other one got closed, because I accidentally published it, while I was writing the content.  Referenced Issue: https://github.com/SeleniumHQ/selenium/issues/2293","closed","","RimacV","2016-06-15T12:07:55Z","2019-08-20T02:09:50Z"
"","2381","Selenium 3: HtmlUnitDriver does not exist (as complete package is not part of jar)","## Meta -  ``` OS:  MAC OSX Selenium Version:  selenium 3.0 jar ``` ## Expected Behaviour -  as backward compatibility should have htmlunitdriver as part of this package ""org.openqa.selenium.htmlunit.HtmlUnitDriver"" ## Actual Behaviour -  throws error: package org.openqa.selenium.htmlunit does not exist ## Steps to reproduce -  ``` /Users/pooja/workspace/Robo/src/main/java/com/moe/webDriverHelper/UiUtilities.java:40: error: package org.openqa.selenium.htmlunit does not exist import org.openqa.selenium.htmlunit.HtmlUnitDriver;                                    ^ ```  ![image](https://cloud.githubusercontent.com/assets/6470509/16355682/cd41b59c-3adb-11e6-84ea-feb1f4bee911.png) As its not found in the jar given at - https://github.com/bugbash/selenium3 ![image](https://cloud.githubusercontent.com/assets/6470509/16355685/e72b6232-3adb-11e6-9a5e-b5cae9cb295a.png)","closed","","p00j4","2016-06-25T14:39:51Z","2019-08-19T01:09:57Z"
"","2695","Python, WebDriver, Firefox: option.click() call within Select(webelement).select_by_value(value) method does NOT do anything","## Meta -  **OS:**  Windows 10 **Selenium Version:**  3.0.0b2 _(Note: I don't recall exactly the previous version number, but with 2.53 or whatever it was before the Selenium 3 beta release started, this bug did NOT occur for me, everything worked great.)_  **Browser:**  Firefox **Browser Version:**  I've tried two versions, both resulting in same behavior: 46.0.1 and 48.0.2 ## Expected Behavior -  The option contained within a select element with value = X should be selected on the screen when the method Select(webelement).select_by_value(X) is executed. ## Actual Behavior -  No selection occurs.  When debugging, I found that the click() that is called in the following private method that is defined in Selenium's Select Class doesn't actually select anything from the select element. No exceptions occur, the code just keeps going on assuming that the click() worked.  ``` def _setSelected(self, option):         if not option.is_selected():             option.click() ``` ## Steps to reproduce -  Use the following HTML to try and select the ""Demo Site"" option with value='79'  ```  Select one... Demo Site  ```  Here's my wrapper for the Select method written in Python:  ``` python from Selenium.browser import Browser from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait as Wait from selenium.webdriver.support.select import Select from enum import Enum  def select(self, element, how='value', value=None):         """"""Wrapper around Selenium Select class members.          Selects an item from a dropDownList          Parameters:             element -- the dropDownList element to select from: type = WebElement             how -- the HTML attribute used to identify the desired item in the dropDownList, can be 'value' or 'index'                    (default='value'): type = str             value -- the value of the HTML attribute used to identify the desired item in the dropDownList: type = str         """"""         if how == 'value':             Select(element).select_by_value(value)         elif how == 'index':             Select(element).select_by_index(value)         else:             print(""The value supplied for 'how' to select from a dropDownList is incorrect."") ```","closed","","arosszay","2016-08-31T16:44:49Z","2016-09-01T15:42:43Z"
"","2672","GeckoDriver NOT found on path by Selenium even though it is on the path","## Meta -  **OS:**  Windows 10  **Selenium Version:**  3.0.0b2 (python bindings)  **Selenium Standalone Server Version:** selenium-server-standalone-3.0.0-beta2.jar  **Python Version:** 3.5.1  **Browser:**  Ha, I feel like I've installed them all, not sure what else I can do. Here's the list that I installed and the order in which I installed: - Firefox - Firefox Dev Edition - Firefox Beta  **Browser Version:** Firefox = After installing Firefox Beta, the version number of this browser is no longer available (not sure why this browser disappeared). The version that was present immediately prior to the Firefox Beta install = 46.0.1  Firefox Beta = 49.0b6  Firefox Dev Edition = 50.0a2 (2016-08-24) ## Expected Behavior -  After hitting run or debug in my Automation project in my PyCharm IDE, my tests should run successfully as they did prior to upgrading Selenium to use capabilities['marionette'] = True.   Firefox should launch, the tests should run, and after the suite is finished, Firefox should close down. ## Actual Behavior -  The following error occurs:  > selenium.common.exceptions.WebDriverException: Message: The path to the driver executable must be set by the webdriver.gecko.driver system property; for more information, see https://github.com/mozilla/geckodriver. The latest version can be downloaded from https://github.com/mozilla/geckodriver/releases ## Steps to reproduce -  I have the following line added to my system path _(I did this through the ""Environment Variable..."" menu from the Windows 10 System Properties menu, which is accessed through Control Panel)_:  > C:\Users\My_User\Downloads\Installs\geckodriver-v0.9.0-win64\wires.exe  Additionally, you can see that in my code below, I have the following line, which, to my novice understanding, should programmatically add the geckodriver to the path _(am I wrong about this?)_:  ``` python os.environ[""webdriver.gecko.driver""] = ""C:\\Users\My_User\Downloads\Installs\geckodriver-v0.9.0-win64\wires.exe"" ```  I tried to run my tests, with the following combinations with no luck: - just the path being added manually via Control Panel - just the path being added programmatically via my Automation framework - the path being added both ways, manually as well as programmatically, at the same time  I read that I needed to rename the file to ""wires.exe"", so am assuming that is still the case. I am confused as to what I'm doing wrong. If nothing, I may have found a legitimate bug. What do you think?  Here's my code that launches the browser:  ``` python     import os     from selenium.webdriver.remote.webdriver import WebDriver     from selenium.webdriver.firefox.firefox_profile import FirefoxProfile     from selenium.webdriver.common.desired_capabilities import DesiredCapabilities      class Browser(metaclass=Singleton):         """"""Encapsulates Selenium functionality regarding the web browser itself. Launching, Quiting, etc.""""""         def __init__(self):             self.driver = Browser.create_browser(self)          def create_browser(self):             """"""Creates and returns a web browser 'driver' object.              This method launches a browser and creates the connections to remotely control it using Selenium.             """"""             os.environ[""webdriver.gecko.driver""] = ""C:\\Users\My_User\Downloads\Installs\geckodriver-v0.9.0-win64\wires.exe""              capabilities = DesiredCapabilities.FIREFOX.copy()             capabilities['platform'] = ""WIN10""             capabilities['marionette'] = True             capabilities['binary'] = ""C:\Program Files (x86)\Firefox Developer Edition\\firefox.exe""              ff_profile_dir = ""C:\\Users\My_User\PycharmProjects\Automation\FirefoxProfile""             ff_profile = FirefoxProfile(profile_directory=ff_profile_dir)              driver = WebDriver(command_executor='http://127.0.0.1:4444/wd/hub',                                desired_capabilities=capabilities,                                browser_profile=ff_profile)              driver.implicitly_wait(30)             return driver ```","closed","","arosszay","2016-08-26T15:37:17Z","2016-10-03T15:48:00Z"
"","2787","Node.js: Testing methods not available in global variable","## Meta - OS:  macOS 10.11.6 - Node.js v6.3.1 - npm v3.10.3 - Selenium Version:  npm published `3.0.0-beta-2`, tested also `2.53.1` - Browser:  Chrome, but did not get that far... ## Expected Behavior  Tests executed as defined in the comments of  https://github.com/SeleniumHQ/selenium/blob/ede98def1f85600ec120536bd1f36f244a331b86/javascript/node/selenium-webdriver/testing/index.js ## Actual Behavior  Tests not executed due to missing property throwing.  ``` exports.describe.skip = global.describe.skip;                                        ^  TypeError: Cannot read property 'skip' of undefined     at Object. (node_modules/selenium-webdriver/testing/index.js:226:40) ``` ## Steps to reproduce -  ``` js const webdriver = require('selenium-webdriver'),   chrome = require('selenium-webdriver/chrome'),   test = require('selenium-webdriver/testing'),   By = webdriver.By,   until = webdriver.until;  const BASE_URL = 'https://paazmaya.fi/';  test.describe('Front Page', function() {   let driver;    test.before(function() {     driver = new chrome.Driver();   });    test.after(function() {     driver.quit();   });    test.it('has proper main description', function() {     driver.get(BASE_URL);     driver.wait(until.elementLocated(By.css('.main-description')), 3000).then(() => {       console.log(driver.findElement(By.css('.main-description')).text);     });   }); }); ```","closed","C-nodejs,","paazmaya","2016-09-16T18:01:17Z","2019-08-19T15:10:02Z"
"","1865","Scrolling down to the page's bottom","## Meta  OS: Windows 8 Selenium Version:  2.21.371459 Browser: Google Chrome Browser Version: 49.0.2623.87 (64-bit)  ## Expected Behavior  actions.keyDown(Keys.CONTROL).sendKeys(Keys.END).keyUp(Keys.CONTROL).perform(); should take me to the page's bottom ## Actual Behavior -  Nothing happens.  First I need to click somewhere to get this result, as for instance : actions.click(numberLabel).keyDown(Keys.CONTROL).sendKeys(Keys.END).keyUp(Keys.CONTROL).perform();  Do you know why it works in this way ?","closed","","foxrafi","2016-03-22T16:17:09Z","2019-08-19T08:09:57Z"
"","1927","Firefox WebDriver.get(url) returns before page is loaded","## Meta  OS: Ubuntu 14.04 Selenium Version: 2.53.0 Browser: Firefox Browser Version: 45.0 (also 44 and 43) ## Expected Behavior  Given Python script with two consecutive calls to `WebDriver.get(url)`, Firefox should open first url, fully load webpage, then open another page, and wait for it to load.  ## Actual Behavior  Firefox closes after loading the first page. More precisely, second call to `WebDriver.get(url)` returns almost immediately and doesn't wait for page to fully load. ## Steps to reproduce  It is actually a bit of a heisenbug, but i was able to reproduce it more or less reliably with the following python script:  ``` python from selenium import webdriver  driver=webdriver.Firefox() driver.get('https://youtube.com/') driver.get('https://github.com/') driver.quit() ``` ## Possible workarounds  ``` python from contextlib import contextmanager from selenium import webdriver from selenium.common.exceptions import WebDriverException from selenium.webdriver.support.ui import WebDriverWait  @contextmanager def wait_for_page_load(driver, timeout=30.0):     source = driver.page_source     yield     WebDriverWait(driver, timeout, ignored_exceptions=(WebDriverException,)).until(lambda d: source != d.page_source)  driver=webdriver.Firefox() with wait_for_page_load(driver):     driver.get('https://youtube.com/') with wait_for_page_load(driver):     driver.get('https://github.com/') driver.quit() ```","closed","D-firefox,","dimp-gh","2016-04-06T12:55:51Z","2019-08-14T14:09:52Z"
"","2349","[NodeJS] adding experimental chrome options","## Meta  OS: OSX 10.11.4 Selenium Version:  latest NodeJS selenium-webdriver/chrome Browser: Chrome  I saw here: https://github.com/seleniumhq/selenium/issues/1501 that notifications are in the feature request list, so I wanted to deactivate the notification feature in chrome using the chrome experimental options in NodeJS. Nevertheless it does show the notification. Perhaps this feature isn't supported atm. ## Expected Behavior  does not show notifications ## Actual Behavior  does show the notifications  I've tried the following:  ``` javascript var options = new chrome.Options(); options.addArguments(""profile.default_content_setting_values.notifications"", ""2""); var driver = new webdriver.Builder().withCapabilities(options.toCapabilities()).build(); ```  The following code works in Java.  ``` java Map prefs = new HashMap(); prefs.put(""profile.default_content_setting_values.notifications"", 2); ChromeOptions options = new ChromeOptions(); options.setExperimentalOption(""prefs"", prefs); WebDriver driver = new ChromeDriver(options); ```","closed","","ghost","2016-06-23T23:31:44Z","2021-09-05T10:20:39Z"
"","1818","Modal Alerts from Wordpress throws error : Unexpected modal dialog","## Meta  OS: OSX 10.11.3 / Ubuntu 15.10 Selenium Webdrive Module Version: 2.52.0 Testing framework : Codeception Browser: Firefox Firefox Browser Version: 45.0/44.0.2 ## Expected Behavior  When a modal alert appears during the acceptance test, when the step ends it throws this error  `[Facebook\WebDriver\Exception\UnexpectedAlertOpenException] Unexpected modal dialog .... (the message of the modal alert`  I have added in the configuration :   > unexpectedAlertBehaviour:'accept' > unexpectedAlertBehaviour:'dismiss'  with no luck.  ## Actual Behavior  Accept the modal alert and continue the tests normally ## Steps to reproduce  (I am writing to you general steps - no codeception steps. The problem appears when run the last step. It is happening everywhere in wordrpess there is a modal alert) - Login to wordpress backend - Go to Posts > Add new - Fill the Title - Leave the page   (Boom) ## Error Log  This a typical error log with the specific error  `[Selenium client Logs]  INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [find child elements: 6 [[FirefoxDriver: firefox on  -> id: dropdown_shop_order_language], By.xpath: .//option[normalize-space(.) = ""tost""]] INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [is selected: 7 [[[[FirefoxDriver: firefox on  -> id: dropdown_shop_order_language]] -> xpath: .//option[normalize-space(.) = ""tost""]]]) INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [is selected: 7 [[[[FirefoxDriver: firefox on   -> id: dropdown_shop_order_language]] -> xpath: .//option[normalize-space(.) = ""tost""]]] INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [click: 7 [[[[FirefoxDriver: firefox on   -> id: dropdown_shop_order_language]] -> xpath: .//option[normalize-space(.) = ""tost""]]]) INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [click: 7 [[[[FirefoxDriver: firefox on  -> id: dropdown_shop_order_language]] -> xpath: .//option[normalize-space(.) = ""tost""]]] INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [take screenshot]) WARNING - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Exception thrown WARNING - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Exception: Unexpected modal dialog (text: bla bla bla): bla bla bla Build info: version: '2.52.0', revision: '4c2593c', time: '' System info: host: '', ip: '', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.3', java.version: '1.8.0_51' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=44.0.2, platform=MAC, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 05d1f0ae-6417-2742-abd1-d1769eb553a0 INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [fetching available log types]) INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [fetching available log types] INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [fetching logs for: browser]) INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [fetching logs for: browser] INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [fetching logs for: driver]) INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Done: [fetching logs for: driver] INFO - org.openqa.selenium.remote.server.DriverServlet org.openqa.selenium.remote.server.rest.ResultConfig.handle Executing: [fetching logs for: client])`  I tested it in different operating system(mac os, linux) with the same results. Have you any idea how to handle this?  Thank you in advanced","closed","","andreas-pa","2016-03-16T00:46:05Z","2019-08-20T10:10:02Z"
"","1856","WebElement.click does not work properly with goog.ui.Select","## Meta  OS: Any Selenium Version: 2.48 + (python) Browser: Only firefox Browser Version: 43,44,45  ## Expected Behavior  Menu item should be clicked ## Actual Behavior  Click passes however nothing element remains unselected   Run my script and it will fail in combination of any firefox and selenium 2.48+  However it works in chrome, ie11  Moreover if use selenium 2.47.3 or lower and  firefox it will work   ``` python import unittest import atexit from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By   TEXT = ""Citizen Kane""   class TestGoogSelect(unittest.TestCase):     @classmethod     def setUpClass(cls):         wd = webdriver.Firefox()         atexit.register(wd.quit)         wd.maximize_window()         wd.get(""https://google.github.io/closure-library/""                ""source/closure/goog/demos/select.html"")         cls.wd = wd      def test_001(self):         best_movie_select = self.wd.find_element_by_css_selector(             ""#select1 .goog-menu-button-caption"")         best_movie_select.click()         menu_items = self.wd.find_elements_by_css_selector(                                                 "".goog-menuitem"")         for item in menu_items:             if item.is_displayed() and item.text == TEXT:                 item.click()                 print ""Item clicked""          span = WebDriverWait(                     self.wd, timeout=10).until(                         EC.visibility_of_element_located(                             (By.CSS_SELECTOR, ""#value1"")                         )         )          self.assertIn(TEXT, span.text)   if __name__ == ""__main__"":     unittest.main() ```  PS. I have this problem only during test execution when I try to repro this from python cli it always works","closed","D-firefox,","drobota","2016-03-21T23:22:28Z","2019-08-14T14:09:50Z"
"","2114","TypeKeys types wrong characters when trying to type ""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√§""","## Meta  OS: Android 6.0 Selenium Version:  2.52.0 Appium version: 1.5.1   ## Expected Behavior  The string ""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√§"" should be typed into the text field. ## Actual Behavior  The string ""bl&APYA9gD2APYA9gD2APYA9gD2APYA9gD2APYA9gD2AM-"" is typed into the text field.  It doesn't seem to be an issue with character encoding, as strings like ""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂"" and ""bl√∂√§"" or Japanese characters are typed correctly.  With ""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√§"" however the string ""bl&APYA9gD2APYA9gD2APYA9gD2APYA9gD2APYA9gD2AM-"" is typed into the text field. Variations of the string with two less √∂ or an √Ñ instead of √§ at the end don't work either. The problem only occurs with Android Apps. It works correctly for Android web pages/elements and on iOS (Apps and web elements).  After more testing I found out that it doesn't seem to matter if the last charactr is an √∂ or √§, but the number of characters is relevant.  Working: bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂ (uneven number of √∂) Not working: bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂, bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂ (both with an even number of √∂) ## Steps to reproduce    WebDriver driver = new AndroidDriver(serverUrl, capabilities); WebElement textField = driver.findElement(By.name(""TextFieldName""));  textField.sendKeys(""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂"");  //Correct behaviour textField.sendKeys(""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂"");  //Incorrect behaviour textField.sendKeys(""bl√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂√∂"");  //Incorrect behaviour","closed","","FrankBorland","2016-05-17T15:04:25Z","2019-08-20T06:09:33Z"
"","2315","Chrome driver is not working in Jenkins build for Maven project","## Meta  OS:  Windows 8.1 Selenium Version:  2.53.0 Browser:  Chrome ## Problem  I have very simple script (in Maven project) that is to navigate url: google.com. Script is working fine on Firefox & IE using Jenkins build however it's not working with Chrome driver. However I am able to run same script on Chrome on my local system using Eclipse.  Project code: [https://github.com/viv1ag/gittest.git]  Please let me know if you need any other information to debug the issue. ## Jenkins build log  ![testgithub 8 console jenkins 2016-06-20 11-10-57](https://cloud.githubusercontent.com/assets/878291/16184177/b7b749ec-36d7-11e6-9e92-83cc23f5d5a9.png)","closed","","viv1ag","2016-06-20T05:42:21Z","2019-08-19T10:09:41Z"
"","2102","WebDriverException (Unexpected error. Bad request) occurred during creating a Firefox instance","## Meta  OS:  Windows 7 Selenium Version:  2.53.0 Browser:  Firefox  Browser Version:  46.0 and 46.0.1 ## Expected Behavior  The test should continue without the error. ## Actual Behavior  OpenQA.Selenium.WebDriverException was unhandled by user code   HResult=-2146233088   Message=Unexpected error. Bad request    Source=WebDriver   StackTrace:        at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)        at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)        at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)        at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxBinary binary, FirefoxProfile profile, ICapabilities capabilities, TimeSpan commandTimeout)        at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxBinary binary, FirefoxProfile profile, TimeSpan commandTimeout)        at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxBinary binary, FirefoxProfile profile)        at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxProfile profile)        at DigitalkAcceptanceTests.WebTestBase.OpenBrowser() in d:\projects\DigiTalk\DigitalkAcceptanceTests\Base\WebTestBase.cs:line 200        at DigitalkAcceptanceTests.WebTestBase.TestInitialize() in d:\projects\DigiTalk\DigitalkAcceptanceTests\Base\WebTestBase.cs:line 114 ## Steps to reproduce  1) Update Firefox browser to 46.0 or 46.0.1 (note: 45.0.2 version works fine) 2) Try to create instance of Firefox ## Code  `IWebDriver driver; FirefoxProfile profile = new FirefoxProfile(); profile.SetPreference(""browser.download.dir"", ResourcePath); profile.SetPreference(""browser.download.folderList"", 2); profile.SetPreference(""browser.helperApps.neverAsk.saveToDisk"", ""application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel,        application/octet-stream, text/csv""); driver = new FirefoxDriver(profile);  // there is the exception` ## Screenshot  ![image](https://cloud.githubusercontent.com/assets/16336175/15245871/d5d55970-1911-11e6-8e81-5da4bc712c0a.png)","closed","D-firefox,","pavelilyinsky","2016-05-13T10:58:19Z","2019-08-14T14:09:36Z"
"","2164",".sendKeys() throws ENAMETOOLONG with long strings in FF v46 on OSX","## Meta  OS:  OSX 10.11.5  Selenium Version:  2.53.2    Browser:  Firefox  Browser Version:   v46.0.1 (64-bit) ## Expected Behavior  The string is input into a `textarea` in FF v46 on OSX without any issues. ## Actual Behavior  sendKeys throws `ENAMETOOLONG` if the string is input all at once. It seems as if the textarea in the OSX FF webdriver is being treated like an input of `type=file`.  If individual characters are insert instead when a slash is encountered the following error is thrown:  ``` 1) test file consistency: uploaded and encrypted files should match downloaded and decrypted files   Message:     Failed: Uploading directories is not supported: /   Stack:     TypeError: Uploading directories is not supported: / ``` ## Steps to reproduce    Using node js generate a large string (>2000 chars) `s` and call `.sendKeys(s)` on a `textarea`  This testcase triggers the failure only on my local machine. Our testing infrastructure runs against around 10 different browsers and Firefox on OSX seems to be the only one with the problem.  [Sample testcase](https://github.com/globaleaks/GlobaLeaks/blob/devel/client/tests/end2end/test-receiver-first-login.js#L105-L111)  Issue originally reported here angular/protractor#3245","closed","C-nodejs,","NSkelsey","2016-05-26T07:16:55Z","2019-08-14T12:09:59Z"
"","2279","Setting script timeout on Marionette driver throws Error","## Meta  OS:  OSX Selenium Version:  2.53.2 (NodeJS) Browser:  Firefox  Browser Version:  47 Marionette driver ## Expected Behavior  Setting script timeout should set timeout and not throw an Error. ## Actual Behavior  Setting a script timeout throws a Error. Using Firefoxdriver this works. ## Steps to reproduce   driver.manage().timeouts().setScriptTimeout(10000);  ## Extra  Created an issue for the Geckodriver and they pointed me here and can help out, ping @andreastt","closed","I-defect,","soulgalore","2016-06-14T05:38:00Z","2019-08-20T02:09:52Z"
"","2316","field.clear() doesn't clear the field on React.JS","## Meta  OS:  OSX Selenium Version:  2.53.0, IntelliJ 2016.1.3 Browser:  PhantomJS  Browser Version:  Chrome 51.0.2704.103 (64-bit) ## Expected Behavior  field.clear() to clear the field ## Actual Behavior  field is indeed cleared for 1 sec BUT then undos ## Steps to reproduce  My web app is written in React.JS. Here are 2 gifs.  This shows the test I was trying to run: ![selenium clear bug detail](https://cloud.githubusercontent.com/assets/2140450/16188737/f77e8b66-36ce-11e6-94d7-97023723b784.gif)  This one goes step by step: ![selenium clear bug](https://cloud.githubusercontent.com/assets/2140450/16188738/f77fdd0e-36ce-11e6-9d55-c7750961e7ae.gif)","closed","","dialex","2016-06-20T09:13:11Z","2019-08-19T09:10:03Z"
"","2343","'^', '+', and '|' not escaped in exported regex's","## Meta  OS:  Fedora 23 Selenium Version:  Selenium IDE 2.9.0 Browser:  Firefox 47 ## Expected Behavior -  Exported Java/C#/Ruby/Python test cases should properly escape all special characters in a shell-style glob search patterns--as for verifyText() and similar commands. ## Actual Behavior -  Exported test cases in Java/C#/Ruby/Python do _not_ escape the characters `^`, `+`, or `|` in shell-style glob search patterns. ## Steps to reproduce -  In Selenium IDE, add the following command to a new Test Case:  **Command:** `verifyText` **Target:** `css=p` **Value:** `+|^*`  Now select `File > Export Test Case As...` and choose, for example, `Java / JUnit / WebDriver`.   In the exported file, you will find the line  `assertTrue(driver.findElement(By.cssSelector(""p"")).getText().matches(""^+|^[\\s\\S]*$""));`  which is incorrect and should be  `assertTrue(driver.findElement(By.cssSelector(""p"")).getText().matches(""^\\+\\|\\^[\\s\\S]*$""));`  This same behavior can be observed with any of the export formats, with minor differences for language-specific syntax.  ### Python example  Exporting as `Python 2 / unittest / WebDriver` produces the following line:  `try: self.assertRegexpMatches(driver.find_element_by_css_selector(""p"").text, r""^+|^[\s\S]*$"")`  which should be  `try: self.assertRegexpMatches(driver.find_element_by_css_selector(""p"").text, r""^\+\|\^[\s\S]*$"")`","closed","C-ide,","blaken","2016-06-23T00:21:12Z","2019-08-17T16:10:00Z"
"","2473","WebElement.location throwing KeyError when python RemoteDriver is used to access FireFox 47.0.1 via marionette","## Meta  OS:   Windows7  Selenium Version:   Python 2.53.6  Browser:   FireFox  Browser Version:   47.0.1 ## Expected Behavior -  WebElement.location property should return the location of the element. ## Actual Behavior -  It throws a KeyError ## Steps to reproduce -  1) Create a RemoteDriver for a Firefox 47.0.1 browser, using Python selenium 2.53.6. 2) Navigate to google.com 3) Find the ""Gmail"" link `link = driver.find_element_by_link_text(""Gmail"")` 4) `link.location`  I've chased this into the code, and I believe it's happening in lines 363-372 of selenium/webdriver/remote/webelement.py  In line 367:  `old_loc = self._execute(Command.GET_ELEMENT_RECT)`  old_loc is a reference to a dictionary whose `value` key refers to a dictionary that has a `x` key. However, on line 370:  `new_loc = {""x"": round(old_loc['x']),`  the code tries to access `x` from `old_loc`, rather than `old_loc['value']`.  I think the proper fix is to add a `['value']` to line 367, mirroring the pattern in line 369.  Based on an inspection of the code, it seems similar errors exist in `size` and `rect`.","closed","","aaron-p-lehmann","2016-07-15T18:53:16Z","2019-08-18T06:09:38Z"
"","2146","HtmlUnitDriver PageLoadTimeOut not working","## Meta  OS:   Windows 10 Selenium Version:   2.53.0 ## Expected Behavior  HtmlunitDriver should throw TimeOut exception when using driver.manage().timout().setPageLoadTimeOut() ## Actual Behavior  Application will hang on all time ## Steps to reproduce  This method i tried to use API pageloadtimeout but it not working: HtmlUnitDriver driver = new HtmlUnitDriver(); driver.manage().timeouts().pageLoadTimeout(10,TimeUnit.SECONDS); driver.get("" http://us.24h.com.vn/""); I change to override directly to WebClient in com.gargoylesoftware.htmlunit.WebClient in code below but it still not working: HtmlUnitDriver driver = new HtmlUnitDriver(){         @Override         protected WebClient getWebClient() {               WebClient webClient = super.getWebClient();             webClient.getCache().setMaxSize(0);             webClient.getOptions().setUseInsecureSSL(true); //ignore ssl certificate             webClient.getOptions().setThrowExceptionOnScriptError(false);             webClient.getOptions().setThrowExceptionOnFailingStatusCode(false);             webClient.getOptions().setPrintContentOnFailingStatusCode(false);             webClient.getOptions().setJavaScriptEnabled(false);               webClient.getOptions().setCssEnabled(false);             webClient.setCssErrorHandler(new SilentCssErrorHandler());              webClient.getOptions().setRedirectEnabled(true);               webClient.getOptions().setTimeout(10000);             return webClient;         }     };             driver.get("" http://us.24h.com.vn/"");","closed","","minhhoangvn","2016-05-22T02:45:35Z","2019-08-20T05:09:48Z"
"","2421","IEDriverServer 2.52 and newer fails if simple JavaScript is on the page","## IEDriverServer 2.52 and newer fails on a very simple Javascript code  OS: Windows 7, 8, 10  Selenium Version:  IEDriverServer.exe 2.52.0 and newer Browser:  Internet Explorer 8 and up  Suppose we've got this simple html page  ``` html                –ü—Ä–æ–¥–∞–∂–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ –≤ –æ—Ñ–∏—Å–µ            var Number=""—Ä–ø–æ–ø"";        ```  I use simple WebDriver script (C#):  ``` c# var driver = new InternetExplorerDriver(); driver.Navigate().GoToUrl(); var elements = driver.FindElementsByXPath(""/*""); ```  I expect to get some elements, at least HTML element, but getting zero collection instead. If to enable IEDriverServer.exe logging, the problem comes to the sight:  ``` ps T 2016-07-02 01:31:25:791 Browser.cpp(602) Entering Browser::GetDocumentFromWindow T 2016-07-02 01:31:25:796 Script.cpp(44) Entering Script::Initialize T 2016-07-02 01:31:25:797 Script.cpp(65) Entering Script::AddArgument(std::wstring) T 2016-07-02 01:31:25:797 Script.cpp(100) Entering Script::AddArgument(VARIANT) T 2016-07-02 01:31:25:797 Script.cpp(65) Entering Script::AddArgument(std::wstring) T 2016-07-02 01:31:25:797 Script.cpp(100) Entering Script::AddArgument(VARIANT) T 2016-07-02 01:31:25:797 Script.cpp(164) Entering Script::Execute T 2016-07-02 01:31:25:797 Script.cpp(472) Entering Script::CreateAnonymousFunction D 2016-07-02 01:31:25:821 Script.cpp(244) -2147352319 [Unknown error 0x80020101]: Failed to execute anonymous function, no exception information retrieved W 2016-07-02 01:31:25:822 ElementFinder.cpp(157) A JavaScript error was encountered executing the findElements atom. T 2016-07-02 01:31:26:073 response.cc(63) Entering Response::SetSuccessResponse ```  It seems that the only javascript line breaks the engine:  ``` javascript var Number=""—Ä–ø–æ–ø""; ```  and the point is Number with the capital letter.  I think the fault code is in Script.cpp line 244 and up  ``` c++   int return_code = WD_SUCCESS;   EXCEPINFO exception;   memset(&exception, 0, sizeof exception);   hr = temp_function.pdispVal->Invoke(call_member_id,                                       IID_NULL,                                       LOCALE_USER_DEFAULT,                                       DISPATCH_METHOD,                                       &call_parameters,                                        &result,                                       &exception,                                       0); ```  See also similar issue #1590  ## Workaround  use 2.48 version of IEDriverServer.exe","closed","","skaeff","2016-07-04T08:05:26Z","2019-08-19T23:10:02Z"
"","1811","Selenium fetching wrong system info using os.arch","## Expected Behavior - System.getProperty(""os.arch""); should return the system architecture. ## Actual Behavior -When I use System.getProperty(""os.arch""); I get the JDK architecteure but rather than the os. ## Steps to reproduce - In a project which use Selenium API, try to print the OS architecture of current machine.  e.g System.out.println(System.getProperty(""os.arch"")); This display the bit which JDK architecture use. I have 64 bit Window 7 and 32 bit JDK. The above line of code print the 32 bit.","closed","","hvardhan89","2016-03-15T14:42:58Z","2019-08-20T10:09:52Z"
"","1808","Internet Explorer Driver","## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","RaveeBellur","2016-03-15T05:18:06Z","2019-08-20T11:09:39Z"
"","1807","InternetExplorerDriver","## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","RaveeBellur","2016-03-15T05:17:49Z","2019-08-20T11:09:38Z"
"","1806","123","## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","yr123","2016-03-15T02:22:53Z","2019-08-20T11:09:40Z"
"","1800","actionsequence.js","## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","Timothy007","2016-03-14T11:53:12Z","2019-08-20T11:09:41Z"
"","1799","How to call Node.js BACK-END Api through Selenium Nightwatch.js ?","## Expected Behavior - ## Actual Behavior - ## Steps to reproduce -","closed","","himanshuteotia","2016-03-14T09:51:02Z","2019-08-20T11:09:42Z"
"","1944","Grid node does not register extra servlets","## Expected Behavior -  When I start the grid node using ""-role node -servlets my.test.Servlet"" my test Servlet is registered. ## Actual Behavior -  I try to register extra servlets with Selenium 2.53.0 in role node. This does not work. It works fine for role hub. I had a look to the code and the required registration is missing for role node. ## Steps to reproduce -    Run org.openqa.grid.selenium.GridLauncher with arguments -role node -servlets my.test.Servlet","closed","","Rincewind77","2016-04-08T10:36:32Z","2019-08-20T08:10:04Z"
"","1805","Thousands of ""Error: ConnectFailure"" with SuppressInitialDiagnosticInformation = true (C#)","## Expected Behavior -  No output. ## Actual Behavior -  Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) Error: ConnectFailure (Connection refused) ## Steps to reproduce -  var serv = OpenQA.Selenium.PhantomJS.PhantomJSDriverService.CreateDefaultService(); serv.SuppressInitialDiagnosticInformation = true;  this.Driver = new OpenQA.Selenium.PhantomJS.PhantomJSDriver( serv );","closed","C-dotnet,","alfsb","2016-03-14T19:40:16Z","2019-08-14T05:10:01Z"
"","1809","Feature request to provide a mechanism to enable/disable the compatibility view feature for IE11","## Expected Behavior -  Need an API to change the compatibility view before opening an IE session. Is this feasible? ## Actual Behavior -  One manually configures the compatibility view on Internet Explorer on the nodes. ## Steps to reproduce -  Not applicable.","closed","","squash-merge","2016-03-15T07:00:15Z","2019-08-20T10:10:04Z"
"","1803","Mouse Cursor position is locked when using ""Action...Perform();""","## Expected Behavior -  Mouse Cursor must follow any Mouse input. ## Actual Behavior -  Mouse Cursor is getting locked at a particular position whenever I'm using *\* Action...Perform();** ## Steps to reproduce -  **Win 7** | **IE** Use any Mouse input with *\* Action...Perform();*\* then try to Hover over any other element.","closed","D-IE,","espaciomore","2016-03-14T15:46:18Z","2021-09-05T09:36:35Z"
"","1812","IEDriverServer 2.52.2 throws ""Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.Object]' to type 'OpenQA.Selenium.Proxy'""","## Expected Behavior -  As stated in Changelog, it should resolve the issue of not finding element, in my case IE failed to find elements when it opens a new tab/window in IE11. ## Actual Behavior -  IE is launched but crashes with this exception :    ""Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.Object]' to type 'OpenQA.Selenium.Proxy'."" ## Steps to reproduce -  I have just replaced IEDriverServer to 2.52.2, on hub, test server and node where i is running, if I try it only on local it throes the same error.  Is there something that Im missing? the same code works with previous versions.","closed","","sophiaatif","2016-03-15T16:31:38Z","2019-08-18T12:09:36Z"
"","2155","Element found several seconds after displayed in browser","## Background:  I use selenium to test the quality of experience and performance of websites. On this particular page, there's an asset that I'm looking for that is useful to an end-user--the page may or may not be completely loaded. For some reason, selenium doesn't detect the css selector for several seconds after I can see it on the screen. I assume this is due to javascript bogarting the DOM or something similar. ## Meta -  OS: Windows (by test requirement...) Python 3.5.1 and Ruby 2.1.5p273, OSX 10.9.5 Python 2.7.11  Selenium Version:  2.53.2  Browser:  Firefox 46.0.1, Chrome 50.0.2661.102 m ## Expected Behavior -  The element ID should be found as soon as I can see it visually, or after some small interval (500ms, for example) ## Actual Behavior -  Several seconds pass between the element displayed visually and selenium identifying the element by ID ## Steps to reproduce -  [see gist here](https://gist.github.com/petemyron/bca964bac4a409c806fb6acbb44c8ec9) - download and run this [gist](https://gist.github.com/petemyron/bca964bac4a409c806fb6acbb44c8ec9) - enter your own credentials if you've got 'em!   - Yes, this requires you to have a T-Mobile account...   ``` python #!/usr/bin/python from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  def test_my_tmo_login():     try:          driver = webdriver.Firefox()         wait = WebDriverWait(driver, 15)          driver.get(""https://my.t-mobile.com/"")          elem = driver.find_element_by_id(""username"")         elem.clear()         elem.send_keys(""1234567890\t"")         # time.sleep(2)          elem = driver.find_element_by_id(""password"")         elem.send_keys(""password\n"")          elem = wait.until(EC.element_to_be_clickable((By.ID,'di_balDueAmount')))         print(""found"")      except Exception as e:         print(str(e))      finally:         driver.quit()  if __name__=='__main__':     test_my_tmo_login() ```","closed","D-firefox,","petemyron","2016-05-23T22:32:24Z","2019-08-16T23:09:53Z"
"","1802","Proxy Authentication","## Background  I'm using  `capybara` (2.6.2) to build an `rspec`-extension called [`proxy_rb`](https://github.com/fedux-org/proxy_rb) to do TDD of our HTTP proxy environments. Setting the proxy without any proxy authentication works fine. Authentication against proxies using the `BASIC`-scheme does not work.  This is a followup to https://github.com/SeleniumHQ/selenium-google-code-issue-archive/issues/5209. Hope there's no other issue about this issue. I found none. ## Expected Behavior -  Selenium enters Username + Passwort for Proxy Authentication in Firefox. ## Actual Behavior -  Firefox shows Username + Passwort-Form which is closed after a short time span.","closed","C-nodejs,","ghost","2016-03-14T12:27:38Z","2019-08-14T09:09:58Z"
"","2769","Suggestion: adding optional parameters to find_element() and related methods in Python binding","# AJAX-related problems with find_element()  I have some Python code (which my employer has authorized me to release under the Apache 2.0 license).  By modifying webdriver.py, it is possible to change the behavior of find_element() and related methods _when additional parameters are present_.  The goal is to selectively invoke WebDriverWait() instead of self.execute(Command.FIND_ELEMENT) when the parameters include an optional timeout parameter with a value greater than the default value of 0.  Why would anyone want to do this?  When using a script recorder like Selenium Builder with an AJAX web application, there will be a failed call to find_element() whenever the script is looking for an element that has not loaded yet.    **Example:**  ``` wd = webdriver.Firefox() wd.find_element_by_id(""my-element-id"").click() ```  Fails when the element is not yet in the DOM because it loads dynamically in response to user input  **Workaround #1:**  ``` element = WebDriverWait(wd, timeout ).until( expected_conditions.element_to_be_clickable( ( By.ID, ‚Äúmy-element-id‚Äù ) ) ) element.click() ```  **Workaround #2:**  ``` errCount = 0 while errCount < 5:     try:         wd.find_element_by_id(""my-element-id"").click()         break     except:         time.sleep(5)         errCount += 1         continue ``` # Proposed Solution  Neither of the above-mentioned workarounds is desirable because of the number of times it has to be coded into the script for a typical AJAX web application.  Instead, it would be better to find a quick way to fix broken find_element() calls. **Example:**  ``` wd = webdriver.Firefox() wd.find_element_by_id(""my-element-id"").click() ```  Breaks if we look for the element before the server renders it  ``` wd.find_element_by_id(""my-element-id"",10,‚Äùclickable‚Äù).click() ```  Succeeds because of modifications to webdriver.py; using WebDriverWait with a 10 second time limit for the element to become clickable.  I have code that implements the concept; will attempt to demonstrate in a branch.","closed","","dcavanaugh","2016-09-13T19:27:48Z","2019-08-19T17:09:43Z"
"","2374","Selenium 3:Throwing error when running scripts with protractor-"" Timed out waiting for the WebDriver server""","![error_sel3](https://cloud.githubusercontent.com/assets/20137977/16355282/ec9e90ba-3acf-11e6-9aeb-7307995d7516.jpg) ## Meta -  OS:   Windows 7 Enterprise   Selenium webdriver used:   selenium-server-standalone-latest (3).jar - Shared in the bug bash event  Test Tool - Protractor version: Protractor 2.5.1  Browser:   Google chrome  Steps to Reproduce 1. Place the latest selenium webdriver jar file under the Selenium folder of the protractor. 2. Enter the details in config also. 3. Now try running the Scripts. We are the below error     Timed out waiting for the WebDriver server at http://xx.xx.xx.xx:xxxx/wd/hub","closed","","JeenaGeorge","2016-06-25T06:53:18Z","2019-08-20T00:09:58Z"
"","2420","Does ChromeDriver support React and Angular like PhantomJS?","","closed","","h8rry","2016-07-03T05:22:55Z","2019-08-20T00:09:34Z"
"","2406","Enable use of Firefox profiles with Marionette in Node.js bindings","","closed","C-nodejs,","andreastt","2016-06-29T13:06:20Z","2016-07-23T16:45:37Z"
"","2032","We have problem in stimulating drag and drop functionality in html 5 site","","closed","","sujithsuresh05","2016-04-29T15:54:03Z","2019-08-20T07:09:46Z"
"","1995","proxy","","closed","","smzk","2016-04-21T01:49:07Z","2019-08-20T08:09:38Z"
"","1954","x","","closed","","desktoping","2016-04-10T05:19:25Z","2019-08-20T08:10:00Z"