"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","711","Disable HTTP Public Key Pinning (HPKP) when the webdriver_accept_untr…","…usted_certs capability is set. As of Firefox 39, Firefox ignores certificate overrides if the domain's certificate is pinned.  Fixes #638.","closed","","juangj","2015-06-25T21:39:51Z","2015-06-25T22:33:33Z"
"","712","Fix the atoms tests; ""display: run-in"" apparently is no longer suppor…","…ted in Safari 7.1 and later.","closed","","juangj","2015-06-26T00:20:59Z","2015-06-26T00:26:52Z"
"","667","Init last known mouse position with (-1, -1) instead of (0, 0) to avoid t…","…roubles when moving to (0, 0)  For now if we'll try to move cursor to (0, 0) of body first time, cursor will not be moved because of this check: https://github.com/SeleniumHQ/selenium/blob/master/cpp/iedriver/InputManager.cpp#L500","closed","D-IE,","j0tunn","2015-06-15T20:37:12Z","2015-07-09T14:45:37Z"
"","535","java: Adding a guard for the case of empty sessionId (this case happe…","…ns on the start of marionette connection)","closed","","barancev","2015-05-11T15:44:26Z","2015-05-11T18:50:39Z"
"","645","Fixed issue #644. ErrorHandler now tolerates non-Number lineNumber, a…","…nd also attempts to safely parse a non-Number Object if it receives a non-Number.  If absent or non-numeric it now continues to build the StackTraceElement (instead of aborting that frame) and uses the conventional -1 for lineNumber.  Signed-off-by: Brett Randall javabrett@gmail.com","closed","C-java,","javabrett","2015-06-10T23:29:02Z","2015-06-18T22:22:24Z"
"","608","Fix error reporting when phantomjs doesn't start","You can't pass the exception to `raise` as an argument, you need to to explicitly include it in the string.","closed","C-py,","dsem","2015-06-03T11:16:59Z","2015-06-04T18:59:46Z"
"","592","A input element where type = 'checkbox' is not clickable","Xpath: //div[@class='ngSelectionCell ng-scope']/input[@id='browse_data']  HTML:  ```        ```  Code used with Exception raised :  `````` >>> from selenium import webdriver >>> driver = webdriver.Firefox() >>> element = driver.find_element_by_xpath(""//div[@class='ngSelectionCell ng-scope']/input[@id='browse_data']"") >>> element  >>> element.click  >>> element.click()  Traceback (most recent call last):   File """", line 1, in    File ""C:\Python26\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 65, in click     self._execute(Command.CLICK_ELEMENT)   File ""C:\Python26\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 402, in _execute     return self._parent.execute(command, params)   File ""C:\Python26\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 175, in execute     self.error_handler.check_response(response)   File ""C:\Python26\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 166, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.ElementNotVisibleException: Message: Element is not currently visible and so may not be interacted with Stacktrace:     at fxdriver.preconditions.visible (file:///c:/users/snk/appdata/local/temp/tmp7g9t5w/extensions/fxdriver@googlecode.com/components/command-process or.js:9587)     at DelayedCommand.prototype.checkPreconditions_ (file:///c:/users/snk/appdata/local/temp/tmp7g9t5w/extensions/fxdriver@googlecode.com/components/c ommand-processor.js:12257)     at DelayedCommand.prototype.executeInternal_/h (file:///c:/users/snk/appdata/local/temp/tmp7g9t5w/extensions/fxdriver@googlecode.com/components/co mmand-processor.js:12274)     at DelayedCommand.prototype.executeInternal_ (file:///c:/users/snk/appdata/local/temp/tmp7g9t5w/extensions/fxdriver@googlecode.com/components/comm and-processor.js:12279)     at DelayedCommand.prototype.execute/< (file:///c:/users/snk/appdata/local/temp/tmp7g9t5w/extensions/fxdriver@googlecode.com/components/command-pro cessor.js:12221)``` ``````","closed","","sumanth1308","2015-06-01T10:28:11Z","2019-08-21T11:09:56Z"
"","793","HtmlUnitDriver: fix findElementByXPath()","XmlPage can be used as well to find by XPath","closed","","asashour","2015-07-15T15:06:07Z","2015-07-15T19:13:25Z"
"","337","[WebDriverJS] - driver.wait behavior when timeout = 0 is confusing","With version 2.45.1, the behavior when the timeout is unset for `driver.wait` is confusing. It will wait indefinitely if the condition is a promise, but waits for a time of 0 if the condition is a function:  ``` js var promise = require('selenium-webdriver').promise;  var donePromise = promise.delayed(1000); promise.controlFlow().wait(donePromise); // This waits just fine.  var done = false; setTimeout(function() {   done = true; }, 1000);  promise.controlFlow().wait(function() {   return done; }); // This times out and throws an error. ```  Should a timeout of 0 also cause `wait` to wait indefinitely if the condition is a function?","closed","I-papercut,","juliemr","2015-03-16T19:47:36Z","2019-08-21T15:09:48Z"
"","275","Pass stacktrace and screen to TimeoutException in WebDriverWait","With this patch TimeoutException from WebDriverWait will contain stacktrace and screen from latest exception (if they exist).","closed","","bayandin","2014-10-27T09:07:06Z","2014-11-05T05:55:29Z"
"","224","correct exception handling","With old-style exception handling selenium becomes unusable on python3","closed","","zenjoyneering","2014-05-27T12:03:57Z","2014-06-19T20:33:09Z"
"","744","IEDriver: Some elements require double-click instead of single-click","While working on running our tests on IE driver, I've encountered strange behaviour on part of the latter.   Site: http://pressreader.com Steps to reproduce: 1. Open website with IE driver 2. Click on ""Sign In"" link in the top right corner, create a new user. 3. After you are logged in, try to click on your username in the top right corner.  After a single click there should open a popup menu, but in case of IE driver it actually requires two clicks. Same behaviour is noted with popup menu items and all the items on the top bar (menu, < arrow, pressreader logo).  I've tried turning off native events and turning on requireWindowFocus, but it does not help. Just to be sure, it works in FF/Chrome driver and FF/Chrome/IE browsers.  IEDriver v.2.46.0.0","closed","","littlemju","2015-07-07T22:02:50Z","2019-08-21T08:09:37Z"
"","788","WebDriverJs wiki updates","While I can't edit the wiki (#786), some suggested updates:  At https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs#writing-tests: - Mocha should point to mochajs.org. - `selenium-webdriver/testing module` could link to https://github.com/SeleniumHQ/selenium/tree/master/javascript/webdriver/testing - ""A full example is provided in the selenium-webdriver/example package."" could link to https://github.com/SeleniumHQ/selenium/tree/master/javascript/node/selenium-webdriver/example","closed","","dandv","2015-07-15T10:58:51Z","2019-08-21T07:09:46Z"
"","746","Expertise Request - Networking (Referral Request)","Where is the best place to search for folks that know Selenium? I am currently conducting an extremely strategic search for a Mobile Architect to fill an important role within our company. I would be very appreciative for any referrals you’d be willing share. If there is anything I can help you find please let me know. I am happy to help.   Position Brief - http://bit.ly/VTMobileArchitect Location Chicago, IL   Thank you in advance for the help,   Thomas F.X. Licari  | Director of Recruitment  | Vertical Trail, LLC  | Thomas(ATSIGN)VerticalTrail.com  | VerticalTrail.com","closed","","tlicari","2015-07-08T19:48:03Z","2019-08-21T09:09:49Z"
"","770","Issue in find_element_by_class_name()","When we use the function find_element_by_class_name('xyz') then it returns the value of the tags with class = ""abc xyz"" also. Facing problem because of this issue.","closed","","13aksh","2015-07-12T21:26:19Z","2019-08-21T09:09:36Z"
"","569","PhantomJS Webdriver Race Condition in Port Selection","When using the phantomjs webdriver, it appears that there is a race condition when providing port=0. Selenium uses a socket bind on localhost to choose a free port, and then provides this port to ghostdriver. If a port is already in use when ghostdriver initializes, you receive the following error (uncaught excepting in Ghostdriver, so causes a zombie process):  ``` [ERROR - 2015-05-23T15:07:26.410Z] GhostDriver - main.fail - {""line"":85,""sourceURL"":"":/ghostdriver/main.js"",""stack"":""\tat global code (:/ghostdriver/main.js:85:56)""}    :262 in error ```  You can reproduce this fairly simply by initializing 2 phantomjs instances with the same port.  The issue occurs frequently when using multiprocessing.   ``` #!/usr/bin/env python  from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from multiprocessing import Manager from multiprocessing import Pool import time   def worker(url):     service_args = []     capabilities = DesiredCapabilities.PHANTOMJS     capabilities['phantomjs.page.settings.resourceTimeout'] = 7000     capabilities['phantomjs.page.settings.userName'] = 'none'     capabilities['phantomjs.page.settings.password'] = 'none'     service_args.append('--ignore-ssl-errors=true')     service_args.append('--web-security=no')     service_args.append('--ssl-protocol=any')      driver = webdriver.PhantomJS(             desired_capabilities=capabilities, service_args=service_args, executable_path='/root/phantom')     driver.get(url)     driver.quit()  if __name__ == '__main__':     p = Pool(10)     threads = []     with open('topsites.txt') as f:         lines = f.readlines()     for url in lines:         url = 'http://' + url.strip()         threads.append(p.apply_async(worker,[url]))      p.close()     try:         while not all([r.ready() for r in threads]):             time.sleep(1)     except KeyboardInterrupt:         p.terminate()         p.join() ```  The above code sample (using a fresh compiled version of phantomjs in my testing) will let you reproduce the issue, resulting in the same error thrown when a port is already in use. Modify the phantomjs binary path as necessary.  Every time this happens, the phantomjs process goes defunct, and essentially locks up that thread indefinitely. You can watch this happening using the code sample and  ``` watch -C phantomjs u ```  You can grab topsites.txt from http://pastebin.com/raw.php?i=AFrezqpU","closed","C-py,","rvazarkar","2015-05-26T14:08:11Z","2019-08-16T23:09:56Z"
"","758","""Error communicating with the remote browser"" quitting Chrome","When using the latest selenium-server-2.46.0.jar, chromedriver 2.16 and the latest snapshot of chromium on a Linux Selenium node, I saw one in a series of Java tests fail at the end with a WebDriverException in RemoteWebDriver#quit(),  https://code.google.com/p/chromedriver/issues/detail?id=1144  From reading RemoteWebDriver.java I figured the exception got caught, logged and re-thrown as UnreachableBrowserException.  I understand I could work the issue around by ignoring the exception in my test class method that overrides FluentLenium's FluentTest#quit().  Alternatively, I wonder if it makes sense to ignore the exception directly in RemoteWebDriver#quit(), similarly to #434.","closed","","eelgheez","2015-07-10T03:48:38Z","2019-08-21T03:09:35Z"
"","373","IEDriverServer: no error reported in case of failed javascript execution","When using synthetic events, the command execution of sendKeys command sometimes fails because the javascript could not be executed. Although the failure is detected (see the log excerpt), the response status is set to 0, indicating success.   Therefor org.openqa.selenium.remote.RemoteWebDriver.execute will not throw an exception  ``` text T 2015-03-26 01:00:24:008 server.cc(370) Entering Server::SendResponseToClient T 2015-03-26 01:00:24:008 response.cc(33) Entering Response::Deserialize T 2015-03-26 01:00:24:008 server.cc(424) Entering Server::SendHttpOk T 2015-03-26 01:00:24:008 server.cc(136) Entering Server::ProcessRequest T 2015-03-26 01:00:24:008 server.cc(200) Entering Server::ReadRequestBody T 2015-03-26 01:00:24:008 server.cc(145) Process request with: URI: /session/f79dbb70-5180-4eaf-90f3-ad1c3c87ad6e/element/0dfbc107-e8a5-420a-87f8-42fc821d23a0/value HTTP verb: POST body: {""id"":""0dfbc107-e8a5-420a-87f8-42fc821d23a0"",""value"":[""""]} T 2015-03-26 01:00:24:008 server.cc(234) Entering Server::DispatchCommand T 2015-03-26 01:00:24:008 server.cc(541) Entering Server::LookupCommand D 2015-03-26 01:00:24:008 server.cc(243) Command: POST /session/f79dbb70-5180-4eaf-90f3-ad1c3c87ad6e/element/0dfbc107-e8a5-420a-87f8-42fc821d23a0/value {""id"":""0dfbc107-e8a5-420a-87f8-42fc821d23a0"",""value"":[""""]} T 2015-03-26 01:00:24:008 server.cc(357) Entering Server::LookupSession T 2015-03-26 01:00:24:008 IESession.cpp(212) Entering IESession::ExecuteCommand T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(158) Entering IECommandExecutor::OnSetCommand T 2015-03-26 01:00:24:008 command.cc(28) Entering Command::Deserialize D 2015-03-26 01:00:24:008 command.cc(33) Raw JSON command: { ""name"" : ""sendKeys"", ""locator"" : { ""sessionid"" : ""f79dbb70-5180-4eaf-90f3-ad1c3c87ad6e"", ""id"" : ""0dfbc107-e8a5-420a-87f8-42fc821d23a0"" }, ""parameters"" : {""id"":""0dfbc107-e8a5-420a-87f8-42fc821d23a0"",""value"":[""""]} } T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(169) Entering IECommandExecutor::OnExecCommand T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(470) Entering IECommandExecutor::DispatchCommand T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(586) Entering IECommandExecutor::GetCurrentBrowser T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(592) Entering IECommandExecutor::GetManagedBrowser T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(542) Entering IECommandExecutor::IsAlertActive T 2015-03-26 01:00:24:008 Browser.cpp(679) Entering Browser::GetActiveDialogWindowHandle T 2015-03-26 01:00:24:008 Browser.cpp(192) Entering Browser::GetContentWindowHandle D 2015-03-26 01:00:24:008 IECommandExecutor.cpp(556) No alert handle is found T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(586) Entering IECommandExecutor::GetCurrentBrowser T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(592) Entering IECommandExecutor::GetManagedBrowser T 2015-03-26 01:00:24:008 Browser.cpp(192) Entering Browser::GetContentWindowHandle T 2015-03-26 01:00:24:008 Browser.cpp(402) Entering Browser::GetTopLevelWindowHandle T 2015-03-26 01:00:24:008 IESession.cpp(233) Beginning wait for response length to be not zero T 2015-03-26 01:00:24:008 IECommandHandler.cpp(37) Entering IECommandHandler::GetElement T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(679) Entering IECommandExecutor::GetManagedElement T 2015-03-26 01:00:24:008 ElementRepository.cpp(28) Entering ElementRepository::GetManagedElement T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(586) Entering IECommandExecutor::GetCurrentBrowser T 2015-03-26 01:00:24:008 IECommandExecutor.cpp(592) Entering IECommandExecutor::GetManagedBrowser T 2015-03-26 01:00:24:008 Browser.cpp(112) Entering Browser::GetDocument I 2015-03-26 01:00:24:008 Browser.cpp(116) No child frame focus. Focus is on top-level frame T 2015-03-26 01:00:24:018 Browser.cpp(579) Entering Browser::GetDocumentFromWindow T 2015-03-26 01:00:24:018 Element.cpp(81) Entering Element::IsDisplayed T 2015-03-26 01:00:24:018 Element.cpp(896) Entering Element::GetContainingDocument T 2015-03-26 01:00:24:018 Script.cpp(41) Entering Script::Initialize T 2015-03-26 01:00:24:018 Script.cpp(91) Entering Script::AddArgument(IHTMLElement*) T 2015-03-26 01:00:24:018 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:018 Script.cpp(80) Entering Script::AddArgument(bool) T 2015-03-26 01:00:24:018 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:018 Script.cpp(161) Entering Script::Execute T 2015-03-26 01:00:24:018 Script.cpp(469) Entering Script::CreateAnonymousFunction T 2015-03-26 01:00:24:038 Element.cpp(125) Entering Element::IsEnabled T 2015-03-26 01:00:24:038 Element.cpp(896) Entering Element::GetContainingDocument T 2015-03-26 01:00:24:038 Script.cpp(41) Entering Script::Initialize T 2015-03-26 01:00:24:038 Script.cpp(91) Entering Script::AddArgument(IHTMLElement*) T 2015-03-26 01:00:24:038 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:038 Script.cpp(161) Entering Script::Execute T 2015-03-26 01:00:24:038 Script.cpp(469) Entering Script::CreateAnonymousFunction T 2015-03-26 01:00:24:048 Element.cpp(302) Entering Element::GetLocationOnceScrolledIntoView T 2015-03-26 01:00:24:048 Element.cpp(433) Entering Element::GetLocation T 2015-03-26 01:00:24:048 Element.cpp(569) Entering Element::IsInline D 2015-03-26 01:00:24:048 Element.cpp(479) Element is a block element, using IHTMLElement2::getBoundingClientRect T 2015-03-26 01:00:24:058 Element.cpp(590) Entering Element::RectHasNonZeroDimensions T 2015-03-26 01:00:24:058 Element.cpp(606) Entering Element::GetFrameDetails T 2015-03-26 01:00:24:058 Element.cpp(896) Entering Element::GetContainingDocument D 2015-03-26 01:00:24:068 Element.cpp(556) Element is not in a frame T 2015-03-26 01:00:24:068 Element.cpp(845) Entering Element::CalculateClickPoint T 2015-03-26 01:00:24:068 Element.cpp(784) Entering Element::GetClickableViewPortLocation T 2015-03-26 01:00:24:068 Element.cpp(896) Entering Element::GetContainingDocument T 2015-03-26 01:00:24:068 DocumentHost.cpp(401) Entering DocumentHost::GetDocumentMode T 2015-03-26 01:00:24:068 Element.cpp(871) Entering Element::IsLocationInViewPort T 2015-03-26 01:00:24:068 Element.cpp(784) Entering Element::GetClickableViewPortLocation T 2015-03-26 01:00:24:068 Element.cpp(896) Entering Element::GetContainingDocument T 2015-03-26 01:00:24:068 DocumentHost.cpp(401) Entering DocumentHost::GetDocumentMode T 2015-03-26 01:00:24:078 Element.cpp(369) Entering Element::IsHiddenByOverflow T 2015-03-26 01:00:24:078 Element.cpp(896) Entering Element::GetContainingDocument T 2015-03-26 01:00:24:078 Script.cpp(41) Entering Script::Initialize T 2015-03-26 01:00:24:078 Script.cpp(91) Entering Script::AddArgument(IHTMLElement*) T 2015-03-26 01:00:24:078 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:078 Script.cpp(161) Entering Script::Execute T 2015-03-26 01:00:24:078 Script.cpp(469) Entering Script::CreateAnonymousFunction T 2015-03-26 01:00:24:098 Script.cpp(425) Entering Script::ConvertResultToString D 2015-03-26 01:00:24:098 Script.cpp(436) Result type is string D 2015-03-26 01:00:24:098 Element.cpp(348) (x, y, w, h): 159, 228, 398, 20 T 2015-03-26 01:00:24:108 InputManager.cpp(62) Entering InputManager::PerformInputSequence D 2015-03-26 01:00:24:108 InputManager.cpp(83) Mutex acquired for user interaction. T 2015-03-26 01:00:24:108 InputManager.cpp(235) Entering InputManager::SetFocusToBrowser T 2015-03-26 01:00:24:108 Browser.cpp(192) Entering Browser::GetContentWindowHandle T 2015-03-26 01:00:24:108 Browser.cpp(402) Entering Browser::GetTopLevelWindowHandle T 2015-03-26 01:00:24:108 Browser.cpp(402) Entering Browser::GetTopLevelWindowHandle T 2015-03-26 01:00:24:108 InputManager.cpp(551) Entering InputManager::SendKeystrokes D 2015-03-26 01:00:24:108 InputManager.cpp(577) Using synthetic events for sending keys T 2015-03-26 01:00:24:108 Browser.cpp(112) Entering Browser::GetDocument I 2015-03-26 01:00:24:108 Browser.cpp(116) No child frame focus. Focus is on top-level frame T 2015-03-26 01:00:24:128 Browser.cpp(579) Entering Browser::GetDocumentFromWindow T 2015-03-26 01:00:24:128 Script.cpp(41) Entering Script::Initialize T 2015-03-26 01:00:24:128 Script.cpp(104) Entering Script::AddNullArgument T 2015-03-26 01:00:24:128 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:128 Script.cpp(62) Entering Script::AddArgument(std::wstring) T 2015-03-26 01:00:24:128 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:128 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:128 Script.cpp(80) Entering Script::AddArgument(bool) T 2015-03-26 01:00:24:128 Script.cpp(97) Entering Script::AddArgument(VARIANT) T 2015-03-26 01:00:24:128 Script.cpp(161) Entering Script::Execute T 2015-03-26 01:00:24:128 Script.cpp(469) Entering Script::CreateAnonymousFunction  **D 2015-03-26 01:00:24:158 Script.cpp(241) -2147352319 [Unknown error 0x80020101]: Failed to execute anonymous function, no exception information retrieved W 2015-03-26 01:00:24:158 InputManager.cpp(598) Unable to execute js to send keystrokes** T 2015-03-26 01:00:24:158 response.cc(60) Entering Response::SetSuccessResponse T 2015-03-26 01:00:24:158 response.cc(66) Entering Response::SetResponse T 2015-03-26 01:00:24:158 IECommandExecutor.cpp(586) Entering IECommandExecutor::GetCurrentBrowser T 2015-03-26 01:00:24:158 IECommandExecutor.cpp(592) Entering IECommandExecutor::GetManagedBrowser T 2015-03-26 01:00:24:158 response.cc(48) Entering Response::Serialize T 2015-03-26 01:00:24:158 IESession.cpp(242) Found non-zero response length T 2015-03-26 01:00:24:158 IECommandExecutor.cpp(192) Entering IECommandExecutor::OnGetResponse T 2015-03-26 01:00:24:158 IECommandExecutor.cpp(307) Entering IECommandExecutor::OnIsSessionValid **D 2015-03-26 01:00:24:158 server.cc(317) Response: {""sessionId"":""f79dbb70-5180-4eaf-90f3-ad1c3c87ad6e"",""status"":0,""value"":null}** ```","closed","I-needs investigation,","cmaus","2015-03-26T08:31:59Z","2019-08-21T15:10:01Z"
"","765","Safari 6 takes screenshots only of the initial viewport","When using selenium 2.46 with Safari 6 on OS X 10.8, I get screenshots that do not correspond to the actual viewport. The following script supposed to take scroll and save screenshots.  And the browser actually scrolls the page, but the resulting screenshots all look like the first one (at scroll: 0, 0)  ``` python driver.get(""http://wetter.com"") for i in range(0, 200, 20):   driver.execute_script(""window.scrollBy(0, "" + str(i) + "");"")   driver.save_screenshot(str(i) + '.png') ```","closed","A-needs new owner,","avietrov","2015-07-10T13:24:23Z","2019-08-20T13:09:43Z"
"","409","Allow ignoring checked exceptions while waiting","When using `FluentWait`, it is possible to ignore specified `RuntimeExceptions`. Checked exceptions can not be used since there is no _predicate_ accepted by `until` methods that allows to throw checked exception from `apply` method. I see several ways to implement that: 1. Introduce new predicate type that permits checked exceptions. 2. Introduce Wrapping `RuntimeExcepiton` predicate implementations will use to propagate checked exceptions. `FluentWait#propagateIfNotIngored` will then unwrap before performing the check. 3. Make `FluentWait#propagateIfNotIngored` protected so subclasses can do 2.  To me, 1. seems preferable.","closed","I-papercut,","olivergondza","2015-04-03T08:06:11Z","2019-08-21T15:09:43Z"
"","22","Implement script execution for SVG documents in Firefox driver","When used with an SVG document the script element must be created slightly different to work correctly.  The first commit is a already in pull request 21. CLA signed","closed","","paroga","2013-03-06T13:48:05Z","2014-06-18T11:02:31Z"
"","143","httplib import error on python3","When trying to use the latest 2.38.1 selenium with python3 I got some errors which I figured out where inadvertently removed, some clean-up was suggested by PyCharm (IDE). I have signed the CLA - httplib import error on python3 - formatting/pep-8 fixes","closed","","vergiliu","2013-12-07T00:52:17Z","2013-12-09T17:56:11Z"
"","507","In SafariDriver's page script, copy window properties to goog.global.","When the page script is injected, it's called with an empty 'this' object to avoid polluting the global namespace of the page under test. However, some Closure libraries look for properties on goog.global and fall back to worse or slower versions if those properties are absent.  The specific motivating case is that if goog.async.nextTick can't find goog.global.MessageChannel, it will fall back to a method that injects an invisible iframe into the DOM. The page script's use of nextTick would cause it to create an iframe in the DOM of the page under test, which we'd like to avoid.","closed","","juangj","2015-04-30T05:42:55Z","2015-05-17T05:30:27Z"
"","21","Add Utils.getMainDocumentElement for Firefox driver","When the document is SVG instead of HTML the eventlistener for the unload event needs to be added to documentElement instead of body. This new function returns the corresponding element.  CLA signed","closed","","paroga","2013-03-06T13:38:06Z","2013-03-11T16:57:57Z"
"","449","Reuse SocketLock to fix Chrome port race condition","When the Chrome browser boots up via the Ruby library, it attempts to find a free port and launch the bridge on that port. However, it's possible that, if you're running tests in parallel, two bridges will try to bind to the same port at the same time. This will cause a very ambiguous ""end of file"" error as documented [here](https://github.com/grosser/parallel_tests/issues/322).  This patch is based on one initially proposed in the original [bug report](https://code.google.com/p/selenium/issues/detail?id=8241). However, it goes a step further, taking the technical comments into account, and generalizing the `SocketLock` class used in the Firefox launcher to assist.","closed","C-rb,","diurnalist","2015-04-13T15:34:14Z","2015-07-28T04:37:42Z"
"","313","Additional Element Locator Information in Exception Messages","When Selenium is unable to interact with an element, as is the case when an element is missing, this change will output exactly how Selenium is attempting to locate the element, such as the XPath or id of the element. This greatly speeds up troubleshooting issues as the exception message clearly states what element is broken/missing for common problems like an ElementNotFoundException.","closed","","HPRichard","2015-02-05T00:14:11Z","2015-02-26T17:26:42Z"
"","423","RHEL 5 cannot load Firefox libwebdriver shared object","When Selenium is run with FirefoxDriver on Red Hat Enterprise Linux (RHEL) or Oracle Enterprise Linux (OEL) 5, it fails to start, despite the version of Firefox being supported by Selenium. The reason is that the prebuilt libwebdriver-firefox-*.so shared objects were built on a system using a newer glibc/GCC than RHEL5 supports.  The prebuilts should be built on a system with the minimum versions of glibc/GCC that the Selenium project is willing to support. If you're unwilling to do this, then *at least document what the required minimum versions of glibc/GCC are; collect them and update the documentation every time the prebuilts are built and committed again.  Here's a test case:  ``` public class test {     public static void main(String args[]) {         new org.openqa.selenium.firefox.FirefoxDriver();     } } ```  When run with:  Selenium version: 2.44.0 OS: RHEL 5 / OEL 5 (glibc version 2.5, libstdc++ 4.1.2) Browser: Firefox 31.2.0  it  gives the following error:  ``` Exception in thread ""main"" org.openqa.selenium.UnsupportedCommandException: Bad request Command duration or timeout: 861 milliseconds Build info: version: '2.44.0', revision: '76d78cf', time: '2014-10-23 20:03:00' System info: host: '....', ip: '....', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.39-400.214.3.el5uek', java.version: '1.7.0_55'  Driver info: org.openqa.selenium.firefox.FirefoxDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:126)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:193)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:182)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:95)     at test.main(test.java:3) ```  Firefox launches. The WebDriver extension is present. However, this is what's in the browser log:  ``` {""level"":""WARNING"",""message"":""mutating the [[Prototype]] of an object will cause your code to run very slowly; instead create the object with the correct initial [[Prototype]] value using Object.create"",""timestamp"":1414767273195,""type"":""""} {""level"":""INFO"",""message"":""1414767272125\taddons.manager\tDEBUG\tLoaded provider scope for resource://gre/modules/addons/XPIProvider.jsm: [\""XPIProvider\""]\n"",""timestamp"":1414767273196,""type"":""""} {""level"":""INFO"",""message"":""1414767272127\taddons.manager\tDEBUG\tLoaded provider scope for resource://gre/modules/LightweightThemeManager.jsm: [\""LightweightThemeManager\""]\n"",""timestamp"":1414767273196,""type"":""""} {""level"":""INFO"",""message"":""1414767272128\taddons.xpi\tDEBUG\tstartup\n"",""timestamp"":1414767273196,""type"":""""} {""level"":""INFO"",""message"":""1414767272130\taddons.xpi\tDEBUG\tIgnoring file entry whose name is not a valid add-on ID: /tmp/anonymous8077704191763073687webdriver-profile/extensions/webdriver-staging\n"",""timestamp"":1414767273196,""type"":""""} {""level"":""INFO"",""message"":""1414767272144\taddons.xpi\tDEBUG\tcheckForChanges\n"",""timestamp"":1414767273196,""type"":""""} {""level"":""INFO"",""message"":""1414767272148\taddons.xpi\tDEBUG\tNo changes found\n"",""timestamp"":1414767273197,""type"":""""} {""level"":""WARNING"",""message"":""Trying to re-register CID '{e26dbdcd-d3ba-4ded-88c3-6cb07ee3e9e0}' already registered by file:///tmp/anonymous8077704191763073687webdriver-profile/extensions/fxdriver@googlecode.com/components/prompt-service.js."",""timestamp"":1414767273197,""type"":""""} {""level"":""INFO"",""message"":""Failed to load native module at path '/tmp/anonymous8077704191763073687webdriver-profile/extensions/fxdriver@googlecode.com/platform/Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so': (80004005) /tmp/anonymous8077704191763073687webdriver-profile/extensions/fxdriver@googlecode.com/platform/Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so: ELF file OS ABI invalid\n"",""timestamp"":1414767273197,""type"":""""} {""level"":""INFO"",""message"":""Could not read chrome manifest 'file:///usr/lib64/firefox/browser/extensions/%7B972ce4c6-7e08-4474-a285-3208198ce6fd%7D/chrome.manifest'.\n"",""timestamp"":1414767273197,""type"":""""} {""level"":""INFO"",""message"":""Warning: unrecognized command line flag -foreground\n"",""timestamp"":1414767273197,""type"":""""} ```  The driver log for completeness:  ``` {""level"":""INFO"",""message"":""[fxdriver.badCertListener] Found preference for webdriver_assume_untrusted_issuer: true"",""timestamp"":1414767273217,""type"":""""} {""level"":""INFO"",""message"":""[fxdriver.badCertListener] Found preference for webdriver_accept_untrusted_certs: true"",""timestamp"":1414767273217,""type"":""""} {""level"":""INFO"",""message"":""[fxdriver.WdCertOverrideService] Accept untrusted certificates: true"",""timestamp"":1414767273218,""type"":""""} {""level"":""INFO"",""message"":""[fxdriver.WebDriverServer] Using native events: false"",""timestamp"":1414767273303,""type"":""""} {""level"":""INFO"",""message"":""[fxdriver.Utils] Loading: resource://fxdriver/evaluate.js"",""timestamp"":1414767273303,""type"":""""} {""level"":""INFO"",""message"":""[fxdriver.Utils] Done reading: resource://fxdriver/evaluate.js"",""timestamp"":1414767273304,""type"":""""} ```  The key issue is failure to load the native code:  ``` Failed to load native module at path '/.../libwebdriver-firefox-esr-latest.so': (80004005) /.../libwebdriver-firefox-esr-latest.so: ELF file OS ABI invalid ```  Because the WebDriver extension in Firefox can't load its native code, it reports 400 Bad Request back to the Java code.  For reasons best known to itself, glibc 2.5 on Linux cannot load a shared object if its OS/ABI field is ""Linux"".  ``` $ readelf -h libwebdriver-firefox-esr-latest.so  ELF Header:   Magic:   7f 45 4c 46 02 01 01 03 00 00 00 00 00 00 00 00    Class:                             ELF64   Data:                              2's complement, little endian   Version:                           1 (current)   OS/ABI:                            UNIX - Linux ... ```  Another test program:  ``` /* try-loading-so.c */ #include  int main(int argc, char*argv[]) {   if (!dlopen(argv[1], RTLD_LAZY)) {     puts(dlerror());   } }  $ ./try-loading-so ./libwebdriver-firefox-esr-latest.so ./libwebdriver-firefox-esr-latest.so: ELF file OS ABI invalid ```  If we change this to ""none"" (aka SysV), this gets past the first hurdle, and leaves us with another:  ``` $ elfedit --output-osabi none libwebdriver-firefox-esr-latest.so  $ readelf -h libwebdriver-firefox-esr-latest.so  ELF Header:   Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00    Class:                             ELF64   Data:                              2's complement, little endian   Version:                           1 (current)   OS/ABI:                            UNIX - System V ...  $ ./try-loading-so ./libwebdriver-firefox-esr-latest.so  /usr/lib64/libstdc++.so.6: version `GLIBCXX_3.4.15' not found (required by ./libwebdriver-firefox-esr-latest.so) ```  So the object uses symbols from libstdc++ that only exists in GLIBCXX_3.4.15 (aka libstdc++.so 6.0.15 aka GCC 4.6)  The standard libstc++ on RHEL 5.11 only goes up to GLIBCXX_3.4.8 (aka libstdc++.so.6.0.8 aka GCC 4.1.2)  I looked at the past releases to see how long this has been going on for. Surprisingly, it varies, both per-release and per-file.  ``` selenium 2.31.0: max version used Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so       GLIBCXX_3.4.5 Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-previous.so     GLIBCXX_3.4.5 Linux_x86_64-gcc3/components/libwebdriver-firefox-latest.so           GLIBCXX_3.4.5 Linux_x86_64-gcc3/components/libwebdriver-firefox-previous.so         GLIBCXX_3.4.5 ```  no data for selenium 2.32.0 to 2.34.0, can't find the download any more  ``` selenium 2.35.0: max version used Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so       GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-previous.so     GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-latest.so           GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-previous.so         GLIBCXX_3.4.15  selenium 2.36.0: max version used Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so       GLIBCXX_3.4.5 Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-previous.so     GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-latest.so           GLIBCXX_3.4.5 Linux_x86_64-gcc3/components/libwebdriver-firefox-previous.so         GLIBCXX_3.4.15  selenium 2.37.0: max version used Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so       GLIBCXX_3.4.5 Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-previous.so     GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-latest.so           GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-previous.so         GLIBCXX_3.4.15  selenium 2.38.0 to 2.44.0: max version used Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-latest.so       GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-esr-previous.so     GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-latest.so           GLIBCXX_3.4.15 Linux_x86_64-gcc3/components/libwebdriver-firefox-previous.so         GLIBCXX_3.4.15 ```  I suspect this is simply the choice of compiler on the box that builds Selenium. I'm looking into compiling and building the libwebdriver components myself, to see if there's any code-based reason to mandate running on a system based on GCC 4.6 and higher.  As GCC 4.1.2 can compile Firefox 31.2 itself, surely there can't really be a reason why the GCC 4.6 runtime is needed to run an extension for it.  I don't know what the solution is, but even if you don't want to build Selenium on an old machine, GCC flags like `-fabi-version` may help.  [This SO answer](http://stackoverflow.com/questions/8842194/how-to-avoid-stt-gnu-ifunc-symbols-in-your-binary), which covers that the reason for OSABI ""linux"" is due to the compiled output including STT_GNU_IFUNC symbols, suggests that the simplest way to make widely compatible binaries is to statically compile them, so there isn't any dependency on libstdc++ at all.","closed","D-firefox,","kyz","2015-04-07T13:33:11Z","2019-08-21T01:09:37Z"
"","755","Suspicious network activity","When running selenium on arch linux I see a lot of network activity, and it looks like selenium is connecting to gambling and other websites. Any idea what is going on here? How concerned should I be?  ``` Picked up _JAVA_OPTIONS: -Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel 13:13:36.882 INFO - Launching a standalone Selenium Server 13:13:36.925 INFO - Java: Oracle Corporation 24.79-b02 13:13:36.926 INFO - OS: Linux 4.0.7-2-ARCH amd64 13:13:36.944 INFO - v2.46.0, with Core v2.46.0. Built from revision 87c69e2 13:13:37.034 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match the current platform LINUX 13:13:37.034 INFO - Driver class not found: com.opera.core.systems.OperaDriver 13:13:37.034 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered 13:13:37.128 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub 13:13:37.128 INFO - Selenium Server is up and running jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport 13:13:53.002 WARN - CONNECT passport.yandex.ru:443 HTTP/1.1 HttpException(400,Bad Request,null) jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport 13:13:54.764 WARN - GET https://wap.unibet.com/live_event_wap.t?id=1002741220&ts=1436462033802 HTTP/1.1 java.lang.IllegalArgumentException: Malformed URI 'https://wap.unibet.com:443https://wap.unibet.com/live_event_wap.t?id=1002741220&ts=1436462033802' : java.lang.NumberFormatException: 443https:         at org.openqa.jetty.util.URI.setURI(URI.java:247)         at org.openqa.jetty.util.URI.(URI.java:86)         at org.openqa.selenium.server.ProxyHandler$SslRelay.customizeRequest(ProxyHandler.java:769)         at org.openqa.jetty.http.SocketListener.customizeRequest(SocketListener.java:275)         at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:922)         at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)         at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)         at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)         at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport 13:14:15.143 WARN - GET https://m.tipico.com/ajax/sports/event/136425910 HTTP/1.1 java.lang.IllegalArgumentException: Malformed URI 'https://m.tipico.com:443https://m.tipico.com/ajax/sports/event/136425910' : java.lang.NumberFormatException: 443https:         at org.openqa.jetty.util.URI.setURI(URI.java:247)         at org.openqa.jetty.util.URI.(URI.java:86)         at org.openqa.selenium.server.ProxyHandler$SslRelay.customizeRequest(ProxyHandler.java:769)         at org.openqa.jetty.http.SocketListener.customizeRequest(SocketListener.java:275)         at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:922)         at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)         at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)         at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)         at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) 13:14:20.065 WARN - GET https://m.tipico.com/ajax/sports/event/136526710 HTTP/1.1 java.lang.IllegalArgumentException: Malformed URI 'https://m.tipico.com:443https://m.tipico.com/ajax/sports/event/136526710' : java.lang.NumberFormatException: 443https:         at org.openqa.jetty.util.URI.setURI(URI.java:247)         at org.openqa.jetty.util.URI.(URI.java:86)         at org.openqa.selenium.server.ProxyHandler$SslRelay.customizeRequest(ProxyHandler.java:769)         at org.openqa.jetty.http.SocketListener.customizeRequest(SocketListener.java:275)         at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:922)         at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)         at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)         at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)         at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) jar:file:/usr/share/selenium-server/selenium-server-standalone.jar!/sslSupport 13:14:21.490 WARN - GET https://www.stoiximan.gr/match-odds/Sligo-Rovers-v-Longford-Town-437219 HTTP/1.1 java.lang.IllegalArgumentException: Malformed URI 'https://www.stoiximan.gr:443https://www.stoiximan.gr/match-odds/Sligo-Rovers-v-Longford-Town-437219' : java.lang.NumberFormatException: 443https:         at org.openqa.jetty.util.URI.setURI(URI.java:247)         at org.openqa.jetty.util.URI.(URI.java:86)         at org.openqa.selenium.server.ProxyHandler$SslRelay.customizeRequest(ProxyHandler.java:769)         at org.openqa.jetty.http.SocketListener.customizeRequest(SocketListener.java:275)         at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:922)         at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)         at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)         at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)         at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) ```","closed","","izahn","2015-07-09T19:59:15Z","2019-08-21T09:09:37Z"
"","795","PageFactory IWebElement returns transparent proxy is not supported in this context","When instantiating a new PageFactory class I am receiving the error __""Obtaining the runtime type of a transparent proxy is not supported in this context""__ on all IWebElement expressions and unable to interact with the IWebElement.  This occurs for all IWebElement expressions in build 2.46 (works successfully in 2.45).  Note: _""By""_ expressions are parsed successfully. (see asserts comments in code below)   Assume this error is in relation to the recent [.NET PageFactory refactor](https://github.com/SeleniumHQ/selenium/commit/689276b5e39c414edccf8a1bd11d71fd81b5fad4) but unable to resolve.  _SAMPLE:_  ```  using NUnit.Framework;  using OpenQA.Selenium;   namespace SeleniumTests.Tests     {           public class Test : SeleniumBaseClass          {               private IWebDriver driver;                public Test(Browser browser)               {                 driver = StartBrowser(Web_Common.Application, browser);               }            [Test, Description(""Sample test with NUnit"")]          public void Test_MyIWebElement()          {               MyClass thisclass = new MyClass(driver);                driver.Navigate().GoToUrl('sample.test.com')                Assert.That(thisclass.test_A.Displayed); //exception thrown via subject error               Assert.That(thisclass.test_B.Displayed); //returns true          } .... ----------------------------------------  using OpenQA.Selenium; using OpenQA.Selenium.Support.PageObjects;  namespace SeleniumTests.Web {     public class MyClass : Web_Common     {          [FindsBy(How = How.Id, Using = ""some_ID"")]          public IWebElement test_A { get; set; }           public By test_B = By.Id(""some_ID"");           public MyClass(IWebDriver webDriver)            : base(webDriver)         {            PageFactory.InitElements(webDriver, this);     } .... ---------------------------------------- ```  Unsure if this is a bug or I need to refactor my code to somehow adhere to the .NET PageFactory refactor update. If code refactor, any advice would be helpful.  Visual Studio snapshot:  ![2015-07-15_11-44-45](https://cloud.githubusercontent.com/assets/13355055/8710569/8913fc3c-2aff-11e5-964c-54db3574d3ec.jpg)  Thanks","closed","","eddif","2015-07-15T21:42:35Z","2019-08-18T22:09:35Z"
"","722","FirefoxDriver throws exception ""access to the path 'chrome.manifest' is denied"" when install custom plugins","When I want to install my custom plugin into firefox Then FirefoxDriver throws exception: Access to the path 'chrome.manifest' is denied. System.UnauthorizedAccessException was caught   HResult=-2147024891   Message=Access to the path 'chrome.manifest' is denied.   Source=mscorlib   StackTrace:        at System.IO.Directory.DeleteHelper(String fullPath, String userPath, Boolean recursive, Boolean throwOnTopLevelDirectoryNotFound)        at System.IO.Directory.Delete(String fullPath, String userPath, Boolean recursive, Boolean checkHost)        at OpenQA.Selenium.Firefox.FirefoxExtension.Install(String profileDir)        at OpenQA.Selenium.Firefox.FirefoxProfile.InstallExtensions()        at OpenQA.Selenium.Firefox.FirefoxProfile.WriteToDisk()        at OpenQA.Selenium.Firefox.FirefoxDriverServer.Start()        at OpenQA.Selenium.Firefox.FirefoxDriverCommandExecutor.Execute(Command commandToExecute)        at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)        at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)        at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxBinary binary, FirefoxProfile profile, ICapabilities capabilities, TimeSpan commandTimeout)        at OpenQA.Selenium.Firefox.FirefoxDriver..ctor(FirefoxBinary binary, FirefoxProfile profile, TimeSpan commandTimeout)  Environenment:  Selenium: 2.46 Firefox: 31ESR  Where error can not reproduce:  Selenium 2.45 Firefox 31ESR   Possible solution in method FirefoxExtension.Install replace all calls Directory.Delete to FileUtilities.DeleteDirectory","closed","D-firefox,","oleksiizozulenko","2015-07-01T16:06:59Z","2019-08-21T08:09:58Z"
"","397","FindElement fails to time out for a missing id","When executing the below Webdriver code, Selenium hangs on the findElement line.  It never times out when it looks for an ID that doesn't exist on the page.  try {     ImplicitTimeOut(TimeSpan.FromSeconds(0.3));     IWebElement elem = Targetdriver.FindElement(by);  }catch(Exception e) {return false} return true  Expected output:  => Return true if element is found =>Timeout after 0.3 of a second if element is not found and return false  Actual output: =>Tests hangs for 60 secods if element with specified Id is not found  NOTE: This only happens if I findElement By ID, it works perfect as it should if I use for example xpath. I try to use as less xpath as I can in my tests if I can help it, so please help me, what is the work around of this.   I have also tried the below method but same story.   WebDriverWait wait = new WebDriverWait(Targetdriver, TimeSpan.FromSeconds(1));   wait.Until(ExpectedConditions.ElementIsVisible(by));  Selenium version: 2.45.0 OS: Windows 7 Browser: Firefox  Browser version: 31","closed","","MichaelDeveloper2014","2015-04-01T13:20:16Z","2019-08-21T15:09:51Z"
"","675","Test remote end does not support profiler logs.","When a remote driver does not support profiler logs, it may throw WebDriverException. That exception should not prevent the user from retrieving the local profiler logs.","closed","C-java,","joshbruning","2015-06-17T00:14:12Z","2015-06-17T19:25:54Z"
"","594","iframe - Can't access dead object","When a page is open with an iframe inside of an iframe - page root (grandparent) -> iframe (parent) -> iframe (grand child)   When you click a button that closes the grandchild   Then you get an error saying ""can't access dead object""   The issue may exist with only 2 layers (parent / child) as opposed to 3 layers (grandparent / parent / grandchild)  It seems that the driver is trying to maintain a reference to the button that was clicked. However, the button no longer exists and thus the webdriver implodes.  org.openqa.selenium.WebDriverException: [JavaScript Error: ""can't access dead object"" {file: ""file:///C:/Users/EROBIN~1/AppData/Local/Temp/anonymous7258014280690691374webdriver-profile/extensions/fxdriver@googlecode.com/components/synthetic-mouse.js"" line: 8083}]'[JavaScript Error: ""can't access dead object"" {file: ""file:///C:/Users/EROBIN~1/AppData/Local/Temp/anonymous7258014280690691374webdriver-profile/extensions/fxdriver@googlecode.com/components/synthetic-mouse.js"" line: 8083}]' when calling method: [wdIMouse::click] Command duration or timeout: 4.80 seconds Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'EdwardXPS', ip: '10.0.1.32', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_31' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=38.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 36ce4e5d-980b-48bd-8ede-76e151710404  ``` at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:408) at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204) at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599) at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268) at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:79) at gov.irs.gdi.ui.ui.UIActions.click(UIActions.java:344) at gov.irs.gdi.ui.pages.blops.BlopsConsoleCreate.submitTicket(BlopsConsoleCreate.java:122) at gov.irs.gdi.ui.pages.blops.BlopsConsoleCreate.createODWTicket(BlopsConsoleCreate.java:92) at gov.irs.gdi.ui.blops.reg.create.BlopsRegCreateSteps.i_submit_the_ODW_Ticket_even_if_the_system_detects_that_a_similar_ODW_ticket_has_already_been_submitted(BlopsRegCreateSteps.java:73) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at cucumber.runtime.Utils$1.call(Utils.java:34) at cucumber.runtime.Timeout.timeout(Timeout.java:13) at cucumber.runtime.Utils.invoke(Utils.java:30) at cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:35) at cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37) at cucumber.runtime.Runtime.runStep(Runtime.java:298) at cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44) at cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39) at cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:48) at cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:91) at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63) at cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) at org.junit.runners.ParentRunner.run(ParentRunner.java:309) at cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70) at cucumber.api.junit.Cucumber.runChild(Cucumber.java:93) at cucumber.api.junit.Cucumber.runChild(Cucumber.java:37) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:387) at org.apache.maven.surefire.junitcore.pc.InvokerStrategy.schedule(InvokerStrategy.java:54) at org.apache.maven.surefire.junitcore.pc.Scheduler.schedule(Scheduler.java:346) at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236) at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53) at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229) at org.junit.runners.ParentRunner.run(ParentRunner.java:309) at cucumber.api.junit.Cucumber.run(Cucumber.java:98) at org.junit.runners.Suite.runChild(Suite.java:127) at org.junit.runners.Suite.runChild(Suite.java:26) at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238) at org.apache.maven.surefire.junitcore.pc.Scheduler$1.run(Scheduler.java:387) at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) at java.util.concurrent.FutureTask.run(FutureTask.java:266) at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) at java.lang.Thread.run(Thread.java:745) ```  Caused by: org.openqa.selenium.WebDriverException: [JavaScript Error: ""can't access dead object"" {file: ""file:///C:/Users/EROBIN~1/AppData/Local/Temp/anonymous7258014280690691374webdriver-profile/extensions/fxdriver@googlecode.com/components/synthetic-mouse.js"" line: 8083}]'[JavaScript Error: ""can't access dead object"" {file: ""file:///C:/Users/EROBIN~1/AppData/Local/Temp/anonymous7258014280690691374webdriver-profile/extensions/fxdriver@googlecode.com/components/synthetic-mouse.js"" line: 8083}]' when calling method: [wdIMouse::click] Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'EdwardXPS', ip: '10.0.1.32', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_31' Driver info: driver.version: unknown","closed","","erobinson","2015-06-01T18:59:00Z","2019-08-15T16:09:59Z"
"","710","Webdriver does not work when rebranding firefox with -APP parameter","What steps will reproduce the problem? Firefox 38.1.0 1) Go to firefox installation directory and move the file  applicationl.ini under subdirectory browser.  2) Edit application.ini and change  Vendor=Mozilla Name=Firefox to  Vendor=NewVendor Name=NewApp  3) Create a firefox shorcut that starts up with command line parameter ""C:\Program Files (x86)\Mozilla Firefox\firefox.exe"" -app  browser\application.ini  Note, the shortcut needs the ""Start In"" directory set or else you have to include the full path to application.ini.  4) Click on the shortcut.  Browser will start up and create profile under AppData/Roaming/NewVendor/NewApp.  Notice that if you select Help/Troubleshooting info menu that the userAgent contains NewVendor/NewApp instead of Mozilla/Firefox You can make the userAgent also contain Mozilla/Firefox by setting about:config property general.useragent.compatMode.firefox=true  5)  Now I want to make webdriver start up using the -APP parameter  FirefoxBinary binary = new FirefoxBinary(new File(exePath+""\firefox.exe""));             binary.addCommandLineOptions(""-APP"",exepath+""\browser\APPLICATION.INI"");  ```         try{         webDriver = new FirefoxDriver(binary,firefoxProfile);         }catch(Exception e){             e.printStackTrace(); ```  6) Browser starts up up but Selenium doesn't connect.  It gets org.openqa.selenium.firefox.NotConnectedException: Unable to connect to host 127.0.0.1 on port 7055 after 45000 ms. Firefox console output: **\* LOG addons.manager: Application has been upgraded **\* LOG addons.xpi: startup **\* LOG addons.xpi: Skipping unavailable install location app-system-local **\* LOG addons.xpi: Skipping unavailable install location app-system-share **\* LOG addons.xpi: Ignoring file entry whose name is not a valid add-on ID: C:\Users\DKLEPP~1\AppData\Local\Temp\anonymous8056356403011805978webdriver-profile\extensions\webdriver-staging *  What is the expected output? What do you see instead?  WebDriver 2.45.1 OS: Windows 7(64) Browser: Firefox   Browser version: 38.1.0(esr)  Using the -APP parameter is like running firefox as a xulrunner application.  We have created a customized version of firefox for corporate use by doing this.   We have a web app that we want to run on this specific instance of firefox so that users don't use the same browser to surf the web)  We used to not require the -APP parameter as firefox would automatically load application.ini and it would work fine with Selenium.  Now with the required command line parameter Selenium no longer works.","closed","D-firefox,","c094728","2015-06-25T20:34:42Z","2019-08-17T19:09:43Z"
"","33","Changed 'false' to 'False' to be in compliance with Python syntax in IDE webdriver export","Went to fix a similar bug in the same file with 'true' instead of 'True' which had already been fixed. I did, however, find a 'false' which should have been a 'False'. I haven't _confirmed_ this as a bug, but I'm reasonably sure that it needs fixing.","closed","","flyte","2013-03-19T12:01:06Z","2013-04-08T05:25:14Z"
"","160","Throw a real error when uploading non-file things in Ruby.","WebDriverError::Error isn't a thing, Error::WebDriverError is.  (CLA signed by dylan@dylanlacey.com -- Superceeding previous CLA signed on behalf of Sauce Lab Inc)","closed","","DylanLacey","2014-01-10T05:42:18Z","2014-07-01T16:45:05Z"
"","705","HtmlUnitDriver.deleteAllCookies to be domain specific","WebDriver.deleteAllCookies() deletes all the cookies for the current domain, however HtmlUnitDriver implementation deletes all cookies for all domains, which is incorrect.  This was pointed out in https://sourceforge.net/p/htmlunit/bugs/1695/  Test case attached as well","closed","C-java,","asashour","2015-06-24T11:53:10Z","2015-06-25T05:50:43Z"
"","408","Click is not working for FF 31 and chrome 32","web driver click is not working in firefox version 31  and chrome 32.  Click is working for Firefox version 24 EXPECTED: Webdriver to click the link in Chrome ,FF  ACTUAL: System.InvalidOperationException : Element is not clickable at point (1444, 175) Element is not clickable at point (1444, 175). Other element would receive the click:  while in ff it is not even throwing any error.   my code structure is like that                                      link to click                            Please let me know how can I fix this.","closed","","Snehashree","2015-04-02T19:47:50Z","2019-08-21T15:09:50Z"
"","444","[WebDriverJS] - Control flow out of order inside forEach","We've run into a complex case where the control flow can get out of order when using `webdriver.WebElement.prototype.findElement` inside a `forEach`. Here is the a reduced case using only the control flow:  ``` js var webdriver = require('selenium-webdriver'); var flow = webdriver.promise.controlFlow();  var FakeWebElement = function(text) {   return {     getText: function() {       return flow.execute(function() {         return webdriver.promise.delayed(200).then(function() {           return text;         });       });     },     findElement: function() {       var newElement = flow.execute(function() {         return new FakeWebElement(text + '-child');       })       return new FakeWebElementPromise(newElement);     }   }; };  var FakeWebElementPromise = function(elementPromise) {   this.then = elementPromise.then.bind(elementPromise); };  var getFakeDriver = function() {   var flow = webdriver.promise.controlFlow();   return {     findElements: function() {       return flow.execute(function() {         return webdriver.promise.delayed(500).then(function() {           return webdriver.promise.fulfilled([             new FakeWebElement('a'),             new FakeWebElement('b'),             new FakeWebElement('c'),             new FakeWebElement('d')           ]);         })       })     }   }; };  var driver = getFakeDriver();  driver.findElements().then(function(elems) {   console.log('length: ' + elems.length);   elems.forEach(function(webElem, index) {     webdriver.promise.fulfilled(webElem).then(function(fElem) {       return fElem;     }).then(function(pElem) {       console.log('index for pElem: ' + index);       return pElem.findElement();     }).then(function(webElem2) {       webElem2.getText().then(function(text) {         console.log('index for webElem2: ' + index);       });     });   }) }); ```  The output is:  ``` length: 4 index for pElem: 0 index for pElem: 1 index for pElem: 2 index for pElem: 3 index for webElem2: 1 // Unexpected!! index for webElem2: 0 // Unexpected!! index for webElem2: 2 index for webElem2: 3 ```  See https://github.com/angular/protractor/issues/2026 for the practical use case that surfaced this issue.  WebDriverJS is version 2.45.1 This works as expected with version 2.44.0","closed","I-defect,","juliemr","2015-04-11T20:50:02Z","2019-08-21T14:09:53Z"
"","664","Netwonsoft.Json dotnet reference problem","We've hada problem using selenium lately in conjunction with a web solution tha uses the Newtonsoft.Json library. Every time we ran our console app with selenium, the web app from the same solution broke because of the library reference to the 4.5 version. I've noticed that the version referenced in the selenium project is using 4.5 in the project file. This looks like a bug even though the referenced library is on 6.0.0.  ``` selenium/dotnet/src/webdriver/WebDriver.csproj ```  Issue with the reference (points to version 4.5, not 6.0):  ```        False       ..\..\..\third_party\dotnet\json-net-6.0r2\Net40\Newtonsoft.Json.dll      ```","closed","","miroslawmajka","2015-06-15T11:24:41Z","2019-08-21T11:09:46Z"
"","448","Internet explorer hangs after clicking  that returns a file to download","We're using c# and Internet explorer 11 When we make the driver click the button which in our case executes an action and returns a file to download (in an iframe) at the end. Sometimes, Internet explorer hangs in the click method after click an  and never gets out of it and sometimes the same test passes. Our goal is not to download the file (we have other way to verify the file) but to get our action done and be able to close internet explorer afterward or to continue testing other buttons. when the test fails this error gets back to the top   ""Test threw exception:  OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://192.168.137.5:4444/wd/hub/session/16cdc835-87f5-4af6-965b-1e60ef73c28d/element/7/click timed out after 60 seconds. ---> System.Net.WebException: The request was aborted: The operation has timed out. Result StackTrace:   at System.Net.HttpWebRequest.GetResponse()    at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)  --- End of inner exception stack trace ---     at OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebElement.Click()""  when it gets stuck in the click method it causes all the following tests to fail","closed","","Dkstlaurent-Xpertdoc","2015-04-13T15:21:32Z","2019-08-20T12:09:39Z"
"","628","In case of network error between client and hub lot of browsers can be created in nodes (over set limit)","We have next issue: one hub and one node with configuration to launch only one chrome at time:  ```   ""capabilities"":       [         {           ""browserName"": ""chrome"",           ""maxInstances"": 1,           ""seleniumProtocol"": ""WebDriver""         }       ] ```  Then we launch several tests in parallel (as result we see one executed tests and multiple in queue) In case if network error occurs between clients and hub (or in case if client was aborted/killed) - request remains in queue until it find available slot.  Once slot is found: new request for new session is forwarded to this slot and new browser is created. However when response have to be sent to client - IOException occurs:  ``` 12:44:34.419 WARN [17] com.google.common.io.Closeables - IOException thrown while closing Closeable. org.seleniumhq.jetty7.io.EofException     at org.seleniumhq.jetty7.http.HttpGenerator.flushBuffer(HttpGenerator.java:939)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.flushResponse(AbstractHttpConnection.java:612)     at org.seleniumhq.jetty7.server.AbstractHttpConnection$Output.close(AbstractHttpConnection.java:1001)     at com.google.common.io.Closeables.close(Closeables.java:79)     at org.openqa.selenium.io.IOUtils.closeQuietly(IOUtils.java:45)     at org.openqa.grid.internal.TestSession.writeRawBody(TestSession.java:440)     at org.openqa.grid.internal.TestSession.forward(TestSession.java:266)     at org.openqa.grid.web.servlet.handler.RequestHandler.forwardNewSessionRequestAndUpdateRegistry(RequestHandler.java:88)     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:111)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)     at org.seleniumhq.jetty7.servlet.ServletHolder.handle(ServletHolder.java:565)     at org.seleniumhq.jetty7.servlet.ServletHandler.doHandle(ServletHandler.java:479)     at org.seleniumhq.jetty7.server.session.SessionHandler.doHandle(SessionHandler.java:225)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)     at org.seleniumhq.jetty7.servlet.ServletHandler.doScope(ServletHandler.java:406)     at org.seleniumhq.jetty7.server.session.SessionHandler.doScope(SessionHandler.java:186)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doScope(ContextHandler.java:965)     at org.seleniumhq.jetty7.server.handler.ScopedHandler.handle(ScopedHandler.java:117)     at org.seleniumhq.jetty7.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)     at org.seleniumhq.jetty7.server.Server.handle(Server.java:349)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.content(AbstractHttpConnection.java:894)     at org.seleniumhq.jetty7.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:948)     at org.seleniumhq.jetty7.http.HttpParser.parseNext(HttpParser.java:857)     at org.seleniumhq.jetty7.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)     at org.seleniumhq.jetty7.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)     at java.lang.Thread.run(Unknown Source) Caused by: java.net.SocketException: Software caused connection abort: socket write error     at java.net.SocketOutputStream.socketWrite0(Native Method)     at java.net.SocketOutputStream.socketWrite(Unknown Source)     at java.net.SocketOutputStream.write(Unknown Source)     at org.seleniumhq.jetty7.io.ByteArrayBuffer.writeTo(ByteArrayBuffer.java:354)     at org.seleniumhq.jetty7.io.bio.StreamEndPoint.flush(StreamEndPoint.java:159)     at org.seleniumhq.jetty7.http.HttpGenerator.flushBuffer(HttpGenerator.java:875)     ... 33 more ```  And nothing is sent, hub still think that slot is empty (however browser is not closed). Hub sent next new session request to same slot: so we have 2 browsers launched at same node with max 1.  In our case number of requests in queue can be quite big (let say 100) and it easily lead to fact that some nodes became not functioning - cause we have 30+ browsers launched on same host.   To fix this issue we suggest to add exception handling in TestSession class in method forward  ``` // START            Added exception handling across writeRawBody                         try {                             writeRawBody(response, bytes);                         } catch(IOException io) {                             if (request.getRequestType() == RequestType.START_SESSION) { // DELETE incorrect SESSION                                 sendDeleteSessionRequest();                             }                             throw io;                         } // END            Added exception handling ```","closed","C-grid,","ilavloki","2015-06-08T12:23:40Z","2019-08-16T20:09:38Z"
"","542","requests for Operablink returns Capabilities with browserName of ""chrome""","We have a mechanism to classify the browser types tested, and put them into charts to display within a dashboard, so we rely on the ""browserName"" value in Capabilities returned by Selenium Grid.  However, most browser types work well except for ""operablink"". Let's say, when we tell grid that we want an ""operablink"", the grid does trigger an opera instance to test, but the ""browserName"" returned within Capabilities is ""chrome"" which confuses our dashboard so that no opera case chart is shown on the page. I ever searched for this issue, and found Selenium was using chrome-driver to support operablink, this may be the root cause of the bug, and grid developers may say, it's just by design. But from users' perspective, this could be a bug or say a leak of using opera browser. Let's just imagine, we all know we are using opera, but the browserName we get is otherwise ""chrome"". It seems a bit ridiculous.","closed","","anyway1021","2015-05-14T16:31:05Z","2019-08-21T13:09:51Z"
"","779","finding an image and click on on image takes more time  in webdriver","We found that when clicking on   in page from webdriver takes longer time. Currently we observed that , it is taking around 10 mins to find an image and click on it.  Here is sample test case   Webdriver.findElement(By.xpath(""xpath=//img[@alt='Application Performance Monitoring']"").click();","closed","","anandkatti","2015-07-14T14:16:17Z","2019-08-21T08:09:54Z"
"","556","set window-focus before clicking on item","We are using Java-Selenium tests with Firefox driver for testing a web-application based on Vaadin. The Firefox driver correctly filled some Vaadin textboxes with the desired text, however the text was lost when it was saved by using an appropriate save-button in the web-application. This problem in the tests only occured when the Selenium tests were debugged in Eclipse (e.g. step-by-step), in the Release version of the tests, everything worked fine.  The problem is, that every click on the debugger (in our case Eclipse) caused that Firefox lost Window-Focus (Windows sent WM_ACTIVATE-WA_INACTIVE to Firefox process) which itself caused Vaadin- Javascripts to disable reading the content of the textboxes.  (By using mouse and keyboard it is impossible to cause such a state manually)  This Firefox Driver patch sends a ""WM_ACTIVATE-WA_CLICKACTIVE"" and ""WM_SETFOCUS"" message to Firefox before clicking/double-clicking on an item.  TEST:  I wrote a small Java-Selenium test for testing the set-Window-Focus patch. This test should fail with the old Firefox driver and succeed with the set-Window-Focus patch. This tests loads a html-page containing Java-Script. The javascript checks that a textbox has focus while text is inserted into the textbox. The html-page is self-explaining. (I had no idea where to check-in the test)  File WindowFocusTest.zip:  http://s000.tinyupload.com/?file_id=00646763174868679041   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/556)","closed","D-firefox,","benedikthuberseitenbau","2015-05-20T14:53:25Z","2019-10-03T21:52:49Z"
"","587","Selenium webdriver.firefox.port not working","We are using a javascript library that relies on user focus and mouse events.  Thus, multiple firefox agents running within a single node interfere with one another, and we have to run single firefox instances within multiple agents instead.  When doing so, we get the following intermittent error:  ``` org.openqa.selenium.WebDriverException: Unable to bind to locking port 7054 within 45000 ms Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: '', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-36-virtual', java.version: '1.7.0_55' Driver info: driver.version: FirefoxDriver Command duration or timeout: 46.30 seconds Build info: version: '2.43.1', revision: '5163bceef1bc36d43f3dc0b83c88998168a363a0', time: '2014-09-10 09:43:55' System info: host: '', ip: '', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-58-virtual', java.version: '1.7.0_55' Driver info: org.openqa.selenium.remote.RemoteWebDriver      Caused by:     org.openqa.selenium.WebDriverException: Unable to bind to locking port 7054 within 45000 ms     Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50'     System info: host: '', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-36-virtual', java.version: '1.7.0_55'     Driver info: driver.version: FirefoxDriver     Build info: version: '2.43.1', revision: '5163bceef1bc36d43f3dc0b83c88998168a363a0', time: '2014-09-10 09:43:55'     System info: host: '', ip: '', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-58-virtual', java.version: '1.7.0_55'     Driver info: driver.version: FirefoxDriver ```  This appears to be caused by multiple Firefox agents trying to access the same locking port as described in the Firefox agent port locking strategy here:  https://code.google.com/p/selenium/wiki/FirefoxDriverInternals  From reading the documentation here:  https://code.google.com/p/selenium/wiki/FirefoxDriver there appears to be a system property named webdriver.firefox.port that can be used to avoid port conflicts between different agents running on the same box.  After setting this port, the agents continue to fail with the same exception and port number (even though this port should no longer be in use because of the system property being specified).  Further investigation reveals that the code does not seem to honor the property:  https://code.google.com/p/selenium/source/browse/java/client/src/org/openqa/selenium/internal/SocketLock.java?r=1e77c63607a89eb5919f1b4cb8f50f1ade7094bd  There also appears to be some discussion of the issue (with how to recreate it) here:  https://code.google.com/p/selenium/issues/detail?id=7272&can=1&q=webdriver.firefox.port&colspec=ID%20Stars%20Type%20Status%20Priority%20Milestone%20Owner%20Summary  _Note_:  Setting http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/firefox/FirefoxProfile.html#setAlwaysLoadNoFocusLib%28boolean%29 does not allow us to use multiple firefox instances in the same agent.  Affects version: 'org.seleniumhq.selenium:selenium-java:2.45.0'  _This bug was originally posted at:  https://code.google.com/p/selenium/issues/detail?id=8593  but is still a problem, so I have reposted it here._","closed","D-firefox,","ghost","2015-05-29T09:36:59Z","2021-09-05T10:35:58Z"
"","508","Cannot create profile directory when /tmp folder is large","We are getting an exception when trying to initialize FireFox WebDriver on a linux machine. The cause of exception is that Firefox fails to create a profile under /tmp directory. I assume that this failure is a result of very large /tmp folder (over 35K entries) which Java File IO can't handle. Once /tmp folder is emptied, Firefox WebDriver is initialized successfully.  org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/usr/bin/firefox) on port 7056; process output follows:  08:54:29 null 08:54:29 Build info: version: '2.42.0', revision: '5e824302019c86eae9c8c3ca9155e7307b410cf8', time: '2014-05-24 09:48:41' 08:54:29 System info: host: 'etvr-mon02', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-504.3.3.el6.x86_64', java.version: '1.7.0_71' 08:54:29 Driver info: driver.version: FirefoxDriver 08:54:29    at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:134) 08:54:29    at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:246) 08:54:29    at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:115) 08:54:29    at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:191) 08:54:29    at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186) 08:54:29    at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:182) 08:54:29    at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:95) 08:54:29    at com.liveperson.automation.seleniumUtils.BrowserType.setDriver(BrowserType.java:85) 08:54:29    at com.liveperson.automation.e2e.e2e.e2etestutils.E2EDriverFactory.getObject(E2EDriverFactory.java:49) 08:54:29    at com.liveperson.automation.e2e.e2e.e2etestutils.E2ETestsBase.testSetup(E2ETestsBase.java:131) 08:54:29    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 08:54:29    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) 08:54:29    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 08:54:29    at java.lang.reflect.Method.invoke(Method.java:606) 08:54:29    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47) 08:54:29    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 08:54:29    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44) 08:54:29    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24) 08:54:29    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74) 08:54:29    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83) 08:54:29    at org.junit.internal.runners.statements.FailOnTimeout$StatementThread.run(FailOnTimeout.java:74) 08:54:29 Caused by: org.openqa.selenium.WebDriverException: Cannot create profile directory at /tmp/unzip8719121035284230033stream 08:54:29 Build info: version: '2.42.0', revision: '5e824302019c86eae9c8c3ca9155e7307b410cf8', time: '2014-05-24 09:48:41' 08:54:29 System info: host: 'etvr-mon02', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.32-504.3.3.el6.x86_64', java.version: '1.7.0_71' 08:54:29 Driver info: driver.version: FirefoxDriver 08:54:29    at org.openqa.selenium.io.TemporaryFilesystem.createTempDir(TemporaryFilesystem.java:88) 08:54:29    at org.openqa.selenium.io.FileHandler.unzip(FileHandler.java:43) 08:54:29    at org.openqa.selenium.firefox.internal.FileExtension.obtainRootDirectory(FileExtension.java:81) 08:54:29    at org.openqa.selenium.firefox.internal.FileExtension.writeTo(FileExtension.java:58) 08:54:29    at org.openqa.selenium.firefox.internal.ClasspathExtension.writeTo(ClasspathExtension.java:63) 08:54:29    at org.openqa.selenium.firefox.FirefoxProfile.installExtensions(FirefoxProfile.java:416) 08:54:29    at org.openqa.selenium.firefox.FirefoxProfile.layoutOnDisk(FirefoxProfile.java:394) 08:54:29    at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:89)","closed","","waseemh","2015-04-30T07:18:09Z","2019-08-21T14:09:36Z"
"","617","Restore encoding magic comment which broke Ruby 1.8 and Ruby 1.9","We also need to release `2.46.2` with this fix because `#send_keys` is broken on Ruby 1.8 and Ruby 1.9.","closed","C-rb,","p0deje","2015-06-05T06:37:59Z","2015-06-05T13:52:38Z"
"","564","Java: Minor DefaultFieldDecorator improvement","Visibility of the ""isDecoratableList"" method has been changed to Protected.","closed","","TikhomirovSergey","2015-05-23T22:33:44Z","2015-06-16T02:38:47Z"
"","390","Looping over Elements and performing actions gets exponentially slower as the list grows (Java binding web driver 2.45.0)","Version: 2.45.0 Bindings: Java Browser: Chrome/FF  While the findElementsBy function takes only mere seconds to return a record set, selenium slows down at an exponential rate when performing actions on the record set.  Case in point, I have to loop over 1000 elements and perform a click on each.  The findElementsBy function only takes 6 seconds to get all 1000 WebElements, however, looping over each and performing a click takes hours and gets exponentially slower as the iterator processes.  It seems there is a memory leak issue here because even simply grabbing the first element in the list and performing a click on just that element takes 30+ seconds.  When doing a singular findElementBy().click(), the action performs instantly.    I also performed a test by looping over each and simply outputting getText().  You can see as the iterator moves through that each subsequent iteration is twice as slow as the previous.  I also performed another test by getting my 1000 elements.  But then I simply called findElement singular again to grab the first element and performed a click.  The click still took 30+ seconds.  So it seems as though there is definitely a memory issue here.","closed","","MChiciak","2015-03-31T04:57:41Z","2019-08-21T15:09:55Z"
"","674","Send_keys fails to send left parenthesis in Firefox in some cases","Using the Ruby bindings with Firefox 38.0.5 and selenium-webdriver gem version 2.46.2, I'm unable to send left parentheses in some cases (ex: on google.com it works, on webjet.com it doesn't).  I've reproduced the issue in Windows 7 64-bit and OS X 10.10.3, and with Ruby 1.9.3 and 2.2.2, with the below example test case, which worked with selenium-webdriver -v 2.44 and Firefox 33 (before native events went away):  require 'selenium-webdriver' browser = Selenium::WebDriver.for :firefox browser.navigate.to ""http://webjet.com"" element = browser.find_element(:id, 'CityTo') element.send_keys ""(BOS)""  Expected: text field should fill with ""(BOS)"" Actual: text field fills with ""BOS)""","closed","D-firefox,","csims","2015-06-16T15:29:25Z","2019-08-18T00:09:41Z"
"","204","Using the right annotation.","Using the right annotation to force the compiler to keep the seemingly no-op statement. This fixes it for all compilation modes.","closed","","sevaseva","2014-04-11T02:00:49Z","2014-06-25T06:22:51Z"
"","522","getWindowHandles() should return a list of windows ordered by window age","Using the Java API, one should be able to do this  ``` List handles = driver.getWindowHandles(); driver.switchTo().window(handles[1]); ```  ..and able to reliably expect that they are viewing the second-oldest open window.  This matters most when more than two windows are open, as when one needs to open more than one new window from the original window.","closed","E-hard,","thephilwells","2015-05-05T22:10:07Z","2019-08-21T13:10:01Z"
"","471","IE11 can't find elements","Using selenium with C# on .NET.  The command `driver.FindElements(By.CssSelector(""**""))` throws:  `Finding elements with css selector == **returned an unexpected error (UnexpectedJavaScriptError)` (space missing in original).  The command `driver.FindElements(By.TagName(""**""))` throws:  `Finding elements with tag name == **returned an unexpected error` (space missing in original).  The command `driver.FindElements(By.XPath(""**""))` throws:  `The xpath expression '**' cannot be evaluated or does notresult in a WebElement`  ...","closed","","jnfsmile","2015-04-20T11:25:51Z","2019-08-21T14:09:51Z"
"","280","Attempt to enable Safari Extensions before installing driver extension.","Using OSX's ""defaults"" public API enable Safari Extensions and check if the Extensions are enabled. If they are continue to installing SafariDriver else Throw a meaningful error to be returned to the remote test runner.","closed","","dimacus","2014-11-05T19:22:09Z","2014-11-06T17:35:13Z"
"","63","Replace distutils.dir_util by shutil","Using distutils in runtime code is not a good idea. distutils.dir_util writes a verbose log and causes test cases that are being run via 'setup.py test' to create a lot of unneeded log output that can not be suppressed easily. shutil.copytree and shutil.rmtree do the same as the functions in distutills.dir_util without producing any log output.  The wrong behaviour can be observed by running `setup.py test` from the following gist: https://gist.github.com/bikeshedder/5509187  The original commit that introduced the verbose output is a30844e2d30041483d5a95ca257be1c2ef425bc1","closed","","bikeshedder","2013-05-03T15:34:44Z","2014-07-10T07:53:24Z"
"","435","Chrome driver current window handle does not get updated","Using C# Chrome driver, when I open a new tab from another tab (via link), current window handle doesn't get updated. Ex: I have an application that launched in Tab1 with window handle H1. Using a link in Tab1, i am launching Tab2 and it has window handle H2. When I come back to Tab1 and click on a link to switch to Tab2, I could able to switch to Tab2 but driver.CurrentWindowHandle value still has H1.  Can you clarify how can I get the updated Current Window Handle?  Thanks, Jay","closed","","ananthoju","2015-04-08T22:34:25Z","2019-08-21T15:09:37Z"
"","169","Add WebDriver.driver","Useful to access driver properties (windows size, etc.)  ``` from splinter import Browser browser = Browser('phantomjs') browser.driver.set_window_size(1920, 1080) ```","closed","","yetty","2014-02-22T13:27:47Z","2014-08-14T09:53:25Z"
"","388","UnreachableBrowserException in Selenium 2.45 when used in combination with SoapUI","Used versions: SoapUI Pro v 5.1.2 (soapui-pro-maven-plugin) Selenium 2.45 is used (selenium-java) httpclient 4.3.6 is used  Steps to reproduce: `WsdlProject wsdlProject = new WsdlProject("""");` `WebDriver driver = new FirefoxDriver();`  Result in Selenium 2.45: The Browser is started but closed immediately. Reproducible in Firefox and Chrome.  The following exception is thrown:  > org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session.  Possible causes are invalid address of the remote server or browser start-up failure. > Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' > System info: host: 'xxx', ip: 'XXX.XXX.XXX.XXX', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_75' > Driver info: driver.version: FirefoxDriver >   at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:593) >   at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240) >   at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:126) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:191) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:182) >   at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:95) >   at my.project.selenium.webdriver.test.foo(awda.java:77) >   at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) >   at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) >   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) >   at java.lang.reflect.Method.invoke(Method.java:606) >   at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85) >   at org.testng.internal.Invoker.invokeMethod(Invoker.java:696) >   at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882) >   at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189) >   at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124) >   at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108) >   at org.testng.TestRunner.privateRun(TestRunner.java:767) >   at org.testng.TestRunner.run(TestRunner.java:617) >   at org.testng.SuiteRunner.runTest(SuiteRunner.java:348) >   at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343) >   at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305) >   at org.testng.SuiteRunner.run(SuiteRunner.java:254) >   at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) >   at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) >   at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) >   at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) >   at org.testng.TestNG.run(TestNG.java:1057) >   at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111) >   at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204) >   at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175) >   at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:125)  Result in Selenium 2.44: Works as expected  I was able to trace the problem down to ApacheHttpClient, line 72: `org.apache.http.HttpResponse response = fallBackExecute(context, httpMethod);` The Problem seems to be the communication between selenium and the webdriver.  From the release notes of v 2.45: ""Pull HttpClient implementation details out of HttpCommandExecutor"".Maybe this change is responsible for the behavior?","closed","","tiegs","2015-03-30T17:14:54Z","2019-08-20T15:09:34Z"
"","73","Add option to preserve the Firefox profile between session","Use case:     I need to have the Firefox profile and all changes that are made to it during a Selenium     session preserved between sessions.  If the patch isn't accepted I'll gladly fix it. So please give me feedback if it needs to be improved.","closed","","floort","2013-05-16T12:57:16Z","2014-06-16T19:59:04Z"
"","501","Urls having username and password are not working in IE10/IE11","Urls having username and password are not working in IE10/IE11  We have RC tests which were working fine in IE9.   We open our application by providing the username/password in url to bypass authentication for ex -   selenium.open(""http://username:password@localhost:9001"") ;  While running these tests in IE10/IE11 we are seeing authentication box which is not showing up on IE9  Please suggest  Thanks Kuldeep","closed","","Kuldeepnagar","2015-04-28T11:39:04Z","2019-08-21T14:09:43Z"
"","271","Make uploading files via python remote webdriver disabled by default.","Uploading files via remote webdriver was originally added to java webdriver in the following commit: https://github.com/SeleniumHQ/selenium/commit/90d9a761df576d8f733628d519e429421dc3a3c7  By default this feature is disabled in java and it can be enabled by setFileDetector.  Python port of code was done in the commit: https://github.com/SeleniumHQ/selenium/commit/82f3da579826b5a694395d1e5efbe7bd95c5a2a7 It has ported java feature without possibility of turning it on/off.  This commit ports the rest of the java code, by making files upload disabled by default and adding possibility of turning it on via setting FileDetector.","closed","","mpichlin","2014-10-20T08:57:34Z","2014-11-05T04:46:42Z"
"","610","Upgrade HtmlUnit to 2.17","Upgrade HtmlUnit to 2.17 and fixing tests  The default simulated FIREFOX version is now 38. TypingTest.testShouldBeAbleToTypeOnANumberInputField is @Ignored with HtmlUnit (for now)","closed","","asashour","2015-06-03T17:26:42Z","2015-06-04T16:08:38Z"
"","231","#6832 Created Initial implementation of the Remote Logging feature","Updated The Remote Driver to allow the access of log files, tried to keep it the same as original code, hope this is correct.  For issue: https://code.google.com/p/selenium/issues/detail?id=6832","closed","C-dotnet,","carl09","2014-06-25T10:07:52Z","2016-02-12T17:13:59Z"
"","157","Update doc comments and usage of DesiredCapabilities to use .copy() to avoid side effects to the global class instance.","Updated the doc comments in DesiredCapabilities, and fixed some usages as per Issue 6486  https://code.google.com/p/selenium/issues/detail?can=2&start=0&num=100&q=python&colspec=ID%20Stars%20Type%20Status%20Priority%20Milestone%20Owner%20Summary&groupby=&sort=&id=6486","closed","","dlai0001","2014-01-03T18:21:19Z","2014-01-03T19:26:33Z"
"","96","Updating Javadocs for TouchActions","Updated Javadocs for TouchActions","closed","","Cpaniyadi","2013-07-22T19:52:21Z","2014-07-08T21:07:19Z"
"","538","java: server: Update Eclipse classpath.","Updated httpclient and httpcore references to use the newer version (4.4.1) that is already in third_party. Change entry from json to gson, as the jar in third_party and contains required classes that would have been previously found in json.  CLA has been signed.","closed","","qayshp","2015-05-12T21:08:17Z","2015-05-22T07:14:30Z"
"","662","Update Java version 7 in README.md","Update Java version 7 in README.md","closed","","asashour","2015-06-15T07:46:08Z","2015-06-15T09:37:40Z"
"","593","Updating the latest files","update","closed","","AJ-72","2015-06-01T14:25:25Z","2015-06-01T14:26:04Z"
"","393","seleninum.base is set when the option is unset","Unset Options > Options > General > Remember base URL Click button OK Record a test case View the source Expect: selenium.base is absent from the source code  Actual: selenium.base is present and set","closed","C-ide,","loginprompt","2015-03-31T18:29:44Z","2019-08-21T15:09:40Z"
"","36","Created an exception for UNEXPECTED_ALERT_OPEN","UNEXPECTED_ALERT_OPEN should have it's own exception class instead of just WebDriverException. This pull request adds the error class UnexpectedAlertPresentException and causes UnexpectedAlertPresentException to be thrown for UNEXPECTED_ALERT_OPEN selenium errors.  CLA submitted","closed","","jhillacre","2013-03-21T22:02:07Z","2013-03-22T10:17:00Z"
"","341","Cannot interact with Chromium sometimes","Ubuntu 14.04 recently pushed a security update which updated Chromium and Chrome Driver from version 40.0.2214.111 to 41.0.2272.76. Ever since, I am experiencing erratic problems with reaching Chromium. Basically, what happens is that Chromium starts up but a get() does not result in any action and the associated promise is never fulfilled. I am using explicit flows.  Downgrading to the vulnerable version works but, obviously, that version is no longer in the repositories. The only alternative version would be 34.0.1847.116 which does not work with selenium-webdriver 2.44+ (timeout when trying to reach Chromium) and I am not sure what version of selenium-webdriver would be compatible with this version of Chromium.  The code roughly looks like this (in Coffeescript):  ``` webdriver = require ""selenium-webdriver"" flow = new webdriver.promise.ControlFlow().           on ""uncaughtException"", (e) ->               console.log ""Uncaught exception:"", e browser = new webdriver.Builder().                 withCapabilities(webdriver.Capabilities.chrome().set(""chromeOptions"", {""args"" : [""--incognito""]})).                 setControlFlow(flow).                 build() browser.get ""https://www.google.com"" ```","closed","","jsfan","2015-03-17T04:58:12Z","2019-08-21T16:09:45Z"
"","19","Typo in ThreadGuardTest.java","Typo in test name only (commit incorrectly refers to an exception name).  Test is auto-discovered, and the name is not used anywhere else, so this should be trivial.  testInterfacesProxiedProeprly() -> testInterfacesProxiedProperly()  CLA signed.","closed","","intchanter","2013-03-05T23:10:35Z","2013-03-06T00:01:44Z"
"","433","Hub and firefox with specific profile","Trying to start Firefox with specific profile:  ``` capabilities = DesiredCapabilities.firefox();                ProfilesIni ini = new ProfilesIni(); FirefoxProfile profile = ini.getProfile(""default""); capabilities.setCapability(FirefoxDriver.PROFILE, profile); ```  My hub (selenium-server-2.45) just ignoring this request. After some time, I receive (in my IDE) results:  ``` Tests run: 36, Failures: 2, Errors: 0, Skipped: 34, Time elapsed: 29.042 sec","closed","C-java,","breakmt","2015-04-08T17:11:14Z","2019-08-21T06:09:59Z"
"","456","python GhostDriver fails in send_keys to GitHub signin","Trying to automate a GitHub login with PhantomJS 2.0 with the following python script snippet:  ``` class GitHubLogIn(unittest.TestCase):     def setUp(self):         self.driver = webdriver.PhantomJS('./phantomjs/bin/phantomjs')         self.driver.set_window_size(1000, 1000)         self.driver.implicitly_wait(30)         self.base_url = ""https://github.com/""         self.verificationErrors = []         self.accept_next_alert = True      def test_git_hub_log_in(self):         driver = self.driver         driver.get(self.base_url + ""/"")         driver.find_element_by_link_text(""Sign in"").click()         time.sleep(10)         element = driver.find_element_by_id(""login_field"")         element.click()         element.clear()         element.send_keys(""username"")  ```  The send_keys fails with:  ``` ====================================================================== ERROR: test_git_hub_log_in (__main__.GitHubLogIn) ---------------------------------------------------------------------- Traceback (most recent call last):   File ""scripts\Test4.py"", line 72, in test_git_hub_log_in     element.send_keys(""username"")   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 318, in send_keys     self._execute(Command.SEND_KEYS_TO_ELEMENT, {'value': typing})   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 402, in _execute     return self._parent.execute(command, params)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 175, in execute     self.error_handler.check_response(response)   File ""C:\Python27\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 136, in check_response     raise exception_class(value) WebDriverException: Message: TypeError - undefined is not a constructor (evaluating '_getTagName(currWindow).toLowerCase()') ```  The send_keys works fine with the Chrome or the Firefox WebDriver. Any ideas how to get the send_keys above to work with GhostDriver or what the possible issue would be?","closed","","tlee5794","2015-04-14T19:30:00Z","2019-08-21T14:09:57Z"
"","551","DriverService process logs to a Logger","try to replace logging to sysout with a OutputStreamLogger wrapping a Logger given  Sry, but the selenium project setup is such a mess. I cant even build it. Why not using maven or some other build tool? However I am a fan of selenium and ... no I cant stay the pain. I must close the ide. Any plans to change that?  I offer my code and hope some one will take over. Some one who already setup the project.","closed","","lkwg82","2015-05-19T09:56:13Z","2017-02-24T13:35:03Z"
"","526","Firefox driver on .NET (2.45.0) doesn't get instantiate","Tried to init new FirefoxDriver and got next exception(tested with FF 30, 35,36):  System.Collections.Generic.KeyNotFoundException was unhandled by user code   HResult=-2146232969   Message=The given key was not present in the dictionary.   Source=mscorlib   StackTrace:        at System.Collections.Generic.Dictionary`2.get_Item(TKey key)        at OpenQA.Selenium.Firefox.FirefoxProfile.ReadDefaultPreferences()        at OpenQA.Selenium.Firefox.FirefoxProfile..ctor(String profileDirectory, Boolean deleteSourceOnClean)        at OpenQA.Selenium.Firefox.FirefoxProfile..ctor(String profileDirectory)        at MailerFlow.Driver.createProfile(Proxy proxy) in","closed","","CyborTronik","2015-05-06T11:19:59Z","2019-08-21T12:10:01Z"
"","430","Unable to launch Mozilla Firefox 33","Tried Launching Mozilla Firefox 33 with selenim version 2.44 with language java and Windows 7 OS But getting the below error   Exception in thread ""main"" java.lang.NoSuchMethodError: org.openqa.selenium.logging.LocalLogs.getNullLogger()Lorg/openqa/selenium/logging/LocalLogs; Tried Using with Firefox profile and without profile  All the time i end up getting the same error  Have searched for the root cause behind it every where but could not find any solution  Kindly please let me know the root cause when this error appears. I am stuck with this issue since a long time","closed","","SuhaThevar90","2015-04-08T13:37:19Z","2019-08-21T15:09:38Z"
"","552","Fixes #370, change the tooltip of schedule button","Tooltip of schedule button is changed to display as ""Scheduler now on, Click to turn Scheduler off"", if it is on.  I have signed the CLA","closed","","AJ-72","2015-05-19T12:39:14Z","2015-05-19T12:48:47Z"
"","769","Ignore failures in WebDriver#quit().","TODO: address the root cause instead of hiding it.  It seems chromedriver did not wait or check for the complete termination of the browser.  Fixes #758","closed","","eelgheez","2015-07-12T21:00:32Z","2015-07-13T17:00:54Z"
"","383","selenium-webdriver (2.45) running test very slow","Today i have upgraded selenium-webdriver from 2.43 to 2.45 its really slows down the test execution. the test use to run in 3 min 20 seconds now taking 5 minutes to run. after switching to the old driver again test run time went back to original.","closed","","tarar1","2015-03-27T15:55:15Z","2019-08-16T09:09:42Z"
"","105","Python README and index.rst link fix","tiny fix to py/README , and py/docs/source/index.rst link to pip installer was malformed, fixed in this branch.","closed","","cgoldberg","2013-08-27T16:22:35Z","2013-08-27T17:01:21Z"
"","99","[Python] Clear _actions after performing action_chains","This will make possible to reuse `ActionChains` object after perform  for other actions wihout creating a new object.  case:  ``` ac = ActionChains(driver) ac.move_to_element(some_element).click().perform() # ac._actions contains moving and clicking ac.send_keys(some_keys).perform() # ac._actions contains moving, clicking and sending keys, but I expect, that it contain only sending keys action. ```  In general, it will break a backward compatibility.  Another solution is to add a new method `clear` witch will be clear `self._actions` list.  CLA signed as Alexander Bayandin","closed","","bayandin","2013-07-25T09:39:17Z","2014-06-24T04:58:22Z"
"","749","fixes typo","This was bugging me, here's a PR","closed","C-java,","bmannix","2015-07-08T23:21:08Z","2015-07-12T00:22:11Z"
"","312","merged in filedetector changes","This was a change started by @sergeyksv in this repo (https://github.com/sergeyksv/selenium-webdriver-gh),  The change originally submitted by to SeleniumHQ by @toddtarsi, who no longer has time to work on it, hence the merge conflicts were not resolved.  I believe @jleyba  was reviewing this change.  I have grabbed the latest code reimplemented the change and this is the diff that resulted.","closed","","snayagar","2015-02-03T16:54:24Z","2015-02-11T18:11:06Z"
"","71","Adding node info #4953","This time with google style code spacing  Adding host info into the exception coming from the node, so people using the grid can know which node was executing the script wen it blew up  Fixing #4953","closed","","dimacus","2013-05-14T18:03:19Z","2014-07-07T17:59:02Z"
"","315","incorrectly returning port as free when address is in use","This should solve the intermittent issues I'm having with EADDRNOTAVAIL exceptions as discussed in this issue: https://github.com/watir/watirspec/issues/56  I'm not sure if this breaks the issue that caused this workaround in the first place: https://code.google.com/p/selenium/issues/detail?id=3987","closed","","titusfortner","2015-02-13T22:43:33Z","2015-07-02T01:44:35Z"
"","211","File upload using remotedriver on python3","This should allow to use file uploading on python3 using grid, which is broken for now","closed","","zenjoyneering","2014-04-28T15:22:00Z","2014-05-07T03:32:01Z"
"","237","Issue #7563 - Allow mocha timeout to cancel flow.","This pull request is an attempt to address the issues described in https://code.google.com/p/selenium/issues/detail?id=7563","closed","","nowells","2014-07-08T15:55:05Z","2014-07-15T21:25:41Z"
"","317","Webdriverjs mocha wrapper for 'it' should support the 'done' callback","This pull request has three changes in it, one fixes some doc typos, one adds a test for the handling of the `done` callback on an `it`, and one patch fixes the bug.  I believe this it the issue https://code.google.com/p/selenium/issues/detail?id=7277.  The fix in https://code.google.com/p/selenium/source/detail?r=88f6680bf0b5 does not, as far as I can see (or experience), do the right thing.  I wasn't able to test this through ""./go"" (The documentation step blows up with 604 warnings?), so I only ran the mocha tests manually.","closed","","tullmann","2015-02-20T22:35:04Z","2015-02-25T19:30:08Z"
"","279","Check if all necessary Safari Dirs exist before starting session.","This prevents a situation where Databases directory does not exist, which breaks the full load of Safari with only Unreachable error message.  See #7933","closed","","dimacus","2014-11-05T15:52:14Z","2014-11-05T17:25:49Z"
"","191","Nodes List JSON API","This PR returns a list of nodes information under http endpoint '/grid/api/nodes'  An example of the JSON output:  ``` GET: http://localhost:4444/grid/api/nodes ```  Results:  ``` {     ""nodes"": {         ""http://10.37.129.2:5555"": {             ""id"": ""http://10.37.129.2:5555"",             ""capabilities"": [{                 ""platform"": ""MAC"",                 ""seleniumProtocol"": ""WebDriver"",                 ""browserName"": ""chrome""             }],             ""configuration"": {                 ""port"": 5555,                 ""servlets"": [],                 ""host"": ""10.37.129.2"",                 ""cleanUpCycle"": 5000,                 ""browserTimeout"": 0,                 ""hubHost"": ""localhost"",                 ""registerCycle"": 5000,                 ""hub"": ""http://localhost:4444/grid/register"",                 ""capabilityMatcher"": ""org.openqa.grid.internal.utils.DefaultCapabilityMatcher"",                 ""newSessionWaitTimeout"": -1,                 ""url"": ""http://10.37.129.2:5555"",                 ""remoteHost"": ""http://10.37.129.2:5555"",                 ""prioritizer"": null,                 ""register"": true,                 ""throwOnCapabilityNotPresent"": true,                 ""nodePolling"": 5000,                 ""proxy"": ""org.openqa.grid.selenium.proxy.DefaultRemoteProxy"",                 ""browser"": ""browserName=chrome,"",                 ""maxSession"": 5,                 ""role"": ""node"",                 ""hubPort"": 4444,                 ""timeout"": 300000             }         }     } } ```  Anyone can give me a guide how to get `./go test` running properly on Mac OSX would be really helpful. I can then start writing some tests against it.   Done CLA.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/191)","closed","R-awaiting review,","j1n6","2014-03-20T17:36:50Z","2020-04-06T23:06:01Z"
"","86","[CrazyFun] Fixing the issues when running python test targets on Windows","This patch fixes the issues which are happening **only** on Windows, when executing python test targets. #### Changes made: 1. Error is thrown when running the test targets consecutively with different python versions(py2 to py3 or viz),    For example,    `go.bat //py:firefox_test:run method=ColorTests pyversion=C:\python26\python.exe` -> this goes fine        `go.bat //py:firefox_test:run method=ColorTests pyversion=C:\python33\python.exe` -> throws [error](https://gist.github.com/jayakumarc/5354781)        Issue is happening when virtualenv tries to overwrite the existing python resources under build/python dir. Doing the clean virtualenv install fixes this issue. That is, emptying the build/python dir before new python resources are getting copied. 2. Glob expression in the file path is not interpreted properly when running the test target with Py3.    (in other words, pytest is not recognizing glob expression in the file/dir path when running under Py3 on Windows)    For example,    `go.bat //py:firefox_test:run method=ColorTests pyversion=C:\python33\python.exe`    throws error,        ```    ERROR: file not found: build/lib/selenium/test/selenium/webdriver/firefox/*_tests.py    go aborted!    ```        Specifying test files' pattern in pytest.ini file fixes this issue.  I've tested these changes in Windows7 & Mac-Lion.","closed","","jayakumarc","2013-06-09T11:12:38Z","2013-09-12T18:06:57Z"
"","152","Masking all the private fields with getters and setters","This one looks scary but all i did was take out any direct references to fields and replace them with getter/setter calls. If a field did not have a getter/setter i created a new one for it","closed","","dimacus","2013-12-12T20:36:06Z","2013-12-18T16:44:32Z"
"","151","Refactor to hide internal private fields into getters and setters","This one looks scary but all i did was take out any direct references to fields and replace them with getter/setter calls. If a field did not have a getter/setter i crated a new one for it","closed","","dimacus","2013-12-12T20:16:16Z","2014-06-18T12:06:36Z"
"","58","Make Grid CLI help print only to Standard Out","This one is a bit strange, but grid help doc only needs to print to 1 source or another, if you try to do ""...jar -h | less"" you will get the most useless report ever because it's only the switches but no description of them. So it should all go to 1 place or another.  If standard out is not a good place to put the help I'll convert it to use only standard error all the way through... whichever one as long as it is consistent.  Also there was a full code duplication between 2 classes that got refactored to use 1 piece of code... I'd like to refactor this guy a little more if you think the is the correct direction to take  /OCD rant","closed","","dimacus","2013-04-26T18:09:58Z","2013-08-14T17:10:15Z"
"","156","Moving all configuration related file into 1 package","This looks big but it's slowly building on these 2 pull requests  https://github.com/SeleniumHQ/selenium/pull/152 and https://github.com/SeleniumHQ/selenium/pull/153  This is step 2 in over all rebuilding of how configuration is read. In this step i'm moving all configuration files into a single package, and extracting how the parameters from yaml, json, and command line are parsed into a separate class. The configuration object does not need to know how the params are parsed etc..","closed","","dimacus","2013-12-17T17:44:04Z","2013-12-18T16:43:28Z"
"","115","[CrazyFun] Fixing the issue when running test targets with py3 on Windows","This issue has already been explained in PR #86.","closed","","jayakumarc","2013-09-12T05:55:13Z","2014-06-17T11:00:05Z"
"","349","Webdriver hangs for ~1 minute even if chromedriver exits immediately","This isn't a direct problem with webdriver, but it does make diagnosing other problems harder.  I had a bug in my chromedriver wrapper script, and it was exiting immediately.  But webdriver will hang for a minute before reporting a problem, and will just report a timeout, not that the chromedriver failed/exited.  I believe the core of the problem is in `javascript/node/selenium-webdriver/remote/index.js` where the `command.result().then` handler will not kick the `httpUtil.waitForServer` in the case the command exits early/immediately.  The patch below demonstrates the problem by adding a test for using `/bin/false` as the chromedriver.  It times out after a minute.  ``` diff --git a/javascript/node/selenium-webdriver/test/chrome/options_test.js b/javascript/node/selenium-webdriver/test/chrome/options_test.js index eab3070..39524b9 100644 --- a/javascript/node/selenium-webdriver/test/chrome/options_test.js +++ b/javascript/node/selenium-webdriver/test/chrome/options_test.js @@ -204,7 +204,7 @@ test.suite(function(env) {      driver.quit();    });  -  describe('Chrome options', function() { +  describe.only('Chrome options', function() {      test.it('can start Chrome with custom args', function() {        var options = new chrome.Options().            addArguments('user-agent=foo;bar'); @@ -219,5 +219,16 @@ test.suite(function(env) {            'return window.navigator.userAgent');        assert(userAgent).equalTo('foo;bar');      }); + +    test.it('can catch bad startup script', function() { +      var options = new chrome.Options(). +        setChromeBinaryPath('/bin/false'); + +      driver = env.builder(). +          setChromeOptions(options). +          build(); + +      driver.get('nothing'); +    });    });  }, {browsers: ['chrome']}); ```","closed","","tullmann","2015-03-19T01:16:02Z","2019-08-21T16:09:42Z"
"","541","Improved HtmlUnit driver docu","This is the new verstion of PullRequest 'HtmlUnitDriver suggestions' #525  Sorry for the confusion","closed","","rbri","2015-05-14T13:25:50Z","2015-06-04T06:46:57Z"
"","550","IE error","This is the initial start page for the WebDriver server (redirects to this page)  Exception in thread ""main"" org.openqa.selenium.remote.SessionNotFoundException: Unexpected error launching Internet Explorer. Browser zoom level was set to 200%. It should be set to 100% (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 3.86 seconds Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'ZARNB-LT009', ip: '192.168.3.100', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45' Driver info: org.openqa.selenium.ie.InternetExplorerDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:162)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:225)     at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:182)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:174)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:146)     at com.indeed.tests.IndeedJobSearch.main(IndeedJobSearch.java:24)","closed","","snehalya","2015-05-19T07:22:14Z","2019-08-21T13:09:45Z"
"","258","Remove Browser Connection driver extension and add Network Connection driver extension","This is related to this issue: https://code.google.com/p/selenium/issues/detail?id=7315  It's basically the Ruby version of this commit: https://github.com/SeleniumHQ/selenium/commit/8629dc6ec6ddd96bbe0975ee86d0c4c2f4b9ebb2  HasBrowserConnection is a driver extension that is only an option for the Android driver. The Selendroid JSON Wire implementation doesn't support the `browser_connection` method anymore, so all code related to this driver extension can be removed from the Ruby bindings.  The new Selendroid JSON Wire method `network_connection` returns the connection type on a GET request and changes the connection type on a POST request. Currently you can only switch between Airplane mode and All mode. (The implementation is here: https://github.com/selendroid/selendroid/blob/master/selendroid-standalone/src/main/java/io/selendroid/server/handler/NetworkConnectionHandler.java.)  The new HasNetworkConnection driver extension can handle all types even though that doesn't work yet. In case an unknown type is returned `network_connection_type` returns this unknown type value. I just wanted to have something for this possibility. Can someone think of something better to return if this happens?   I did have some problems with getting the integration specs running for Selendroid. Could someone help verify that these specs pass?  I haven't signed the CLA yet. I will do that once these changes are approved.","closed","C-rb,","jimvm","2014-09-24T19:15:57Z","2015-03-02T21:40:11Z"
"","533","Need new build of .net assemblies with Firefox performance fix","This is related to issue 8551  How do get new build of .net assemblies with Firefox performance fix?  The last build was 2-27-2015 or selenium 2.45.0 (Firefox runs 100% slower) According to issue 8551 the developer site there has been a fix for the performance issue but a new release of the .net assemblies do not exist on NuGet.  my comments added to issue 8551 I think there has been a fix for the performance(slowness) issue with FF. However I use the .net assemblies and release 2.45.0 was build back on 2-27-2015 and does not contain the performance fix for Firefox. Can we get a new .net build 2.45.1 that contains the Firefox performance fix and get out on NuGet please.","closed","","tnelson-cb","2015-05-07T15:18:16Z","2019-08-21T13:09:47Z"
"","676","java.lang.IllegalStateException: The process has not exited yet therefore no result is available ...","This is occuring with Chromedriver, Ghostdriver, IEDriver for me.  In the case of chromedriver I use  selenium 2.45 chromedriver 2.13/2.14 windows, debian linux  IS this a known issue? It looks like this happens under a certain condition in commons-exec code, and appears to be a bug. This is causing lots of sporadic failures.  The code I use to start it in the case of chromedriver is as follows  new ChromeDriverService.Builder()                 .usingDriverExecutable(chromeDriverFile).usingAnyFreePort().start();","closed","","binodpanta","2015-06-17T15:19:46Z","2019-08-19T02:09:46Z"
"","265","Adding POC for REST api on Selenium Hub","This is not necessarily a pull request, more of a request for information.   I'm looking to close issue #5586  Here is the idea, make a REST style API that sits on top of the existing grid and allows users to interrogate the state from outside. After the basic API is implemented, it will be possible to close #1843 because the console could use JS to make async updates without reloading the whole console. By fixing above two defects we can also close #8002.  Here is a working POC, the following screenshots will describe individual endpoints. This is still in proposal stage, but I hope some for of this will be liked and accepted since I desperately need this and tired of writing new servlets that may break one day. - /api    Self documenting HTML page that provides a brief description of the endpoints. It's impossible to add a new end point without having the page self update. This will allow the API documentation to always stay relavant.   ![api](http://i.imgur.com/FJ9ZDtP.png) - /nodes   Returns an array of current hosts, and the ""proxies"" and ports that the nodes attached with. The ""proxy"" ID is a unique key that describes individual proxy to allow further queries without name collisions. The proxy ID is a base64 encoded name of the proxie's getId(), which is roughly http://10.63.95.65:5555   ![api](http://i.imgur.com/8KuTkvb.png) - /proxy/PROXY-ID   Returns information about given proxy, such as registered capabilities and the config the proxy was launched with.   ![api](http://i.imgur.com/r1SN2V1.png) -  /sessions   A hash map of current session IDs (TestSession.getExternalKey()). Each session has a host and proxy ID attached, which gives ability to look up the host of all current tests easily.   ![api](http://i.imgur.com/6vdoCxF.png) - /session/SESSION-ID   Retrives some information about the current test session, wheter it has been orphaned or not, and what proxy it is connected to.   ![api](http://i.imgur.com/UfnzXJn.png)  Any feedback that will help me get this api into the grid is extremely welcome!   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/265)","closed","R-needs code changes,","dimacus","2014-10-07T18:12:20Z","2020-08-25T22:21:50Z"
"","502","refactored some python targets in Rakefile for use with crazyfun","This is my first set of (small) changes to update some of the python targets for crazyfun. I've moved some logic directly from the Rakefile to related files in py/.","closed","C-infra,","joshmgrant","2015-04-28T12:29:28Z","2015-04-29T09:53:43Z"
"","464","Unexpected behaviour when using a promise condition with wait()","This is either a documentation error, an implementation error, or a misunderstanding on my part.  Documentation:   ``` wait(condition, opt_timeout, opt_message)  In the event a condition returns a promise, the polling loop will wait for it to be resolved and use the resolved value for whether the condition has been satisfied.  ```  There are two points of interest here.  First, we wait until the promise is resolved.  Second, we use the **resolved value** to determine whether the condition is satisfied.  The behaviour as implemented doesn't seem to match.  The **resolved value** isn't considered at all.  For example, when I use wait (promise.fullfilled(false)) the condition is satisfied and flow continues past the wait, even though the resolved value is false.  The code in question is here https://github.com/SeleniumHQ/selenium/blob/0a9cc30d576c7290dcd54ccfd54aff27058192ff/javascript/webdriver/promise.js#L1558  I would expect something like this before `fulfill(value)`  ``` javascript if (!value) {    return reject(Error(opt_message +   "": promise resolved to a falsy value"")); } ```","closed","","tejohnso","2015-04-17T18:05:34Z","2019-08-21T13:09:34Z"
"","691","Firefox 38 crashes on launch with Selenium RC (v1.0) and Selenium Server v2.46.0","This is basically issue https://github.com/SeleniumHQ/selenium/issues/437, which was closed as fixed (I'm guessing); I tried to reopen it, but I don't have permission.  Note: We have our own Framework built on RC (v1.0), as well as lots of JS user extensions.  We have significant legacy code running RC and will not be migrating it.  Please fix this crash.  Thanks.  I suspect I don't have permission to port the fix myself, but that's also an option, perhaps.  Selenium 2.46.0 Firefox 38.0.1 OpenSUSE 13.1","closed","","coolgary","2015-06-20T03:02:02Z","2019-08-21T10:09:55Z"
"","321","Issue 8539 firefox profile.encoded fails on python3.3","This is about the issue: https://code.google.com/p/selenium/issues/detail?id=8539  First time submission. Already signed CLA.","closed","","jxiaodev","2015-02-26T19:36:02Z","2015-02-26T19:54:51Z"
"","310","Proposal for feature/issue #8409 - Retry on WebDriver.js acquireSession","This is a working proposal to add retry-on-errors feature to WebDriver.js acquireSession to fix [issue 8409](https://code.google.com/p/selenium/issues/detail?id=8409)  If you are ok with adding this, I'll continue to work on it and, with help, figure out what's missing: - Figure out how the client will pass the retry `config` through capabilities / other way (easiest would be ENV vars for me) - help appreciated. - Determine convenient defaults when user pass `config.retry = true` but doesn't specify more details - criteria is appreciated. - Write unit tests for the feature - help needed!","closed","","elgalu","2015-01-29T18:21:25Z","2015-02-16T18:06:19Z"
"","316","Adding initial JMX support to Grid Hub","This is a starting point to the integration of JMX into the grid.  Current PR keeps track of the Registry class for new sessions and the RemoteProxy class for new proxy registration, as seen bellow: ![java monitoring management console-3](https://cloud.githubusercontent.com/assets/90026/6252978/fec63100-b76b-11e4-87b1-c1a48ac44b20.png)  If this is a desired direction, we can add TestSlot tracking etc, and even give ability to temporary offline a node via console or to force clear a TestSlot that is stuck in an un flush-able state.  Directions to test:  ``` java -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -jar selenium-standalone.jar -role hub ```  (Add a new node in normal fashion)  Next run this command to find the PID of the hub server started  ``` jps ```  Once the pid is located, run jconsole command to connect to pid:  ``` jconsole $PID ```  (ignore any insecure connection errors you might see)   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/316)","closed","R-needs code changes,","dimacus","2015-02-18T17:50:51Z","2019-10-03T21:50:10Z"
"","227","Issue 3951: Make HTTP client socket timeout configurable","This is a proposed fix for [Issue 3951](https://code.google.com/p/selenium/issues/detail?id=3951).  I decided not to make the timeout configurable through API for these reasons: - This setting is not browser related so it doesn't fit into Capabilities. - API would have to allow access to HttpClientFactory from a RemoteWebDriver instance through its HttpCommandExecutor (as suggested in [Issue 3951, comment #39](https://code.google.com/p/selenium/issues/detail?id=3951#c39)) to change the timeout value _before_ the HttpClient instance is actually created (HttpClient would need to be instantiated lazily on the first call of `HttpCommandExecutor#execute()`, not in HttpCommandExecutor's constructor like it is now). This would result in unnecessary code complexity and an API allowing illegal changing of the socket timeout in the state where HttpClient is already created and its configuration cannot be changed. - This is a corner case configuration and it makes sense to use the most widely suitable default, possible to override with a System property.  I also took the liberty of decreasing the default to 60 seconds. This value is suggested by Kristian Rosenvold in his commit 3f73032360e65d12f6c12a47f507697c0981b4a3 where he also explains why a bigger timeout is needed in grid environment. I hope the lesser timeout won't have negative effects since there already is a method [HttpClientFactory#getGridHttpClient(int, int)](https://github.com/SeleniumHQ/selenium/blob/c8ed0c89e45518f4e702ca26eefc7d90dba6ec84/java/client/src/org/openqa/selenium/remote/internal/HttpClientFactory.java#L96) which takes socket timeout as a parameter. In any case it is possible to override the default socket timeout value with `webdriver.remote.http.socket.timeout` System property.  Review needed, especially comments from someone who can confirm this will not break things in the grid environment.","closed","","yurloc","2014-06-16T15:13:10Z","2019-10-21T08:42:45Z"
"","440","Fixes 434: handle httplib exception","This is a fix for an issue I encountered and reported in #434. It adds httplib.HTTPException to the list of exceptions handled on QUIT when httplib is in use. I'm sorry that I really don't have an idea of how a test case can be added for this.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/440)","closed","C-py,","jwb","2015-04-09T16:44:30Z","2020-03-10T02:58:10Z"
"","124","Screen recording for each session","This is a feature that can record test scenario into sliders. The test scenario includes ""click"", ""send Keys"" and ""save screen shot"" actions to browser. The selenium grid can save screen shot when any of those action is performed, and high light the web element that is involved, eg: the button being pressed, in the screen shot.  To enable the feature, adding ""-screenSliders "" option in hub, eg: java -jar build/java/server/src/org/openqa/grid/selenium/selenium-standalone.jar -role hub -screenSliders /tmp  To view recorded screen shot sliders, open url in browser: http:///FilesServlet?sliders=  eg: http://127.0.0.1:4444/FilesServlet?sliders=772e55a0-fa59-496c-996e-73b4ed34d0e5  The change sets includes: 1. new java servlet to create and view sliders 2. an images viewer in html page 3. grid code that can    A. create screen shot when ""click"", ""send Keys"" and ""save screen shot"" actions are performed   B. load configuration 4. unit test for new codes","closed","","chenhaiq","2013-10-08T07:03:38Z","2015-03-02T21:04:01Z"
"","110","Fix bug ID: 6199 (Python webdriver: chrome_options.add_extension fails on python3.3)","This is a change to fix the issue: https://code.google.com/p/selenium/issues/detail?id=6199  This is my first submission, let me know if you have any issues with how I am doing this, as it is my first time and don't know any better.","closed","","dharrya","2013-08-31T14:24:55Z","2014-06-26T14:53:53Z"
"","72","Change for bug ID: 4843","This is a change to fix the issue : https://code.google.com/p/selenium/issues/detail?id=4843  This is my first submission, let me know if you have any issues with how I am doing this, as it is my first time and don't know any better.  I have signed the SLA. Unfortunately my work email (kdillon@mathworks.com) is different than my github email, so I can sign it twice if you need me to.","closed","","kdillon","2013-05-14T21:57:44Z","2015-03-02T21:10:04Z"
"","90","Fix bug 5798: py.selenium.webdriver.common.proxy ignoring no_proxy parameter","This includes an updated unit test which fails when no_data param is ignored, and a fix for the proxy so that it no longer ignores the no_data parameter and the test passes.","closed","","jpgeek","2013-06-19T10:15:16Z","2014-08-18T19:44:06Z"
"","638","Self-signed certs are rejected for sites with pinned certs in Firefox 39.0 beta 3","This happened once before, last April, and @jleyba [fixed it](https://github.com/SeleniumHQ/selenium/commit/2f2e40c75063477eb7c1cb1b0d5cf3e0cf86757f) by sort-of-hackily trying to disable HSTS preloading.  In FF 39.0b3, that doesn't seem to work anymore for some reason. It still works in FF 38.0. I haven't tried any of the newer point releases of 38.  This makes [PageLoadingTest.testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate](https://github.com/SeleniumHQ/selenium/blob/b14d42865e80e2f16caa4d4b50f794f19eae1f17/java/client/test/org/openqa/selenium/PageLoadingTest.java#L322) fail if [Jetty7AppServer.detectHostname](https://github.com/SeleniumHQ/selenium/blob/6b4e6de722fcccd18619951543143999e9a30657/java/client/test/org/openqa/selenium/environment/webserver/Jetty7AppServer.java#L67) detects a hostname that is on the HSTS list. (For example, if you set the hostname to something in *.google.com.)  Of more practical consequence, it prevents WebDriver tests from accessing sites that are on the HSTS preload list via a proxy.","closed","D-firefox,","juangj","2015-06-10T01:02:47Z","2019-08-21T10:09:39Z"
"","572","Fixing typos in ActionChains method doc strings.","This fixes two docstrings that contained the typo ""ActionsChains"" in place of ""ActionChains"".  I have signed the CLA.","closed","","billagee","2015-05-27T05:34:26Z","2015-05-27T17:23:46Z"
"","97","Fix get_attribute python implementation when a boolean value is returned.","This fixes issue #5955.","closed","","xuru","2013-07-23T05:19:51Z","2013-07-23T06:11:35Z"
"","568","Ensure Firefox capabilities are proper instance by default","This fixes a regression introduced with https://github.com/SeleniumHQ/selenium/commit/00801a07 when default capabilities is an instance of `Hash`, while it should be `Remote::Capabilities`.  Fixes currently failing spec:  ```   1) Selenium::WebDriver::Firefox::Bridge sets the proxy capability      Failure/Error: Bridge.new(:http_client => http, :proxy => proxy)      NoMethodError:        undefined method `proxy=' for {}:Hash      # ./build/rb/lib/selenium/webdriver/firefox/bridge.rb:41:in `initialize'      # ./rb/spec/unit/selenium/webdriver/firefox/bridge_spec.rb:41:in `new'      # ./rb/spec/unit/selenium/webdriver/firefox/bridge_spec.rb:41:in `block (2 levels) in ' ```","closed","","p0deje","2015-05-26T10:51:03Z","2015-06-02T14:49:37Z"
"","155","Migrating hard coded strings into a single place to be kept as constants","This file exists already, but all params names are hard coded as strings, might as well start using this file","closed","","dimacus","2013-12-17T14:55:55Z","2014-06-25T07:48:08Z"
"","717","Add test annotation @NotYetImplemented","This feature is meant to be used with test classes with @RunWith(SeleniumTestRunner.class) It makes the runner executes the test method, and if the method fails (as expected) then the build will be green, and if the method succeeds, then the build is red complaining ""Test is marked as @NotYetImplemented but already works"".  This feature ensures that anything marked with @NotYetImplemented is still not implemented, and it is helpful to make the test suite annotations correct.  This commit applies it to tests in TypingTest running with HtmlUnit (which were previously @Ignore), but it can be applied to other classes or drivers.","closed","C-java,","asashour","2015-06-27T16:45:12Z","2015-07-01T21:48:31Z"
"","736","ruby: Allow parallel startup of PhantomJS/IE/Safari drivers","This extends 437725c to PhantomJS because any external process starting with specific port suffers the same race condition.  Basically, we apply the behavior we have for Firefox (lock socket, start firefox, unlock socket) to any external process that we pass port to. 437725c did that for Chrome, this pull request - for PhantomJS.  I talked to @jarib about this and he advised first to propose this to the team. That kind of changes should be applied to all bindings, so it makes sense to discuss it first and I didn't manage to get attention in IRC. @barancev @titusfortner @lukeis @AutomatedTester @andreastt What do you think?  If it makes sense to do that, I'll need to apply this behavior to IE driver in Ruby (if it makes sense - I have no idea about IEDriverServer and how it works in parallel).","closed","C-rb,","p0deje","2015-07-05T05:45:18Z","2015-11-03T04:13:18Z"
"","739","Fix some generics warnings","This commit fixes some generics usage warnings, and also auto-closes some resources in the test suite.","closed","C-java,","asashour","2015-07-06T07:30:05Z","2015-07-07T00:59:30Z"
"","166","added the api to execute native phantomjs code (ported from java webdriver)","this commit adds the api to execute native javascript code in phantomjs from phantomjs-driver, there are same little refactorings to clean the code but it's the same of the java webdriver. the googlecode issue url is https://code.google.com/p/selenium/issues/detail?id=6949.  note: in the class OpenQA.Selenium.Remote.CommandInfoRepository there's also a little performance update inside the implementation of the property Instance to use the lock only the first time","closed","","livioc","2014-02-05T14:02:01Z","2014-06-15T08:09:08Z"
"","198","Add getCssSelector, getXPathSelect, and JavaDoc","This change enables [By] class element selectors to be used is other contexts like JavaScript code execution.","closed","","sbabcoc","2014-04-09T22:55:33Z","2014-04-22T09:31:02Z"
"","348","Allow port to be specified for Chrome","This allows the port for Chromedriver to be passed as part of the opts like it is for IE driver.","closed","C-rb,","Donavan","2015-03-18T19:59:45Z","2016-03-14T10:53:13Z"
"","218","Add HTML5 Local Storage Support","This adds support for setting and getting HTML5 local web storage.  It follows the JSONWireProtocol as defined at https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/local_storage.   I have signed the CLA already.","closed","","ingshtrom","2014-05-13T12:19:35Z","2014-06-17T08:23:36Z"
"","34","Multiple file upload support for firefox via sendKeysToElement","This adds support for multiple file upload via sendKeysToElement that works with Capybara.  If someone can point me to where the file upload tests are located (I've looked for quite some time and must be missing something really obvious) I'll be more than happy to add tests for it.  CLA has been signed","closed","","twalpole","2013-03-20T01:07:31Z","2020-04-06T10:49:52Z"
"","774","HtmlUnitDriver: basic Alert implementation","This adds basic implementation of Alert, further steps are needed at HtmlUnit and HtmlUnitDriver sides to fully implement it.  However the current HtmlUnit AlertHandler interface, and running HtmlUnitDriver in the same test thread prevents full implementation.  To be further discussed in the mailing list.","closed","C-java,","asashour","2015-07-14T07:53:24Z","2015-07-15T19:12:46Z"
"","684","Add rebeccapurple to the Colors enum","This added rebeccapurple to the Colors enum in the support package.  It's currently the only missing color from the CSS3 color spec:  http://www.w3.org/TR/css3-color/#html4","closed","","Ardesco","2015-06-18T18:39:05Z","2015-06-18T18:44:10Z"
"","596","RemoteLogs unit tests.","These unit tests cover the happy paths (assuming the remote endpoint does not throw an exception).","closed","","joshbruning","2015-06-01T21:17:19Z","2015-06-16T03:23:21Z"
"","306","PageFactory enhancement. Selenium for .Net","These tools were implemented the perfectly similar way as it was done in Selenium Java. Now it is possible to design your own attributes/algorithms in order to decorate fields/properties by:  ``` csharp IFieldDecorator ILocatorFactory IElementLocator ```  Default implementations are already here. They can be extended, their virtual methods can be overridden.  Appuim project needs this in order to provide the following use case (field of page/screen object):  ``` csharp [FindsBy(How = How.CssSelector, Using = ""relevant css"")] //if there the similar browser UI as UI of a //native app [AndroidFindBy(UIAutomator = ""ui Automator locator for Android"")] //if page object is going to be used against Android [iOSFindBy(Accessibility = ""accessibility for iOS"")] //if page object is going to be used against  //iOS IWebElement targetElement;  //element is used for the mobile and browser testing ```  It is already present on the java-client side. If it is interesting details are below: https://github.com/appium/java-client/pull/68 https://github.com/appium/java-client/pull/126 https://github.com/appium/java-client/pull/140 https://github.com/appium/java-client/pull/145","closed","C-dotnet,","TikhomirovSergey","2015-01-06T15:37:21Z","2015-03-27T17:00:44Z"
"","296","Tests for #8223 firefox webdriver problem with scope in executeScript","These tests work on Chrome 39, they fail on Firefox 33 (and via saucelabs, at least as far back as FF 28).  I'll comment again when the CLA is signed.  Output of tests on my system:  ``` kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$ firefox --version  (process:31538): GLib-CRITICAL **: g_slice_set_config: assertion 'sys_page_size == 0' failed Mozilla Firefox 33.0 kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$ google-chrome --version Google Chrome 39.0.2171.71  kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$  kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$ git log --pretty=short -n 1 master commit 446df4dd75851bdc41e610bfe28f395a517194e1 Author: Ondřej Čertík  Date:   Mon Dec 1 12:56:55 2014 -0700      README: Fix the Yahoo example kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$  kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$ SELENIUM_BROWSER=chrome,firefox ./node_modules/mocha/bin/mocha -t 120000 ./test/execute_script_test.js  Running tests against [chrome,firefox]     [chrome]     executeScript       ✓ fails if script throws (44ms)       ✓ fails if script does not parse        scripts         ✓ do not pollute the global scope (53ms)         ✓ can set global variables (62ms)         ✓ may be defined as a function expression (50ms)       return values         ✓ returns undefined as null          ✓ can return null          ✓ can return numbers (70ms)         ✓ can return strings          ✓ can return booleans (47ms)         ✓ can return an array of primitives (38ms)         ✓ can return nested arrays          ✓ can return object literals (49ms)         ✓ can return complex object literals (40ms)         ✓ can return dom elements as web elements (120ms)         ✓ can return array of dom elements (159ms)         ✓ can return a NodeList as an array of web elements (167ms)         ✓ can return object literal with element property (83ms)       parameters         ✓ can pass numeric arguments (60ms)         ✓ can pass boolean arguments (49ms)         ✓ can pass string arguments          ✓ can pass null arguments (57ms)         ✓ passes undefined as a null argument (61ms)         ✓ can pass multiple arguments (49ms)         ✓ can return arguments object as array          ✓ can pass object literal (45ms)         ✓ WebElement arguments are passed as DOM elements (74ms)         ✓ can pass array containing object literals          ✓ does not modify object literal parameters        https://code.google.com/p/selenium/issues/detail?id=8223         ✓ a for loop can build an array out of the index var, and return it          ✓ a for loop can return an array built from elements passed in a list          ✓ a for loop can return an array built from elements passed in a nested object (46ms)         ✓ nested recursive functions can return an array built from elements passed in a list          ✓ nested recursive functions can return an array built from elements passed in a nested object (39ms)    [firefox]  Building //javascript/firefox-driver:webdriver ... (in /home/kandinski/code/selenium)     executeScript       ✓ fails if script throws (72ms)       ✓ fails if script does not parse (43ms)       scripts         ✓ do not pollute the global scope (116ms)         ✓ can set global variables (84ms)         ✓ may be defined as a function expression (45ms)       return values         ✓ returns undefined as null (45ms)         ✓ can return null (42ms)         ✓ can return numbers (83ms)         ✓ can return strings (42ms)         ✓ can return booleans (94ms)         ✓ can return an array of primitives (43ms)         ✓ can return nested arrays (43ms)         ✓ can return object literals (95ms)         ✓ can return complex object literals (62ms)         ✓ can return dom elements as web elements (167ms)         ✓ can return array of dom elements (231ms)         ✓ can return a NodeList as an array of web elements (233ms)         ✓ can return object literal with element property (125ms)       parameters         ✓ can pass numeric arguments (195ms)         ✓ can pass boolean arguments (94ms)         ✓ can pass string arguments (41ms)         ✓ can pass null arguments (96ms)         ✓ passes undefined as a null argument (93ms)         ✓ can pass multiple arguments (93ms)         ✓ can return arguments object as array (43ms)         ✓ can pass object literal (41ms)         ✓ WebElement arguments are passed as DOM elements (94ms)         ✓ can pass array containing object literals (53ms)         ✓ does not modify object literal parameters (54ms)       https://code.google.com/p/selenium/issues/detail?id=8223         ✓ a for loop can build an array out of the index var, and return it (52ms)         1) a for loop can return an array built from elements passed in a list         2) a for loop can return an array built from elements passed in a nested object         ✓ nested recursive functions can return an array built from elements passed in a list (52ms)         3) nested recursive functions can return an array built from elements passed in a nested object     65 passing (21s)   3 failing    1) [firefox] executeScript https://code.google.com/p/selenium/issues/detail?id=8223 a for loop can return an array built from elements passed in a list:      CustomError: [] is not equal to [""fa"",""fe"",""fi""]       at Function.childCtor.base (/home/kandinski/code/selenium/third_party/closure/goog/base.js:2135:45)       at new goog.labs.testing.MatcherError (/home/kandinski/code/selenium/third_party/closure/goog/labs/testing/assertthat.js:56:34)       at Object.goog.labs.testing.assertThat (/home/kandinski/code/selenium/third_party/closure/goog/labs/testing/assertthat.js:42:11)       at webdriver.testing.Assertion.apply (/home/kandinski/code/selenium/javascript/webdriver/testing/asserts.js:153:23)       at webdriver.testing.Assertion.equalTo (/home/kandinski/code/selenium/javascript/webdriver/testing/asserts.js:346:15)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:304:38       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at Object.promise.asap (/home/kandinski/code/selenium/javascript/webdriver/promise.js:764:5)       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1641:15)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at fulfill (/home/kandinski/code/selenium/javascript/webdriver/promise.js:547:5)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:1501:10       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:711:33       at /home/kandinski/code/selenium/javascript/webdriver/http/http.js:97:5       at IncomingMessage. (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/http/index.js:131:7)       at IncomingMessage.EventEmitter.emit (events.js:117:20)       at _stream_readable.js:920:16       at process._tickCallback (node.js:415:13)   ==== async task ====   WebDriver.executeScript()       at webdriver.WebDriver.schedule (/home/kandinski/code/selenium/javascript/webdriver/webdriver.js:356:15)       at webdriver.WebDriver.executeScript (/home/kandinski/code/selenium/javascript/webdriver/webdriver.js:501:15)       at execute (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:309:33)       at Context. (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:252:9)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/testing/index.js:121:22       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at promise.ControlFlow.runEventLoop_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1499:8)       at wrapper [as _onTimeout] (timers.js:252:14)       at Timer.listOnTimeout [as ontimeout] (timers.js:110:15)   ==== async task ====       at Context.ret (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/testing/index.js:119:12)       at Test.Runnable.run (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runnable.js:217:15)       at Runner.runTest (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:373:10)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:451:12       at next (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:298:14)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:308:7       at next (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:246:23)       at Object._onImmediate (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:275:5)       at processImmediate [as _immediateCallback] (timers.js:330:15)    2) [firefox] executeScript https://code.google.com/p/selenium/issues/detail?id=8223 a for loop can return an array built from elements passed in a nested object:      CustomError: [] is not equal to [""fa"",""fe"",""fi""]       at Function.childCtor.base (/home/kandinski/code/selenium/third_party/closure/goog/base.js:2135:45)       at new goog.labs.testing.MatcherError (/home/kandinski/code/selenium/third_party/closure/goog/labs/testing/assertthat.js:56:34)       at Object.goog.labs.testing.assertThat (/home/kandinski/code/selenium/third_party/closure/goog/labs/testing/assertthat.js:42:11)       at webdriver.testing.Assertion.apply (/home/kandinski/code/selenium/javascript/webdriver/testing/asserts.js:153:23)       at webdriver.testing.Assertion.equalTo (/home/kandinski/code/selenium/javascript/webdriver/testing/asserts.js:346:15)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:304:38       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at Object.promise.asap (/home/kandinski/code/selenium/javascript/webdriver/promise.js:764:5)       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1641:15)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at fulfill (/home/kandinski/code/selenium/javascript/webdriver/promise.js:547:5)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:1501:10       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:711:33       at /home/kandinski/code/selenium/javascript/webdriver/http/http.js:97:5       at IncomingMessage. (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/http/index.js:131:7)       at IncomingMessage.EventEmitter.emit (events.js:117:20)       at _stream_readable.js:920:16       at process._tickCallback (node.js:415:13)   ==== async task ====   WebDriver.executeScript()       at webdriver.WebDriver.schedule (/home/kandinski/code/selenium/javascript/webdriver/webdriver.js:356:15)       at webdriver.WebDriver.executeScript (/home/kandinski/code/selenium/javascript/webdriver/webdriver.js:501:15)       at execute (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:309:33)       at Context. (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:263:9)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/testing/index.js:121:22       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at promise.ControlFlow.runEventLoop_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1499:8)       at wrapper [as _onTimeout] (timers.js:252:14)       at Timer.listOnTimeout [as ontimeout] (timers.js:110:15)   ==== async task ====       at Context.ret (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/testing/index.js:119:12)       at Test.Runnable.run (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runnable.js:217:15)       at Runner.runTest (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:373:10)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:451:12       at next (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:298:14)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:308:7       at next (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:246:23)       at Object._onImmediate (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:275:5)       at processImmediate [as _immediateCallback] (timers.js:330:15)    3) [firefox] executeScript https://code.google.com/p/selenium/issues/detail?id=8223 nested recursive functions can return an array built from elements passed in a nested object:      JavascriptError: Permission denied to pass object to chrome       at new bot.Error (/home/kandinski/code/selenium/javascript/atoms/error.js:113:18)       at Object.bot.response.checkResponse (/home/kandinski/code/selenium/javascript/atoms/response.js:106:9)       at /home/kandinski/code/selenium/javascript/webdriver/webdriver.js:373:20       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at fulfill (/home/kandinski/code/selenium/javascript/webdriver/promise.js:547:5)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:1501:10       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at /home/kandinski/code/selenium/third_party/closure/goog/base.js:1781:15       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at Object.listener.onFulfilled (/home/kandinski/code/selenium/javascript/webdriver/promise.js:454:14)       at promise.Promise.notify_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:404:14)       at promise.Promise.notifyAll_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:376:10)       at promise.Promise.resolve_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:359:10)       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:294:12       at /home/kandinski/code/selenium/javascript/webdriver/promise.js:711:33       at /home/kandinski/code/selenium/javascript/webdriver/http/http.js:97:5       at IncomingMessage. (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/http/index.js:131:7)       at IncomingMessage.EventEmitter.emit (events.js:117:20)       at _stream_readable.js:920:16       at process._tickCallback (node.js:415:13)   ==== async task ====   WebDriver.executeScript()       at webdriver.WebDriver.schedule (/home/kandinski/code/selenium/javascript/webdriver/webdriver.js:356:15)       at webdriver.WebDriver.executeScript (/home/kandinski/code/selenium/javascript/webdriver/webdriver.js:501:15)       at execute (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:309:33)       at Context. (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/test/execute_script_test.js:286:9)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/testing/index.js:121:22       at promise.ControlFlow.runInNewFrame_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1630:20)       at promise.ControlFlow.runEventLoop_ (/home/kandinski/code/selenium/javascript/webdriver/promise.js:1499:8)       at wrapper [as _onTimeout] (timers.js:252:14)       at Timer.listOnTimeout [as ontimeout] (timers.js:110:15)   ==== async task ====       at Context.ret (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/testing/index.js:119:12)       at Test.Runnable.run (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runnable.js:217:15)       at Runner.runTest (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:373:10)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:451:12       at next (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:298:14)       at /home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:308:7       at next (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:246:23)       at Object._onImmediate (/home/kandinski/code/selenium/javascript/node/selenium-webdriver/node_modules/mocha/lib/runner.js:275:5)       at processImmediate [as _immediateCallback] (timers.js:330:15)  kandinski@desire:~/code/selenium/javascript/node/selenium-webdriver$ ```","closed","","candeira","2014-12-02T23:54:08Z","2015-02-16T23:23:21Z"
"","16","Py23 - Changes to support Python 2.6+ and Python 3.1+ concurrently","These changes have been tested on Python 2.7.3 and 3.2.3.  Much of the work was done on time paid by Bluehost.com.  CLA has been signed.","closed","","intchanter","2013-02-18T21:23:02Z","2013-02-18T21:36:13Z"
"","420","WebDriver with SSL on Python 2.7.9","There's an issue with the WebDriver over SSL connections on Python 2.7.9 and selenium (2.45.0).   The host name is converted to an IP address in the init method of RemoteConnection and this causes this error (has actual values stripped out).  `""CertificateError: hostname '[IP_ADDRESS]' doesn't match either of '*.[HOSTNAME].com', '[HOSTNAME].com'""` Full trace in [this gist](https://gist.github.com/jkohls/51487215a08ee2023413).  Starting with Python 2.7.9 SSL connections have certificate validation on by default and will fail if the host names do not match.  For more information see.... https://www.python.org/dev/peps/pep-0476/ https://www.python.org/dev/peps/pep-0466/","closed","I-needs investigation,","jkohls","2015-04-06T20:56:59Z","2019-08-19T04:09:54Z"
"","359","FirefoxDriver with C# / Mono does not work","There is actually an existing bug report (https://code.google.com/p/selenium/issues/detail?id=3804), but I did not know if anybody would notice my reply there.  Summary: `IWebDriver Driver = new FirefoxDriver();` does not work for Mono, as the DotNetZip library (https://dotnetzip.codeplex.com/) is not platform independent and uses backslashes instead of Path.DirectorySeperator. This results in an exception:  ``` System.ArgumentException: Path is empty   at System.IO.Directory.CreateDirectory (System.String path) [0x00000] in :0    at Ionic.Zip.ZipEntry.InternalExtract (System.String baseDir, System.IO.Stream outstream, System.String password) [0x00000] in :0  ```  Actually, there is already a patch created by user moonverma, which should fix this issue (https://www.codeplex.com/Download?ProjectName=dotnetzip&DownloadId=905384). Unfortunately, it does not seem that there will be any new release soon (last update: 2011, and a bunch of open patches and issues).   To make a long story short, have you ever thought of providing a patched version of DotNetZip to enable FirefoxDriver in Mono?","closed","I-defect,","debuglevel","2015-03-22T19:36:17Z","2019-08-21T09:09:48Z"
"","268","provide ability to use custom annotations in page objects","There are two major changes in this PR: - split Annotations into abstract class and default implementation - extend DefaultElementLocator and AjaxElementLocator constructors to work with provided annotations","closed","C-java,","artkoshelev","2014-10-13T11:42:05Z","2015-03-14T11:09:31Z"
"","612","remove shebangs from all python source files","There are currently 125 python source files that are shebanged with: `#!/usr/bin/python`  `$ grep -r ""#!"" ./py | wc -l` `125`  This is not as good as: `#!/usr/bin/env python`   ... which is more portable of a shebang line. (your target interpreter may be located somewhere besides `/usr/bin/python`)  However, all 125 shebangs are unnecessary.  This is all library code, not meant to be run at the command line.  So python does nothing with shebangs in this case.  The selenium package does not have any setuptools entry-points, or bin scripts, so these can all be safely removed.  Also, consider that the codebase is both python2 and python3 compatible.  A py2-only shebang isn't always correct.","closed","","cgoldberg","2015-06-04T22:03:40Z","2019-08-21T11:09:44Z"
"","327","Ability to use types which extend WebElement. findElement/findElements methods","There are a lot of projects that extends Selenium Webdriver. And the returning of **WebElement** is not comfortable because there is the necessity to cast the result each time.  Here is the sample from Appium:  ``` java   (MobileElement) driver.findElementBy(By.class(""someClass"")) ```  In order to avoid this inconvenience these things are proposed: - now **SearcContext** and similar interfaces return the generic result insted of WebElement - this change is implemented by RemoteWebDriver and RemoteWebElement  It is backward compatible with current projects and it gives some more points: - now we can get RemoteWebElement directly  ``` java RemoteWebElement r =  driver.findElementBy(By.class(""someClass"")) ``` - if some project contains RemoteWebElement subclasses whose objects are returned using customized JsonToWebElementConverter implementions   then there is no need to cast the result each time.","closed","C-java,","TikhomirovSergey","2015-03-07T09:51:01Z","2015-03-14T00:41:20Z"
"","737","Error loading test case with selenium IDE","Then I setup browsers Firefox again. I open project.  I see error as below: error loading test case: [Exception... ""Component returned failure code: 0x8050000e (NS_ERROR_ILLEGAL_INPUT) [nsIScriptableUnicodeConverter.ConvertToUnicode]""  nsresult: ""0x8050000e (NS_ERROR_ILLEGAL_INPUT)""  location: ""JS frame :: chrome://selenium-ide/content/format.js :: Format.prototype.loadFile :: line 397""  data: no]  Can you help me. Thanks.","closed","C-ide,","muadong123","2015-07-06T05:44:15Z","2019-08-21T09:09:50Z"
"","571","Firefox 38 breaks with WebDriver 2.45.0","The webdriver 2.45 (FF) throws the following exception when trying to launch FF 38.   org.openqa.selenium.WebDriverException: Error forwarding the new session cannot find : Capabilities [{browserName=firefox, version=, platform=WINDOWS, firefox_profile=UEsDBBQACAgIAJtyukYAAAAAAAAAA...}] Command duration or timeout: 979 milliseconds Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: '0108M303077D', ip: '10.75.27.34', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_40' Driver info: org.openqa.selenium.remote.RemoteWebDriver","closed","","niranjala","2015-05-26T18:23:50Z","2019-08-21T09:09:38Z"
"","17","Typo in ThreadGuard.java","The test name had a typo.  There are no other references to this exception in the code, and the test is being discovered dynamically.","closed","","intchanter","2013-02-21T16:42:02Z","2014-07-05T10:56:22Z"
"","618","FirefoxDriver does not close FirefoxPortable when running close or quit method","The test is successful, but FirefoxPortable remains open after test. Reproduced with Windows7 Enterprise, FirefoxPortable_38.0.5_German, selenium 2.45.0 and JUnit 4.11).  Please try following to reproduce:  import java.io.File;  import static org.junit.Assert.assertEquals; import org.junit.Test;  import org.openqa.selenium.firefox.FirefoxBinary; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.firefox.FirefoxProfile; import org.openqa.selenium.remote.RemoteWebDriver;  public class UnitTest {     @Test     public void testCloseAndQuitFirefoxPortable() throws Exception {         FirefoxProfile ffProfile = new FirefoxProfile();         // The binary is installed from latest german version FirefoxPortable_38.0.5_German.paf.exe         FirefoxBinary ffBinary = new FirefoxBinary(new File(""X:/Applications/FirefoxPortable/FirefoxPortable.exe""));         RemoteWebDriver driver = new FirefoxDriver(ffBinary, ffProfile);         driver.get(""http://www.google.de"");         assertEquals(""Google"", driver.getTitle());         // Close the current window, quitting the browser if it's the last window currently open.         // TODO but is does not         driver.close();         // Quits this driver, closing every associated window         // TODO but is does not         driver.quit();     } }","closed","","tkleiber","2015-06-05T07:24:34Z","2019-08-21T11:10:01Z"
"","434","Firefox driver for Python 2.7 raises exception quit","The symptom is that the exception `CannotSendRequest` is encountered when the program executes the quit method of a Firefox WebDriver instance (example stack trace shown below). It appears that the code was written to handle exceptions emitted from `http.client`, but the version of `httplib` in Python 2.7 is raising exceptions that are subclasses of `HTTPException`.    File ""/workspace/SERVICES/tg.hdp-tests/HDPTests/hdp_tests/tools/run_firefox.py"", line 53, in method     driver.quit()   File ""/workspace/SERVICES/tg.hdp-tests/eggs/selenium-2.45.0-py2.7.egg/selenium/webdriver/firefox/webdriver.py"", line 67, in quit     RemoteWebDriver.quit(self)   File ""/workspace/SERVICES/tg.hdp-tests/eggs/selenium-2.45.0-py2.7.egg/selenium/webdriver/remote/webdriver.py"", line 457, in quit     self.execute(Command.QUIT)   File ""/workspace/SERVICES/tg.hdp-tests/eggs/selenium-2.45.0-py2.7.egg/selenium/webdriver/remote/webdriver.py"", line 173, in execute     response = self.command_executor.execute(driver_command, params)   File ""/workspace/SERVICES/tg.hdp-tests/eggs/selenium-2.45.0-py2.7.egg/selenium/webdriver/remote/remote_connection.py"", line 349, in execute     return self._request(command_info[0], url, body=data)   File ""/workspace/SERVICES/tg.hdp-tests/eggs/selenium-2.45.0-py2.7.egg/selenium/webdriver/remote/remote_connection.py"", line 379, in _request     self._conn.request(method, parsed_url.path, body, headers)   File ""/usr/local/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py"", line 995, in request     self._send_request(method, url, body, headers)   File ""/usr/local/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py"", line 1023, in _send_request     self.putrequest(method, url, **skips)   File ""/usr/local/Cellar/python/2.7.7_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py"", line 886, in putrequest     raise CannotSendRequest() CannotSendRequest:","closed","D-firefox,","jwb","2015-04-08T21:13:19Z","2019-08-19T14:09:54Z"
"","781","Chromedriver Ruby code does not close browser window","The Ruby code for the chormedriver does not appear to close the browser window.  When I run the following Ruby code, the chomedriver process quits, but the browser window is left open.  ``` require 'selenium-webdriver' driver = Selenium::WebDriver.for(:chrome, detach: false) ```  I'm using selenium-webdriver 2.46.2 with ruby 2.0.0p481 (2014-05-08 revision 45883) [universal.x86_64-darwin13] on Mac OS X 10.9.5.  I also see the same behavior on CentOS Linux.  (This issue isn't causing me any problems; I just happened to notice the behavior while investigating a different bug.)","closed","","kurmasz","2015-07-14T17:11:48Z","2019-08-21T08:09:52Z"
"","309","Removed duplicate code in python driver","The python driver contained an absurd amount of duplicate code involving find_element_\* and find_elements_*. By putting it in an Abstract Base Class we can ensure that any class that claims to use them fully implements it. Furthermore, this makes editing how they are performed very easy. For example, if a new type is added, you only have to put it in one place. Using an abstract base class means that if the find_element and find_elements methods are not implemented, an exception will be raised on import further ensuring safe use. Finally, it makes extension significantly easier. Although this could be further improved using injection rather than inheritance.  tl:dr; dried out some WET code.","closed","","timmartin19","2015-01-15T00:27:44Z","2015-02-26T00:03:51Z"
"","308","Removed duplicate code in python driver","The python driver contained an absurd amount of duplicate code involving find_element_\* and find_elements_*.  By putting it in an Abstract Base Class we can ensure that any class that claims to use them fully implements it.  Furthermore, this makes editing how they are performed very easy.  For example, if a new type is added, you only have to put it in one place.  Using an abstract base class means that if the find_element and find_elements methods are not implemented, an exception will be raised on import further ensuring safe use.  Finally, it makes extension significantly easier.  Although this could be further improved using injection rather than inheritance.  tl:dr; Changed dried out some WET code.","closed","","timmartin19","2015-01-15T00:13:54Z","2015-01-15T00:22:18Z"
"","171","Added locator support to frame_to_be_available_and_switch_to_it().","The Python bindings currently only allow frame ID or frame index to be passed to expected_conditions.frame_to_be_available_and_switch_to_it(). It should also be able to receive a locator, like most (all?) of the other expected_condition methods.  This also brings the Python API in line with the Java API, which has two method signatures for frameToBeAvailableAndSwitchToIt(): - public static ExpectedCondition frameToBeAvailableAndSwitchToIt(java.lang.String frameLocator) - public static ExpectedCondition frameToBeAvailableAndSwitchToIt(By locator)  I have signed the CLA.","closed","","magnuseh","2014-02-24T14:51:19Z","2014-02-28T20:22:52Z"
"","173","Perl formatter improvement","The patch improves Perl code on non-ascii output. It reduces charactor corruption and well known warnings 'Wide character in print'.  It also change the literal delimiter from """"  to '' or q{} or q() to reduce variable escaping so that the test cases get more readable.  Since I haven't figure out how to build xpi so far, the patch is not properly tested.","closed","C-ide,","jamadam","2014-02-26T03:15:18Z","2015-03-15T21:53:05Z"
"","158","Update DesiredCapabilities doc comments to use .copy() in the examples.","The only things I changed was adding a .copy() to where DesiredCapabilities are used, and spacing cleanup (removed tabs from one of the files).  I couldn't figure out the squash the commits.","closed","","dlai0001","2014-01-03T19:16:09Z","2014-01-03T19:50:54Z"
"","368","Update KB3032359 breaking IE driver","The KB3032359 update from march 10 breaks the Internet Explorer driver.  Environment: Windows 8.1 64bit, IE11, IEDriver 32bit 2.45  To reproduce:  ``` c# var driver = new InternetExplorerDriver(); driver.Navigate().GoToUrl(@""http://www.google.com""); driver.FindElementByName(""q"").SendKeys(""ok""); ```  The last line throws ElementNotFoundException and the log indicates an ""Access denied"" error on IHTMLWindow2::execScript. It seems to be related to execScript being deprecated: https://connect.microsoft.com/IE/feedback/details/1062093/installation-of-kb3025390-breaks-out-of-process-javascript-execution-in-ie11  I have the registry key ""FEATURE_DISABLE_INTERNAL_SECURITY_MANAGER"" set to 1, but this workaround for the kb3025390 doesn't work with this new update.","closed","I-needs investigation,","florentbr","2015-03-25T07:11:33Z","2019-08-21T15:10:00Z"
"","311","Added TouchSequence and driver.touchActions() to enable touch actions in JavaScript bindings","The JavaScript bindings were missing touch actions so I plumbed them in. I am not, however, a JavaScript coder so I largely copied from `actionsequence.js`. Code should be checked over for JavaScript style mistakes as such.  Some duplicated code could be collapsed into reusable functions but since there are so few actions I didn't bother. Tested manually as well as possible.  Actions with just coordinates may be better taking just x and y as their arguments.","closed","","dsanders11","2015-02-03T03:36:52Z","2020-10-13T19:38:05Z"
"","472","Selenium grid tests lose frame focus intermittently with Webdriver 2.45.0 and Firefox 37.0.1","The issue started happening when firefox web browser got updated from 35,0.1 to 37.0.1. All of the tests that were working before stated failing and then we noticed that this happened because the tests seems to be losing frame focus.  The only way we could get the tests to work again was by using this section of code below  ```         if (strBrowser.equals(""firefox""))         {             driver.switchTo().defaultContent();             // Move into Appframe             myHtml.waitAndSwitchFrame(""AppFrame"") ;         } ```  waitAndSwitchFrame method is below  ``` public void waitAndSwitchFrame(String frameName)  {     BaseTest myBaseTest = new BaseTest();     if (frameName == null)     {         myBaseTest.log.error("" Class: html | Function: waitAndSwitchFrame : Frame name is null or invalid."");         return;     }     WebDriverWait wait = new WebDriverWait(driver, explicitWaitTime);     wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(frameName));     try     {         Thread.sleep(1000);     }      catch (InterruptedException e)     {         myBaseTest.log.error(e.getMessage(), e);     }      myBaseTest.log.info("" Class: html | Function: waitAndSwitchFrame : Frame switch completed"");     driver.manage().timeouts().implicitlyWait(implicitWaitTime, TimeUnit.SECONDS); } ```     When we tried again the same code without the update on the hosts that were still on 35.0.1, the tests work without the switch Frame. This also seems intermittent that this works sometimes and not others.","closed","D-firefox,","ramviv","2015-04-20T19:17:34Z","2019-08-21T04:10:00Z"
"","15","Fix storyboards for consistency","The ipad and iphone storyboards were different. In this case, that caused two problems:  1: The status bar did not align properly when the app was compiled with only landscape as a supported orientation.  2: The status text never showed up when the app was forced landscape on ipad.  This fixes both issues and doesn't change functionality for the normally compiled app.  I signed the CLA.","closed","","maudineormsby","2013-02-14T19:34:25Z","2013-02-14T22:12:14Z"
"","111","Added WebDriver for Safari to python bindings.","The implementation is based on that of the Opera WebDriver. I'm not sure whether that's the appropriate way though. Please let me know!  I've added some basic tests. If merged then this would fix issue 5352. By the way, I have signed the CLA.","closed","","jphalip","2013-09-07T04:48:12Z","2013-09-12T12:00:20Z"
"","473","`isElementPresent()` won't resolve","The following test works for me:  ``` var someElement = yield browser.$('.class-of-existing-element'); // perform test on someElement ```  However, if I only want to check if element is displayed, the following doesn't work  ``` var elementPresent = yield browser.isElementPresent('.class-of-existing-element'); t.ok(elementPresent, 'element should present on page'); ```  In fact, as a result of this latter code, I can see selenium spins up a webpage but stays forever without resolving and terminating the test.  `isElementPresent` is documented [here](http://selenium.googlecode.com/git/docs/api/javascript/class_webdriver_WebDriver.html#isElementPresent).   OS: Mac Maverick.","closed","","khanh-nguyen","2015-04-20T20:56:12Z","2019-08-21T14:09:50Z"
"","463","After operation on the page at 1st url, the 2nd url is not loaded by webdriver leading to fails in locating elements","The following java code  ``` java package ua.net.itlabs;  import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class TwoUrlsTest {      @Test     public void test2Urls(){         WebDriver d = new FirefoxDriver();         d.get(""http://google.com/ncr"");         d.findElement(By.cssSelector(""[name='q']"")).sendKeys(""something"");         d.findElement(By.cssSelector(""[name='q']"")).sendKeys(Keys.RETURN);         d.get(""http://todomvc.com/examples/troopjs_require/#/"");         d.findElement(By.cssSelector(""#new-todo"")).sendKeys(""task1"");     } } ```  leads to `org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""css selector"",""selector"":""#new-todo""}`  Full error message at: https://www.refheap.com/99721  The reason is: webdriver did not loaded 2nd url, at `d.get(""http://todomvc.com/examples/troopjs_require/#/"");` and did tell nothing about this. At least the latter ""wordless ignoring"" seems buggy.  Versions: Selenium 2.45.0 Firefox 34  P.S. The same in python (see example in https://www.refheap.com/99717)","closed","D-firefox,","yashaka","2015-04-17T13:26:52Z","2019-08-17T19:09:52Z"
"","229","Fix for issue 7272 Unable to bind port 7054","The following fix is for the ""unable to bind port 7054"" issue that has been reported in https://code.google.com/p/selenium/issues/detail?id=7272.  The issue was mainly because of the unlimited wait that is being used while cleaning the firefox profile. Added support for waiting with a given timeout.","closed","","menonvarun","2014-06-23T12:03:23Z","2014-06-24T21:59:45Z"
"","715","Control flow deadlock","The following code snippet gets webdriver into a deadlock. I believe this is a bug (or let me know if I'm using webdriver improperly somehow.)  ``` javascript var webdriver = require('selenium-webdriver'); var driver = new webdriver.Builder().   usingServer('http://localhost:4444/wd/hub').   withCapabilities(webdriver.Capabilities.chrome()).   build();  var flow = webdriver.promise.controlFlow(); var locator = webdriver.By.css('.hello-code');  flow.execute(function() {   driver.get('http://www.angularjs.org'); });  flow.execute(function() {   var helloCodeText = driver.findElements(locator).then(function(webElements) {     return webElements[0].getText();   })    flow.execute(function() {     return helloCodeText.then(function() {       console.log(""SUCCESS"");     });   });    driver.findElement(locator).getText();    webdriver.promise.fulfilled().then(function() {     return driver.findElements(locator);   }).then(function(webElements) {     return webElements[0].getText();   }); });  driver.quit(); ```","closed","","hankduan","2015-06-26T22:34:38Z","2019-08-21T10:09:37Z"
"","28","Fix Element::IsAttachedToDom() when used with SVG for IEDriver","The first commits are already in https://github.com/SeleniumHQ/selenium/pull/27. CLA signed","closed","","paroga","2013-03-12T12:38:02Z","2013-04-11T02:08:01Z"
"","307","Assorted minor fixes","The externs.js and http.js changes should be no-ops from a functionality standpoint (they appease the compiler).","closed","","juangj","2015-01-13T03:58:05Z","2015-02-27T13:24:59Z"
"","432","Atom errors should define W3C WebDriver error strings","The error types used in the atoms should also define the error strings prescribed in the W3C WebDriver specification's [Error Handling](https://w3c.github.io/webdriver/webdriver-spec.html#handling-errors) section.  We can add these using a new property, `status`, to achieve backwards compatibility with existing driver implementations.","closed","I-papercut,","andreastt","2015-04-08T16:49:40Z","2019-08-21T15:09:36Z"
"","255","Fix example code: ""using(-Chrome)DriverExecutable""","The documentation refers to a nonexistent method `usingChromeDriverExecutable`. Changing it to `usingDriverExecutable`.","closed","","chris-martin","2014-09-09T01:45:28Z","2014-09-09T07:00:48Z"
"","540","Returning a recursive structure from executeScript() hangs/crashes browser","The documentation of `executeScript()` and `executeAsyncScript()` does not contain any information how recursive structures are handles and that's because they _aren't_.  In Firefox, an attempt to return a recursive structure briefly hangs the browser and then the command silently fails without ever returning, i.e. the test script is blocked forever as it waits for the Firefox extension to return anything.  On Internet Explorer, this usually leads to a crash.  Selenium version: 2.43.1","closed","D-IE,","lqc","2015-05-14T13:10:46Z","2019-08-14T06:09:35Z"
"","484","JS: Be tolerant about trailing slash on server URL","The current JS client just appends to the given server URL. In case that already has a trailing /, another one will just be appended, e.g.  localhost:1234//wd/hub","closed","","dbo","2015-04-24T12:36:46Z","2019-08-21T13:09:36Z"
"","214","Fixes some inconsistencies in ElementFindingTest.java","The convention is for almost all 87 methods in the ElementFinding-TestSuite as follows: - If a testMethodName endsWith: „shouldThrow“ the test expects a NoSuchElementException.class  6 methods do not follow this convention. This patch fixes it.  SideNote: This makes implementing WebDrivers easier, since one can implement one ValidationRule, which fulfills the convention mentioned above instead of sometimes throwing Exceptions and sometimes returning 0.","closed","","weitzj","2014-05-05T01:32:52Z","2014-05-05T06:51:39Z"
"","427","OutOfMemoryError caused by UnixProcess holding all output written to stdout","The class org.openqa.selenium.os.UnixProcess contains the following method:  private final ByteArrayOutputStream inputOut = new ByteArrayOutputStream();  private OutputStream getOutputStream() { return drainTo == null ? inputOut : new MultioutputStream(inputOut, drainTo); }  The variable inputOut is a ByteArrayOutputStream, holding anything that is written in stdout into an array of bytes. The contents are never eliminated, therefore, all output is accumulated, eventually producing the OutOfMemoryError.","closed","I-needs investigation,","cerebrotecnologico","2015-04-07T18:00:51Z","2019-08-20T13:09:50Z"
"","335","java changelog is not available","The changelog link for the java 2.45.0 release on the http://www.seleniumhq.org/download/ page leads to 404 page","closed","","dr29bart","2015-03-16T18:32:13Z","2019-08-21T16:09:47Z"
"","259","Fix return types Actions and TouchActions classes.","The challenge of the builder pattern when extending the class is that the subclass must either redefine all the methods of the parent class or the subclass will return instances with a static type signature of the parent class.  For example the following would fail to compile without this patch: new TouchActions(driver).click().singleTap(element). Selfishly I would like to see this patch get accepted to fix these same bugs in my own subclass of the Actions class that might eventually become its own pull request.  I have filled in the CLA agreement.","closed","C-java,","mspiegel","2014-09-26T03:34:36Z","2016-08-25T19:56:40Z"
"","546","Adding Python code to launch BlackBerry browser automatically","The BlackBerry10 browser doesn't launch automatically with WebDriver, which makes automated testing problematic. This patch enables the automatic launching of the BlackBerry10 browser, if the user has the proper env. setup.  This patch assumes the IP/port of the device. The user must provide location of required tools and device password.  I have signed a CLA for BlackBerry already.","closed","R-needs code changes,","glasspear","2015-05-15T20:10:00Z","2015-05-20T22:26:08Z"
"","764","Untested Commit with Syntax Error in Python Merged","The below commit   https://github.com/SeleniumHQ/selenium/commit/08882053  Was merged and it has python syntax error as well. I am not sure how it got missed. Any thoughts on this?","closed","C-infra,","tarunlalwani","2015-07-10T12:47:24Z","2019-08-17T14:09:46Z"
"","294","README: Fix the Yahoo example","The `browser.title` only contains 'Yahoo' now (without the '!'):  ``` >>> from selenium import webdriver >>> browser = webdriver.Firefox() >>> browser.get('http://www.yahoo.com') >>> browser.title u'Yahoo' ```  So the assert statement fails. This commit fixes the problem.  I have signed the CLA.","closed","","certik","2014-12-01T19:59:11Z","2014-12-02T01:22:04Z"
"","483","JS: buggy passing of URL base path to chromedriver","The --url-base parameter is passed as --url-base= whereas chromedriver expects it as --url-base .","closed","","dbo","2015-04-24T12:35:31Z","2019-08-21T14:09:44Z"
"","370","Selenium IDE - Scheduler icon tool tip a little confusing.","Thanks so much for the new Selenium IDE Scheduler... I'm really enjoying using it.  One suggestion, the clock tooltip reads ""Turn test scheduler on/off"" whether it is currently on or off.  It would be great if the tooltip would make it clear which state it is in.   I like how the Record icon tool tip reads either ""Click to Record"" or ""Now Recording, Click to Stop Recording"".  How about something like: -  ""Click to turn Scheduler on""   - ""Scheduler now on, Click to turn Scheduler off""  Thanks,          Jeff","closed","C-ide,","JavaJeffG","2015-03-25T16:07:05Z","2019-08-21T13:09:44Z"
"","457","adding ExpectedConditions for URLs (contains, toBe, and matches regex)","Tested with these tests:  ``` java     Wait wait = new WebDriverWait(driver, 5);     driver.get(""http://ddavison.io/tests/getting-started-with-selenium.htm"");     driver.findElement(By.id(""redirect"")).click();     wait.until(ExpectedConditions.urlMatches("".*google.*"")); ```  ``` java     Wait wait = new WebDriverWait(driver, 5);     driver.get(""http://ddavison.io/tests/getting-started-with-selenium.htm"");     driver.findElement(By.id(""redirect"")).click();     wait.until(ExpectedConditions.urlContains(""google"")); ```  ``` java     Wait wait = new WebDriverWait(driver, 5);     driver.get(""http://ddavison.io/tests/getting-started-with-selenium.htm"");     driver.findElement(By.id(""redirect"")).click();     wait.until(ExpectedConditions.urlToBe(""https://www.google.com/?gws_rd=ssl"")); ```  **Note**:  This, of course, only applies within the given context.  Opening a tab for example, this will have no effect without first changing the context.","closed","","ddavison","2015-04-15T15:37:27Z","2015-04-16T18:50:59Z"
"","283","Fix most (I hope) instances of Unable to establish a connection with SafariDriver","Tested on: - OSX 10.8.5 - OSX 10.10 - Win 7 Safari 5.1.7  Issues: #7933, #7963, #7974, 7801  Refactor how the extension installation happens by splitting the installer into multiple Platform specific installers. If the installation still fails, provide a much more detailed explanation as to why the failure occurred and suggestions how to fix it.  Conflicts:     java/client/src/org/openqa/selenium/safari/SafariExtensions.java","closed","","dimacus","2014-11-14T17:16:58Z","2015-02-02T19:39:46Z"
"","378","perform() explodes on webdriverjs 2.45.x","Take this simple example:  ``` javascript var webdriver = require('selenium-webdriver');  var driver = new webdriver.Builder().    withCapabilities(webdriver.Capabilities.chrome()).    build();  driver.get('http://www.google.com'); var searchBox = driver.findElement(webdriver.By.name('q')); driver.actions().mouseMove(searchBox).perform(); searchBox.sendKeys('awesome'); searchBox.getAttribute('value').then(function (value) {   console.info('awesome'); });  driver.quit(); ```  Run it on 2.44 and it will work just fine, fails on 2.45. Comment out the actions/perform line and it works. I have found that regardless of the placement, action, or context this command just fails now. **Also this is an issue with the driver as the results are identical with every browser and versions 2.44 and 2.45 of selenium server. It also happens for every action I tried, move, click, etc**  Error in this particular example:  ``` StaleElementReferenceError: stale element reference: element is not attached to the page document   (Session info: chrome=41.0.2272.104)   (Driver info: chromedriver=2.14.313457 (3d645c400edf2e2c500566c9aa096063e707c9cf),platform=Mac OS X 10.10.2 x86_64) ```  Though I have also seen _Unknown Error: null_","closed","I-regression,","scott2449","2015-03-27T01:04:51Z","2019-08-21T15:09:44Z"
"","25","Fix bot.dom.scrollRegionIntoView() for SVG documents","SVG documents do not have a body attribute. Check for its existence before accessing it.  CLA signed","closed","","paroga","2013-03-06T14:01:47Z","2013-03-11T16:57:11Z"
"","272","Make Opera driver support also the new Blink based Opera","Support for Chromium based Opera. Presto support is retained. The selenium.webdriver.opera.WebDriver handles both PRESTO and CHROMIUM engines for desktop platforms, the default is PRESTO. Android is supported only by the new OperaDriver.  @andreastt suggested that it might be good to introduce separate driver class in selenium.webdriver. **init**.py. If not, it might be good to add desktop browser detection (Presto or Chromium based) - it can be done using 'opera --version' commands and other information.","closed","","emakiej","2014-10-20T20:16:40Z","2014-12-03T23:02:39Z"
"","14","[FIX] avoid UnreachableBrowserException when creating WebDriver instance","Summary: Avoid multiple call for org.webbitserver.HttpResponse#end(), which flushes http response to tcp stream in rare cases. This causes UnreachableBrowserException when creating WebDriver instance (see exception message below [*1]).  Detail: When a test code creates WebDriver instance, WebDriver(client) sends new session request. If WebDriver(server) receives that request, server renders response using RedirectResult#render() and flushes it using WebbitHttpResponse#end(). But there's a issue that WebbitHttpResponse#end() is called two times (see below[*2]). WebbitHttpResponse#end() calls Webbit's NettyHttpResponse#end() that flushes http response to tcp stream. So WebDriver client gets same response two times as described below:  > HTTP/1.1 303 See Other  > Location: /wd/hub/session/  If WebDriver client gets redirect response two times, a CircularRedirectException will be thrown by apache http client which results in UnreachableBrowserException. That's why WebbitHttpResponse should call webbit's HttpResponse#end() just one time.  Remarks: (*1) UnreachableBrowserException Stacktrace  ``` java org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '2.29.0', revision: '58258c3', time: '2013-01-17 22:47:00' System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.6.8', java.version: '1.6.0_39' Driver info: driver.version: AndroidDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:527)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:216)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:111)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:129)     at org.openqa.selenium.android.AndroidDriver.(AndroidDriver.java:81)     at org.openqa.selenium.android.AndroidDriver.(AndroidDriver.java:73)     at ReproductionTest.setup(ReproductionTest.java:42)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)     at java.lang.reflect.Method.invoke(Method.java:597)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:27)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)     at org.junit.runners.ParentRunner.run(ParentRunner.java:300)     at org.junit.runners.Suite.runChild(Suite.java:128)     at org.junit.runners.Suite.runChild(Suite.java:24)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)     at org.junit.runners.ParentRunner.run(ParentRunner.java:300)     at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)     at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) Caused by: org.apache.http.client.ClientProtocolException     at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:909)     at org.openqa.selenium.remote.HttpCommandExecutor.fallBackExecute(HttpCommandExecutor.java:331)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:310)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:506)     ... 38 more Caused by: org.apache.http.client.CircularRedirectException: Circular redirect to 'http://192.168.0.7:8080/wd/hub/session/5559153d-0123-446d-9be4-02e01c8a33c3'     at org.apache.http.impl.client.DefaultRedirectStrategy.getLocationURI(DefaultRedirectStrategy.java:175)     at org.apache.http.impl.client.DefaultRedirectStrategy.getRedirect(DefaultRedirectStrategy.java:209)     at org.apache.http.impl.client.DefaultRequestDirector.handleResponse(DefaultRequestDirector.java:1068)     at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:545)     at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:906)     ... 41 more ```  (*2) Caller of WebbitHttpResponse#end() first one is: - org.openqa.selenium.remote.server.rest.ResultConfig#handle()  second one is either of them below: - org.openqa.selenium.remote.server.renderer.JsonResult#render()  - org.openqa.selenium.remote.server.renderer.RedirectResult#render()    -> org.openqa.selenium.remote.server.WebbitHttpResponse#sendRedirect()  Reproduction Code:  ``` java import java.util.ArrayList; import java.util.List; import org.junit.After; import org.junit.Before; import org.junit.Test; import org.junit.runner.RunWith; import org.junit.runners.Parameterized; import org.junit.runners.Parameterized.Parameters; import org.openqa.selenium.WebDriver; import org.openqa.selenium.android.AndroidDriver; import org.openqa.selenium.remote.UnreachableBrowserException;  @RunWith(Parameterized.class) public class ReproductionTest {     WebDriver driver = null;      public ReproductionTest(String dummy) {     }      @Parameters     public static List dummyData() {         // Dummy parameter method.         // This is just for calling setup/tearDown method many times.          int params = 1000;          List dummy = new ArrayList();         for(int i = 0; i < params; i++) {             dummy.add(new String[] { """" });         }          return dummy;     }      @Before     public void setup() throws Exception {         try {             driver = new AndroidDriver();         } catch(UnreachableBrowserException e) {             e.printStackTrace();              // sleep for a while to stop junit             Thread.sleep(10 * 60 * 1000);         }     }      @After     public void tearDown() {         driver.quit();     }      @Test     public void testDummy() throws Throwable {         // do nothing     } } ```","closed","","curva","2013-02-12T15:35:02Z","2014-07-07T06:29:01Z"
"","606","storeElementPresent","storeElementPresent is OK (true), if the element is present.  If the element is not present, storeElementPresent return [error] Unexpected Exception: TypeError: inWindow.frames[i] is undefined.  instead of (false). the script stopps here.  this is not expected result. what ist the problem? all other tests (for example waitForElementPresent) dont return such error","closed","","dbase66","2015-06-03T08:36:29Z","2019-08-21T12:09:45Z"
"","537","WebDriver does not support testing LocalStorage functionality for html5 app for different url's","Steps to Reproduce: Step 1- Opens a url (www.abc.com/html/?storeId=01) does some config changes in the UI. Step 2- Then open a url (www.abc.com/html/?storeId=20) does some other changes in this UI. Step 3- Load the url mentioned in step 1 and check that UI is loaded with data from previously loaded LocalStorage  data for storeId 01.  Actual Result: Everytime url is loaded with default config.  Expected Result: Everytime url should load with default config.  Solutions tried- 1- Setting webStorageEnabled capability in desired capability. 2- Also tried using org.openqa.selenium.html5.LocalStorage, but getting class cast exception while casting webdriver to localstorage.  I am using latest WebDriver version.  Please suggest.","closed","","santosh-sahoo","2015-05-12T16:04:47Z","2019-08-21T13:09:52Z"
"","735","IEDriverServer doesn't use the SocksProxy settings","Steps to reproduce: Run the below C# code  ```         Proxy GetProxy(string IP, string port) {             return new Proxy{                 Kind = ProxyKind.Manual,                 IsAutoDetect = false,                 SocksProxy = IP + "":"" + port             };         }          void BtnLaunchIEClick(object sender, EventArgs e)         {             var proxy = GetProxy(""127.0.0.1"", ""8080"");              var options = new InternetExplorerOptions();              options.Proxy = proxy;             options.UsePerProcessProxy = false;              var driver  = new InternetExplorerDriver(options);             driver.Url = ""http://www.tarlabs.com"";         } ```  Expected:  Socks Proxy will be set  Actual: Socks Proxy settings is not set  Issue:  ``` std::wstring ProxyManager::BuildProxySettingsString() {   LOG(TRACE) proxy_type_ == WD_PROXY_TYPE_MANUAL) {     if (this->http_proxy_.size() > 0) {       proxy_string.append(""http="").append(this->http_proxy_);     }     if (this->ftp_proxy_.size() > 0) {       if (proxy_string.size() > 0) {         proxy_string.append("" "");       }       proxy_string.append(""ftp="").append(this->ftp_proxy_);     }     if (this->ssl_proxy_.size() > 0) {       if (proxy_string.size() > 0) {         proxy_string.append("" "");       }       proxy_string.append(""https="").append(this->ssl_proxy_);     }   } else if (this->proxy_type_ == WD_PROXY_TYPE_AUTOCONFIGURE) {     proxy_string = this->proxy_autoconfigure_url_;   } else {     proxy_string = this->proxy_type_;   }   LOG(DEBUG)","closed","","tarunlalwani","2015-07-04T09:27:01Z","2019-08-21T09:09:52Z"
"","548","implicitlyWait method throws exception if an alert is open or if the page is not fully loaded","Steps to reproduce: 1. perform an action that generates a browser pop-up alert or causes the page to load slowly 2. try to change the implicit wait while the alert is open or the page loads  Expected results: the implicit wait is successfully changed  Actual results: an UnhandledAlertException exception is thrown in case an alert is open or an WebDriverException (Error communicating with the remote browser. It may have died.) is thrown.","closed","","kistvan-odon","2015-05-18T10:30:48Z","2019-08-21T13:09:46Z"
"","518","Unable to get control(accessibility) over addons/extensions in Firefox using Selenium","Steps to reproduce - 1)Install Firefox 36.  2)﻿Search Videodownload helper and install the extension 3) ![screenshot 2015-05-05 17 12 41](https://cloud.githubusercontent.com/assets/9588987/7471923/4ec9b73e-f34a-11e4-9000-5e606cf3ab69.png) Use selenium to capture controls for the installed extension  Actual Result :  Unable to get control over addons/extensions in Firefox using Selenium   Expected Result :  Should get control over addons/extensions in Firefox using Selenium","closed","","lokeshksymantec","2015-05-05T11:45:37Z","2019-08-21T14:09:34Z"
"","164","Chrome 33 stopped supporting selection for some elements, according to the spec. Fixing tests.","Starting with Chrome 33, certain types of input elements do not support the selection API (in fact, they throw when you try to access the property). This prevents us from fully simulating typing in the atoms.  Try to case these cases and throw a more descriptive error, pointing the user at https://code.google.com/p/chromium/issues/detail?id=330456 so they have the proper context for why typing no longer works as ## expected.  Created by MOE: http://code.google.com/p/moe-java","closed","","sevaseva","2014-01-28T01:55:57Z","2014-01-29T08:47:40Z"
"","129","Make org.openqa.selenium.Cookie serializable","Sometimes we need to store cookies in MongoDB so we need either Cookie to be serializable or to write some wrappers to perform this. As Cookie was not serializable this made us to write wrappers and use them every time we want to store cookie in MongoDB but this seems to be useless extra work so in this pull request i made Cookie serializable and wrote simple test to check, that cookie correctly serializes and deserializes.","closed","","eoff","2013-10-27T23:36:35Z","2014-06-14T06:06:08Z"
"","24","Call scrollIntoView only if supported by the element","Some elements may not a scrollIntoView function - for example, elements under an SVG element. Call those only if they exist.  CLA signed","closed","","paroga","2013-03-06T13:57:49Z","2014-07-12T00:22:23Z"
"","514","HtmlUnit 2_16 cleanup","some code cleanup of the HtmlUnit adapter","closed","","rbri","2015-05-01T17:06:57Z","2015-05-05T19:00:18Z"
"","87","[SafariDriver] [Java] Support custom extensions for Safari / SafariOptions API","Solves https://code.google.com/p/selenium/issues/detail?id=4852  I've created a new class (`SafariOptions`) which allows one to add one or more custom extensions. To make it easier for developers to use it, the method name and signature is similar to `ChromeOptions`'s `addExtensions(File...)`.  This PR does not only bring extensions. It also separated the options from the SafariDriver. The old capabilities are still supported, but have been deprecated.  All new APIs are well-documented, so regenerating the javadocs after acceptance makes sense. ### Example of installing extension  ``` java SafariOptions options = new SafariOptions(); options.addExtensions(new File(""path/to/extension.safariextz""));  // Local WebDriver driver = new SafariDriver(options);  // Remote WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub""), options.toCapabilities()); ``` ### Tests  Three tests have been added: - Verify that not using the new capability does not change old behavior - Verify that an extension is installed, if specified. - Verify that an extension is removed when the browser quits.  I've also patched the implementation of the `DriverCommand.QUIT` method, by closing the Web Socket connection in Java instead of sending QUIT to the Safari extension (the Safari extension silently ignores the command).   Before this fix, invoking `safariDriver.quit()` would always cause an IOException to be thrown: ""An existing connection was forcibly closed by the remote host"".  Another problem was that an existing test class did not inherit from SafariTestBase. This caused several tests to behave badly, which has also been fixed. ### Ideas for future improvements  My current objective was to automate the tests of a Safari extension. Others might actually want to preserve the existing set of installed extensions, instead of adding new ones. In order to achieve this, use a third-party library (such as https://code.google.com/p/plist/) to parse `Extensions.plist`, and add the WebDriver Safari extension by appending values to Extensions.plist instead of overwriting it. ### Signed SFC  I've signed the [SFC Individual Contributor License Agreement](https://spreadsheets.google.com/spreadsheet/viewform?hl=en_US&formkey=dFFjXzBzM1VwekFlOWFWMjFFRjJMRFE6MQ).","closed","","Rob--W","2013-06-16T21:31:01Z","2017-05-29T11:05:35Z"
"","253","DOCS reword WebElement.click() docs in re: wait for page load","So that most common case, ie native events and consequently no wait for page load, is explained explicitly. cf mailing list discussion https://groups.google.com/forum/#!topic/selenium-developers/hA_jTx4vrDM  NB change made in javadoc, html docs NOT rebuilt","closed","","hjwp","2014-09-05T08:47:30Z","2015-03-02T20:42:53Z"
"","244","Python driver: add ""quiet"" option to Safari Webdriver","so Popen sends all output from the Selenium JAR to os.devnull  Defaults quiet to False, so existing behavior remains unchanged.  I've signed the agreement.","closed","","charlesthomas","2014-08-01T18:56:37Z","2014-10-18T14:22:21Z"
"","543","isDisplayed threw NoSuchElementException when element invisible","so i have  @FindBy(xpath = ""//div[@data-tips-name='fillSelected']//div[@data-id='fillSelected']/i"") private WebElement ppPreviousFiles_btnClearAll;  and i want see if element visible and I know that he invisible at that moment http://prntscr.com/7562m2 calling ppPreviousFiles_btnClearAll.isDisplayed();  but instead of ""false"" i get NoSuchElementException http://prntscr.com/7561fy","closed","","sirdir","2015-05-14T16:50:37Z","2019-08-21T13:09:50Z"
"","574","[issue 573] fixing parameter","Small fix, signed the CLA for previous pull requests already.","closed","","dbo","2015-05-27T09:15:08Z","2015-06-07T02:31:46Z"
"","178","IE: Don't unnecessarily resize for screenshots","Skips resizing the browser window if the new size would be smaller than the current size.  Fixes issue 6503 - IE8 is unnecessarily (and incorrectly) resized before screenshots  https://code.google.com/p/selenium/issues/detail?id=6503","closed","D-IE,","zch","2014-03-03T13:37:24Z","2015-09-22T16:53:02Z"
"","452","Problem with Firefox 37.0.1 with Selenium 2.45.0 (Permission denied to access property ""handleEvent"")","Since FF version 36.0 we have this problem. The problem basically happens when webdriver is triggering click event on an element during test execution. This problem happens quite randomly on elements in a same page that webderiver wants to trigger their click events. One workaround that I did to fix this issue was to add 'Driver.switchTo().activeElement()' before clicking on the element and the error doesn't happen again. The problem is that now we have over 100 test cases and it seems we have to put this code snippet before all the click events!  Any idea why is this happening?  Below is the stack trace: org.openqa.selenium.WebDriverException: Permission denied to access property ""handleEvent"" Command duration or timeout: 116 milliseconds Build info: version: '2.45.0', revision: '32a636c', time: '2015-03-05 22:01:35' System info: host: 'xxxx', ip: 'my ip address', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_67' **\* Element info: {Using=css selector, value=div div.acknowledge-warning-container a.acknowledge-warning} Session ID: 1e3b4b2b-d776-4e39-8056-29874789dc1c Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=37.0.1}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:441)     at org.openqa.selenium.By$ByCssSelector.findElement(By.java:426)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)     at hbon.web.utility.HBONSetup.InitiateSetUp(HBONSetup.java:96)     at hbon.web.utility.HBONSetup.InitiateSetUp(HBONSetup.java:71)     at hbon.web.InfoButtonTest.setUp(InfoButtonTest.java:25)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)     at org.junit.runners.ParentRunner.run(ParentRunner.java:309)     at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)     at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197) Caused by: org.openqa.selenium.WebDriverException: Permission denied to access property ""handleEvent"" Build info: version: '2.45.0', revision: '32a636c', time: '2015-03-05 22:01:35'","closed","","fazeli","2015-04-14T09:03:20Z","2019-08-21T13:09:38Z"
"","120","Update ChromeDriverDownloadUrl field in ChromeDriverService.cs to new URL","Since `chromedriver 18.0` (Janurary 2012), ChromeDriver is no longer available for downloading at [http://code.google.com/p/chromium/downloads/list](http://code.google.com/p/chromium/downloads/list), but migrated to  [http://code.google.com/p/chromedriver/downloads/list](http://code.google.com/p/chromedriver/downloads/list).  **EDIT**: As of 03/10/2013, it's got changed to http://chromedriver.storage.googleapis.com/index.html. See comments below.  Therefore, `ChromeDriverDownloadUrl` in `ChromeDriverService.cs` needs to be updated in order to make the following exception message up to date.  > The chromedriver.exe file does not exist in the current directory or in a directory on the PATH environment variable. The driver can be downloaded at http://code.google.com/p/chromium/downloads/list.  CLA signed.","closed","","yizeng","2013-09-26T07:16:27Z","2014-07-07T16:28:32Z"
"","438","Fix typo in CONTRIBUTING.md","Simple typo fix in contributing documents. It should be `git log --oneline`. Not ""--online""  I have signed the CLA.","closed","","stvsmth","2015-04-09T12:10:03Z","2015-04-09T12:11:56Z"
"","89","AjaxElementLocatorTest fix","shouldThrowNoSuchElementExceptionIfElementTakesTooLongToAppear test fixed expected exceptions moved to @Test annotations, corresponding try/catch blocks removed, they didn't provide any usefull info","closed","","artkoshelev","2013-06-18T19:29:21Z","2014-06-15T14:09:08Z"
"","635","Firefox driver 2.46.0 regression - unable to set to non-js","Setting: profile.setPreference(""javascript.enabled"", false); doesn't have any effect when using Firefox 38.0.5  It works correctly on 2.45.0.","closed","","radek1st","2015-06-09T10:42:06Z","2019-08-14T10:09:58Z"
"","136","Follow up to the activity in Issue #6452","Sets proper 'Accept' request header so that Python bindings work with some old WebDriver implementations that reply 404 to requests with no 'Accept' set.","closed","","sevaseva","2013-11-21T06:47:39Z","2014-02-23T08:35:47Z"
"","682","SendKeys method not working with Selenium 2.46.0 in Firefox 38.0.5","sendKeys sends inproper signs for every of: String [] searchtab = {""á"",""â"",""ä"",""ă"",""ą"",""?"",""é"",""ë"",""ě"",""ę"",""î"",""í"",""ô"",""ó"",""ö"",""ő"",""?"",""ń"",""ň"",""đ"",""ď"",""ł"",""ś"",""ć"",""ź"",""ż""}; for(String search:searchtab) { webElement.sendKeys(search); } Result (for single string): � or ?   for ""!"" no mark will be entered using as workaround: webElement.sendKeys(Keys.SHIFT, ""1"");  needs sdditional 5sec Thread.sleep for no reason just to work","closed","","1dziubo1","2015-06-18T13:30:09Z","2019-08-21T11:09:35Z"
"","460","""SendKeys"" command executed very slowly in IE10","Selenium:2.45.0 Binding: Java Brower: IE10 IEDriverServer: 2.45.0  ""SendKeys"" command executed very slowly when there is keydown, propertychange event handler registed on the target element. You can try it on baidu.com, taobao.com.","closed","D-IE,","ReinhardXu2007","2015-04-16T14:56:32Z","2019-08-21T14:09:47Z"
"","620","[marionette] Error responses returned from executeScript silently ignored","Selenium version: 2.45.0-b02d299 (built from master) Firefox version: 38.0.5  _Steps to reproduce:_ 1. Open marionette connect 2. Execute `driver.executeScript(""throw Error('BAD!')"")`  _Expected:_  A WebDriver exception raised with error detauls  _Actual:_  The function returns a map::  ``` {  message=Error: BAD!,  status=17,  stacktrace=execute_script @undefined, line undefined inline javascript, line 0 src: ""let __marionetteFunc = function(){throw Error('BAD!')};__marionetteFunc.apply(null, __marionetteParams);"" } ```  The error seems to be in `MarionetteConnection`, which correctly unpacks the error value from the response, but doesn't set `Response.status`:  ```   response = new JsonToBeanConverter().convert(Response.class, rawResponse);   if (map.containsKey(""error"")) {     response.setValue(map.get(""error"")); // status is still 0 (SUCCESS) ```  I'll try to create a patch this weekend.","closed","","lqc","2015-06-05T08:27:10Z","2019-08-21T12:09:37Z"
"","347","Provide a way to change root path for tmp files.","Selenium typically writes Firefox profile files in /tmp/ as temporary directory (/tmp/tmpXXXXXX).  This is OK as long as everything goes well and `driver.quit()` is called, cleaning the directories.  In my case, selenium is running under Xvfb, managed by a `supervisord`, and it looks like in some cases, my files are not cleaned. It would be cool to store all this tmp files elsewhere, so I can easily `rm -fr` them.  My supervisord config, FYI looks like:  ``` [program:tests-example-com] user=nobody command=/home/.../test.py -v run-with-browser http://www.example.com/what-to-test/ autostart=true autorestart=true stopasgroup=true killasgroup=true stopsignal=QUIT ```  My python code, FYI looks like a context manager to be sure to not forgot driver.quit.:  ``` [...] class WhateverTester: [...]     def __enter__(self):         return self      def __exit__(self, type, value, traceback):         self.driver.quit() [...]     with WhateverTester(endpoint) as tester:         tester.run() [...] ```","closed","I-papercut,","JulienPalard","2015-03-18T12:42:01Z","2019-08-21T16:09:38Z"
"","395","Python fails to check loopback when it's not 127.0.0.1","selenium fails to recognize a started IEdriver while checking for it [here](https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/common/utils.py#L43)  if run in a proxy environment.  Newer Windows versions resolve localhost as the IPv6 loopback :1 and 127.0.0.1 is not recognized as a localhost address anymore and will be routed through the proxy if not directly specified in the proxy exceptions.  Example: - WIndows 7 - Proxy with 'Bypass proxy server for local addresses' checked - Start an IE instance through the Python bindings - Expected : IE starts  Currently using Python bindings version 2.45.0","closed","I-defect,","TKCen","2015-04-01T08:16:31Z","2020-05-05T21:17:21Z"
"","743","selenium webdriver click event not working sometimes","Selenium click event not working( sometime ) with firefox( 36.0.4). when i trigger the click event one more time, its working. Why?  click event not always working with single click.","closed","","RajaduraiKanagavel","2015-07-07T06:42:25Z","2019-08-21T09:09:51Z"
"","644","ClassCastException in ErrorHandler if agent sends a non-numeric lineNumber","Selenium 2.46.0, Firefox 38.0.5.  Saw this exception during a test:  ``` java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Number     at org.openqa.selenium.remote.ErrorHandler$FrameInfoToStackFrame.apply(ErrorHandler.java:297)     at org.openqa.selenium.remote.ErrorHandler$FrameInfoToStackFrame.apply(ErrorHandler.java:1)     at com.google.common.collect.Iterators$8.next(Iterators.java:782)     at com.google.common.collect.Iterators$7.computeNext(Iterators.java:644)     at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:141)     at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:136)     at com.google.common.collect.Lists.newArrayList(Lists.java:138)     at com.google.common.collect.Iterables.toCollection(Iterables.java:312)     at com.google.common.collect.Iterables.toArray(Iterables.java:290)     at org.openqa.selenium.remote.ErrorHandler.rebuildServerError(ErrorHandler.java:270)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:118)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:269)     at org.openqa.selenium.remote.RemoteWebElement.findElement(RemoteWebElement.java:172)     at org.openqa.selenium.remote.RemoteWebElement.findElementById(RemoteWebElement.java:205)     at org.openqa.selenium.By$ById.findElement(By.java:215)     at org.openqa.selenium.remote.RemoteWebElement.findElement(RemoteWebElement.java:168) ```  From looking at some of the agents' source, it seems possible that sometimes a stack frame might contain `lineNumber = """"` (empty string) or even `lineNumber = ""Not available""`, which could explain the above CCE.  `ErrorHandler$FrameInfoToStackFrame.apply` should be more defensive when pulling `LINE_NUMBER` from the map.  It also currently bails-out with no info if the line number is absent, whereas it seems reasonable that it could create a stack frame with line number = -1, negative (but not -2 == in-native) being conventional for unknown per `java.lang.StackTraceElement`.","closed","","javabrett","2015-06-10T23:23:59Z","2019-08-21T10:09:59Z"
"","386","Firefox: synthetic keyboard events do not set KeyboardEvent.key property properly","Selenium 2.45.0 uses synthetic keyboard events for Firefox 36.0.4 on all(?) platforms. These synthetic keyboard events set the javascript [KeyboardEvent.key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) property always to 'Unidentified' instead of the expected character.  Using native events with Firefox","closed","D-firefox,","mkresin","2015-03-28T18:03:38Z","2019-08-18T00:09:42Z"
"","509","Returned driver instance from switchTo().window() have  0  ImplicityWait timeout","selenium 2.45.0 firefox 37.0.1  Setting up my implicity wait by  driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);   then switching to another window and storing returned driver instance to a new variable WebDriver windowDriver = driver.switchTo().window(handleHash);  When trying to interact with element in another window with windowDriver variable (which we got from switchTo().window()  method) I'm getting NoSuchElement exception with 50-200 miliseconds wait. windowDriver.findElement()  Problem solved when I put once again implicityWait but directly to new variable windowDriver. windowDriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);  P.S. sessionID and objectID in debugging are the same.","closed","D-firefox,","vladyslavlopa","2015-04-30T11:19:50Z","2019-08-21T02:10:00Z"
"","385","Selenium Safari click() does not match real Safari behavior","See this test on Sauce Labs: https://saucelabs.com/tests/c1d1d933b9b64132b25a2663fe71e52b  On a real Mac, entering a number, clicking next, and clicking submit work fine. In Selenium, it seems like a change event does not fire on the `input` element.  Here is the relevant test code: https://github.com/SEL-Columbia/dokomoforms/blob/b1204676d74caf1ae52aa7f368c3c92fd8cb0fa0/tests/selenium_test.py#L283-L311","closed","A-needs new owner,","vr2262","2015-03-27T19:48:21Z","2019-08-19T15:09:45Z"
"","241","Fix NullPointerException when File#listFiles() returns null (#1934)","See issue 1934 where the NPE is listed in a few comments. The problem is that File#listFiles() can return null, see documentation:  http://docs.oracle.com/javase/7/docs/api/java/io/File.html#listFiles%28%29  This fixes all the listFiles call sites that aren't part of an assertion in a test case.","closed","","robinst","2014-07-30T07:29:05Z","2014-07-30T08:06:58Z"
"","702","Chrome driver on mac yosemite causing issues","See https://github.com/vvo/selenium-standalone/issues/107  Chrome version: 43.0.2357.130 (64-bit) Mac Version: 10.10.3 Selenium: v2.45.0 Chrome driver: 2.15-x64-chromedriver  This is a strange issue that only happens on my work computer which is a brand new macbook air.   Here is the log:   ``` Admins-MacBook-Pro:~ mbenin$ selenium-standalone start 09:50:18.954 INFO - Launching a standalone server Setting system property webdriver.chrome.driver to /Users/mbenin/.nvm/versions/node/v0.12.4/lib/node_modules/selenium-standalone/.selenium/chromedriver/2.15-x64-chromedriver 09:50:18.983 INFO - Java: Oracle Corporation 25.45-b02 09:50:18.983 INFO - OS: Mac OS X 10.10.3 x86_64 09:50:18.990 INFO - v2.45.0, with Core v2.45.0. Built from revision 5017cb8 09:50:19.048 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match with current platform: MAC 09:50:19.072 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub 09:50:19.072 INFO - Version Jetty/5.1.x 09:50:19.073 INFO - Started HttpContext[/selenium-server,/selenium-server] 09:50:19.091 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@d7b1517 09:50:19.092 INFO - Started HttpContext[/wd,/wd] 09:50:19.092 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver] 09:50:19.092 INFO - Started HttpContext[/,/] 09:50:19.095 INFO - Started SocketListener on 0.0.0.0:4444 09:50:19.095 INFO - Started org.openqa.jetty.jetty.Server@7cd84586 Selenium started 09:50:25.913 INFO - Executing: [new session: Capabilities [{rotatable=true, locationContextEnabled=true, browserName=chrome, javascriptEnabled=true, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=2.4.5, url=http://webdriver.io}}]]) 09:50:25.920 INFO - Creating a new session for Capabilities [{rotatable=true, locationContextEnabled=true, browserName=chrome, javascriptEnabled=true, handlesAlerts=true, version=, platform=ANY, requestOrigins={name=webdriverio, version=2.4.5, url=http://webdriver.io}}] Starting ChromeDriver 2.15.322455 (ae8db840dac8d0c453355d3d922c91adfb61df8f) on port 34362 Only local connections are allowed. 09:50:46.107 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'Admins-MacBook-Pro.local', ip: '10.197.210.92', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.3', java.version: '1.8.0_45' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:192)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:175)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:111)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:88)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:109)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:57)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:110)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:172)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:201)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:163)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:129)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)     at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)     at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)     at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)     at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)     at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)     at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)     at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)     at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)     at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)     at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'Admins-MacBook-Pro.local', ip: '10.197.210.92', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.3', java.version: '1.8.0_45' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:69)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:53)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:54)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:214)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:168)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:422)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:59)     ... 9 more Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'Admins-MacBook-Pro.local', ip: '10.197.210.92', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.3', java.version: '1.8.0_45' Driver info: driver.version: ChromeDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:593)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:126)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:139)     at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:171)     at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:139)     ... 14 more Caused by: java.lang.IllegalStateException: The process has not exited yet therefore no result is available ...     at org.apache.commons.exec.DefaultExecuteResultHandler.getException(DefaultExecuteResultHandler.java:74)     at org.openqa.selenium.os.UnixProcess.checkForError(UnixProcess.java:165)     at org.openqa.selenium.os.CommandLine.checkForError(CommandLine.java:183)     at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:170)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:62)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)     ... 19 more 09:50:46.114 WARN - Exception: The process has not exited yet therefore no result is available ... ```  Any ideas on how I can debug this?   I tried removing chrome and reinstalling it. Also tried different versions of selenium and chrome driver.","closed","I-needs investigation,","michaelBenin","2015-06-23T14:36:53Z","2019-08-21T10:09:50Z"
"","165","Adding ability to send --silent flag to chromedriver.","See https://code.google.com/p/chromedriver/issues/detail?id=116.  Note: I've signed and submitted the CLA.","closed","","tobli","2014-01-30T22:58:23Z","2014-06-12T05:12:54Z"
"","138","Fixed issue 6343 (DefaultWait.Until() should rethrow without swallowing the original stacktrace)","see http://code.google.com/p/selenium/issues/detail?id=6343","closed","","ulrichb","2013-11-24T17:16:54Z","2014-03-06T22:16:13Z"
"","182","A fixed version of  #181","See comments on ce1eb4dbac780a58ae9d4bec432e0f01bfae2cc9","closed","","colons","2014-03-07T16:58:00Z","2014-03-07T17:05:20Z"
"","511","getting number format exception in JsonToBeanConverter when json entry is a double value","See below exception: json attribute:  ""somevalue"":0.5  this is caused by google gson translating above value into a LazilyParsedNumber and the double value above can not be directly converted to a long value. Selenium API may have to translate such values as double directly.  ---  Driver info: driver.version: RemoteWebDriver     at org.openqa.selenium.remote.JsonToBeanConverter.propertyWriteException(JsonToBeanConverter.java:291)      at org.openqa.selenium.remote.JsonToBeanConverter.convertBean(JsonToBeanConverter.java:268)      at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:178)      at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:41)      at org.openqa.selenium.remote.http.JsonHttpResponseCodec.decode(JsonHttpResponseCodec.java:62)      at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)      at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)      ... 8 common frames omitted Caused by: java.lang.NumberFormatException: For input string: "".5""     at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65) ~[na:1.7.0_72]     at java.lang.Integer.parseInt(Integer.java:481) ~[na:1.7.0_72]     at java.math.BigInteger.(BigInteger.java:338) ~[na:1.7.0_72]     at java.math.BigInteger.(BigInteger.java:476) ~[na:1.7.0_72]     at com.google.gson.internal.LazilyParsedNumber.longValue(LazilyParsedNumber.java:51)      at com.google.gson.JsonPrimitive.getAsLong(JsonPrimitive.java:233)      at org.openqa.selenium.remote.JsonToBeanConverter.convertJsonPrimitive(JsonToBeanConverter.java:205)      at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:73)      at org.openqa.selenium.remote.JsonToBeanConverter.convertMap(JsonToBeanConverter.java:301)      at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:175)      at org.openqa.selenium.remote.JsonToBeanConverter.convertList(JsonToBeanConverter.java:311)      at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:162)      at org.openqa.selenium.remote.JsonToBeanConverter.convertBean(JsonToBeanConverter.java:266)","closed","","michaelssun","2015-04-30T19:17:30Z","2019-08-21T13:09:54Z"
"","123","Update ChromeDriver download URL as it's no longer available through Google Code Downloads","See also in pull request in #120.  I was updating out-dated URL in that file, then whole thing got migrated again, hence all ChromeDriver download URLs need to be updated.","closed","","yizeng","2013-10-02T21:51:14Z","2013-10-22T03:59:05Z"
"","330","Unable to get pop up after uploading a file using AutoIt","Scenario: After uploading an invalid file (apart from image file) using AutoIt, pop up is not displaying. Uploading a proper file (any image file) works fine  Browser: Firefox 34.0.5 Selenium Library Version: selenium-server-standalone-2.42.2 Autoit: autoit-v3  Steps:  1. The test is performed on ""www.pspsrint.com"" portal using Guest account 2. When I try to click on any product e.g ""Business Card"" and try to upload invalid file I don't get an error popup    My Code is as below  public static  WebDriver openfirefox; @Test(priority = 1) public void openLink() {                   openfirefox.get(https://www.psprint.com/);//Opens the URL         openfirefox.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);// Wait } @Test(priority = 2) public void upload() throws InterruptedException {         if(isElementPresent(By.id(""fileupload_front1""))) {         upload(""front"");   } }  private void upload(String side) {         WebElement error = openfirefox.findElement(By.xpath(Constant.CloseError));         if(side == ""front""){         openfirefox.findElement(By.id(""fileupload_front1"")).click();// Clicks on Upload now button         Runtime.getRuntime().exec(Constant.UploadPath);         openfirefox.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);    }         if(error.isDisplayed()) {         openfirefox.findElement(By.xpath(CloseError)).click();//Close the error window    } }","closed","","SunilGhargaonkar","2015-03-13T07:45:35Z","2019-08-21T16:09:51Z"
"","642","WebDriver Error on Windows: logging.js not found","Same steps work on OS X but not on Windows, both are running the latest version of Node.js.  Tested this on a a brand new directory even:  mkdir deleteme cd deleteme npm install selenium-webdriver node  (in node)  > require('selenium-webdriver');  fs.js:500   return binding.open(pathModule._makeLong(path), stringToFlags(flags), mode);                  ^ Error: ENOENT, no such file or directory 'C:\Users\Administrator\deleteme\webdriver\logging.js'     at Error (native)     at Object.fs.openSync (fs.js:500:18)     at Object.fs.readFileSync (fs.js:352:15)     at Object.Context.closure.goog.retrieveAndExecModule_ (C:\Users\Administrator\deleteme\node_modules\selenium-webdriver_base.js:129:23)     at :1:6     at Object.exports.runInContext (vm.js:64:17)     at Context.closure.closure.vm.createContext.CLOSURE_IMPORT_SCRIPT (C:\Users\Administrator\delete me\node_modules\selenium-webdriver_base.js:101:12)     at Object.goog.importScript_ (C:\Users\Administrator\deleteme\node_modules\selenium-webdriver\li b\goog\base.js:873:9)     at Object.goog.importModule_ (C:\Users\Administrator\deleteme\node_modules\selenium-webdriver\li b\goog\base.js:894:14)     at Object.goog.writeScripts_ (C:\Users\Administrator\deleteme\node_modules\selenium-webdriver\li b\goog\base.js:1251:16)","closed","C-nodejs,","kibbled","2015-06-10T15:52:35Z","2019-08-21T11:09:50Z"
"","636","Safari browser gets closed immediately after launching the browser","Safari browser opens up and gets closed immediately . I am getting the following error in the console . As i understood from they error message is it says Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Bu the address is absolutely right . In the same address chrome browse works fine .   Version : Selenium 2.46 Selenium Server : 2.46 OS        :OS: Mac OS X 10.9.5 x86_64 Browser :Safari   Starting GRID node in Mac machines 18:14:23.311 INFO - Launching a Selenium Grid node 18:14:23.602 INFO - Java: Oracle Corporation 24.71-b01 18:14:23.602 INFO - OS: Mac OS X 10.9.5 x86_64 18:14:23.606 INFO - v2.46.0, with Core v2.46.0. Built from revision 87c69e2 18:14:23.641 INFO - Driver provider org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{platform=WINDOWS, ensureCleanSession=true, browserName=internet explorer, version=}] does not match the current platform MAC 18:14:23.641 INFO - Driver class not found: com.opera.core.systems.OperaDriver 18:14:23.641 INFO - Driver provider com.opera.core.systems.OperaDriver is not registered 18:14:23.674 INFO - Selenium Grid node is up and ready to register to the hub 18:14:23.692 INFO - Starting auto registration thread. Will try to register every 5000 ms. 18:14:23.692 INFO - Registering the node to the hub: http://10.98.1.30:4444/grid/register 18:14:23.704 INFO - The node is registered to the hub and ready to use 18:14:44.669 INFO - Executing: [new session: Capabilities [{platform=ANY, browserName=safari, version=, safari.options={port=0, cleanSession=true}}]]) 18:14:44.675 INFO - Creating a new session for Capabilities [{platform=ANY, browserName=safari, version=, safari.options={port=0, cleanSession=true}}] 18:14:44.728 INFO - Server started on port 47355 18:14:44.736 INFO - Launching Safari 18:14:44.744 INFO - Waiting for SafariDriver to connect 18:14:46.106 INFO - Connection opened 18:14:46.107 INFO - Driver connected in 1363 ms 18:14:46.117 INFO - Shutting down 18:14:46.117 INFO - Closing connection 18:14:46.118 INFO - Stopping Safari 18:14:46.171 INFO - Stopping server 18:14:46.171 INFO - Stopping server 18:14:46.175 INFO - Shutdown complete 18:14:46.400 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.46.0', revision: '87c69e2', time: '2015-06-04 16:16:47' System info: host: 'CHENNMW-0YVF8J5.local', ip: '10.98.5.239', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.9.5', java.version: '1.7.0_71' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:188)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:183)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:119)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:95)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:137)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:58)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:111)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:174)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:202)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:164)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:130)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)     at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)     at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)     at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)     at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)     at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)     at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)     at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)     at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)     at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)     at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.46.0', revision: '87c69e2', time: '2015-06-04 16:16:47' System info: host: 'CHENNMW-0YVF8J5.local', ip: '10.98.5.239', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.9.5', java.version: '1.7.0_71' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:95)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:79)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:62)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:85)     ... 9 more Caused by: org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '2.46.0', revision: '87c69e2', time: '2015-06-04 16:16:47' System info: host: 'CHENNMW-0YVF8J5.local', ip: '10.98.5.239', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.9.5', java.version: '1.7.0_71' Driver info: driver.version: SafariDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:128)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:141)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:58)     at org.openqa.selenium.safari.SafariDriver.(SafariDriver.java:51)     ... 14 more Caused by: java.lang.ClassCastException: com.google.gson.JsonObject cannot be cast to java.lang.String     at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:111)     at org.openqa.selenium.remote.JsonToBeanConverter.convert(JsonToBeanConverter.java:42)     at org.openqa.selenium.safari.SafariDriverCommandExecutor.execute(SafariDriverCommandExecutor.java:191)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:578)     ... 19 more 18:14:46.404 WARN - Exception: com.google.gson.JsonObject cannot be cast to java.lang.String","closed","","perwez123","2015-06-09T12:53:00Z","2019-08-15T08:10:02Z"
"","547","running selenium with pythonw.exe fails with invalid handle","running the following in a script via pythonw.exe:  ``` from selenium import webdriver profile = webdriver.FirefoxProfile() webdriver.Firefox(firefox_profile=profile) ```  results in something like:  ```   File ""zzz\selenium\webdriver\firefox\webdriver.py"", line 59, in __init__   File ""zzz\selenium\webdriver\firefox\extension_connection.py"", line 47, in __init__   File ""zzz\selenium\webdriver\firefox\firefox_binary.py"", line 65, in launch_browser   File ""zzz\selenium\webdriver\firefox\firefox_binary.py"", line 88, in _start_from_profile_path   File ""subprocess.pyc"", line 702, in __init__   File ""subprocess.pyc"", line 833, in _get_handles   File ""subprocess.pyc"", line 884, in _make_inheritable WindowsError: [Error 6] The handle is invalid ```  see also http://stackoverflow.com/questions/25203955/how-to-run-selenium-webdriver-with-pythonw","closed","C-py,","ruidc","2015-05-18T08:33:28Z","2019-08-19T03:09:43Z"
"","549","Implement toString for OutputType.","Returns a String that textually represents the object. I desire this for viewing in a debugger and for user code that logs OutputType.  I signed the CLA.","closed","","joshbruning","2015-05-18T22:26:36Z","2015-05-19T11:36:38Z"
"","783","Fix HtmlUnitWebElement.getCssValue","Return correct value for colors.","closed","C-java,","asashour","2015-07-15T07:19:55Z","2015-08-22T15:34:04Z"
"","103","Restore proxy settings in the windows registry when IE is quit","Restores proxy settings in the windows registry when IE is quit in addition to in the shutdown hook when handled by the driver. InternetExplorerDriver sets the proxy (unless handled by IEDriverServer) but cleans it up only when the JVM is quit. This causes any proxy settings to be active forever in a dedicated testing node on a grid. Any original proxy settings are lost forever if two different runs set different proxy servers, as the second run overwrites the backup of the original settings.  See http://code.google.com/p/selenium/issues/detail?id=5831 for more details.  The CLA is signed on behalf of my employer, Vaadin Ltd.","closed","","zch","2013-08-13T05:15:47Z","2014-07-30T10:01:56Z"
"","374","Nodes are not reading hub's configuration during re-registering","Reproduced with Selenium 2.45 HUB: Linux, Ubuntu Node: Windows 8, Chrome  Steps to reproduce: **1) Start Selenium Grid. Let say, only 2 stations: HUB and NODE.** For HUB, set timeouts, as: ""timeout"": 20000 ""browserTimeout"": 20000 For NODE do not set any timeouts explicitly. **2) Run this code against Grid:**  ``` java driver.get(url); sleep(30000); driver.get(url); ```  It fails with `org.openqa.selenium.remote.SessionNotFoundException`. This line added to the NODE log: `INFO org.openqa.selenium.remote.server.DriverServlet - Session 7f5fffec-4882-4c4c-b091-c780c66d379d deleted due to client timeout` **3) So, trying to resolve issue, increase timeouts on the HUB:** ""timeout"": 40000 ""browserTimeout"": 40000 Restart HUB. NODE would re-register automatically.  **Defect:** Code still fails. Timeout still set at 20 seconds. But, if you look at the Grid console, it would show new (updated) configuration, which is misleading. The reason: NODE haven't read new timeouts from the HUB. NODE will only read that new configuration, when re-started.  **Expected:** NODE would read configuration from the HUB, when re-registering.","closed","I-needs investigation,","SlavikCA","2015-03-26T18:17:26Z","2019-08-16T20:09:48Z"
"","300","Removing POST data in GET request.","Removing POST data from HTTP GET method call for getting hub configuration. Removing the POST data as it is against HTTP standards. Tested without the payload and is working fine.","closed","R-awaiting answer,","AlfZombie","2014-12-16T06:13:26Z","2015-09-01T19:23:54Z"
"","622","chomp shebang line from python source files","removed shebang line from python source files. see: #612","closed","","cgoldberg","2015-06-05T11:32:50Z","2015-06-16T15:13:29Z"
"","418","updated or removed dead and outdated links","Removed links are dead and content is not cached anywhere due to robots.txt on the sites Alternately, these can be maintained and referenced as [dead-link]. What is the standard for this project?","closed","","titusfortner","2015-04-06T18:01:36Z","2015-07-02T01:42:38Z"
"","649","Java 7 generics empty parameters (diamond brackets)","Remove generics parameters  Java 7 compiler has a feature to detect the type reference, and so there is no need to specify the parameters between angled brackets. This removes little parts of the code, for better readability.","closed","C-java,","asashour","2015-06-11T11:30:02Z","2015-07-01T21:46:48Z"
"","221","BODY element is always shown/displayed.","related section in the W3C spec: https://dvcs.w3.org/hg/webdriver/raw-file/default/webdriver-spec.html#determining-if-an-element-is-displayed","closed","","sevaseva","2014-05-16T21:48:09Z","2014-06-25T06:22:13Z"
"","325","Selenium with refactored grid","Refactored Selenium Hub, Grid, and related Servlets into individual maven projects dependent on shared common code to make learning, debugging and maintenance much easier.","closed","","alexkogon","2015-03-06T17:39:09Z","2015-03-06T17:58:41Z"
"","37","Make getUrlMapper protected","Reason for changing the getUrlMapper to protected is to allow me to write a plugin that will add custom end points to the selenium grid, which would allow me to stabilize my build on IE, plus allows me and other people to write plugins for the grid that most of the users might not want but some people will find useful. This gives us ability to setup a custom uri end point to pass info directly to the selenium server node on the grid, which would be unreachable in any other way.","closed","","dimacus","2013-03-27T00:13:33Z","2013-08-14T17:10:15Z"
"","627","While Running RC Program with Firefox The Mozila is diplaying as Mozila Crash Reporter","RC Execution code  package test;  import com.thoughtworks.selenium.DefaultSelenium; import com.thoughtworks.selenium.Selenium;  public class RC1 {  ``` /**  * @param args  */ public static void main(String[] args) {     // TODO Auto-generated method stub      Selenium s = new DefaultSelenium(""localhost"",4444,""*firefox"",""http://google.co.in"");      s.start();     s.windowMaximize();     s.windowFocus();     s.open(""/""); } ```  }  Selenium RC version : 2.46.0  Firefox: 38.0.5","closed","","kishoreplans","2015-06-06T15:08:13Z","2019-08-21T12:09:35Z"
"","140","Making RemoteWebDriver#init(Capabilities, Capabilities) overridable by subclasses.","Rationale: Because of the ""all happens in constructor"" situation..., handling initialization errors is hard. E.g. is we want to clean up after browser startup/connectivity failure. Overriding init() allows completing initialization of a RemoteWEbDriver subclass before heavy stuff (startClient(), startSession() called still by the constructor) starts: we can pass necessary values as Capabilities and save then in the overridden init(). Similar effect can already be achieved by overriding startSession(), but init() is better because it is called before startClient() (important e.g. for FirefoxDriver where browser process gets started in startClient()).","closed","","sevaseva","2013-12-05T07:33:03Z","2013-12-09T14:25:47Z"
"","369","Unable to pass chrome options into remote webdriver","Python 2.7 (Selenium 2.45 package)  Ubuntu 14.04 Selenium Grid 2.45  I am currently running into an issue where I am unable to pass chrome options to the grid correctly. It appears to be due to a java casting error. It matches correctly but then cannot cast chrome options, even if left as an empty string. Other capabilities work fine though, and it works correctly if I remove chrome options.  Hub stacktrace:  ``` text 12:47:46.784 INFO - Got a request to create a new session: Capabilities [{platform=ANY, javascriptEnabled=true, browserName=chrome, chromeOptions={args=[--use-fake-device-for-media-stream, --disable-user-media-security=true], extensions=[]}, version=}] 12:47:46.784 INFO - Available nodes: [host :http://172.17.42.1:5555] 12:47:46.784 INFO - Trying to create a new session on node host :http://172.17.42.1:5555 12:47:46.784 INFO - Trying to create a new session on test slot {seleniumProtocol=WebDriver, platform=LINUX, chrome_binary=/usr/bin/google-chrome, browserName=chrome, maxInstances=8, version=41} 12:47:46.785 ERROR - Error running the beforeSessionListener : java.util.HashMap cannot be cast to com.google.gson.JsonObject java.lang.ClassCastException: java.util.HashMap cannot be cast to com.google.gson.JsonObject     at org.openqa.grid.selenium.proxy.DefaultRemoteProxy.beforeSession(DefaultRemoteProxy.java:238)     at org.openqa.grid.web.servlet.handler.RequestHandler.beforeSessionEvent(RequestHandler.java:169)     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:110)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)     at org.seleniumhq.jetty7.servlet.ServletHolder.handle(ServletHolder.java:565)     at org.seleniumhq.jetty7.servlet.ServletHandler.doHandle(ServletHandler.java:479)     at org.seleniumhq.jetty7.server.session.SessionHandler.doHandle(SessionHandler.java:225)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)     at org.seleniumhq.jetty7.servlet.ServletHandler.doScope(ServletHandler.java:406)     at org.seleniumhq.jetty7.server.session.SessionHandler.doScope(SessionHandler.java:186)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doScope(ContextHandler.java:965)     at org.seleniumhq.jetty7.server.handler.ScopedHandler.handle(ScopedHandler.java:117)     at org.seleniumhq.jetty7.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)     at org.seleniumhq.jetty7.server.Server.handle(Server.java:349)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.content(AbstractHttpConnection.java:894)     at org.seleniumhq.jetty7.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:948)     at org.seleniumhq.jetty7.http.HttpParser.parseNext(HttpParser.java:857)     at org.seleniumhq.jetty7.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)     at org.seleniumhq.jetty7.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)     at java.lang.Thread.run(Thread.java:745) ```  Python Stacktrace:  ``` text WebDriverException: Message: Error forwarding the new session The listener threw an exception ( listener bug ) Stacktrace:     at org.openqa.grid.web.servlet.handler.RequestHandler.process (RequestHandler.java:114)     at org.openqa.grid.web.servlet.DriverServlet.process (DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost (DriverServlet.java:67)     at javax.servlet.http.HttpServlet.service (HttpServlet.java:727)     at javax.servlet.http.HttpServlet.service (HttpServlet.java:820)     at org.seleniumhq.jetty7.servlet.ServletHolder.handle (ServletHolder.java:565)     at org.seleniumhq.jetty7.servlet.ServletHandler.doHandle (ServletHandler.java:479)     at org.seleniumhq.jetty7.server.session.SessionHandler.doHandle (SessionHandler.java:225)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doHandle (ContextHandler.java:1031)     at org.seleniumhq.jetty7.servlet.ServletHandler.doScope (ServletHandler.java:406)     at org.seleniumhq.jetty7.server.session.SessionHandler.doScope (SessionHandler.java:186)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doScope (ContextHandler.java:965)     at org.seleniumhq.jetty7.server.handler.ScopedHandler.handle (ScopedHandler.java:117)     at org.seleniumhq.jetty7.server.handler.HandlerWrapper.handle (HandlerWrapper.java:111)     at org.seleniumhq.jetty7.server.Server.handle (Server.java:349)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.handleRequest (AbstractHttpConnection.java:452)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handleRequest (BlockingHttpConnection.java:47)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.content (AbstractHttpConnection.java:894)     at org.seleniumhq.jetty7.server.AbstractHttpConnection$RequestHandler.content (AbstractHttpConnection.java:948)     at org.seleniumhq.jetty7.http.HttpParser.parseNext (HttpParser.java:857)     at org.seleniumhq.jetty7.http.HttpParser.parseAvailable (HttpParser.java:235)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handle (BlockingHttpConnection.java:66)     at org.seleniumhq.jetty7.server.bio.SocketConnector$ConnectorEndPoint.run (SocketConnector.java:254)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool.runJob (QueuedThreadPool.java:599)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool$3.run (QueuedThreadPool.java:534)     at java.lang.Thread.run (Thread.java:745) ```","closed","I-needs investigation,","StephenDavidson","2015-03-25T12:56:13Z","2019-08-18T10:09:34Z"
"","246","WDBS: safe check for window.localStorage","Pull request for https://code.google.com/p/selenium/issues/detail?id=7726 .","closed","","tvasenin","2014-08-08T12:04:26Z","2014-09-01T19:17:47Z"
"","584","Windows reports ""Firefox has stopped working"" when using Java ""driver = new FirefoxDriver()""","public void setUp() throws Exception {     driver = new FirefoxDriver();   } When running the Java code above (with NetBeans / Maven Run, JDK 1.8), Windows 7 64-bit reports ""Firefox has stopped working"" (Firefox version 38.0.1). Work-around: Close error box. Everything continues running fine after closing the Windows error box.","closed","","gunterfuchs","2015-05-28T17:43:02Z","2019-08-21T12:09:51Z"
"","576","WebTest method for link","public static readonly string[] LinkLocators = new String[] {  ""xpath=//a[@title='{0}']"",    ""xpath=//a[@href='{0}']""  ``` }; ```   public void UserClicksLink(String LinkCaption)             {                 instance.Click(GetLocator(LinkCaption, LinkLocators));             }","closed","","amit1984","2015-05-27T12:00:00Z","2019-08-21T12:09:55Z"
"","278","Proxy support for NodeJS client","Proxy support for the NodeJS webdriver.http.Client.","closed","C-nodejs,","elifa","2014-11-04T10:02:48Z","2015-05-22T20:49:38Z"
"","582","Unable to navigate to URL in Safari","Protractor 2.1.0 Safari 8.0.6 Webdriver 2.45.0 OSX 10.10.3 Safari extension 2.45.0  i tried with selenium-server-standalone-2.45.0 and when i run the script it navigates to the first URL but when it try to navigate to second url, it displays only **about:blank** and it times out with  ``` ScriptTimeoutError: Timed out awaiting response to command ""executeScript"" after 30001 ms (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 30.10 seconds Build info: version: '2.45.0', revision: '76d78cf', time: '2014-10-23 20:02:37' System info: host: 'mac.local', ip: '', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.3', java.version: '1.8.0_45' Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{browserName=safari, takesScreenshot=true, javascriptEnabled=true, version=8.0.6, cssSelectorsEnabled=true, platform=MAC, secureSsl=true}] Session ID: null  java.lang.NullPointerException     at org.openqa.selenium.remote.RemoteWebDriver.getCurrentUrl(RemoteWebDriver.java:319)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:497)     at org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke(EventFiringWebDriver.java:101)     at com.sun.proxy.$Proxy1.getCurrentUrl(Unknown Source)     at org.openqa.selenium.support.events.EventFiringWebDriver.getCurrentUrl(EventFiringWebDriver.java:164)     at org.openqa.selenium.remote.server.handler.GetCurrentUrl.call(GetCurrentUrl.java:30)     at org.openqa.selenium.remote.server.handler.GetCurrentUrl.call(GetCurrentUrl.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:266)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:168)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)     at java.lang.Thread.run(Thread.java:745) ```  its not even navigating to second URL.Im using browser.get() to navigate to the URLs. i tested both url's manually and it works fine if i run on chrome as well. Is there any where i can download safari extension v2.38.0 or safari extension v2.44.0?","closed","","spatchamatla","2015-05-28T13:58:34Z","2019-08-21T05:09:35Z"
"","414","Fix #409: Allow ignoring checked exceptions while waiting","Proposing fix for #409. (I have submitted my CLA today.)  Note that I have no experience with used build tools, though what I have done seems working.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/414)","closed","C-java,","olivergondza","2015-04-04T19:37:02Z","2020-07-13T05:52:50Z"
"","228","Propagate webdriver_firefox_port preference to FirefoxDriver, was ignored.","Propagate webdriver_firefox_port preference to FirefoxDriver, was being ignored.  Fixes issue #5172  https://code.google.com/p/selenium/issues/detail?id=5172","closed","","skuenzli","2014-06-18T19:14:57Z","2015-10-11T09:47:20Z"
"","212","added task name to SCHEDULE_TASK event","promise.ControlFlow.EventType.SCHEDULE_TASK now propagated with optional task name parameter, so event handlers can benefit from that","closed","","Restuta","2014-04-30T20:04:07Z","2014-06-19T00:26:17Z"
"","517","Selenium 2.45 is not compatible with Firefox 37","Profile error is appearing.","closed","","lokeshksymantec","2015-05-05T11:27:09Z","2019-08-21T13:10:00Z"
"","153","Step 1 in config refactor. Get rid of the GridParameters.properties file...","Problem: We have several implementations of how the configs read from CLI vs JSON Config File vs Configs. Even how the same configs are printed on screen has its own implementation. This makes it very difficult to find which config does what and how to add new ones.   So, here is my plan: To refactor all 3 types of configs (Standalone, Hub, Node) into a common config interface, and get rid of the 3x duplication.  Step 1: Get rid of the properties file that only 1 class uses, and move it into ""Proto-Config"" who's only job for now is to hold the information the config file had Step 2: Extract methods such as loadFromCommandLine, loadFromGridYml, loadFromJSON from GridHubConfiguration into a common place, no need to have 3 coppies of the same conditional statements Step 3: Build basic Config interface for all 3 types of configs we have Step 4: Make Standalone, Grid, Node config implement common methods to be used by all, such as ""setPort"" or getTimeout Step 5: Replace the old config with a single common config object that is unique on per instance level (maxSession only applies to node config etc..) but all of the common methods are moved into a single common location","closed","","dimacus","2013-12-12T22:41:58Z","2014-07-18T18:58:06Z"
"","752","Fixes #734","Problem was a small logic error that caused the code to try to open a directory as a file. I've signed the CLA. I accidentally  requested a pull request on my own fork, which is why I have two commits instead of one.","closed","","marcotcr","2015-07-09T03:27:22Z","2015-07-09T15:54:05Z"
"","195","Ignoring testShouldDoNothingIfThereIsNothingToGoBackTo on HtmlUnitDriver.","Pretty sure that has been broken by either 169dba6ad4dd1cfefdbc388a3ca36a1a24f7604e or f31bcf5abb3f1eb7529ddc78b6f744700af2a39d (both authored by me). I assume this isn't worth effort looking into (has to do with JavaScriptExecution). Correct me if I'm wrong.","closed","","sevaseva","2014-03-29T06:09:15Z","2014-04-11T22:30:42Z"
"","562","Firefox Webdriver 2.45.0 stops working with prev Firefox releases after crashing with 38.0.1","Possibly related with #437? 1. Added selenium and selenium support to project via Nuget manager 2. Attempted to run test from NUnit without Firefox installed -> got no Firefox binary exception 3. Installed Firefox 38.0.1 and tried again -> Firefox opened but didn't navigate to url given 4. Installed previous ESR (36.0.4) and tried again -> Same behavior as with 38.0.1 5. Did the same down til 34.0 with same behavior.  Windows 8.1 64-bit Using 4.0 dotnet bindings","closed","","elbaloo","2015-05-21T22:24:35Z","2019-08-21T12:09:58Z"
"","134","Fix for Iissue 6026 - All Webdriver implementations should provide standard creation functions","Please see [Issue 6026](http://code.google.com/p/selenium/issues/detail?id=6026) The idea is this. You should be able to pass everything into the web driver init function through the desired_capabilities. So I'm creating a function decorator that will decorate all the **init** functions and it will look for entries in the desired_capabilities dictionary that have the same name as one of the keyword arguments of the init function and then it will pull the value out of the desired_capabilities and create a keyword argument for it that get's passed to the init function.  To that end there is a a new decorator class called `AllowDesiredCapabilitiesOverrides' which handles all the magic to make this happen.  The advantages of this approach are: - 'backwards compatibility' will be maintained. -  I have left all arguments the same and added an argument called   `desired_capabilities` where needed. You can still use the old   `capabilities` argument but that argument won't trigger the   DesiredCapabilitiesOverides, if you do use `desired_capabilities` it   will overwrite `capabilities` for ie and firefox. - if / when new options are added to the driver `__init__` functions   they will automatically be handled, so we should be able to rely on   using desired_capabilities for everything for now and into the future. - There is also sytax to make it easy to pass in complex object, like   `FirefoxProfile`  A copule of usage examples may make it more clear.  Let's start off with something simple like phantomjs.  First the phantomjs `__init__` now looks like:  ``` python @AllowDesiredCapabilitiesOverrides() def __init__(self, executable_path=""phantomjs"",      port=0, desired_capabilities=DesiredCapabilities.PHANTOMJS,                  service_args=None, service_log_path=None): ```  So actually we only added the decorator.  Then to use it we could do something like this:  ``` python caps = {'init.service_args' : ['arg1', 'arg2'], 'init.port':55} driver = webdriver.PhantomJS(desired_capabilities = caps) ```  This just allows for us to pass in all arguments through the desired_capabilities object and will function the same as if we had passed in `service_args` and `port` through the standard `__init__` arguments.  Again the idea is to not break backward compatibility but to be able to configure not only the remote webdriver but also the `service` through desired_capabilities to simplify the usage by third part tools.  A slightly more complicated, but still pretty simple example would be firefox. First the `__init__`  ``` python @AllowDesiredCapabilitiesOverrides(constructors={'firefox_profile':FirefoxProfile,                                                     'firefox_binary':FirefoxBinary,                                                     'proxy':Proxy}) def __init__(self, firefox_profile=None, firefox_binary=None, timeout=30, capabilities=None, proxy=None, desired_capabilities=None):     if not desired_capabilities is None: capabilities = desired_capabilities     #rest of function remains unchanged ```  The difference here is we want to be able to pass in simple arguments to create the necessary helper objects for firefox, i.e. `FirefoxProfile` rather than having to create the profile and pass it in.  So the `constructors` argument from `AllowDesiredCapabilitieiesOverrides` allow you to pass in a dictionary of init argument names maped to ""constructor"" callables.  This way you can simply pass in the values you want for the object you want to construct.  Here is an example of how to use.  ``` python caps = {""init.firefox_profile"" : [""/path/to/FirefoxProfile""] } driver = webdriver.Firefox(desired_capabilities=caps)  ```  When making the above call `FirefoxProfile('/path/to/FirefoxProfile')` will be called and then the newly created FirefoxProfile will be passed into the Firefox webdriver.**init** function.  You can also call via keyward arguments as such:  ``` python caps = {""init.firefox_binary"" : {'firefox_path' : 'path',                  'log_file':'log'}}  driver = webdriver.Firefox(desired_capabilities=caps) ```  I hope this all makes sense.  This I belive should provide the functionality we are looking for in issue 6026 while not breaking backward compatibility and keeping all the changes / magic in one place.  I've also written extensive tests so I'm pretty sure it works OK, but I'm happy to make any changes needed to get the pull request accepted.  Also I have signed the commiters agreement.  @lukeis -- appreciate if you could have a look at this and see if it is going to work.","closed","C-py,","j1z0","2013-11-09T14:02:16Z","2015-03-09T10:35:37Z"
"","375","selenium-2.45.0 is not compatible with phantomjs-2.0.0","Please refer the update section at [Webdriver unable to create session with phantomjs](http://stackoverflow.com/questions/29219075/webdriver-unable-to-create-session-with-phantomjs/29221466#29221466)","closed","","sarbbottam","2015-03-26T19:04:32Z","2019-08-21T15:09:57Z"
"","417","Issue with selecting drop down value in an application. Getting error message “Element should have been ""select"" but was ""span""","Please find the HTML Code for the drop down which I need to select in the attached screen shot. I have used these codes to select any value from the marked dropdown value   1)  WebElement dropDown = driver.findElement(By.id(""hqCountry""));    dropDown.click();    driver.findElement(By.xpath(""//_[@id='hqCountry_listbox']/li[125]"")).click(); 2)  New Select(driver.findElement(By.xpath(""//_[@id='hqCountry_listbox']/li[55]""))).selectByValue(""ABC""); 3)  Also tried few more .None of them working.  None of the options are working .Please help me with a general solution so that I can use this method in future also ![issue1](https://cloud.githubusercontent.com/assets/11817296/7004332/771f0038-dc87-11e4-9ef7-d241f1260f82.jpg)","closed","","Sharazkm","2015-04-06T12:35:25Z","2019-08-21T15:09:42Z"
"","286","Allow to pass firefox_profile as a path.","Please consider this patch for inclusion in selenium. I confirm I have signed the CLA.  This commit allows to use a path as the firefox_profile argument in the Firefox's webdriver.  Currently a FirefoxProfile instance can only be used by a single webdriver. If one FirefoxProfile instance is used by more than one webdriver, then temporal directories are removed when the first webdriver instance quits, raising errors in the rest.  By creating the FirefoxProfile instance inside the WebDriver class we guarantee that the mapping FirefoxProfile  WebDriver is one to one.","closed","","zeehio","2014-11-16T20:11:10Z","2014-11-17T13:33:31Z"
"","65","Windows doesn't have executable file permissions","platform.rb was checking if the selenium standalone driver jar has executable permissions on Linux. Windows doesn't have executable permissions so there isn't a need to check. This will make web driver more Windows friendly when running tests on Jenkins.","closed","","ghost","2013-05-08T06:13:43Z","2013-08-29T17:26:35Z"
"","429","Add notice file to rb/ tree so it gets distributed in gem file","per discussion in #416. Copies the copyright specific to ruby bindings from the README","closed","C-rb,","titusfortner","2015-04-07T20:53:14Z","2016-02-27T20:42:53Z"
"","573","[js] Copy/paste typo in androidProcess()","Parameter pkg is not existing in androidProcess(), it rather should refer to processName.  https://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/chrome.js#L618","closed","","dbo","2015-05-27T09:10:24Z","2019-08-21T12:09:36Z"
"","680","Add new type to frameToBeAvailableAndSwitchToIt","Overload frameToBeAvailableAndSwitchToIt support to Index and WebElement. This modification is necessary so that WebDriverWait can use this mode to switch frames.","closed","","tbuka","2015-06-18T09:47:08Z","2015-06-19T14:09:36Z"
"","756","Internet Explorer WebDriver not working after remote desktop connection is closed","Our Setup: 1.  Testing Internet Explorer on Windows Server 2012 R2 running in an AWS Instance 2.  Using WebDriverJS with Native Events enabled  Issue Observed: If I use Remote Desktop to connect to the AWS instance and then disconnect from the AWS instance, I can no longer run automation successfully.  A number of the WebDriver actions (sendKeys, mouseMove, etc) appear to fail silently.  The command succeeds (promise chain completes without error), but no sendKeys, mouseMove, etc action is taken.  If I (1) Remote desktop back to the machine and watch automation run or (2) reboot machine and run automation via Jenkins without using Remote desktop, then the automation will succeed.  Repro steps: 1.  Reboot Amazon AWS Instance (Windows Server 2012 R2) 2.  Run automation via Jenkins 3.  Automation succeeds 4.  Remote desktop to AWS Instance 5.  Close Remote desktop session 6.  Rerun automation via Jenkins 7.  Automation silently fails when attempting to use sendKeys, mouseMove, etc.  But, url navigation appears to still work.  Are there any known issues around IE, WebDriverJS, native events, remote desktop, etc?","closed","","daviande","2015-07-09T21:16:46Z","2019-08-16T13:09:35Z"
"","29","Test changes.","One commit makes shutting down the test webserver more reliable, or at least will let errors be reported so that we can  fix them.  We were trapping all exceptions instead of the specific ones we need to catch.  I've narrowed it down to IOError, which is thrown by the request code when it gets a 404 from the server.  Since this is the shutdown sequence, this may be the only exception we care to catch.  The other makes one test case a bit clearer by foregoing a two-element list in favor of simple variable names.  I also reused values that were previously written twice.  This does not change the test functionality.","closed","","intchanter","2013-03-14T20:21:37Z","2013-03-15T12:38:22Z"
"","54","[python]Firefox 20.0.1 on Windows ""TypeError: environment can only contain string"" problem","On Windows, if ""from **future** import unicode_literals"" os.path.join() will always return unicode. But Firefox 20.0.1 refuse to take unicode in its environment. The fix is simply convert the unicode back to string.","closed","","terryyin","2013-04-17T23:23:28Z","2014-06-12T19:36:43Z"
"","10","WindowsUtils.kill() fix","On Windows 8 the kill() function did not correctly locate the process in the list. There were two issues: - The executable name in the regexp was duplicated. This patch changed   the iteration over the arguments to not include the executable again. - If the process was started without using .exe in the name kill()   could not find it as the regexp did not have the .exe there. This patch   adds .exe if not already present as an optional match.  Note, I only tried this on Windows 8 so far so it's quite possible it breaks other versions - and I don't know if this is the right approach at all. Creating this for request for comments.","closed","","Zitrax","2013-02-01T14:51:07Z","2013-04-02T12:37:31Z"
"","322","Make PhantomJS driver more cross-platform aware","On Linux the filesystem is case-sensitive and executables don't end with "".exe"". This change modifies the PhantomJSDriver to search for ""phantomjs"" on Unix systems while keeping the filename ""PhantomJS.exe"" on Windows. This allows to use the default constructor of the PhantomJSDriver class on Linux. Previously using the default c'tor resulted in an error that ""PhantomJS.exe"" can't be found.","closed","","ermshiperete","2015-03-02T09:51:21Z","2015-03-04T10:38:44Z"
"","320","webdriverjs mocha: wait for 'done' callbacks to be invoked","Old code was passing the promise reject method as the test done callback. The promise representing the 'it' was always completed immediately.  This change makes it so if a test function is expecting a done callback, the callback is given control over resolving the promise.  Add tests for checking the ""done"" callback on an asynchronous 'it' invocation causes the system to wait correctly when using the webdriverjs wrappers for the mocha 'it'; and tests for the interaction of 'done' and control flow.  Several tests were passing the httpserver ""start"" method as a ""before"" callback.  Since this method takes an optional port number, it has a formal parameter, and so the updated 'it' infrastructure assumed these functions were async and expected a ""done"" callback to be passed in.  That didn't work.  Plus a smattering of documentation cleanups around the JavaScript code.  `npm test` with chrome and firefox:   1551 passing (2m)   3 pending   2 failing  2 failures are console logging failures that happen on a clean tree for me. (See https://code.google.com/p/selenium/issues/detail?id=8529)","closed","","tullmann","2015-02-25T22:58:31Z","2015-02-25T23:43:33Z"
"","318","webdriverjs mocha: handle 'done' callbacks correctly","Old code was passing the promise reject method as the test done callback. The promise representing the 'it' was always completed immediately.  This change makes it so if a test function is expecting a done callback, the callback is given control over resolving the promise.  Add tests for checking the ""done"" callback on an asynchronous 'it' invocation causes the system to wait correctly when using the webdriverjs wrappers for the mocha 'it'.  Several tests were passing the httpserver ""start"" method as a ""before"" callback.  Since this method takes an optional port number, it has a formal parameter, and so the updated 'it' infrastructure assumed these functions were async and expected a ""done"" callback to be passed in.  That didn't work.  Plus a smattering of documentation cleanups around the JavaScript code.0;95;c  npm test with chrome and firefox:   1551 passing (2m)   3 pending   2 failing  2 failures are console logging failures that happen on a clean tree.","closed","","tullmann","2015-02-25T19:27:15Z","2015-02-25T22:59:29Z"
"","396","confirmation handling Selenium IDE an duplicate record","notice: this bug was also reported in:  https://code.google.com/p/selenium/issues/detail?id=7996  hello, I have some problems with the treatment of confirmations. If I use the IDE in record mode, it records not correct on this and popup will suppressed. This problem exists since version 2.6.0. In addition, some tests break with the message: ""[error] There were no confirmations"" if i use the command ""storeConfirmation"", but they are definitely there.  I have uploaded 2 photos . The first shows my software with the IDE 2.4.0 and the correct lap recording. The other at the same point with version 2.8.0 with duplicate records from the click command, but no confirmation.  ![confirmation_2](https://cloud.githubusercontent.com/assets/11455286/6940097/9cafd2b8-d873-11e4-8ef8-be9af44ea74b.png) ![confimation_1](https://cloud.githubusercontent.com/assets/11455286/6940095/9978b2cc-d873-11e4-8d31-413a7d72343a.png) the duplicte records was also reported from me in: https://code.google.com/p/selenium/issues/detail?id=8611 Sorry for this, but i don´t know what the right way is since the migration to GitHub.  Selenium version:2.5.0/2.6.0/2.8.0 OS:Windows 8.1 and Vista Browser:Firefox  Browser version:36.0.4","closed","I-needs investigation,","Heizer1971","2015-04-01T11:39:23Z","2019-08-19T14:09:38Z"
"","328","Align parameter with WebElement implementation","Note that the docstring already said `link_text`! For some reason this was out of sync.  With this commit the implementation of all `find_element_*` methods in `WebDriver` and `WebElement` is made identical. A DRY implementation with a single (abstract) base class may be the logical next step. See discussion at https://groups.google.com/forum/#!topic/selenium-users/ahikZ0ouUok","closed","C-py,","bittner","2015-03-08T23:13:47Z","2015-09-01T19:44:46Z"
"","723","Add optional parameters to control use of Shadow DOM aware atoms.","Not sure if webdriver.atoms.element.getText should get a new parameter, or we should create a new function under webdriver.chrome. I've gone with the former, but if people prefer the latter let me know.  I am covered by the Corporate CLA that Google signed.","closed","","samuong","2015-07-01T17:58:10Z","2015-07-01T20:03:19Z"
"","114","No-op cleanup: proper Hamcrest usage in a test","No-op cleanup. Replaced direct usages of Hamcrest implementation classes (those are located differently in different versions of Hamcrest) with using Matchers' factory methods.  Tested: ./go //java/server/test/org/openqa/selenium/remote/server:test:run onlyrun=CapabilitiesComparatorTest","closed","","sevaseva","2013-09-12T00:16:11Z","2013-09-13T10:22:41Z"
"","112","No-op cleanup. Disabling executable bits for a bunch of non-executable files","No-op cleanup. Disabling executable bits for a bunch of non-executable files in common/ and java/.","closed","","sevaseva","2013-09-07T18:25:13Z","2014-06-18T01:35:08Z"
"","207","Googlechrome locator","newly installed chrome versions install to the program files/ directory on a windows machine instead of the app data directory.","closed","","ddavison","2014-04-17T20:48:09Z","2014-05-08T18:59:10Z"
"","223","Do not pass sessionId if it is not exists","New Selenium 2.42.0 is not compatible with python's bindings (even with 2.42.0).  The reason is that to create new session python's tried to send a `null` for sessionId, and selenium server standalone consider it as a error.  Example:  ``` bash $ curl 'http://127.0.0.1:4444/wd/hub/session' -d '{""sessionId"": null, ""desiredCapabilities"": {""platform"": ""ANY"", ""browserName"": ""firefox"", ""version"": """", ""javascriptEnabled"": true}}'  {""status"":13,""sessionId"":null,""value"":{""message"":null,""localizedMessage"":null,""suppressed"":[],""cause"":null,""class"":""java.lang.NullPointerException"",""hCode"":2043553261,""stackTrace"":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},""state"":""unhandled error"",""class"":""org.openqa.selenium.remote.Response"",""hCode"":1942816664} ```  But without an sessionId identifier it works:  ``` $ curl 'http://127.0.0.1:4444/wd/hub/session' -d '{""desiredCapabilities"": {""platform"": ""ANY"", ""browserName"": ""firefox"", ""version"": """", ""javascriptEnabled"": true}}' ```  It may be error in selenium server, but i try to fixed it for python bindings only.","closed","","bayandin","2014-05-26T16:43:55Z","2014-06-16T16:18:52Z"
"","79","Mention LogType.PERFORMANCE in CHANGELOG.","New log type supported in chromedriver2 0.9+","closed","","klepikov","2013-05-22T17:40:22Z","2013-05-26T20:59:12Z"
"","366","Never attempt to return the window name from getWindowHandles.","Never attempt to return the window name from getWindowHandles in FirefoxDriver; only return driver-generated handles.  Fixes #351.","closed","D-firefox,","juangj","2015-03-24T18:48:52Z","2015-03-24T21:53:49Z"
"","188","add fireevent on submit","Need an event on submit dispatcher.beforeClickOn(element, driver); element.submit(); dispatcher.afterClickOn(element, driver);","closed","","s2oBCN","2014-03-18T12:47:48Z","2014-03-18T13:11:52Z"
"","545","""h is null"" JavaScript error occurs sometimes","My tests sometimes fail because of a Javascript Error:  ``` Exception traceback: Traceback (most recent call last):   File ""run.py"", line 292, in      r.play()   File ""run.py"", line 256, in play     self.run_downloads()   File ""run.py"", line 146, in run_downloads     self.run_download(download)   File ""run.py"", line 167, in run_download     executor.start()   File ""run.py"", line 61, in start     expected_conditions.presence_of_element_located((By.CLASS_NAME, ""newsfeed-widget""))   File ""/srv/intex/venv/local/lib/python2.7/site-packages/selenium/webdriver/support/wait.py"", line 66, in until     value = method(self._driver)   File ""/srv/intex/venv/local/lib/python2.7/site-packages/selenium/webdriver/support/expected_conditions.py"", line 58, in __call__     return _find_element(driver, self.locator)   File ""/srv/intex/venv/local/lib/python2.7/site-packages/selenium/webdriver/support/expected_conditions.py"", line 279, in _find_element     raise e WebDriverException: Message: [JavaScript Error: ""h is null"" {file: ""file:///tmp/tmpv9LZnL/extensions/fxdriver@googlecode.com/components/command-processor.js"" line: 8478}]'[JavaScript Error: ""h is null"" {file: ""file:///tmp/tmpv9LZnL/extensions/fxdriver@googlecode.com/components/command-processor.js"" line: 8478}]' when calling method: [nsICommandProcessor::execute] ```  This seems to happen randomly - sometimes the tests work and other times they get this exception, without changing any code.  The exception seems to occur with the WebDriverWait part of my code, so here's the relevant code:  ``` self.driver.find_element_by_name(""button1"").click() try:     WebDriverWait(self.driver, 60).until(         expected_conditions.presence_of_element_located((By.CLASS_NAME, ""newsfeed-widget""))     ) except TimeoutException:     pass ```  Any help would be appreciated.","closed","","itsMichaelBates","2015-05-15T04:49:44Z","2019-08-21T06:09:45Z"
"","428","TypeKeys not working in IE or Chrome with latest version of webdrive","My test with typekeys command works fine in Firefox. But when I run the same test in IE or Chrome it doesn't work. Does anyone have any work around for this issue. Please Advice. Thanks","closed","","akila1","2015-04-07T19:48:21Z","2019-08-21T15:09:39Z"
"","750","the code  doesn't work very well with ie11, but ok with chrome","my development environment is win7 and the version of IE is ie11.  chrome can perform the action to open ""www.google.com"" and search with Cheese as a key word, but there's an exception  thrown out saying  ""org.openqa.selenium.NoSuchElementException: Unable to find element with name == q (WARNING: The server did not provide any stacktrace information)  Command duration or timeout: 312 milliseconds""  when it came to ie11.  Does it mean that selenium won't work with ie11 or there is some setting i should make for ie11?  below is the source i tried to run~  package techtest;  import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.remote.DesiredCapabilities;  public class GoogleTest {  ``` @Test public void test(){     System.setProperty(""webdriver.chrome.driver"","".\\src\\chromedriver.exe"");     System.setProperty(""webdriver.ie.driver"","".\\src\\IEDriverServer.exe"");     DesiredCapabilities capability = DesiredCapabilities.internetExplorer();     capability.setCapability(             InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);     WebDriver IEDriver = new InternetExplorerDriver(capability);     WebDriver googleDriver = new ChromeDriver();     testRun(googleDriver);     testRun(IEDriver); }   private void testRun(WebDriver driver){     driver.get(""http://www.google.com"");     // Alternatively the same thing can be done like this     // driver.navigate().to(""http://www.google.com"");     // Find the text input element by its name     WebElement element = driver.findElement(By.name(""q""));     // Enter something to search for     element.sendKeys(""Cheese!"");     // Now submit the form. WebDriver will find the form for us from the element     element.submit();  } ```  }","closed","D-IE,","mjf19891007","2015-07-09T02:56:39Z","2019-08-21T09:09:46Z"
"","745","while invoking driver.quit(), IE browser is not properly closed as what will happen with other browser","My development environment is win 7 and the version of IE browser is ie11, below is the source i tried to run but failed to close the browser. when i invoke driver.quit(), the browser didn't close    @Test     public void IETest() throws Exception{         System.setProperty(""webdriver.ie.driver""                 ,""C:\Users\ma.shunhou\AppData\Local\Mozilla Firefox\IEDriverServer.exe"");         DesiredCapabilities capability=DesiredCapabilities.internetExplorer();         capability.setCapability(                      InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS, true);         WebDriver driver = new InternetExplorerDriver(capability);  ```     driver.get(""http://www.google.com"");     Runtime.getRuntime().exec(""taskkill /F /IM iexplorer.exe"");     driver.quit();  } ```","closed","","mjf19891007","2015-07-08T03:30:56Z","2019-08-21T09:09:47Z"
"","412","Click is not working for FF 31 and chrome 32","My click is not working in ff  31 and chrome 32 Chrome is throwing this error  Element is not clickable at point (1444, 175). Other element would receive the click:  while in ff its not even throwing any error.   I have ff v 24.0 where click is working . my code structure is like that  ""  < ..a id=""anchorTagToClick"">                         link to click                ""","closed","","Snehashree","2015-04-03T13:44:54Z","2019-08-21T15:09:45Z"
"","728","HtmlUnit test cases to be @NotYetImplemented","Moving most of HtmlUnit cases from @Ignore to @NotYetImplemented, few cases already pass. Few cases are unstable (the test fails if run one, but succeeds if runs twice!) Other @Ignore cases are left as is, as they are outside HtmlUnit scope (Remote Driver/ rendering)","closed","C-java,","asashour","2015-07-02T14:41:32Z","2015-07-03T07:12:41Z"
"","773","[java] Refactor Bys, ""checkNotNull""","Move the checks to the constructors of the concrete classes (which are in the public API).  Also, some minor cleanups.","closed","C-java,","alb-i986","2015-07-13T23:15:02Z","2018-04-03T18:05:08Z"
"","485","JS: Use browser CORS support, if available","Mostly all browsers already support CORS, so there is no need to fall back using xdrcp, which might not even be implemented e.g. on chromedriver.","closed","","dbo","2015-04-24T12:38:20Z","2019-08-21T13:09:37Z"
"","133","Added code examples and more detailed explainations to doc strings.","Mostly added documentation around files in common and WebElement.  Things like detailed usage examples and explanation how a certain class works.","closed","","dlai0001","2013-11-04T18:52:08Z","2013-12-06T19:19:23Z"
"","633","Fixes #426 by throwing an error message if hub port is not mentioned","Modified to default the port as 4444 This fix will throw an error message if port was not mentioned in -hub hubURL.","closed","C-grid,","AJ-72","2015-06-09T09:20:26Z","2015-06-17T19:16:20Z"
"","60","Update usage text for servlets on hub & node","Minor confusion was started by the help section saying that servlets can be used for both ""hub & node"" but as we know this is not true.  I just removed & node from that portion of the text","closed","","dimacus","2013-04-29T20:49:14Z","2013-05-08T15:51:09Z"
"","119","Nosetests + PhantomJs webdriver generates IOError: [Errno 35] Resource temporarily unavailable on OSX","Minimal example:  ``` from selenium import webdriver driver = webdriver.PhantomJS()  def test_func():     print ""x"" * 1024*10     assert False ```  Results in:  ``` Bens-MacBook-Pro-2:unittest-test bc$ nosetests selenium_test.py F ====================================================================== FAIL: selenium_test.test_func ---------------------------------------------------------------------- Traceback (most recent call last):   File ""/Library/Python/2.7/site-packages/nose/case.py"", line 186, in runTest     self.test(*self.arg)   File ""/Users/bc/olark/unittest-test/selenium_test.py"", line 6, in test_func     assert False AssertionError:  -------------------- >> begin captured stdout","closed","","jaminben","2013-09-22T18:25:34Z","2014-06-16T12:36:41Z"
"","95","Fixes escapeQuotes method for string with tick and multiple quotes","Method Select.escapeQuotes has a bug. If string contains tick and multiple quotes and ends with quote, the last quote is not appended.  For example, escapeQuotes(""Bar \""Rock'n'Roll\"""") returns concat(""Bar "", '""', ""Rock'n'Roll""), but should return concat(""Bar "", '""', ""Rock'n'Roll"", '""')","closed","","asolntsev","2013-07-21T16:37:14Z","2014-06-18T17:59:42Z"
"","170","Cleaning up testShouldDoNothingIfThereIsNothingToGoBackTo","Making the test actually attempt to navigate().back() when there's nothing to go back to, and verify that nothing happens.  A follow up to https://code.google.com/p/selenium/source/detail?r=f31bcf5abb3f1eb7529ddc78b6f744700af2a39d","closed","","sevaseva","2014-02-23T08:21:25Z","2014-07-02T22:40:00Z"
"","202","Making ChromeDriver directly implement role interfaces","Making ChromeDriver directly implement the interfaces representing features it implements.  Currently, LocationContext and WebStorage are the only capabilities chromedriver returns, regardless of the kind of Chrome browser it is driving.  Augmentation never worked well on ChromeDriver, e.g. issue 6681 , and at times has been completely broken.  Because default ChromeDriver constructor starts a new session it cannot be augmented without consequences. A workaround has not been found.  Overriding getScreenshotAs() is dropped as redundant, RemoteWebDriver implementation works identically.","closed","","sevaseva","2014-04-11T01:53:22Z","2014-06-25T06:23:26Z"
"","104","updated python README","major update to Python README with examples and updated links.","closed","","cgoldberg","2013-08-19T15:44:11Z","2013-08-27T16:43:35Z"
"","131","Add a new command to get HeapSnapshot for ChromeDriver.","Main changes: 1. Add a new command ""-chromium-take-heap-snapshot"" and a new interface ""TakesHeapSnapshot"". 2. Make ChromeDriver.java implement ""TakesHeapSnapshot"". 3. Add an augmenter provider ""AddTakesHeapSnapshot"".","closed","C-java,","gaoshuotao","2013-10-30T16:35:57Z","2016-08-25T19:47:45Z"
"","357","add logging of a caught exception in TestSession","log exception that can occur while sending delete session request","closed","","innokenty","2015-03-21T22:51:24Z","2015-08-27T19:18:04Z"
"","439","lintText is not working with Selenium 2.45.0","lintText is not working with Selenium 2.45.0","closed","","mrjaiswar","2015-04-09T16:12:46Z","2019-08-21T14:10:03Z"
"","650","WebDriver to implement AutoClosable","Let WebDriver interface implements AutoCloseable  [AutoCloseable](http://docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html) is introduced since Java 7, and WebDriver already defines close() method. Making WebDriver implements AutoCloseable is backward compatible. Now WebDriver can be used in [try-with-resources](https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html) statement, and the IDE could hint the developer that WebDriver should be closed (if it is not called).","closed","","asashour","2015-06-11T11:40:26Z","2015-06-11T18:01:03Z"
"","532","Replace custom PATH_SEPARATOR with path.delimiter.","Less code!","closed","","tobli","2015-05-06T22:46:36Z","2015-05-22T20:39:52Z"
"","634","selenium 2.46.0 - java.lang.NoClassDefFoundError: org/apache/http/config/RegistryBuilder","Launching integration test phase with maven I get this error: java.lang.NoClassDefFoundError: org/apache/http/config/RegistryBuilder     at java.net.URLClassLoader$1.run(URLClassLoader.java:202)     at java.security.AccessController.doPrivileged(Native Method)     at java.net.URLClassLoader.findClass(URLClassLoader.java:190)     at java.lang.ClassLoader.loadClass(ClassLoader.java:307)     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)     at java.lang.ClassLoader.loadClass(ClassLoader.java:248)     at org.openqa.selenium.remote.internal.HttpClientFactory.getClientConnectionManager(HttpClientFactory.java:68)     at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClientFactory.java:56)     at org.openqa.selenium.remote.internal.HttpClientFactory.(HttpClientFactory.java:60)     at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.getDefaultHttpClientFactory(ApacheHttpClient.java:251)     at org.openqa.selenium.remote.internal.ApacheHttpClient$Factory.(ApacheHttpClient.java:228)     at org.openqa.selenium.remote.HttpCommandExecutor.getDefaultClientFactory(HttpCommandExecutor.java:89)     at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:63)     at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:58)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:95)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:275)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:116)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:220)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:215)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:132)  My pom.xml has this dependencies (version 2.46.0)                      org.seleniumhq.selenium             selenium-firefox-driver             test                               org.seleniumhq.selenium             selenium-server             test                               org.seleniumhq.selenium             selenium-support             test           To avoid the error I added this dependency too:   org.apache.httpcomponents   httpcore   4.4.1","closed","","matteoturra","2015-06-09T09:26:08Z","2019-08-21T12:09:34Z"
"","654","WebDriver.close() does not close browser window","Language: Java Selenium Client Version: 2.46.0 Browser: Firefox version 38.0.5 OS version: Windows 8.1  WebDriver.close() does not close browser window with 2.46.0 Everything works properly with 2.45.0 Sample code given below:  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class GoogleApp {  ``` public static void main(String[] args) {     WebDriver driver = new FirefoxDriver();     driver.get(""https://www.google.com/?gws_rd=ssl"");     driver.close(); } ```  }","closed","D-firefox,","sdghole","2015-06-11T23:57:04Z","2019-08-18T03:09:38Z"
"","161","Regard all modifier keys as such in SingleKeyAction","Keys.META, Keys.COMMAND, Keys.LEFT_ALT, Keys.LEFT_CONTROL and Keys.LEFT_SHIFT are now also regarded as modifier keys in SingleKeyAction. This fixes the issue reported in https://code.google.com/p/selenium/issues/detail?id=4843","closed","","zch","2014-01-15T13:00:28Z","2014-07-28T11:49:25Z"
"","230","Typo fixes in webdriver.js documentation","Just two little typos.","closed","","juliemr","2014-06-24T03:58:02Z","2014-09-15T22:54:13Z"
"","461","atoms test fails in Safari","javascript/atoms/test/select_test.html fails in Safari 7 and Safari 8. All of the failing tests appear to be because the 'change' event is not fired.  These tests fail: testClickCanSelectOptionWhenDefaultPrevented testClickCanToggleOptionsInAMultiSelect testClickTogglesByTheTimeChangeEventFires testTapCanSelectOptionWhenDefaultPrevented testTapCanToggleOptionsInAMultiSelect testTapTogglesByTheTimeChangeEventFires  The tests listed above are a superset of the tests for which select_test is already disabled in Chrome (see https://code.google.com/p/chromedriver/issues/detail?id=1073). I'll send a PR later to disable these tests in Safari as well.","closed","A-needs new owner,","juangj","2015-04-16T20:47:29Z","2019-08-19T15:09:43Z"
"","274","[JS] Don't return a value in the PhantomJS Driver constructor","JavaScript functions shouldn't return any value if they're being invoked with the 'new' operator. In this case it has a very nasty side effect: the PhantomJS driver seems to work just fine, however invoking the quit() method will not kill the service process and thus stray phantomjs processes will be left floating around. This can severely impact the running system when hundreds of flows are being created.","closed","","mcuelenaere","2014-10-26T23:13:17Z","2014-11-04T19:13:53Z"
"","775","Ignore java/client/iedriver.log","java/client/iedriver.log to be ignored  On running test case with IE driver, the log file is created and is marked a new file, which affects the patch creation.","closed","","asashour","2015-07-14T08:20:55Z","2017-09-11T09:32:22Z"
"","468","IEDriver crashes on getting log","Java sample to reproduce the problem:  ``` Java import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.logging.LogType;  public class NewClass {      public static void main(String[] args) {         InternetExplorerDriver driver = new InternetExplorerDriver();         driver.manage().logs().get(LogType.BROWSER);         driver.quit();     } } ```  [Here](https://gist.github.com/dr29bart/500ac5dbef6b823d25eb) is the stack trace","closed","","dr29bart","2015-04-19T17:01:12Z","2019-08-21T14:09:52Z"
"","698","How to select a SSL certificate  using Selenium web Driver?","I’m using Selenium Web Driver on Windows 7 using Java.  I need to test a web application and I’ve to use a SSL certificate to enter.  I don’t know how to select the right certificate to use my application.  I’m in this situation now ![sslcertificates-1](https://cloud.githubusercontent.com/assets/4707083/8281998/8de33af8-18ed-11e5-93ca-2f5246ccb6c1.PNG)  (NOTE: I’ve put also the AutoIt window to add some info …..but it doesn't work ...)  I've tried several roads ..... using AutoIT, deifining and using a Firefox profile with only a single SSL cdertificate, ecc ... but the problem is still the same. The certificates dialog, that is a modal one, come up and wait for a human interaction for the certificate selection. I've tried to search on the web but nothing to help me ....   Any suggestions / help / samples / tutorials on this stuff?  Thank you very much in advance!!  Cesare","closed","","cesaregerbino","2015-06-22T12:59:34Z","2019-08-21T10:09:51Z"
"","613","Add a GridLauncher.stop method for easy integration with Commons Daemon prunsrv","It would be really nice if there was a stop method somewhere. Currently I'm able to almost use [Commons Daemon prunsrv](http://commons.apache.org/proper/commons-daemon/procrun.html) with something like (on Windows):  ``` prunsrv //IS//selenium-server-hub   --Jvm auto ^   --StdOutput auto ^   --StdError auto ^   --LogPath ""%SERVICE_HOME%\logs"" ^   --StartPath ""%SERVICE_HOME%"" ^   --StartMode=jvm --StartClass=org.openqa.grid.selenium.GridLauncher --StartMethod=main ^   --StartParams ""-role;hub;"" ^   --StopMode=jvm --StopClass=org.openqa.grid.selenium.GridLauncher --StopMethod=close ^   --Classpath selenium-server.jar ^   --JvmMs 256 ^   --JvmMx 256 ```  BUT `GridLauncher` is missing a `close` method... can we have it? :-)  I could try to implement it myself if you are willing to accept the PR. I would introduce a static variable (of Closeable/Stoppable type) and change the Hub class (and the others) to implement the Stoppable interface.","closed","C-grid,","rgl","2015-06-04T23:24:05Z","2019-08-21T10:09:43Z"
"","603","Question: does the driver for Safari work for webview in a Mac OS application?","It seems the chrome driver could work with CEF webview: https://bitbucket.org/chromiumembedded/cef/wiki/UsingChromeDriver  But I did not find a way to set binary when using the Safari driver. Does it mean the current Safari driver cannot work with webview?","closed","","hy9be","2015-06-02T18:55:17Z","2019-08-21T12:09:46Z"
"","725","Remove executable flag from .java and .desc","It seems that the executable flag has been set for those files, but they are not executables. On an update, they can cause confusion, as they are shown as modified in Windows.","closed","C-java,","asashour","2015-07-02T07:25:20Z","2015-07-03T07:12:45Z"
"","210","Code comment changes for wait()","It is more common to use a condition returning a promise rather than a boolean, and this is supported by wait(). The angular protractor documentation is missing this important information due to it being generated from this function.","closed","","smhc","2014-04-25T12:51:09Z","2014-05-05T17:04:10Z"
"","256","Fix return value of Builder.usingServer to a self-reference.","It is documented as returning a self-reference (and this is useful for chaining), but before this commit was instead returning the string passed to it.","closed","","juliemr","2014-09-15T22:47:55Z","2014-09-16T06:38:54Z"
"","505","IEDriver's isDisaplyed should ignore opacitiy.","It is consistent with a latest W3C spec and Chrome/Firefox drivers.  Fixes #503","closed","","SevInf","2015-04-29T14:42:42Z","2015-04-29T15:04:17Z"
"","599","Don't convert non String types to lower in python","It appears that the original issue in https://code.google.com/p/selenium/issues/detail?id=5955 has returned. If webdriver returns integer and boolean values as integera and boolean types, calling .lower() is not valid.  This commit checks the type first, before checking if it's a boolean being returned as a string (so the fix is slightly different than in the issue linked above). It's also a good piece of defensive coding, regardless.","closed","","mikeage","2015-06-02T11:02:01Z","2015-06-03T18:42:50Z"
"","215","issue #7304 Fix memory leak caused by __del__ in PhantomJS","issue #7304 here: https://code.google.com/p/selenium/issues/detail?id=7304  CPython 2.7 cannot collect garbage in the following situation. (arrow means reference)  A  B(**del** defined) --> C(**del** defined)  8fc478b0 have added new circular reference A  B in this situation.  A: switch_to B: webdriver (in the module PhantomJS) C: subprocess.Popen (used by phantomjs/service)  In order to fix the issue #7304, moving **del** into service class is necessary. **del** defined class is not anymore in a reference cycle.","closed","","kcm1700","2014-05-07T01:13:20Z","2014-06-16T14:05:13Z"
"","696","Selenium Standalone Server with Credentials","Is there a way to setup the selenium standaloine serer with credentials ?  I 've to offer it on a aserver and want to make sure that no one unauthorized is using it.","closed","","BoasE","2015-06-22T07:37:35Z","2019-08-20T06:09:35Z"
"","338","How to get the output of the browser's console?","Is there a command to retrieve the browser's console output? This for various log levels, preferable as an event?  This feature has been raised in the WebdriverIO repository at https://github.com/webdriverio/webdriverio/issues/464 but it seems that this is rather a Selenium thing.  Let me know if this is already implemented or on your todo list. Thanks","closed","","binarykitchen","2015-03-16T20:48:08Z","2019-08-21T16:09:46Z"
"","761","Handled AttributeError with ImportError for IronPython Support","IronPython raises AttributeError instead of ImportError exception when checking for Python 3 Import Errors. This change handles both ImportError and AttributeError when check doing imports with exception checks   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/761)","closed","C-py,","tarunlalwani","2015-07-10T10:26:02Z","2020-09-26T00:06:01Z"
"","422","IE Driver returns 404: File not found","Internet explorer throws a ""404: File not found"" exception, when accessed concurrently by multiple threads. This issue was initially raised on code.google.com. I've ported it here, because I believe there needs to be a better solution than ""working as intended"", and I'm willing to provide a Thread safe solution. ### Details  **Artifact:** `org.seleniumhq.selenium:selenium-ie-driver:2.39.0` **IE Driver:** http://selenium-release.storage.googleapis.com/2.45/IEDriverServer_Win32_2.45.0.zip **IE Version:** 10.0.25 **System:** Windows 8 Enterprise 64bit **Duplicate of:** https://code.google.com/p/selenium/issues/detail?id=6592 ### Exception  ``` java Exception in thread ""Thread-4"" org.openqa.selenium.UnsupportedCommandException: Error 404: Not Found Not Found Command duration or timeout: 32 milliseconds Build info: version: '2.39.0', revision: '14fa800511cc5d66d426e08b0b2ab926c7ed7398', time: '2013-12-16 13:18:38' System info: host: 'mycomputer', ip: '10.1.1.123', os.name: 'Windows 8', os.arch: 'amd64', os.version: '6.2', java.version: '1.7.0_67' Session ID: 65c90ea4-4af6-43bc-9f27-ex366bbe4150 Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{platform=WINDOWS, javascriptEnabled=true, elementScrollBehavior=0, ignoreZoomSetting=false, enablePersistentHover=true, ie.ensureCleanSession=false, browserName=internet explorer, enableElementCacheCleanup=true, unexpectedAlertBehaviour=dismiss, version=10, ie.usePerProcessProxy=false, cssSelectorsEnabled=true, ignoreProtectedModeSettings=true, requireWindowFocus=false, handlesAlerts=true, initialBrowserUrl=http://localhost:6461/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.browserCommandLineSwitches=, takesScreenshot=true}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:193)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:145)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:554)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268)     at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:89)     at com.btfin.atp.SeleniumDefect$1.run(SeleniumDefect.java:21) ``` ### Minimum code to reproduce  ``` java final WebDriver driver = new InternetExplorerDriver(DesiredCapabilities.internetExplorer()); driver.get(""www.google.com.au""); for (int i = 0; i < 2; i++){     new Thread(){         public void run() {             driver.findElement(By.name(""q"")).sendKeys(""Woot!"");         }     }.start(); } Thread.sleep(2000); // wait for all threads to finish... driver.quit(); ``` ### Proposed solution  https://gist.github.com/nickgrealy/267fd8016bc84eddeb50#file-synchronizedwebdriver-java  This is just a base point for discussion. Other solutions welcomed.","closed","","nickgrealy","2015-04-07T01:52:06Z","2019-08-20T18:09:58Z"
"","249","Initial code cleanup of the HtmlUnit driver","Initial code cleanup of the HtmlUnit driver","closed","","rbri","2014-09-01T18:07:55Z","2014-09-16T10:30:33Z"
"","470","By composite","In this work I make explicit that ByAll, ByChained are Composites of Bys, and I define more Composites that compose Bys in different ways. - ByLazyOr: similar to ByAll but this works like a lazy OR: it will return as soon as one of the given locators retrieves some elements - ByOr: alias for ByAll - ByAnd: similar to ByChained but this is more restrictive, as it works like a boolean AND: if any one of the locators retrieves no elements, then an empty list is returned. - ByUnion: returns the union of the elements retrieved by each locator. Similar to ByAll aka ByOr, but this will return a list of elements without any duplicates. - ByIntersection: returns the intersection of the elements retrieved by each locator.  About the names of the classes, I'm open to suggestions :)  PS: while working on this, I realized that the existing ByAll is currently returning duplicate elements, if different lookups (By objects) return the same element(s).  ```   @Test   public void findFourElementsByAny() {     final AllDriver driver = mock(AllDriver.class);     final WebElement elem1 = mock(AllElement.class, ""webElement1"");     final WebElement elem2 = mock(AllElement.class, ""webElement2"");     final WebElement elem3 = mock(AllElement.class, ""webElement3"");     final WebElement elem4 = mock(AllElement.class, ""webElement4"");     final List elems12 = new ArrayList();     elems12.add(elem1);     elems12.add(elem2);     final List elems34 = new ArrayList();     elems34.add(elem3);     elems34.add(elem4);     final List elems1234 = new ArrayList();     elems1234.addAll(elems12);     elems1234.addAll(elems34);      when(driver.findElementsByName(""cheese"")).thenReturn(Arrays.asList(elem1, elem2, elem3));     when(driver.findElementsByName(""photo"")).thenReturn(elems34);      ByAll by = new ByAll(By.name(""cheese""), By.name(""photo""));     assertThat(by.findElements(driver), equalTo(elems1234));   } ```  will give  ``` java.lang.AssertionError:  Expected:       but: was  ```  Is this known wanted behaviour? If it is a bug, ByUnion will be redundant, as it will have exactly the same behaviour as ByAll.  Thanks   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/470)","closed","C-java,","alb-i986","2015-04-20T04:33:52Z","2020-04-08T21:14:49Z"
"","290","Set default value for PhantomJS `Service.process` reference","In the PhantomJS `Service` class, the `process` attribute can be undefined if something goes wrong. In that case, the destructor (`__del__`) raises an `AttributeError`. (That actually happened to me, so it's not just theoretical.) This PR should fix that.  I signed the CLA.  PS: I assume the original author knew about that, but a `__del__` method prevents the garbage collector from cleaning up the memory, if it's not done manually. Also, it is not guaranteed that `__del__` is called: http://stackoverflow.com/a/1481512/284318","closed","","dbrgn","2014-11-25T16:06:16Z","2014-11-25T18:40:49Z"
"","400","Report and search issues still goes to old system","In the help drop down in Selenium IDE 2.9.0 the report and search issues links still go to https://code.google.com/ People are still reporting issues there.","closed","C-ide,","dharris2","2015-04-01T14:33:21Z","2019-08-21T15:09:54Z"
"","651","IEDriverServer 2.46 crashing while trying to read the message text of non standard alert","In the GetDirectUIDialogText() method of Alert.cpp when the program attempts at get the name of message_text_object (hr = message_text_object->get_accName(child_id, &text_bstr)) if the object doesn't have a name then this will fail to get a name and return S_FALSE. This is a problem because the FAILED(hr) function doesn't catch this due to S_FALSE equaling 1 while FAILED only checks for negative numbers. When the program tries to assign text_bstr to text it will crash due to text_bstr being null. It seems like the check to see if getting the accName property failed should include checking for S_FALSE as this also indicates a failure to get the accName property.","closed","","sroyal5990","2015-06-11T17:36:17Z","2019-08-21T11:09:57Z"
"","570","Hyperlink element without href can't be recorded","In selenium IDE, hyperlink elements that don't have an href attribute can't be recorded. Sometime hyperlink are created without the href attribute.","closed","C-ide,","jeromeblouin","2015-05-26T17:06:35Z","2019-08-21T11:09:42Z"
"","791","webdriver doesn't wait for the whole page to be loaded","In Selenium 2.46 the sentence webdriver.get(String url) don't wait for the whole page to be loaded. In Selenium 2.45 works fine. Reproduced in FF 38, 39 and 40.   The definition of webdriver:             FirefoxProfile fp = new FirefoxProfile();             fp.setPreference(""network.proxy.type"", 0);              fp.setPreference(""toolkit.startup.max_resumed_crashes"", -1);              fp.setPreference(""browser.sessionstore.postdata"", -1);              fp.setPreference(""browser.cache.disk.enable"", true);             fp.setPreference(""browser.cache.memory.enable"", true);             fp.setPreference(""browser.cache.offline.enable"", true);             fp.setPreference(""network.http.use-cache"", true);             fp.setPreference(""webdriver.load.strategy"", ""unstable"");              fp.setPreference(""media.autoplay.enabled"", false);              fp.setPreference(""media.ogg.enabled"", false);              fp.setPreference(""media.webm.enabled"", false);              fp.setPreference(""media.windows-media-foundation.enabled"", false);                  DesiredCapabilities dc = new DesiredCapabilities();                   dc.setCapability(CapabilityType.LOGGING_PREFS, logs);             dc.setBrowserName(DesiredCapabilities.firefox().getBrowserName());             dc.setCapability(FirefoxDriver.PROFILE, fp);             FirefoxBinary fb = new FirefoxBinary();              fb.setTimeout(java.util.concurrent.TimeUnit.SECONDS.toMillis(60));             FirefoxDriver remote = new FirefoxDriver(fb, fp, dc);                 webdrive = remote;  It also appears that there are problems with the sentence: ExpectedCondition expectation = new ExpectedCondition() {     public Boolean apply(WebDriver webdriver) {        return ((JavascriptExecutor) webdriver).executeScript(            ""return document.readyState"").equals(""complete"");     } };  This seems to return true in many situations when the page is yet loading. Selenium 2.46 KO, Selenium 2.45 OK.","closed","","Jorge2M","2015-07-15T14:02:24Z","2019-08-21T08:09:53Z"
"","663","same html page,use By.XPath, ie,firefox run good, chrome give a error.","In same html page:  http://news.baidu.com/ driver.getElements(By.Xpath(""//body"")) is run good on IE and Firefox, but on Chrome it cause a error:  invalid selector: Unable to locate an element with the xpath expression //body because of the following error: TypeError: Cannot read property 'match' of undefined   (Session info: chrome=41.0.2272.76)   (Driver info: chromedriver=2.15.322448 (52179c1b310fec1797c81ea9a20326839860b7d3),platform=Windows NT 6.1 SP1 x86_64)  And run javascript in chrome can get the right result: ## So I resolve it like below:  Dim all As ReadOnlyCollection(Of IWebElement)         Try             all = Application.driver.FindElements(By.XPath(xpath))         Catch ex As Exception             Dim js = ""var ret = Array(); var a = document.evaluate(arguments[0], document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null); for( var i = 0 ; i < a.snapshotLength ; i++ ){ aResult.push(a.snapshotItem(i)); } return ret;""             all = (DirectCast(Application.driver, IJavaScriptExecutor).ExecuteScript(js, xpath))         End Try  have something different on Chrome? or different with this page?  http://news.baidu.com/","closed","","brickhe","2015-06-15T08:59:38Z","2019-08-21T11:09:51Z"
"","515","SafariDriver on Mac OSx adding some extra json values while sending app data to application server","In our application, when we try to save a record, data is sent to server in json format. But while running selenium webdriver scripts on Mac Safari, the record is not getting saved even if manually the same record gets saved in Mac Safari.  i.e. while sending data to the server in json format, some extra characters or json value might be getting sent to the server causing the record to fail to save.   Is there any workaround or solution to this issue?  Application platform: MVC, .Net, Html5, restful web API Automation framework: Webdriver 2.45.0, C# , Mac Safari.  The above scenario works fine in other browsers on Windows.  Many thanks in advance.","closed","","svaze","2015-05-04T12:46:41Z","2019-08-19T17:09:45Z"
"","747","OSGi-enable the selenium java client jar files","In order to use the selenium java client in an OSGi environment, the jar files must have the OSGi metadata defined in the manifest of the archive.  This change utilizes the Apache Felix Maven Bundle Plugin to auto-generate the OSGi metadata during the build of the maven artifacts.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/747)","closed","C-infra,","enapps-enorman","2015-07-08T21:55:29Z","2018-11-28T20:34:29Z"
"","154","Avoiding sending body with GET and DELETE requests","in order to restore pre https://code.google.com/p/selenium/source/detail?r=93dc12845343 behavior.  Note that HTTP/1.1 spec 1) allows body in DELETE, 2) mentions that it has no defined semantics and 3) that some existing server implementations may reject DELETE with body: http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-19#section-6.7 ## WebDriver protocol does not seem to need the body in DELETE and it was not sent pre https://code.google.com/p/selenium/source/detail?r=93dc12845343  Created by MOE: http://code.google.com/p/moe-java","closed","","sevaseva","2013-12-16T23:51:53Z","2014-01-10T07:11:30Z"
"","147","Avoiding sending body with GET and DELETE requests","in order to restore pre https://code.google.com/p/selenium/source/detail?r=93dc12845343 behavior.  Note that HTTP/1.1 spec 1) allows body in DELETE, 2) mentions that it has no defined semantics and 3) that some existing server implementations may reject DELETE with body: http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-19#section-6.7 ## WebDriver protocol does not seem to need the body in DELETE and it was not sent pre https://code.google.com/p/selenium/source/detail?r=93dc12845343  Created by MOE: http://code.google.com/p/moe-java","closed","","sevaseva","2013-12-09T14:07:04Z","2014-02-23T08:35:37Z"
"","648","Not able to click submenu which is dynamicly visible in Selenium WebDriver 2.45 and Firefox 31.0","In my scenario, I need to click the submenu that's only visible when its parent menu is in 'mouse over' status:    MainMenu (Dropdown list)(ul)    SubMenu of MainMenu (a)    SubMenu of SubMenu of MainMenu (li)  I need to click the 6th submenu, but it can only be visible when 1st dropdown menu is clicked on and mouse over the 2nd. I've tried with the ActionChains (Java) api (move_to_element, click, perform , even click_and_hold) in Selenium WebDriver, but had no luck. Can anyone please help me with this. Great Thanks!   Here is the HTML tags   Reports         Raw Data Report","closed","","Bagirathe","2015-06-11T10:31:28Z","2019-08-21T11:09:54Z"
"","567","[WebDriverJs] 2.45 breaks Yadda examples","In https://github.com/acuminous/yadda/issues/109 @kblcuk reports that selenium-webdriver 0.245 causes all the [Yadda webdriver examples](https://github.com/acuminous/yadda/blob/master/examples/mocha-webdriver/test.js) examples to hang. I've reproduced and can confirm that the examples run fine with 2.44  I suspect it's related to my use of `webdriver.promise.controlFlow().execute` and see the selenium-webdriver code in this area has changed considerably. Am I using controlFlow() incorreclty?","closed","","cressie176","2015-05-26T07:21:58Z","2019-08-21T12:09:56Z"
"","658","Reading list info panel in Firefox 38 causes web content to be obscured","In Firefox 38 the first time an article is detected an info panel for Reading List is displayed. This can interfere with tests by masking elements and causing them to be reported as not visible.  Screenshot: ![screenshot 2015-06-12 16 39 03](https://cloud.githubusercontent.com/assets/122800/8133702/c480fb96-1121-11e5-920b-bb22f7afa3f2.png)  Setting the preference browser.reader.detectedFirstArticle to true fixes this. See also https://hg.mozilla.org/mozilla-central/file/0093691d3715/browser/modules/ReaderParent.jsm#l193","closed","","davehunt","2015-06-12T15:43:21Z","2019-08-21T11:09:45Z"
"","475","Python: phantomjs: fix usage of WebDriverException","In case of an exception from `subprocess.Popen` it would pass the exception as positional argument for `screen`.  This fixes it to use the exception in the message.  From https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/common/exceptions.py:  ``` class WebDriverException(Exception):     """"""     Base webdriver exception.     """"""      def __init__(self, msg=None, screen=None, stacktrace=None):         self.msg = msg         self.screen = screen         self.stacktrace = stacktrace      def __str__(self):         exception_msg = ""Message: %s\n"" % self.msg         if self.screen is not None:             exception_msg += ""Screenshot: available via screen\n""         if self.stacktrace is not None:             stacktrace = ""\n"".join(self.stacktrace)             exception_msg += ""Stacktrace:\n%s"" % stacktrace         return exception_msg ```  So it seems like it is not used correctly here?!  ```         raise WebDriverException(""Unable to start phantomjs with ghostdriver."", e) ```  (Source: https://github.com/SeleniumHQ/selenium/blob/master/py/selenium/webdriver/phantomjs/service.py#L78)  Another commit improves the message when it cannot connect to GhostDriver.","closed","","blueyed","2015-04-21T17:50:41Z","2015-07-16T16:46:55Z"
"","267","update FindBy annotations description","in accordance with #205","closed","","artkoshelev","2014-10-13T11:03:54Z","2014-10-18T11:21:09Z"
"","670","JavaScript bindings uses `eval` for parsing HTTP response","In `http.js` you can find [`goog.json.parse` method](https://github.com/SeleniumHQ/selenium/blob/master/javascript/webdriver/http/http.js#L192-L193), used for parsing response of HTTP request. Internally this method [tries to run passed string as a code](https://github.com/SeleniumHQ/selenium/blob/01399fffecd5a20af6f31aed6cb0043c9c5cde65/third_party/closure/goog/json/json.js#L102) (yes, through `eval`).  Don't you think it is not reasonable to run any code sent from some server in your application? Selenium server is very often external service, like BrowserStack or SauceLabs. Me, personally, don't trust them as much to give them total control, even over my testing environment.","closed","","erykpiast","2015-06-16T09:36:55Z","2019-08-21T10:09:57Z"
"","74","IEDriver desiredCapabilities.ensureCleanSession using WinInetUtilities","Implements IE cache clearing. See: http://code.google.com/p/selenium/issues/detail?id=40  CLA already filed.  liulk","closed","","liulk","2013-05-17T16:18:59Z","2014-06-16T03:53:15Z"
"","47","Implement ability to specify IE launch API and IE CLI switches","Implement ability to specify IE launch API and IE CLI switches.  Using IE in Private mode may be necessary to support parallel testing in IE browsers on single node. For this it is required to use CreateProcess() launch API and specify IE CLI switches. This commit based on idea of Mail.Ru implements required abilities.  What's done: - ability to specify forcibly to use some IE launch api: IELaunchURL() or CreateProcess().   NOTE: for IE8 and older a CreateProcess() API is allowed to use only if HKCU\Software\Microsoft\Internet Explorer\Main\TabProcGrowth is equal to 0. See [1]   NOTE: old way of using API on determination of IELaunchURL() address in ieframe.dll is still used if nothing is specified. - ability to specify a IE switches to use if CreateProcess() API is used See [2] - extended set of passed parameters to IECommandExecutor thread by using struct. It fixes 2 TODOs. - extended set of passed parameters to IESession->Initialize() by using struct - more trace and error logging - support of single and double quoting of IEDriverServer CLI arguments - use finite timeout (30 seconds) for waiting of new IECommandExecutor thread - add 2 windows log helpers  In progress: - supporting all TabProcGrowth values - python binding: supporting of all IEDriverServer switches - java binding: supporting of all IEDriverServer switches (see another pull request)  [1] http://blogs.msdn.com/b/askie/archive/2009/03/09/opening-a-new-tab-may-launch-a-new-process-with-internet-explorer-8-0.aspx [2] http://msdn.microsoft.com/en-us/library/hh826025(v=vs.85).aspx  the CLA as Alex Savchuk on behalf of Mail.Ru has been signed.","closed","","alex-savchuk","2013-04-09T20:05:40Z","2013-04-11T16:13:02Z"
"","40","Implement ability to specify IE launch API and IE CLI switches.","Implement ability to specify IE launch API and IE CLI switches.  Using IE in Private mode is required to support parallel testing in IE browsers on single node. For this it is required to use CreateProcess() launch API and specify IE CLI switches. This commit based on idea of Mail.Ru implements required abilities.  What's done: - ability to specify forcibly to use some IE launch api: IELaunchURL() or CreateProcess().   NOTE: for IE8 and older a CreateProcess() API is allowed to use only if   HKCU\Software\Microsoft\Internet Explorer\Main\TabProcGrowth is equal to 0.   See [1]   NOTE: old way of using API on determination of IELaunchURL() address   in ieframe.dll is still used if nothing is specified. - ability to specify a IE switches to use if CreateProcess() API is used   See [2] - extended set of passed parameters to IECommandExecutor thread by using struct.   It fixes 2 TODOs. - extended set of passed parameters to IESession->Initialize() by using struct - more trace and error logging - support of single and double quoting of IEDriverServer CLI arguments - use finite timeout (30 seconds) for waiting of new IECommandExecutor thread - add 2 windows log helpers  In progress: - supporting all TabProcGrowth values - python binding: supporting of all IEDriverServer switches - java binding: supporting of all IEDriverServer switches  [1] http://blogs.msdn.com/b/askie/archive/2009/03/09/opening-a-new-tab-may-launch-a-new-process-with-internet-explorer-8-0.aspx [2] http://msdn.microsoft.com/en-us/library/hh826025(v=vs.85).aspx  the CLA as Alex Savchuk on behalf of Mail.Ru has been signed.","closed","","alex-savchuk","2013-04-06T18:09:05Z","2013-04-09T20:07:10Z"
"","426","Use of ""-1"" as port if not specified in the `-hub` URL","If you setup a selenium to connect to a hub using the option `-hub http://example.com/grid/register` the following appears in the error log output:  ``` 17:41:01.837 INFO - Registering the node to hub :http://example.com:-1/grid/register ```","closed","I-papercut,","toote","2015-04-07T17:42:37Z","2019-08-21T11:09:39Z"
"","760","Changing the path of testcases in a test suite","If the path for the test case is changed and then if we want to access a test suite with the test cases whose paths are changed. we get an error. But we cant edit the path of the changed test case path. How to resolve this issue?","closed","","nithinbang","2015-07-10T10:11:26Z","2019-08-21T09:09:40Z"
"","387","Check existence before creating a new directory","If the name ends with '/', check if the tmp directory already exists before trying to create it. Previously, it would result in an OS Error exception being thrown.","closed","C-py,","cezarelnazli","2015-03-28T18:07:42Z","2015-03-30T17:51:02Z"
"","23","Ignore scrollIntoView problems in SVG documents for Firefox driver","If the document in the view is a SVG scrolling does not make much sense and resulting errors can be safely ignored.  The first commit is a already in pull request 21. CLA signed","closed","","paroga","2013-03-06T13:54:39Z","2014-07-17T20:49:36Z"
"","421","Update remote_connection.py","If the connection is going to use https then don't modify the URL to use an IP address. Keep that sucker a hostname.","closed","C-py,","jkohls","2015-04-06T21:07:28Z","2016-11-29T00:04:06Z"
"","583","PhantomJS Python driver: allow stop to be safely called multiple times.","If stop is called on an already-stopped service (e.g. by `__del__`) it must not signal the PID of the now-dead phantomjs process, otherwise it randomly kills processes which have reused this PID.","closed","","tonyhignett","2015-05-28T16:14:09Z","2015-07-29T20:17:06Z"
"","498","Send_keys Python 2.7 function does not handle long type variables","If I try to send a long number to edit box in Python 2.7, I get a type error. This is because function does not check for long type like it does for int. This happens only on Python 2.7 because Python 3 does not have long type.  > Type should be long:  > Traceback (most recent call last): > File ""sele.py"", line 7, in  >   element.send_keys(longnumber) > File ""c:\python27\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 320, in >send_keys >    for i in range(len(val)): > TypeError: object of type 'long' has no len()  Code to reproduce:  ``` python from selenium import webdriver driver = webdriver.Firefox() driver.get('http://www.google.com') element = driver.find_element_by_id('lst-ib') longnumber = (65536*65536) print ('Type should be long: %s' % type(longnumber)) element.send_keys(longnumber) ```","closed","C-py,","kivipe","2015-04-28T06:21:28Z","2019-08-21T01:09:52Z"
"","624","/sessions endpoint doesn't respond","If I pry into a `Selenium::WebDriver` session and attempt to hit the server with `GET /sessions` I receive the following error:  ``` Selenium::WebDriver::Error::UnknownError: Session [(null externalkey)] not available and is not among the last 1000 terminated sessions. Active sessions are[ext. key d18b9dfa-e33b-49bf-a715-35e43b810c04] (org.openqa.grid.common.exception.GridException) from [remote server] org.openqa.grid.internal.ActiveTestSessions(ActiveTestSessions.java):110:in `getExistingSession' ```  I've also tried to curl the end point as well:  ``` curl -H ""Content-Type: application/json; charset=UTF-8"" -H ""Accept: application/json"" http://localhost:4444/sessions ```  But I keep getting this (incorrect) response:  ``` Selenium Grid2.0 helpYou are using grid 2.45.0Find help on the official selenium wiki : more help heredefault monitoring page : console ```  Am I doing something wrong? There are active sessions and I can actually drive them through the server.","closed","","thedeeno","2015-06-05T16:37:57Z","2019-08-20T14:09:59Z"
"","462","[IEDriverServer / Java] Intermittant failure launching IE from WebDriver","IEDriverServer sometimes fails with: `Unexpected error launching Internet Explorer. Found browser window using ShellWindows API, but could not attach to the browser IWebBrowser2 object. (WARNING: The server did not provide any stacktrace information)`  In my environment I can replicate this with the following snippet:  ``` java public static void main(String[] args) throws InterruptedException {     System.setProperty(""webdriver.ie.driver"", ""c:\\IEDriverServer_5b9bca3_x64.exe"");     InternetExplorerDriverService service = InternetExplorerDriverService.createDefaultService();      for (int count = 0; count < 10; count++) {         WebDriver driver = new InternetExplorerDriver(service);         driver.navigate().to(""http://www.google.co.uk/"");         new WebDriverWait(driver, 5).until(ExpectedConditions.presenceOfElementLocated(By.xpath(""//input"")));         String title = driver.getTitle();         System.out.println(""Window title "" + count + "": "" + title);         driver.quit();         Thread.sleep(1000);     } } ```  This is an intermittent problem - approximately 50% of the time InternetExplorerDriver starts fine, but about 50% of the time it fails. It always fails within 10 iterations in my environment.  My environment: - Windows 7 VM (not the fastest VM...) - selenium-java 2.45 - Internet Explorer 10.0.9200.17267 - IEDriverServer from commit 5b9bca3  Debug log from a failed start:  ``` I 2015-04-17 11:52:22:805 server.cc(75) Starting WebDriver server on port: '2798' on host: '' D 2015-04-17 11:52:22:806 server.cc(113) Civetweb ACL is -0.0.0.0/0,+127.0.0.1 D 2015-04-17 11:52:23:092 server.cc(246) Command: GET /status {} D 2015-04-17 11:52:23:093 server.cc(320) Response: {""sessionId"":"""",""status"":0,""value"":{""build"":{""version"":""2.45.0.2""},""os"":{""arch"":""x64"",""name"":""windows"",""version"":""6.1.7601""}}}  D 2015-04-17 11:52:23:103 server.cc(246) Command: POST /session {""desiredCapabilities"":{""ensureCleanSession"":true,""browserName"":""internet explorer"",""version"":"""",""platform"":""WINDOWS""}} D 2015-04-17 11:52:23:103 IESession.cpp(52) Mutex acquired for session initalization D 2015-04-17 11:52:23:103 IESession.cpp(97) Using legacy driver implementation per user request D 2015-04-17 11:52:23:106 IESession.cpp(131) Releasing session initialization mutex D 2015-04-17 11:52:23:106 command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {""desiredCapabilities"":{""ensureCleanSession"":true,""browserName"":""internet explorer"",""version"":"""",""platform"":""WINDOWS""}} } D 2015-04-17 11:52:23:106 BrowserFactory.cpp(80) Ignoring Protected Mode Settings: 0 D 2015-04-17 11:52:23:106 BrowserFactory.cpp(83) Checking validity of Protected Mode settings. D 2015-04-17 11:52:23:106 BrowserFactory.cpp(1034) Detected IE version: 10, detected Windows version: 6 D 2015-04-17 11:52:23:106 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 1 D 2015-04-17 11:52:23:106 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 2 D 2015-04-17 11:52:23:106 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 3 D 2015-04-17 11:52:23:106 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 4 D 2015-04-17 11:52:23:106 BrowserFactory.cpp(86) Has Valid Protected Mode Settings: 1 D 2015-04-17 11:52:23:110 BrowserFactory.cpp(182) Starting IE using the IELaunchURL API D 2015-04-17 11:52:23:338 BrowserFactory.cpp(136) IE launched successfully with process ID 3008 D 2015-04-17 11:52:23:338 BrowserFactory.cpp(142) Process with ID 3008 is executing iexplore.exe D 2015-04-17 11:52:23:338 BrowserFactory.cpp(309) Using Active Accessibility to find IWebBrowser2 interface D 2015-04-17 11:52:24:896 BrowserFactory.cpp(365) Found window handle 000000000028077E for window with class 'Internet Explorer_Server' belonging to process with id 3008 D 2015-04-17 11:52:25:015 server.cc(246) Command: GET /favicon.ico {} D 2015-04-17 11:52:25:016 server.cc(320) Response: { ""status"" : 404, ""sessionId"" : """", ""value"" : ""Command not found: GET /favicon.ico"" } W 2015-04-17 11:52:27:118 BrowserFactory.cpp(413) -2147467262 [No such interface supported]: Call to IHTMLDocument2::get_parentWindow failed D 2015-04-17 11:52:27:118 BrowserFactory.cpp(313) Failed to find IWebBrowser2 using ActiveAccessibility:  D 2015-04-17 11:52:27:119 BrowserFactory.cpp(319) Using IShellWindows to find IWebBrowser2 interface W 2015-04-17 11:52:27:126 IECommandExecutor.cpp(660) Unable to attach to browser COM object W 2015-04-17 11:52:27:126 response.cc(77) Error response has status code 6 and message 'Unexpected error launching Internet Explorer. Found browser window using ShellWindows API, but could not attach to the browser IWebBrowser2 object.' message W 2015-04-17 11:52:27:126 IECommandExecutor.cpp(537) Unable to get current browser D 2015-04-17 11:52:27:136 server.cc(197) Shutdown session is not found D 2015-04-17 11:52:27:136 server.cc(320) Response: {""sessionId"":""33c7dd57-b133-4767-a44d-17817ced25e0"",""status"":6,""value"":{""message"":""Unexpected error launching Internet Explorer. Found browser window using ShellWindows API, but could not attach to the browser IWebBrowser2 object.""}} ```  Debug log when IEDriverServer SUCCEEDS in connecting to IE:  ``` I 2015-04-17 11:55:28:021 server.cc(75) Starting WebDriver server on port: '31146' on host: '' D 2015-04-17 11:55:28:022 server.cc(113) Civetweb ACL is -0.0.0.0/0,+127.0.0.1 D 2015-04-17 11:55:28:894 server.cc(246) Command: GET /status {} D 2015-04-17 11:55:28:895 server.cc(320) Response: {""sessionId"":"""",""status"":0,""value"":{""build"":{""version"":""2.45.0.2""},""os"":{""arch"":""x64"",""name"":""windows"",""version"":""6.1.7601""}}}  D 2015-04-17 11:55:29:220 server.cc(246) Command: POST /session {""desiredCapabilities"":{""ensureCleanSession"":true,""browserName"":""internet explorer"",""version"":"""",""platform"":""WINDOWS""}} D 2015-04-17 11:55:29:220 IESession.cpp(52) Mutex acquired for session initalization D 2015-04-17 11:55:29:221 IESession.cpp(97) Using legacy driver implementation per user request D 2015-04-17 11:55:29:224 IESession.cpp(131) Releasing session initialization mutex D 2015-04-17 11:55:29:224 command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {""desiredCapabilities"":{""ensureCleanSession"":true,""browserName"":""internet explorer"",""version"":"""",""platform"":""WINDOWS""}} } D 2015-04-17 11:55:29:224 BrowserFactory.cpp(80) Ignoring Protected Mode Settings: 0 D 2015-04-17 11:55:29:224 BrowserFactory.cpp(83) Checking validity of Protected Mode settings. D 2015-04-17 11:55:29:224 BrowserFactory.cpp(1034) Detected IE version: 10, detected Windows version: 6 D 2015-04-17 11:55:29:224 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 1 D 2015-04-17 11:55:29:224 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 2 D 2015-04-17 11:55:29:224 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 3 D 2015-04-17 11:55:29:224 BrowserFactory.cpp(1124) Found Protected Mode setting value of 0 for zone 4 D 2015-04-17 11:55:29:224 BrowserFactory.cpp(86) Has Valid Protected Mode Settings: 1 D 2015-04-17 11:55:29:249 BrowserFactory.cpp(182) Starting IE using the IELaunchURL API D 2015-04-17 11:55:29:492 BrowserFactory.cpp(136) IE launched successfully with process ID 5604 D 2015-04-17 11:55:29:492 BrowserFactory.cpp(142) Process with ID 5604 is executing iexplore.exe D 2015-04-17 11:55:29:492 BrowserFactory.cpp(309) Using Active Accessibility to find IWebBrowser2 interface D 2015-04-17 11:55:31:289 BrowserFactory.cpp(365) Found window handle 0000000000090582 for window with class 'Internet Explorer_Server' belonging to process with id 5604 D 2015-04-17 11:55:31:383 BrowserFactory.cpp(327) Ignoring zoom setting: 0 D 2015-04-17 11:55:31:427 BrowserFactory.cpp(625) Browser zoom level is 100% I 2015-04-17 11:55:31:429 IECommandExecutor.cpp(666) Persistent hovering set to: 1 D 2015-04-17 11:55:31:429 ProxyManager.cpp(122) Using existing system proxy settings. D 2015-04-17 11:55:31:443 server.cc(246) Command: GET /favicon.ico {} D 2015-04-17 11:55:31:443 server.cc(320) Response: { ""status"" : 404, ""sessionId"" : """", ""value"" : ""Command not found: GET /favicon.ico"" } D 2015-04-17 11:55:31:445 server.cc(320) Response: {""sessionId"":""bbfb35ad-67a2-47d8-9488-35e3703be458"",""status"":303,""value"":""/session/bbfb35ad-67a2-47d8-9488-35e3703be458""}  D 2015-04-17 11:55:31:494 server.cc(246) Command: GET /session/bbfb35ad-67a2-47d8-9488-35e3703be458 {} D 2015-04-17 11:55:31:494 command.cc(36) Raw JSON command: { ""name"" : ""getSessionCapabilities"", ""locator"" : { ""sessionid"" : ""bbfb35ad-67a2-47d8-9488-35e3703be458"" }, ""parameters"" : {} } D 2015-04-17 11:55:31:494 IECommandExecutor.cpp(560) No alert handle is found D 2015-04-17 11:55:31:494 server.cc(320) Response: {""sessionId"":""bbfb35ad-67a2-47d8-9488-35e3703be458"",""status"":0,""value"":{""browserAttachTimeout"":0,""browserName"":""internet explorer"",""cssSelectorsEnabled"":true,""elementScrollBehavior"":0,""enableElementCacheCleanup"":true,""enablePersistentHover"":true,""handlesAlerts"":true,""ie.browserCommandLineSwitches"":"""",""ie.ensureCleanSession"":false,""ie.forceCreateProcessApi"":false,""ie.usePerProcessProxy"":false,""ignoreProtectedModeSettings"":false,""ignoreZoomSetting"":false,""initialBrowserUrl"":""http://localhost:31146/"",""javascriptEnabled"":true,""nativeEvents"":true,""pageLoadingStrategy"":""normal"",""platform"":""WINDOWS"",""requireWindowFocus"":false,""takesScreenshot"":true,""unexpectedAlertBehaviour"":""dismiss"",""version"":""10""}}  D 2015-04-17 11:55:31:520 server.cc(246) Command: POST /session/bbfb35ad-67a2-47d8-9488-35e3703be458/url {""url"":""http://www.google.co.uk/""} D 2015-04-17 11:55:31:520 command.cc(36) Raw JSON command: { ""name"" : ""get"", ""locator"" : { ""sessionid"" : ""bbfb35ad-67a2-47d8-9488-35e3703be458"" }, ""parameters"" : {""url"":""http://www.google.co.uk/""} } D 2015-04-17 11:55:31:520 IECommandExecutor.cpp(560) No alert handle is found D 2015-04-17 11:55:31:526 Browser.cpp(437) Navigate Events Completed. D 2015-04-17 11:55:31:531 Browser.cpp(468) Browser ReadyState is not '4', indicating 'Complete'; it was 1 D 2015-04-17 11:55:31:742 Browser.cpp(437) Navigate Events Completed. D 2015-04-17 11:55:31:743 Browser.cpp(453) Browser busy property is true. D 2015-04-17 11:55:31:952 Browser.cpp(437) Navigate Events Completed. D 2015-04-17 11:55:32:103 Browser.cpp(453) Browser busy property is true. D 2015-04-17 11:55:32:336 Browser.cpp(437) Navigate Events Completed. D 2015-04-17 11:55:32:375 Browser.cpp(492) Waiting for document to complete... D 2015-04-17 11:55:32:383 Browser.cpp(497) Not in navigating state D 2015-04-17 11:55:32:386 server.cc(320) Response: {""sessionId"":""bbfb35ad-67a2-47d8-9488-35e3703be458"",""status"":0,""value"":null}  D 2015-04-17 11:55:32:408 server.cc(246) Command: POST /session/bbfb35ad-67a2-47d8-9488-35e3703be458/element {""using"":""xpath"",""value"":""//input""} D 2015-04-17 11:55:32:408 command.cc(36) Raw JSON command: { ""name"" : ""findElement"", ""locator"" : { ""sessionid"" : ""bbfb35ad-67a2-47d8-9488-35e3703be458"" }, ""parameters"" : {""using"":""xpath"",""value"":""//input""} } D 2015-04-17 11:55:32:408 IECommandExecutor.cpp(560) No alert handle is found D 2015-04-17 11:55:32:408 ElementFinder.cpp(53) Using FindElement atom to locate element having xpath = //input I 2015-04-17 11:55:32:408 Browser.cpp(119) No child frame focus. Focus is on top-level frame I 2015-04-17 11:55:33:017 VariantUtilities.cpp(179) Unknown type of dispatch is found in result, assuming IHTMLElement D 2015-04-17 11:55:33:017 ElementRepository.cpp(66) Element is not yet managed D 2015-04-17 11:55:33:019 server.cc(320) Response: {""sessionId"":""bbfb35ad-67a2-47d8-9488-35e3703be458"",""status"":0,""value"":{""ELEMENT"":""e8a03af2-44a4-4c7b-940b-e7a1683526cb"",""element-6066-11e4-a52e-4f735466cecf"":""e8a03af2-44a4-4c7b-940b-e7a1683526cb""}}  D 2015-04-17 11:55:33:032 server.cc(246) Command: GET /session/bbfb35ad-67a2-47d8-9488-35e3703be458/title {} D 2015-04-17 11:55:33:032 command.cc(36) Raw JSON command: { ""name"" : ""getTitle"", ""locator"" : { ""sessionid"" : ""bbfb35ad-67a2-47d8-9488-35e3703be458"" }, ""parameters"" : {} } D 2015-04-17 11:55:33:033 IECommandExecutor.cpp(560) No alert handle is found D 2015-04-17 11:55:33:073 server.cc(320) Response: {""sessionId"":""bbfb35ad-67a2-47d8-9488-35e3703be458"",""status"":0,""value"":""Google""}  D 2015-04-17 11:55:33:080 server.cc(246) Command: DELETE /session/bbfb35ad-67a2-47d8-9488-35e3703be458 {} D 2015-04-17 11:55:33:081 command.cc(36) Raw JSON command: { ""name"" : ""quit"", ""locator"" : { ""sessionid"" : ""bbfb35ad-67a2-47d8-9488-35e3703be458"" }, ""parameters"" : {} } D 2015-04-17 11:55:33:081 IECommandExecutor.cpp(560) No alert handle is found D 2015-04-17 11:55:34:080 ElementRepository.cpp(110) Refreshing managed element cache. Found 1 to remove from cache. D 2015-04-17 11:55:34:145 IESession.cpp(174) Executor shutdown successful! D 2015-04-17 11:55:34:145 IESession.cpp(182) Posting thread shutdown message D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(456) Shutdown message received D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(142) Entering IECommandExecutor::OnDestroy D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(144) Clearing managed element cache D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(146) Closing input manager D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(148) Closing proxy manager D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(150) Closing browser factory D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(152) Posting quit message D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(154) Leaving IECommandExecutor::OnDestroy D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(458) Returned from DestroyWindow() D 2015-04-17 11:55:34:145 IECommandExecutor.cpp(467) Exited IECommandExecutor thread message loop D 2015-04-17 11:55:34:146 IESession.cpp(185) Starting wait for thread completion D 2015-04-17 11:55:34:146 IESession.cpp(188) Waiting for thread to end returned 4294967295 D 2015-04-17 11:55:34:146 server.cc(320) Response: {""sessionId"":""bbfb35ad-67a2-47d8-9488-35e3703be458"",""status"":0,""value"":null} ```  I know fixing these kinds of intermittent problems can be a nightmare - so please let me know if there is anything I can do at my end to help locate the root problem!  Many thanks, Dave","closed","","dave-curo","2015-04-17T11:17:39Z","2019-08-21T14:09:55Z"
"","480","IEDriverServer cannot be set to vendor mode from external services like SeleniumGrid","IEDriverServer cannot be set to vendor mode from external services like SeleniumGrid as a result to be able to use IEDriverServer user needs to recompile it w/ default value of --implementation parameter set to VENDOR.  Could you please make external configuration for example (property file, system variable or extend SeleniumGrid to handle this parameter)?","closed","","filipcynarski","2015-04-23T10:44:39Z","2019-08-21T10:09:48Z"
"","493","[issue 492] JS: Chrome base path handling, pass to the driver service","I've signed the CLA.","closed","","dbo","2015-04-25T09:34:47Z","2015-05-22T21:24:54Z"
"","488","[issue 485] Use browser CORS, if available.","I've signed the CLA.","closed","","dbo","2015-04-24T13:06:49Z","2015-05-22T20:49:38Z"
"","487","[issue 483] Proper passing of --url-base parameter","I've signed the CLA.","closed","","dbo","2015-04-24T13:05:58Z","2015-04-25T09:26:41Z"
"","486","[issue-484] Be tolerant about trailing slash","I've signed the CLA.","closed","","dbo","2015-04-24T13:05:19Z","2015-05-22T20:49:17Z"
"","351","FirefoxDriver getWindowHandles sometimes returns an empty string as a window handle","I've noticed that ClickTest.testShouldOnlyFollowHrefOnce fails sometimes (but at a very low rate) because it closes the original window instead of the newly-opened window.  Specifically, [this switchTo()](https://github.com/SeleniumHQ/selenium/blob/86da9a4ed26eb8ab2dfafa5d4b12e0703d11d81a/java/client/test/org/openqa/selenium/ClickTest.java#L182) doesn't work, so the following close() closes the ""main"" window, and additionally causes the switchTo() in the finally block to fail, resulting in an error like this:  > java.lang.RuntimeException: org.junit.internal.runners.model.MultipleFailureException: There were 2 errors: >   org.openqa.selenium.NoSuchWindowException(Unable to locate window ""{a46823e9-4fa9-46de-8663-5e44cf4b2a67}"" > Command duration or timeout: 2.13 seconds) >   org.openqa.selenium.NoSuchWindowException(Window not found. The browser window may have been closed. > Command duration or timeout: 73 milliseconds)  From adding some logging, what's happening when the test fails is that getWindowHandles() returns two handles, one of which is the empty string. That empty string is [returned by the FirefoxDriver here](https://github.com/SeleniumHQ/selenium/blob/86da9a4ed26eb8ab2dfafa5d4b12e0703d11d81a/javascript/firefox-driver/js/nsCommandProcessor.js#L604) if `win.top.fxdriver` doesn't exist.  Calling getWindowHandles() again a short time later always yields two non-empty window handles.  Giving the new window a name by [modifying the JS window.open call here](https://github.com/SeleniumHQ/selenium/blob/86da9a4ed26eb8ab2dfafa5d4b12e0703d11d81a/common/src/web/clicks.html#L20) doesn't seem to eliminate occurrences of this empty string, so perhaps this is happening if the new window hasn't finished loading yet?  A couple possible solutions that may or may not be any good (but each of which fixes the flakiness in my testing): 1. Modify WaitingConditions.newWindowIsOpened to ignore the empty string if it's returned from getWindowHandles(). This works because the FirefoxDriver (usually on one of the next 1-2 calls to getWindowHandles) will eventually return a ""real"" window handle. 2. Have FirefoxDriver ignore windows with empty names in getWindowHandles(); I suspect this isn't a great idea, because it _is_ legal for a window name to be the empty string. 3. Don't even return window names from getWindowHandles() -- just eliminate [that branch](https://github.com/SeleniumHQ/selenium/blob/86da9a4ed26eb8ab2dfafa5d4b12e0703d11d81a/javascript/firefox-driver/js/nsCommandProcessor.js#L603-L605) completely; I'm not familiar with the history of the code or why the driver does this (though it has done it since at least 2009, per git blame) but I'd be curious to understand why it wouldn't work. Are there ways to create windows for which win.top.fxdriver.id will never exist, necessitating some other way of referencing the window? 4. Do option #1 in my own copy of the code and wait for Marionette to arrive ;)  As one more footnote, I don't think I've seen this failure mode in [http://ci.seleniumhq.org:8080/](Selenium's Jenkins CI), but when I'm running the tests locally, the local and remote ends are both on the same machine (which isn't the case for the CI, AFAIU), so the low latency of sending commands to the browser might tickle the bug.","closed","D-firefox,","juangj","2015-03-19T21:34:45Z","2019-08-21T16:09:35Z"
"","789","webdriver.By.cssSelector undefined","I've changed this line in the [Getting started example](https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs#getting-started) to use [cssSelector](http://docs.seleniumhq.org/docs/03_webdriver.jsp#by-css):  ``` driver.findElement(webdriver.By.cssSelector('q')).sendKeys('webdriver'); ```  When I run the script, I get an error that `TypeError: undefined is not a function` at the `cssSelector` call. Other, more esoteric, By functions listed at http://docs.seleniumhq.org/docs/03_webdriver.jsp#by-link-text, work: `linkText`, `xpath`.","closed","","dandv","2015-07-15T11:51:01Z","2019-08-21T08:09:55Z"
"","707","python selenium chrome yields wrong keys on send_keys","I've been running some tests on a remote ubuntu machine and i found a weird bug. If i try to send any of these keys `%/?^56` to an input, using `send_keys`, they don't get there.  ``` 5 creates a backspace 6 creates a Shift+Tab ^ creates a Tab % creates a backspace ? creates a Enter ```  Software versions are:  ``` Selenium is 2.46.0 Chrome is 43.0.2357.81 Ubuntu 14.04 (64-bit) ChromeDriver is 2.15.322488 ```  I'm running all of this in a tightvncserver, with fluxbox. Same thing on Firefox works ok.  I later upgraded Chrome to 44.0 and Chromedriver to 2.16, but the issue still persists in some way. The list of wrongly printed keys gets reduced to `%/?5`.  How can i investigate this further? I've turned on logging to DEBUG level, and everything seems ok.","closed","","thestick613","2015-06-24T16:24:22Z","2019-08-21T10:09:41Z"
"","792","UnknownError not being caught","I've been getting the following error when trying to click on a web element:  ``` UnknownError: unknown error: Runtime.evaluate threw exception: Error: element is not attached to the page document ```  I understand that this is essentially a `StaleElementReferenceError`, which does get caught, but the `UnknownError` is not being caught by `.thenCatch()` or the errback argument of `.then()` and is simply stopping the automation. Is this a bug with Selenium?","closed","","weineil","2015-07-15T14:57:22Z","2019-08-21T07:09:50Z"
"","62","[Java] PageFactory @FindAll Annotation","I've added in a new annotation to the PageFactory class that allows you to FindElements using a list of different selectors.  This could be useful in the following scenarios: - Find the same element that is rendered in a slightly different way on different browsers requiring browser specific locators - Create a page object that can interact with different implementations of the same control (e.g. testing a HighCharts graph will give you an SVG element on most browsers, but in IE < 9 you will get VML objects) - You just want to get a list of elements matching a couple of different criteria","closed","","Ardesco","2013-05-02T15:10:26Z","2014-09-17T21:51:50Z"
"","126","Add `@rtype` to `Docstring` in `remote.webdriver.find_element*`","I've added a parameter `@rtype` to `Docstring` of methods `find_element` and `find_elements` in order to make autocompletion in `PyCharm` for all of `find_element_*` methods of `webdriver`.  ![Autocompleting](http://i.imgur.com/K13ran1.png)  I have signed the CLA.","closed","","fedosov","2013-10-09T10:37:39Z","2014-08-16T17:01:18Z"
"","690","Cannot gracefully exit a page that raises a beforeunload alert.","I'm working with the python WebDriver implementation. Our webapp raises a dialog in a beforeunload event listener by assigning to event.returnValue, as is part of the spec. However, it does not appear that there is any way of gracefully quitting/closing the webdriver after that point. Is there any way to tell get()/close()/quit() to expect a dialog, and be able to actually dismiss it at the appropriate time?  My browser platform is Chrome.","closed","","brianchin","2015-06-19T23:07:28Z","2019-08-21T10:09:56Z"
"","730","element.click() doesn't work on chrome using webdriver 2.45","I'm using webdriver 2.45 to run the auto test scripts on chrome, but sometimes clicking an element of tag ""a"" on a pop  window doesn't work without any exception.  the html is        Yes, send it.    i've tried focus the element before clicking, but that seems no effective the java code is  WebElement webElement = driver.findElement(By.id(""submitBtn"")); ((JavascriptExecutor) driver).executeScript(""arguments[0].focus()"", args); webElement.click();","closed","","zhuxysun","2015-07-03T06:24:58Z","2019-08-21T09:09:56Z"
"","478","EventFiringWebElement - Throws a not JSON serializable exception","I'm using a selenium v2.45 with the python binding. Its a  EventFiringWebElement webdriver(firefox) (to include a before_click event) . When i try to do a switch frame i get a TypeError : is not JSON serializable exception thrown . Works fine with normal webdriver(firefox). Any clues?","closed","I-needs investigation,","harishzen","2015-04-22T19:44:12Z","2019-08-21T10:10:00Z"
"","720","Python - Selenium Chrome webdriver doesn't have components like WidevineCDM","I'm trying to use Selenium to open a page and go to Netflix and open a video and play. Once I actually get to the video, I can't load it because I get the error:  Missing Components... Please visit chrome://components, locate the WidevineCdm component...  When going to chrome://components, there aren't any components installed. If I had opened Chrome regularly and navigated to the video like I did in Selenium, I can play it. When I got to chrome://components in regular Chrome, there are more components in there. I'm trying to find out how to import my normal Chrome settings but I can't seem to figure that out. I've tried using ChromeOptions and DesiredCapabilities.CHROME but I couldn't get it to work. I also can't find documentation on all the items inside the DesiredCapabilities.CHROME dictionary. I hope that once I'm able to get normal Chrome settings into the webdriver version, I'd be able to load Netflix videos via Selenium Chrome webdriver.","closed","","bhn013","2015-06-29T23:02:21Z","2019-08-21T10:09:34Z"
"","479","IEDriverServer vendor mode JSON format error","I'm trying to use IEDriverServer on vendor mode with following error. I'm running Selenium tests on Java using most recent version of selenium and fluentlenium frameworks. On debug mode I'm receiving this message from IEDriverServer as a result of javascript execution.  `JSON format error: For findElements command, parameters object must contain pair with name ""locator"" Command duration or timeout: 0 milliseconds Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'ITHFPC23', ip: '10.98.0.54', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_17' *** Element info: {Using=css selector, value=body div#msgContainer h1} Session ID: 8c478f26-1088-4e71-bee7-c59b2cd68c1f Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{platformVersion=8.1, platform=ANY, browserVersion=11, -ms-requireWindowFocus=false, secureSsl=true, platformName=windows, browserName=Internet Explorer, takesElementScreenshot=true, takesScreenshot=true}]`  Tested on IE11, Windows 7, all updates have been installed.","closed","","filipcynarski","2015-04-23T10:41:31Z","2019-08-21T10:09:49Z"
"","560","Java Heap Space Error when File Upload to Remote Grid","I'm trying to upload a 300mb .zip file using a remote grid, LocalFileDetector and RemoteWebElement sendKeys but i keep getting Java Heap Space error. I have already try increasing the java -Xmx and -Xms arguments both in the grid node and in the testing environment to 1gb, 2gb and 3gb but the process always throws the exception when its consumming about 1.7gb. Any workaround or solution for this issue? Thank you  Environment:  Selenium Grid and Selenium firefox node with docker containers.  Java 7 Selenium 2.45.0  java.lang.OutOfMemoryError: Java heap space java.util.Arrays.copyOf(Arrays.java:2367) java.lang.AbstractStringBuilder.expandCapacity(AbstractStringBuilder.java:130) java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:114) java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:587) java.lang.StringBuffer.append(StringBuffer.java:332) org.openqa.selenium.internal.Base64Encoder.encode(Base64Encoder.java:65) org.openqa.selenium.io.Zip.zipFile(Zip.java:76) org.openqa.selenium.remote.RemoteWebElement.upload(RemoteWebElement.java:104) org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:93)...","closed","","gheuer","2015-05-21T21:25:37Z","2019-08-21T12:09:57Z"
"","700","2.46.0 BrowserVersion NPE","I'm sorry if I'm wrong or posting it in the wrong place. I've tried the latest maven's version 2.46.0. By the way - 2.45.0 is working fine with the same code. I've got NPE when I've tried both of BrowserVersion's constructors.  ``` java HtmlUnitDriver driver = new HtmlUnitDriver(new BrowserVersion(""a"", ""b"", ""c"", 10f, null)); or HtmlUnitDriver driver = new HtmlUnitDriver(new BrowserVersion(""a"", ""b"", ""c"", 10f)); ```  ``` java июн 22, 2015 4:45:25 PM com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine run SEVERE: Exception while initializing JavaScript for the page java.lang.NullPointerException     at com.gargoylesoftware.htmlunit.javascript.HtmlUnitContextFactory.hasFeature(HtmlUnitContextFactory.java:339)     at net.sourceforge.htmlunit.corejs.javascript.Context.hasFeature(Context.java:2459)     at net.sourceforge.htmlunit.corejs.javascript.ScriptableObject.getProperty(ScriptableObject.java:2378)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.init(JavaScriptEngine.java:302)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.access$000(JavaScriptEngine.java:104)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$1.run(JavaScriptEngine.java:171)     at net.sourceforge.htmlunit.corejs.javascript.Context.call(Context.java:628)     at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.call(ContextFactory.java:513)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.initialize(JavaScriptEngine.java:182)     at com.gargoylesoftware.htmlunit.WebClient.initialize(WebClient.java:1003)     at com.gargoylesoftware.htmlunit.WebWindowImpl.setEnclosedPage(WebWindowImpl.java:133)     at com.gargoylesoftware.htmlunit.html.HTMLParser.parse(HTMLParser.java:216)     at com.gargoylesoftware.htmlunit.html.HTMLParser.parseHtml(HTMLParser.java:194)     at com.gargoylesoftware.htmlunit.DefaultPageCreator.createHtmlPage(DefaultPageCreator.java:268)     at com.gargoylesoftware.htmlunit.DefaultPageCreator.createPage(DefaultPageCreator.java:156)     at com.gargoylesoftware.htmlunit.WebClient.loadWebResponseInto(WebClient.java:471)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:345)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:410)     at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:512)     at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:490)     at org.openqa.selenium.htmlunit.HtmlUnitDriver.(HtmlUnitDriver.java:195)     at selenium.Main.main(Main.java:18)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)  Exception in thread ""main"" org.openqa.selenium.WebDriverException: com.gargoylesoftware.htmlunit.ScriptException Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50' System info: host: 'PC', ip: 'my_ip', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_25' Driver info: driver.version: HtmlUnitDriver     at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:525)     at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:490)     at org.openqa.selenium.htmlunit.HtmlUnitDriver.(HtmlUnitDriver.java:195)     at selenium.Main.main(Main.java:18)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:483)     at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140) Caused by: com.gargoylesoftware.htmlunit.ScriptException     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$1.run(JavaScriptEngine.java:175)     at net.sourceforge.htmlunit.corejs.javascript.Context.call(Context.java:628)     at net.sourceforge.htmlunit.corejs.javascript.ContextFactory.call(ContextFactory.java:513)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.initialize(JavaScriptEngine.java:182)     at com.gargoylesoftware.htmlunit.WebClient.initialize(WebClient.java:1003)     at com.gargoylesoftware.htmlunit.WebWindowImpl.setEnclosedPage(WebWindowImpl.java:133)     at com.gargoylesoftware.htmlunit.html.HTMLParser.parse(HTMLParser.java:216)     at com.gargoylesoftware.htmlunit.html.HTMLParser.parseHtml(HTMLParser.java:194)     at com.gargoylesoftware.htmlunit.DefaultPageCreator.createHtmlPage(DefaultPageCreator.java:268)     at com.gargoylesoftware.htmlunit.DefaultPageCreator.createPage(DefaultPageCreator.java:156)     at com.gargoylesoftware.htmlunit.WebClient.loadWebResponseInto(WebClient.java:471)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:345)     at com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:410)     at org.openqa.selenium.htmlunit.HtmlUnitDriver.get(HtmlUnitDriver.java:512)     ... 8 more Caused by: java.lang.NullPointerException     at com.gargoylesoftware.htmlunit.javascript.HtmlUnitContextFactory.hasFeature(HtmlUnitContextFactory.java:339)     at net.sourceforge.htmlunit.corejs.javascript.Context.hasFeature(Context.java:2459)     at net.sourceforge.htmlunit.corejs.javascript.ScriptableObject.getProperty(ScriptableObject.java:2378)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.init(JavaScriptEngine.java:302)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine.access$000(JavaScriptEngine.java:104)     at com.gargoylesoftware.htmlunit.javascript.JavaScriptEngine$1.run(JavaScriptEngine.java:171)     ... 21 more  Process finished with exit code 1 ```","closed","","Igor-ua","2015-06-22T13:50:19Z","2019-08-21T10:09:44Z"
"","469","java: fix support.SmallTests: add missing ByAllTest","I'm not sure if it was missing on purpose.  If it wasn't, it could probably be a good idea to ask Junit Team to implement a way to have a Suite built given the name of a package. I've just googled and it looks like there are some unofficial implementations already.","closed","","alb-i986","2015-04-20T03:53:41Z","2015-07-09T00:49:49Z"
"","625","Unknown error reported from getText() call","I'm iterating through all elements on a page (via Geb) and seeing an unknown error cropping up intermittently. Code is as follows:  ``` groovy def els = $('body').allElements() else.each {     def lines = it.getText().split('\n')     ... } ```  org.openqa.selenium.WebDriverException: unknown error: Error: An invalid exception was thrown.   (Session info: chrome=42.0.2311.90)   (Driver info: chromedriver=2.10.267517,platform=Mac OS X 10.7.5 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 517 milliseconds Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'Data-source---LDAPv3-mavserve-edmonds-mavericklabel-com--is-not-valid--s-Computer.local', ip: '192.168.6.124', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.7.5', java.version: '1.8.0_40' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, chrome={userDataDir=/var/folders/6z/rs03pjds26b88g0z9b6pvlf000010c/T/.org.chromium.Chromium.lUrKCn}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, version=42.0.2311.90, platform=MAC, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 2846aaf588875e8be3f156a727fc5586     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268)     at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:152)     at org.openqa.selenium.WebElement$getText$1.call(Unknown Source)     at tests.AllPagesTests$_test_for_bad_merges_and_lorem_ipsums_closure5.doCall(AllPagesTests.groovy:93)     at tests.AllPagesTests.test for bad merges and lorem ipsums(AllPagesTests.groovy:92)     at tests.ExceptionWrapperRule$1.evaluate(ExceptionWrapperRule.groovy:71)     at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)","closed","","JeffML","2015-06-05T17:53:02Z","2019-08-21T12:09:40Z"
"","298","enable javascript for android browser","I'm guessing the lack of javascript support is a holdover from older Android versions. The android browser works great for me when I add :javascript_enabled => true. Using an emulator configured for 4.4 KitKat. Thanks!","closed","","swolfekabaminc","2014-12-10T18:49:02Z","2014-12-23T19:00:09Z"
"","714","Using xpath locator for xml document doesn't work in v2.45 & 2.46","I'm getting a Selenium::WebDriver::Error::InvalidSelectorError error when I do: driver.find_elements(:xpath, '//event') #this used to work in 2.43.0, but does not work in 2.45 & 2.46  My xml looks like this: ![test_xml](https://cloud.githubusercontent.com/assets/1933355/8386939/8863b818-1c22-11e5-830b-a1e1460a43c9.jpg)  Full error message: Selenium::WebDriver::Error::InvalidSelectorError: The given selector //event is either invalid or does not result in a WebElement. The following error occurred: InvalidSelectorError: Unable to locate an element with the xpath expression //event because of the following error: TypeError: q is null  Please let me know if there's another way to find_element by xpath for xml documents. Thanks!","closed","I-defect,","noralincc","2015-06-26T20:40:56Z","2019-08-21T05:09:52Z"
"","405","Update notices","I'm doing these piece by piece at a time so it's not changing too many files at once.  You can see i'm adding `.idea/copyright` and a couple of files.  IntelliJ makes this very easy to update all notices.  Once this is set, just right click any item in the project tree, and click ""Update Copyright...""  https://www.jetbrains.com/idea/help/generating-and-updating-copyright-notice.html","closed","","ddavison","2015-04-02T12:10:20Z","2015-06-30T18:51:44Z"
"","531","removed old python test task target","I'm currently looking at updating the test_py target, but this task seems unnecessary. Please let me know if it is still needed.   Also, I've signed the CLA.","closed","","joshmgrant","2015-05-06T19:45:28Z","2015-05-06T20:08:04Z"
"","614","On Windows, RemoteWebDriver.quit() is always destroying forcefully?","I'm constantly receiving the below log output: INFO 06/04 22:43:04 o.o.s.o.UnixProcess  - Command failed to close cleanly. Destroying forcefully (v2). org.openqa.selenium.os.UnixProcess$SeleniumWatchDog@6527b9ac  This happens whenever I do a `driver.quit()` (which is a `RemoteWebDriver`). This problem is not showing with Selenium 2.45.0.  This will stop the output from happening, but I am not sure if this is the right way to go:  ``` java diff --git a/java/client/src/org/openqa/selenium/os/UnixProcess.java b/java/client/src/org/openqa/selenium/os/UnixProcess.java index cd7af38..47d6575 100644 --- a/java/client/src/org/openqa/selenium/os/UnixProcess.java +++ b/java/client/src/org/openqa/selenium/os/UnixProcess.java @@ -119,9 +119,12 @@ public int destroy() {        if (!isRunning()) {          return getExitCode();        } + +      watchdog.destroyHarder(); +    } else { +      watchdog.destroy(); // don't want the error message      }  -    watchdog.destroyHarder();      watchdog.waitForTerminationAfterDestroy(1, SECONDS);      if (!isRunning()) {        return getExitCode(); @@ -244,6 +247,10 @@ private void waitForTerminationAfterDestroy(int duration, TimeUnit unit) {       private void destroyHarder() {        log.info(""Command failed to close cleanly. Destroying forcefully (v2). "" + this); +      destroy(); +    } + +    private void destroy() {        Process ourProc = process;        ProcessUtils.killProcess(ourProc);      } ```  the post that introduced the plugin container fix: https://code.google.com/p/selenium/issues/detail?id=7506","closed","","benlei-neustar","2015-06-04T23:29:36Z","2019-08-21T11:09:59Z"
"","616","The latest version of Selenium-WebDriver is not published to NPM","I'm 1 month new to github and npm.  I'm installing the selenium-webdriver via npm.  There is an update to this code 13 days ago and I need the code because I'm affected by the bug.  I tried to re-install via npm, but I'm still getting an older version from what is in github.  Do you have to publish the update to npm?  Is there a set delay?  If there is, how can I use npm to install the webdriver from github?  I tried npm install [selenium webdriver url] , but it did not work.","closed","","deflagg","2015-06-05T06:23:12Z","2019-08-21T12:09:38Z"
"","704","Unknown error, Unable to receive message from renderer","I'm  struggling with the following issue. I believe this is fundamental webdriver's issue. And doesn't depends on firefox/chrome version or even webdriver verison.  Here are steps to reproduce this problem on unix. But it can be easily done on any platform.  1) Launch browser, e.g. firefox, via webdriver. (any language binding request or even curl, if you can).  2) Get website url via webdriver. Assuming webserver has SINGLE url (easier to block with iptables rule)  3) Send simple execute_script command to webdriver. e.g. ""return document.location.href"" - it works.   4) Now turn browser in  ""toooo looooong page loading mode"". This is typical situation in real world for example  slow internet connection or webserver fail. Assuming browser still launched. To simulate this situation run in new termial command like  sudo iptables -A  INPUT -s x.x.x.x   -j DROP  (where x.x.x.x is webservers ip from step 2). this blocks website.  5) Test again.  Send simple execute_script command to webdriver. e.g. ""return document.location.href"" - it works.   6) Now refresh page. Just click browsers ""refresh"" button, or f5. page is loading for a  long time . and can't load.  While its loading you can execute ""document.location.href"" via developer console or firebug - it works. Actually DOM hasn't changed. But if you send again   execute_script  ""return document.location.href""  via  webdriver - failed with ""unable to receive message from renderer""  and unknown error. It should be mentioned that selenium rc works well in this situation and returns correct response.  Selemium rc is not affected by this issue.  7) You can flush iptables with ""sudo iptables -F""  So it makes my project to move back to selenium rc or build my own patched version of webdriver ^(","closed","D-firefox,","bitswarming","2015-06-23T22:52:48Z","2019-08-15T14:09:48Z"
"","513","Fix the CI build after updating to HtmlUnit 2.16","I was a bit too optimistic the HttpOnly cookie test still fails with htmlunit 2.16","closed","","rbri","2015-05-01T14:47:51Z","2015-06-04T06:47:23Z"
"","474","text() not working in by.xpath() in IE","I want to search the exact text in the webpage. So I preferred to use text() method in xpath but it's not working.  Example:  driver.findElement(By.xpath(""//span[(text()=""someText"")""]) not workin in IE. Please fix it or provide the workaround for that.","closed","","hvardhanivp","2015-04-21T10:47:53Z","2019-08-21T14:09:49Z"
"","527","Error if open Firefox Webdriver with Adblock Plus Extension (Python)","I want to open Firefox 37.0.2 with Python Webdriver 2.45.0 and the Adblock Plus Extension.  Here's my code:  > from selenium import webdriver >  > ffprofile = webdriver.FirefoxProfile() > ffprofile.add_extension(extension='adblock.xpi') > driver = webdriver.Firefox(firefox_profile=ffprofile)  I get the following error:  ``` Traceback (most recent call last): File ""adblock_test.py"", line 6, in ffprofile.add_extension(extension='adblock.xpi') File ""C:\Python34\lib\site-packages\selenium\webdriver\firefox\firefox_profile .py"", line 92, in add_extension self._install_extension(extension) File ""C:\Python34\lib\site-packages\selenium\webdriver\firefox\firefox_profile .py"", line 269, in _install_extension addon_details = self._addon_details(addon) File ""C:\Python34\lib\site-packages\selenium\webdriver\firefox\firefox_profile .py"", line 341, in _addon_details manifest = f.read() File ""C:\Python34\lib\encodings\cp1252.py"", line 23, in decode return codecs.charmap_decode(input,self.errors,decoding_table)[0] UnicodeDecodeError: 'charmap' codec can't decode byte 0x8d in position 964: char acter maps to undefined ```  Other Extensions work with exactly this code without problems. Only the Adblock Plus Extension (https://addons.mozilla.org/de/firefox/addon/adblock-plus/) doesn't work.  A User at StackOverflow (http://stackoverflow.com/questions/30071156/open-firefox-webdriver-with-adblock-plus-extension-python) told me the reason:  > The reason for this is adblock plus manifest file contains some unicode characters. >  > Change code in selenium/webdriver/firefox/firefox_profile.py >     with open(os.path.join(addon_path, 'install.rdf'), 'r') as f: >     to with open(os.path.join(addon_path, 'install.rdf'), 'r', encoding='utf8') as f:  So I think this should be fixed at selenium side.","closed","C-py,","fdsghdsgfds","2015-05-06T14:43:58Z","2019-08-15T01:09:51Z"
"","655","Grant virtual to RemoteWebDriver","I want to change the behavior by inheriting the `RemoteWebDriver`(C# APIs). However, the `RemoteWebDriver` has not `virtual`. Therefore, can not be called as the base method of a subclass.  Is it possible to grant the `virtual` to `RemoteWebDriver`?","closed","C-dotnet,","enmanji","2015-06-12T06:45:09Z","2019-08-21T10:09:47Z"
"","706","FirefoxDriver cannot set the path on a hidden fileupload input","I tried to implement a file upload test with [nightwatchjs](/nightwatchjs/nightwatch) but I couldn't set the path of an invisible 'fileupload' form input. (The file upload is initiated by the user with a visible label, although this is not clicked by the test because we want to avoid platform specific dialogs). This appears to be an issue with the Firefox only, the test works fine in Chrome.  The nightwatch devs claim this is an issue with the Firefox driver.  The original nightwatch bug report was nightwatchjs/nightwatch#505 .","closed","D-firefox,","zenlambda","2015-06-24T12:13:55Z","2019-08-17T00:09:56Z"
"","566","System Invalid Cast Exception C#","I think my issue listed here could be a bug: https://groups.google.com/forum/#!topic/selenium-users/iNS0ZqYoNas Initially I posted this at the wrong place https://github.com/RaYell/selenium-webdriver-extensions/issues/89#event-312808440 so that's why I am now posting it here.","closed","","jdelange","2015-05-25T13:12:46Z","2019-08-21T12:09:59Z"
"","324","support socket timeout for connections","I suppose it's a good way to allow to set socket timeout in connections, because sometimes there are problems with browser socket connection via webdriver: browser is not responding and socket waits eternally. But I would like to set time limit in tests session after which to fail a test with corresponding error message.  Unfortunatelly `socket.setdefaulttimeout()` isn't a good solution due to real problem with ssl (https://github.com/mitmproxy/mitmproxy/issues/470).  So I think this example looks good:  ``` python from selenium.webdriver.remote.remote_connection import RemoteConnection  RemoteConnection.set_timeout(30) ```","closed","C-py,","schipiga","2015-03-04T18:12:20Z","2015-07-08T19:57:15Z"
"","194","Remove methods checking visibility of browser","I signed CLA.  There is no such command in JSON wire protocol - https://code.google.com/p/selenium/wiki/JsonWireProtocol so I think this code isn't needed  cc @AutomatedTester","closed","","abotalov","2014-03-26T06:50:42Z","2014-06-25T12:38:44Z"
"","563","Allow access to remote address for Firefox.","I should be able to retrieve the address of the remote server using casts and public method calls. The use case that this unblocks is allowing building another client from the RemoteWebDriver instance when the FirefoxDriver subclass is used (this is already possible from ChromeDriver and other users of HttpCommandExecutor).  This is a prototype change - that I wouldn't mind being accepted - to demonstrate one option for allowing access to this information for Firefox. HttpCommandExecutor currently exposes ""public URL getAddressOfRemoteServer()"". Note that I used URI here so that an accurate value could be returned from MarionetteConnection.  As an alternative, I wouldn't mind implementing this in a non-backwards-compatible way: for example, adding a method to CommandExecutor or creating another interface named RemoteCommandExecutor that adds the method - and changing the signature of HttpCommandExecutor's method to URI.  I would appreciate discussion on how to best ensure user access to the remote server address when one has an object of type RemoteWebDriver.","closed","","joshbruning","2015-05-22T21:54:16Z","2015-06-17T19:17:48Z"
"","477","Commands inside promise not working.","I seem to have found an issue while trying to use driver commands inside the ""then"" of a promise. Easier to show than to explain. The gist below shows a case when this happens.  How to reproduce: Clone: https://gist.github.com/LaercioAsano/c49f40835a95a12d5026 Run: npm install node .  Expected result: Open firefox, open google.com, close firefox. Obtained result: Just open firefox.  I'm using Node v0.11.13, npm v1.4.9 and the latest selenium-webdriver from npm (although I tested with v2.44.0). Windows 7 x64.","closed","","LaercioAsano","2015-04-22T18:51:29Z","2019-08-21T14:09:46Z"
"","450","Added Selenium.prototype.doCaptureScreenshot command to selenium-api.js","I see the captureScreenshot command in the RC but not in the IDE.  This modification to the selenium-api.js will expose the captureScreenshot command to the IDE by re-using the existing captureEntirePageScreenshot function whose kwargs now takes a new viewportOnly option","closed","C-ide,","paulbors","2015-04-13T18:17:06Z","2017-09-06T06:47:01Z"
"","189","Clean obsolete android references","i removed the empty obsolete android tests project for dotnet and an old reference to a deleted android source file from webdriver dotnet project. i cannot test the go compilation but i try to search about it and the android test project appears to be excluded from compilation note:sorry if my fork have a bad commit history but i'm new to git and i still have same problems to find the clearest way to have my fork sync with the upstream master :)","closed","","livioc","2014-03-19T11:05:05Z","2014-03-20T08:57:27Z"
"","394","retry unavailable ports rather than hard fail","I regularly have issues with a port being briefly unavailable. A short sleep fixes it.  This is a stack trace example: https://gist.github.com/titusfortner/6069aed4def5c1ea0db9 I've seen it happen with multiple wire calls, not just getCurrentWindowHandle  I've been running all of my tests with this monkey patched for the past month and have had no problems.","closed","C-rb,","titusfortner","2015-03-31T21:05:54Z","2015-07-02T01:43:32Z"
"","630","Switching between multiple drivers is not happening","I need to switch between multiple drivers.  Here is the sample code with Slenium + Geb + Java +Groovy    def config = browser.config   def customDriver = config.getDriverFactory(config.getDriverConf()).driver    browser.driver=customDriver  Below code is working fine, its creating a fresh driver.  But its not shifting the focus to new driver.  Is there any way to shift focus between drivers.","closed","","kasthurk","2015-06-08T13:52:21Z","2019-08-21T11:09:43Z"
"","646","Add clipping information to GET /session/:sessionId/screenshot","I mistakenly created this issue on the wrong tracker back in january.   This is an enhancement request for the JSON wire protocol.   Currently https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/screenshot doesn't take any parameter and doesn't document the expected relationship between the windows size and the screenshot size.   Ghostdriver in Phantomjs does not enforce clipping to viewport size when taking a screenshot, leading to screenshots which have the correct viewport width but a random height depending on page content.   PhantomJS does offer an API to define a clipping area to be used for rendering the screenshot but there is no way for Ghostdriver to use it without breaking a use case or another.   Adding a clip query parameter (or better a width and height) parameter to the GET screenshot  call would allow both use cases (clipped and unclipped).   With the advent of FullPage websites/parallax/... the height of pages can be huge, leading to enormous screenshots. Adding viewport clipping would allow for smaller screenshots.  hopefully this is the correct tracker to submit this  Thanks","closed","","jeantil","2015-06-11T08:01:13Z","2019-08-21T01:09:40Z"
"","11","Add capability to start phantomjs with remote debugger in ruby webdriver","I love being able to use phantomjs as a webdriver in ruby, but miss the remote debugger which was so easily exposed via poltergeist.  This pull adds the capability to start the phantomjs service with the remote debugger listening.  Still not sure how to expose this in the actual browser or bridge. Might require adding another driver extension, maybe HasDebugger with #debug. Thoughts?  (I have signed the CLA.)","closed","","sj26","2013-02-03T22:10:21Z","2014-07-03T08:31:11Z"
"","358","Windows 7 - Selenium IDE - 2.9.0 - Table view is not available with this format","I installed the latest server and client/webdriver today and now I am not able to use Selenium IDE. I get the following error message -   ""Table view is not available with this format""  I am not able to use Selenium IDE at all.","closed","","britton104","2015-03-22T05:13:01Z","2019-08-21T16:09:39Z"
"","677","Control flow ordering looks wrong","I have the following code:  ``` javascript var webdriver = require('selenium-webdriver');  var d = webdriver.promise.defer(); var thePromise = d.promise;  var t = thePromise.then(function(res) {   console.log('thePromise->frame1');   return res; });  webdriver.promise.controlFlow().execute(function() {   return t.then(function(a) {     console.log(""thePromise->frame1->frame1"");   }); });  thePromise.then(function(x) {return x}).then(function(text) {   console.log('thePromise->frame2'); });  d.fulfill(); ```  From my understanding, webdriver should be handling the promises one frame at a time (i.e. resolve in a depth-first traversal order), and I'm expecting the output:  thePromise->frame1 thePromise->frame1->frame1 thePromise->frame2  Instead, this executes as  thePromise->frame1 thePromise->frame2 thePromise->frame1->frame1  Is my understanding of the schedule wrong or is there something wrong with the order of execution?","closed","","hankduan","2015-06-17T21:40:28Z","2019-08-21T00:09:55Z"
"","695","change in py to use webelement.send_keys() method with Decimal value","I have the DecimalField at my Django model which name is ""square"". When I try to do WebElement.send_keys(MyModel.square) with DecimalField I have the following error: `TypeError: object of type 'Decimal' has no len()`  Also I want to use WebElement.send_keys() with empty (`None`) values. When I try call this method with `None` value, i get the next error: `TypeError: object of type 'NoneType' has no len()`","closed","C-py,","roman-oxenuk","2015-06-21T23:16:08Z","2015-07-01T16:32:10Z"
"","683","manage().deleteAllCookies() does not work for on IE","I have some tests written in NodeJS that require to clean cookie to reproduce login scenario. They work well with chrome and firefox but fail on IE (Windows 7, IE 10).   ``` yield driver.manage().deleteAllCookies(); yield driver.get(httpsUrl); // login here ```  I saw a related discussion [here](https://code.google.com/p/selenium/issues/detail?id=5101). Is it still a known bug with IE driver?  Thanks,","closed","C-nodejs,","khanh-nguyen","2015-06-18T15:47:53Z","2019-08-21T11:09:36Z"
"","295","README.md: fix a typo","I have signed the CLA.","closed","","certik","2014-12-01T20:02:59Z","2014-12-02T01:22:22Z"
"","39","Let WindowsUtils.killPID() kill the whole process tree","I have signed the CLA.","closed","","Zitrax","2013-04-05T13:51:25Z","2014-01-03T19:36:27Z"
"","1","Please accept this documentation update","I have signed the CLA ;)","closed","","krosenvold","2013-01-15T06:38:10Z","2013-01-15T08:42:43Z"
"","601","Firefox 38 exception when running with the latest selenium sources","I have pulled down the latest selenium source code build and released the jars. Using this I run my test for FF 38. I get a firefox exception ""Firefox has stopped working"" and had the following details in the error  Once I click debug on the error message the firefox browser launches and the test executes.  Problem signature:   Problem Event Name:   APPCRASH   Application Name: firefox.exe   Application Version:  38.0.1.5611   Application Timestamp:    55540a1a   Fault Module Name:    xul.dll   Fault Module Version: 38.0.1.5611   Fault Module Timestamp:   55541969   Exception Code:   c0000005   Exception Offset: 0035669b   OS Version:   6.1.7601.2.1.0.256.4   Locale ID:    1033   Additional Information 1: 0a9e   Additional Information 2: 0a9e372d3b4ad19135b953a78882e789   Additional Information 3: 0a9e   Additional Information 4: 0a9e372d3b4ad19135b953a78882e789  Read our privacy statement online:   http://go.microsoft.com/fwlink/?linkid=104288&clcid=0x0409  If the online privacy statement is not available, please read our privacy statement offline:   C:\Windows\system32\en-US\erofflps.txt","closed","","niranjala","2015-06-02T14:04:15Z","2019-08-21T12:09:43Z"
"","731","In version 2.46.0, DriverService triggers the @afterMethod","I have moved to:                 org.seleniumhq.selenium             selenium-server             2.46.0           In  @BeforeMethod(alwaysRun = true) method, I call:  DriverService service = new ChromeDriverService.Builder().usingDriverExecutable(new File(browserPath)).usingAnyFreePort().build(); **Where browserPath=chromedriver.exe (last version 2.16.0)  When that line is called, the @AfterMethod(alwaysRun = true) is triggered.  But using my previous version, everything works fine:              org.seleniumhq.selenium             selenium-server             2.40.0","closed","R-awaiting answer,","kolumbien","2015-07-03T11:51:32Z","2019-08-21T05:09:33Z"
"","523","unable to connect to chromedriver - incompatibilty with the gem 'extlib'","I have integrated latest version of selenium-webdriver with capybara and cucumber. But getting this error.","closed","","Sunia","2015-05-06T05:28:00Z","2019-08-21T13:09:59Z"
"","333","Error in importing webdriver in selenium python","I have installed pip, selenium sucessfully but when I run python script, I am geeting erro on line ""from selenium import webdriver"" as ImportError: cannot import name 'webdriver'.  I recently started working on selenium python.  could you please help in resolving this issue?","closed","","deepas393","2015-03-16T09:49:37Z","2019-08-21T16:09:49Z"
"","199","Added gracefully shutdown function to selenium server","I have filled the CLA. # Description  Implements the necessary functions to let selenium server have a way to  be gracefully shutdown. # Reason  After discuss on IRC channel, I think there is not a gracefully way to kill selenium server, I mean, to shutdown selenium server after we handles current sessions. This feature is important to make sure that tests are not broken when someones wants to kill the selenium server. # Benefits  Let selenium server have a way to shutdown gracefully. # Drawbacks  ... # Implementation  The actual implementation of selenium server have this command to call:  http://SERVER:5555/selenium-server/driver/?cmd=shutDownSeleniumServer But this call just call system.exit.  My implementation that can be called in similar way:  http://SERVER:5555/selenium-server/driver/?cmd=gracefullyShutDownSeleniumServer waits for node webdriverSessions.getSessions().size() to be equal to zero before call system.exit","closed","","joaogbcravo","2014-04-10T16:38:52Z","2014-06-19T11:45:59Z"
"","637","Click that must open ""menu"" do not actually open this ""menu""","I have element like this:    When i clicked for this element some menu must be opened - but in fact only in FF and only with selenium 2.46 (in 2.43 bugs are absent) menu are not opened. In Chrome and IE -  ok - menu is opened  driver.findElement(By.xpath(""//div[@class='data-cell-menu menu-field']"")).click();","closed","","igorSss","2015-06-09T15:47:34Z","2019-08-21T11:10:02Z"
"","708","Control Flow reset() call issue","I have been trying to invoke the reset() call available on the main Control Flow object and have noticed that queued calls are still being called and flushed.","closed","","ajaks328","2015-06-24T21:48:12Z","2019-08-21T10:09:40Z"
"","380","Robotframework Selenium2library and checkbox followed by a textbox.","I have a webpage whose structure looks like this [checkbox1]       [some text1]                    [textbox1] [checkbox2]       [some text2]                    [textbox2]  I am trying to find a logic where, if i click on checkbox1, textbox1 should be focused and allow me to enter text, if checkbox2 is checked, when i enter text, it should automatically fill in textbox2.  Can someone please help","closed","","NxRx","2015-03-27T07:16:37Z","2019-08-21T15:09:58Z"
"","742","Chrome driver not properly shut down if re-launched.","I have a scenario where the chrome driver for selenium is shutting down before cucumber's `at_exit` block calls it's `#quit` method.   As a result (1) The browser window is left open, and (2) The `#quit` method fails because it can't open a socket to the driver.  The stripped-down example below shows the problem: (The code below is RSpec only because it demonstrates the issue without adding the complexity of Cucumber.)  ``` require 'selenium-webdriver'  RSpec.configure do |config|    config.before(:suite) do        $driver = Selenium::WebDriver.for :chrome      end  end  describe ""A potential rspec/selenium/chrome driver bug"" do    it ""doesn't play nice with at_exit"" do         # quit the initial driver and start a new one.     $driver.quit     $driver = Selenium::WebDriver.for :chrome       end # it end # end describe  at_exit do   $driver.quit end ```  When I run the code above, I get the following error (on both MacOS 10.9.5 and CentOS)  ``` /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/net/http.rb:878:in `initialize': Connection refused - connect(2) (Errno::ECONNREFUSED)     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/net/http.rb:878:in `open'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/net/http.rb:878:in `block in connect'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/timeout.rb:52:in `timeout' ```  I instrumented the code with come calls to `ps`, and it appears that the chromedriver process is no longer running by the time the `at_exit` block runs.  Adding an `after(:suite)` block in RSpec fixes the problem; but, I don't think Cucumber has a comparable feature (users are simply told to use `at_exit`)  There is clearly a mechanism for shutting down the chrome driver if `#quit` is never called.  My guess is that mechanism is being activated before the `at_exit` block runs.","closed","C-rb,","kurmasz","2015-07-06T15:04:14Z","2019-08-20T07:09:39Z"
"","697","Nested rollup does not seem to allow execution of selenium commands within conditional statements","I have a rollup script that uses js conditional statements to apply or not selenium commands.   I expected that I could define variables, eg. using the `storeElementPresent` command in the rollup and still have access to it within the rollup but this does not seem possible? I then thought I should have access to these defined variables in a second called rollup, which I do, however I don't seem to be able to make the selenium commands within Javascript conditional statements work.   HTML to test:  ```   Demo:    ```  Selenium in IDE 2.9.0 in Firefox 38.0.5 includes the following:  ```      rollup     ValidateField     Type=Text, Name=89, Value=The test76   ```  Roll-up is as follows:  ``` var manager = new RollupManager();  manager.addRollupRule({  name: 'ValidateField'  , description: 'Validate if value exists and prepare for field exists validation'   , pre: 'Component for a form'   , args: [         {name: 'Type'             , description: '(M) The field type to be validated'             , exampleValues: ['Text', 'Textarea']         },{name: 'Name'             , description: '(M) The name or Id of the field for identification'             , exampleValues: ['89']         },{name: 'Value'             , description: '(M) The value of the field'             , exampleValues: ['demovalue']         }         ]  , commandMatchers: [  ]  , getExpandedCommands: function(args) {  var commands = [];  var Type = args.Type;  var Name = args.Name;  var Value = args.Value;    if (args.Value && (args.Type == 'Text')){ commands.push({  command: 'storeElementPresent' , target: 'name='+Name , value: 'Exists'  });  commands.push({  command: 'rollup'  , target: args.Type  , value: 'Name='+Name+',Value='+Value  });  }   return commands;  } });  manager.addRollupRule({  name: 'Text'  , description: 'Enters Text value if it exists'  , pre: 'Component for a form'  , args: [         {             name: 'Value'             , description: '(M) The value to be used'             , exampleValues: ['Active','London United Kingdom','PRINCE2 Foundation']         },{name: 'Name'             , description: '(M) The name (label) of the text box for identification'             , exampleValues: ['on','off']         }         ]  , commandMatchers: [  ]  , getExpandedCommands: function(args) {  var commands = [];  var Name = args.Name;  var Value = args.Value;     if (storedVars.Exists === 'true'){    commands.push({  command: 'type'  , target: 'name='+Name  , value:  Value  })   }   return commands;  } });   ```","closed","C-ide,","scottspence","2015-06-22T10:17:18Z","2019-08-17T18:09:50Z"
"","689","selenium-webdriver 2.46.2: Window not found. The browser window may have been closed.","I have a capybara scenario that invokes some Javascript to interact with a complicated widget. This scenario passed with Firefox 38.0.5 and using webdriver version 2.45.0, but is now failing on 2.46.2 with the following stack trace:  ```       Window not found. The browser window may have been closed. (Selenium::WebDriver::Error::NoSuchWindowError)       [remote server] file:///var/folders/vf/11lzw25j51x9t9r7g13p_0lc0000gp/T/webdriver-profile20150619-2868-1rttmuf/extensions/fxdriver@googlecode.com/components/command-processor.js:12350:in `nsCommandProcessor.prototype.execute'       [remote server] file:///var/folders/vf/11lzw25j51x9t9r7g13p_0lc0000gp/T/webdriver-profile20150619-2868-1rttmuf/extensions/fxdriver@googlecode.com/components/driver-component.js:9089:in `Dispatcher.executeAs/","closed","","JAndritsch","2015-06-19T15:48:22Z","2019-08-21T10:09:58Z"
"","411","Unable to initialize htmlunitdriver: Error: Selenium htmlunit HtmlUnitDriver cannot be cast to selenium remote RemoteWebDriver","I had tried to execute my testcases on html unit driver to implement headless browser testing. But I got error during driver initialization as 'org.openqa.selenium.htmlunit.HtmlUnitDriver cannot be cast to org.openqa.selenium.remote.RemoteWebDriver '. Any solution to resolve this issue would be appreciated.","closed","","MahendraGowda","2015-04-03T09:52:11Z","2019-08-21T15:09:47Z"
"","504","blurring an input field does not work on linux/firefox/ssh","I got an issue with running selenium in a Ubuntu 14 Linux box.  I was using firefox 37 and selenium JVM 2.45.  I was trying to blur an input after some value was sent there.  To do this, I tried:  driver.findElement(By.id(""my element ID"")).sendKeys(Keys.Tab)  and:  executing the JavaScript document.getElementById('my element ID').blur(); with the Selenium JS execution feature.  When I have GUI, both ways run smoothly. However, when I use DISPLAY=:0 option to run my test in a ssh session, neither ways worked any more.  Anyone knows any work around for this issue?  Thanks in advance!","closed","","xzh1","2015-04-28T16:48:48Z","2019-08-21T14:09:39Z"
"","519","Unable to bind to locking port 7054 within 45000 ms","I get this error occasionally when multiple tests are run in parallel with selenium 2.44 and Firefox 33.  Looking at the selenium code (NewProfileExtensionConnection.java ) its clear that lock is taken on 7054 before  finding a free port for firefox and cleanup/creation of friefox profile directory. If there are say 100 tests running in parallel and  if one tests take 1 sec in this block then naturally this  error will come.  I  understand that the driver is using 7054 as a mutex to ensure that only one process is scanning for a free port at any one time but why should  other methods (like layoutondisk , cleanup etc) be inside this lock       profileDir = profile.layoutOnDisk();       process.clean(profile, profileDir);  Ideally the lock should only have been taken  for this line execution   port = determineNextFreePort(profile.getIntegerPreference(PORT_PREFERENCE, DEFAULT_PORT));  If this was the case then the lock would have been released faster and we could have avoided this issue.  also, can we provide a setter method to pass a custom locking port ?Right now its hardcoded to 7054.","closed","","suman583","2015-05-05T11:48:07Z","2019-08-21T14:09:35Z"
"","239","Using auth details from server url in http requests","I found that the auth details from the parsed server url was not being copied into new requests with the host and port. Fixing was very easy.  Allows working with Sauce Labs using:  ``` var driver = new webdriver.Builder()     .withCapabilities(...)     .usingServer('http://USERNAME:AUTHCODE@ondemand.saucelabs.com:80/wd/hub')     .build(); ```  I've signed the [CLA](http://goo.gl/qC50R).","closed","","davidpadbury","2014-07-20T03:07:48Z","2014-07-22T09:55:10Z"
"","9","Fixed a NullPointerException","I fixed a NullPointerException which occurred when a JsonWireProtocol request was made without a session.  This made debugging issues difficult since it hid the message indicating that a session was not available.  No issue was logged to the project's issue list since it is in a read only status for network maintenance.","closed","","cschooler","2013-01-30T22:56:31Z","2013-01-30T23:17:20Z"
"","288","Overload static DesiredCapabilities methods with version parameter","I find that a very common pattern of code is:  ``` java DesiredCapabilities caps = DesiredCapabilities.firefox(); caps.setVersion(""33.1.1""); ```  Overloading the static DesiredCapabilities method with a version parameter would enable this to be replaced with:  ``` java DesiredCapabilities caps = DesiredCapabilities.firefox(""33.1.1""); ```  I have signed the CLA.","closed","","jvanderwee","2014-11-20T19:44:46Z","2015-01-09T20:18:23Z"
"","446","selenium-server-standalone-2.45.0.jar server hanging at step Started org.openqa.jetty.Server","I downloaded the latest selenium server onto my Mac OS X Yosemite 10.10. Selenium server ->selenium-server-standalone-2.45.0.jar  from http://www.seleniumhq.org/download/  On the terminal I typed ""java -jar selenium-server-standalone-2.45.0.jar"". I get the below messages on my terminal window and then it hangs infinitely.  $ java -jar selenium-server-standalone-2.45.0.jar  13:46:41.664 INFO - Launching a standalone server 13:46:41.693 INFO - Java: Oracle Corporation 25.40-b25 13:46:41.693 INFO - OS: Mac OS X 10.10 x86_64 13:46:41.701 INFO - v2.45.0, with Core v2.45.0. Built from revision 5017cb8 13:46:41.750 INFO - Default driver org.openqa.selenium.ie.InternetExplorerDriver registration is skipped: registration capabilities Capabilities [{ensureCleanSession=true, browserName=internet explorer, version=, platform=WINDOWS}] does not match with current platform: MAC 13:46:41.784 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub 13:46:41.785 INFO - Version Jetty/5.1.x 13:46:41.786 INFO - Started HttpContext[/selenium-server,/selenium-server] 13:46:41.802 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@7cf10a6f 13:46:41.803 INFO - Started HttpContext[/wd,/wd] 13:46:41.803 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver] 13:46:41.803 INFO - Started HttpContext[/,/] 13:46:41.805 INFO - Started SocketListener on 0.0.0.0:4444 13:46:41.805 INFO - Started org.openqa.jetty.jetty.Server@49097b5d  ![selenium server hanging](https://cloud.githubusercontent.com/assets/11924932/7115980/8bb13a8a-e1e5-11e4-9103-9c799535b45e.jpg)","closed","","anithairene","2015-04-13T13:01:21Z","2019-08-21T14:09:59Z"
"","643","Selenium automatic Screenshotting for failed TestNg tests","I developed a little plugin which facilitates the automatic ""screenshotting"" for each failed test in TestNG suites.  I'm interested in the possibility to share it with the community. The code is here - https://github.com/yev/seleniumMvnScreenshot  Where can I integrate this part? Do you interested in it or should I contact the guys from TestNg?  Tnx","closed","","yev","2015-06-10T19:47:27Z","2019-08-21T11:09:58Z"
"","631","SafariDriver doesn't work with Selenium 2.46.0.","I believe to have ran into an issue after updating to Selenium 2.46.  When running Safari tests using SafariDriver with Selenium 2.46 on a node connected to my grid, I receive the following error.  `exec error: Error: Command failed: com.google.gson.JsonObject cannot be cast to java.lang.String (java.lang.ClassCastException) (Selenium::WebDriver::Error::UnknownError) [remote server] org.openqa.selenium.remote.JsonToBeanConverter(JsonToBeanConverter.java):111:in `convert' [remote server] org.openqa.selenium.remote.JsonToBeanConverter(JsonToBeanConverter.java):42:in `convert' [remote server] org.openqa.selenium.safari.SafariDriverCommandExecutor(SafariDriverCommandExecutor.java):191:in `execute' [remote server] org.openqa.selenium.remote.RemoteWebDriver(RemoteWebDriver.java):578:in `execute' [remote server] org.openqa.selenium.remote.RemoteWebDriver(RemoteWebDriver.java):242:in `startSession' [remote server] org.openqa.selenium.remote.RemoteWebDriver(RemoteWebDriver.java):128:in `' [remote server] org.openqa.selenium.remote.RemoteWebDriver(RemoteWebDriver.java):141:in `' [remote server] org.openqa.selenium.safari.SafariDriver(SafariDriver.java):58:in `' [remote server] org.openqa.selenium.safari.SafariDriver(SafariDriver.java):51:in `' [remote server] sun.reflect.NativeConstructorAccessorImpl(NativeConstructorAccessorImpl.java):-2:in `newInstance0' [remote server] sun.reflect.NativeConstructorAccessorImpl(NativeConstructorAccessorImpl.java):62:in `newInstance' [remote server] sun.reflect.DelegatingConstructorAccessorImpl(DelegatingConstructorAccessorImpl.java):45:in `newInstance' [remote server] java.lang.reflect.Constructor(Constructor.java):408:in `newInstance' [remote server] org.openqa.selenium.remote.server.DefaultDriverProvider(DefaultDriverProvider.java):85:in `callConstructor' [remote server] org.openqa.selenium.remote.server.DefaultDriverProvider(DefaultDriverProvider.java):79:in `newInstance' [remote server] org.openqa.selenium.remote.server.DefaultDriverFactory(DefaultDriverFactory.java):62:in `newInstance' [remote server] org.openqa.selenium.remote.server.DefaultSession$BrowserCreator(DefaultSession.java):222:in `call' [remote server] org.openqa.selenium.remote.server.DefaultSession$BrowserCreator(DefaultSession.java):1:in `call' [remote server] java.util.concurrent.FutureTask(FutureTask.java):266:in `run' [remote server] org.openqa.selenium.remote.server.DefaultSession$1(DefaultSession.java):176:in `run' [remote server] java.util.concurrent.ThreadPoolExecutor(ThreadPoolExecutor.java):1142:in `runWorker' [remote server] java.util.concurrent.ThreadPoolExecutor$Worker(ThreadPoolExecutor.java):617:in `run' [remote server] java.lang.Thread(Thread.java):745:in `run' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/response.rb:71:in `assert_ok' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/response.rb:34:in `initialize' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/http/common.rb:78:in `new' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/http/common.rb:78:in `create_response' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/http/default.rb:90:in `request' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/http/common.rb:59:in `call' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/bridge.rb:657:in `raw_execute' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/bridge.rb:122:in `create_session' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/remote/bridge.rb:87:in `initialize' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/common/driver.rb:52:in `new' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver/common/driver.rb:52:in `for' /var/lib/gems/1.9.1/gems/selenium-webdriver-2.46.2/lib/selenium/webdriver.rb:84:in `for' /vagrant/tests/cucumber/features/support/env.rb:67:in `' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/rb_support/rb_language.rb:95:in `load' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/rb_support/rb_language.rb:95:in `load_code_file' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/runtime/support_code.rb:180:in `load_file' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/runtime/support_code.rb:83:in `block in load_files!' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/runtime/support_code.rb:82:in `each' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/runtime/support_code.rb:82:in `load_files!' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/runtime.rb:184:in `load_step_definitions' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/runtime.rb:42:in `run!' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/lib/cucumber/cli/main.rb:47:in `execute!' /var/lib/gems/1.9.1/gems/cucumber-1.3.19/bin/cucumber:13:in `' /usr/local/bin/cucumber:23:in `load' /usr/local/bin/cucumber:23:in `'`  I have built the SafariDriver by pulling down the latest code from the Selenium repository and building the driver that way.  Upgrading to 2.46 fixed a Firefox 38 not running on 2.45, but it's damaged Safari unfortunately.","closed","","jamesnwarner","2015-06-08T15:55:15Z","2015-07-20T17:14:31Z"
"","334","Unnecessary lock.unlock() in FirefoxDriver.java","I believe that there is unnecessary lock.unlock() method call in org.openqa.selenium.firefox.FirefoxDriver.java (selenium/java/client/src/org/openqa/selenium/firefox/FirefoxDriver.java) at line 282 in finally block. lock.lock(..) is never called before said unlock.  According to file history it was necessary earlier when lock was actually locked before that unlock. But now locking is performed in NewProfileExtensionConnection in start() method.","closed","","Denis-Iskhakov","2015-03-16T16:35:57Z","2019-08-21T16:09:48Z"
"","489","Selenium tests are very-very slow in some networks","I am working in hotel on Bali, via public WiFi. My Selenium tests are incredibly slow (see attached image). ![image](https://cloud.githubusercontent.com/assets/279773/7321190/683b59f4-ead3-11e4-890c-0baec37e5dd5.png)  The problem is in method `org.openqa.selenium.WebDriverException#getSystemInformation`:  ``` java     try{       host = InetAddress.getLocalHost().getHostName();     } catch (UnknownHostException throw_away) {} ```  Method `getHostName()` uses system call to get name of current computer, which can be **very-very long**.  I believe host name is not really needed and can be skipped. Just log IP.","closed","C-java,","asolntsev","2015-04-24T14:49:56Z","2019-08-18T00:09:49Z"
"","500","Chrome browser get hanged when exception error is thrown when test runs through selenium server in remote machine","I am using the selenium grid to run my test in several platform , I have updated all the jars of 2.45 (Selenium java 2.45 , selenium stand alone server 2.45 , chrome driver 2.14) . I am seeing that the browser gets handed when exception error is thrown in chrome browser and it does not refresh the browser . Even though that the refresh function also does not work . The same script were working fine in all these platform without hanging issue when was using  selenium 2.41 version . When i run the same script in my local system everything works fine .  Selenium Version : 2.45  Chrome broeswer : Version 42.0.2311.90 m  Chrome driver : 2.14  OS : Windows 7   Can you please provide me the solution for this issue . ## Error message    [testng] org.openqa.selenium.TimeoutException: Timed out after 180 seconds waiting for com.pageobject.iap.videoplayer.VideoPlayBackControls$3@7843f53    [testng] Build info: version: '2.45.0', revision: '32a636c', time: '2015-03-05 22:01:35'    [testng] System info: host: 'W7-VM1', ip: '10.98.1.30', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_71'    [testng] Session ID: 2056e2bf-e8ae-472b-b65b-35eb2862a612    [testng] Driver info: org.openqa.selenium.remote.RemoteWebDriver    [testng] Capabilities [{platform=XP, acceptSslCerts=true, javascriptEnabled=true, browserName=chrome, chrome={userDataDir=C:\Users\Pearson\AppData\Local\Temp\scoped_dir3664_31316}, rotatable=false, locationContextEnabled=true, mobileEmulationEnabled=false, webdriver.remote.sessionid=2056e2bf-e8ae-472b-b65b-35eb2862a612, version=42.0.2311.90, takesHeapSnapshot=true, cssSelectorsEnabled=true, databaseEnabled=false, handlesAlerts=true, browserConnectionEnabled=false, webStorageEnabled=true, nativeEvents=true, applicationCacheEnabled=false, takesScreenshot=true}]    [testng]     at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:79)    [testng]     at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)    [testng]     at com.pageobject.iap.videoplayer.VideoPlayBackControls.waitToCompleteWatchingVideo(Unknown Source)    [testng]     at com.qtpselenium.suite.iap.regressionTestScripts.VideoPlayerTestScript.TC1_allcontrolsDisplay_functioning_InPreviewInlinePage(Unknown Source)    [testng]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)    [testng]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)    [testng]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)    [testng]     at java.lang.reflect.Method.invoke(Method.java:606)    [testng]     at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)    [testng]     at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)    [testng]     at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)    [testng]     at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)    [testng]     at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)    [testng]     at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)    [testng]     at org.testng.TestRunner.privateRun(TestRunner.java:767)    [testng]     at org.testng.TestRunner.run(TestRunner.java:617)    [testng]     at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)    [testng]     at org.testng.SuiteRunner.access$000(SuiteRunner.java:37)    [testng]     at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:368)    [testng]     at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)    [testng]     at java.util.concurrent.FutureTask.run(FutureTask.java:262)    [testng]     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)    [testng]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)    [testng]     at java.lang.Thread.run(Thread.java:745)","closed","","perwez123","2015-04-28T06:45:53Z","2019-08-21T14:09:42Z"
"","367","firefox node raises exception when starting test session","I am using the docker containers (2.45.0) to create a grid.  On the same host machine I run:  ``` docker run -d -p 4444:4444 --name selenium-hub selenium/hub:2.45.0 docker run --rm --name=ff --link selenium-hub:hub selenium/node-firefox:2.45.0 ```  The node registers properly.  However once I start a test run, I see the exception below in the log.  It's happening right as I attempt to create the remote webdriver.  ``` browser = webdriver.Remote('http://client:4444/wd/hub', desired_capabilities=DesiredCapabilities.FIREFOX) ```  FWIW - the chromedriver node runs perfectly.  ``` 20:01:01.356 INFO - Registering the node to hub :http://172.17.0.21:4444/grid/register 20:01:13.949 INFO - Executing: [new session: Capabilities [{firefox_profile=UEsDBBQAAAAIACZoeEZh7yP8ZwMAA..., platform=ANY, javascriptEnabled=true, browserName=firefox, proxy={httpProxy=172.28.128.11:9923, sslProxy=172.28.128.11:9923, proxyType=MANUAL}, version=}]]) 20:01:13.974 INFO - Creating a new session for Capabilities [{firefox_profile=UEsDBBQAAAAIACZoeEZh7yP8ZwMAA..., platform=ANY, javascriptEnabled=true, browserName=firefox, proxy={httpProxy=172.28.128.11:9923, sslProxy=172.28.128.11:9923, proxyType=MANUAL}, version=}] 20:01:59.418 WARN - Exception thrown java.util.concurrent.ExecutionException: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'fa59fe32da9b', ip: '172.17.0.23', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-46-generic', java.version: '1.7.0_75' Driver info: driver.version: unknown     at java.util.concurrent.FutureTask.report(FutureTask.java:122)     at java.util.concurrent.FutureTask.get(FutureTask.java:188)     at org.openqa.selenium.remote.server.DefaultSession.execute(DefaultSession.java:175)     at org.openqa.selenium.remote.server.DefaultSession.(DefaultSession.java:111)     at org.openqa.selenium.remote.server.DefaultSession.createSession(DefaultSession.java:88)     at org.openqa.selenium.remote.server.DefaultDriverSessions.newSession(DefaultDriverSessions.java:109)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:57)     at org.openqa.selenium.remote.server.handler.NewSession.handle(NewSession.java:1)     at org.openqa.selenium.remote.server.rest.ResultConfig.handle(ResultConfig.java:110)     at org.openqa.selenium.remote.server.JsonHttpCommandHandler.handleRequest(JsonHttpCommandHandler.java:172)     at org.openqa.selenium.remote.server.DriverServlet.handleRequest(DriverServlet.java:201)     at org.openqa.selenium.remote.server.DriverServlet.doPost(DriverServlet.java:163)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)     at org.openqa.selenium.remote.server.DriverServlet.service(DriverServlet.java:129)     at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)     at org.openqa.jetty.jetty.servlet.ServletHolder.handle(ServletHolder.java:428)     at org.openqa.jetty.jetty.servlet.ServletHandler.dispatch(ServletHandler.java:680)     at org.openqa.jetty.jetty.servlet.ServletHandler.handle(ServletHandler.java:571)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1526)     at org.openqa.jetty.http.HttpContext.handle(HttpContext.java:1479)     at org.openqa.jetty.http.HttpServer.service(HttpServer.java:920)     at org.openqa.jetty.http.HttpConnection.service(HttpConnection.java:820)     at org.openqa.jetty.http.HttpConnection.handleNext(HttpConnection.java:986)     at org.openqa.jetty.http.HttpConnection.handle(HttpConnection.java:837)     at org.openqa.jetty.http.SocketListener.handleConnection(SocketListener.java:243)     at org.openqa.jetty.util.ThreadedServer.handle(ThreadedServer.java:358)     at org.openqa.jetty.util.ThreadPool$PoolThread.run(ThreadPool.java:537) Caused by: org.openqa.selenium.WebDriverException: java.lang.reflect.InvocationTargetException Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'fa59fe32da9b', ip: '172.17.0.23', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-46-generic', java.version: '1.7.0_75' Driver info: driver.version: unknown     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:69)     at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:53)     at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:54)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:214)     at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)     at java.util.concurrent.FutureTask.run(FutureTask.java:262)     at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:168)     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)     at java.lang.Thread.run(Thread.java:745) Caused by: java.lang.reflect.InvocationTargetException     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:59)     ... 9 more Caused by: org.openqa.selenium.WebDriverException: Failed to connect to binary FirefoxBinary(/usr/bin/firefox) on port 7055; process output follows:  (process:40): GLib-CRITICAL **: g_slice_set_config: assertion 'sys_page_size == 0' failed Xlib:  extension ""RANDR"" missing on display "":99"". process 40: D-Bus library appears to be incorrectly set up; failed to read machine uuid: Failed to open ""/etc/machine-id"": No such file or directory See the manual page for dbus-uuidgen to correct this issue.  Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'fa59fe32da9b', ip: '172.17.0.23', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-46-generic', java.version: '1.7.0_75' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:134)     at org.openqa.selenium.firefox.FirefoxDriver.startClient(FirefoxDriver.java:246)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:114)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:193)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:104)     ... 14 more Caused by: org.openqa.selenium.WebDriverException: java.lang.InterruptedException: Process timed out after waiting for 45000 ms. Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'fa59fe32da9b', ip: '172.17.0.23', os.name: 'Linux', os.arch: 'amd64', os.version: '3.13.0-46-generic', java.version: '1.7.0_75' Driver info: driver.version: FirefoxDriver     at org.openqa.selenium.os.CommandLine.waitFor(CommandLine.java:131)     at org.openqa.selenium.firefox.FirefoxBinary.waitFor(FirefoxBinary.java:222)     at org.openqa.selenium.firefox.FirefoxBinary.clean(FirefoxBinary.java:242)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.start(NewProfileExtensionConnection.java:91)     ... 19 more Caused by: java.lang.InterruptedException: Process timed out after waiting for 45000 ms.     at org.openqa.selenium.os.UnixProcess.waitFor(UnixProcess.java:148)     at org.openqa.selenium.os.CommandLine.waitFor(CommandLine.java:129)     ... 22 more 20:01:59.423 WARN - Exception: Process timed out after waiting for 45000 ms. 20:01:59.505 INFO - Executing: [new session: Capabilities [{firefox_profile=UEsDBBQAAAAIAD1oeEZh7yP8ZwMAA..., platform=ANY, javascriptEnabled=true, browserName=firefox, proxy={httpProxy=172.28.128.11:9923, sslProxy=172.28.128.11:9923, proxyType=MANUAL}, version=}]]) 20:01:59.509 INFO - Creating a new session for Capabilities [{firefox_profile=UEsDBBQAAAAIAD1oeEZh7yP8ZwMAA..., platform=ANY, javascriptEnabled=true, browserName=firefox, proxy={httpProxy=172.28.128.11:9923, sslProxy=172.28.128.11:9923, proxyType=MANUAL}, version=}] ```","closed","D-firefox,","bmannix","2015-03-24T20:21:10Z","2019-08-21T16:09:34Z"
"","361","I have created test cases using selenium webdriver. But as Firefox updated to 36 test cases are not running and showing error.","I am using selenium 2.45 web drive and Windows 7 OS.  It  call the browser but didn't navigate to specified URl.  But once I degrade Firefox to 35 I worked. I want execute my tests on Firefox 36. Please Help me","closed","","Pravin1989patil","2015-03-24T06:03:22Z","2019-08-21T16:09:33Z"
"","362","Responsive Design Bug?","I am trying to screen capture a web page (www.constructionequipment.com) using PhantomJSDriver, which works fine locally on my development box but when ran from a web server (without a display) does not properly handle detection of the screen due to the responsive nature of the web page.   What I am seeing happen (on the server) is the horizontal navigation bar at the top of the page always appears to display in a mobile mode (for responsive design) when screen captured, this is regardless of any width that I force the browser window to.   What I am seeing happen (on my development box) is the responsive menu adjusts appropriately as I resize the window programmatically. No issue here.   I was looking at the CSS for www.constructionequipment.com and found a media query being used (""@media"" screen) which provides conditional logic for which CSS block to use based on the screen size.  I am thinking that the PhantomJS Driver is (in the case of running on the server) not properly detecting the screen width (since there is no display).   It should be noted that other responsive websites like CNN.com for example, work fine.   Has anyone else encountered this issue?   Thanks in advance.  ---  Below is an attached screen capture of a dropdown menu in a wide browser window (which should be using a navigation bar instead). This was captured by my application running in a server environment and illustrates the problem I am seeing. My application works fine when ran locally.  You can go to constructionequipment.com and horizontally resize the window to see how it should behave.   ![wide with mobile menu](https://cloud.githubusercontent.com/assets/6028190/6803608/2f43c596-d20f-11e4-8319-0f86a71bda1c.Jpeg)  ---  Custom .NET/C# application using...  Selenium WebDriver API .NET Bindings Runtime Version v4.0.30319 Version 2.44.0.0  phantomjs.exe  Development machine: Windows 7  Server machine: Win Server 2008 R2  .NET version v4.0.30319  ---  Information about CSS @Media queries http://stackoverflow.com/questions/4189868/what-does-media-screen-and-max-width-1024px-mean-in-css","closed","","rbolton240","2015-03-24T14:22:56Z","2019-08-21T16:09:37Z"
"","673","Ie11 : is not showing all the cookies.","I am trying to read the cookies for IE11 browser but driver.manage().cookies is showing very few cookies.  but the same is working for chrome.  ---  i can see the cookie which am interested is availabe in network log(Developper tool).  how can we get it using selenium?","closed","","kasthurk","2015-06-16T12:51:25Z","2019-08-21T11:09:48Z"
"","482","unknown exception when taking screenshot with chrome","I am trying to generate screenshots with webdriver.chrome. After opening the link, i get the following error.  The full traceback:  Traceback (most recent call last):   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/app/main.py"", line 10, in      screen.doSUS()   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/app/src/ScreenshotTool.py"", line 90, in doSUS     controller.takeScreenshot(fullname)   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/app/src/BrowserController.py"", line 66, in takeScreenshot     self.save_screenshot(fullname)   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/env/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 698, in get_screenshot_as_file     png = self.get_screenshot_as_png()   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/env/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 717, in get_screenshot_as_png     return base64.b64decode(self.get_screenshot_as_base64().encode('ascii'))   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/env/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 727, in get_screenshot_as_base64     return self.execute(Command.SCREENSHOT)['value']   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/env/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 175, in execute     self.error_handler.check_response(response)   File ""/Users/epiehl/Documents/Python Projects/screenshot_tool/env/lib/python3.4/site-packages/selenium/webdriver/remote/errorhandler.py"", line 166, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown error: cannot take screenshot from unknown error: Failed to capture tab: unknown error JavaScript stack: Error: Failed to capture tab: unknown error     at checkForExtensionError (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:14:17)     at Object.callback (chrome-extension://aapnijgdinlhnhlmodcfapnahmbfebeb/background.js:37:5)     at safeCallbackApply (extensions::sendRequest:21:15)     at handleResponse (extensions::sendRequest:73:7)   (Session info: chrome=42.0.2311.90)   (Driver info: chromedriver=2.15.322455 (ae8db840dac8d0c453355d3d922c91adfb61df8f),platform=Mac OS X 10.10.3 x86_64)  I am using the save_screenshot method. This works fine with firefox but not with chrome. I am using a virtualenv.","closed","","epiehl","2015-04-23T15:41:12Z","2019-08-19T05:09:51Z"
"","454","IEDriver stalls at startup sporadically","I am starting IEDriver using java client  ``` java         // Some setup for registry etc. I can provide details on what we do for each one of these, but we have had to build these up over the years for various reasons.         setupProtectedMode();         formatRegistryForIE11();         turnAutocompleteOff();         turnOffPopupBlocking();         turnOffIEMaxScriptStatementsWarning();         resetCompatViewForIntranetSetting();  // Actual driver startup section         caps = DesiredCapabilities.internetExplorer();     caps.setCapability(InternetExplorerDriver.IE_ENSURE_CLEAN_SESSION, true);     final WebDriver d = new InternetExplorerDriver(serv,                     caps); ```  Here are my specs:  ``` Windows 7 64 bit  IE11 11.0.9600.17691CO IEDriver: 2.45.0.0 (32 bit version) Most Recent Windows update ran on this host was: Security Update for Windows 7 for x64-based Systems (KB3035131). I can get more updates info if relevant ```  Java thread dump shows 'newSession' is being attempted:  ``` ruby   ""Forwarding newSession on session null to remote"" prio=6 tid=0x00000000022ef000 nid=0x1030 runnable [0x00000000025bd000]    java.lang.Thread.State: RUNNABLE     at java.net.SocketInputStream.socketRead0(Native Method)     at java.net.SocketInputStream.read(SocketInputStream.java:152)     at java.net.SocketInputStream.read(SocketInputStream.java:122)     at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:136)     at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:152)     at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:270)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)     at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)     at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:161)     at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:153)     at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)     at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:254)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:126)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:72)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:133)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:66)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:225)     at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:182)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:174)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:162) ```  At this time, even closing the IE browser does not unlock this, and the stall continues. Killing IEDriver is the only resort.  How do I go about further debugging this? Should I setup IEDriver VS for debugging or can I get some more diagnostics first?","closed","","binodpanta","2015-04-14T15:44:07Z","2019-08-21T14:09:54Z"
"","790","Is there support to select element by xpath including chinese strings?","I am running selenium and I have to select an element containing chinese text. Example is `//div[contains(text(),""工精細"")]`  Selenium does not look to support such path selector.  Indeed the log entry does not show the right selector (it includes question marks)  ``` 05:42:44.643 INFO - Done: [find element: By.xpath: ( //a[contains(text(),'???')]  )[1]] ```  and it is not because of the encoding used by the logger, because, for example, other log entries (before passing the selector to selenium) shows the right selector string.  So, how much does Selenium support xpath selector including Chinese strings?","closed","","bitliner","2015-07-15T12:50:57Z","2019-08-19T08:09:45Z"
"","465","standalone 2.45.0.0 and IEDriver 2.45.0 super slow typing","I am running into (again) the super slow typing getting sent to the the 32 bit IEDriverServer.exe. As a result, any text sent to the input fields type about 1 character per 5 seconds.   Environment: Testbox:  Windows 7 - IE 11 IEDriverServer.exe - version 2.45 selenium-server-standalone-2.45.0.jar  I had experienced this in the 64 bit driver too. This makes this version completely unusable.","closed","D-IE,","chris1248","2015-04-17T18:38:13Z","2019-08-21T14:09:45Z"
"","451","[IEDriverServer / Java] Command line server for the IE driver has stopped working","I am having reliability problems with the IEDriver. It does occasionally work, but often fails with a windows popup saying ""Command line server for the IE driver has stopped working"".  This is reproducible for me with the following snippet:  ``` java public static void main(String[] args) throws InterruptedException {     System.setProperty(""webdriver.ie.driver"", ""c:\\IEDriverServer_x32.exe"");     InternetExplorerDriverService service = InternetExplorerDriverService.createDefaultService();      for (int count = 0; 1 < 10; count++) {         WebDriver driver = new InternetExplorerDriver(service);         driver.navigate().to(""http://www.google.co.uk/"");         new WebDriverWait(driver, 5).until(ExpectedConditions.presenceOfElementLocated(By.xpath(""//input"")));         String title = driver.getTitle();         System.out.println(""Window title "" + count + "": "" + title);         driver.quit();         Thread.sleep(1000);     } } ```  This doesn't always fail on the first iteration, but for me 10 iterations is enough for it to always fail.  I'm using selenium-java and IEDriverServer (2.45) from: http://selenium-release.storage.googleapis.com/index.html?path=2.45/ Internet Explorer 10.0.9200.17267 Windows 7  I get the same with both 64bit and 32bit versions of IEDriverServer. This snippet runs fine if switched to ChromeDriver.  When it blows up, i get the following stacktrace from the java InternetExplorerDriver:  ``` Started InternetExplorerDriver server (32-bit) 2.45.0.0 Listening on port 33281 Window title 0: Google Started InternetExplorerDriver server (32-bit) 2.45.0.0 Listening on port 33281 Exception in thread ""main"" org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'win7_ie9', ip: '192.168.122.63', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_40' Driver info: driver.version: InternetExplorerDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:593)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:225)     at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:182)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:174)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:158)     at IeStoppedWorking.main(IeStoppedWorking.java:17) Caused by: org.openqa.selenium.WebDriverException: java.net.SocketException: Connection reset Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'win7_ie9', ip: '192.168.122.63', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_40' Driver info: driver.version: InternetExplorerDriver     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:75)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)     ... 6 more Caused by: java.net.SocketException: Connection reset     at java.net.SocketInputStream.read(Unknown Source)     at java.net.SocketInputStream.read(Unknown Source)     at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:136)     at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:152)     at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:270)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)     at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)     at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)     at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:161)     at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:153)     at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)     at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:254)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:126)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:72)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:133)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:66)     ... 7 more ```  This seems similar to the behaviour reported here: https://code.google.com/p/selenium/issues/detail?id=6933","closed","","dave-curo","2015-04-13T18:27:21Z","2019-08-18T17:09:44Z"
"","83","UTF-8 encoded user-extensions.js support. Fixes issue 1646","I am a Japanese programmer.  Now I eagerly want to use the Japanese characters in user extension files, especially for Selenium IDE, but it does not work. I found a related issue Issue 1646: UTF-8 encoded user-extensions.js support in Google Code,  but the patch proposed there seems not be adopted yet. So I fixed the issue again and created a pull-request.  I am not used to create a pull-requst, so please let me know if there are any problems.","closed","","NozomiIto","2013-05-27T08:39:16Z","2014-06-13T21:31:05Z"
"","192","added the missing command line arguments to the dotnet phantomjs driver","i added the 2 missing options --proxy-auth and --ssl-certificates-path (api and descriptions taken by https://github.com/ariya/phantomjs/wiki/API-Reference)","closed","C-dotnet,","livioc","2014-03-24T10:06:03Z","2015-03-30T18:34:53Z"
"","623","rubygems.org still links to old source location","https://rubygems.org/gems/selenium-webdriver/ still links to  https://code.google.com/p/selenium/source/list  instead of here. Looks like it just needs a project maintainer to login and change it, because the gemspec itself has the correct urls.","closed","","tobypinder","2015-06-05T12:42:24Z","2019-08-21T12:09:42Z"
"","219","Folded in remote file upload functionality for NodeJS from sergeyksv","https://github.com/sergeyksv/selenium-webdriver-gh/commit/8133faf3494c7c7c36f238bbcaf63fea07e0ad25.  This is similar to the remote file upload functionality in Java and Ruby and is needed for use with a service like Sauce Labs. To activate, something akin to the following line is used:  ``` driver.setFileDetector(webdriver.FileDetector.LocalFileDetector); ```","closed","","toddtarsi","2014-05-13T15:46:23Z","2015-05-08T22:20:19Z"
"","497","Node Registration Sometimes Delayed Several Minutes","https://github.com/SeleniumHQ/docker-selenium/issues/14  I believe this issue is related to that one. On Ubuntu 14.02 with the default-jre, using selenium-standalone-server-2.45.0, I experienced the same problem. The following solution worked:   https://github.com/SeleniumHQ/docker-selenium/issues/14#issuecomment-66860079","closed","C-grid,","ghost","2015-04-27T16:51:49Z","2019-08-22T07:56:32Z"
"","121","Backspace is one word","https://en.wikipedia.org/wiki/Backspace","closed","","graingert","2013-09-26T10:15:55Z","2013-09-26T13:45:30Z"
"","56","[Python] Add sessions command","https://code.google.com/p/selenium/wiki/JsonWireProtocol#/sessions  (CLA as Alexander Bayandin is signed)","closed","","bayandin","2013-04-26T06:59:46Z","2013-05-08T16:13:38Z"
"","236","Pull request to fix Issue 7577","https://code.google.com/p/selenium/issues/detail?id=7577&thanks=7577&ts=1404811595  Added required null check.  See MSDN documentation for why document->get_activeElement() may return null: http://msdn.microsoft.com/en-us/library/aa752581(v=vs.85).aspx","closed","","drauch","2014-07-08T10:01:07Z","2014-09-04T09:22:58Z"
"","442","How do I open a new tab in IE using selenium (java) and open a url in that tab (not window)","How do I open a new tab in IE using selenium (java) and open a url in that tab (not window)? I am using the below code to open a new tab?  driver.get(""https://google.com/"");  //below line of code opens a new tab but does sets control on new tab. driver.findElement(By.cssSelector(""Body"")).sendKeys(Keys.CONTROL + ""t"");//opens new tab  // As control does not sets on new tab, the below link opens on first tab only.. driver.get(""https://facebook.com/"");//but load facebook in first tab i.e on google page   Can anyone tell me, how to shift control to new tab so that the facebook link opens in that new tab.  Hi  I using Selenium Web-Driver Version 2.40 and IE 11.0  WebDriver driver = new InternetExplorerDriver(ieCapabilities);  driver.manage().window().maximize();  driver.get(""https://google.com/"");  driver.findElement(By.cssSelector(""Body"")).sendKeys(Keys.CONTROL + ""t"");//opens new tab  //Store the current window handle  String winHandleBefore = driver.getWindowHandle();  //Perform the click operation that opens new window //Switch to new window open  for(String winHandle : driver.getWindowHandles()){  driver.switchTo().window(winHandle);  driver.get(""https://facebook.com/"");  }  // Perform the actions on new window  //Close the new window, if that window no more required  driver.close();  //Switch back to original browser (first window)  driver.switchTo().window(winHandleBefore);  //continue with original browser (first window)  I am not able to open facebook on new tab of same window..  Regards Shashank Goyal  http://stackoverflow.com/questions/22820527/how-to-open-new-tab-in-ie-using-selenium-java-and-open-a-url-in-that-tab-not","closed","","coyun","2015-04-10T09:35:08Z","2019-08-21T14:10:01Z"
"","377","macosx_path to find in ~/Applications","Hi. I found that ~/Applications is a known alternative path for installing applications for Mac OS X, and many are starting to use it as the popularity of ""brew cask"" grows. I've changed the code a bit to try that directory for firefox-bin.","closed","C-rb,","hongweng","2015-03-26T22:46:29Z","2016-02-13T18:35:51Z"
"","652","Selenium Server - Invalid HTTP method: PATCH","Hi, some functionalities of our API use the PATCH (HTTP) method. Running our test suites with Selenium IDE works well, but not with Selenium Server (using selenium-server-standalone-2.46.0.jar).  The following error appear in the console: `java.net.ProtocolException: Invalid HTTP method: PATCH`  In debug mode, I found that the version of Jetty is 5.1.x. It's rather old so maybe it doesn't support the PATCH method? Is it possible to change the version of Jetty?  Thanks in advance!","closed","I-defect,","sebastienbonami","2015-06-11T19:24:24Z","2019-08-20T17:09:39Z"
"","536","Error while executing test with more than 5 chrome instances open in Selenium-Python","Hi,  I have a script where there are 8 test methods each opening a chrome browser and keeping it open (without driver.quit()). After the completion of 5 methods an error comes as below:  ""Traceback (most recent call last):   File ""C:\Python34\lib\site-packages\selenium\webdriver\chrome\service.py"", line 63, in start     self.service_args, env=env, stdout=PIPE, stderr=PIPE)   File ""C:\Python34\lib\subprocess.py"", line 754, in **init**     _cleanup() OSError: [WinError 6] The handle is invalid  During handling of the above exception, another exception occurred:  Traceback (most recent call last):   File ""..\SeleniumAutomation\common\common_settings.py"", line 126, in setup_selenium     driver = CommonSettings.setup_server(self.executionFlag)   File ""..\SeleniumAutomation\common\common_settings.py"", line 168, in setup_server     driver = CommonSettings.getdriver(executionFlag) selenium.common.exceptions.WebDriverException: Message: ChromeDriver executable needs to be available in the path. Please download from http://chromedriver.storage.googleapis.com/index.html and read up at http://code.google.com/p/selenium/wiki/ChromeDriver""  Pleae let me know if there's any way to get around this because its causing many issues.  Thank You","closed","C-py,","rasagjnya","2015-05-12T10:44:59Z","2019-08-16T22:09:59Z"
"","768","Unable to Close  the current  firefox browser (version 39.0)  window using drive.close() Method binding with selenium  API version 2.46","Hi, When i try to close the  current open browser window using Firefox version 39.0  binded with java 1.6 version and  web driver API version V2.46 the current window not getting closed but when i try  to execute the quit command after  close the command then it is closing the browser window with the following error  **Jul 12, 2015 2:17:38 PM org.openqa.selenium.os.UnixProcess$SeleniumWatchDog destroyHarder INFO: Command failed to close cleanly. Destroying forcefully (v2). org.openqa.selenium.os.UnixProcess$SeleniumWatchDog@716de067 Jul 12, 2015 2:17:38 PM org.openqa.selenium.os.ProcessUtils killWinProcess WARNING: Process refused to die after 10 seconds, and couldn't taskkill it java.lang.NullPointerException: Unable to find executable for: taskkill     at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:250)     at org.openqa.selenium.os.UnixProcess.(UnixProcess.java:62)     at org.openqa.selenium.os.CommandLine.(CommandLine.java:38)**  driver.close()--Not closing the current open browser window driver.quit-- close the window with the above error  Attached screen shot is for reference  Hope you will look in to the issue and  comes out with solution  **(PS: driver.close() is working fine in chrome browser)**  Thanks in Advance!!  ![fig1](https://cloud.githubusercontent.com/assets/13297497/8637162/e55f40ec-28a1-11e5-9998-66e41cbf00c4.png)","closed","","msrsharmaqa","2015-07-12T08:58:43Z","2019-08-21T09:09:34Z"
"","491","Jenkins as service. FF as background. Selenium throws ElementNotVisibleException","Hi, we are firing selenium API[2.0] tests using Jenkins which runs as a service. FF is running in the background. we are coming across this abnormal issue. Not sure whether due to FF which runs in the background which updated the dom and driver not able to find the element.  Issue A:  1. web driver finds the web element input text  2. web driver clears the existing text. 3. web driver adds new text in the input field  After 2nd step, am getting the below error. Though it finds the same element in 1st step and cleared, it can not able to input new text in the 3rd step.  Issue B:  1. web driver finds the web element input text  textField 2. web driver clears the existing text in textField. 3. web driver adds new text in the textField 4. web driver needs to find the next web element which is a button named buttonField. It fails with the same above error.   For trouble shooting, I tried to find the buttonField before 2 nd step and it was available. What is causing this issue?  Is this due to FF runs in the background ? The same testcases works when I execute from eclipse and FF as foreground.  org.openqa.selenium.ElementNotVisibleException: Element is not currently visible and so may not be interacted with Command duration or timeout: 63 milliseconds Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40' System info: host: 'swissbox', ip: '171.61.02.32', os.name: 'Windows 2003', os.arch: 'x86', os.version: '5.2', java.version: '1.6.0_05' Session ID: 3727f8b0-ec8b-47a8-a13f-d7487b287716 Driver info: org.openqa.selenium.firefox.FirefoxDriver","closed","","balamv","2015-04-25T02:39:48Z","2019-08-21T14:09:41Z"
"","741","NoSuchElementException in Selenium 2.46.0","Hi, since updating Selenium from 2.45.0 to 2.46.0 i get a NoSuchElementException when calling driver.findElement(By.id(String id)). I use Firefox 38 and also tried with Firefox 39.   The following can be used te reproduce the issue.  ```     DesiredCapabilities capabilities = DesiredCapabilities.firefox();      FirefoxProfile firefoxProfile = new FirefoxProfile();     firefoxProfile.setAcceptUntrustedCertificates(true);     firefoxProfile.setPreference(""browser.cache.disk.enable"", false);     firefoxProfile.setPreference(""browser.cache.memory.enable"", false);     firefoxProfile.setPreference(""browser.cache.offline.enable"", false);     firefoxProfile.setPreference(""network.http.use-cache"", false);      firefoxProfile.setPreference(""dom.ipc.plugins.enabled"", false);     firefoxProfile.setPreference(""dom.ipc.plugins.timeoutSecs"", -1);      firefoxProfile.setPreference(""webdriver.load.strategy"", ""unstable"");      capabilities.setCapability(FirefoxDriver.PROFILE, firefoxProfile);      capabilities.setPlatform(Platform.WINDOWS);     capabilities.setJavascriptEnabled(true);     capabilities.setCapability(CapabilityType.HAS_NATIVE_EVENTS, false);     capabilities.setCapability(CapabilityType.TAKES_SCREENSHOT, true);      driver = new FirefoxDriver(capabilities);     driver.manage().window().maximize();     driver.get(""http://www.seleniumhq.org/"");     WebElement search = driver.findElement(By.id(""q""));     search.sendKeys(""2.46.0""); ```  It is a Maven Project and has the following dependencies in the pom.xml:  ```               org.seleniumhq.selenium         selenium-java         2.46.0                       org.seleniumhq.selenium         selenium-server         2.46.0       ```  When running the code above the following error occurs:  Exception in thread ""main"" org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""id"",""selector"":""q""} Command duration or timeout: 14 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50' System info: host: 'hostname', ip: 'hostip', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_25' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=38.0.1, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 886190f7-f376-445a-b4cd-b5ae187277e3 **\* Element info: {Using=id, value=q}     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:408)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)     at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:399)     at org.openqa.selenium.By$ById.findElement(By.java:215)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)     at test.core.Test.showCase(Test.java:23)     at test.run.TestRun.main(TestRun.java:11) Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""id"",""selector"":""q""} For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.46.0', revision: '61506a4624b13675f24581e453592342b7485d71', time: '2015-06-04 10:22:50' System info: host: 'hostname', ip: 'hostip', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_25' Driver info: driver.version: unknown  If i change the versions in the pom.xml back to 2.45.0 everthing works again.  Is there any solution for this issue?  Thanks in advance.","closed","","DavidQA","2015-07-06T11:42:16Z","2019-08-21T09:09:53Z"
"","602","How to get the HTTP Headers using Selenium Webdriver","Hi, I see there are many posts on HTTP headers not supported in Selenium.  Can someone please point me to the workaround we use in order to get the HTTP headers using Selenium WEBDRIVER. I would be very glad if the exact code snippet is shared on how to retrieve the http headers.  Thanks, Komala A","closed","","komalaameneni","2015-06-02T17:12:40Z","2019-08-21T12:09:47Z"
"","402","Unable to execute a javascript in ie8 though it is working in ie11","Hi, I have a following script which works fine in ie11 but fails to execute in ie8 with the following error  org.openqa.selenium.WebDriverException: JavaScript error (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 85 milliseconds Build info: version: '2.39.0', revision: 'ff23eac', time: '2013-12-16 16:11:15' System info: host: 'INMUCHPC03860', ip: '10.3.64.114', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.7.0_51' Session ID: 49a59451-2f10-4798-a2fd-9ddcacd78add Driver info: org.openqa.selenium.ie.InternetExplorerDriver Capabilities [{platform=WINDOWS, javascriptEnabled=true, elementScrollBehavior=0, ignoreZoomSetting=false, enablePersistentHover=true, ie.ensureCleanSession=false, browserName=internet explorer, enableElementCacheCleanup=true, unexpectedAlertBehaviour=dismiss, version=8, ie.usePerProcessProxy=false, cssSelectorsEnabled=true, ignoreProtectedModeSettings=false, requireWindowFocus=false, handlesAlerts=true, initialBrowserUrl=http://localhost:20265/, ie.forceCreateProcessApi=false, nativeEvents=true, browserAttachTimeout=0, ie.browserCommandLineSwitches=, takesScreenshot=true}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:193)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:145)  Below is the code  public String getAbsoluteXPath(WebElement element, WebDriver driver) throws Exception     {           return (String) ((JavascriptExecutor) driver).executeScript(                 ""function absoluteXPath(element) {""+                 ""var comp, comps = [];""+                 ""var parent = null;""+                 ""var xpath = '';""+                 ""var getPos = function(element) {""+                 ""var position = 1, curNode;""+                 ""if (element.nodeType == Node.ATTRIBUTE_NODE) {""+                 ""return null;""+                 ""}""+                 ""for (curNode = element.previousSibling; curNode; curNode = curNode.previousSibling) {""+                 ""if (curNode.nodeName == element.nodeName) {""+                 ""++position;""+                 ""}""+                 ""}""+                 ""return position;""+                 ""};""+                 ""if (element instanceof Document) {""+                 ""return '/';""+                 ""}""+  ```             ""for (; element && !(element instanceof Document) ; element = element.nodeType == Node.ATTRIBUTE_NODE ? element.ownerElement : element.parentNode) {""+             ""comp = comps[comps.length] = {};""+             ""switch (element.nodeType) {""+             ""case Node.TEXT_NODE:""+             ""comp.name = 'text()';""+             ""break;""+             ""case Node.ATTRIBUTE_NODE:""+             ""comp.name = '@' + element.nodeName;""+             ""break;""+             ""case Node.PROCESSING_INSTRUCTION_NODE:""+             ""comp.name = 'processing-instruction()';""+             ""break;""+             ""case Node.COMMENT_NODE:""+             ""comp.name = 'comment()';""+             ""break;""+             ""case Node.ELEMENT_NODE:""+             ""comp.name = element.nodeName;""+             ""break;""+             ""}""+             ""comp.position = getPos(element);""+             ""}""+              ""for (var i = comps.length - 1; i >= 0; i--) {""+             ""comp = comps[i];""+             ""xpath += '/' + comp.name.toLowerCase();""+             ""if (comp.position !== null) {""+             ""xpath += '[' + comp.position + ']';""+             ""}""+             ""}""+              ""return xpath;""+              ""} return absoluteXPath(arguments[0]);"", element); } ```  Can you please help me with this?","closed","","NikitaS1609","2015-04-02T04:40:49Z","2019-08-21T15:09:52Z"
"","732","Java shell exec does not return after selenium calls on accessing /dev/urandom","Hi,  We use a couple of different ""connectors"" to assemble our tests, so the example code is a bit artificial, but the problem is there... I make a java shell exec on bash and it works fine, except when combining it with selenium -- then the waitFor() method does not return. The problem occurs if I try to read from a system device. If I call the command chain as unprivileged user, I get a result, so it can't be an problem with the permissions. It makes no difference if I use a WebDriver or a RemoteWebDriver.  The class was run in a fresh eclipse project with the pom.xml provided in the documentation of selenium (2.46.0).  Java version:  ``` java version ""1.7.0_79"" OpenJDK Runtime Environment (IcedTea 2.5.5) (7u79-2.5.5-0ubuntu0.14.04.2) OpenJDK 64-Bit Server VM (build 24.79-b02, mixed mode) ```  Minimal example:  ``` java import java.io.BufferedReader; import java.io.InputStreamReader; import java.util.Arrays;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  public class Testing {     public static void main(String[] args) {         WebDriver driver = null;         driver = new FirefoxDriver();         System.out.println(""Start"");         driver.get(""http://www.seleniumhq.org/"");         System.out.println(""After get"");         driver.quit();         System.out.println(""Browser closed"");          // works         // String[] cmd = { ""/bin/bash"", ""-c"", ""echo 'DS%&/%s56Df%&43dsg' | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1"" }; // works         // works not         String[] cmd = { ""/bin/bash"", ""-c"", ""cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1"" }; // works not         StringBuffer buf = new StringBuffer();          System.out.println(""Call: "" + Arrays.toString(cmd));          try {             Process proc = Runtime.getRuntime().exec(cmd);              System.out.println(""Now waitFor process ..."");             proc.waitFor();             System.out.println(""Process returned."");              BufferedReader reader = new BufferedReader(new InputStreamReader(proc.getInputStream()));              String line = """";             while ((line = reader.readLine()) != null)             {                 buf.append(line + ""\n"");             }             System.out.println(""Buf: "" + buf.toString());         } catch (Exception e) {             System.out.println(""ERROR"");         }     } } ```","closed","","crocodilechris","2015-07-03T12:02:41Z","2019-08-21T06:10:00Z"
"","671","Selenium Grid- Masterhub for multiple hubs.","Hi,  We are now running script using selenium grid(Node-Hub). But its sequential & took much time. We want to make it parallel to save time. (Using thre hubs which will be controlled by one masterhub)  We need to run three batches of test cases paralley. By making use of three hub using selenium grid. how can we trigger the execution at the same time on all three hubs?  Can we have one master hub for those three? If Yes, how to establish a hub to hub connection?  Can we have one machine as node for masterhub & hub for all other nodes in selenium grid?","closed","","jyotibaviskar","2015-06-16T12:25:58Z","2019-08-21T11:09:47Z"
"","685","Performance degradation in frame switch method","Hi,  We are detect some performance degradation for often calls of driver.switchTo().frame(""someFrameIdOrName"") on same page. Each switch is slower then previous. This problem is actual for 2.46 version, after https://github.com/SeleniumHQ/selenium/commit/98161bc5c743918318e81be04f62cf37e49cd971 I guess.  IEDriverServer 2.46 x32 Internet Explorer 8 JDK 7 x64  P.S. For 2.45 or driver.switchTo().frame(someFrameAsWebElement) is OK","closed","C-java,","ddemin","2015-06-19T10:38:53Z","2019-08-21T10:09:54Z"
"","459","firefox driver ""webdriver.log.file"" system property is ignored (no log file created)","Hi,  The issue occurs when trying dump javascript console logging to file while using firefox and selenium standalone server. I was trying to follow official wiki page and added ""webdriver.log.file"" system property when starting selenium server i.e.:  ``` java -jar selenium-server-standalone.jar -Dwebdriver.log.file=C:\myfile.log ```  After running selenium standalone server I lunch my tests (using javascript intern framework) - the tests are running fine, but the problem is that no log file is created and the ""webdriver.log.file""  system property seems to be ignored.  I was able to get log file for firefox stdout/stderr using ""webdriver.firefox.logfile"" property, and I was also successful with chrome log files using ""webdriver.chrome.logfile"" and ""webdriver.chrome.verboseLogging"" system properties, but still for some reason it does not work with ""webdriver.log.file"".  Wiki page I was following: https://github.com/SeleniumHQ/selenium/wiki/FirefoxDriver  My environment details are: Firefox version: 37.0.1 Selenium standalone server version: 2.45.0 Platform: Windows 7  Thanks, Bart","closed","D-firefox,","bartoszkaczorek","2015-04-16T11:07:44Z","2019-08-19T02:09:47Z"
"","554","Select target does not work in Firefox Developer Edition with new multi-process mode.","Hi,  So I use Selenium IDE with Firefox Developer Edition on Mac. Just yesterday when opened my browser to make some tests, I was prompted: ""Multi-process is coming soon to Firefox Developer Edition. You can start using it now to get early access to some of the benefits...""  Sounded good to me, so I enabled it. However after that, if I try to add a command, such as assertVisible, then hit the select button to grab a target from the browser, the little yellow box that you use to highlight targets does not appear. Also if you click on the page anywhere, no target is ever selected.   If I disable the multi-process mode (open preferences and un-check ""Enable multi-process Firefox Developer Edition""), then everything goes back to normal. If I enable it again, it's broke. Disable again, and back to normal again.  Version numbers, in case that helps: Selenium IDE 2.9.0 FirefoxDeveloperEdition 40.0a2","closed","C-ide,","adbutterfield","2015-05-20T01:41:01Z","2019-08-21T02:09:43Z"
"","431","Firefox 36 not launching on Linux with selenium 2.45.0","Hi,  I'm using selenium java(version selenium-2.45.0) to run the test cases(cucumber features). I'm unable to launch firefox (version 36.0) on linux OS (Oracle Enterprise Linux 6 u5). Its working fine in firefox 36.0 in windows 7 with same version of selenium  Its throwing below exception  ``` org.openqa.selenium.UnsupportedCommandException: Bad request  Command duration or timeout: 331 milliseconds  Build info: version: 'unknown', revision: 'unknown', time: 'unknown'  System info: host: '', ip: '', os.name: 'Linux', os.arch: 'amd64', os.version: '2.6.39-400.211.1.el6uek.x86_64', java.version: '1.7.0_51'  Driver info: org.openqa.selenium.firefox.FirefoxDriver     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:240)     at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:126)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:193)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:186)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:182)     at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:99) ```  Firefox is launched using below code  ``` java FirefoxProfile profile = new FirefoxProfile(); profile.setEnableNativeEvents(true); WebDriver driver = new FirefoxDriver(profile); ```  Version of tools used. Selenium: Selenium-java-2.45.0 Browser: Firefox 36.0 OS: Oracle Enterprise Linux 6 u5 64bit  Please let me know if i'm missing something here or is it a known issue.  Thanks Venki","closed","I-needs investigation,","nvnvenki","2015-04-08T16:07:05Z","2019-08-18T08:09:48Z"
"","609","Test Case fails when the object of the next page does not gets loaded due to bad internet speed or some other reason","Hi,  I am using Selenium IDE in my organization for the automation purpose. I am facing an issue while executing the test case, as the test case breaks down when the object of the next page does not gets loaded due to bad internet or some other reason. So to resolve this error what i need to do is give 'waitForElementPresent' command every time a new page is loaded. So I want to know is there any other way to prevent the test case from failing due to these reasons. Or can you do an update to the tool so that it will automatically add this command when a new page is loaded.  Take an example of Gmail Login: Step1: I enter my email ID and Password and then click on LogIn Step2: Clicking on LogIn will take me to another page Step3: I click on ComposeMail  Now what I want to happen is: Step1: I enter my email ID and Password and then click on LogIn Step2: Clicking on LogIn will take me to another page Step3: Automatically 'waitForElementPresent' command should add in the script which will wait for the object 'Compose Mail'. Step4: I click on ComposeMail","closed","","Akash17101992","2015-06-03T14:46:39Z","2019-08-21T12:09:44Z"
"","734","Python Selenium doesn't load firebug extension (firefox)","Hi,    The Python-Selenium doesn't load firebug extension of Firefox, which happen in the Firebug versions superior the 2.0.7. This doesn't happen in the Firebug 1.XX.XX versions, I think that the problem is file format changed.  **Firebug 1.XX.XX version**  ``` fike@kamino:~/d/annabe/annabe$ file firebug-1.13.0a10.xpi  firebug-1.13.0a10.xpi: Zip archive data, at least v1.0 to extract ```  **Firebug 2.XX.XX version**  ``` fike@kamino:~/d/annabe/annabe$ file firebug-2.0.11-fx.xpi  firebug-2.0.11-fx.xpi: Zip archive data, at least v2.0 to extract ```  Below a example code, it's same  of [Python-Selenium FAQ](https://selenium-python.readthedocs.org/faq.html#how-to-use-firebug-with-firefox).   Code example:  ``` python Python 2.7.10 (default, Jul  1 2015, 10:54:53)  [GCC 4.9.2] on linux2 Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> from selenium import webdriver >>>  >>> fp = webdriver.FirefoxProfile() >>>  >>> fp.add_extension(extension='firebug-2.0.11-fx.xpi') Traceback (most recent call last):   File ""/usr/local/bin/firefox_navigate.py"", line 19, in      fp.add_extension(extension='firebug-2.0.11-fx.xpi');   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/firefox_profile.py"", line 93, in add_extension     self._install_extension(extension)   File ""/usr/local/lib/python2.7/dist-packages/selenium/webdriver/firefox/firefox_profile.py"", line 264, in _install_extension     with open(os.path.join(tmpdir, name), 'wb') as f: IOError: [Errno 21] Is a directory: '/tmp/tmpjH9lmE.firebug-2.0.11-fx.xpi/content/firebug/' ```  Thanks, Fernando Ike","closed","D-firefox,","fike","2015-07-03T19:53:28Z","2019-08-21T09:09:43Z"
"","679","IE11 does not support new tab in selenium webdriver","Hi,    I want to open url in new tab in IE11. This is the scenario 1. open the one application url [Google page] in new window and open another url [facebook] in new tab. But load facebook in first tab i.e on google page  WebDriver driver = new InternetExplorerDriver(ieCapabilities); driver.manage().window().maximize(); driver.get(""https://google.com/"");  driver.findElement(By.cssSelector(""Body"")).sendKeys(Keys.CONTROL + ""t"");//opens new tab  driver.get(""https://facebook.com/"");   Pls help me. How to shift control to new tab so that the facebook link opens in that new tab.","closed","C-java,","ShanthiAthi","2015-06-18T05:04:15Z","2019-08-21T10:10:01Z"
"","713","NoSuchElementException when running on IE9 with Selenium 2.40 and same IEDriver 32 bit.","Hi!!  I have my script which is working fine on IE11. For some case we need to test it on IE9, and here starts the problem. We ran same script on IE9 , it launches IE but fails to identify element from the first page.  It throws NoSuchElementException. I have enable IEDriver log it says,   D 2015-06-25 11:12:02:104 ElementFinder.cpp(119) Using FindElements atom to locate element having id = overridelink T 2015-06-25 11:12:02:104 Browser.cpp(95) Entering Browser::GetDocument I 2015-06-25 11:12:02:104 Browser.cpp(99) No child frame focus. Focus is on top-level frame T 2015-06-25 11:12:02:118 Browser.cpp(557) Entering Browser::GetDocumentFromWindow T 2015-06-25 11:12:02:133 Script.cpp(40) Entering Script::Initialize T 2015-06-25 11:12:02:133 Script.cpp(61) Entering Script::AddArgument(std::wstring) T 2015-06-25 11:12:02:133 Script.cpp(96) Entering Script::AddArgument(VARIANT) T 2015-06-25 11:12:02:133 Script.cpp(61) Entering Script::AddArgument(std::wstring) T 2015-06-25 11:12:02:133 Script.cpp(96) Entering Script::AddArgument(VARIANT) T 2015-06-25 11:12:02:133 Script.cpp(160) Entering Script::Execute T 2015-06-25 11:12:02:133 Script.cpp(468) Entering Script::CreateAnonymousFunction W 2015-06-25 11:12:02:142 Script.cpp(485) -2147024891 [Access is denied.]: Unable to execute code, call to IHTMLWindow2::execScript failed  I have Protected mode same for all zones and protected mode is on.  From other thread i found out to check by running java script so i tried following code,  if (driver instanceof JavascriptExecutor) {         ((JavascriptExecutor)driver).executeScript(""alert('hiii');""); }  that too failed and IEDriver has same error log as above W 2015-06-26 14:40:22:307 Script.cpp(485) -2147024891 [Access is denied.]: Unable to execute code, call to IHTMLWindow2::execScript failed W 2015-06-26 14:40:22:308 Script.cpp(171) Cannot create anonymous function W 2015-06-26 14:40:22:308 response.cc(69) Error response has status code 17 and message 'JavaScript error' message D 2015-06-26 14:40:22:310 server.cc(308) Response: {""sessionId"":""cd0bcf34-3f6e-4875-b91a-e74029584dcb"",""status"":17,""value"":{""message"":""JavaScript error""}}  Please help what i am missing here.","closed","","DeepenShah","2015-06-26T09:37:58Z","2019-08-21T10:09:38Z"
"","350","[C#] SelectElement does not give access to base element functionality","Hi!   Right now, SelectElement does not give access to the base element's functionality. Eg. even if you need to access simple stuff as the ""Displayed"" property of the base element, you have to provide them separately in your PageObjects.  ``` public IWebElement SelectBase // returns base iwebelement for checks public SelectElement Select // wraps around SelectBase ```  It would be nice to make the base element accessible either through some property, or by implementing IWebElement on SelectElement (which then passes the calls on to base element essentailly)  I did the 2nd in https://github.com/FrankyBoy/selenium/commit/88ce778e3aebbced514fc522a6eed34dbac7814f to see how hard it would be, and its really just boring boilerplate.","closed","C-dotnet,","FrankyBoy","2015-03-19T16:39:37Z","2019-08-21T14:09:55Z"
"","354","[C#] SelectElement.SelectedOption slow on big lists","Hi!  The current implementation of the SelectedOption property is quite slow (because it checks each element in turn). Because of this a colleague of mine implemented an extension method which (he claims). The replacement code is simply as such:  ``` return _element.FindElement(By.CssSelector(""option[selected]"")) ```  AllSelectedOptions could be adapted in a similar manner (i.e. FindElements with same selector). Let me know if that solution actually works or if its just a ""common special case"" kind of thing.  Cheers!","closed","I-papercut,","FrankyBoy","2015-03-20T10:01:05Z","2019-08-21T16:09:40Z"
"","524","ystem.InvalidOperationException: Error forwarding the new session webdriver new session JSON response body did not contain a session ID","Hi there, I am setting up the selenium grid and using following commands to set up hub and node respectively java -Dwebdriver.chrome.driver="""" -jar selenium-server-standalone-2.42.0.jar -role hub  java -Dwebdriver.chrome.driver="""" -jar selenium-server-standalone-2.42.0.jar -role node -hub http://:4444/grid/register  The tests run fine using chrome but they fail on Firefox rmDriver = new RemoteWebDriver(new Uri(""http://hostname:4444/wd/hub""), DesiredCapabilities.Firefox());  rmDriver.Navigate().GoToUrl(homepage);  with the following trace System.InvalidOperationException: Error forwarding the new session webdriver new session JSON response body did not contain a session ID    at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at CBGrid.UnitTest1.TestMethod2() in C:\CBGrid\UnitTest1.cs:line 38","closed","","ashishraj14","2015-05-06T06:08:34Z","2019-08-21T13:09:58Z"
"","665","SendKeys method not working with Selenium 2.42.0 in Firefox","Hi there,  we have an issue with Selenium upgrade.  Currently, UI tests for our ASP.NET MVC Web application run on Selenium 2.38.0 and Firefox version 31.0.   Our goal is to update both Selenium and Firefox to the latest versions which are: Selenium 2.46.0 and Firefox 38.0.  There seems to be an issue with IWebElement.SendKeys method in Selenium 2.42.0 because from that version on, our tests fail because values are not set on drop-down lists and text-fields.  This is a code snippet of how we use SendKeys method:  IWebElement dropDown = webElement.FindElement(By.XPath("".//span[contains(@class, 'k-select')]"")); dropDown.SendKeys(Keys.ArrowDown);  Since this same piece of code have been working properly with previous versions of Selenium, can you please help us with figuring out if something has changed in the way of how this method is used?  Notes:  - We use this to interact with Kendo UI controls so you can test by running scripts on any of their live demos. - We also downgraded/upgraded Firefox to many other versions (from 29.0 to the latest one) but the issue still exists. - What might be interesting is that we also tested it with Selenium IDE 2.9.0 (and the latest Firefox version). Our test case included selection of value in a drop-down list but even if we were able to set it while recording, during reproduction the test failed exactly in a place where it should have selected that value.  Cheers, Aleksandra","closed","I-needs investigation,","dzudaleks","2015-06-15T14:53:58Z","2019-08-21T05:09:59Z"
"","615","Selenium - FF 37 - Jenkins - server not found browser error","Hi Team, When I executes the Jenkins job, it calls maven build that executes the selenium scripts. Am facing a weird Issue, my browser shows server not found error and it is not able to proceed with the tests. But at the same time, if I execute the maven build manually, it can connect to the application and works fine. This issue we noticed after Firefox got upgraded to 37. We are not able to conclude that issue is due to Firefox upgrade as if you open the browser and access the application manually, it works. The issue just when we execute the job through Jenkins. Anybody faces this issue? Kindly help on this.  Thanks, BV","closed","","balamv","2015-06-05T02:35:43Z","2019-08-21T12:09:39Z"
"","701","Selenium WebDriver supports Angular Apps or not?","Hi Team, I have a requirement of automating an Angular JS based application(whose front end widgets are developed by Angular JS not the usual JQuery). I do know that protractor tool is there in the market and we can use it. But it is completely Javascript oriented. And moreover it has only 2-3 more locator finding strategies (by.model('name') & by.binding('bindingname')) than what we usually have in normal Selenium WebDriver Java API (By.css,By.name,By.id,,By.xpath......). What I would like to know is, is usual selenium webdriver JAVA API is going support the angular JS based applications in future or not? Or Should I switch to Protractor completely.....? Please answer me whom exactly I should reach out to get this information.  Thanks, Firoz","closed","","firozshaik1987","2015-06-23T08:01:21Z","2019-08-21T10:09:42Z"
"","555","unable to call driver value in Selenium web Driver 2.45 version","Hi Team, After implement all the web driver  jar file in project selenium web driver is function unable to call.","closed","","Praveencnp","2015-05-20T07:11:46Z","2019-08-21T13:09:42Z"
"","344","Browser window stops responding after driver process dies","Hi Selenium Devs,  I am using chromedriver and ran into  the problem of process dying which results in the browser window to stop responding. I filed a bug with the chromedriver project but they referred me here. To see the actual thread please go [here](https://code.google.com/p/chromedriver/issues/detail?id=1043)  To reproduce:  fire up a chrome window via chromedriver kill the chromedriver process manually try navigating to another url  I tried to check for if driver == null or call driver.getUrl() but that does not seem to work either.  Ideally there should be an exception thrown if the driver process was killed","closed","I-needs investigation,","rd1992","2015-03-18T03:04:49Z","2019-08-21T16:09:43Z"
"","520","New Safari profile not created with Selenium WebdriverSafari","Hi I have setup the Safari driver with Selenium WebDriver using Java and testng and noticed that details from previous tests are displayed in the current test. For example, in test A I search for 'France' on a home page.  When test B starts 'France is already displayed in the homepage.  I currently have chrome and firefox drivers setup. In the example above, when test B starts it doesn't display 'France' in the homepage as it's a new instance of the firefox profile is created with each new test. I this that this better for test independence.  Some thoughts: - Do you think Safari will be changed to work in similar way to Firefox / Chrome.  - Or does it not create a new profile for security reasons. - Or should their be addition automation code added to remove cookies, (which may mean that 'France' is not displayed in the example above)","closed","","nigel-millward-home","2015-05-05T13:35:58Z","2019-08-21T13:09:57Z"
"","528","Not able to launch internet explorer without menu bar,toolbar","Hi i am not able to launch internet explorer through selenium driver without menu bar and tool bar","closed","","SuhaThevar90","2015-05-06T15:57:46Z","2019-08-21T13:09:56Z"
"","529","Pressing Enter key opens a new tab but don't recognize elements in the new tab opened","Hi guys, I'm working on Selenium IDE. I just created a script that click on a link by using the command sendKeys with value ${KEY_ENTER} so the goal is simulate that user presses Enter key. The action opens the new tab as expected but Selenium IDE is not recognizing any elements in the new tab opened and the test cannot continue working. So it is working well when use click command but for our proposal I need to test using senKeys  ${KEY_ENTER}   Thanks,","closed","","fonsecba","2015-05-06T16:11:09Z","2019-08-21T13:09:55Z"
"","585","IEDriverServer.exe crash: Error communicating with the remote browser. It may have died.","Hi guys,  Issue reproduction rate ~5 times out of 100. IEDriverServer 2.45.0.5 Window Server 2008 r2 Internet Explorer 11  Thanks in advance for any help and support!  As I understand it crashes on tearDown method?. Here is the snippet:     @AfterClass     public static void tearDown() {         driver.quit();         driver = null;     }  ---  Problem signature:   Problem Event Name:   APPCRASH   Application Name: IEDriverServer.exe   Application Version:  2.45.0.5   Application Timestamp:    5540f82f   Fault Module Name:    IEDDD2A.tmp   Fault Module Version: 0.0.0.0   Fault Module Timestamp:   5540f82d   Exception Code:   c0000005   Exception Offset: 000a6376   OS Version:   6.1.7601.2.1.0.274.10   Locale ID:    1061   Additional Information 1: 0a9e   Additional Information 2: 0a9e372d3b4ad19135b953a78882e789   Additional Information 3: 0a9e   Additional Information 4: 0a9e372d3b4ad19135b953a78882e789  Read our privacy statement online:   http://go.microsoft.com/fwlink/?linkid=104288&clcid=0x0409  If the online privacy statement is not available, please read our privacy statement offline:   C:\Windows\system32\en-US\erofflps.txt  org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'HOST123', ip: '10.61.204.46', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: RemoteWebDriver org.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died. Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'HOST123', ip: '10.12.120.46', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: RemoteWebDriver     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:593)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)     at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:468)     at com.test.automation.utils.SetupTeardown.tearDown(SetupTeardown.java:50)     at sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)     at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)     at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)     at java.lang.reflect.Method.invoke(Method.java:606)     at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)     at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)     at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)     at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)     at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68) Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to localhost:6252 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'HOST123', ip: '10.12.120.46', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '1.7.0_79' Driver info: driver.version: RemoteWebDriver     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:75)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)     ... 23 more Caused by: org.apache.http.conn.HttpHostConnectException: Connect to localhost:6252 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused: connect     at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:142)     at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:319)     at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:363)     at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:219)     at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:195)     at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:86)     at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)     at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)     at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)     at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:126)     at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:72)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:133)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:66)     ... 24 more Caused by: java.net.ConnectException: Connection refused: connect     at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)     at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)     at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)     at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)     at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)     at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)     at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)     at java.net.Socket.connect(Socket.java:579)     at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:72)     at org.apache.http.impl.conn.HttpClientConnectionOperator.connect(HttpClientConnectionOperator.java:125)     ... 37 more","closed","","sergmal","2015-05-29T07:53:26Z","2019-08-21T11:10:00Z"
"","345","Need Serializable InternetExplorerDriver","Hi Folks,  Was Searching google for long hrs to find solution to resume Driver object but didn't find a concrete solution,  so that I thought it would be a good idea to Serialize Driver instance and load it again when we rerun.  I am trying to achieve this to expedite automation development process, everytime I rerun the test while development I have to close the browser and re launch it again and again this is very annoying.   So thought that below code would help me, but it is throwing exception that InternetExplorerDriver is not implementing Serializable.  Can someone please help me to fork this class and make it Serializable.  ``` java class WebDriverExtention {     public static WebDriver getDriverObject(){         WebDriver driver;           File f = new File(""c:\\tmp\\driver.ser"");         if (!f.exists()){             System.setProperty(""webdriver.ie.driver"",""IEDriverServer32.exe"");             driver = new InternetExplorerDriver();             FileOutputStream fout = new FileOutputStream(""c:\\tmp\\driver.ser"");             ObjectOutputStream oos = new ObjectOutputStream(fout);             oos.writeObject(driver);             oos.close();             return driver;          }         else{             f = null;              FileInputStream fileIn = new FileInputStream(""c:\\tmp\\driver.ser"");             ObjectInputStream ins = new ObjectInputStream(fileIn);             driver = (WebDriver) ins.readObject();             ins.close();             fileIn.close();             return driver;          }      } } ```","closed","C-java,","qualityking","2015-03-18T05:43:06Z","2019-08-21T16:09:44Z"
"","355","Initial Page Loading (IE/Chrome) takes huge time if launching via Selenium","Hi Folks,  I am trying to open one of my heavy web application using selenium, and facing considerable performance issue.  when i am opening the same application without selenium it works very very fast, not sure why such issue, (please note i am new to this community, i might be missing something here)   I am also forcing browser to cache the contents, but looking into fiddler contents are also not getting cached.. have spent now a complete day with no satisfaction.. please help   PS : Do we have any active community forum where we get answers from active users.   ``` java  static NewInternetExplorerDriver driver;       @BeforeClass     public static void launchDriver(){         System.setProperty(""webdriver.ie.driver"",""IEDriverServer32.exe"");         //System.setProperty(""webdriver.chrome.driver"", ""chromedriver32.exe"");          DesiredCapabilities cap = DesiredCapabilities.internetExplorer();           cap.setCapability(InternetExplorerDriver.ENABLE_ELEMENT_CACHE_CLEANUP, false);         cap.setCapability(CapabilityType.ForSeleniumServer.ENSURING_CLEAN_SESSION, false);         cap.setCapability(CapabilityType.SUPPORTS_APPLICATION_CACHE, true);           Capabilities cap1 = (Capabilities) cap;           driver = new NewInternetExplorerDriver(cap1);         //driver.manage().timeouts().pageLoadTimeout(5, TimeUnit.SECONDS);         driver.manage().timeouts().implicitlyWait(60,TimeUnit.SECONDS);       }      @Test     public void Step1_LaunchApplication() throws InterruptedException {         driver.get(""http://server23:8086/home"");         System.out.println(""Loading Completed"");          Thread.sleep(2000);      } ```","closed","I-needs investigation,","qualityking","2015-03-20T11:35:00Z","2019-08-21T16:09:41Z"
"","381","Element not found in the cache","Hi Folks, I am new to GUI based automation Testing.  Can somebody explain me what can cause the following exception.  I thought it may be due to some time constraints so I have used expilicit wait in my Java-Selenium prog but i was not able to resolve this issue.  org.openqa.selenium.StaleElementReferenceException: Element not found in the cache - perhaps the page has changed since it  was looked up","closed","","vaibhav44","2015-03-27T08:45:43Z","2019-08-21T15:09:59Z"
"","352","Safari screen shot patch","Hi All,   I have been working on this issue: https://code.google.com/p/selenium/issues/detail?id=3752  The basic idea, that I have thought is, add https://html2canvas.hertzen.com (html2canvas.js) in the safari driver (specially in the inject component) and when we receive the screenshot command, let call the html2canvas.js function to paint the dom to canvas and then get the cavas url.   As I have completed this almost 90% (I need to get the canvasDataURL and give it back to the client), I need few inputs from community: 1. I have this piece of code:  ``` session.getCommandTab().send(new safaridriver.Command(""getCanvasUrl"",CommandName.GET_CANVAS_URL),200); ```  Since `getCanvasUrl` is expecting a callback function, how can I pass the callback from over here?  However I have tested that the canvas does paints the whole dom properly. By adding:  ``` document.append(canvas) ```  in `getCanvasUrl` function.   The approach of this problem is right? Kindly let me know the thoughts on this, so that I can complete it :)","closed","R-needs code changes,","antsmartian","2015-03-20T03:33:38Z","2016-03-10T02:06:37Z"
"","733","Selenium 2.46 is working much slower than 2.44 with Firefox 33.1.1","Hi all, I have been working for a while with selenium 2.44 and firefox 33.1.1. Recently I upgraded to selenium 2.46, but I have seen that selenium 2.46 performance is worst than 2.44 performance. I have done lots of tests and I have confirmed that the only change of my selenium version downgrades a lot my tests' performance.  I work with linux 14.04 and firefox 33.1.1. With selenium 2.44, the bunch of tests takes 1h 35min to be executed. With selenium 2.46, the bunch of tests takes 2h to be executed.  Could you tellme how to avoid this bug or if this is a known issue? Thank you so much.","closed","","lorenzofidalgo","2015-07-03T12:21:06Z","2019-08-21T09:09:55Z"
"","597","Take Snapshot waiting too long","Hi all,     I'm using selenium for firefox with version 2.45.0, and I find take snapshot hang up my program, the java stack trace is :  ``` ""Forwarding screenshot on session f16ef0af-b7fd-45e0-913b-280a65f5bc85 to remote"" prio=10 tid=0x00007f67f6470800 nid=0xb77 runnable [0x00007f67e2890000]    java.lang.Thread.State: RUNNABLE         at java.net.SocketInputStream.socketRead0(Native Method)         at java.net.SocketInputStream.read(SocketInputStream.java:150)         at java.net.SocketInputStream.read(SocketInputStream.java:121)         at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:136)         at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:152)         at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:270)         at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)         at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)         at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)         at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:161)         at sun.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.lang.reflect.Method.invoke(Method.java:601)         at org.apache.http.impl.conn.CPoolProxy.invoke(CPoolProxy.java:138)         at com.sun.proxy.$Proxy34.receiveResponseHeader(Unknown Source)         at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)         at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)         at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:253)         at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:194)         at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:85)         at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:108)         at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:186)         at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:72)         at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:57)         at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:126)         at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:72)         at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:133)         at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:165)         at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:362)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:572)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)         at org.openqa.selenium.firefox.FirefoxDriver.getScreenshotAs(FirefoxDriver.java:323) ```  And I found that the httpClient not set  `connectionRequestTimeout` option,the Source Code in `org.openqa.selenium.remote.internal.HttpClientFactory` is:  ```   private RequestConfig createRequestConfig() {     return RequestConfig.custom()         .setStaleConnectionCheckEnabled(true)         .setConnectTimeout(120 * 1000)         .setSocketTimeout(TIMEOUT_THREE_HOURS)         .build();   }  ```  Is this the reason ?","closed","D-firefox,","rockiee281","2015-06-02T03:04:58Z","2019-08-20T17:09:40Z"
"","686","Selenium Maven Plugin","Hi all,  I'm using _selenium-maven-plugin_ 2.3 version with _selenium-server_ 2.25.0 version, but I have problems trying to execute selenium tests on new Firefox distributions using _mvn selenium:selenese_  I was reading about this error on https://code.google.com/p/selenium/issues/detail?id=6055 and seems that I need to update my installed selenium  to 2.35 version...   This is my plugin configuration:  ```     org.codehaus.mojo    selenium-maven-plugin    2.3           *firefox       src/main/webapp/selenium/test-suite.xhtml       ${project.build.directory}/selenium.html       http://localhost:4444/                         org.seleniumhq.selenium          selenium-server          2.35.0             ```  If I update selenium server to this version (2.35.0) or newer (2.46.0), I'm getting an error about API incompatibility with _selenium-maven-plugin_:  ``` Failed to execute goal org.codehaus.mojo:selenium-maven-plugin:2.3:selenese (default-cli) on project petclinic: Execution default-cli of goal org.codehaus.mojo:selenium-maven-plugin:2.3:selenese failed: An API incompatibility was encountered while executing org.codehaus.mojo:selenium-maven-plugin:2.3:selenese: java.lang.NoSuchMethodError: org.openqa.selenium.remote.DesiredCapabilities.phantomjs()Lorg/openqa/selenium/remote/DesiredCapabilities; ```  As I've seen, _selenium-maven-plugin_ has not been updated since 2012.  http://mvnrepository.com/artifact/org.codehaus.mojo/selenium-maven-plugin/2.3   so I'm considering to search other selenium maven plugin to execute my tests...  Which selenium maven plugin do you recommend me to use? Do you know some patch or work around to solve this issue on my current _selenium-maven-plugin_?  This issue is related with Spring Roo Project, that generate selenium tests automatically on java applications...  https://jira.spring.io/browse/ROO-3634  We need to know if we can continue using selenium on Spring Roo project or not...  Thanks for your amazing work. We are waiting for your answer.  Best regards,","closed","","jcagarcia","2015-06-19T10:55:28Z","2019-08-18T05:09:39Z"
"","441","Issue with selenium webdriver","Hi all,  I am using Windows 8.1 and IE 11 and firefox 37 versions.  I am trying to execute my selenium program, I am getting an exceptions. Can anyone resolved my issue # My sample code is  package com.phani.first;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.testng.annotations.Test;  public class Consts {  @Test public static void createBasicAccount() { WebDriver driver = new FirefoxDriver(); driver.get(""http://www.paymants.amazon.com/overview""); //driver.findElement(By.xpath("""")).sendKeys(""""); driver.close(); } } # My TestNG result is  [TestNG] Running: C:\Users\lenovo\AppData\Local\Temp\testng-eclipse--1106206622\testng-customsuite.xml  FAILED: createBasicAccount java.lang.NoClassDefFoundError: com/google/common/base/Function at com.phani.first.Consts.createBasicAccount(Consts.java:13) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) at java.lang.reflect.Method.invoke(Unknown Source) at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84) at org.testng.internal.Invoker.invokeMethod(Invoker.java:714) at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901) at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231) at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127) at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111) at org.testng.TestRunner.privateRun(TestRunner.java:767) at org.testng.TestRunner.run(TestRunner.java:617) at org.testng.SuiteRunner.runTest(SuiteRunner.java:334) at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329) at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291) at org.testng.SuiteRunner.run(SuiteRunner.java:240) at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224) at org.testng.TestNG.runSuitesLocally(TestNG.java:1149) at org.testng.TestNG.run(TestNG.java:1057) at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111) at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204) at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175) Caused by: java.lang.ClassNotFoundException: com.google.common.base.Function at java.net.URLClassLoader$1.run(Unknown Source) at java.net.URLClassLoader$1.run(Unknown Source) at java.security.AccessController.doPrivileged(Native Method) at java.net.URLClassLoader.findClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source) at java.lang.ClassLoader.loadClass(Unknown Source) ... 25 more #   Default test # Tests run: 1, Failures: 1, Skips: 0 #   Default suite # Total tests run: 1, Failures: 1, Skips: 0  [TestNG] Time taken by org.testng.reporters.JUnitReportReporter@626b2d4a: 19 ms [TestNG] Time taken by org.testng.reporters.SuiteHTMLReporter@73a8dfcc: 46 ms [TestNG] Time taken by org.testng.reporters.EmailableReporter2@6f2b958e: 11 ms [TestNG] Time taken by [FailedReporter passed=0 failed=0 skipped=0]: 7 ms [TestNG] Time taken by org.testng.reporters.jq.Main@aec6354: 63 ms [TestNG] Time taken by org.testng.reporters.XMLReporter@c2e1f26: 8 ms  Please, resolved my issue. and also tell me i need to change my OS or i need to make code changes or anything else... Thank you in advance...","closed","","ghost","2015-04-10T02:34:49Z","2019-08-22T07:53:29Z"
"","640","CDATA[UnknownError: invalid code lengths set while uploading file in remote server","Hi All,  I am using selenium webdriver version 2.45.1 and upload functionality is failing with error code ""failure message=""invalid code lengths set"">","closed","C-nodejs,","Ravi-ratnakaram","2015-06-10T13:02:15Z","2019-08-21T01:09:56Z"
"","729","invalid code lengths set while uploading file in remote server using protractor","Hi All,  I am using selenium webdriver version 2.45.1 and upload functionality is failing with error code    Message:     Failed: invalid code lengths set   Stack:     UnknownError: invalid code lengths set         at Array.forEach (native)     From: Task: WebElement.sendKeys()         at Array.forEach (native)         at Array.forEach (native)  code snippet:   var fileToUpload = ('Doc1.docx'),         absolutePath = path.resolve(__dirname, fileToUpload);    var remote = require('../../../node_modules/protractor/node_modules/selenium-webdriver/remote');   browser.setFileDetector(new remote.FileDetector);   element(by.id('fileupload')).sendKeys(absolutePath);  Could someone suggest the fix? or workaround for this issue. Make a note, issue occurs only while running in remote and local runs it's perfectly alright.   Thanks for your help in advance.","closed","","raghavan85","2015-07-02T21:05:01Z","2019-08-21T09:09:57Z"
"","639","FirefoxDriver: keyCode values for keydown, keyup events are different","Hi all,  I am not sure if this is related to #510  With: - Windows 7 x64 - Selenium 2.46.0 - Firefox ESR 38.0.1  For the below html, and typing `!`, real firefox prints  `down: 16,0 down: 49,0 press: 0,33 up: 49,0 up: 16,0`  however, WebDriver prints `down: 16,0 down: 33,0 press: 0,33 up: 33,0 up: 16,0`  HTML:  ``` html    function appendMessage(message) {     document.getElementById('result').innerHTML += message + ' ';   }        ```  Java  ``` java         WebDriver driver = new FirefoxDriver();         driver.get(""http://url"");         final WebElement input = driver.findElement(By.id(""input1""));         final WebElement result = driver.findElement(By.id(""result""));          input.sendKeys(""!"");         System.out.println(result.getText()); ```  Please let me know if I should submit a PR with `@Ignore` test case in [TypingTest](https://github.com/SeleniumHQ/selenium/blob/master/java/client/test/org/openqa/selenium/TypingTest.java)","closed","D-firefox,","asashour","2015-06-10T11:02:33Z","2019-08-17T19:09:40Z"
"","292","Add Timeout option to FirefoxProfile to enable custom browser launch timeout","Hi @jimevans,   As reported at [#8202](https://code.google.com/p/selenium/issues/detail?id=8202), since the upgrade to Firefox 32 I'd started seeing some tests failing due a reach of hardcoded 45 seconds timeout to Firefox become ready to work.  This pull request just add a Timeout to FirefoxProfile in order to make it available to set from regular RemoteWebDriver's DesideredCapabilities.  Cheers, Gustavo","closed","C-dotnet,","gjmveloso","2014-11-28T15:11:31Z","2016-01-28T07:47:20Z"
"","424","Issue starting firefox webdriver with specific profile","Hi , I have developed a proxy that monitors net traffic. I want to run scrips with selenium webdriver(C#.net) that has to use this proxy.  the proxy runs on the same machine so I set the proxy in FF to ""127.0.0.1:8080"" in a specific profile(say Trial1ForProxy) ![proxysettingsinff](https://cloud.githubusercontent.com/assets/11836056/7024344/cdee482e-dd59-11e4-8735-4567b1628ac6.png)  When I start FF with the specific profile with ""firefox -p Trial1ForProxy"" it works fine as expected.  But when I use the following code  ```         FirefoxProfileManager profileManager = new FirefoxProfileManager();         FirefoxProfile firefoxProfile = profileManager.GetProfile(""Trial1ForProxy"");         wDriver = new FirefoxDriver(firefoxProfile); ```  it gives me an error  ```        Additional information: The value of the property 'proxyaddress' cannot be parsed. The error is: Invalid URI: The URI scheme is not valid. ```  I assumed as it works with FF by DEFAULT it should work with selenium.  Secondy : I tried setting the proxy as system settings and start the selenium instance it gives the same error for all browsers(IE,FF,Chrome,etc)  Please suggest what can be done in this case or the correct URI in the above case","closed","I-defect,","WizShrutz","2015-04-07T13:43:31Z","2019-08-21T15:09:35Z"
"","656","Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element:","Hi , I am getting following error :+1:, though i have used explicit wait for 60 seconds.  org.openqa.selenium.TimeoutException: Timed out after 30 seconds waiting for visibility of element located by By.xpath: //label[text()='Contact Information Source']/../..//img[@title='Add'] Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-27 00:00:10' System info: host: 'SeleniumSF01', ip: '10.80.33.181', os.name: 'Windows Server 2012', os.arch: 'amd64', os.version: '6.2', java.version: '1.7.0_25' Session ID: 86d580cd-1a71-4c59-ab31-5e20232a1253 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=38.0.5}]                 at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:79)                 at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)                 at servicecloudpages.ServiceCloudAccountsEdit.clickOnContactInfoAdd(ServiceCloudAccountsEdit.java:245)                 at tests.Aon.Accounts.US702CreateChildAccount.testVerifyParentAccountforCSRAfterSharing(US702CreateChildAccount.java:270)                 at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)                 at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)                 at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)                 at java.lang.reflect.Method.invoke(Unknown Source)                 at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)                 at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)                 at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)                 at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)                 at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)                 at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)                 at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)                 at org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)                 at org.junit.rules.RunRules.evaluate(RunRules.java:20)                 at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)                 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)                 at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)                 at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)                 at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)                 at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)                 at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)                 at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)                 at org.junit.runners.ParentRunner.run(ParentRunner.java:309)                 at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)                 at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)                 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""xpath"",""selector"":""//label[text()='Contact Information Source']/../..//img[@title='Add']""} Command duration or timeout: 34 milliseconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-27 00:00:10' System info: host: 'SeleniumSF01', ip: '10.80.33.181', os.name: 'Windows Server 2012', os.arch: 'amd64', os.version: '6.2', java.version: '1.7.0_25' **\* Element info: {Using=xpath, value=//label[text()='Contact Information Source']/../..//img[@title='Add']} Session ID: 86d580cd-1a71-4c59-ab31-5e20232a1253 Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=38.0.5}]                 at sun.reflect.GeneratedConstructorAccessor14.newInstance(Unknown Source)                 at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)                 at java.lang.reflect.Constructor.newInstance(Unknown Source)                 at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)                 at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)                 at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)                 at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)                 at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:449)                 at org.openqa.selenium.By$ByXPath.findElement(By.java:357)                 at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)                 at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:730)                 at org.openqa.selenium.support.ui.ExpectedConditions.access$0(ExpectedConditions.java:728)                 at org.openqa.selenium.support.ui.ExpectedConditions$4.apply(ExpectedConditions.java:130)                 at org.openqa.selenium.support.ui.ExpectedConditions$4.apply(ExpectedConditions.java:1)                 at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)                 ... 30 more Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: {""method"":""xpath"",""selector"":""//label[text()='Contact Information Source']/../..//img[@title='Add']""} For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-27 00:00:10' System info: host: 'SeleniumSF01', ip: '10.80.33.181', os.name: 'Windows Server 2012', os.arch: 'amd64', os.version: '6.2', java.version: '1.7.0_25' Driver info: driver.version: unknown                 at .FirefoxDriver.prototype.findElementInternal_(file:///C:/Users/AH0104~1/AppData/Local/Temp/2/anonymous7432666803640582619webdriver-profile/extensions/fxdriver@googlecode.com/components/driver-component.js:10271)                 at .FirefoxDriver.prototype.findElement(file:///C:/Users/AH0104~1/AppData/Local/Temp/2/anonymous7432666803640582619webdriver-profile/extensions/fxdriver@googlecode.com/components/driver-component.js:10280)                 at .DelayedCommand.prototype.executeInternal_/h(file:///C:/Users/AH0104~1/AppData/Local/Temp/2/anonymous7432666803640582619webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:12274)                 at .DelayedCommand.prototype.executeInternal_(file:///C:/Users/AH0104~1/AppData/Local/Temp/2/anonymous7432666803640582619webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:12279)                 at .DelayedCommand.prototype.execute/","closed","","upadhyayapooja11","2015-06-12T10:16:11Z","2019-08-21T11:09:53Z"
"","565","EXCEPTION_ACCESS_VIOLATION with selenium java","Hi  Trying to execute a test case with selenium 2.44 version with java , Windows 7 OS  Gettting the below error frequently #  # EXCEPTION_ACCESS_VIOLATION (0xc0000005) at pc=0x656970ba, pid=5260, tid=1828 #  # JRE version: Java(TM) SE Runtime Environment (7.0_51-b13) (build 1.7.0_51-b13) # Java VM: Java HotSpot(TM) Client VM (24.51-b03 mixed mode, sharing windows-x86 ) # Problematic frame: # C  [ODBC32.dll+0x270ba] #  # Failed to write core dump. Minidumps are not enabled by default on client versions of Windows #  # An error report file with more information is saved as: # E:\Live\iAF-Selenium-v3\bin\hs_err_pid5260.log #  # If you would like to submit a bug report, please visit: # http://bugreport.sun.com/bugreport/crash.jsp # The crash happened outside the Java Virtual Machine in native code. # See problematic frame for where to report the bug. #   E:\Live\iAF-Selenium-v3\bin>pause 0 Press any key to continue . . .  Could you please help me out with a solution as i am not able to proceed with the execution.","closed","","SuhaThevar90","2015-05-25T11:57:03Z","2019-08-21T12:10:00Z"
"","776","/sessions call does not return the right active sessions with the firefox","Hi   I use the /sessions command as stated @ https://code.google.com/p/selenium/wiki/JsonWireProtocol#/sessions for getting the list of active sessions.   The returned sessions are not active atall.   I tried to confirm this by trying to re-use the session using the sessions id and I am getting the exception as Cannot re-use the firefox driver after quit.   I tried to upgrade the selenium to latest 46 version as well but still the issue exists  When i fire the /sessions command, currently it returns something aroung 40-45 active session every thing of firefox, but On accessing the machine physicallyI am able to see that there is no active session on the machine.   This is happening only with firefox as observed so far. Is there something which I am doing wrong here ?","closed","","arpit-dhandhania","2015-07-14T09:31:42Z","2019-08-21T03:09:35Z"
"","777","addCookie doesnt work with IE","Hi  the addCookie method doesnt work with IE latest 46 driver as well as latest 46 server standalone.   Can some-one please check on this ?","closed","","arpit-dhandhania","2015-07-14T09:39:10Z","2019-08-21T08:09:59Z"
"","681","Deploy location 'cause few issues","Hey,  The deploy location in maven project file (pom.xml)  ```               sonatype-nexus-snapshots         http://oss.sonatype.org/content/repositories/snapshots                   sonatype-nexus-staging         http://oss.sonatype.org/service/local/staging/deploy/maven2        ```  displaying the next error when building it on our CI machines  14:04:58 [WARNING] Checksum validation failed, could not read expected checksum: Error transferring file: Connection timed out for https://oss.sonatype.org/content/repositories/snapshots/org/seleniumhq/selenium/selenium-java/maven-metadata.xml 14:06:01 [WARNING] Could not transfer metadata org.seleniumhq.selenium:selenium-java/maven-metadata.xml from/to sonatype-nexus-snapshots (https://oss.sonatype.org/content/repositories/snapshots): Error transferring file: Connection timed out  Is it possible to point it to the correct location??","closed","R-awaiting answer,","Shnitzelil","2015-06-18T10:43:33Z","2019-08-21T11:09:37Z"
"","694","Deploy location 'cause few issues continue to issue #681","Hey,  I'm not trying to deploy Selenium, somehow the during building my project (not Selenium project) selenium dependency caused the error showed on issue #681.  Thanks","closed","","Shnitzelil","2015-06-21T07:12:48Z","2019-08-21T10:09:52Z"
"","595","IE10/9 element opacity:0 is incorrectly non-interactable","Hey team,  I noticed as discrepancy between the behavior of IEDriver and the other browser Drivers with respect to the interactability of invisible states. To be clear, there are several ways to make things invisible in CSS, and each have different attributes.  display:none , for example, is non-interactable and takes no real estate visibility:hidden, is non-interactable but consumes real estate opacity:0 is interactable, and consumes real estate  ... that is, you can use opacity 0 to overlay, and clicks will hit the ""invisible"" element. This is true for all the browsers that I have tried, including IE10 & 11, Firefox, Chrome, and Safari.   Selenium generally gets this right. It correctly identifies invisible nodes as being invisible. However, for Opacity 0, it does not throw an error when trying to click or type into them for Chrome, Firefox, and Safari. But on IE10 (and I think IE9 as well) it throws an org.openqa.selenium.ElementNotVisibleException: Element is not currently visible and so may not be interacted with.  Just to be clear: this error message is incorrect. Certain types of invisible elements CAN be interacted-with, Opacity:0 being one of them. Selenium is interacting with them just-fine in most cases (Firefox, Safari, Chrome). The problem is that IE10 (and IE9 too, I think) is detecting that the element is invisible and throwing a cannot-interact exception, even though it should be able to interact with this element.  Thanks!","closed","","kdillon","2015-06-01T20:54:36Z","2019-08-21T12:09:49Z"
"","796","Control flow getting stuck","Here's another attempt at reproducing the hanging webdriver control flow we've been seeing at protractor.  My previous attempt (https://github.com/SeleniumHQ/selenium/issues/715) has been close, but hopefully this is something new. **In particular, this hangs with webdriver 2.46.1 but not 2.45.1**  ``` javascript var webdriver = require('selenium-webdriver'); var driver = new webdriver.Builder().   usingServer('http://localhost:4444/wd/hub').   withCapabilities(webdriver.Capabilities.chrome()).   build(); var flow = webdriver.promise.controlFlow();  driver.get('http://www.w3schools.com/html/html_lists.asp');  var printTexts = function(webElems) {   var attrVals = webElems.then(function(arr) {     var results = arr.map(function(webElem) {       return webElem.getText();     });     return webdriver.promise.all(results);   });    flow.execute(function() {     return attrVals.then(function(res) {       console.log(res[0]);     });   });    return true; };  driver.findElements(webdriver.By.css('.example_result li')).then(function(arr) {   var result = arr.map(function(webElem) {     var webElemsPromise = webdriver.promise.fulfilled(webElem).then(function(webElem) {       return [webElem];     });     return webdriver.promise.fullyResolved(printTexts(webElemsPromise));   });   return webdriver.promise.all(result); })  driver.quit(); ```","closed","I-needs investigation,","hankduan","2015-07-16T00:58:16Z","2019-08-21T00:09:57Z"
"","205","Allowing FindBy, FindBys, FindAll annotations on types.","Helps building nested/modular PageObject structures.","closed","","sevaseva","2014-04-11T02:12:12Z","2014-06-25T06:22:52Z"
"","782","file upload PhantomJSDriver","Hello. I would like to upload file image profile with PhantomJSDriver in vb net project (or c#)  html code is this:     My .net code is this:   Dim d As IWebDriver = New PhantomJSDriver(service, opzioni) d.Navigate.GoToUrl(uri) Dim elem As IWebElement = d.FindElement(By.XPath(""//input[@type='file']""))   Threading.Thread.Sleep(250) elem.SendKeys(f)  I obtain this exception:  07/2015 19:13:56:  OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:54874/session/6f8d4070-2a4b-11e5-a69c-9b9675b8fe83/element/:wdc:1436893975606/value timed out after 60 seconds. ---> System.Net.WebException: Timeout dell'operazione.    in System.Net.HttpWebRequest.GetResponse()    in OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\HttpCommandExecutor.cs:riga 142    --- Fine della traccia dello stack dell'eccezione interna ---    in OpenQA.Selenium.Remote.HttpCommandExecutor.CreateResponse(WebRequest request) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\HttpCommandExecutor.cs:riga 150    in OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\HttpCommandExecutor.cs:riga 114    in OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\DriverServiceCommandExecutor.cs:riga 78    in OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\RemoteWebDriver.cs:riga 910    in OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\RemoteWebDriver.cs:riga 781    in OpenQA.Selenium.Remote.RemoteWebElement.Execute(String commandToExecute, Dictionary`2 parameters) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\RemoteWebElement.cs:riga 849    in OpenQA.Selenium.Remote.RemoteWebElement.SendKeys(String text) in c:\Projects\webdriver\dotnet\src\webdriver\Remote\RemoteWebElement.cs:riga 303   If i use FirefoxDriver this code works fine.  Thanks for help","closed","","unabombergt","2015-07-14T18:51:12Z","2019-08-21T08:10:01Z"
"","453","portable BASIC auth","Hello, reading through old issue: https://code.google.com/p/selenium/issues/detail?id=34  I can't find any descent way to test sites using basic auth that's stable and portable across browsers and OSes. Any hope selenium can implement reliable and portable basic auth support?","closed","D-firefox,","akostadinov","2015-04-14T15:43:28Z","2019-08-16T05:09:51Z"
"","721","Selenium server is no loading my user-extensions.js","Hello, I have an strange issue with selenium server and user-extensions.js.  It loads my user-extensions.js well if I run my test suite using from command line like this:  java -jar C:\selenium-server-standalone-2.46.0.jar -userExtensions C:\user-extensions.js -htmlSuite *firefox http://16.100.104.63:8081/ C:\Test-Suites\TS1.html C:\results.html  In this case it loads fine the user-extension.js because it runs the test good and in the results.html I see that the test uses the functions on the user-extentions.js as: gotoLabel, gotoIf, while and others functions.  But if I just run the server like this (passing the user-extensions.js file): java -jar C:\selenium-server-standalone-2.46.0.jar -userExtensions C:\user-extensions.js  And then I pass the HTML using an HTMLClient made on java it Fails because does not find the functions that are defined in the user-extensions.js. It seems that's selenium server is not loading the user-extensions.js in that case.  Does anybody knows what can be happening here ?  this is the content of my user-extensions.js file:  /*  (C) Copyright MetaCommunications, Inc. 2006.      http://www.meta-comm.com      http://engineering.meta-comm.com  Distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND. */  function map_list( list, for_func, if_func )     {     var mapped_list = [];     for ( var i = 0; i < list.length; ++i )         {         var x = list[i];         if( null == if_func || if_func( i, x ) )              mapped_list.push( for_func( i, x ) );         }     return mapped_list;     }  // Modified to initialize GoTo labels/cycles list HtmlRunnerTestLoop.prototype.old_initialize = HtmlRunnerTestLoop.prototype.initialize  HtmlRunnerTestLoop.prototype.initialize = function(htmlTestCase, metrics, seleniumCommandFactory)     {     this.gotoLabels  = {};     this.whileLabels = { ends: {}, whiles: {} };  ``` this.old_initialize(htmlTestCase, metrics, seleniumCommandFactory);  this.initialiseLabels(); } ```  HtmlRunnerTestLoop.prototype.initialiseLabels = function()     {     var command_rows = map_list( this.htmlTestCase.getCommandRows()                                 , function(i, x) {                                      return x.getCommand()                                     }                                );  ``` var cycles = []; for( var i = 0; i < command_rows.length; ++i )     {     switch( command_rows[i].command.toLowerCase() )         {         case ""label"":             this.gotoLabels[ command_rows[i].target ] = i;             break;         case ""while"":         case ""endwhile"":             cycles.push( [command_rows[i].command.toLowerCase(), i] )             break;         }     }          var i = 0; while( cycles.length )     {     if( i >= cycles.length )         throw new Error( ""non-matching while/endWhile found"" );      switch( cycles[i][0] )         {         case ""while"":             if(    ( i+1 < cycles.length )                  && ( ""endwhile"" == cycles[i+1][0] )                 )                 {                 // pair found                 this.whileLabels.ends[ cycles[i+1][1] ] = cycles[i][1]                 this.whileLabels.whiles[ cycles[i][1] ] = cycles[i+1][1]                  cycles.splice( i, 2 );                 i = 0;                 }             else                 ++i;             break;         case ""endwhile"":             ++i;             break;         }     }  }     ```  HtmlRunnerTestLoop.prototype.continueFromRow = function( row_num )      {     if(    row_num == undefined         || row_num == null         || row_num < 0         )         throw new Error( ""Invalid row_num specified."" );  ``` this.htmlTestCase.nextCommandRowIndex = row_num; } ```  // do nothing. simple label Selenium.prototype.doLabel      = function(){};  Selenium.prototype.doGotolabel  = function( label ) {  ``` if( undefined == htmlTestRunner.currentTest.gotoLabels[label] )      throw new Error( ""Specified label '"" + label + ""' is not found."" );  htmlTestRunner.currentTest.continueFromRow( htmlTestRunner.currentTest.gotoLabels[ label ] ); }; ```  Selenium.prototype.doGoto = Selenium.prototype.doGotolabel;  Selenium.prototype.doGotoIf = function( condition, label ) {     if( eval(condition) )          this.doGotolabel( label );     }  Selenium.prototype.doWhile = function( condition ) {     if( !eval(condition) )         {         var last_row = htmlTestRunner.currentTest.htmlTestCase.nextCommandRowIndex - 1         var end_while_row = htmlTestRunner.currentTest.whileLabels.whiles[ last_row ]         if( undefined == end_while_row )              throw new Error( ""Corresponding 'endWhile' is not found."" );  ```     htmlTestRunner.currentTest.continueFromRow( end_while_row + 1 );     } } ```  Selenium.prototype.doEndWhile = function() {     var last_row = htmlTestRunner.currentTest.htmlTestCase.nextCommandRowIndex - 1     var while_row = htmlTestRunner.currentTest.whileLabels.ends[ last_row ]     if( undefined == while_row )          throw new Error( ""Corresponding 'While' is not found."" );  ``` htmlTestRunner.currentTest.continueFromRow( while_row ); } ```","closed","","msantamariapr","2015-06-30T17:05:46Z","2019-08-21T09:10:00Z"
"","772","Code inside IEDriver confuses NTLM security dialog for an Alert Box and limits interaction","Hello, after much gnashing of teeth, I believe I've discovered a bug in IECommandExecutor.cpp.  I'm automating a site that uses NTLM security and IE issues a challenge-response dialog when you navigate to a URL.    It looks like this:  ![image](https://cloud.githubusercontent.com/assets/4335553/8659127/1a2e6d58-296e-11e5-87b4-110c012499f0.png)  Once this dialog is present, any interaction you do with the browser raises an exception ""Selenium::WebDriver::Error::UnhandledAlertError: Modal dialog present:""  (using Ruby bindings, but I'm sure it would be the same if I was using Java).  The only interactions that seem to be allowed once the dialog is present are:  send_keys, accept, and dismiss.  Since this is a security dialog, I need more control than that.  I need to be able to set focus on each field and fill it out (send_keys only types in the first field and special keys like tabs or returns are turned into strange text characters).  I _believe_ the bug is in IECommandExecutor::IsAlertActive().  I _believe_ it's returning true, which effectively shuts off my ability to ask the browser about its windows and work out some other way to fill out the NTLM dialog.  However, it might also be in IECommandExecutor::DispatchCommand() since that's what's using IsAlertActive().  I'm not familiar with the code, so I'm not sure.  If I could figure out how to build it, I might try a few different things to see if I can get around it, but I'm guessing the community isn't super excited about newbies mucking around in IEDriver, and my cpp skills are a little rusty at best.  Thanks!","closed","","calphool","2015-07-13T19:38:01Z","2019-08-21T08:09:57Z"
"","600","Update commons-exec-1.1 jar dependecy","Hello,  Please update the commons-exec-1.1 jar dependency to latest stable version. The current 1.1 version is not included in maven-metadata.xml for commons-exec, probably signifying they don't want others to use this version. Also 1.1 is pretty old (2007), it would be nice to have latest lib.  Please have this as priority.   http://mvnrepository.com/artifact/org.apache.commons/commons-exec  Maven-metadata.xml content  ```  -      org.apache.commons      commons-exec      -             1.3             1.3            -                  1.0                  1.0.1                  1.2                  1.3                  20141106034814        ```  Thank You.","closed","","spatelamp","2015-06-02T13:42:29Z","2019-08-21T12:09:48Z"
"","581","Drag-and-drop not working with jquery and ui-sortable","Hello!  Can you address this stackoverflow question?  http://stackoverflow.com/questions/30495708/testing-drag-and-drop-not-working-rspec-selenium-jquery  Best regards,  Perry","closed","","mskraddoc","2015-05-28T05:21:37Z","2019-08-21T12:09:52Z"
"","785","How we differentiate between ""null"" and NULL value of attribute","Hello Team,  ![htmlpagecode](https://cloud.githubusercontent.com/assets/7448394/8696081/06ef6022-2b07-11e5-9476-db045001eca2.png)   Above html page creates a dynamic attribute[prp1,prp2] and set values as [""null"",NULL] on click ""Create Dynamic Attribute"" button  My scenario is we check the object property value is ""null"" or NULL  Test: {  ```     FirefoxDriver driver = new FirefoxDriver();     driver.navigate().to(""URL of html page"");      WebElement btn = driver.findElement(By.id(""butn""));     btn.click();     // waiting for creates object attribute at run time              Thread.sleep(5000);      WebElement field = driver.findElement(By.id(""field2""));     String prp1 = field.getAttribute(""prp1"");     String prp2 = field.getAttribute(""prp2"");       if(prp1 == null){         System.out.println("" value is null using webdriver"");     }       if(prp2 == null){         System.out.println(""Expect NULL pointer Exception using webdriver "");     }     // also Try with javascript          prp1 = (String) ((JavascriptExecutor)driver).executeScript(""return arguments[0].prp1;"", field);     prp2 = (String) ((JavascriptExecutor)driver).executeScript(""return arguments[0].prp2;"", field);      if(prp1 == null){         System.out.println("" value is null using javascript "");     }      if(prp2 == null){         System.out.println(""Expect NULL pointer Exception using java script "");     }      System.out.println("" Complete Test""); ```   }  Webdriver given ""null"" as string in both cases when Attribute value of object is ""null"" [string] or NULL[Object]  ,  In Depth::  current Webdriver implementation is webdriver given  NULL[object] only  when Attribute not defined in Object   My suggestion is: WebDriver given NULL object  or ""NULLPointerException"" when Attribute value of object is NULL [ set by java script] or given attribute is not defined in object   same problem arise with javScript   How we handle this Scenario.??  Any help will be highly appreciated","closed","R-awaiting answer,","Ankit9568","2015-07-15T10:09:09Z","2019-08-21T07:09:57Z"
"","709","Webdriver hangs when perform click action on a webelement","Hello Team Member,  Webdriver hangs When performing click action   Code : { FirefoxDriver driver = new FirefoxDriver(); driver.navigate().to(""https://developer.mozilla.org/samples/domref/showModalDialog.html""); WebElement we = driver.findElement(By.cssSelector(""input[type='button']"")); we.click(); System.out.println("" Click successful perform ""); }  After click show an pop up window shows in below image   ![issue with selenium](https://cloud.githubusercontent.com/assets/7448394/8351336/215b148c-1b4a-11e5-9faf-5e7093ee0cb4.png)  If user close a window [shows after click] manually than ""click"" action pass successfully and continue My test case    Also I have  tried another way to handle this scenario   Code{ FirefoxDriver driver = new FirefoxDriver();     driver.navigate().to(""https://developer.mozilla.org/samples/domref/showModalDialog.html""); WebElement we = driver.findElement(By.cssSelector(""input[type='button']"")); JavascriptExecutor executor = (JavascriptExecutor) driver; executor.executeScript(""arguments[0].click();"", we); System.out.println(""click sucessfully ""); }  Environment  OS:                                   -  Window 7 Ultimate [ service pack 1] OS Architecture                -  32 - bit operating system Selenium client version    -   Selenium 2.46 Browser version               -   Firefox 36  But same problem is exist, can any one help me how to handle above scenario Any help will be greatly appreciated","closed","","Ankit9568","2015-06-25T10:20:24Z","2019-08-21T09:09:59Z"
"","653","Error after ./go //javascript/node:selenium-webdriver","Hello I typed in ./go //javascript/node:selenium-webdriver after cloning the repository and got this error:  Java HotSpot(TM) Client VM warning: ignoring option MaxPermSize=1024m; support was removed in 8.0 Error occurred during initialization of VM Could not reserve enough space for 2097152KB object heap  Does anyone have any idea how to solve this?   Thanks","closed","","avuong","2015-06-11T21:18:21Z","2019-08-21T11:09:55Z"
"","458","Time out using findElement.sendkeys on Safari","Hello everyone I am trying to test my website with selenium on safari using ECLIPSE LUNA. My website uses Login with twitter. When I try to send key to an input on api.twitter.com I have a timeout.  Note that I have already tried ""send keys"" on google using the wiki page of selenium even on www.twitter.com and It is working fine. I do not understand why it is not working on api.twitter.com. I taught It was my website the problem then I tested the same code on another website also using twitter authentication and I have the same error.   I even tried using javascriptExecutor to fill the value of the input and I also have a time out.  Could anyone help me please? Thanks  Please find below my code and the trace I have in my console. -------------------------CODE------------- package com.fxlabs.wonderboard.nodeTest; import static org.junit.Assume.assumeTrue;  import org.openqa.selenium.By; import org.openqa.selenium.Platform; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.safari.SafariDriver; import org.openqa.selenium.support.ui.ExpectedConditions; import org.openqa.selenium.support.ui.WebDriverWait; import org.junit.After; import org.junit.Before; import org.junit.Test; import org.junit.runner.RunWith; import org.junit.runners.JUnit4;  @RunWith(JUnit4.class) public class BrowserTest {  ```   private WebDriver driver = null;    private static boolean isSupportedPlatform() {     Platform current = Platform.getCurrent();     return Platform.MAC.is(current) || Platform.WINDOWS.is(current);   }    @Before   public void createDriver() {     assumeTrue(isSupportedPlatform());     driver = new SafariDriver();   }    @After   public void quitDriver() {     driver.quit();   }    @Test   public void shouldBeAbleToPerformAGoogleSearch() {     driver.get(""http://tweetbeam.com"");     new WebDriverWait(driver, 3).until(ExpectedConditions.titleIs(""TweetBeam Twitter Wall - Visualize Live Tweets""));     driver.findElement(By.className(""navbar-right"")).findElement(By.tagName(""a"")).click();     new WebDriverWait(driver, 3).until(ExpectedConditions.titleIs(""Twitter / Autoriser une application""));     driver.findElement(By.id(""username_or_email"")).sendKeys(""TwitterUsername"");     driver.findElement(By.id(""username_or_email"")).sendKeys(""password"");   } } ```  -----------------------Failure Trace----------- org.openqa.selenium.TimeoutException: Timed out awaiting response to command ""sendKeysToElement"" after 30001 ms (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 30.01 seconds Build info: version: '2.44.0', revision: '76d78cf323ce037c5f92db6c1bba601c2ac43ad8', time: '2014-10-23 13:11:40' System info: host: 'xxx', ip: 'xxx', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.9.5', java.version: '1.6.0_65' Session ID: null Driver info: org.openqa.selenium.safari.SafariDriver Capabilities [{platform=MAC, cssSelectorsEnabled=true, javascriptEnabled=true, secureSsl=true, browserName=safari, takesScreenshot=true, version=7.1.4}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)     at java.lang.reflect.Constructor.newInstance(Constructor.java:513)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268)     at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:89)     at com.fxlabs.wonderboard.nodeTest.BrowserTest.shouldBeAbleToPerformAGoogleSearch(BrowserTest.java:44)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)     at java.lang.reflect.Method.invoke(Method.java:597)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)     at org.junit.runners.ParentRunner.run(ParentRunner.java:363)     at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)     at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)","closed","A-needs new owner,","mketevi","2015-04-16T07:10:06Z","2019-08-19T15:09:44Z"
"","353","unable to use actual iOS device","Hello as mentioned in the tutorial i cloned the git repo, however on doing the ./go iPhone ; i am unable to get the device. I made sure the device is in the network and is connected. is there a detailed tutorial for using actual physical devices?? if yes please share it with me screenshots will also be helpful . thanks in advance","closed","","ghost","2015-03-20T06:10:12Z","2019-08-22T07:53:18Z"
"","787","what's tool can be get code coverage of selenium2?","Hello @crspl,I want to know whether there are tools can be get the code coverage of selenium2. Although I see Jacoco can be achieved on some pages,but I don't know how to do it.Please help me.Thanks for your first.","closed","","w1807710180","2015-07-15T10:50:52Z","2019-08-21T08:09:56Z"
"","797","Selenium IDE custom formats broken","Hello :)  With IDE 2.9.0, working with custom formats is completely broken. Issues:  1) An added format won't appear in options until it has been closed and re-opened. 2) Editing the format file directly on the disk has no effect; the IDE never picks up any change made there. You have to add a new one every time you make a change. 3) Any format made (which is valid) will produce blank output when using it for export. Simple test: Copy an existing, working format's source code and paste it into a new custom format, then export using the new format. A blank file is written. 4) Deleted custom formats disappear from the list, but the files remain on disk.  All of these bugs, except 3) are also present in 2.8.0.","closed","","DanielSmedegaardBuus","2015-07-16T10:07:54Z","2019-08-21T08:09:47Z"
"","553","org.openqa.selenium.TimeoutException: Timed out waiting for page load.","Hello ,  I have the following problem when running an automated test using selenium WebDriver from testNG:  Caused by: org.openqa.selenium.TimeoutException: Timed out waiting for page load. Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{platform=WINDOWS, acceptSslCerts=true, javascriptEnabled=true, cssSelectorsEnabled=true, databaseEnabled=true, browserName=firefox, handlesAlerts=true, nativeEvents=false, webStorageEnabled=true, rotatable=false, locationContextEnabled=true, applicationCacheEnabled=true, takesScreenshot=true, version=7.0}]     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)     at java.lang.reflect.Constructor.newInstance(Constructor.java:526)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:304)  I guess that the problem is from the firefox driver .....  Daniel","closed","","dcristea","2015-05-19T13:12:48Z","2019-08-21T13:09:43Z"
"","384","Possible memory leak?","Hello  I am using selenium through ruby's selenium-webdriver to create a bot, which plays a browser game for me (single player browser game, no cheating here; ) ). The problem is, that process gains memory with time, and after 3, 4 hours it needs a restart, because of memory usage and slowing down. I managed to get a profile in firefox during the increased memory time and most of the time seems to be spent in selenium internals, namely in  ``` Connection.prototype.close ```  in javascript.  What I do: I create a driver object in ruby and perform some actions in infinite loop. The code is available here: https://github.com/KillaPL/automaton.  Is this possibly a memory leak in selenium internals? I am not closing the connection myself anywhere. If so, what can I do more to help fix it? If not, what am I doing wrong?  To reproduce the issue, clone the https://github.com/KillaPL/automaton, bundle install and run it. It might fail on first run, it's not bulletproof yet. It will slowly, but steadily gain memory.  Profile file from firefox I used is available here: http://speedy.sh/Dgewu/profile.json","closed","D-firefox,","lstrzebinczyk","2015-03-27T18:38:25Z","2019-08-17T20:09:48Z"
"","496","Update to Htmluni  2.16","Have updated most parts for the HtmlUnit 2.16 release. Missing: - IntelliJ configuration - HtmlUnit uses commons-logging 1.2; have not done this change because i'm not sure if there is still a component that relies on the old version  At least locally all HtmlUnit testcases are working fine with this.","closed","","rbri","2015-04-27T15:40:11Z","2015-06-04T06:45:18Z"
"","356","using latest npm @2.7.3","Happens with PYHTON 2.7.x  ``` text D:\CodeRoot\node_ lenium-webdriver\node_modules\ws\node_modules\utf-8-validate>if not de config_node_gyp (node ""C:\Program Files\nodejs\node_modules\npm\bin\no \\..\..\node_modules\node-gyp\bin\node-gyp.js"" rebuild )  else (rebuil gyp ERR! configure error gyp ERR! stack Error: spawn C:\Python34 ENOENT gyp ERR! stack     at exports._errnoException (util.js:746:11) gyp ERR! stack     at Process.ChildProcess._handle.onexit (child_proce :32) gyp ERR! stack     at child_process.js:1137:20 gyp ERR! stack     at process._tickCallback (node.js:355:11) gyp ERR! System Windows_NT 6.1.7601 gyp ERR! command ""node"" ""C:\\Program Files\\nodejs\\node_modules\\npm\ les\\node-gyp\\bin\\node-gyp.js"" ""rebuild"" gyp ERR! cwd D:\CodeRoot\node_modules\selenium-webdriver\node_modules\ws\node_modules\utf-8-valid gyp ERR! node -v v0.12.0 gyp ERR! node-gyp -v v1.0.3 gyp ERR! not ok npm WARN optional dep failed, continuing bufferutil@1.0.1 npm WARN optional dep failed, continuing utf-8-validate@1.0.1 selenium-webdriver@2.45.1 node_modules\selenium-webdriver ├── tmp@0.0.24 ├── adm-zip@0.4.4 ├── xml2js@0.4.4 (xmlbuilder@2.6.2, sax@0.6.1) ├── rimraf@2.3.2 (glob@4.5.3) └── ws@0.7.1 (options@0.0.6, ultron@1.0.1) ```","closed","","ghost","2015-03-20T16:07:13Z","2019-08-22T07:53:00Z"
"","406","adding travis build badge","good work @andreastt","closed","","ddavison","2015-04-02T13:10:16Z","2015-04-02T13:11:53Z"
"","251","Adding invisibility of element equivalent","Going from python to ruby I really missed this: https://github.com/nvreynolds/selenium/blob/master/py/selenium/webdriver/support/expected_conditions.py#L159-L177  I know there is resistance to the expected conditions class being added to the ruby bindings so I thought this was the best solution. @jarib","closed","","nvreynolds","2014-09-03T22:48:49Z","2014-09-05T09:10:17Z"
"","668","getVersion() of IE's DesiredCapabilities not working.","getVersion() of Internet Explorer's DesiredCapabilities is returning """" only instead of version number.","closed","","sainivarun","2015-06-16T08:28:05Z","2019-08-21T11:09:49Z"
"","297","Move out of the way of the freezegun","freezegun is used to mock the current time for testing. Importing time as a module doesn't allow excluding Selenium from freezing time, making WebDriverWait and similar stall.","closed","","koterpillar","2014-12-08T00:26:57Z","2015-03-02T19:59:59Z"
"","778","free_port checks if port is available on all int.","free_port checks if port is available on all interfaces as phatnomjs (at least 1.9.8) always binds to 0.0.0.0","closed","","crspl","2015-07-14T13:54:17Z","2015-07-14T22:05:37Z"
"","32","Add basic contributor guideline pointing to HQ URL","For the GitHub API https://github.com/blog/1184-contributing-guidelines  I have signed the CLA","closed","","nschonni","2013-03-18T06:02:18Z","2013-03-18T16:17:25Z"
"","20","Use python-requests instead of urllib/urllib2/httplib","For much simpler/cleaner code.  I've signed the CLA, though I'm not exactly sure why it's necessary. This pull request contains vendored code authored by @kennethreitz and others, which is already Apache licensed, but they probably haven't signed the CLA (nor should they have to)  cf http://docs.python-requests.org/en/latest/  Note this is a fork of @intchanter's py3 work ( #18 ) so it depends upon that pull request being merged. This is because python-requests also requires python 2.6+, so this can't really be merged without his stuff.  (was https://github.com/intchanter/selenium/pull/1 )","closed","","craigds","2013-03-06T00:09:45Z","2013-03-25T18:32:43Z"
"","751","Unable to close the Browser if i use - driver.close Method if my java version is 8 along with java Binding version is  	2.46.0","For Java 1.8 or 1.7 and along woth Java Bindings V2.46.0  and when i am trying to perform the below operations :  driver.close : then it is not performing this operation as expected   driver.quit: then it is closing the browser by providing the below ERROR:  ""org.openqa.selenium.os.UnixProcess$SeleniumWatchDog destroyHarder INFO: Command failed to close cleanly. Destroying forcefully (v2). org.openqa.selenium.os.UnixProcess$SeleniumWatchDog@1837e72"" ![issue](https://cloud.githubusercontent.com/assets/13248051/8587348/cd0ef0fa-  Hope i will get some response to my issue   Thanks in advance   2617-11e5-9902-95cd88b86de2.png)","closed","D-firefox,","vikram1015","2015-07-09T03:22:59Z","2019-08-19T07:09:51Z"
"","167","fix xpath translate() function for RegEx special characters","for issue 4585 to fix xpath translate() function for RegEx special characters","closed","","refactoror","2014-02-11T02:03:45Z","2014-06-28T03:49:19Z"
"","389","WebDriverJS - capabilities.merge does not merge child objects","For example, if one capabilities object is  ``` js chromeOptions: {   args: '--foo' } ```  and the other is   ``` js chromeOptions: {   binary: '/path/to/chrome' } ```  then `capabilities.merge` will override the entire `chromeOptions` object instead of combining into one with both properties.  I'm not sure if this is working as intended or not, but it's causing some unexpected effects when merging.","closed","","juliemr","2015-03-30T17:40:18Z","2019-08-21T15:09:56Z"
"","419","add closing comments to classes and modules","For consistency in project. Over 2/3 of the files have these comments already.","closed","","titusfortner","2015-04-06T20:11:22Z","2015-07-02T01:43:23Z"
"","277","Allowed super-generic predicates in FluentWait to avoid having to cast","FluentWaits or expected predicates.  Have signed CLA","closed","C-java,","skestle","2014-11-03T22:26:03Z","2017-06-28T01:02:22Z"
"","607","Typos in CONTRIBUTING.md","Fixing two typos in CONTRIBUTING.md","closed","","asashour","2015-06-03T11:16:28Z","2015-06-04T16:39:34Z"
"","77","[CrazyFun] Fixing the issue when running python IE test target. Removed IEDriver dl...","Fixing the issue when running python IE test target. Removed IEDriver.dll resource dependency.  When running the IE test target `go.bat //py:ie_test:run`, it throws the following error. go aborted! Don't know how to build task '//cpp:ie_win32_dll'  Removing the IEDriver.dll resource dependency which is no longer needed.","closed","","jayakumarc","2013-05-19T19:45:44Z","2013-05-20T11:23:42Z"
"","766","testing out adding travis config to run python tests","fixing syntax error in remote_connection.py","closed","","lukeis","2015-07-10T16:51:55Z","2015-07-10T19:50:09Z"
"","55","[Python] Fixing issues 5508 and 5512. Making sure profile dir path of type str un...","Fixing issues 5508 and 5512. Making sure profile dir path of type str under both Py2 and Py3. Changing the way BytesIO imported so that str unicode swap actually happens under Py2.  Changes made:  I don't see any necessity to turn all the string literals in the file firefox_profile.py into unicode literals by importing `unicode_literals`, removing which makes sure that the profile dir path of type `str` under both Py2 and Py3. This fixes the issues 5508 and 5512 happening under Py2. A test has already been there to cover this scenario.  `io` module introduced in Python2.6 itself. Hence, changing the the way `BytesIO` imported so that the `str` and `unicode` swap would actually happen under Py2. This fixes the issue when try setting unicode profile preference under Py2.  Added 2 more firefox profile tests to make sure int and bool preferences are set properly.  EDIT: Updated the unicode preference setting test to make it functional under Py2.","closed","","jayakumarc","2013-04-23T16:16:36Z","2014-06-13T15:05:52Z"
"","52","Fixing issue #5277 remote webdriver doesn't throw an exception correctly if using compound class name","Fixing issue #5277 remote webdriver doesn't throw an exception if finding by compound class name  Source of issue is that during remote work json parameter generation was out of try&catch block so if something like exception for invalid class name locator is thrown it was not catched and incorrectly returned to client.  2 tests are added.","closed","","alex-savchuk","2013-04-16T01:19:25Z","2014-07-08T17:46:39Z"
"","38","Fixing issue #4769 (stale element can get into executeScript)","Fixing issue #4769 by use result of recursive walk of arrays/objects. Adding test for this problem.  the CLA has been signed.","closed","","alex-savchuk","2013-04-05T04:26:02Z","2013-04-05T23:24:45Z"
"","51","Fixing issue #4390 Element cannot be scrolled into view for FF","Fixing issue #4390 Element cannot be scrolled into view for FF. Test case input is updated to cover FF fix.  CLA as Alex Savchuk is signed.  P.S.: i'd fix it at bot.dom.getInViewLocation in comparison of coords before and after scrolling but i'm not sure it doesn't broke something at another point.","closed","","alex-savchuk","2013-04-15T23:12:34Z","2014-06-18T10:50:25Z"
"","436","py: Stricter except clause for chromedriver start.","Fixes issue [8497](https://code.google.com/p/selenium/issues/detail?id=8497) on googlecode.  Catching too-broad an exception can hide esoteric bugs like [8498](https://code.google.com/p/selenium/issues/detail?id=8498) on googlecode (too many open files).  I didn't see any existing tests around this; if you want some tests around this I could use a nudge on where to start ... given the variety of OS issues etc it seems like there is a reason it didn't have tests.  I have a full discussion of the issues on this [StackOverflow answer.](http://stackoverflow.com/a/28520062/58371)  I have signed the CLA.","closed","C-py,","stvsmth","2015-04-09T00:34:24Z","2015-04-09T12:05:12Z"
"","141","Fix double rejection error caused by findElement in WebDriverJs.","Fixes issue 6686. See the issue in Google code for more details: https://code.google.com/p/selenium/issues/detail?id=6686  I have signed the CLA.","closed","","jagoda","2013-12-06T19:16:46Z","2014-07-01T14:34:11Z"
"","544","webdriver.py: make _unwrap_value and _wrap_value bijective","fixes cases like:   result = self.driver.execute_script(""return {a: document.body}"")   self.assertIsInstance(result, dict)   self.assertEquals(""body"", result[""a""].tag_name)","closed","C-py,","reinsch82","2015-05-14T21:01:06Z","2015-05-18T19:55:19Z"
"","688","Include Windows 10 in the Platform enum.","Fixes #669.  I have already signed the CLA.","closed","C-java,","ngsankha","2015-06-19T13:49:03Z","2015-11-17T15:07:07Z"
"","284","Update Augmenter.java","fixed typo in log message clases > classes","closed","","rompic","2014-11-15T21:55:20Z","2015-02-26T00:26:23Z"
"","276","Fixed Issue Unable to pass query param in the URL for RemoteWebDriv...","Fixed Issue 8116:Unable to pass query param in the URL for RemoteWebDriver  Refer to below link for more details : https://code.google.com/p/selenium/issues/detail?id=8116#c1","closed","","rahulk06","2014-11-02T20:08:40Z","2014-11-20T05:51:42Z"
"","314","Fixed :before css content shown in Text","Fixed before/after css content shown in Text","closed","D-atoms,","phasze","2015-02-06T22:11:35Z","2020-04-02T21:09:54Z"
"","142","Fix spelling error in doc comments","Fix of minor spelling error in doc comments.","closed","","dlai0001","2013-12-06T23:16:58Z","2013-12-07T00:51:22Z"
"","48","fix Issue #4390 Element cannot be scrolled into view for IE","fix Issue #4390 Element cannot be scrolled into view for IE  Done: - move code for getting size of clickable viewport to GetClickableViewportLocation() method - use this method in GetClickPoint() and IsLocationInViewPort() - add tests (for simple click at element and click at eleent in iframe) and test resources.","closed","","alex-savchuk","2013-04-10T00:06:06Z","2014-06-17T05:32:34Z"
"","238","Fix for issue #1050 Reset Options"" disables Ok button in Selenium IDE","Fix for Issue: http://code.google.com/p/selenium/issues/detail?id=1050 This is my first fix, was pretty easy too as well. I've signed the CLA. did build the IDE as per http://code.google.com/p/selenium/wiki/BuildingSeIDE and see that the issue doesn't get reproduced with the generated xpi file.","closed","","anonymoussdet","2014-07-12T15:49:50Z","2014-08-18T13:49:39Z"
"","197","Fix For InvalidOperationException In SafariDriverServer.cs.","Fix for issue as discussed here https://groups.google.com/forum/#!topic/selenium-developers/8w1T9KvLtGw.","closed","","martincostello","2014-04-08T22:33:40Z","2015-02-16T00:02:23Z"
"","186","Fix For InvalidOperationException In SafariDriverServer.cs","Fix for issue as discussed here https://groups.google.com/forum/#!topic/selenium-developers/8w1T9KvLtGw.","closed","","martincostello","2014-03-16T17:52:05Z","2014-06-24T15:42:38Z"
"","102","Fix for issue #4506 - remove trailing slashes from baseUrl to prevent double slashes in Url on selenium.open()","Fix for issue #4506 - remove trailing slashes from baseUrl to prevent double slashes in Url on selenium.open()  See https://code.google.com/p/selenium/issues/detail?id=4506  WebdriverBackedSelenium C#","closed","","fijiaaron","2013-08-08T19:54:21Z","2014-07-12T07:07:36Z"
"","94","Fix for issue 5342.","Fix for IEDriverServer reporing ""Unexpected error launching Internet Explorer. Could not get document from window handle."" after running many WebDriver jobs.","closed","","watsonmw","2013-07-12T22:22:35Z","2014-06-23T12:53:49Z"
"","7","Fixing issue #5079 (FluentWait.until(Predicate) method does not propagate predicate message)","Fix for [issue #5079](https://code.google.com/p/selenium/issues/detail?id=5079) adding toString method to the constructed Function when doing FluentWait.until(Predicate) so that it can be picked up in the exception message","closed","","usultis","2013-01-27T14:56:03Z","2014-06-19T10:18:19Z"
"","139","Fix for issue 6575","Fix commands wrong order recorded for www.baidu.com See, https://code.google.com/p/selenium/issues/detail?id=6575  CLA has been signed.","closed","","kayuri","2013-11-29T09:09:50Z","2014-07-11T13:20:28Z"
"","145","fix bug because sometimes capabilities method is private","fix bug when running selenium webdriver on win7 ruby 1.9.3, there is a runtime issue and reported as capabilities is a private method","closed","","easonhan007","2013-12-08T06:43:51Z","2014-10-18T14:29:27Z"
"","605","Update links in README.md","Fix broken or obsolete links in README.md","closed","","asashour","2015-06-03T08:12:48Z","2015-06-04T16:39:35Z"
"","252","capitalization fix","fix .sendKEys to .sendKeys","closed","","jodytate","2014-09-04T19:53:30Z","2014-09-04T20:27:50Z"
"","91","Fix #5762, unable to install chrome extension on windows with python.","Fix #5762, unable to install chrome extension on windows with python.  The crx was being opened in text mode, which on windows will automatically convert newlines to \r\n, which corrupted the extension.","closed","","kenkania","2013-07-01T21:07:02Z","2014-07-08T10:14:23Z"
"","248","Fix javascript errors  in IDE","Fix ""TypeError: command.getDefinition is not a function [editor.js:1091]"" when clicking on a comment in treeview  The related functions are unrelated for comments. So I moved them to the  ""command"" block.   Stacktrace:  Editor.prototype.showReference@chrome://selenium-ide/content/editor.js:1091:9  .selectCommand@chrome://selenium-ide/content/treeView.js:340:17  onselect@chrome://selenium-ide/content/selenium-ide.xul:1:1  onxblmousedown@chrome://global/content/bindings/tree.xml:1016:14  Fix ""TypeError: command.isRollup is not a function [treeView.js:207]"" when changing a comments text  Make the commandAction Textbox aware of what kind of action this text belongs  to and forward this information to updateCurrentCommand. This way the  execution of the - for comment unrelated - functions updateSeleniumTargets  and editor.showReference can be prevented.   If a commandtype could not be read by setTextBox, the old default ""command""  is used.   Stacktrace:  updateSeleniumTargets@chrome://selenium-ide/content/treeView.js:209:5  updateCurrentCommand@chrome://selenium-ide/content/treeView.js:369:21  oninput@chrome://selenium-ide/content/selenium-ide.xul:1:1","closed","","mkresin","2014-08-18T14:49:40Z","2014-09-15T11:29:38Z"
"","604","Change `SearchContext` so that `findElements` can return a list that sub-classes `WebElement`","Firstly, I apologize for the commit comment. I only just read the ""guidelines for contributing"", and promptly failed to be able to squash the commits successfully.  This makes SearchContext generic on ``. To prevent ""yellow"" markers in IntelliJ due to ""rawtypes"", I updated subclasses as well. This is API compatible for all subclasses, but allows for more flexible for implementations of WebElement and WebDriver when we might want to return decorated versions of a WebElement.  This is related to: - https://github.com/appium/java-client/issues/162 - https://github.com/appium/java-client/pull/167 - https://github.com/SeleniumHQ/selenium/pull/327","closed","","alexec","2015-06-02T22:46:23Z","2015-10-03T20:42:16Z"
"","425","how to set page load timeout for selenium webdriver tab window","FirefoxDriver driver = new FirefoxDriver(); driver.manage().timeouts().pageLoadTimeout(5, TimeUnit.SECONDS); driver.get(""http://www.riguanghaian.com/"");  this will be throw a timeoutexception and message timed out waiting for page load! if i open a new webdriver tab window by click a hyperlink element as below: WebElement element = driver.findElement(By.id(hyperlink_id)); element.click(); this will still load sometimes and can not get a timeoutexception,how can i do now ? thanks!","closed","","cruldra","2015-04-07T14:38:54Z","2019-08-21T15:09:41Z"
"","455","Firefox webdriver 'stuck' after navigating away from https://www.google.ca","Firefox: Tried 33 and 37 Selenium: 2.45.0 OS: Windows 7 64bit Python 2.7.9 32 bit  Repro steps:  from selenium import webdriver d = webdriver.Firefox() d.get('https://www.google.ca') d.get('https://www.github.com') d.close()  Expected: The browser closes after visiting www.github.com.  Actual: The github page loads but the browser is waiting for www.google.ca, thus the last line never executes and the webdriver is now stuck.  Not sure what the root cause is but I've only been able to reproduce it visiting google's website.","closed","","chengli86","2015-04-14T16:53:11Z","2019-08-21T14:09:48Z"
"","437","Firefox 38 doesn't work with WebDriver 2.45.1","Firefox beta has been just updated to version 38 and it no longer works with WebDriver 2.45.1. I'm getting the following error:  ``` Using FirefoxDriver directly... [launcher] Running 1 instances of WebDriver ERROR - Unable to start a WebDriver session.  /Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/promise.js:1877       var result = fn();                    ^ Error: Failed to install profile; firefox terminated with Result(code=null, signal=SIGSEGV)     at Error ()     at /Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/firefox/binary.js:238:15     at [object Object].promise.ControlFlow.runInFrame_ (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/promise.js:1877:20)     at [object Object].promise.Callback_.goog.defineClass.notify (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/promise.js:2464:25)     at [object Object].promise.Promise.notify_ (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/promise.js:563:12)     at Array.forEach (native)     at Object.goog.array.forEach (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/goog/array/array.js:203:43)     at [object Object].promise.Promise.notifyAll_ (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/promise.js:552:16)     at [object Object].goog.async.run.processWorkQueue [as _onTimeout] (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/goog/async/run.js:125:21)     at Timer.listOnTimeout [as ontimeout] (timers.js:112:15) From: Task: WebDriver.createSession()     at Function.webdriver.WebDriver.acquireSession_ (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/webdriver.js:155:22)     at Function.webdriver.WebDriver.createSession (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/lib/webdriver/webdriver.js:129:30)     at new Driver (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/selenium-webdriver/firefox/index.js:272:36)     at [object Object].DirectDriverProvider.getNewDriver (/Users/.../node_modules/gulp-protractor/node_modules/protractor/lib/driverProviders/direct.js:75:16)     at [object Object].Runner.createBrowser (/Users/.../node_modules/gulp-protractor/node_modules/protractor/lib/runner.js:180:37)     at /Users/.../node_modules/gulp-protractor/node_modules/protractor/lib/runner.js:257:21     at _fulfilled (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/q/q.js:797:54)     at self.promiseDispatch.done (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/q/q.js:826:30)     at Promise.promise.promiseDispatch (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/q/q.js:759:13)     at /Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/q/q.js:573:44     at flush (/Users/.../node_modules/gulp-protractor/node_modules/protractor/node_modules/q/q.js:108:17)     at process._tickCallback (node.js:442:13)     at Function.Module.runMain (module.js:499:11)     at startup (node.js:119:16)     at node.js:929:3 ```  The latest stable version of Firefox (37.01) works fine. I'm using OS X 10.10.2, protractor 2.0.0 and selenium-webdriver 2.45.1.","closed","D-firefox,","szimek","2015-04-09T07:23:03Z","2015-05-22T18:29:14Z"
"","521","C# Action.MoveToElement(...) throws NullReferenceException","Firefox 37, Chrome latest, latest NuGet package of Selenium (2.45.0)  For some elements i get an exception for Action.MoveToElement(...). Inspecting the IWebElement with the VS debugger reveals, that the element is found and also most of the properties are set - except these ones:  Coordinates  LocationOnScreenOnceScrolledIntoView   They cannot be read by the VS debugger , because their getters throw the NullReferenceException (this may be the root of evil for MoveToElement)  On another page, the method works liek a charm. What may be the problem here?   Thanks and Regards, Jakob","closed","","jakobstrauch","2015-05-05T19:59:52Z","2019-08-21T13:09:48Z"
"","530","isDisplayed returning true for CSS visibility: collapse","Firefox 35 Selenium 2.44.0 Geb 0.10.0  I had a case where I tried to use `isDisplayed()` on an element that was being shown and removed from view by setting CSS `visibility` to `collapse`. However, `isDisplayed()` returned true when the element was set to `visiblity: collapse`.  I've included a HTML sample that illustrates the use of `collapse`.  The test sample comes from my use of Geb, but I assign a WebElement to a variable and use `isDisplayed()` on it, for this report's purpose.   HTML  ```    this is visible       this might be visible      document.getElementById('first').onclick = function() {     var secret = document.getElementById('secret')      if (secret.style.visibility == 'collapse') secret.style.visibility = 'visible';     else secret.style.visibility = 'collapse'; };    ```   Test  ``` // Element is visible def webDriverElement = $('#secret').firstElement() assert webDriverElement.isDisplayed()  $('#first').click()  // Element should not be visible webDriverElement = $('#secret').firstElement() assert webDriverElement.isDisplayed() == false ```  ``` Condition not satisfied:  webDriverElement.isDisplayed() == false |                |             | |                true          false [[[[FirefoxDriver: firefox on WINDOWS (dea1ad94-9a87-48b0-bd5f-c8ebba6407c6)] -> tag name: html]] -> css selector: #secret]      at Test.test(Test.groovy:18)  ```","closed","I-papercut,","sophosis","2015-05-06T19:08:48Z","2019-08-21T13:09:53Z"
"","784","Selenium server 2.46.0. crashreporter opens on firefox start","Firefox - 39.0 Selenium server 2.46.0  When I execute suite from command line I am receiving crashreporter from firefox. Tests executes fine but window with crashreporter remains even after test execution.  Details from crashreporter:  ``` AdapterDeviceID: 0x0166 AdapterDriverVersion: 10.18.10.3308 AdapterSubsysID: 15871043 AdapterVendorID: 0x8086 Add-ons: readystate%40openqa.org:1.0,%7B503A0CD4-EDC8-489b-853B-19E0BAA8F0A4%7D:1.0,%7B538F0036-F358-4f84-A764-89FB437166B4%7D:1.0,%7B972ce4c6-7e08-4474-a285-3208198ce6fd%7D:39.0 AvailablePageFile: 7497654272 AvailablePhysicalMemory: 6689218560 AvailableVirtualMemory: 3992952832 BIOS_Manufacturer: American Megatrends Inc. BlockedDllList:  BreakpadReserveAddress: 47185920 BreakpadReserveSize: 67108864 BuildID: 20150630154324 CrashTime: 1436951377 EMCheckCompatibility: true FramePoisonBase: 00000000f0de0000 FramePoisonSize: 65536 InstallTime: 1436879907 Notes: AdapterVendorID: 0x8086, AdapterDeviceID: 0x0166, AdapterSubsysID: 15871043, AdapterDriverVersion: 10.18.10.3308 Has dual GPUs. GPU #2: AdapterVendorID2: 0x10de, AdapterDeviceID2: 0x0fdf, AdapterSubsysID2: 15871043, AdapterDriverVersion2: 9.18.13.3182D2D? D2D1.1? D2D1.1+ D2D+ DWrite? DWrite+  ProductID: {ec8030f7-c20a-464f-9b0e-13a3a9e97384} ProductName: Firefox ReleaseChannel: release SecondsSinceLastCrash: 181 ShutdownProgress: xpcom-shutdown StartupTime: 1436951376 SystemMemoryUsePercentage: 47 Theme: classic/1.0 Throttleable: 1 TotalPageFile: 14711033856 TotalPhysicalMemory: 12764876800 TotalVirtualMemory: 4294836224 URL:  Vendor: Mozilla Version: 39.0 Winsock_LSP: MSAFD Tcpip [TCP/IP] : 2 : 1 : %SystemRoot%\system32\mswsock.dll   MSAFD Tcpip [UDP/IP] : 2 : 2 :    MSAFD Tcpip [RAW/IP] : 2 : 3 : %SystemRoot%\system32\mswsock.dll   MSAFD Tcpip [TCP/IPv6] : 2 : 1 :    MSAFD Tcpip [UDP/IPv6] : 2 : 2 : %SystemRoot%\system32\mswsock.dll   MSAFD Tcpip [RAW/IPv6] : 2 : 3 :    RSVP TCPv6 Service Provider : 2 : 1 : %SystemRoot%\system32\mswsock.dll   RSVP TCP Service Provider : 2 : 1 :    RSVP UDPv6 Service Provider : 2 : 2 : %SystemRoot%\system32\mswsock.dll   RSVP UDP Service Provider : 2 : 2 :    MSAFD RfComm [Bluetooth] : 2 : 1 : %SystemRoot%\system32\mswsock.dll useragent_locale: pl ```  I've seen your info that it should be fixed in selenium 2.46 but it isn't fixed in server .jar probably.","closed","","pawepaw","2015-07-15T09:11:22Z","2019-08-21T08:09:50Z"
"","299","Fix issue 8254: Extensions not working with RemoteWebDriver in Windows/Linux Grid.","Extensions were incorrectly transferred between Windows client and Linux grid node, because ZipEntry had incorrect name with '\' as separators.  I have signed the CLA.","closed","","tporeba","2014-12-14T21:35:30Z","2015-03-13T23:19:46Z"
"","98","Provide ability to use custom annotations, use FindBy for types","extend FindBy annotation to work with types split Annotations into abstract class and default implemenation in order to easily provide custom annotations extend DefaultElementLocator and AjaxElementLocator constructors to work with provided annotations use ""expected"" junit annotations for tests expecting exceptions","closed","","artkoshelev","2013-07-23T13:41:10Z","2014-10-13T11:44:21Z"
"","579","ExpectedConditions class file for dotnet.","ExpectedConditions  class file additions. The java version of this file had many more useful conditions added vs the c# version.  This commit does not get 100% port of the java version, but it get's it very close.  I have signed the CLA.","closed","","darrincherry","2015-05-27T17:56:08Z","2015-06-02T15:06:56Z"
"","726","Log out responses received from RemoteWebDriver.","Expanded the response from a RemoteWebDriver call to include the response, as returned by `.getValue()`.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/726)","closed","C-java,","DylanLacey","2015-07-02T08:38:09Z","2020-04-02T21:07:50Z"
"","539","Executing Javascript in Safari 8 creates new frame","Executing any Javascript using SafariDriver on Safari 8 will create a new frame. The frame is not visible, and is a reference to the current window.  Reproduced with: Selenium 2.45 Safari 8.0.3 Mac 10.10.2  The following code will succeed, even though www.example.com has no frames.  ``` import org.junit.*; import org.openqa.selenium.safari.*;  public class SafariTest {     @Test     public void test() throws Throwable {         SafariDriver driver = new SafariDriver();         driver.get(""http://www.example.com"");          // comment out this line to cause test to fail         driver.executeScript(""return 0;"");           // this step should fail because www.example.com has no frames         driver.switchTo().frame(0);          // as is the test will pass, which is unexpected behavior     } } ```  Debugging from within Safari shows that window.frames.length == 1. window.frames[0] seems to be a copy of the parent window.  This causes issues when attempting to recursively iterate frames. If any Javascript is executed after switching to a child frame and before checking for more frames, iteration will continue forever as WebDriver creates new frames on each iteration.","closed","","para-selenium-bugs","2015-05-13T01:40:31Z","2019-08-21T13:09:49Z"
"","57","Enable and fix logging tests for chromedriver2.","Exclude old chromedriver with TestUtilities.isOldChromedriver.","closed","","klepikov","2013-04-26T15:50:20Z","2013-05-22T17:39:47Z"
"","379","Clicking Invisible option elements should not succeed (from google code #8563)","example html:  ```  option0 Disabled option Option hidden Option display none  ```  options = driver.find_elements_by_tag_name(""option"")  options[0].click();","closed","E-less easy,","lukeis","2015-03-27T04:37:44Z","2019-08-16T20:09:41Z"
"","718","WebDriverWait not working correctly when implicitly_wait is set","Example from python docs:  driver = webdriver.Firefox() driver.get(""http://somedomain/url_that_delays_loading"") try:     element = WebDriverWait(driver, 10).until(         EC.presence_of_element_located((By.ID, ""myDynamicElement""))     ) finally:     driver.quit()  and it's working, but dirver.implicitly_wait is set EC methods waits == driver.implicitly_wait  so: driver.implicitly_wait(60) WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, ""myDynamicElement""))  will return TimeoutException after 60 seconds.","closed","","ghost","2015-06-27T18:52:15Z","2019-08-21T10:09:36Z"
"","410","IE browser jumps when capturing image","Evironment: Windows 7, IE11, selenium-server-standalone-2.45.0.jar, IEDriverServer.exe(for selenium2.45)  When IE is maximized, if we call org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(), the browser will jump up and down. After that the browser cannot be restored to the original location.","closed","","leiwang008","2015-04-03T08:13:06Z","2019-08-21T15:09:46Z"
"","558","Firefox crash on startup when using rails selenium-webdriver","Everytime firefox opens from selenium driver i get a crash with the following dump  ``` Process:               firefox-bin [20919] Path:                  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/firefox-bin Identifier:            org.mozilla.firefox Version:               38.0.1 (3815.5.13) Code Type:             X86-64 (Native) Parent Process:        ruby [20911] Responsible:           iTerm [300] User ID:               501  Date/Time:             2015-05-20 22:26:31.311 -0500 OS Version:            Mac OS X 10.10.1 (14B25) Report Version:        11 Anonymous UUID:        CB55BB3C-BC59-D75C-E836-C1D07CBBCF55  Sleep/Wake UUID:       357B2D85-E358-41D7-ABB7-2D1687403819  Time Awake Since Boot: 73000 seconds Time Since Wake:       3400 seconds  Crashed Thread:        0  Dispatch queue: com.apple.main-thread  Exception Type:        EXC_BAD_ACCESS (SIGSEGV) Exception Codes:       KERN_INVALID_ADDRESS at 0x0000000000000000  VM Regions Near 0: -->      __TEXT                 0000000100000000-0000000100003000 [   12K] r-x/rwx SM=COW  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/firefox-bin  Thread 0 Crashed:: Dispatch queue: com.apple.main-thread 0   XUL                             0x00000001015e0666 DumpCompleteHeap + 186582 1   XUL                             0x0000000101134a2e JS::CompileOptions::introductionScript() const + 294318 2   XUL                             0x0000000101135502 JS::CompileOptions::introductionScript() const + 297090 3   XUL                             0x0000000101135499 JS::CompileOptions::introductionScript() const + 296985 4   XUL                             0x00000001011317cf JS::CompileOptions::introductionScript() const + 281423 5   XUL                             0x00000001011d3c5a JS::CompileOptions::introductionScript() const + 946138 6   XUL                             0x00000001011d3979 JS::CompileOptions::introductionScript() const + 945401 7   XUL                             0x00000001011d7d31 JS::CompileOptions::introductionScript() const + 962737 8   XUL                             0x000000010108530a NS_NewLocalFileWithCFURL + 103498 9   XUL                             0x0000000101086ce2 XRE_AddJarManifestLocation + 1634 10  XUL                             0x00000001010aae47 nsXPTCStubBase::Stub249() + 78599 11  XUL                             0x00000001010852df NS_NewLocalFileWithCFURL + 103455 12  XUL                             0x00000001010af00a NS_ShutdownXPCOM + 714 13  XUL                             0x0000000102eeb9e1 XRE_GetProcessType + 5425 14  XUL                             0x0000000102ef11d8 XRE_InitCommandLine + 16232 15  XUL                             0x0000000102ef13a0 XRE_main + 240 16  firefox-bin                     0x00000001000015f8 0x100000000 + 5624 17  firefox-bin                     0x0000000100000ba4 start + 52  Thread 1:: Dispatch queue: com.apple.libdispatch-manager 0   libsystem_kernel.dylib          0x00007fff901b322e kevent64 + 10 1   libdispatch.dylib               0x00007fff8fb4aa6a _dispatch_mgr_thread + 52  Thread 2:: Gecko_IOThread 0   libsystem_kernel.dylib          0x00007fff901b3216 kevent + 10  Thread 3: 0   libsystem_kernel.dylib          0x00007fff901b2946 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff90a354a1 start_wqthread + 13  Thread 4: 0   libsystem_kernel.dylib          0x00007fff901b2946 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff90a354a1 start_wqthread + 13  Thread 5: 0   libsystem_kernel.dylib          0x00007fff901b2946 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff90a354a1 start_wqthread + 13  Thread 6: 0   libsystem_kernel.dylib          0x00007fff901b2946 __workq_kernreturn + 10 1   libsystem_pthread.dylib         0x00007fff90a354a1 start_wqthread + 13  Thread 7:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 8:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 9:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 10:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 11:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 12:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 13:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 14:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 15:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 16:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 17:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 18:: Analysis Helper 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x000000010353be9f js::ProtoKeyToClass(JSProtoKey) + 16383 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 19: 0   libsystem_kernel.dylib          0x00007fff901ad52e mach_msg_trap + 10 1   libsystem_kernel.dylib          0x00007fff901ac69f mach_msg + 55 2   XUL                             0x0000000103488a00 JS::PerfMeasurement::canMeasureSomething() + 58432 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 20:: JS Watchdog 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10  Thread 21:: Hang Monitor 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10 1   libnss3.dylib                   0x00000001006004a7 PR_WaitCondVar + 103 2   XUL                             0x0000000101089921 XRE_AddJarManifestLocation + 12961 3   libnss3.dylib                   0x0000000100602778 0x100400000 + 2107256 4   libsystem_pthread.dylib         0x00007fff90a372fc _pthread_body + 131 5   libsystem_pthread.dylib         0x00007fff90a37279 _pthread_start + 176 6   libsystem_pthread.dylib         0x00007fff90a354b1 thread_start + 13  Thread 22:: Shutdow~minator 0   libsystem_kernel.dylib          0x00007fff901b2132 __psynch_cvwait + 10  Thread 0 crashed with X86 Thread State (64-bit):   rax: 0x0000000000000000  rbx: 0x000000010f6385c0  rcx: 0x0000000000000000  rdx: 0x000000010da53ba0   rdi: 0x00000e0000000f03  rsi: 0x00000f0000000f00  rbp: 0x00000001068674c0  rsp: 0x00007fff5fbfe570    r8: 0x00007fff5fbfe520   r9: 0x000000000000000e  r10: 0x0000000000000003  r11: 0x000000010de00fd8   r12: 0x0000000000000000  r13: 0x000000010fedfc00  r14: 0x0000000000000000  r15: 0x00000001068522c0   rip: 0x00000001015e0666  rfl: 0x0000000000010202  cr2: 0x0000000000000000  Logical CPU:     4 Error Code:      0x00000004 Trap Number:     14   Binary Images:        0x100000000 -        0x100002fff +firefox-bin (???)  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/firefox-bin        0x100008000 -        0x10001fff7 +libmozglue.dylib (1)  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/libmozglue.dylib        0x100088000 -        0x100088fff +libmozalloc.dylib (1)  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/libmozalloc.dylib        0x100400000 -        0x10066ffff +libnss3.dylib (1)  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/libnss3.dylib        0x101000000 -        0x104feafa7 +XUL (1)  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/XUL        0x1057f1000 -        0x1057f8fff +libbrowsercomps.dylib (???)  /opt/homebrew-cask/*/Firefox.app/Contents/Resources/browser/components/libbrowsercomps.dylib        0x1095ed000 -        0x1095f0fff  com.apple.FileProvider (1.0 - 1)  /System/Library/PrivateFrameworks/FileProvider.framework/FileProvider        0x109ec7000 -        0x109ee2ff3  com.apple.security.csparser (3.0 - 57031.1.35)  /System/Library/Frameworks/Security.framework/PlugIns/csparser.bundle/Contents/MacOS/csparser        0x10d3db000 -        0x10d3e1fff +net.culater.SIMBL (0.10.10 - 0.10.10)  /Users/USER/Library/ScriptingAdditions/EasySIMBL.osax/Contents/MacOS/EasySIMBL        0x10db00000 -        0x10db64ff7 +libfreebl3.dylib (1)  /opt/homebrew-cask/*/Firefox.app/Contents/MacOS/libfreebl3.dylib        0x10dc6b000 -        0x10dc6eff7 +net.culater.SIMBL.osax (0.9.9 - 0.9.9)  /Library/ScriptingAdditions/SIMBL.osax/Contents/MacOS/SIMBL        0x10df10000 -        0x10df2fff7 +net.infinite-labs.Afloat (2.4 - 2.4)  /Users/USER/Library/Application Support/SIMBL/*/Afloat.bundle/Contents/MacOS/Afloat     0x7fff6b2db000 -     0x7fff6b311837  dyld (353.2.1)  /usr/lib/dyld     0x7fff894ef000 -     0x7fff894f1ffb  libCGXType.A.dylib (772)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib     0x7fff894f2000 -     0x7fff894faff7  com.apple.icloud.FindMyDevice (1.0 - 1)  /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice     0x7fff894fb000 -     0x7fff89528fff  com.apple.CoreVideo (1.8 - 145.1)  /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo     0x7fff89529000 -     0x7fff8954cff7  com.apple.framework.familycontrols (4.1 - 410)  /System/Library/PrivateFrameworks/FamilyControls.framework/Versions/A/FamilyControls     0x7fff8954d000 -     0x7fff8958dff7  libGLImage.dylib (11.0.7)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib     0x7fff895a8000 -     0x7fff895e3fff  com.apple.Symbolication (1.4 - 56045)  /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication     0x7fff895e4000 -     0x7fff895efff7  com.apple.CommerceCore (1.0 - 376.0.5)  /System/Library/PrivateFrameworks/CommerceKit.framework/Versions/A/Frameworks/CommerceCore.framework/Versions/A/CommerceCore     0x7fff895f0000 -     0x7fff895f0fff  com.apple.CoreServices (62 - 62)  /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices     0x7fff89706000 -     0x7fff8973efff  com.apple.RemoteViewServices (2.0 - 99)  /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices     0x7fff8973f000 -     0x7fff898aaff7  com.apple.audio.toolbox.AudioToolbox (1.12 - 1.12)  /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox     0x7fff898ab000 -     0x7fff89940ff7  com.apple.ColorSync (4.9.0 - 4.9.0)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync     0x7fff89956000 -     0x7fff89959fff  com.apple.xpc.ServiceManagement (1.0 - 1)  /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement     0x7fff8995a000 -     0x7fff89a19fff  com.apple.backup.framework (1.6.1 - 1.6.1)  /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup     0x7fff89a1a000 -     0x7fff89a34ff3  com.apple.Ubiquity (1.3 - 313)  /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity     0x7fff89a35000 -     0x7fff8a576fff  com.apple.AppKit (6.9 - 1343.16)  /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit     0x7fff8a577000 -     0x7fff8a5b7fff  com.apple.CloudDocs (1.0 - 280.1.2)  /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs     0x7fff8a5b8000 -     0x7fff8a8e6ff7  com.apple.Foundation (6.9 - 1151.16)  /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation     0x7fff8a8e7000 -     0x7fff8a8eeff7  com.apple.phonenumbers (1.1.1 - 105)  /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers     0x7fff8a8ef000 -     0x7fff8a943fff  libc++.1.dylib (120)  /usr/lib/libc++.1.dylib     0x7fff8a944000 -     0x7fff8a944fff  com.apple.quartzframework (1.5 - 1.5)  /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz     0x7fff8a945000 -     0x7fff8a946ff7  com.apple.AddressBook.ContactsData (9.0 - 1499)  /System/Library/PrivateFrameworks/ContactsData.framework/Versions/A/ContactsData     0x7fff8a96a000 -     0x7fff8a98afff  com.apple.IconServices (47.1 - 47.1)  /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices     0x7fff8a98b000 -     0x7fff8a991fff  libsystem_trace.dylib (72.1.3)  /usr/lib/system/libsystem_trace.dylib     0x7fff8a992000 -     0x7fff8adc2fff  com.apple.vision.FaceCore (3.1.6 - 3.1.6)  /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore     0x7fff8adc3000 -     0x7fff8adc5ff7  libsystem_coreservices.dylib (9)  /usr/lib/system/libsystem_coreservices.dylib     0x7fff8adc6000 -     0x7fff8ae0cffb  libFontRegistry.dylib (134)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib     0x7fff8ae0d000 -     0x7fff8ae14fff  com.apple.NetFS (6.0 - 4.0)  /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS     0x7fff8ae15000 -     0x7fff8aec4fe7  libvMisc.dylib (512)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib     0x7fff8aec5000 -     0x7fff8aec7ff7  libquarantine.dylib (76)  /usr/lib/system/libquarantine.dylib     0x7fff8aec8000 -     0x7fff8af16fff  libcurl.4.dylib (83.1.2)  /usr/lib/libcurl.4.dylib     0x7fff8af1d000 -     0x7fff8b1c9fff  com.apple.GeoServices (1.0 - 982.4.10)  /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices     0x7fff8b207000 -     0x7fff8b316ffb  com.apple.desktopservices (1.9 - 1.9)  /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv     0x7fff8b317000 -     0x7fff8bb50ff3  com.apple.CoreGraphics (1.600.0 - 772)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics     0x7fff8be06000 -     0x7fff8be2fffb  libxslt.1.dylib (13)  /usr/lib/libxslt.1.dylib     0x7fff8be3f000 -     0x7fff8be77ffb  libsystem_network.dylib (411)  /usr/lib/system/libsystem_network.dylib     0x7fff8be78000 -     0x7fff8be91ff7  com.apple.CFOpenDirectory (10.10 - 187)  /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory     0x7fff8be92000 -     0x7fff8bfc2fff  com.apple.UIFoundation (1.0 - 1)  /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation     0x7fff8c004000 -     0x7fff8c01fff7  libCRFSuite.dylib (34)  /usr/lib/libCRFSuite.dylib     0x7fff8c03c000 -     0x7fff8c05aff7  com.apple.addressbook.vCard (9.0 - 1499)  /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard     0x7fff8c05b000 -     0x7fff8c05dff7  com.apple.SecCodeWrapper (4.0 - 238)  /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper     0x7fff8c0f7000 -     0x7fff8c0fdff7  libsystem_networkextension.dylib (167.1.10)  /usr/lib/system/libsystem_networkextension.dylib     0x7fff8c0fe000 -     0x7fff8c10fff7  libz.1.dylib (55)  /usr/lib/libz.1.dylib     0x7fff8c110000 -     0x7fff8c13dfff  com.apple.Accounts (113 - 113)  /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts     0x7fff8c13e000 -     0x7fff8c142fff  libsystem_stats.dylib (163.1.4)  /usr/lib/system/libsystem_stats.dylib     0x7fff8c1c2000 -     0x7fff8c211ff7  libstdc++.6.dylib (104.1)  /usr/lib/libstdc++.6.dylib     0x7fff8c212000 -     0x7fff8c286ff3  com.apple.securityfoundation (6.0 - 55126)  /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation     0x7fff8c287000 -     0x7fff8c28ffff  libsystem_dnssd.dylib (561.1.1)  /usr/lib/system/libsystem_dnssd.dylib     0x7fff8c8f8000 -     0x7fff8c949ff7  com.apple.AppleVAFramework (5.0.31 - 5.0.31)  /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA     0x7fff8c94a000 -     0x7fff8c9cbff3  com.apple.CoreUtils (1.0 - 101.1)  /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils     0x7fff8c9cc000 -     0x7fff8c9cdffb  libremovefile.dylib (35)  /usr/lib/system/libremovefile.dylib     0x7fff8d306000 -     0x7fff8d31aff7  com.apple.ProtectedCloudStorage (1.0 - 1)  /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage     0x7fff8d362000 -     0x7fff8d3a3fff  libGLU.dylib (11.0.7)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib     0x7fff8d3a4000 -     0x7fff8d3acfff  libsystem_platform.dylib (63)  /usr/lib/system/libsystem_platform.dylib     0x7fff8d3ad000 -     0x7fff8d3b6ff7  libsystem_notify.dylib (133.1.1)  /usr/lib/system/libsystem_notify.dylib     0x7fff8d3c4000 -     0x7fff8d3cffff  libcommonCrypto.dylib (60061)  /usr/lib/system/libcommonCrypto.dylib     0x7fff8dc59000 -     0x7fff8dc59ff7  libunc.dylib (29)  /usr/lib/system/libunc.dylib     0x7fff8dc5a000 -     0x7fff8dc6ffff  com.apple.ToneKit (1.0 - 1)  /System/Library/PrivateFrameworks/ToneKit.framework/Versions/A/ToneKit     0x7fff8dd36000 -     0x7fff8de58ff7  com.apple.LaunchServices (644.12 - 644.12)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices     0x7fff8de9f000 -     0x7fff8dea1fff  com.apple.CoreDuetDebugLogging (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging     0x7fff8df96000 -     0x7fff8e298fff  com.apple.HIToolbox (2.1.1 - 756)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox     0x7fff8e47b000 -     0x7fff8e660267  libobjc.A.dylib (646)  /usr/lib/libobjc.A.dylib     0x7fff8e661000 -     0x7fff8e9f7fff  com.apple.CoreFoundation (6.9 - 1151.16)  /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation     0x7fff8e9fa000 -     0x7fff8e9fcff7  libutil.dylib (38)  /usr/lib/libutil.dylib     0x7fff8e9fd000 -     0x7fff8eee9fff  com.apple.MediaToolbox (1.0 - 1562.19)  /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox     0x7fff8eeea000 -     0x7fff8ef16fff  libsandbox.1.dylib (358.1.1)  /usr/lib/libsandbox.1.dylib     0x7fff8f00e000 -     0x7fff8f09cff7  com.apple.CorePDF (4.0 - 4)  /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF     0x7fff8f09d000 -     0x7fff8f0a5ffb  libcopyfile.dylib (118.1.2)  /usr/lib/system/libcopyfile.dylib     0x7fff8f127000 -     0x7fff8f129fff  com.apple.ExceptionHandling (1.5 - 10)  /System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling     0x7fff8f1d3000 -     0x7fff8f331ff3  com.apple.avfoundation (2.0 - 889.10)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation     0x7fff8f332000 -     0x7fff8f340fff  com.apple.AddressBook.ContactsFoundation (9.0 - 1499)  /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation     0x7fff8f341000 -     0x7fff8f435ff7  libFontParser.dylib (134)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib     0x7fff8f436000 -     0x7fff8f491fff  com.apple.QuickLookFramework (5.0 - 675)  /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook     0x7fff8f492000 -     0x7fff8f6faffb  com.apple.security (7.0 - 57031.1.35)  /System/Library/Frameworks/Security.framework/Versions/A/Security     0x7fff8f6fb000 -     0x7fff8f6fffff  com.apple.CommonPanels (1.2.6 - 96)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels     0x7fff8f700000 -     0x7fff8f767ff7  com.apple.datadetectorscore (6.0 - 396.1)  /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore     0x7fff8f768000 -     0x7fff8f76cff7  libGIF.dylib (1231)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib     0x7fff8f77a000 -     0x7fff8f803fff  com.apple.CoreSymbolication (3.1 - 56072)  /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication     0x7fff8f804000 -     0x7fff8f808fff  libcache.dylib (69)  /usr/lib/system/libcache.dylib     0x7fff8f809000 -     0x7fff8f82afff  com.apple.framework.Apple80211 (10.0.1 - 1001.57.4)  /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211     0x7fff8f82b000 -     0x7fff8f93dff7  libvDSP.dylib (512)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib     0x7fff8f93e000 -     0x7fff8f953ff7  com.apple.AppContainer (4.0 - 238)  /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer     0x7fff8f961000 -     0x7fff8f985ff7  com.apple.quartzfilters (1.10.0 - 1.10.0)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters     0x7fff8fa62000 -     0x7fff8fb45fff  libcrypto.0.9.8.dylib (52)  /usr/lib/libcrypto.0.9.8.dylib     0x7fff8fb46000 -     0x7fff8fb70ff7  libdispatch.dylib (442.1.4)  /usr/lib/system/libdispatch.dylib     0x7fff8fdbd000 -     0x7fff8fdc0ff7  com.apple.Mangrove (1.0 - 1)  /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove     0x7fff8fdf0000 -     0x7fff8fe81ff7  libCoreStorage.dylib (471)  /usr/lib/libCoreStorage.dylib     0x7fff8fea1000 -     0x7fff8fea3fff  libsystem_configuration.dylib (699.1.5)  /usr/lib/system/libsystem_configuration.dylib     0x7fff8fea4000 -     0x7fff8fef3ff7  com.apple.opencl (2.4.2 - 2.4.2)  /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL     0x7fff8fef4000 -     0x7fff8ff06ff7  com.apple.CoreDuetDaemonProtocol (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol     0x7fff8ff07000 -     0x7fff8ff61ff7  com.apple.LanguageModeling (1.0 - 1)  /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling     0x7fff8ff62000 -     0x7fff900a8fef  libsqlite3.dylib (168)  /usr/lib/libsqlite3.dylib     0x7fff900eb000 -     0x7fff90126fff  com.apple.QD (301 - 301)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD     0x7fff9019c000 -     0x7fff901b9fff  libsystem_kernel.dylib (2782.1.97)  /usr/lib/system/libsystem_kernel.dylib     0x7fff901c7000 -     0x7fff901ccff7  libunwind.dylib (35.3)  /usr/lib/system/libunwind.dylib     0x7fff90471000 -     0x7fff9047cfff  libGL.dylib (11.0.7)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib     0x7fff9047d000 -     0x7fff904caff3  com.apple.print.framework.PrintCore (10.0 - 451)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore     0x7fff90687000 -     0x7fff90698fff  libcmph.dylib (1)  /usr/lib/libcmph.dylib     0x7fff9069c000 -     0x7fff906a0fff  libspindump.dylib (182)  /usr/lib/libspindump.dylib     0x7fff906be000 -     0x7fff906e3fff  libPng.dylib (1231)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib     0x7fff906ed000 -     0x7fff906f3fff  com.apple.speech.recognition.framework (5.0.9 - 5.0.9)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition     0x7fff90701000 -     0x7fff9070cff7  com.apple.DirectoryService.Framework (10.10 - 187)  /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService     0x7fff9070d000 -     0x7fff90715fff  libMatch.1.dylib (24)  /usr/lib/libMatch.1.dylib     0x7fff90716000 -     0x7fff90730ff7  libextension.dylib (55.1)  /usr/lib/libextension.dylib     0x7fff90731000 -     0x7fff90733ff7  libsystem_sandbox.dylib (358.1.1)  /usr/lib/system/libsystem_sandbox.dylib     0x7fff90734000 -     0x7fff90736fff  com.apple.loginsupport (1.0 - 1)  /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport     0x7fff90845000 -     0x7fff90891fff  com.apple.corelocation (1486.17 - 1615.21)  /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation     0x7fff90892000 -     0x7fff908a2ff7  libbsm.0.dylib (34)  /usr/lib/libbsm.0.dylib     0x7fff908b8000 -     0x7fff908c5ff7  libbz2.1.0.dylib (36)  /usr/lib/libbz2.1.0.dylib     0x7fff908f0000 -     0x7fff908f1fff  liblangid.dylib (117)  /usr/lib/liblangid.dylib     0x7fff908f2000 -     0x7fff908feff7  com.apple.OpenDirectory (10.10 - 187)  /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory     0x7fff908ff000 -     0x7fff90a26fff  com.apple.coreui (2.1 - 305)  /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI     0x7fff90a34000 -     0x7fff90a3dfff  libsystem_pthread.dylib (105.1.4)  /usr/lib/system/libsystem_pthread.dylib     0x7fff90a3e000 -     0x7fff90a41fff  com.apple.help (1.3.3 - 46)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help     0x7fff90a42000 -     0x7fff90a48ff7  com.apple.XPCService (2.0 - 1)  /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService     0x7fff90a49000 -     0x7fff90a65ff7  libsystem_malloc.dylib (53.1.1)  /usr/lib/system/libsystem_malloc.dylib     0x7fff90a66000 -     0x7fff90a68fff  libRadiance.dylib (1231)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib     0x7fff90a69000 -     0x7fff90b5bfff  libxml2.2.dylib (26)  /usr/lib/libxml2.2.dylib     0x7fff90b8c000 -     0x7fff90b93fff  com.apple.network.statistics.framework (1.2 - 1)  /System/Library/PrivateFrameworks/NetworkStatistics.framework/Versions/A/NetworkStatistics     0x7fff90be4000 -     0x7fff90c35ff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0)  /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio     0x7fff90c36000 -     0x7fff90c37fff  libsystem_secinit.dylib (18)  /usr/lib/system/libsystem_secinit.dylib     0x7fff90c38000 -     0x7fff90ca7fff  com.apple.SearchKit (1.4.0 - 1.4.0)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit     0x7fff90d0e000 -     0x7fff90d5bff3  com.apple.CoreMediaIO (601.0 - 4749)  /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO     0x7fff90d5c000 -     0x7fff90db7fef  libTIFF.dylib (1231)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib     0x7fff90db8000 -     0x7fff90e01ff3  com.apple.HIServices (1.22 - 519)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices     0x7fff90e02000 -     0x7fff90e3cffb  com.apple.DebugSymbols (115 - 115)  /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols     0x7fff90e3d000 -     0x7fff90edbfff  com.apple.Metadata (10.7.0 - 916.1)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata     0x7fff91175000 -     0x7fff91194fff  com.apple.CoreDuet (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet     0x7fff91195000 -     0x7fff911a8ff7  com.apple.CoreBluetooth (1.0 - 1)  /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth     0x7fff911a9000 -     0x7fff911bbff7  com.apple.ImageCapture (9.0 - 9.0)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture     0x7fff911bc000 -     0x7fff912f6ff7  com.apple.ImageIO.framework (3.3.0 - 1038)  /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO     0x7fff912f7000 -     0x7fff912f9fff  com.apple.EFILogin (2.0 - 2)  /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin     0x7fff9137e000 -     0x7fff9140ffff  com.apple.cloudkit.CloudKit (259.2.3 - 259.2.3)  /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit     0x7fff91410000 -     0x7fff91411fff  com.apple.TrustEvaluationAgent (2.0 - 25)  /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent     0x7fff91412000 -     0x7fff9141fff7  libxar.1.dylib (254)  /usr/lib/libxar.1.dylib     0x7fff91486000 -     0x7fff9148afff  libpam.2.dylib (20)  /usr/lib/libpam.2.dylib     0x7fff9148b000 -     0x7fff914aefff  com.apple.Sharing (328.3 - 328.3)  /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing     0x7fff914b0000 -     0x7fff914f6ff7  libauto.dylib (186)  /usr/lib/libauto.dylib     0x7fff914f7000 -     0x7fff91771fff  com.apple.CoreData (110 - 526)  /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData     0x7fff91772000 -     0x7fff91776fff  libCoreVMClient.dylib (79)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib     0x7fff91777000 -     0x7fff91ca0ff7  com.apple.QuartzComposer (5.1 - 325)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer     0x7fff91ca1000 -     0x7fff91cb7ff7  libsystem_asl.dylib (267)  /usr/lib/system/libsystem_asl.dylib     0x7fff91cb8000 -     0x7fff91cbcfff  com.apple.LoginUICore (3.0 - 3.0)  /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Frameworks/LoginUICore.framework/Versions/A/LoginUICore     0x7fff91cbd000 -     0x7fff91f8cff3  com.apple.CoreImage (10.0.33)  /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage     0x7fff91fa7000 -     0x7fff92099ff7  libiconv.2.dylib (42)  /usr/lib/libiconv.2.dylib     0x7fff9212a000 -     0x7fff92135ff7  com.apple.AppSandbox (4.0 - 238)  /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox     0x7fff92136000 -     0x7fff9213effb  com.apple.CoreServices.FSEvents (1210 - 1210)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents     0x7fff9214c000 -     0x7fff9215aff7  com.apple.ToneLibrary (1.0 - 1)  /System/Library/PrivateFrameworks/ToneLibrary.framework/Versions/A/ToneLibrary     0x7fff9215b000 -     0x7fff9218afff  com.apple.securityinterface (10.0 - 55058)  /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface     0x7fff9218b000 -     0x7fff9218bfff  com.apple.Cocoa (6.8 - 21)  /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa     0x7fff9218c000 -     0x7fff92199fff  com.apple.ProtocolBuffer (1 - 225.1)  /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer     0x7fff9219a000 -     0x7fff9219dff7  libdyld.dylib (353.2.1)  /usr/lib/system/libdyld.dylib     0x7fff9219e000 -     0x7fff921c6fff  libxpc.dylib (559.1.22)  /usr/lib/system/libxpc.dylib     0x7fff921c7000 -     0x7fff921c8fff  libSystem.B.dylib (1213)  /usr/lib/libSystem.B.dylib     0x7fff92311000 -     0x7fff9234afff  com.apple.AirPlaySupport (2.0 - 215.10)  /System/Library/PrivateFrameworks/AirPlaySupport.framework/Versions/A/AirPlaySupport     0x7fff92355000 -     0x7fff92388ff7  com.apple.MediaKit (16 - 757)  /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit     0x7fff92443000 -     0x7fff9255bffb  com.apple.CoreText (352.0 - 454.1)  /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText     0x7fff925cf000 -     0x7fff925d1ff7  com.apple.securityhi (9.0 - 55006)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI     0x7fff92605000 -     0x7fff9261cff7  libLinearAlgebra.dylib (1128)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib     0x7fff92626000 -     0x7fff926e1ff7  com.apple.DiscRecording (9.0 - 9000.4.1)  /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording     0x7fff926e2000 -     0x7fff926fefff  com.apple.GenerationalStorage (2.0 - 209.11)  /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage     0x7fff926ff000 -     0x7fff92a32ff7  libmecabra.dylib (666.1)  /usr/lib/libmecabra.dylib     0x7fff92a6a000 -     0x7fff92ab6ff7  libcups.2.dylib (408)  /usr/lib/libcups.2.dylib     0x7fff92ac4000 -     0x7fff92aeaff7  com.apple.ChunkingLibrary (2.1 - 163.1)  /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary     0x7fff92b6a000 -     0x7fff92b71fff  libCGCMS.A.dylib (772)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGCMS.A.dylib     0x7fff92b72000 -     0x7fff92b96fef  libJPEG.dylib (1231)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib     0x7fff92bb0000 -     0x7fff92bb1ff7  libodfde.dylib (22)  /usr/lib/libodfde.dylib     0x7fff92bb2000 -     0x7fff92bccff7  com.apple.AppleVPAFramework (1.0.30 - 1.0.30)  /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA     0x7fff92bcd000 -     0x7fff92bcdfff  com.apple.ApplicationServices (48 - 48)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices     0x7fff92bce000 -     0x7fff92bcffff  libDiagnosticMessagesClient.dylib (100)  /usr/lib/libDiagnosticMessagesClient.dylib     0x7fff92be9000 -     0x7fff92bf8fff  com.apple.LangAnalysis (1.7.0 - 1.7.0)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis     0x7fff92bf9000 -     0x7fff92c7bfff  com.apple.PerformanceAnalysis (1.0 - 1)  /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis     0x7fff92c7c000 -     0x7fff92c95fff  com.apple.openscripting (1.4 - 162)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting     0x7fff92c96000 -     0x7fff93001fff  com.apple.VideoToolbox (1.0 - 1562.19)  /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox     0x7fff93002000 -     0x7fff9302dff3  libarchive.2.dylib (30)  /usr/lib/libarchive.2.dylib     0x7fff9302e000 -     0x7fff9302efff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib     0x7fff9302f000 -     0x7fff9302fff7  liblaunch.dylib (559.1.22)  /usr/lib/system/liblaunch.dylib     0x7fff93030000 -     0x7fff930a8ff7  com.apple.SystemConfiguration (1.14 - 1.14)  /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration     0x7fff930ce000 -     0x7fff93135ff7  com.apple.framework.CoreWiFi (3.0 - 300.4)  /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi     0x7fff93136000 -     0x7fff933a0ff7  com.apple.imageKit (2.6 - 838)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit     0x7fff933a1000 -     0x7fff9340fffb  com.apple.Heimdal (4.0 - 2.0)  /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal     0x7fff9341f000 -     0x7fff93447ffb  libRIP.A.dylib (772)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib     0x7fff934c0000 -     0x7fff9353dfff  com.apple.CoreServices.OSServices (640.3 - 640.3)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices     0x7fff9353e000 -     0x7fff93543ff7  com.apple.MediaAccessibility (1.0 - 61)  /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility     0x7fff93544000 -     0x7fff93747ff3  com.apple.CFNetwork (720.1.1 - 720.1.1)  /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork     0x7fff93748000 -     0x7fff93751fff  libGFXShared.dylib (11.0.7)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib     0x7fff9378c000 -     0x7fff937d9fff  com.apple.ImageCaptureCore (6.0 - 6.0)  /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore     0x7fff937da000 -     0x7fff93870ffb  com.apple.CoreMedia (1.0 - 1562.19)  /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia     0x7fff93871000 -     0x7fff93871fff  com.apple.Accelerate (1.10 - Accelerate 1.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate     0x7fff93872000 -     0x7fff938a2ffb  com.apple.GSS (4.0 - 2.0)  /System/Library/Frameworks/GSS.framework/Versions/A/GSS     0x7fff93953000 -     0x7fff9397efff  libc++abi.dylib (125)  /usr/lib/libc++abi.dylib     0x7fff9397f000 -     0x7fff93a5cff7  com.apple.QuickLookUIFramework (5.0 - 675)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI     0x7fff93a5d000 -     0x7fff93a5dfff  com.apple.audio.units.AudioUnit (1.12 - 1.12)  /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit     0x7fff93a5e000 -     0x7fff93a72ff7  com.apple.MultitouchSupport.framework (260.30 - 260.30)  /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport     0x7fff943b9000 -     0x7fff943c3ff7  com.apple.NetAuth (5.0 - 5.0)  /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth     0x7fff943e8000 -     0x7fff943eafff  libCVMSPluginSupport.dylib (11.0.7)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib     0x7fff9447d000 -     0x7fff94482fff  com.apple.DiskArbitration (2.6 - 2.6)  /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration     0x7fff94483000 -     0x7fff9449eff7  com.apple.aps.framework (4.0 - 4.0)  /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService     0x7fff9449f000 -     0x7fff944cffff  libsystem_m.dylib (3086.1)  /usr/lib/system/libsystem_m.dylib     0x7fff944d7000 -     0x7fff94576df7  com.apple.AppleJPEG (1.0 - 1)  /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG     0x7fff9458c000 -     0x7fff94591ff7  libmacho.dylib (862)  /usr/lib/system/libmacho.dylib     0x7fff94592000 -     0x7fff945acff7  com.apple.Kerberos (3.0 - 1)  /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos     0x7fff945ad000 -     0x7fff945b8ff7  com.apple.speech.synthesis.framework (5.2.6 - 5.2.6)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis     0x7fff945d5000 -     0x7fff945d5fff  libOpenScriptingUtil.dylib (162)  /usr/lib/libOpenScriptingUtil.dylib     0x7fff945d6000 -     0x7fff946acff3  com.apple.DiskImagesFramework (10.10 - 389.1)  /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages     0x7fff946ad000 -     0x7fff9479dfef  libJP2.dylib (1231)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib     0x7fff9479e000 -     0x7fff947cafff  com.apple.framework.SystemAdministration (1.0 - 1.0)  /System/Library/PrivateFrameworks/SystemAdministration.framework/Versions/A/SystemAdministration     0x7fff94888000 -     0x7fff94a6dff3  libicucore.A.dylib (531.30)  /usr/lib/libicucore.A.dylib     0x7fff94a6e000 -     0x7fff94bfcfff  libBLAS.dylib (1128)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib     0x7fff94bfd000 -     0x7fff94c73fe7  libcorecrypto.dylib (233.1.2)  /usr/lib/system/libcorecrypto.dylib     0x7fff94c74000 -     0x7fff94c75ff7  com.apple.print.framework.Print (10.0 - 265)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print     0x7fff94c76000 -     0x7fff94dbaff7  com.apple.QTKit (7.7.3 - 2890)  /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit     0x7fff94dec000 -     0x7fff94e78fff  libsystem_c.dylib (1044.1.2)  /usr/lib/system/libsystem_c.dylib     0x7fff94e79000 -     0x7fff94f1aff7  com.apple.Bluetooth (4.3.1 - 4.3.1f2)  /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth     0x7fff94f1b000 -     0x7fff94f25ff7  com.apple.CrashReporterSupport (10.10 - 629)  /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport     0x7fff94f26000 -     0x7fff95166ff7  com.apple.AddressBook.framework (9.0 - 1499)  /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook     0x7fff952f7000 -     0x7fff95300ff3  com.apple.CommonAuth (4.0 - 2.0)  /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth     0x7fff9543e000 -     0x7fff95470ff3  com.apple.frameworks.CoreDaemon (1.3 - 1.3)  /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon     0x7fff95471000 -     0x7fff954a8ffb  com.apple.LDAPFramework (2.4.28 - 194.5)  /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP     0x7fff954a9000 -     0x7fff954adff7  com.apple.TCC (1.0 - 1)  /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC     0x7fff954b3000 -     0x7fff954d0ffb  libresolv.9.dylib (57)  /usr/lib/libresolv.9.dylib     0x7fff954d1000 -     0x7fff954fcfff  com.apple.DictionaryServices (1.2 - 229)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices     0x7fff95576000 -     0x7fff955c9ffb  libAVFAudio.dylib (118.3)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib     0x7fff955ca000 -     0x7fff955f2fff  libsystem_info.dylib (459)  /usr/lib/system/libsystem_info.dylib     0x7fff955fc000 -     0x7fff9560dff7  libsystem_coretls.dylib (35.1.2)  /usr/lib/system/libsystem_coretls.dylib     0x7fff9560e000 -     0x7fff9560fff7  libsystem_blocks.dylib (65)  /usr/lib/system/libsystem_blocks.dylib     0x7fff95627000 -     0x7fff9590effb  com.apple.CoreServices.CarbonCore (1108.1 - 1108.1)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore     0x7fff9590f000 -     0x7fff95980ff7  com.apple.framework.IOKit (2.0.2 - 1050.1.21)  /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit     0x7fff95ab6000 -     0x7fff95ac1ff7  libcsfde.dylib (471)  /usr/lib/libcsfde.dylib     0x7fff95d20000 -     0x7fff95dc6fff  com.apple.PDFKit (3.0 - 3.0)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit     0x7fff95dc7000 -     0x7fff95dd5ff7  com.apple.opengl (11.0.7 - 11.0.7)  /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL     0x7fff95dd8000 -     0x7fff95de3ff7  libkxld.dylib (2782.1.97)  /usr/lib/system/libkxld.dylib     0x7fff9638a000 -     0x7fff963a4ff7  liblzma.5.dylib (7)  /usr/lib/liblzma.5.dylib     0x7fff973a7000 -     0x7fff97406ff3  com.apple.AE (681 - 681)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE     0x7fff97448000 -     0x7fff9745eff7  com.apple.CoreMediaAuthoring (2.2 - 951)  /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring     0x7fff974e4000 -     0x7fff974e4ff7  libkeymgr.dylib (28)  /usr/lib/system/libkeymgr.dylib     0x7fff97527000 -     0x7fff97555fff  com.apple.CoreServicesInternal (221.1 - 221.1)  /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal     0x7fff975a1000 -     0x7fff975aafff  com.apple.DisplayServicesFW (2.9 - 372.1)  /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices     0x7fff975ab000 -     0x7fff975bdfff  libsasl2.2.dylib (193)  /usr/lib/libsasl2.2.dylib     0x7fff975be000 -     0x7fff975cbfff  com.apple.SpeechRecognitionCore (2.0.32 - 2.0.32)  /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore     0x7fff975cc000 -     0x7fff975ccfff  com.apple.Carbon (154 - 157)  /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon     0x7fff975cd000 -     0x7fff979a4fe7  com.apple.CoreAUC (211.0.0 - 211.0.0)  /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC     0x7fff979a5000 -     0x7fff97a19fff  com.apple.ApplicationServices.ATS (360 - 375)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS     0x7fff97a1a000 -     0x7fff97aaefff  com.apple.ink.framework (10.9 - 213)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink     0x7fff97aaf000 -     0x7fff97ab2ff7  com.apple.AppleSystemInfo (3.0 - 3.0)  /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo     0x7fff97b8e000 -     0x7fff97bbeff3  com.apple.CoreAVCHD (5.7.5 - 5750.4.1)  /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD     0x7fff97bbf000 -     0x7fff97d6fff7  com.apple.QuartzCore (1.10 - 361.11)  /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore     0x7fff97dc9000 -     0x7fff97efbff7  com.apple.MediaControlSender (2.0 - 215.10)  /System/Library/PrivateFrameworks/MediaControlSender.framework/Versions/A/MediaControlSender     0x7fff97efc000 -     0x7fff97f04ff7  com.apple.AppleSRP (5.0 - 1)  /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP     0x7fff97f05000 -     0x7fff98220fcf  com.apple.vImage (8.0 - 8.0)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage     0x7fff98221000 -     0x7fff98223fff  com.apple.OAuth (25 - 25)  /System/Library/PrivateFrameworks/OAuth.framework/Versions/A/OAuth     0x7fff98224000 -     0x7fff98290fff  com.apple.framework.CoreWLAN (5.0 - 500.35.2)  /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN     0x7fff982b0000 -     0x7fff987c3ff3  com.apple.JavaScriptCore (10600 - 10600.1.17)  /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore     0x7fff987c4000 -     0x7fff987c7fff  com.apple.IOSurface (97 - 97)  /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface     0x7fff987c8000 -     0x7fff987d2fff  com.apple.IntlPreferences (2.0 - 150.1)  /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences     0x7fff987d3000 -     0x7fff987d8ffb  libheimdal-asn1.dylib (398.1.2)  /usr/lib/libheimdal-asn1.dylib     0x7fff98903000 -     0x7fff98d10ff7  libLAPACK.dylib (1128)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib     0x7fff98d75000 -     0x7fff98d7cff7  libcompiler_rt.dylib (35)  /usr/lib/system/libcompiler_rt.dylib  External Modification Summary:   Calls made by other processes targeting this process:     task_for_pid: 1     thread_create: 0     thread_set_state: 0   Calls made by this process:     task_for_pid: 0     thread_create: 0     thread_set_state: 0   Calls made by all processes on this machine:     task_for_pid: 38605     thread_create: 0     thread_set_state: 0  VM Region Summary: ReadOnly portion of Libraries: Total=286.5M resident=119.7M(42%) swapped_out_or_unallocated=166.9M(58%) Writable regions: Total=115.2M written=27.7M(24%) resident=37.2M(32%) swapped_out=12K(0%) unallocated=78.0M(68%)  REGION TYPE                      VIRTUAL ===========                      ======= CG shared images                    144K Dispatch continuations             16.0M Kernel Alloc Once                     8K MALLOC                             9572K MALLOC (admin)                       32K Memory Tag 242                       12K STACK GUARD                        56.1M Stack                              18.7M VM_ALLOCATE                        68.2M VM_ALLOCATE (reserved)             1888K        reserved VM address space (unallocated) __DATA                             27.0M __IMAGE                             528K __LINKEDIT                         71.6M __TEXT                            214.9M __UNICODE                           544K mapped file                       176.6M shared memory                         4K ===========                      ======= TOTAL                             661.6M TOTAL, minus reserved VM space    659.8M   Model: MacBookPro11,2, BootROM MBP112.0138.B11, 4 processors, Intel Core i7, 2 GHz, 8 GB, SMC 2.18f15 Graphics: Intel Iris Pro, Intel Iris Pro, Built-In Memory Module: BANK 0/DIMM0, 4 GB, DDR3, 1600 MHz, 0x02FE, - Memory Module: BANK 1/DIMM0, 4 GB, DDR3, 1600 MHz, 0x02FE, - AirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x134), Broadcom BCM43xx 1.0 (7.15.124.12.10) Bluetooth: Version 4.3.1f2 15015, 3 services, 27 devices, 1 incoming serial ports Network Service: Wi-Fi, AirPort, en0 Serial ATA Device: APPLE SSD SM0256F, 251 GB USB Device: Internal Memory Card Reader USB Device: Apple Internal Keyboard / Trackpad USB Device: BRCM20702 Hub USB Device: Bluetooth USB Host Controller Thunderbolt Bus: MacBook Pro, Apple Inc., 17.1  ```","closed","","j-mcnally","2015-05-21T03:28:20Z","2019-08-21T13:09:41Z"
"","398","IEDriver constantly crashing on startup (Win7 IE8  64bit) with Selenium 2.45","Every time I try to launch IEDriver it crashes with following error in log file:  W 2015-04-01 14:21:54:994 BrowserFactory.cpp(269) -2147467259 [Unspecified error]: Unable to convert document object pointer to IHTMLDocument2 object via ObjectFromLresult  Am launching IEDriver as shown below  InternetExplorerDriverService ieservice = InternetExplorerDriverService.CreateDefaultService(@""C:\Program Files\IEDriverServer"");   ieservice.LoggingLevel = InternetExplorerDriverLogLevel.Trace;  ieservice.LogFile = ""C:\TEMP\iedriverserver.log"";   InternetExplorerOptions options = new InternetExplorerOptions();  options.IgnoreZoomLevel = true; options.IntroduceInstabilityByIgnoringProtectedModeSettings = true; options.ElementScrollBehavior =  options.IgnoreZoomLevel = true;  driver = new InternetExplorerDriver(ieservice, options, TimeSpan.FromMinutes(5));  Selenium version: 2.45.0 OS: Windows 7 Browser: IE7","closed","I-needs investigation,","pcomerton","2015-04-01T13:50:44Z","2019-08-21T14:10:02Z"
"","401","Copyright Uniformity","Every other file has a different copyright heading.  Everything from  > Copyright 2007 - 2011 Software Freedom Conservancy  to   > Copyright 2012 Selenium Committers  This issue should be dedicated to uniting all copyrights in each file.  To do all of this, will be a time-consuming and daunting task, but should be done.  The issue could also be discussed as a forum for what the full-text of the copyright should be.  Consider it an **Epic** issue, and any PR's solely regarding documentation cleanup should be referred here.  In the future, expect PR's from me cleaning this up.  [I-cleanup?]","closed","I-cleanup,","ddavison","2015-04-01T19:38:15Z","2019-08-21T09:10:01Z"
"","262","EventFiringWebDriver and Actions integration.","EventFiringWebDriver has not been able to get hold of events that are triggered from within Actions class.  Enabled this so that, the listeners that are plugged into an EventFiringWebDriver can now get notifications from Actions class originated events as well.","closed","","krmahadevan","2014-09-27T04:49:53Z","2015-02-19T14:20:17Z"
"","481","Correct interpolation for WebDriverException","Ensure the WebDriverException correctly includes the firefox profile directory.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/481)","closed","C-py,","ant1441","2015-04-23T13:11:02Z","2020-03-30T15:37:52Z"
"","3","Update README formatting","Empty brackets cause the markdown to swallow the links. Opted for raw links over using the site name as the anchor.","closed","","nschonni","2013-01-15T22:47:03Z","2014-02-11T19:47:54Z"
"","771","Mouse hover is not working with Firefox 29","Earlier i was using Firefox 25 and the following line of code to hover over a menu to get it's submenus.  ``` java WebElement menu = driver.findElement(by);         Actions builder = new Actions(driver);         builder.moveToElement(menu).build().perform();         WebDriverWait wait = new WebDriverWait(driver, 15); ```  When i upgraded to Firefox 29 it's not working as expected. it was working fine with Firefox 25 My selenium version is 2.42","closed","D-firefox,","prab2112","2015-07-13T06:19:59Z","2019-08-21T01:09:47Z"
"","363","javascript interface not working with setTimeout","e.g.  ``` javascript var fs = require('fs'); var webdriver = require('selenium-webdriver');  var remote = new webdriver   .Builder()   .withCapabilities({ browserName: 'phantomjs' })   .build();  remote.manage().window().setSize(1024, 900);  remote.get('http://google.com');  setTimeout(function() {   remote.executeScript('return true').then(log, onError); }, 500);  function log(res) { console.log(res); }  function onError(e) { throw e; } ```  This small program gets stuck and never ends, but it we move the line `remote.executeScript('return true').then(log, onError);` out of the `setTimeout` callback then it starts working as expected.  Shouldn't the `executeScript` call schedule the operation regardless of when it is called?  I'm using selenium-webdriver@2.45.1","closed","I-defect,","soarez","2015-03-24T17:04:49Z","2019-08-21T00:09:54Z"
"","626","Update .gitignore","During running the tests, two files are generated  I believe they should be added to .gitignore, so they are not committed by mistake.","closed","","asashour","2015-06-06T02:07:02Z","2015-06-17T18:38:28Z"
"","5","Detect Windows 8 in Platform","Due to http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=7170169 there is no good way to use os.name alone to detect Windows 8. It returns ""windows nt (unknown)"".  But using ""windows nt"" in combination with os.version ""6.2"" we can detect Windows 8.  CLA filled.","closed","","Zitrax","2013-01-22T12:15:17Z","2013-01-22T12:20:52Z"
"","190","Fix for dotnet DriverService initialization","DriverService will throw a WebDriverException if it cannot start the driver process so now it's more easy to debug if there's same problem during the driver initialization . Previous behaviour was to silently fail so client code will get errors only later when it will try to use the driver istance. note: i used WebDriverException to have a consistent behaviour with the java code note2: i do also a simply validation on the 'status' response to manage the case where the failure is caused explicitly setting a port that is already use by an http server (so the 'status' command can return a valid http response)","closed","C-dotnet,","livioc","2014-03-20T10:01:59Z","2015-03-30T18:08:31Z"
"","399","send keys to create new browser tab and switch tabs not working in chrome browser","driver.switchTo().activeElement().sendKeys(Keys.CONTROL + ""t"");  is not working in chrome browser. I tried various chrome browsers. It works fine on firefox browser though.","closed","","prvn133t","2015-04-01T14:30:51Z","2019-08-21T15:09:53Z"
"","342","Node config ""chrome_binary"" causes an exception when ChromeOptions capability is set","Driver initialization code:  ``` java DesiredCapabilities dc = new DesiredCapabilities(); dc.setBrowserName('chrome'); ChromeOptions options = new ChromeOptions(); options.addArguments(""start-maximized""); dc.setCapability(ChromeOptions.CAPABILITY, options) RemoteWebDriver driver = new RemoteWebDriver(new URL('http://localhost:4444/wd/hub'), dc); ```  nodeconfig.json code:  ``` json ""browserName"": ""chrome"", ""chrome_binary"": ""C:\\Tools\\GoogleChromePortable\\App\\Chrome-bin\\chrome.exe"" ```  ``` text Exception:  org.openqa.grid.common.exception.GridException: Error forwarding the new session The listener threw an exception ( listener bug )     at org.openqa.grid.web.servlet.handler.RequestHandler.process(RequestHandler.java:114)     at org.openqa.grid.web.servlet.DriverServlet.process(DriverServlet.java:83)     at org.openqa.grid.web.servlet.DriverServlet.doPost(DriverServlet.java:67)     at org.seleniumhq.jetty7.servlet.ServletHolder.handle(ServletHolder.java:565)     at org.seleniumhq.jetty7.servlet.ServletHandler.doHandle(ServletHandler.java:479)     at org.seleniumhq.jetty7.server.session.SessionHandler.doHandle(SessionHandler.java:225)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)     at org.seleniumhq.jetty7.servlet.ServletHandler.doScope(ServletHandler.java:406)     at org.seleniumhq.jetty7.server.session.SessionHandler.doScope(SessionHandler.java:186)     at org.seleniumhq.jetty7.server.handler.ContextHandler.doScope(ContextHandler.java:965)     at org.seleniumhq.jetty7.server.handler.ScopedHandler.handle(ScopedHandler.java:117)     at org.seleniumhq.jetty7.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)     at org.seleniumhq.jetty7.server.Server.handle(Server.java:349)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:452)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handleRequest(BlockingHttpConnection.java:47)     at org.seleniumhq.jetty7.server.AbstractHttpConnection.content(AbstractHttpConnection.java:894)     at org.seleniumhq.jetty7.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:948)     at org.seleniumhq.jetty7.http.HttpParser.parseNext(HttpParser.java:857)     at org.seleniumhq.jetty7.http.HttpParser.parseAvailable(HttpParser.java:235)     at org.seleniumhq.jetty7.server.BlockingHttpConnection.handle(BlockingHttpConnection.java:66)     at org.seleniumhq.jetty7.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:254)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)     at org.seleniumhq.jetty7.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534) ```  I believe it has something to do with DefaultRemoteProxy.java code:  ``` java       if (BrowserType.CHROME.equals(cap.get(CapabilityType.BROWSER_NAME))) {         if (session.getSlot().getCapabilities().get(""chrome_binary"") != null) {           JsonObject options = (JsonObject) cap.get(ChromeOptions.CAPABILITY);           if (options == null) {             options = new JsonObject();           }           options.addProperty(""binary"", (String) session.getSlot().getCapabilities().get(""chrome_binary""));           cap.put(ChromeOptions.CAPABILITY, options);         } ```  Removed `""chrome_binary""` from `nodeconfig.json` - no exception, `""start-maximized""` passed fine. Removed `dc.setCapability(ChromeOptions.CAPABILITY, options)` line - no exception, `""chrome_binary""` works fine.","closed","I-needs investigation,","geyzer","2015-03-17T19:03:50Z","2019-08-18T10:09:35Z"
"","580","OpenQA.Selenium.Platform lacks ToString override","dotnet  When OpenQA.Selenium.WebDriverException is thrown for not being able to locate a firefox binary the current platform is included within the exception message.  OS appears to be: OpenQA.Selenium.Platform","closed","","elbaloo","2015-05-27T19:01:19Z","2019-08-21T10:09:46Z"
"","137","Avoiding fetching webdriver_prefs.json from disk during FirefoxProfile class initialization.","Doing that only when needed, upon the first instantiation.","closed","","sevaseva","2013-11-21T07:40:28Z","2014-02-23T08:35:44Z"
"","703","IEDriver re-sizes window to dimensions of current frame when taking full page screenshot","document_info returned by DocumentHost::GetDocumentDimensions in [this line](https://github.com/SeleniumHQ/selenium/blob/05da83d1932969ecab827d0ca03cdfb05852fb2d/cpp/iedriver/CommandHandlers/ScreenshotCommandHandler.h#L125) is the one of the current frame, not the top level frame/document as that line expects.  So if our current frame was an iframe, smaller in dimensions than the top level context frame, [this line](https://github.com/SeleniumHQ/selenium/blob/05da83d1932969ecab827d0ca03cdfb05852fb2d/cpp/iedriver/CommandHandlers/ScreenshotCommandHandler.h#L180) will re-size the window to that smaller size, calculated relative to the smaller iframe's size.  [TakesScreenshotTest.testShouldCaptureScreenshotAtIFramePageAfterSwitching](https://github.com/SeleniumHQ/selenium/blob/653b63408f0e8f33913c0e27409db8e3c4680116/java/client/test/org/openqa/selenium/TakesScreenshotTest.java#L351) is the regression test for this, it is @Ignored on IE browsers currently. (note that entire test class is [@Ignored](https://github.com/SeleniumHQ/selenium/blob/653b63408f0e8f33913c0e27409db8e3c4680116/java/client/test/org/openqa/selenium/TakesScreenshotTest.java#L75) on IE with that not-very-helpful message; we may want to enable those that currently pass, at least)","closed","","sevaseva","2015-06-23T21:58:19Z","2019-08-20T14:10:02Z"
"","467","Disable some atoms tests that are broken in Safari.","Disables the tests mentioned in #461.","closed","","juangj","2015-04-18T01:37:38Z","2015-04-21T20:54:09Z"
"","621","Selenium-webdriver 2.46.1 for Ruby send_keys(:return) fails with from ASCII-8BIT to UTF-8 (Encoding::UndefinedConversionError)","Detected with: Selenium-webdriver 2.46.1 for Ruby Ruby version: 1.9.3 Firefox: 38.0.1  Action:   test_element.send_keys(:return) Exception: ""\xEE"" from ASCII-8BIT to UTF-8 (Encoding::UndefinedConversionError)  Can't reproduce this with Selenium-webdriver 2.45.0 for Ruby.","closed","","Jumper303","2015-06-05T09:29:24Z","2019-08-21T12:09:41Z"
"","332","ExpectedConditions.not is not working correctly","Details of the setup used to test this:  Windows 7 ChromeDriver (chrome ver 41) Java bindings, selenium version 2.44.0  Java and html+js code to reproduce the issue: https://gist.github.com/anonymous/c81bb74d9bbcd94b0398  What should happen: The test should pass as the div with id 'woop' is being removed via assigning the innerHTML. What happens: The wait times out after waiting for the ExpectedConditions specified (for the element with id 'woop' to not be present).  You can see the same behaviour with visibilityOfElementLocated and using ExpectedConditions.not - here it's even more obvious that this is broken as using invisibilityOfElementLocated works just fine where using ExpectedConditions.not(ExpectedConditions.visibilityOfElementLocated) doesn't.","closed","I-defect,","JamesZoft","2015-03-13T17:02:30Z","2019-08-21T16:09:50Z"
"","443","Please include a prefilled issue template link","Description of the problem: Briefly scanning through the recent issues that have been filed in the new Seleinum Github issue tracker shows a pattern of low quality issues which are being posted to the wrong place / lack necessary information. Perhaps a bug template link may raise the bar a little bit?  Steps to reproduce: Go to https://github.com/SeleniumHQ/selenium/issues?q=is%3Aissue+is%3Aclosed .  Expected results: Issues that have been filed to contain all the usual information, issues not contain ""how do I?"" requests.  Actual results: Many ""help me"" issues, some issues lacking clear reproduction steps, missing version information etc.  Additional information: Although it's crude perhaps a link to a prefilled report like https://github.com/SeleniumHQ/selenium/issues/new?title=footitle&body=barbody might help a little bit? (found via isaacs/github#99)  Version information: Github issue tracker as of 11th April 2015.","closed","","sitsofe","2015-04-11T05:49:58Z","2019-08-21T14:10:00Z"
"","130","Fixed incorrect behavior DefaultToFIFOPriorityTest (Issue 6504)","DefaultToFIFOPriorityTest fills the queue with MAX requests at loop:   ``` for (MockedRequestHandler h : requests) {   final MockedRequestHandler req = h;   new Thread(new Runnable() {  // Thread safety reviewed     public void run() {       req.process();     }   }).start(); } ```  and expects that  the order in the queue (NewSessionRequestQueue newSessionQueue in Registry class) will match to order of the list (List requests). But this isn't always true, because the order running threads is not defined.   The test expects that first element in the queue will be same that in the list:     while (cpt < 8) {       try {         requests.get(0).getSession();         break;       } catch (Throwable e) {         // ignore.       }       Thread.sleep(250);     }  if this not true, we get an infinite loop.  I propose to switch next request when previous already added to queue.","closed","R-awaiting review,","nataliakoval","2013-10-30T14:23:10Z","2016-08-25T19:45:57Z"
"","108","Re-adding the fix for issue #5955.","d387261 undid a fix made by bb3450e for http://code.google.com/p/selenium/issues/detail?id=5955. This pull request re-adds the workaround.","closed","","paymand","2013-08-30T14:07:49Z","2013-10-25T17:36:03Z"
"","12","Get distinct capabilities of the nodes registered with a hub as JSON","Currently, there is no way to retrieve the list (in a form of JSON) of distinct capabilities across all nodes registered with a hub, even though it is possible to see them as HTML by navigating to ""/grid/console"". It would be helpful to avoid any attempts to parse HTML in order to get capabilities and instead expose a path like ""/grid/capabilities"" that will result in JSON representing distinct capabilities. This may be helpful if one wants to dynamically create drivers without providing explicit details.  EDIT: the CLA has been signed.","closed","","dnillia","2013-02-04T16:28:49Z","2015-03-02T21:12:50Z"
"","176","webdriver.py: fix service_args[] handling","currently webdriver uses the passed in service_args[] to start phantomjs without making a local copy of the list.  When the service object is created, it appends data to service_args, which unintentionally modifies the initial list passed in upon instantiation of the webdriver.  this is poor in two respects -- the user of the library does NOT expect  their passed in parameter to be modified and also this current behavior interferes with creating more than one instance of webdriver in a python script.    The fix is to create a local copy of service_args and pass that local copy to service. so ...  service_args=service_args[:]","closed","","jmuramatsu","2014-02-28T22:31:26Z","2014-03-03T19:52:03Z"
"","759","Internet Explorer Driver doesn't have an option to set the User-Agent","Currently there is no option for setting the user agent for a IE Browser.  @jimevans, Is it possible to use `UrlMkSetSessionOption` listed on the below URL?  https://msdn.microsoft.com/en-us/library/ms775125(v=vs.85).aspx  This needs to be executed inside the browser at startup, so I assume there is some kind of hook we have which can actually execute this. Any thoughts on this?","closed","D-IE,","tarunlalwani","2015-07-10T10:05:28Z","2019-08-21T09:09:39Z"
"","727","Add new HtmlUnitDriver(BrowserVersion,boolean)","Currently there is a constructor with BrowserVersion and another one with boolean (JS enabling), however most users use WebDriver driver = new HtmlUnitDriver()  And in this case WebDriver doesn't have setBrowsreVersion/setJavascriptEnabled","closed","C-java,","asashour","2015-07-02T13:27:57Z","2015-07-03T07:12:42Z"
"","666","UnixUtils exception when quitting from Selenium RC","Currently I am using the Python Selenium 2.46 bindings to connect to Selenium RC 2.46. I consistently get the below error when quitting. Things were working fine in 2.45.  ``` Traceback (most recent call last):   File ""../../webexrpc/endpoints.py"", line 233, in teardown     self.driver.quit()   File ""/home/xiaorzha/.local/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 477, in quit     self.execute(Command.QUIT)   File ""/home/xiaorzha/.local/lib/python3.4/site-packages/selenium/webdriver/remote/webdriver.py"", line 195, in execute     self.error_handler.check_response(response)   File ""/home/xiaorzha/.local/lib/python3.4/site-packages/selenium/webdriver/remote/errorhandler.py"", line 170, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: UnixUtils may not be used on Windows Screenshot: available via screen Stacktrace:     at org.openqa.selenium.os.ProcessUtils.getProcessId (ProcessUtils.java:189)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.getPID (UnixProcess.java:221)     at org.openqa.selenium.os.UnixProcess$SeleniumWatchDog.access$3 (UnixProcess.java:220)     at org.openqa.selenium.os.UnixProcess.destroy (UnixProcess.java:131)     at org.openqa.selenium.os.CommandLine.destroy (CommandLine.java:153)     at org.openqa.selenium.firefox.FirefoxBinary.quit (FirefoxBinary.java:259)     at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.quit (NewProfileExtensionConnection.java:202)     at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.quit (FirefoxDriver.java:376)     at org.openqa.selenium.firefox.FirefoxDriver.stopClient (FirefoxDriver.java:322)     at org.openqa.selenium.remote.RemoteWebDriver.quit (RemoteWebDriver.java:477)     at sun.reflect.GeneratedMethodAccessor61.invoke (None:-1)     at sun.reflect.DelegatingMethodAccessorImpl.invoke (None:-1)     at java.lang.reflect.Method.invoke (None:-1)     at org.openqa.selenium.support.events.EventFiringWebDriver$2.invoke (EventFiringWebDriver.java:102)     at com.sun.proxy.$Proxy1.quit (None:-1)     at org.openqa.selenium.support.events.EventFiringWebDriver.quit (EventFiringWebDriver.java:199)     at org.openqa.selenium.remote.server.handler.DeleteSession.call (DeleteSession.java:50)     at org.openqa.selenium.remote.server.handler.DeleteSession.call (DeleteSession.java:1)     at java.util.concurrent.FutureTask.run (None:-1)     at org.openqa.selenium.remote.server.DefaultSession$1.run (DefaultSession.java:176)     at java.util.concurrent.ThreadPoolExecutor.runWorker (None:-1)     at java.util.concurrent.ThreadPoolExecutor$Worker.run (None:-1)     at java.lang.Thread.run (None:-1) ```","closed","","urbenlegend","2015-06-15T20:31:50Z","2019-08-19T18:09:49Z"
"","740","HtmlUnitWebElement: to handle DomElement","Currently HtmlUnitWebElement supports only HtmlElement, however there are potential SvgElement which should be handled.  This is the first step towards implementing SvgElement clicking, as required by Selenium test suite.","closed","C-java,","asashour","2015-07-06T07:42:34Z","2015-07-07T00:59:25Z"
"","392","Cookies returned by Safari driver contain no info about domain and expiration date","Cookies returned by Safari driver contain no info about domain and expiration date  (Moved from https://code.google.com/p/selenium/issues/detail?id=8509)","closed","I-papercut,","barancev","2015-03-31T17:03:58Z","2019-08-19T18:10:00Z"
"","391","Cookies returned by IE driver contain no info about domain and expiration date","Cookies returned by IE driver contain no info about domain and expiration date  (Moved from https://code.google.com/p/selenium/issues/detail?id=8509)","closed","I-papercut,","barancev","2015-03-31T17:03:33Z","2019-08-21T10:09:45Z"
"","559","Firefox Driver 2.45 is 100% slower than 2.44","Context see https://code.google.com/p/selenium/issues/detail?id=8551","closed","","vladikoff","2015-05-21T18:59:13Z","2019-08-21T13:09:39Z"
"","162","contentBeingForwarded set to responseContent","contentBeingForwarded initialized to null but never set any data to it. i use SeleniumBasedResponse in afterCommand. forwardedContent of this class always null. so i set contentBeingForwarded by inputsteam's bytes.","closed","","suayipozmen","2014-01-24T20:08:35Z","2014-12-12T08:30:12Z"
"","93","SearchContext for ExpectedConditions (if it's possible)","Commit summary : Created a specific class for `ExpectedConditions` that are possible to run with just `SearchContext` and don't require `WebDriver`.  What's this good for? Many of the `ExpextedConditions` that are now bound to use `WebDriver`don't actually require `Webdriver` and they're happy with `SearchContext`. So let's widen their usage!","closed","","Dan-stahr","2013-07-12T11:51:57Z","2015-03-02T21:07:58Z"
"","61","Issue 5582. IDE - Details of error reporting in user/plugin javascript","commit 9e78e55a60019a4999279e12c44013a90dc302ec","closed","","peter-kehl","2013-05-01T22:49:10Z","2014-10-18T14:29:05Z"
"","619","Element not found in the cache - perhaps the page has changed since it was looked up","Code: List discoveryElements=driver.findElements(By.xpath(""//a[contains(@id,'Data Transparency Portal_menu_Discover_')]"")); int count=discoveryElements.size(); for(WebElement wE:discoveryElements){         wE.click();         wE.getText(); } While i execute this code the following error occurs: While i execute it it throws the following exception org.openqa.selenium.StaleElementReferenceException: Element not found in the cache - perhaps the page has changed since it was looked up Command duration or timeout: 30.20 seconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'Rutherford', ip: '192.168.33.28', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_25' Driver info: org.openqa.selenium.firefox.FirefoxDriver Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=38.0.5, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: 283b55df-0448-4463-9ee7-471828522df6     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:599)     at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268)     at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:152)     at step2.DataTransparencyPortal.DataTransparencyPortal.DTP_Test(DataTransparencyPortal.java:92)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)     at org.junit.runners.ParentRunner.run(ParentRunner.java:309)     at org.junit.runners.Suite.runChild(Suite.java:127)     at org.junit.runners.Suite.runChild(Suite.java:26)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)     at org.junit.runners.ParentRunner.run(ParentRunner.java:309)     at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)     at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)     at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192) Caused by: org.openqa.selenium.StaleElementReferenceException: Element not found in the cache - perhaps the page has changed since it was looked up For documentation on this error, please visit: http://seleniumhq.org/exceptions/stale_element_reference.html Build info: version: '2.45.0', revision: '5017cb8', time: '2015-02-26 23:59:50' System info: host: 'Rutherford', ip: '192.168.33.28', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_25' Driver info: driver.version: unknown     at .fxdriver.cache.getElementAt(resource://fxdriver/modules/web-element-cache.js:8953)     at .Utils.getElementAt(file:///C:/Users/GLOBAL~1/AppData/Local/Temp/anonymous1148546015714371160webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:8546)     at .WebElement.getElementText(file:///C:/Users/GLOBAL~1/AppData/Local/Temp/anonymous1148546015714371160webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:11704)     at .DelayedCommand.prototype.executeInternal_/h(file:///C:/Users/GLOBAL~1/AppData/Local/Temp/anonymous1148546015714371160webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js:12274)     at .fxdriver.Timer.prototype.setTimeout/","closed","","SakubGid","2015-06-05T07:38:20Z","2019-08-21T10:09:53Z"
"","273","Allow switching to another window when current window is closed","Closed windows are currently handled within the context of the block, but not if a window is closed and then referenced later.  The current implementation also assumes only 2 browsers (which, granted, is probably 99.99% of the time).  The initial conditional on line 54/55 can be removed if the desired behavior is to always select the initial window; either way the current behavior is to throw an exception.","closed","","titusfortner","2014-10-21T00:28:21Z","2015-07-02T01:43:21Z"
"","285","Allow clients to specify TCP timeouts","Clients currently are limited to a hard-coded 3 hour TCP socket read timeout. This can be extremely long for many clients, or even too short for some.  The code does not change any existing public interfaces (only adds new public methods).  An example use of the new settings is:  ``` HttpClientFactory httpClientFactory = new HttpClientFactory(connectTimeout, socketTimeout) HttpCommandExecutor.setHttpClientFactory(httpClientFactory) ```  ...     HttpCommandExecutor executor = new HttpCommandExecutor(seleniumUrl)     RemoteWebDriver driver = new RemoteWebDriver(executor, capabilities)","closed","C-java,","disaacson","2014-11-16T02:55:09Z","2017-08-22T09:22:33Z"
"","35","[FF driver] Allow executeScript commands when a js alert box is showing","CLA was signed  After 2.17 code was added that prohibited most actions when a javascript alert box was showing.  This made sense as in real life a user could not follow a link or toggle a checkbox when the browser was in this state.  However executing javascript commands is something a user never does.  The capability only exists for use by the testing tool.  As such there is no reason to keep prevent it from happening just because an alert is showing.  Because of this our project has been stuck on 2.17.","closed","","jshraibman-mdsol","2013-03-21T21:23:12Z","2014-06-14T13:33:09Z"
"","31","fix javasricpt tests for contenteditable that were copied but not fully edited","CLA was signed","closed","","twalpole","2013-03-16T19:14:01Z","2013-03-25T13:53:10Z"
"","18","Python 2.6+ and Python 3.1+ support changes.","CLA signed.  Much of this is based on the work done by dude-x.  I recommend considering Python 3 support to be experimental.  My expectation is that Python 2 should work as it did before, as long as Python 2.6 or above is being used.  This was deemed an acceptable support limit as Python 2.5 was last updated May 2011.","closed","","intchanter","2013-03-05T20:51:37Z","2014-07-31T12:52:01Z"
"","174","Update download links to googleapis.com in some source files","CLA signed before","closed","","yizeng","2014-02-26T21:47:45Z","2014-06-13T00:09:18Z"
"","183","Remove redundant lines","CLA signed as Alexander Bayandin","closed","","bayandin","2014-03-08T09:24:23Z","2014-03-25T16:48:59Z"
"","175","Fix docstring","CLA signed as Alexander Bayandin","closed","","bayandin","2014-02-28T19:41:00Z","2014-02-28T20:08:30Z"
"","101","Fix old links to svn repository","CLA signed as Alexander Bayandin","closed","","bayandin","2013-08-08T03:18:02Z","2013-10-05T04:38:31Z"
"","75","[Python] time.sleep replaced by WebDriverWait in tests","CLA signed as Alexander Bayandin","closed","","bayandin","2013-05-18T06:44:18Z","2014-08-01T04:02:54Z"
"","70","Fixed broken link in python docs","CLA signed as Alexander Bayandin","closed","","bayandin","2013-05-14T03:52:47Z","2013-05-14T04:17:09Z"
"","66","[Python] Implementation some of new commands(/log/types, /log)","CLA signed as Alexander Bayandin","closed","","bayandin","2013-05-08T16:50:21Z","2013-07-23T05:46:27Z"
"","27","Fix support of SVG documents in Firefox","CLA signed","closed","","paroga","2013-03-11T16:56:57Z","2013-05-17T15:54:11Z"
"","67","Enable ""browser"", ""profiler"", ""client"" log type tests for chromedriver2.","chromedriver2 patch: https://codereview.chromium.org/14815005","closed","","klepikov","2013-05-08T19:30:30Z","2013-05-22T17:39:47Z"
"","64","LogType.PERFORMANCE, test for it with chromedriver2.","Chromedriver2 implements new log type ""performance"". Added it to LogType and wrote tests for it.","closed","","klepikov","2013-05-06T15:39:35Z","2014-07-23T02:45:31Z"
"","407","ChromeDriver Performance Logging throws when using Remotedriver while using the Selenium Grid","ChromeDriver Performance Logging throws when using Remotedriver while using the Selenium Grid  ``` DesiredCapabilities desiredCapabilites = DesiredCapabilities.chrome(); LoggingPreferences logPrefs = new LoggingPreferences(); logPrefs.enable(LogType.PERFORMANCE, Level.ALL);                         desiredCapabilites.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);  Map prefs = new HashMap(); prefs.put(""traceCategories"", ""browser,devtools.timeline,devtools"");  ChromeOptions options = new ChromeOptions(); options.setExperimentalOption(""perfLoggingPrefs"", prefs);                                 desiredCapabilites.setCapability(ChromeOptions.CAPABILITY, options); ChromeDriver driver =  new ChromeDriver(desiredCapabilites) ;  ==> Works fine  // RemoteWebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub"" desiredCapabilites);  ==> Issue is here   try {                           System.out.println(driver.manage().logs().getAvailableLogTypes()); driver.get(""http://google.com""); for (LogEntry logEntry : driver.manage().logs().get(LogType.PERFORMANCE).getAll()) { System.out.println(logEntry);   }      } finally {  driver.quit();  } ''' ```","closed","","kolobok01","2015-04-02T19:08:16Z","2019-08-21T15:09:49Z"
"","699","ie driverservice allways get incorrect processid and uri port","chrome driverservice is correct, but IE is wrong, ie allways return processid with 0, and uri port is minus 1 from the real port displayed in the console.  c# / win7 64bit / ie11/ webdriver 2.46","closed","D-IE,","brickhe","2015-06-22T13:01:17Z","2019-08-21T10:09:35Z"
"","234","Changes done to fix issue 7134 to avoid race conditions.","Changes done to fix issue 7134 to avoid race conditions.  https://code.google.com/p/selenium/issues/detail?id=7134  I had already signed the CLA.","closed","","menonvarun","2014-06-27T08:59:19Z","2014-07-08T07:33:35Z"
"","303","Fix issue #8232. Re-submission of #293.","Changed the ExecuteJavaScript extension method to correctly detect if the script result is convertible to the generic type.  Please note that I have signed the CLA.","closed","C-dotnet,","chrisblock","2014-12-23T18:53:16Z","2015-03-26T20:24:37Z"
"","13","Enhancements to the PhantomJSDriverService to support passing command-line arguments to PhantomJS.exe","Changed driver service properties to use non-nullable types, added JSON.NET serialization properties to embed knowledge of PhantomJS command-line argument default values, fleshed out driver service unit tests, and made processing of command-line arguments dynamic based on PhantomJSDriverService property reflection, easing addition of new arguments in the future.","closed","","gmcelhanon","2013-02-08T22:41:53Z","2014-07-05T06:55:08Z"
"","193","Do not define SocketError as Ruby 1.8 is not longer supported","cc @jarib  I signed CLA","closed","","abotalov","2014-03-25T08:25:12Z","2014-06-25T12:38:46Z"
"","232","Add switch_to.parent_frame support to Ruby bindings","cc @jarib","closed","","abotalov","2014-06-25T12:25:32Z","2014-06-25T13:49:54Z"
"","125","fix for small typo in variable in error message","Causes an error to be raised since it doesn't exist","closed","","brettporter","2013-10-09T05:36:33Z","2013-10-09T14:28:19Z"
"","724","Using firefox profile will giving an error randomly","Caused by: org.openqa.selenium.WebDriverException: [JavaScript Error: ""h is null"" {file: ""file:///tmp/anonymous3131053432643337398webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js"" line: 8478}]'[JavaScript Error: ""h is null"" {file: ""file:///tmp/anonymous3131053432643337398webdriver-profile/extensions/fxdriver@googlecode.com/components/command-processor.js"" line: 8478}]' when calling method: [nsICommandProcessor::execute] Build info: version: '2.45.0', revision: '5017cb8e7ca8e37638dc3091b2440b90a1d8686f', time: '2015-02-27 09:10:26' System info: host: 'jenkins', ip: '127.0.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '3.2.0-72-virtual', java.version: '1.7.0_72'","closed","","tarunyaduvanshi","2015-07-02T05:19:50Z","2019-08-21T09:09:58Z"
"","753","Selenium Webdriver to support firefox 38.0","Can you please update when we can expect next release of selenium webdriver to support latest version of firefox?","closed","","vsiddhu2929","2015-07-09T09:00:24Z","2019-08-21T09:09:45Z"
"","534","selenium opens browser but does not navigate to the URL","Can someone please tell me what is wrong with my code?  ``` 'use strict';  var webdriver = require('selenium-webdriver'),       driver = new webdriver.Builder()                             .forBrowser('chrome')   // same with firefox                             .build(),       tape = require('tape'),       cotape = require('co-tape');  tape('check element', function(t) {   t.test('tape with cotape', cotape(function*(t) {       t.plan(1);        yield driver.get('https://www.google.com');        t.pass('Selenium can open a page.');   })); }); ```  The browser is opened but hangs there without going to the url.  Thanks,","closed","C-nodejs,","khanh-nguyen","2015-05-08T22:11:15Z","2019-08-21T11:09:40Z"
"","245","Make the jettyMaxThreads parameter actually be effective","Calling server.start() before setting a new thread pool caused the new thread pool to be ignored. Moved the call to server.start() to after the thread pool has been configured, which now makes the server use the newly configured thread pool instead of the default one.  Fixes ""Selenium grid Jetty server thread count cannot be configured by parameter jettyMaxThreads"" https://code.google.com/p/selenium/issues/detail?id=7240","closed","","zch","2014-08-08T06:44:55Z","2014-08-08T11:15:00Z"
"","767","Python/Linux quit() does not terminate PhantomJS process","Calling quit() on the Python driver seems to leave the phantomjs process running.  ``` (venv2)kmahan@lemur:~/projects/selenium-test$ python Python 2.7.9 (default, Apr  2 2015, 15:33:21)  [GCC 4.9.2] on linux2 Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. >>> from selenium import webdriver >>> browser = webdriver.PhantomJS() >>> browser.quit() >>>  (venv2)kmahan@lemur:~/projects/selenium-test$ ps ax | grep phantomjs 17503 pts/18   Sl     0:00 /usr/local/lib/node_modules/phantomjs/lib/phantom/bin/phantomjs --webdriver=36954 17518 pts/18   S+     0:00 grep --color=auto phantomjs ```  https://github.com/SeleniumHQ/selenium/commit/dbac7447d803a6efd33a031df841fa5f51e70ce5 appears to revert a fix from https://code.google.com/p/selenium/issues/detail?id=5921  Possible solution: Calling `self.process.terminate()` instead of `self.process.kill()` seems to terminate the process correctly on Linux and should have the same effect as `kill()` on Windows.","closed","C-py,","kylewm","2015-07-11T15:43:11Z","2019-08-16T22:09:46Z"
"","660","DirectCast(e, ILocatable).Coordinates.LocationOnScreen","call DirectCast(e, ILocatable).Coordinates.LocationOnScreen ' e is type of IWebElement raise a exception:  An exception of type 'System.NotImplementedException' occurred in WebDriver.dll but was not handled in user code  and, have a function to get the browser's handle in type of IntPtr ? can get the first opened  browser's handle on create new driver?","closed","","brickhe","2015-06-13T03:15:36Z","2019-08-16T05:09:45Z"
"","757","Shift key modifier no longer works in Actions","C# Windows 7 Firefox 34.0  Works with Selenium 2.44, but no longer works in 2.45, 2.46  ``` this.table.FindElement(By.CssSelector(""tr[data-rule-id='"" + ruleId + ""'] td.dismiss input"")).Click(); IWebElement nextCheckbox = this.table.FindElement(By.CssSelector(""tr[data-rule-id='"" + secondRuleId + ""'] td.dismiss input"")); Actions action = new Actions(this.driver); action.KeyDown(Keys.Shift).Click(nextCheckbox).KeyUp(Keys.Shift).Build().Perform(); ```  On the page in question all checkboxes between the two should be selected if the shift key is held down.","closed","","cailenmusselman","2015-07-09T22:28:55Z","2019-08-21T09:09:41Z"
"","92","BrowserType -> enum","BrowserType was a by the book example of using interfaces as types. It is considered as a bad pattern, and should be avoided.  Also, having an ENUM instead of an interface enables proper type checking for browsertypes instead of string equality.  I've not modified anything else in the code right now, but to give a quick example of what it can enable, take the following example from `HtmlUnitDriver.java`  The code is now:  ``` java     if (!BrowserType.HTMLUNIT.equals(capabilities.getBrowserName())) {       browserName = capabilities.getBrowserName();       browserVersion = capabilities.getVersion();     }      if (BrowserType.FIREFOX.equals(browserName)) {       return BrowserVersion.FIREFOX_17;     }      if (BrowserType.CHROME.equals(browserName)) {       return BrowserVersion.CHROME;     }  ```  With the ENUM, it can be something like:  ``` java         if (BrowserType.HTMLUNIT != BrowserType.fromString(capabilities.getBrowserName())) {             browserName = capabilities.getBrowserName();             browserVersion = capabilities.getVersion();         }          BrowserType browserType = BrowserType.fromString(browserName);         switch (browserType) {             case FIREFOX:                 return BrowserVersion.FIREFOX_17;             case CHROME:                 return BrowserVersion.CHROME;             default:                 BrowserVersion.getDefault();         } ```  This reduces the number of possible errors, because you have less conditional logic, less string comparison and not to mention more readable code.","closed","","meza","2013-07-05T15:07:04Z","2013-07-09T06:48:26Z"
"","692","IsDisplayed returns false when element is present on page","Browser: Firefox 38.0.5 Webdriver version: 2.46.0 (.NET)  Summary: IsDisplayed method of webelement returns 'false' though element is present on page. Actually, there is a number of consecutive elements in table header for which validation on being displayed is made. First element returns true, while all other elements return false. HTML structure of controls is following: [td id='some_id']       [table]               [tbody]                       [tr]                              [td]Text_to_search_on_page  Validation is made this way: if (driver.FindElement(By.XPath(""//*[contains(text(),'"" + text + ""')]"")).Displayed) {          return true; }  Following validation finds element with specified text but its ""Displayed"" attribute is set to ""false"" while ""Enabled"" attribute is set to true.","closed","D-firefox,","jongrey","2015-06-20T16:24:26Z","2019-08-14T10:09:47Z"
"","266","Fix exception message formatting","Before:  ``` selenium.common.exceptions.WebDriverException: Message: 'ChromeDriver executable needs to be available in the path.                 Please download from http://chromedriver.storage.googleapis.com/index.html                and read up at http://code.google.com/p/selenium/wiki/ChromeDriver' ```  After:  ``` selenium.common.exceptions.WebDriverException: Message: 'ChromeDriver executable needs to be available in the path. Please download from http://chromedriver.storage.googleapis.com/index.html and read up at http://code.google.com/p/selenium/wiki/ChromeDriver' ```","closed","","bayandin","2014-10-08T10:28:12Z","2014-10-08T10:40:16Z"
"","240","Fix #7677: Redirect Firefox output to /dev/null by default","Because the Firefox output is never used by default, /dev/null is the perfect place for it.","closed","","alexhenrie","2014-07-30T05:38:48Z","2014-07-30T05:57:09Z"
"","287","putting in star/fork badges","because everybody likes badges!  ![screen shot 2014-11-20 at 10 49 54](https://cloud.githubusercontent.com/assets/2972876/5127558/facbf1b2-70a2-11e4-9e30-a5efac948fff.png)","closed","","ddavison","2014-11-20T15:49:15Z","2014-11-23T02:28:44Z"
"","346","Dot editorconfig","based on the source so far, these are the settings I could see.  IntelliJ 14, as well as [many](https://github.com/sindresorhus/editorconfig-sublime) [other](https://github.com/sindresorhus/atom-editorconfig) [IDEs](https://github.com/ncjones/editorconfig-eclipse)/[editors](https://github.com/editorconfig/editorconfig-notepad-plus-plus) support [this file](http://editorconfig.org/).  ![screen shot 2015-03-18 at 07 42 13](https://cloud.githubusercontent.com/assets/2972876/6707949/5f1c8af4-cd42-11e4-924a-2e128038c464.png)","closed","C-infra,","ddavison","2015-03-18T11:46:49Z","2015-03-24T15:27:49Z"
"","360","Python Selenium 2.45 appears broken with Firefox 36.0.4","Attempts to start the driver with  self.driver = webdriver.Firefox()  fails with   ``` text ERROR:root:Message: ""Can't load the profile. Profile Dir: c:\\users\\martin~1\\appdata\\local\\temp\\tmpldmwnd Firefox output: None""  Traceback (most recent call last):   File ""C:\Python\SeaMonsters\test\acceptance\__init__.py"", line 63, in setUp     self.driver = webdriver.Firefox()   File ""C:\Python\SeaMonsters\env\lib\site-packages\selenium\webdriver\firefox\webdriver.py"", line 59, in __init__     self.binary, timeout),   File ""C:\Python\SeaMonsters\env\lib\site-packages\selenium\webdriver\firefox\extension_connection.py"", line 47, in __init__     self.binary.launch_browser(self.profile)   File ""C:\Python\SeaMonsters\env\lib\site-packages\selenium\webdriver\firefox\firefox_binary.py"", line 64, in launch_browser     self._wait_until_connectable()   File ""C:\Python\SeaMonsters\env\lib\site-packages\selenium\webdriver\firefox\firefox_binary.py"", line 108, in _wait_until_connectable     self.profile.path, self._get_firefox_output())) ```","closed","I-needs investigation,","Martin-Spamer","2015-03-23T13:57:17Z","2019-08-21T16:09:37Z"
"","53","[python binding] attach to raised exception all possible stacktrace info","Attach to raised exception in python binding all possible stacktrace info. It's useful when something wrong inside java/js code and simple method and file name from top of stack is not enough.  Format of exception is similar with dotnet and js formats.  CLA as Alex Savchuk signed.","closed","","alex-savchuk","2013-04-16T01:48:34Z","2013-04-19T12:27:05Z"
"","512","Check before opening a directory as a file","At least on Windows 7 with Python 2.7.9, trying to run Firefox with an extension raises an IOError 13 exception, because it tried to open a directory path using ""wb"". This change performs a check before opening the file.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/512)","closed","C-py,","cezarelnazli","2015-05-01T12:56:52Z","2019-11-29T11:28:29Z"
"","786","Update link to ChromeDriver in WebDriverJs wiki","At https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs, https://code.google.com/p/chromedriver/downloads/list should be http://chromedriver.storage.googleapis.com/index.html","closed","","dandv","2015-07-15T10:23:18Z","2019-08-21T08:09:51Z"
"","128","Updated automatic make application ""go"" to use /bin/env not static bash ...","As title suggests","closed","","PaulGWebster","2013-10-23T19:24:13Z","2013-10-23T19:49:41Z"
"","6","Added the new ""requireWindowFocus"" capability to CapabilityType.","As stated in title","closed","","Ardesco","2013-01-22T14:28:56Z","2014-07-24T09:41:57Z"
"","447","Multiple Browser Opening At Same Time instead of serial execution.....","As per my requirement I am using Selenium Grid v2.44 for automation.  -->I have created a Driver class where I have defined a method which contains all grid needed info and returns Webdriver driver.  ->In all my Java prog I am using this Driver to instantiate driver .  -->The problem which I am facing is that, Suppose if I have 5 Test classes and I am executing it through testng xml, its first opening 5 Browsers and then execute each class one by one.  I am unable to attach a text file so Please find below Driver class and A Java prog which explains the way I'm calling the Driver class.  Any help is appreciated.  Thanks  Driver Class : package com;  import java.net.MalformedURLException; import java.net.URL;  import org.openqa.selenium.Platform; import org.openqa.selenium.WebDriver; import org.openqa.selenium.remote.DesiredCapabilities; import org.openqa.selenium.remote.RemoteWebDriver;  public class Driver {  ``` public static WebDriver configureDriver() throws MalformedURLException {       String nodeURL = ""http://ip:5555/wd/hub"";      DesiredCapabilities dr = DesiredCapabilities.firefox();      dr.setBrowserName(""firefox"");      dr.setPlatform(Platform.WINDOWS);      WebDriver rmtDriver = new RemoteWebDriver(new URL(nodeURL), dr);      rmtDriver.manage().window().maximize();      return rmtDriver;   } ```  }  Test Java Prog :  package com;  import java.io.IOException; import java.util.Iterator; import java.util.Properties; import java.util.Set; import java.util.concurrent.TimeUnit;  import org.apache.log4j.Logger; import org.apache.poi.openxml4j.exceptions.InvalidFormatException; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.testng.Assert; import org.testng.SkipException; import org.testng.annotations.AfterClass; import org.testng.annotations.BeforeClass; import org.testng.annotations.Parameters; import org.testng.annotations.Test;  public class Test {  ``` public static WebDriver driver;   public SPM_Access_Control() throws IOException {      driver = Driver.configureDriver();   }  /*  * Check for Run-Type Match in configureBeforeClass   */  @BeforeClass  @Parameters({ ""runType"",""Env"" })  public static void configureBeforeClass(String run,String env) throws InvalidFormatException, IOException, InterruptedException{      System.out.println(""Before Class Execution""); }  @Test  public void test1() throws IOException, InterruptedException{   }         @AfterClass  public void screenShot() throws IOException {      System.out.println(""Close Browser Method Being Called"");          driver.quit();  }  ```  }","closed","","vaibhav44","2015-04-13T13:49:11Z","2019-08-21T14:09:58Z"
"","669","Include WIN10 in Platform enum","As it will be released soon, it has become necessary to include Windows 10 in Platform enum.","closed","E-easy,","varyvol","2015-06-16T09:27:58Z","2019-08-21T04:09:44Z"
"","59","Fix for WindowsUtils.kill()","As internally kill() try to kill the process tree the pattern might also match the child processes and thus risking trying to kill a process that was already killed. Calling killPID() on a dead process throws an exception, so catch that and ignore.  ( CLA Signed )","closed","","Zitrax","2013-04-29T10:17:49Z","2013-04-29T11:58:30Z"
"","45","Tweak FirefoxBinary to allow easier subclassing","As explained at http://pad.lv/1161336 , I have specific use case where I do _not_ want to use MOZ_NO_REMOTE so I can trap apps calling external urls (I don't control those apps).  This patch moves the setting of the env vars right ater the firefox_env is created instead of _start_from_profile_path (which is private as denoted by the leading _).  Doing so allows one to derive from FirefoxBinary which may also address other needs.  It will still be up to subclasser to provide the new class, this patch doesn't change the actual behaviour.","closed","","vilagithub","2013-04-08T14:12:55Z","2013-04-10T13:18:09Z"
"","247","Fix issue #7645 (auto complete suggestions in dropdown can not be selected in IDE)","As described in https://bugzilla.mozilla.org/show_bug.cgi?id=1005083 the nsIAutocompleteResult implementation is missing a method to work as intended.  Beside the mentioned ticket the following non duplicate marked tickets can be closed after applying #7720, #7741, #7737, #7736, #7733, #7724, #7645, #7732 and #7728.","closed","","mkresin","2014-08-15T09:22:04Z","2014-08-18T13:13:28Z"
"","305","IContextAware interface","Appium project needs this. If the similar interface exists at selenium-java so why it can't be at C#/.Net client. :)","closed","C-dotnet,","TikhomirovSergey","2015-01-06T13:41:20Z","2015-03-27T16:02:44Z"
"","301","IContextAware interface.","Appium project needs this. If the similar interface exists at selenium-java so why it can't be at C#/.Net client. :)","closed","","TikhomirovSergey","2014-12-21T16:58:47Z","2015-01-03T17:40:20Z"
"","754","selenium-java versions 2.45.0 and 2.46.0 are corrupted on maven central","Apologies if this is the wrong place for this... Let me know if it isn't and I'll repost elsewhere.  http://repo1.maven.org/maven2/org/seleniumhq/selenium/selenium-java/2.45.0/ http://repo2.maven.org/maven2/org/seleniumhq/selenium/selenium-java/2.45.0/  http://repo1.maven.org/maven2/org/seleniumhq/selenium/selenium-java/2.46.0/ http://repo2.maven.org/maven2/org/seleniumhq/selenium/selenium-java/2.46.0/  Currently contain a copy of the selenium-java jar file that does not contain any class files.","closed","","matthewgerrard","2015-07-09T16:55:30Z","2019-08-21T09:09:42Z"
"","2","Fuzzbal","Another test pull request that anyone can merge. Feel free!","closed","","krosenvold","2013-01-15T18:35:42Z","2013-01-15T18:47:59Z"
"","270","Use str instead of repr for exception msg","Another fix for exception message formatting.  Before:  ``` WebDriverException: Message: u""disconnected: Unable to receive message from renderer\n  (Session info: chrome=38.0.2125.104)\n  (Driver info: chromedriver=2.11.298611 (d1120fdf51badec2f7b63a96e19a58d4783de84d),platform=Mac OS X 10.10.0 x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 504 milliseconds\nBuild info: version: '2.43.1', revision: '5163bce', time: '2014-09-10 16:27:33'\nSystem info: host: 'mbp.local', ip: '10.37.129.2', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10', java.version: '1.7.0_55'\nSession ID: 6eb12a8df9b4e0841d298413114b6f2a\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities [{platform=MAC, acceptSslCerts=true, javascriptEnabled=true, browserName=chrome, chrome={userDataDir=/var/folders/59/335f0jxs7sg1rx0c9dzjjdzc0000gp/T/.org.chromium.Chromium.uBGbMS}, rotatable=false, locationContextEnabled=true, mobileEmulationEnabled=false, version=38.0.2125.104, takesHeapSnapshot=true, cssSelectorsEnabled=true, databaseEnabled=false, handlesAlerts=true, browserConnectionEnabled=false, nativeEvents=true, webStorageEnabled=true, applicationCacheEnabled=false, takesScreenshot=true}]"" ```  After:  ``` WebDriverException: Message: u""disconnected: Unable to receive message from renderer   (Session info: chrome=38.0.2125.104)   (Driver info: chromedriver=2.11.298611 (d1120fdf51badec2f7b63a96e19a58d4783de84d),platform=Mac OS X 10.10.0 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 504 milliseconds Build info: version: '2.43.1', revision: '5163bce', time: '2014-09-10 16:27:33' System info: host: 'mbp.local', ip: '10.37.129.2', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10', java.version: '1.7.0_55' Session ID: 6eb12a8df9b4e0841d298413114b6f2a Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{platform=MAC, acceptSslCerts=true, javascriptEnabled=true, browserName=chrome, chrome={userDataDir=/var/folders/59/335f0jxs7sg1rx0c9dzjjdzc0000gp/T/.org.chromium.Chromium.uBGbMS}, rotatable=false, locationContextEnabled=true, mobileEmulationEnabled=false, version=38.0.2125.104, takesHeapSnapshot=true, cssSelectorsEnabled=true, databaseEnabled=false, handlesAlerts=true, browserConnectionEnabled=false, nativeEvents=true, webStorageEnabled=true, applicationCacheEnabled=false, takesScreenshot=true}]"" ```","closed","","bayandin","2014-10-17T20:02:45Z","2014-10-18T12:58:05Z"
"","561","Allow access to local profiler logs.","An exception may be thrown if the WebDriver server does not recognize profiler logs. In this case, the user should be able to see the local profiler logs.","closed","","joshbruning","2015-05-21T21:36:28Z","2015-06-16T02:07:31Z"
"","364","WebDriver class does not accept a session_id","Allowing a session_id to be set on the WebDriver would allow reuse of an existing session. Tested working.  selenium/webdriver/remote/webdriver.py - class WebDriver  doc says: ""     - session_id - The session ID to send with every command.""  Added session_id=None to **init** ... self.session_id = None changed to self.session_id = session_id ... Changed to quash new session if a session id is specified         if session_id is None: # Do not start a new session if there is already a session id           self.start_session(desired_capabilities, browser_profile)","closed","C-py,","Pyrodyne","2015-03-24T17:42:33Z","2019-08-17T05:09:53Z"
"","578","FirefoxDriver not respecting sequential timeouts","After raising a TimeoutException, the Firefox Webdriver will fail to respect a second one immediately afterwards. The issue can be reproduced using the following code:  ``` python from selenium import webdriver from selenium.common.exceptions import TimeoutException import time  if __name__ == '__main__':     driver = webdriver.Firefox()     driver.set_page_load_timeout(5)     for i in xrange(0, 10):         try:             t1 = time.time()             driver.get('http://deelay.me/20000/http://www.google.com')             driver.save_screenshot('/root/screen')             t2 = time.time()             print 'finished ' + str(i)             print t2-t1         except TimeoutException:             print 'caught timeout ' + str(i)     driver.quit() ```  The first iteration will properly timeout after 5 seconds, while the second iteration will not complete until the page fully loads (intentionally delayed by 20 seconds in the example).   This will cause Selenium to hang completely if it encounters a page that never loads (such as real time data that continuously polls) provided it has already timed out once before.","closed","D-firefox,","rvazarkar","2015-05-27T15:58:16Z","2019-08-17T19:09:51Z"
"","382","Windows7-SeleniumIDE2.9.0-Javascript errors","After installing a new version of IDE (2.9.0) on FF 36.0.4 on a windows seven machine, I'm am getting an endless stream of error popups, if I open the actions or the options drop-down. I am also seeing what another user reported: ""Table view is not available with this format""  Examples below: 1) There was an unexpected error. Msg: TypeError: editor.app is undefined Url: chrome://selenium-ide/content/editor.js, line: 1007, column: 74 Editor.prototype.onPopupOptions@chrome://selenium-ide/content/editor.js:1007:75 onpopupshowing@chrome://selenium-ide/content/selenium-ide.xul:1:1 2) There was an unexpected error. Msg: TypeError: this.app is undefined Url: chrome://selenium-ide/content/editor.js, line: 1054, column: 2 Editor.prototype.getTestCase@chrome://selenium-ide/content/editor.js:1054:3 Editor.prototype.tabSelected@chrome://selenium-ide/content/editor.js:601:7 onselect@chrome://selenium-ide/content/selenium-ide.xul:1:22 set_selectedIndex@chrome://global/content/bindings/tabbox.xml:406:15 set_selectedItem@chrome://global/content/bindings/tabbox.xml:431:34 _selectNewTab@chrome://global/content/bindings/tabbox.xml:476:11 onxblmousedown@chrome://global/content/bindings/tabbox.xml:771:11 ![seleniumscreenshot](https://cloud.githubusercontent.com/assets/11681946/6870877/31a2bbcc-d475-11e4-87ad-56ac9d0e3167.JPG)","closed","I-defect,","dharris2","2015-03-27T15:34:31Z","2019-08-18T06:09:50Z"
"","30","Add support for disabled fieldset","Adds support in bot.dom.isEnabled for inheriting disabled from a fieldset,as specified http://www.w3.org/TR/html5/forms.html#the-fieldset-element  I have signed the CLA","closed","","twalpole","2013-03-15T23:40:05Z","2014-07-03T15:17:34Z"
"","499","Fixes #498: Handle long type variable in send_keys","Adds handling for long type variable in send_keys. In Python 3, redefine long to int to maintain compatibility.  I have signed CLA.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/499)","closed","C-py,","kivipe","2015-04-28T06:26:17Z","2020-03-10T13:22:13Z"
"","172","Cleaning up testShouldDoNothingIfThereIsNothingToGoBackTo","Addressed comments in https://github.com/SeleniumHQ/selenium/pull/170 in a new 1-commit branch.","closed","","sevaseva","2014-02-25T03:48:32Z","2014-07-03T02:40:33Z"
"","82","[Python] Adding the ability to redirect firefox process output to file. Fixes iss...","Adding the ability to redirect firefox process output to file. Fixes issue 5609.","closed","","jayakumarc","2013-05-24T16:39:51Z","2014-07-31T14:44:20Z"
"","68","Adding node info #4953","Adding host info into the exception coming from the node, so people using the grid can know which node was executing the script wen it blew up  Fixing #4953","closed","","dimacus","2013-05-09T14:46:27Z","2014-06-30T15:05:44Z"
"","76","[Python] Adding string representations to Color","Adding both official and informal string representations to Color object.","closed","","jayakumarc","2013-05-18T17:24:33Z","2013-05-22T19:32:34Z"
"","168","Adding a LaunchApp command to Chrome specific webdriver client.","Adding a LaunchApp command for the Chrome specific Java/Python webdriver clients, which is supported by chromedriver 2.9 and above.  Many of our users use the client code here, and this will make it easier for Chrome app developers be able to test their apps using chromedriver.","closed","","richardrb","2014-02-19T17:59:21Z","2015-08-06T09:03:13Z"
"","81","Update webdriver.js","Added: getSelectOptions keyPress doubleClick isEditable dragAndDrop dragAndDropToObject addSelection removeSelection mouseDown mouseUp selectWindow selectPopUp selectFrame mouseOver getElementPositionTop contextMenu getEval getSelectedValue getSelectedLabel waitforPopup","closed","","phasze","2013-05-23T17:26:55Z","2014-06-15T15:40:15Z"
"","80","Updated cs-wd.js and webdriver.js of Se IDE","added waitForPopup function to C#  added mainWindow variable to C# because I've noticed the main window doesn't always stay an index 0.  fixed WDAPI.Element.prototype.select  added a function to fix javascript stuff.  added: contextMenu switchWindow selectPopup switchFrame SelectedOption location getElementPositionTop MoveToElement mouseDown mouseUp dragAndDrop isEditable doubleClick keyPress dragAndDropOffset","closed","C-ide,","phasze","2013-05-23T17:26:44Z","2017-09-06T06:47:11Z"
"","132","Support for user specified Safari binary.","Added support for defining specific browser binary to SingleBrowserLocator.  Updated SafariOptions and SafariDriverCommandExecutor to capture and pass on additional binary information to the locator.","closed","","superafroman","2013-11-02T12:29:06Z","2013-11-13T20:02:33Z"
"","235","Added new tests for some ExpectedCondition util.","Added new tests for some ExpectedCondition util and added the ExpectedConditionsTest to the selenium test execution. Added tests for following ExpectedConditions class method: - visibilityOfAllElementsLocatedBy - visibilityOfAllElements - visibilityOf - textToBePresentInElementLocated - elementSelectionStateToBe","closed","","menonvarun","2014-07-08T07:32:25Z","2014-10-18T14:25:27Z"
"","100","[Python] Add methods clear for actions","Added method `clear` for `ActionChains` and `TouchActions` to clear stored actions. It does not break backward compatibility and design. As a continuation of issues #99.  CLA signed as Alexander Bayandin","closed","","bayandin","2013-07-27T09:59:32Z","2014-06-28T01:35:43Z"
"","233","Added isDisplayed stale check on error in IEDriver","Added logic to check if the element is valid when an error calling isDisplayed, so that we can return a stale error instead of an unknown error for IEDriver","closed","D-IE,","amuraco","2014-06-27T03:21:02Z","2017-11-21T20:47:12Z"
"","85","Additional ExpectedConditions","Added a couple of ExpectedConditions to check for: - The visibility of all WebElements found by a locator - The visibility of all WebElements in a list","closed","","Ardesco","2013-05-29T17:20:54Z","2013-05-30T05:45:50Z"
"","331","Two new locators: ByAll and ByAny","add two new locators, ByAll and ByAny. ByAny -> select an element that matches _any_ of the input criteria (i.e. what ByAll does in Java selenium who got their names backwards) ByAll -> select an element that matches _all_ of the input criteria  The distinction to ByChained is that ByChained selects child elements while ByAll/ByAny select on the same element.  Detailed use case: we use custom selectors (provided by protractor.net) which allow to filter based on angular-specific aspects (by model, binding, ...), which is the prefered way of locating elements. However, we have some bindings which are used multiple times, so ""by model"" does not give unique results. Being able to say ""by model and also has to be a div"" would greatly help in those cases.","closed","C-dotnet,","FrankyBoy","2015-03-13T09:33:13Z","2015-03-26T22:30:02Z"
"","632","@NotYetImplemented test annotation","Add test annotation @NotYetImplemented  This feature is meant to be used with test classes with  `@RunWith(SeleniumTestRunner.class)` It makes the runner executes the test method, and if the method fails (as expected) then the build will be green, and if the method succeeds, then the build is red complaining ""Test is marked as @NotYetImplemented but already works"".  This feature ensures that anything marked with `@NotYetImplemented` is still not implemented, and it is helpful to make the test suite annotations correct.  This commit applies it to tests in TypingTest running with HtmlUnit (which were previously `@Ignore`), but it can be applied to other classes or drivers.","closed","C-java,","asashour","2015-06-09T06:42:24Z","2015-06-27T16:38:15Z"
"","50","[updated] Add new and old capabilities/properties support to InternetExplorerDrive...","Add new and old capabilities/properties support to InternetExplorerDriver. Updated to support changes in arguments names etc.  What's done: - add all capabilities names into InternetExplorerDriver - unify all constructors of InternetExplorerDriver    - no changes in method access and parameters for compatibility    - add max customized constructor    - add support for all IEDriverServer-related capabilities   - add support for all IEDriverServer-related capabilities as properties - fix potential problems with file paths contains spaces  This PR fixes #4525 and partially #4287 issues.  the CLA as Alex Savchuk on behalf of Mail.Ru has been signed.","closed","","alex-savchuk","2013-04-11T22:22:10Z","2014-06-15T15:51:01Z"
"","41","Add new and old capabilities/properties support to InternetExplorerDriver.","Add new and old capabilities/properties support to InternetExplorerDriver.  What's done: - add all capabilities names into InternetExplorerDriver - unify all constructors of InternetExplorerDriver   *\* no changes in method access   *\* add max customized constructor   *\* add support for all IEDriverServer-related capabilities - add support for all IEDriverServer-related capabilities as properties - fix potential problem with log file path contains spaces  This fixes #4525 and partially #4287 issues.  the CLA as Alex Savchuk on behalf of Mail.Ru has been signed.","closed","","alex-savchuk","2013-04-06T21:58:00Z","2013-04-11T22:23:25Z"
"","647","frame switch with frameindex to ExpectedConditions","Add frame switchTo with frameIndex to ExpectedConditions. This modification is necessary so that WebDriverWait can use this mode to switch frames","closed","C-java,","tbuka","2015-06-11T09:10:14Z","2015-06-18T15:19:33Z"
"","611","Update .xml in .gitattributes","Add ""*.xml"" in .gitattributes as ""text""  Some .xml files in HEAD currently have different EOL styles, and it can cause commits to span the whole file because of this. It is recommended to unify the ending, and it can be ""eol=lf"" if needed","closed","","asashour","2015-06-04T16:25:49Z","2015-06-04T16:39:31Z"
"","503","IEDriver's Element.isDisplayed() should ignore opacity","According to [W3C spec draft](https://w3c.github.io/webdriver/webdriver-spec.html#isdisplayed) `isDisplayed` method should not take opacity into account. This is true for Firefox and Chrome drivers, [`checkShown_`](https://github.com/SeleniumHQ/selenium/blob/0a9cc30d576c7290dcd54ccfd54aff27058192ff/javascript/atoms/action.js#L52-L57) method in atoms also explicitly ignores opacity.  But for IEDriver [this is not the case](https://github.com/SeleniumHQ/selenium/blob/master/cpp/iedriver/Element.cpp#L103). `ignoreOpacity` value was changed when fixing [#6827](https://code.google.com/p/selenium/issues/detail?id=6827), but I believe it was a mistake: this change had made IEDriver implementation inconsistent with other drivers and current spec draft.","closed","","SevInf","2015-04-28T15:21:03Z","2019-08-21T14:09:40Z"
"","184","Exposed RemoteWebDriver.SessionId getter as public property as in java b...","Accepted SLA.","closed","C-dotnet,","gbulicanu","2014-03-13T03:07:37Z","2015-03-27T00:58:20Z"
"","495","Issue with Grid2 wiki page","About halfway down under the Configuring Nodes by Command Line section, there's an explanation for a piece of code or command that will start 11 browsers, but the actual code does not precede this.","closed","","drobson1005","2015-04-27T14:56:37Z","2019-08-21T11:09:41Z"
"","319","Improve ByCssSelector#toString","A very small thing.  > Change the string to a more meaningful ""cssSelector"". > It is also more consistent with the other By's #toString methods.","closed","","alb-i986","2015-02-25T21:46:57Z","2015-07-09T00:50:05Z"
"","181","Make aliases actually be aliases, removing the need to flag them as such.","A small and extremely pedantic change that removes the need to flag 'aliases' as duplicates of other, already listed keys.","closed","","colons","2014-03-06T22:54:09Z","2014-03-06T23:28:04Z"
"","641","Timeout in RemoteConnection added.","A really frequent issue with tests is that they hang for several hours on opening OpenerDirector. Need to have ability to set request timeout. So, now we could use:  ``` command_executor = RemoteConnection(WebDriverConfig.remote_hub, timeout=explicit_wait_timeout * 10) webdriver = remote.WebDriver(command_executor=command_executor) ```","closed","C-py,","kesarevs","2015-06-10T13:22:25Z","2015-07-24T11:06:03Z"
"","323","Fix issue #8564.","`io.rmDir()` is now tries again on error after short timeout, until success or max attemps (5) reached.  CLA is signed.","closed","C-nodejs,","oct8cat","2015-03-04T12:29:40Z","2015-03-05T08:14:09Z"
"","365","clearElement atom should able to clear  elements","`el.value = null`, where `el` is an `` element, is a legal action in content JavaScript.  The `clearElements` atom should be allowed to be used to clear the value.  This would involve changing the definition of `isEditable`, possibly removing it altogether, from https://github.com/SeleniumHQ/selenium/blob/master/javascript/atoms/action.js#L75.","closed","I-papercut,","andreastt","2015-03-24T17:43:29Z","2019-08-21T13:09:40Z"
"","672","IEDriver doesn't move cursor to (0, 0) first time","``` js var browser = wd.promiseRemote(...); ... var body = browser.elementByCssSelector('body'); wd.moveTo(body, 0, 0); // Does nothing! ```  The problem is next: `InputManager` object on construction inits last known mouse position as (0, 0). We are trying to move to (0, 0). And in such case there is a false-positive check: https://github.com/SeleniumHQ/selenium/blob/master/cpp/iedriver/InputManager.cpp#L500","closed","D-IE,","j0tunn","2015-06-16T12:48:43Z","2019-08-21T09:09:44Z"
"","282","Fix most (I hope) instances of Unable to establish a connection with SafariDriver","``` Issues: #7933, #7963, #7974, 7801  Refactor how the extension installation happens by splitting the installer into multiple Platform specific installers. If the installation still fails, provide a much more detailed explanation as to why the failure occurred and suggestions how to fix it. ```  Tested on: - OSX 10.8.5 - OSX 10.10 - Win 7 Safari 5.1.7","closed","","dimacus","2014-11-14T17:03:33Z","2014-11-16T16:50:35Z"
"","208","Unified browser locator","``` /Library/Java/JavaVirtualMachines/jdk1.7.0_51.jdk/Contents/Home/bin/java -ea -Didea.launcher.port=7532 ""-Didea.launcher.bin.path=... org.openqa.selenium.browserlaunchers.locators.BrowserInstallationTest,testBrowserInstallations /Applications/Firefox.app/Contents/MacOS/firefox-bin /Applications/Google Chrome.app/Contents/MacOS/Google Chrome /Applications/Safari.app/Contents/MacOS/Safari  Process finished with exit code 0 ```  Test passes with all three browsers located, and switching `assertTrue` to `assertFalse` fails.","closed","","ddavison","2014-04-17T21:45:36Z","2014-04-20T23:59:33Z"
"","577","captial letter in middle of the name then it takes it as method","```         public void UserTypesIntoField(String what, String where)         {             where  = where.Replace(""'"", """");             instance.Type(GetLocator(             where.Replace("" "", """"), textFieldLocators), what);         } ```  ---  If the textbox ID have a captial letter in middle of the name then it takes it as method so we can replace this using this replace string to solve the problem","closed","","amit1984","2015-05-27T12:02:50Z","2019-08-21T12:09:54Z"
"","557","remove invalid JavaScript doc block statement","`@package` is invalid and causes errors on documentation generators  CLA signed","closed","","eddiemonge","2015-05-20T16:41:12Z","2015-05-26T19:50:10Z"
"","794","Running webdriver from an npm script fails","`$ webdriver-manager start --standalone` works for me, but `$ npm run wd` doesn't with this setup in my package.json:  ``` ""scripts"": {     ""test-unit"": ""karma start karma.conf.js"",      ""update-wd"": ""webdriver-manager update"",     ""wd"": ""webdriver-manager start --standalone"",     ""test-e2e"": ""protractor protractor.conf.js""   } ```  I get this error message:  ``` $ npm run wd  > @0.1.0 wd  > webdriver-manager start --standalone  Selenium Standalone is not present. Install with webdriver-manager update --standalone  npm ERR! Darwin 14.4.0 npm ERR! argv ""node"" ""/usr/local/bin/npm"" ""run"" ""wd"" npm ERR! node v0.12.7 npm ERR! npm  v2.11.3 npm ERR! code ELIFECYCLE npm ERR! @0.1.0 wd: `webdriver-manager start --standalone` npm ERR! Exit status 1 npm ERR! npm ERR! Failed at the @0.1.0 wd script 'webdriver-manager start --standalone'. npm ERR! This is most likely a problem with the  package, npm ERR! not with npm itself. npm ERR! Tell the author that this fails on your system: npm ERR!     webdriver-manager start --standalone npm ERR! You can get their info via: npm ERR!     npm owner ls  npm ERR! There is likely additional logging output above.  npm ERR! Please include the following file with any support request: npm ERR!      ```","closed","","ilanbiala","2015-07-15T17:48:13Z","2019-08-20T20:10:00Z"
"","416","#401 Copyright Uniformity for Ruby","[The first commit](https://github.com/SeleniumHQ/selenium/commit/255a85ee18edc3bf8931dc27c339b8f26f0e66c5) is the one that has the things I'm not sure about.  - I removed an attribution from the text of a file and put it in authors. I can put that back if that's the wrong thing to do. - Also, I didn't add it, but because the Ruby code is often distributed in a gem file that doesn't include the rest of the selenium code, should it have its own NOTICE file? The applicable copyright line is currently in the README file.  The changes in the last commit were automatically made by the `./go copyright:update` command after the  second commit.  I manually went through each file that was updated and verified that it did not contain any other references to copyrights or licenses.","closed","","titusfortner","2015-04-06T00:14:47Z","2015-07-02T01:43:30Z"
"","339","Grid2. SelfRegisteringRemote. Incorrect processing of the ""timeout"" optional parameter","[Selenium Grid2 Wiki](https://github.com/SeleniumHQ/selenium/wiki/Grid2#optional-parameters) page says:  > -timeout 30 (300 is default) The timeout in **seconds** ...  But in [SelfRegisteringRemote.java](https://github.com/SeleniumHQ/selenium/blob/2997a70d5872ff1f228a833f062ea32af05dca6b/java/server/src/org/openqa/grid/internal/utils/SelfRegisteringRemote.java#L97) source file, at line 97 we have divide by 1000 as if we're using the value of the ""-timeout"" parameter in milliseconds:  ``` java     if (hubParameters.has(CLIENT_TIMEOUT)){         int timeout = hubParameters.get(CLIENT_TIMEOUT).getAsInt() / 1000;         remoteControlConfiguration.setTimeoutInSeconds(timeout);     } ```  We should either to update source code or documentation.","closed","I-defect,","shimkiv","2015-03-16T21:18:58Z","2019-08-20T16:10:02Z"
"","220","allow custom ErrorHandler for HTTPCommandExecutor","[committer agreement signed] I recently wrote a client which extends the RemoteWebDriver. There was really good support in place for adding new Commands to the HTTPCommandExecutor, but adding custom error codes was much more cumbersome.  Here I added a setErrorHandler() method to the HTTPCommandExecutor. I felt that adding is as a parameter to the constructor would unnecessarily create way too many permutations of constructor arguments.  I also added a new constructor for the ErrorHandler class which accepts a custom ErrorCodes object. There weren't so many constructors on the ErrorHandler class, so thought it more appropriate than adding a setter method.  Are these changes all right? Something a bit more drastic, but possibly cleaner would be to make an Error object which is essentially a triplet {code, state message, java exception class}. Then the ErrorCodes class can be easily extensible, and just consist of a collection of Error objects rather than having hardcoded select..case statements.","closed","","Jonahss","2014-05-15T21:06:45Z","2014-05-27T22:36:50Z"
"","150","Allow retry in http connection to remote webdriver","[#6690 phantomjs with selenium 2.38.1 fails with BadStatusLine exception](https://code.google.com/p/selenium/issues/detail?id=6690)  PhantomJS+GhostDriver as of PhantomJS version 1.9.2 does not enable http keep-alive which results in failure to communicate with the webdriver after the first request.  Other implementations of webdriver servers may also close the connection after a timeout - in which case a retry will ensure that the next command doesn't fail.","closed","","alisaifee","2013-12-11T01:03:42Z","2014-06-17T20:21:42Z"
"","4","Update iphonedriver to use WD_SUCCESS","@lukeis and I talked about this; apparently SUCCESS should be WD_SUCCESS now.   I've signed the CLA and contributed before.","closed","","maudineormsby","2013-01-17T01:08:24Z","2014-06-17T11:00:17Z"
"","180","Add constructor overload to ChromeDriver.cs and InternetExplorerDriver.cs","@jimevans  Add constructor overload to `ChromeDriver.cs` and `InternetExplorerDriver.cs`.  This new constructor takes in a single parameter, `*DriverService`, which has been implemented in `PhantomJSDriver`, but not yet in `ChromeDriver` and `InternetExplorerDriver`.  https://github.com/SeleniumHQ/selenium/blob/master/dotnet/src/webdriver/PhantomJS/PhantomJSDriver.cs#L94  CLA signed.","closed","C-dotnet,","yizeng","2014-03-04T08:26:48Z","2015-03-26T20:00:22Z"
"","494","IE driver 32bits getWindowHandles return empty result","32bits IE driver returns empty result when trying to getWindowHandles. I encountered this issue with the following code. (64bits IE driver works well.)  private void refreshWindowsList(@Nullable WebDriver webD) {         if (null == webD)             throw GlobalUtils.createNotInitializedException(""Web Driver"");         Set allWinHandles = webD.getWindowHandles();         if (allWinHandles.isEmpty()) throw GlobalUtils.createInternalError(""Selenium getWindowsHandles error."");         for (String winH : allWinHandles) {","closed","","peidong-hu","2015-04-27T03:55:41Z","2019-08-21T09:09:35Z"
"","187","Regard all modifier keys in SingleKeyAction","26814a1b53fc added META, but COMMAND and LEFT_\* were left out as they were misinterpreted as aliases, which they aren't (they only use the enum definition to get the same char code of the keys).  This time added a test case to avoid similar issues in the future.  Fixes https://code.google.com/p/selenium/issues/detail?id=4843","closed","","zch","2014-03-17T11:44:03Z","2014-06-26T20:04:20Z"
"","575","SQLException while running Testng test from command  prompt","1.I have created one testNG test in eclips and in which i am using JDBC connection to connect to Excel as DB. 2.This process is working fine when i am running the test from eclips as testNG test using testng xml file. 3.But when i run the same test from command prompt , it is giving below error. Please let me know why the test is failing from command prompt.  Error: java.sql.SQLException: [Microsoft][ODBC Driver Manager] Data source name not fou nd and no default driver specified         at sun.jdbc.odbc.JdbcOdbc.createSQLException(Unknown Source)         at sun.jdbc.odbc.JdbcOdbc.standardError(Unknown Source)         at sun.jdbc.odbc.JdbcOdbc.SQLDriverConnect(Unknown Source)         at sun.jdbc.odbc.JdbcOdbcConnection.initialize(Unknown Source)         at sun.jdbc.odbc.JdbcOdbcDriver.connect(Unknown Source)         at java.sql.DriverManager.getConnection(Unknown Source)         at java.sql.DriverManager.getConnection(Unknown Source)         at com.Framework.OEMAuto.Generics.GC10_ExcelDBC.GMExcelDB(GC10_ExcelDBC. java:39)         at com.Framework.OEMAuto.Methods.AddTargetPageMeth.TMSelectMenu(AddTarge tPageMeth.java:25)         at com.Framework.OEMAuto.Test.TC2_OEMAuto_AddTarget.GMSearchBook(TC2_OEM Auto_AddTarget.java:36)         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocat ionHelper.java:85)         at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)         at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)         at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)         at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWork er.java:124)         at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)         at org.testng.TestRunner.privateRun(TestRunner.java:767)         at org.testng.TestRunner.run(TestRunner.java:617)         at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)         at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)         at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)         at org.testng.SuiteRunner.run(SuiteRunner.java:254)         at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)         at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)         at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)         at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)         at org.testng.TestNG.run(TestNG.java:1057)         at org.testng.TestNG.privateMain(TestNG.java:1364)         at org.testng.TestNG.main(TestNG.java:1333)","closed","","narasimha678","2015-05-27T10:40:36Z","2019-08-21T12:09:53Z"
"","598","Each testcase in a testsuite is opening a new window for execution instead of continuing the execution in the previously opened window","1. I am running the selenium-standalone-server-2.45.0 on my machine (Ubuntu-14.04). 2. Configured selenium ide to play the test cases (previously recorded in firefox) in chrome (i.e Options -> options -> webdriver -> enabled webdriver playback, chrome) 3. The testsuite consists of 3 testcases. When the testsuite was played, each testcase opened a new chrome browser window for execution. But expected was that all 3 testcases had to be executed in the window opened by the first testcase.(As happens when executed in firefox).  Is it possible to execute all the 3 testcases in the same window opened by the 1st testcase? If yes, what changes i have to do in configuration or in my selenium ide command?","closed","C-ide,","chaitramv","2015-06-02T10:30:39Z","2019-08-17T18:09:51Z"
"","738","HtmlUnitDriver: add .getBrowserVersion()",".getBrowserVersion() is helpful to know what the currently simulated browser is.  This commit also changes TestUtilities.isFirefox() , .isInternetExplorer() and .isChrome() to return true if the underlying HtmlUnit BrowserVersion is FF/IE/Chrome.","closed","C-java,","asashour","2015-07-06T06:51:41Z","2015-07-06T18:25:00Z"
"","213","Eclipse Compiler Update for Java8 support","./go does not work using JDK8 since the Eclipse compiler contains a bug. (See https://bugs.eclipse.org/bugs/show_bug.cgi?id=396000, https://github.com/processing/processing/issues/2260) Building on JDK7 works fine.  This patch contains a newer Eclipse compiler, which contains the bugfix for JDK8.  Tested on Mac OSX 10.9.2 with JDK8u5","closed","","weitzj","2014-05-03T17:56:39Z","2014-06-13T11:04:31Z"
"","748","java: clean up ByAll: remove #findElement","..as it duplicates the super version.  There is one difference actually. `By#findElement` checks the return of #findElements for null, in which case throws NoSuchEl. Whereas ByAll#findElement didn't. Unless it was meant, it shouldn't be a concern.","closed","C-java,","alb-i986","2015-07-08T23:07:09Z","2021-04-03T16:36:38Z"
"","269","Print severe stack trace to log, so it is not lost in case user has acce...","...ss to the log but not the console.","closed","","dimacus","2014-10-15T17:53:28Z","2014-10-18T14:04:33Z"
"","490","Closes #489 avoid using getHostName() function because it can be very sl...","...ow on some networks","closed","C-java,","asolntsev","2015-04-24T15:36:54Z","2017-09-06T08:56:31Z"
"","177","Add system property for setting the default value for silent mode in chr...","...omedriver.  This is analogous to the existing system property for controlling verbose mode.  Note: I've signed and submitted the CLA.","closed","","tobli","2014-03-02T23:22:56Z","2014-03-03T23:07:42Z"
"","289","Add debugger_address option to the ChromeDriver options list to optional...","...ly instruct ChromeDriver to wait for the target devtools instance to be started at a given host:ip  (I have signed the CLA)","closed","","AlexandreAbreu","2014-11-21T17:50:25Z","2014-11-26T01:49:10Z"
"","8","Enhancement #5078 - Allow :desired_capabilities capabilities to be speci...","...fied for PhantomJS so that phantomjs.page.settings.\* can be specified  The phantomjs.page.settings.\* settings are passed in as part of the Capabilties object, so e.g. we now can change the user-agent like so:    capabilities = Selenium::WebDriver::Remote::Capabilities.phantomjs(""phantomjs.page.settings.userAgent"" => ""Custom Agent/1.0"")   Selenium::WebDriver.for :phantomjs, :desired_capabilities => capabilities","closed","","kuahyeow","2013-01-29T11:59:05Z","2015-12-22T08:07:26Z"
"","254","rename BaseExprHasPredicates.prototyps to BaseExprHasPredicates.prototyp...","...e  Error in naming the javascript ""prototype"" property","closed","","JacquesBonet","2014-09-08T23:36:09Z","2014-09-09T11:17:31Z"
"","293","Fix issue #8232. Changed the ExecuteJavaScript extension method to corre...","...ctly detect if the script result is convertible to the generic type.","closed","","chrisblock","2014-11-30T00:41:38Z","2014-12-23T18:50:01Z"
"","135","Issue 6109:Remove manual checking of non-breaking space in Select.Select...","...ByVisibleText","closed","","artkoshelev","2013-11-11T19:04:44Z","2013-11-11T19:39:50Z"
"","226","Issue 7443:	Forwarded content remains null for CommandListener afterComm...","...and handler  Link to issue: https://code.google.com/p/selenium/issues/detail?id=7443  I confirm I have signed the SFC Individual Contributor License Agreement","closed","","ediweissmann","2014-06-05T18:02:15Z","2014-06-28T20:12:39Z"
"","26","[Python] Adding ability to pass service args to PhantomJS. Fixes issue #...","...5129.  Signed the CLA and contributed couple of times in the past.","closed","","jayakumarc","2013-03-11T15:51:21Z","2014-06-16T18:55:37Z"
"","329","Extract method `Select.escapeQuotes` to a separate public class Quotes","... to enable reusing this code in other classes and frameworks.  Also improved code and tests.","closed","C-java,","asolntsev","2015-03-12T22:45:40Z","2015-03-16T11:06:24Z"
"","591","Closes #489 resolve host/ip in a separate thread","... to avoid slowing down tests performance  Trigger this thread from 3 classes that most probably are loaded first: By, RemoteWebDriver, HtmlUnitDriver.  This should solve the issue https://github.com/SeleniumHQ/selenium/issues/489","closed","C-java,","asolntsev","2015-05-31T14:59:19Z","2017-08-04T20:58:46Z"
"","185","Making Python test webserver use host machines IP for testing instead of...","... localhost. This will allow for remote devices to be used in testing.  Updated all tests to use new method.","closed","","glasspear","2014-03-13T17:39:04Z","2014-06-28T00:38:38Z"
"","476","Remove unnecessary dependency and improve readability of checkPreference...","... in firefox Preferences.java  (CLA signed)","closed","","ROARy","2015-04-22T00:30:49Z","2015-04-23T01:16:41Z"
"","510","FirefoxDriver - Marionette - sendKeys with specials keys (SHIFT for instance) does not work","- Windows 7 32 - jdk 1.7.0_80 - selenium 2.45.0 - firefox 37.0.2  WebElement.sendKeys() does not work as expected when using FirefoxDriver with MarionetteConnection when you try to use Keys.SHIFT for instance.  ``` java public class Test {   static {     System.setProperty(""webdriver.firefox.marionette"", ""true"");     System.setProperty(""webdriver.firefox.bin"", ""C:/Program Files/Firefox/firefox.exe"");   }    public static void main(String... arg) throws MalformedURLException, InterruptedException {     FirefoxDriver driver = new FirefoxDriver();     try {       driver.navigate().to(new URL(""https://www.google.ca""));       WebElement elt = driver.findElementById(""lst-ib"");       elt.sendKeys(Keys.SHIFT, ""ab"");       Thread.sleep(10000L);     } finally {       driver.quit();     }   } } ```  > java -cp lib*;bin Test  will type '?ab'.  I have also found that running with UTF-8 encoding leads to a parsing error on firefox:  > java -Dfile.encoding=UTF-8 -cp lib*;bin Test  ``` Error parsing incoming packet: {""to"":""0"",""sessionId"":{""platform"":""WINNT"",""browserVersion"":""37.0.2"",""browserName"":""Firefox"",""XULappId"":""{ec8030f7-c20a-464f-9b0e-13a3a9e97384}"",""raisesAccessibilityExceptions"":false,""rotatable"":false,""appBuildId"":""20150415140819"",""takesElementScreenshot"":true,""version"":""37.0.2"",""platformVersion"":""37.0.2"",""platformName"":""WINNT"",""secureSsl"":false,""handlesAlerts"":false,""nativeEvents"":false,""device"":""desktop"",""takesScreenshot"":true},""name"":""sendKeysToElement"",""parameters"":{""id"":""{7e6c62bc-4bec-4ef7-b9e4-34548edcd16e}"",""value"":["""",""ab""] (SyntaxError: JSON.parse: end of data after property value in object at line 1 column 539 of the JSON data - JSONPacket.prototype.read@resource://gre/modules/commonjs/toolkit/loader.js -> resource://gre/modules/devtools/transport/packets.js:164:20 DebuggerTransport.prototype._processIncoming@resource://gre/modules/devtools/dbg-client.jsm -> resource://gre/modules/devtools/transport/transport.js:388:9 DebuggerTransport.prototype.onInputStreamReady resource://gre/modules/devtools/transport/transport.js:343:13 makeInfallible/ resource://gre/modules/devtools/DevToolsUtils.js:82:14 ) packets.js:169:0 Key event not available on some keyboard layouts: key=""c"" modifiers=""accel,alt"" ```  When I set webdriver.firefox.marionette to false everything works fine.","closed","D-firefox,","croudet","2015-04-30T16:44:33Z","2019-08-21T03:09:33Z"
"","372","Optimizing ByChained#findElement","- optimize complexity: instead of traversing the entire ""tree""   of partial WebElements found, only travers the left-most path - in case the bys list is empty, throw an exception with a more meaningful message  Not sure if you like the  ``` assert elem != null; ```  I seem to have some issues in running the tests. They are failing, even on master. I guess it must be due to my env (?). OSX 10.10.2, Java 1.8.0_40 Also tried java 6 but it didnt seem to help  ``` Compiling: //java/client/test/org/openqa/selenium:SmallTests as build/java/client/test/org/openqa/selenium/SmallTests.jar mkdir -p build/java/client/test/org/openqa/selenium/SmallTests.jar_temp Compiling 1 source file to /Users/alb/workspace/selenium/build/java/client/test/org/openqa/selenium/SmallTests.jar_temp Building jar: /Users/alb/workspace/selenium/build/java/client/test/org/openqa/selenium/SmallTests.jar rm -rf build/java/client/test/org/openqa/selenium/SmallTests.jar_temp ** Execute //java/client/test/org/openqa/selenium:SmallTests ** Execute //java/client/test/org/openqa/selenium:SmallTests:run Testing: //java/client/test/org/openqa/selenium:SmallTests mkdir -p build/test_logs Listening for transport dt_socket at address: 5005 Running org.openqa.selenium.SmallTests Exception in thread ""Thread-20"" org.openqa.selenium.WebDriverException: Thread safety error; this instance of WebDriver was constructed on thread main (id 1) and is being accessed by thread Thread-20 (id 35)This is not permitted and *will* cause undefined behaviour Build info: version: '2.45.0', revision: '17dc63a', time: '2015-03-26 03:09:18' System info: host: 'albs-MacBook-Air.local', ip: '192.168.0.25', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.2', java.version: '1.8.0_40' Driver info: driver.version: unknown     at org.openqa.selenium.support.ThreadGuard$WebDriverInvocationHandler.invoke(ThreadGuard.java:86)     at com.sun.proxy.$Proxy22.findElement(Unknown Source)     at org.openqa.selenium.support.ThreadGuardTest$1.run(ThreadGuardTest.java:44)     at java.lang.Thread.run(Thread.java:745) Tests run: 345, Failures: 0, Errors: 0, Time elapsed: 1.831 sec ** Invoke test_support (first_time) ** Invoke //java/client/test/org/openqa/selenium/lift:test:run (first_time) ** Invoke //java/client/test/org/openqa/selenium/lift:test ** Execute //java/client/test/org/openqa/selenium/lift:test:run Testing: //java/client/test/org/openqa/selenium/lift:test mkdir -p build/test_logs Listening for transport dt_socket at address: 5005 Running org.openqa.selenium.lift.SmallTests Tests run: 23, Failures: 0, Errors: 0, Time elapsed: 0.394 sec ** Invoke //java/client/test/org/openqa/selenium/support:SmallTests:run (first_time) ** Invoke //java/client/test/org/openqa/selenium/support:SmallTests (first_time) ** Invoke build/java/client/test/org/openqa/selenium/support/SmallTests.jar (first_time) ** Invoke //java/client/test/org/openqa/selenium/support:tests ** Invoke java/client/test/org/openqa/selenium/support/SmallTests.java (not_needed) ** Execute build/java/client/test/org/openqa/selenium/support/SmallTests.jar rm -rf build/java/client/test/org/openqa/selenium/support/SmallTests.jar_temp Exception `Errno::ENOENT' at org/jruby/RubyFile.java:1729 - No such file or directory - build/java/client/test/org/openqa/selenium/support/SmallTests.jar_temp Compiling: //java/client/test/org/openqa/selenium/support:SmallTests as build/java/client/test/org/openqa/selenium/support/SmallTests.jar mkdir -p build/java/client/test/org/openqa/selenium/support/SmallTests.jar_temp Compiling 1 source file to /Users/alb/workspace/selenium/build/java/client/test/org/openqa/selenium/support/SmallTests.jar_temp Building jar: /Users/alb/workspace/selenium/build/java/client/test/org/openqa/selenium/support/SmallTests.jar rm -rf build/java/client/test/org/openqa/selenium/support/SmallTests.jar_temp ** Execute //java/client/test/org/openqa/selenium/support:SmallTests ** Execute //java/client/test/org/openqa/selenium/support:SmallTests:run Testing: //java/client/test/org/openqa/selenium/support:SmallTests mkdir -p build/test_logs Listening for transport dt_socket at address: 5005 Running org.openqa.selenium.support.SmallTests Tests run: 181, Failures: 0, Errors: 0, Time elapsed: 1.158 sec Exception in thread ""Thread-1"" org.openqa.selenium.WebDriverException: Thread safety error; this instance of WebDriver was constructed on thread main (id 1) and is being accessed by thread Thread-1 (id 12)This is not permitted and *will* cause undefined behaviour Build info: version: '2.45.0', revision: '17dc63a', time: '2015-03-26 03:09:18' System info: host: 'albs-MacBook-Air.local', ip: '192.168.0.25', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.10.2', java.version: '1.8.0_40' Driver info: driver.version: unknown     at org.openqa.selenium.support.ThreadGuard$WebDriverInvocationHandler.invoke(ThreadGuard.java:86)     at com.sun.proxy.$Proxy20.findElement(Unknown Source)     at org.openqa.selenium.support.ThreadGuardTest$1.run(ThreadGuardTest.java:44)     at java.lang.Thread.run(Thread.java:745) ** Invoke //java/client/test/org/openqa/selenium/support:LargeTests:run (first_time) ** Invoke //java/client/test/org/openqa/selenium/support:LargeTests (first_time) ** Invoke build/java/client/test/org/openqa/selenium/support/LargeTests.jar (first_time) ** Invoke //java/client/test/org/openqa/selenium/support:tests ** Invoke java/client/test/org/openqa/selenium/support/LargeTests.java (not_needed) ** Execute build/java/client/test/org/openqa/selenium/support/LargeTests.jar rm -rf build/java/client/test/org/openqa/selenium/support/LargeTests.jar_temp Exception `Errno::ENOENT' at org/jruby/RubyFile.java:1729 - No such file or directory - build/java/client/test/org/openqa/selenium/support/LargeTests.jar_temp Compiling: //java/client/test/org/openqa/selenium/support:LargeTests as build/java/client/test/org/openqa/selenium/support/LargeTests.jar mkdir -p build/java/client/test/org/openqa/selenium/support/LargeTests.jar_temp Compiling 1 source file to /Users/alb/workspace/selenium/build/java/client/test/org/openqa/selenium/support/LargeTests.jar_temp Building jar: /Users/alb/workspace/selenium/build/java/client/test/org/openqa/selenium/support/LargeTests.jar rm -rf build/java/client/test/org/openqa/selenium/support/LargeTests.jar_temp ** Execute //java/client/test/org/openqa/selenium/support:LargeTests ** Execute //java/client/test/org/openqa/selenium/support:LargeTests:run Testing: //java/client/test/org/openqa/selenium/support:LargeTests mkdir -p build/test_logs Listening for transport dt_socket at address: 5005 Running org.openqa.selenium.support.LargeTests Mar 26, 2015 3:12:14 AM org.openqa.selenium.testing.JUnit4TestBase$1 starting INFO: >>> Starting selectByVisibleTextShouldNormalizeSpaces(org.openqa.selenium.support.ui.SelectLargeTest) 2015-03-26 03:12:14.709:INFO:osjs.Server:jetty-7.x.y-SNAPSHOT 2015-03-26 03:12:14.744:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler{/common,file:/Users/alb/workspace/selenium/common/src/web/} 2015-03-26 03:12:14.748:INFO:/common:Aliases are enabled 2015-03-26 03:12:14.749:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler{/javascript,file:/Users/alb/workspace/selenium/javascript/} 2015-03-26 03:12:14.751:INFO:/javascript:Aliases are enabled 2015-03-26 03:12:14.752:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler{/third_party/closure/goog,file:/Users/alb/workspace/selenium/third_party/closure/goog/} 2015-03-26 03:12:14.752:INFO:/third_party/closure/goog:Aliases are enabled 2015-03-26 03:12:14.752:INFO:osjsh.ContextHandler:started o.s.j.s.ServletContextHandler{/third_party/js,file:/Users/alb/workspace/selenium/third_party/js/} 2015-03-26 03:12:14.752:INFO:/third_party/js:Aliases are enabled 2015-03-26 03:12:14.778:INFO:osjs.AbstractConnector:Started SelectChannelConnector@0.0.0.0:34396 2015-03-26 03:12:14.996:INFO:osjus.SslContextFactory:Enabled Protocols [SSLv2Hello, TLSv1, TLSv1.1, TLSv1.2] of [SSLv2Hello, SSLv3, TLSv1, TLSv1.1, TLSv1.2] 2015-03-26 03:12:15.007:INFO:osjs.AbstractConnector:Started SslSocketConnector@0.0.0.0:20733 Tests run: 5, Failures: 0, Errors: 5, Time elapsed: 0.757 sec Mar 26, 2015 3:12:15 AM org.openqa.selenium.testing.JUnit4TestBase$1 finished INFO: > Starting multipleSelectShouldBePossibleIfMulitpleAttributeEmpty(org.openqa.selenium.support.ui.SelectLargeTest) Mar 26, 2015 3:12:15 AM org.openqa.selenium.testing.JUnit4TestBase$1 finished INFO: > Starting canListDecoratedElements(org.openqa.selenium.support.pagefactory.UsingPageFactoryTest) Mar 26, 2015 3:12:15 AM org.openqa.selenium.testing.JUnit4TestBase$1 finished INFO: > Starting testDecoratedElementsShouldBeUnwrapped(org.openqa.selenium.support.pagefactory.UsingPageFactoryTest) Mar 26, 2015 3:12:15 AM org.openqa.selenium.testing.JUnit4TestBase$1 finished INFO: > Starting canExecuteJsUsingDecoratedElements(org.openqa.selenium.support.pagefactory.UsingPageFactoryTest) Mar 26, 2015 3:12:15 AM org.openqa.selenium.testing.JUnit4TestBase$1 finished INFO:","closed","C-java,","alb-i986","2015-03-26T03:22:38Z","2021-06-04T09:12:19Z"
"","629","PY: Reuse RemoteDriver session if you know the session_id","- I have sign the CLA as aleivag@gmail.com *  PR: for python webdriver:   Sometimes one can want to re-use a RemoteDriver session and not creating a new session. this is useful in two scenarios:  1.- When the machine running the selenium script crash, and you need to resume where you left (assuming that the WebDriverServer has not crash) 2.- You can have a real user (RU1) interact with a service (S1) (like a webserver) and then have that service interact with the WebDriverServer (WDS1), in many many cases the service (S1) that the user interacts is being a load balancer, and there is no guarantee that the same service (S1) will always communicate with the (WDS1).  examples:  the normal way to create a remote webdriver is:  ``` from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities w1 = webdriver.Remote(command_executor='http://remotehost:8080/wd/hub', desired_capabilities=DesiredCapabilities.PHANTOMJS) ```  now, if i store w1.session_id and w1.capabilities y can reuse that same session, provided that the remotedriver is not dead,   ``` w2 =  webdriver.Remote(command_executor='http://remotehost:8080/wd/hub', desired_capabilities=DesiredCapabilities.PHANTOMJS, session_id=w1.session_id, capabilities=w1.capabilities) w2.get(""http://google.com"") print w1.current_url >>>  u'http://www.google.cl/?gfe_rd=cr&ei=coB1VbTQJNHcwATv84GAAQ' ```  technically i only need the session id, if we don't provide a capabilities at creation, the open_session function will query for that data.  the **force_new=True** in the open_session is there to maintain compatibility (if someone uses open_session to always create new sessions).","closed","C-py,","aleivag","2015-06-08T12:33:47Z","2020-03-10T13:23:33Z"
"","291","WebElement docstring fixes","- Fixed typos in docstrings - Made wording more consistent - Fixed some reST markup  This should fix https://code.google.com/p/selenium/issues/detail?id=8151.  I signed the CLA.","closed","","dbrgn","2014-11-27T12:57:00Z","2014-11-27T13:41:54Z"
"","179","Add alias for myself in .mailmap and update AUTHORS","- Add alias for myself in  `.mailmap`, so that preferred email address can show up in AUTHORS file from now on. - Re-generate AUTHORS file.  @andreastt","closed","","yizeng","2014-03-04T04:27:59Z","2014-06-15T11:11:21Z"
"","415","Java. Page Factory enhancement.","- Ability to use not only Webdriver to populate page object fields via method  ``` java public static  T initElements(SearchContext context, Class pageClassToProxy). ```  This change was done in order to simplify page object instantiation and population when there is the necessity to implement something that describes widget or repeatable element set nested in a root element. So if there is a class with constructors like follows:  ``` java public PageObject(Search context)  //or  public PageObject(WebElement rootElement) ```  and there is no necessity to implement customized decorating engines then it is possible to populete its WebElement-fields this way (only one step):  ``` java PageObject po = PageFactory.initElements(driver, PageObject,class) //then PageObject.class has  //the default constructor or constructor with a SearchContext- or WebDriver- parameter   //or  PageObject po = PageFactory.initElements(element, PageObject,class) //then PageObject.class has  //the default constructor or constructor with a SearchContext- or WebElement- parameter  //and so on...  ``` - the additional checking of field modifiers before it will be populated.   Field that is going to be filled should not  be static and final. I found these issues some time ago. I tried to implement page object with final fields that weren't annotated by @FindBy's. Also I found that it tries to set proxy-WebElement as a value of a static WebElement-field. In both cases I caught **IllegalModifierException**. Actually I think that both issues are minor but it would be good if whey were fixed.   --- This change is [](https://reviewable.io/reviews/seleniumhq/selenium/415)","closed","C-java,","TikhomirovSergey","2015-04-05T22:05:52Z","2020-05-19T17:43:16Z"
"","466","java: add ExpectedConditions checking the number of elements found","- #exactlyNElementsToBeFound - #atLeastNElementsToBeFound - #atMostNElementsToBeFound","closed","C-java,","alb-i986","2015-04-18T01:05:44Z","2021-04-03T16:33:12Z"
"","225","re-added Context endpoints to java client","*signed contributor's agreement","closed","","Jonahss","2014-05-27T22:28:56Z","2014-06-24T12:19:54Z"
"","340","Focused input not allowing multiple delete / backspace keypresses","**What steps will reproduce the problem?**  Create a fixture html file called ""focustest.html"" with the following content:  ``` html        Focus Test                  Focus             function doFocus() {         document.getElementById('field').focus();       }        ```  Create a PHPUnit test called ""test.php"" with the following content:  ``` php  class WebTest extends PHPUnit_Extensions_Selenium2TestCase {    function setUp() {     $this->setBrowser('firefox');     $this->setBrowserUrl('http://localhost/');   }    function testFillFocusedField() {     $value = 'Chekote';      $this->url('/focustest.html');     $this->byId('focusbtn')->click();      // get the field value current length, and add backspace/delete keystrokes to remove it     $field = $this->byId('field');     $deletes = str_repeat(       PHPUnit_Extensions_Selenium2TestCase_Keys::BACKSPACE . PHPUnit_Extensions_Selenium2TestCase_Keys::DELETE,       strlen($field->value())     );      $this->keys($deletes . $value);      $this->assertEquals($value, $field->value());   } } ```  Run the test:  phpunit test.php  **What is the expected output?** I expect the test to pass, and the field's ""Initial Value"" text to be replaced with ""Chekote""  **What do you see instead?** The first character of the Initial Value (The ""I"") is deleted, but no other characters are deleted. The result is the field have the value ""Chekotenitial Value"".  Selenium version: 2.45 OS: Mac OS X 10.10.2 Browser: Firefox Browser version: 31.4.0esr, 33.1.1, 34.0.5 & 36.0.1  This problem was first discovered and discussed in the MinkSelenium2Driver issues board here:  https://github.com/minkphp/MinkSelenium2Driver/issues/198  It was also originally reported here. I closed it thinking a typo was causing the tests to fail, but the typo was not the only reason it was failing. Sorry for the confusion!  https://code.google.com/p/selenium/issues/detail?id=8589","closed","D-firefox,","Chekote","2015-03-16T21:50:15Z","2019-08-20T14:10:01Z"
"","657","Error when using ActionBuilder with Firefoxdriver: 'Cannot press more then one button'","**Environment:**  Ruby 2.16 on Windows Selenium WebDriver 2.46.2 RSpec 3.2 with Capybara 2.4.4 Firefox version 38.0.5  **Steps to reproduce:**  I am using the ActionBuilder to complete some rather unconventional dragging and dropping of items within an app that I'm testing.  Here is a trimmed down version of the method I'm using where I'm omitting a few conditional statements that are not relevant to this bug report:  ``` def drag_to_dashboard(type)   actionbuilder = page.driver.browser.action   source = find('.toolbox li', :text => type).native   actionbuilder.click_and_hold(source).perform   actionbuilder.move_to(find('h6', :text => 'TOOLBOX').native).perform   actionbuilder.move_by(90, 0).perform   actionbuilder.release.perform end ```  The method is designed to find an element, click and hold, drag it to another element, move it to another offset, then finally release the left mouse button.  **Observed behavior:**  When the test example reaches this method, I am getting this error after running rspec:  UnknownError: Cannot press more then one button or an already pressed button.'UnknownError: Cannot press more then one button or an already pressed button.' when calling method: [wdIMouse::down] [remote server] file:///C:/Users/CoE/AppData/Local/Temp/webdriver-profile20150611-4876-19cmmpj/extensions/fxdriver@googlecode.com/components/driver-component.js:10667:in `FirefoxDriver.prototype.mouseButtonDown' [remote server] file:///C:/Users/CoE/AppData/Local/Temp/webdriver-profile20150611-4876-19cmmpj/extensions/fxdriver@googlecode.com/components/command-processor.js:12282:in`DelayedCommand.prototype.executeInternal_/h' [remote server] file:///C:/Users/CoE/AppData/Local/Temp/webdriver-profile20150611-4876-19cmmpj/extensions/fxdriver@googlecode.com/components/command-processor.js:12287:in `DelayedCommand.prototype.executeInternal_' [remote server] file:///C:/Users/CoE/AppData/Local/Temp/webdriver-profile20150611-4876-19cmmpj/extensions/fxdriver@googlecode.com/components/command-processor.js:12229:in`DelayedCommand.prototype.execute/","closed","","philipfong","2015-06-12T13:24:44Z","2019-08-21T01:10:00Z"
"","404","Support for self-signed cryptographic modules in FirefoxDriver","##### Which steps will reproduce the problem?  Load webdriver.xpi and use firefox's ""Cryptographic-Module-Manager"" to load the PKCS#11 module of your choice (I used my company's internal one). Insert a smartcard and try to do a login by using Cryptographic-Module-Manager's ""Log In""-option.  ##### What is expected?  After clicking the ""Log In""-button it is expected that a dialog shows up which asks the user for  the smartcard's master-password.  ##### What do you see instead?  A messagebox gets spawned immediatly telling the user that the log-in has failed even though the  user had no chance to type in a password. ##### Additional information:  Selenium version: 2.45 OS: Windows 7 x86 Service Pack 1 Browser: Firefox Browser version: 36.0.4  One could say now that there probably is a problem with firefox or the PKCS#11-module but I am convinced that this is not the case since:  1.) It works without any problems if webdriver.xpi is not loaded 2.) Editing the ""fxdriver.modals.signalOpenModal""-function in prompt-service.js in such way,     that it returns before ""fxdriver.modals.findAssociatedDriver"" gets called if its first parameter equals     ""null"" seems to fix the problem.","closed","D-firefox,","julianmz","2015-04-02T08:23:27Z","2019-08-17T19:09:59Z"
"","586","InternetExplorerDriver losing WindowHandles after Navigate().GoToUrl()","### setup - Windows 8.1 64bit - IE11(v.11.0.19 KB3049563) 64bit - Chrome (v.43.0.2357.81m) - NuGet package Selenium.WebDriver (v.2.45.0) - IEDriverServer.exe (v.2.45.0 - 64bit downloaded not built locally) - IEProtectedMode is off - HKLM/SOFTWARE/Wow6432Node/Microsoft/InternetExplorer/Main/FeatureControl/FEATURE_BFCACHE exists with a iexplore.exe dword = 0 ### code  ``` C# static void Main(string[] args) {     //var driver = new OpenQA.Selenium.Chrome.ChromeDriver();     var driver = new OpenQA.Selenium.IE.InternetExplorerDriver();     try     {         driver.Navigate().GoToUrl(""https://www.google.com/"");         driver.FindElementByName(""q"").SendKeys(""FooBar"");     }     catch(Exception ex)     {         Console.WriteLine($""Exception: {ex.Message}"");     }     finally     {         Console.ReadLine();         driver.Quit();     } } ``` ### problem  When the code reaches line 8 (driver.FindElementByName) I get a ""NoSuchElementException"" thrown, with the message ""Unable to find element with the name == q"".  ### investigation  Looking at driver.WindowHandles before line 8 the count is one, after line 8 the count is 0. It appears that during the navigation the handles are lost. ### what I've tried - Adding a Delay (System.Threading.Tasks.Task.Delay(1000).Wait()) between the navigation and findelement in case the page hadn't loaded properly in time. However the resulted in a different exception ""NoSuchWindowException"" with the message ""Unable to find element on closed window"". - Before the Navigate grabbing the current window handle (var handle = driver.CurrentWindowHandle;) and then using a SwitchTo back to that handle (driver.SwitchTo().Window(handle);) - however this has the exact same NoSuchWindowException as above. - Using the ChromeDriver with the exact same code works fine  Our particular environment requires that we test against IE10 + IE11, as such using the ChromeDriver is not a viable workaround","closed","","mattridgway","2015-05-29T09:20:20Z","2019-08-21T12:09:50Z"
"","149","(naively offering to) Delete unused classes.","## They can but should not be used outside of this module, and if they are they are used by dead code so assuming okay to delete.  Created by MOE: http://code.google.com/p/moe-java","closed","","sevaseva","2013-12-09T14:24:42Z","2014-02-23T08:35:34Z"
"","716","Element is not scrolled into view before click() when partially covered by scrollabar","## Environment:  Windows 7, Selenium 2.46.0, Firefox 31.6.0 / 38.0.5 ## Steps to reproduce  Open this page:  ```       Foo bar                                        CLICK ME                           document.getElementById(""btn"").addEventListener(""click"", function(event) {             event.stopPropagation();             event.currentTarget.style.color = ""red"";         });                ```  with the following script:  ``` ff.get(""http://localhost:8000/test.html"") e = ff.find_element_by_id(""btn"") print e.is_displayed() e.click() ``` ## Expected:  As the button is supposed to be clicked in the center, the container should be scrolled so that it is fully visible. ## Actual:  On Firefox 31 (native events), the click never reaches the button (text color does not change). I seems it lands on the scrollbar.  On Firefox 38 (synthetic events), the click is generated, but no scrolling happens. If I increase the height of `filler` element by another 25px the scrolling does happen.  Same happens when using action chains directly, which seems to indicate that scrollbars are completely transparent to synthetic events.","closed","","lqc","2015-06-27T08:09:01Z","2021-09-05T09:44:13Z"
"","326","Support export to Java/TestNG/ WebDriver on Selenium-IDE","## Description  I suppose we can extend the support of the Selenium-IDE for `TestNG / Java / WebDriver`. Currently, Selenium IDE only supports only for the `Java / Remote Control(RC)`.  ## Reason  The improvement suggestion was raised by the community is located at https://code.google.com/p/selenium/issues/detail?id=5492. Since use of RC is discouraged and deprecated export selenium scripts to Java/ WebDriver is highly demanded. ## Benefits  End users will benefits from following two extended features;  1). Export Test Case As.. -> Java / TestNG / WebDriver  This new feature is heavily based on `Java/Junit 4/WebDriver`. Implemented code is tested and working as expected.  ![screen shot 2015-03-07 at 2 21 50 pm](https://cloud.githubusercontent.com/assets/1448489/6540837/72173abc-c4d9-11e4-97be-76ebea0a2e50.png)  2). Export Test Suite As.. -> Java / TestNG / WebDriver  This feature is implemented conformed to TestNG Test Suite [documentation](http://testng.org/doc/documentation-main.html) . According TestNG docs;  > > A suite is represented by one XML file. It can contain one or more tests and is defined by the  tag.  Therefore, expected outcome is a `testng.xml` file with  tags.  ![screen shot 2015-03-07 at 2 22 23 pm](https://cloud.githubusercontent.com/assets/1448489/6540839/7974976e-c4d9-11e4-9427-2f421ac19d71.png) ## Drawbacks  No significant drawbacks foreseen. One thing to note for this to work is that the user has to import required TestNG libraries into the user project.  I have filled & signed the SFC Individual Contributor License Agreement.","closed","C-ide,","rasika","2015-03-07T09:22:09Z","2016-03-08T00:51:45Z"
"","148","Selenium Python WebDriver client, allow connection reset","##  when reusing httplib connection.  Created by MOE: http://code.google.com/p/moe-java","closed","","sevaseva","2013-12-09T14:16:06Z","2014-02-23T06:32:45Z"
"","127","[#6407] Remove Firefox tmp folder on quit.","# Problem description  When Firefox is closed in an ugly way, the WebDriver.quit() command raise an socket.error and then the temp profile is not removed.  This is ticket 6407 from google code http://code.google.com/p/selenium/issues/detail?id=6407 # Changes description  Add socket.error in the list of expected errors from WebDriver.quit()  Also remove unused imports from this file and make it pep8 friendly. # How to try and test the changes  Run a firefox test and force kill the Firefox browser process while tests are running.  The temp folder should be removed.  I have signed the license aggrement.  Thanks!","closed","","adiroiban","2013-10-15T12:06:22Z","2013-10-21T22:25:28Z"
"","719","Sporadic (InvalidSelectorException) type error thrown: TypeError: Failed to execute 'createNSResolver' on 'Document': parameter 1 is not of type 'Node'","# Environment  Selenium Standalone Server: 2.46.0 Selenium Client (Java): 2.46.0 Browsers: Firefox 38.0.5, Chrome 43.0.2357.130 m (high probability of occurring), IE 11 # Issue  When trying to execute xpath locators (specifically those using the contains() method), we are seeing a sporadic InvalidSelectorException ... TypeError: Failed to execute 'createNSResolver' on 'Document': parameter 1 is not of type 'Node' being thrown at the very onset of the test -- I'd say 1 out of every 5 runs. A quick restart of the test, and the exception magically goes away.  The stack trace is as follows: org.openqa.selenium.InvalidSelectorException: invalid selector: Unable to locate an element with the xpath expression //label[contains(text(), 'SOP Hub')] because of the following error: TypeError: Failed to execute 'createNSResolver' on 'Document': parameter 1 is not of type 'Node'.   (Session info: chrome=43.0.2357.130)   (Driver info: chromedriver=2.15.322448 (52179c1b310fec1797c81ea9a20326839860b7d3),platform=Windows NT 6.1 SP1 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 3.26 seconds For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html Build info: version: '2.46.0', revision: '87c69e2', time: '2015-06-04 16:16:47' System info: host: 'NY12LP517735', ip: '165.181.224.155', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_25' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, chrome={userDataDir=C:\Users\ISAAC~1.RIL\AppData\Local\Temp\scoped_dir9056_16605}, takesHeapSnapshot=true, databaseEnabled=false, handlesAlerts=true, version=43.0.2357.130, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}] Session ID: bf09f86741c93e3efb5f7bb68567bf77 **\* Element info: {Using=xpath, value=//label[contains(text(), 'SOP Hub')]}     at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)     at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)     at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)     at java.lang.reflect.Constructor.newInstance(Unknown Source)     at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:204)     at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:156)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:358)     at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:455)     at org.openqa.selenium.By$ByXPath.findElement(By.java:358)     at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)     at com.automatedTesting.pageObjects.BasePage.highlightWidget(BasePage.java:535)     at com.automatedTesting.pageObjects.BasePage.assertWidgetText(BasePage.java:202)     at com.automatedTesting.pageObjects.ViewSOPListPage.waitForViewListSOP_PageToLoad(ViewSOPListPage.java:330)     at com.automatedTesting.testcases.regressionTestSuite.AdvancedSearchTest_TC248393.getToAdvancedSrchPage(AdvancedSearchTest_TC248393.java:32)     at com.automatedTesting.testcases.regressionTestSuite.AdvancedSearchTest_TC248393.assertWidgetsPresence(AdvancedSearchTest_TC248393.java:39)     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)     at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)     at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)     at java.lang.reflect.Method.invoke(Unknown Source)     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)     at org.junit.runners.ParentRunner.run(ParentRunner.java:309)     at org.junit.runners.Suite.runChild(Suite.java:127)     at org.junit.runners.Suite.runChild(Suite.java:26)     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)     at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)     at java.util.concurrent.FutureTask.run(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)     at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)     at java.lang.Thread.run(Unknown Source)","closed","","irileydev","2015-06-29T14:43:53Z","2019-08-19T08:09:39Z"
"","661","system memory leak: when no driver.quit() is executed against a InternetExplorerDriver or ChromeDriver (Java)","# Description - when a testcase executes and the driver.quit() is not executed (crashes before completion) the IE and Chrome drivers leave conhost.exe and IEDriverServer.exe/ChromeDriver.exe processes around (about 18MB the pair on Win7). - The test case is valid, but if were to fail then would result in processes being hung. The closure of the browser windows manually does not cause a clean up for IE and Chrome. # Consideration  Firefox driver does not have this issue. When the FF browser is manually closed the processes used are closed out and terminated. # Environment - WIN7 - Java 8 - Netbeans 8.0.2 - Selenium 2.46.0 installed (netbeans server side plugin, download of drivers from Selenium wbe links etc) # Why this is a problem  When test cases are run there is a likelyhood that things will fail. When this happens there should be a good cleanup of any processes that were created by WebDrivers. Alternatives require the testcase code to write explicit code to manage around the bad/lack-of driver cleanup. The fact that manually closing the driver launched windows results in the processes remaining is of concern as a system memory leak via ""conhost processes"".   This is not a netbeans issue as FF works, but IE and Chrome have the issue. Its the same code and environment for each run in the testcase and in netbeans. Only the drivers are different.  I expect to be using Netbeans, Selenium2, TestNG, and an additional test framework for capturing HTML object test data and converting into Java testdata code. Thus, a repeat-able set of dynamic data for different browsers may be compiled. With 1000's of TCs and a potential for a memory leak like this (cannot be cleaned up except by explicit TC code) is a major concern. # Testcase code  package org.sel;  import java.util.Arrays; import java.util.Date; import java.util.List; import java.util.logging.Level; import java.util.logging.Logger; import org.dictionary.DictSelector; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.ie.InternetExplorerDriver; import org.openqa.selenium.opera.OperaDriver; import org.openqa.selenium.support.ui.ExpectedCondition; import org.openqa.selenium.support.ui.WebDriverWait;  public class Main {    /**     \* @param args the command line arguments     */    public static void main(String[] args) {  ```   // Create a new instance of the XXXX driver  String browser = ""xxxx"";   browser = ""ie""; ```  //      browser = ""firefox""; //    browser = ""opera"";   // not working //      browser = ""chrome"";  ```   WebDriver driver = null;    if (browser.equals(""ie"")) {      driver = new InternetExplorerDriver();    } else if (browser.equals(""opera"")) {      System.setProperty(""webdriver.opera.driver"",        ""C:\\Program Files (x86)\\Opera\\launcher.exe"");      driver = new OperaDriver();    } else if (browser.equals(""firefox"")) {      driver = new FirefoxDriver();    } else if (browser.equals(""chrome"")) {      System.setProperty(""webdriver.chrome.driver"",        ""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chromedriver.exe"");       driver = new ChromeDriver();    }   try {      Thread.sleep(1000);   } catch (InterruptedException ex) {      Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);   }   // load the site page to test   driver.get(""www.google.com"");    // driver.quit();   // edited out during testcase writing } ```  }","closed","","DaveBrad","2015-06-13T21:25:03Z","2019-08-21T11:09:52Z"
"","693","desired capabilities is ignored","# Description  without using the selenium grid, only standalone server running on osx, i set the desired capabilities object with the platform key set to 'windows'.  when i run the test it runs the test on mac, ignoring the platform set to windows...apparently this is expected behavior, ie, desired capabilties != actual capabilities # Steps to reproduce  ```             capabilities = {""platform"": ""WINDOWS"",                                   ""browserName"": ""firefox"",                                   ""version"": """"}      self.driver = webdriver.Remote(              command_executor='http://127.0.0.1:4444/wd/hub',              desired_capabilities= capabilities ) ``` # Expected  exception # Actual  test is run on osx","closed","","lilredindy","2015-06-20T23:06:56Z","2019-08-21T09:09:54Z"
"","196","Replace ExpectedCondition with AnticipatedCondition","# Description  Replace the ExpectedCondition interface (which is restricted to using WebDriver as its context) with a new AnticipatedCondition interface (which expands versatility by using SearchContext as its context). # Reason  With ExpectedCondition, conditions that are satisfied by element search results always apply to the entire page. This doesn't work very well for page components and other contexts that only apply to a portion of the page. The workaround (passing additional sub-context arguments) has two issues. First, this fails to restrict search operations to their stated sub-context. Second, this carries the risk that the specified sub-context will be derived from a foreign driver instance. # Benefits  AnticipatedCondition takes a SearchContext as its context, which enables search operations to be restricted to the desired scope without having to pass in extra sub-context arguments. This also significantly reduces the likelihood for mismatched driver/sub-context. # Drawbacks","closed","C-java,","sbabcoc","2014-04-08T21:14:56Z","2016-08-25T19:52:33Z"
"","69","Check for multiple extension when looking for driver service executable","# Description  Just like the Java client, the .Net client should not be strict about the extension of driver service executable. This push make it possible to execute chromedriver.{exe|cmd|bat|com}. # Reason  Because when using chocolatey (apt-get for windows) and the ChromeDriver2 package, the executable available in path end with "".cmd"". This is due to chocolatey design. And as the Java client look for multiple extension I thought it would make the .Net client consistent with the Java client. # Benefits  With this patch you can use chocolatey package and Selenium client without changing any configuration. This is very usefull to deploy selenium on server. # Drawbacks  None?  I've signed the CLA.","closed","","kYann","2013-05-13T14:11:59Z","2014-01-06T21:38:53Z"
"","780","In Python, inequality of WebElement instances is badly defined","# Description  In the Python bindings, comparing two WebElement instances for inequality doesn't work as expected # Steps to reproduce  ``` python profile = webdriver.FirefoxProfile() binary = FirefoxBinary(firefox_path=...) webdriver = webdriver.Firefox(profile, binary)  self.web_driver.get('www.example.com') selector = 'a[href=""http://www.iana.org/domains/example""]'  el1 = self.web_driver.find_element_by_css_selector(selector) el2 = self.web_driver.find_element_by_css_selector(selector) assert(el1 != el2) ``` # Expected  The assertion to fail. # Actual  The assertion doesn't fail. Changing to bottom line to the following causes the expected behaviour:  ``` python assert(not el1 == el2) ```","closed","","paulmdavies","2015-07-14T16:40:34Z","2019-08-21T08:10:00Z"
"","209","Grid node recognition","# Additions: - Functionality has been added, that will allow a local user to call `BrowserInstallation.isGoogleChromeInstalled()` statically - User is able to now call `BrowserInstallation.get*InstallationBinary()` to fetch the full-path of the browser's binary (useful if multiple installations are present, and you are unsure where it's fetching ## Grid / Node - Node now passes configurations to the hub which tell the grid if the node has particular browsers installed.    ![screen shot 2014-04-21 at 14 59 55](https://cloud.githubusercontent.com/assets/2972876/2757790/2af12d66-c988-11e3-9f14-1bce3f1140b5.png)  (*the icons will have red `x`'s through them, and when hovering, will state `""browser not installed / found""`.)","closed","","ddavison","2014-04-21T19:07:59Z","2015-03-02T20:41:25Z"
"","678","TestNG eclipse issue after clicking on Runas --> TestNG Test","![testng issue](https://cloud.githubusercontent.com/assets/12811132/8224278/2310ab46-15a2-11e5-9d4d-cac41ea5f240.jpg)","closed","","raghav2329","2015-06-18T04:40:36Z","2019-08-21T11:09:38Z"
"","763","PY: Fix syntax errors","","closed","C-py,","davidfischer-ch","2015-07-10T11:43:36Z","2015-07-10T20:58:04Z"
"","762","Fix some py","","closed","","davidfischer-ch","2015-07-10T10:58:56Z","2015-07-10T11:44:18Z"
"","687","Merge pull request","","closed","","AJ-72","2015-06-19T12:28:12Z","2015-06-19T12:28:27Z"
"","659","Disabling reading list info panel in Firefox. Fixes #658","","closed","","davehunt","2015-06-12T17:30:13Z","2015-06-16T15:37:27Z"
"","590","Style changes (PEP8)","","closed","R-awaiting merge,","cool-RR","2015-05-31T09:15:16Z","2015-06-02T17:59:37Z"
"","589","Style changes","","closed","","cool-RR","2015-05-30T16:40:16Z","2015-06-01T16:53:00Z"
"","588","Implement `__repr__` for most classes, especially `WebElement`, for much easier debugging","","closed","I-papercut,","cool-RR","2015-05-30T15:25:04Z","2019-08-21T04:09:39Z"
"","525","HtmlUnitDriver suggestions","","closed","","asashour","2015-05-06T07:52:11Z","2015-05-14T17:15:52Z"
"","516","Issue #510 - send and read bytes instead of chars.","","closed","C-java,","croudet","2015-05-04T15:41:19Z","2017-09-11T06:01:17Z"
"","506","fixing intellij compilation issues brought on by 763bbcb4","","closed","","ddavison","2015-04-29T15:17:32Z","2015-05-05T18:34:34Z"
"","492","JS: Chrome base path is not stored resp. passed to the driver service.","","closed","","dbo","2015-04-25T09:33:16Z","2019-08-21T13:09:35Z"
"","445","Fix #427: Prevent OutOfMemoryError by creating new output stream before every execution of the process","","closed","C-java,","ROARy","2015-04-12T06:31:51Z","2015-04-13T16:59:17Z"
"","413","Fix typo","","closed","C-rb,","bootstraponline","2015-04-03T20:08:59Z","2015-04-04T23:17:34Z"
"","403","Create pullrequest","","closed","","qingzh","2015-04-02T05:02:44Z","2015-04-02T05:03:19Z"
"","376","[DOC]: fixing typo in README.md","","closed","C-docs,","williamsbdev","2015-03-26T19:43:59Z","2015-03-26T23:09:27Z"
"","371","adding toc for readme and contributing.md","","closed","","ddavison","2015-03-25T19:34:10Z","2015-03-25T19:38:46Z"
"","343","refactored wiki links","","closed","","ddavison","2015-03-17T23:15:51Z","2015-03-17T23:20:41Z"
"","336","fix wiki links","","closed","","ddavison","2015-03-16T18:43:40Z","2015-03-16T18:47:34Z"
"","304","Selenium for .Net. Enhancements. IContextAware interface. PageFactory enhancement.","","closed","","TikhomirovSergey","2015-01-03T17:37:38Z","2015-01-06T15:38:36Z"
"","281","typo fixes - https://github.com/vlajos/misspell_fixer","","closed","","vlajos","2014-11-08T23:13:20Z","2015-03-03T13:51:14Z"
"","264","another eclipse classpath fix and some more code cleanup","","closed","","rbri","2014-10-07T13:11:09Z","2015-06-04T06:46:37Z"
"","263","fix classpath for json->gson change","","closed","","rbri","2014-10-02T18:26:01Z","2014-10-03T10:31:01Z"
"","261","Proposal (WebDriverJS) - add a function to executeScript with a custom debugging msg","","closed","R-needs code changes,","juliemr","2014-09-26T23:04:01Z","2016-08-06T17:34:57Z"
"","260","fix getAttribute for dynamic properties and add text to the end of input fields","","closed","","rbri","2014-09-26T17:44:21Z","2014-09-29T17:20:57Z"
"","257","fix bug: Close browser throw Windows Error.","","closed","","seanly","2014-09-18T04:17:42Z","2015-03-02T20:33:29Z"
"","250","Clarify @param/@return types of webdriver.promise.fulfilled","","closed","","sevaseva","2014-09-01T22:42:46Z","2014-09-06T00:33:29Z"
"","243","Fix exception messages to reflect the new default log_file behavior","","closed","","alexhenrie","2014-07-31T22:19:48Z","2014-10-18T14:21:47Z"
"","242","Remove unused import subprocess.PIPE","","closed","","alexhenrie","2014-07-30T18:31:40Z","2014-07-31T21:20:56Z"
"","222","fix: check-browser-online","","closed","","schipiga","2014-05-26T14:12:40Z","2014-06-19T18:56:56Z"
"","217","Browser locator","","closed","","ddavison","2014-05-08T21:40:15Z","2014-10-18T14:27:23Z"
"","216","Browser locator","","closed","","ddavison","2014-05-08T21:04:41Z","2014-05-08T21:16:32Z"
"","206","WebDriverJS compatibility changes for Selenium 2.41","","closed","","sevaseva","2014-04-11T02:32:47Z","2014-06-25T06:22:53Z"
"","203","Minor cleanup FirefoxBinary.java","","closed","","sevaseva","2014-04-11T01:56:00Z","2014-06-25T06:23:27Z"
"","201","Deflaking tests","","closed","","sevaseva","2014-04-11T01:47:57Z","2014-06-25T06:23:15Z"
"","200","Strictly NO-OP code cleanups","","closed","","sevaseva","2014-04-11T01:45:37Z","2014-07-12T16:08:01Z"
"","163","Adding a wait to work around the failure on Chrome 32 on Windows","","closed","","sevaseva","2014-01-28T01:46:33Z","2014-07-02T22:40:21Z"
"","159","Allow connection reset when reusing httplib connection","","closed","","sevaseva","2014-01-09T23:08:31Z","2014-06-30T00:25:05Z"
"","146","replaced a print (python2) with warnings.warn and a couple of pep-8 changes","","closed","","vergiliu","2013-12-08T13:23:35Z","2014-07-21T18:42:49Z"
"","144","Improving ""Session ID is null"" error message","","closed","","sevaseva","2013-12-07T06:00:32Z","2014-07-26T05:17:42Z"
"","122","Backspace is one word","","closed","","graingert","2013-09-26T15:30:08Z","2014-06-18T01:34:59Z"
"","118","Tweaked the default firefox profile.","","closed","","apollo13","2013-09-18T14:48:52Z","2013-10-22T20:44:18Z"
"","117","Removing empty build.desc","","closed","","sevaseva","2013-09-17T03:28:09Z","2013-11-21T07:08:18Z"
"","116","Fixing a bug with accidental comparison a variable with itself.","","closed","","sevaseva","2013-09-13T05:12:14Z","2013-09-13T18:27:48Z"
"","113","Adding explicit dependencies on stuff java_libraries depend","","closed","","sevaseva","2013-09-10T09:56:05Z","2013-09-13T10:22:17Z"
"","109","logo should refresh page, and seperate help link should exist","","closed","","ddavison","2013-08-31T07:47:56Z","2013-09-03T20:25:11Z"
"","107","Adding support for /status, /sessions commands to Python bindings.","","closed","","sevaseva","2013-08-29T09:12:09Z","2013-09-07T02:02:00Z"
"","106","Adding support for /status and /sessions commands to Python bindings. Plus some file mode bits cleanup.","","closed","","sevaseva","2013-08-29T01:07:55Z","2014-06-14T13:22:01Z"
"","88","allows to annote not only fields, but classes with @FindBy annotations","","closed","","artkoshelev","2013-06-17T20:53:34Z","2014-06-14T20:55:34Z"
"","84","[Python] The builtin basestring is no more with py3. Fixes issue 5701.","","closed","","jayakumarc","2013-05-28T16:00:19Z","2014-07-26T23:00:47Z"
"","78","Mention LogType.PERFORMANCE in CHANGELOG.","","closed","","klepikov","2013-05-22T17:17:18Z","2013-05-22T17:30:24Z"
"","49","[Python] Adding few missed relative imports and py3 friendly base64 decode","","closed","","jayakumarc","2013-04-10T13:16:47Z","2013-04-10T13:38:49Z"
"","46","[Python] Allow finding firefox binary at ProgramFiles(x86) on windows(64 bit).","","closed","","jayakumarc","2013-04-09T10:15:22Z","2013-05-22T19:35:23Z"
"","44","[Python] Making urllib import py3 friendly","","closed","","jayakumarc","2013-04-08T13:30:19Z","2013-05-22T19:37:13Z"
"","43","[Python] Py3 compatible winreg import and content-type access","","closed","","jayakumarc","2013-04-07T20:52:14Z","2013-05-22T19:36:05Z"
"","42","[Python] Allow finding firefox binary at ProgramFiles(x86) on windows(64 bit)","","closed","","jayakumarc","2013-04-07T20:49:23Z","2013-04-09T11:35:40Z"