"#","No","Issue Title","Issue Details","State","Labels","User name","created","Updated"
"","9615","Selenium hangs while initializing the RemoteWebDriver object after 16 test cases run without error.","üêõ Bug Report   Hi,  [hubLog.txt](https://github.com/SeleniumHQ/selenium/files/6731310/hubLog.txt) [nodeLog_shortned.txt](https://github.com/SeleniumHQ/selenium/files/6731330/nodeLog_shortned.txt)  I am testing a network device's GUI which has capable of switching and routing. I have around 20 selenium test cases runing on the Jenkins environment daily. Recently my test cases started to hang on Jenkins. In the beginning I had no issue running my test cases but after the number of test cases reached 16, 17th test case is not starting because it hangs while creating the RemoteWebDriver object.  **These are the Chrome Options I use:**  ``` case ""chrome"": options = new ChromeOptions(); options.setPageLoadStrategy(PageLoadStrategy.NONE);  options.addArguments(""--no-proxy-server""); options.addArguments(""--no-sandbox""); options.addArguments(""--enable-automation""); options.addArguments(""--headless""); options.addArguments(""--disable-dev-shm-usage""); options.addArguments(""--disable-browser-side-navigation""); options.addArguments(""--ignore-certificate-errors""); options.addArguments(""--disable-gpu""); break; ```  **This is how initialize the remote web driver and the session.**  ``` 	try { 		URL rURL = new URL(webDriverUrl); 		baseWd = new RemoteWebDriver(rURL, options); // CODE HANGS HERE  10:41:29.524 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-proxy-server, --no-sandbox, enable-automation, --headless, --disable-dev-shm-usage, --disable-browser-side-navi..., --ignore-certificate-errors, --disable-gpu], extensions: []}, pageLoadStrategy: none} > 10:41:29.525 DEBUG [ProxySet.getNewSession] - Available nodes: [http://127.0.0.1:5555] > 10:41:29.525 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://127.0.0.1:5555 > 10:41:29.525 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=e28171f1-ccb8-4b0b-8c81-f98b642fc5ba, seleniumProtocol=WebDriver, webdriver.chrome.driver=C:/WebDriver/bin/chromedriver.exe, browserName=chrome, takesScreenshot=false, maxInstances=10, platformName=WIN10, cleanSession=true, platform=WIN10} > 10:51:31.478 WARN [SessionCleanup.null] - session ext. key 12bcf7df07867b0d973e26690d61de40 has TIMED OUT due to client inactivity and will be released. > 10:51:31.487 WARN [DefaultRemoteProxy.beforeRelease] - Error releasing the resources on timeout for session ext. key 12bcf7df07867b0d973e26690d61de40  **And node logs:** > 10:41:29.539 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@395dc459 > 10:41:29.539 DEBUG [WebDriverServlet.lambda$handle$0] - /session: Executing POST on /session (handler: BeginSession) > 10:41:29.544 INFO [ActiveSessionFactory.apply] - Capabilities are: { >   ""browserName"": ""chrome"", >   ""goog:chromeOptions"": { >     ""args"": [ >       ""--no-proxy-server"", >       ""--no-sandbox"", >       ""--enable-automation"", >       ""--headless"", >       ""--disable-dev-shm-usage"", >       ""--disable-browser-side-navigation"", >       ""--ignore-certificate-errors"", >       ""--disable-gpu"" >     ], >     ""extensions"": [ >     ] >   }, >   ""pageLoadStrategy"": ""none"" > } > 10:41:29.544 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) > 10:41:29.546 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:5831/status] > 10:41:29.547 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:5831/status > 10:41:30.061 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:5831/status > 10:41:30.068 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@605447375 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:41:30.070 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@2556d5594 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 247}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} > 10:41:30.782 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C > 10:41:30.783 DEBUG [RemoteWebDriver.log] - Executing: newSession [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\ScalanceX\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:60218}, networkConnectionEnabled: false, pageLoadStrategy: none, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}}] > 10:41:30.783 DEBUG [RemoteWebDriver.log] - Executed: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\ScalanceX\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:60218}, networkConnectionEnabled: false, pageLoadStrategy: none, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}}] > 10:41:30.783 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 12bcf7df07867b0d973e26690d61de40 (org.openqa.selenium.chrome.ChromeDriverService) > 10:51:31.484 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.NoSessionHandler@6b519ef4 > 10:51:31.486 DEBUG [WebDriverServlet.lambda$handle$0] - /session/12bcf7df07867b0d973e26690d61de40: Executing DELETE on /session/12bcf7df07867b0d973e26690d61de40 (handler: NoSessionHandler) > 10:51:31.527 INFO [ActiveSessions$1.onStop] - Removing session 12bcf7df07867b0d973e26690d61de40 (org.openqa.selenium.chrome.ChromeDriverService) > 10:51:31.531 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@38ddd3487 pairs: {DELETE /session/12bcf7df07867b0d973e26690d61de40 HTTP/1.1: null}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:51:31.557 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@361a2a234 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 14}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} > 10:51:31.558 DEBUG [ReverseProxyHandler.execute] - To downstream: {""value"":null} > 10:51:31.558 DEBUG [UrlChecker.waitUntilUnavailable] - Waiting for http://localhost:5831/shutdown > 10:51:31.559 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:5831/shutdown > 10:51:31.560 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@19570b945 pairs: {GET /shutdown HTTP/1.1: null}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:51:31.581 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@1790e6ce3 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 40}{Content-Type: application/json; charset=utf-8} > 10:51:31.592 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:5831/shutdown  Please let me know do you need anything else.  Best regards, Burak D.  ## Environment OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.114 (Official Build) (32-bit) Browser Driver version: ChromeDriver 91.0.4472.101 Language Bindings version: Java 3.141.59  Selenium Grid version: 3.141.59","closed","","burakdLabs","2021-06-29T07:03:55Z","2021-09-05T07:59:06Z"
"","9614","Selenium hangs while initializing the RemoteWebDriver object after 16 test cases run without error.","üêõ Bug Report   Hi,   I am testing a network device's GUI which has capable of switching and routing. I have around 20 selenium test cases runing on the Jenkins environment daily. Recently my test cases started to hang on Jenkins. In the beginning I had no issue running my test cases but after the number of test cases reached 16, 17th test case is not starting because it hangs while creating the RemoteWebDriver object.  **These are the Chrome Options I use:**  ``` case ""chrome"": options = new ChromeOptions(); options.setPageLoadStrategy(PageLoadStrategy.NONE);  options.addArguments(""--no-proxy-server""); options.addArguments(""--no-sandbox""); options.addArguments(""--enable-automation""); options.addArguments(""--headless""); options.addArguments(""--disable-dev-shm-usage""); options.addArguments(""--disable-browser-side-navigation""); options.addArguments(""--ignore-certificate-errors""); options.addArguments(""--disable-gpu""); break; ```  **This is how initialize the remote web driver and the session.**  ``` 	try { 		URL rURL = new URL(webDriverUrl); 		baseWd = new RemoteWebDriver(rURL, options); // CODE HANGS HERE  10:41:29.524 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-proxy-server, --no-sandbox, enable-automation, --headless, --disable-dev-shm-usage, --disable-browser-side-navi..., --ignore-certificate-errors, --disable-gpu], extensions: []}, pageLoadStrategy: none} > 10:41:29.525 DEBUG [ProxySet.getNewSession] - Available nodes: [http://127.0.0.1:5555] > 10:41:29.525 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://127.0.0.1:5555 > 10:41:29.525 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=e28171f1-ccb8-4b0b-8c81-f98b642fc5ba, seleniumProtocol=WebDriver, webdriver.chrome.driver=C:/WebDriver/bin/chromedriver.exe, browserName=chrome, takesScreenshot=false, maxInstances=10, platformName=WIN10, cleanSession=true, platform=WIN10} > 10:51:31.478 WARN [SessionCleanup.null] - session ext. key 12bcf7df07867b0d973e26690d61de40 has TIMED OUT due to client inactivity and will be released. > 10:51:31.487 WARN [DefaultRemoteProxy.beforeRelease] - Error releasing the resources on timeout for session ext. key 12bcf7df07867b0d973e26690d61de40  **And node logs:** > 10:41:29.539 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@395dc459 > 10:41:29.539 DEBUG [WebDriverServlet.lambda$handle$0] - /session: Executing POST on /session (handler: BeginSession) > 10:41:29.544 INFO [ActiveSessionFactory.apply] - Capabilities are: { >   ""browserName"": ""chrome"", >   ""goog:chromeOptions"": { >     ""args"": [ >       ""--no-proxy-server"", >       ""--no-sandbox"", >       ""--enable-automation"", >       ""--headless"", >       ""--disable-dev-shm-usage"", >       ""--disable-browser-side-navigation"", >       ""--ignore-certificate-errors"", >       ""--disable-gpu"" >     ], >     ""extensions"": [ >     ] >   }, >   ""pageLoadStrategy"": ""none"" > } > 10:41:29.544 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) > 10:41:29.546 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:5831/status] > 10:41:29.547 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:5831/status > 10:41:30.061 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:5831/status > 10:41:30.068 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@605447375 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:41:30.070 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@2556d5594 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 247}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} > 10:41:30.782 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C > 10:41:30.783 DEBUG [RemoteWebDriver.log] - Executing: newSession [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\ScalanceX\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:60218}, networkConnectionEnabled: false, pageLoadStrategy: none, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}}] > 10:41:30.783 DEBUG [RemoteWebDriver.log] - Executed: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\ScalanceX\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:60218}, networkConnectionEnabled: false, pageLoadStrategy: none, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}}] > 10:41:30.783 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 12bcf7df07867b0d973e26690d61de40 (org.openqa.selenium.chrome.ChromeDriverService) > 10:51:31.484 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.NoSessionHandler@6b519ef4 > 10:51:31.486 DEBUG [WebDriverServlet.lambda$handle$0] - /session/12bcf7df07867b0d973e26690d61de40: Executing DELETE on /session/12bcf7df07867b0d973e26690d61de40 (handler: NoSessionHandler) > 10:51:31.527 INFO [ActiveSessions$1.onStop] - Removing session 12bcf7df07867b0d973e26690d61de40 (org.openqa.selenium.chrome.ChromeDriverService) > 10:51:31.531 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@38ddd3487 pairs: {DELETE /session/12bcf7df07867b0d973e26690d61de40 HTTP/1.1: null}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:51:31.557 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@361a2a234 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 14}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} > 10:51:31.558 DEBUG [ReverseProxyHandler.execute] - To downstream: {""value"":null} > 10:51:31.558 DEBUG [UrlChecker.waitUntilUnavailable] - Waiting for http://localhost:5831/shutdown > 10:51:31.559 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:5831/shutdown > 10:51:31.560 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@19570b945 pairs: {GET /shutdown HTTP/1.1: null}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:51:31.581 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@1790e6ce3 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 40}{Content-Type: application/json; charset=utf-8} > 10:51:31.592 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:5831/shutdown  Please let me know do you need anything else.  Best regards, Burak D.  ## Environment OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.114 (Official Build) (32-bit) Browser Driver version: ChromeDriver 91.0.4472.101 Language Bindings version: Java 3.141.59  Selenium Grid version: 3.141.59","closed","","burakdLabs","2021-06-29T06:54:21Z","2021-09-05T07:59:07Z"
"","9667","Webelements inside the vue.js's fragment are not visible to Selenium webdriver","üêõ Bug Report Elements with attribute 'fragment' are not visible. Impossible to interact with child elements.  **Root Cause** vue.js uses a concept called Fragments to create more than one root node in a Vue component. This is done for Accessibility support which is necessary to allow assistive technology like screen readers to interpret web pages and applications, More about this in -> [https://blog.logrocket.com/fragments-in-vue-js/](https://blog.logrocket.com/fragments-in-vue-js/)   So, basically they are creating HTML tag that would not read as a node by the DOM and called it fragments.  Hence the webelements inside such fragments are not visible for Webdriver. This is more or less like a iframe inside html page where we do switchToIFrame and interact with it. Only that for Fragments there are no ways to make it visible to the webdriver.  PFA Screenshot of DOM snapshot containing the Fragment.  ![image](https://user-images.githubusercontent.com/55972871/126429657-939efdf3-3ae7-4948-8d30-f5191b6b83a2.png)  To Reproduce The same issue was already reported in this ticket - [https://github.com/SeleniumHQ/selenium/issues/7709](https://github.com/SeleniumHQ/selenium/issues/7709)   Environment OS: Windows 10 x64 Browser: Chrome Browser version: 89 Browser Driver version: ChromeDriver 89 Language Bindings version: Java 3.141.59","closed","","spbrantan","2021-07-21T04:12:50Z","2021-09-05T07:50:41Z"
"","9831","specflow test script displays error in VS2019","üêõ Bug Report  specflow test script displays error in VS2019  Error Details:  Severity	Code	Description	Project	File	Line	Suppression State Error		The ""GenerateFeatureFileCodeBehindTask"" task failed unexpectedly. System.Exception: Error when reading project file. ---> System.Configuration.ConfigurationErrorsException: Unrecognized element 'unitTestProvider'.    at System.Configuration.ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)    at System.Configuration.ConfigurationSection.DeserializeSection(XmlReader reader)    at TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler.CreateFromXml(String xmlContent)    at TechTalk.SpecFlow.Configuration.ConfigurationLoader.Load(SpecFlowConfiguration specFlowConfiguration, ISpecFlowConfigurationHolder specFlowConfigurationHolder)    at TechTalk.SpecFlow.Generator.Configuration.GeneratorConfigurationProvider.LoadConfiguration(SpecFlowConfiguration specFlowConfiguration, SpecFlowConfigurationHolder specFlowConfigurationHolder)    at TechTalk.SpecFlow.Generator.Configuration.GeneratorConfigurationProviderExtensions.LoadConfiguration(IGeneratorConfigurationProvider configurationProvider, SpecFlowConfigurationHolder configurationHolder)    at TechTalk.SpecFlow.Generator.Project.ProjectReader.ReadSpecFlowProject(String projectFilePath, String rootNamespace)    --- End of inner exception stack trace ---    at TechTalk.SpecFlow.Generator.Project.ProjectReader.ReadSpecFlowProject(String projectFilePath, String rootNamespace)    at TechTalk.SpecFlow.Generator.Project.MSBuildProjectReader.LoadSpecFlowProjectFromMsBuild(String projectFilePath, String rootNamespace)    at SpecFlow.Tools.MsBuild.Generation.SpecFlowProjectProvider.GetSpecFlowProject()    at SpecFlow.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTaskExecutor.Execute()    at SpecFlow.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTask.Execute()    at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()    at Microsoft.Build.BackEnd.TaskBuilder.d__26.MoveNext()	SeleniumWebdriver			  Expected behavior  Build generation should be successful  ## Environment  OS:  Windows 10 specflow version: 3.9.22 Selenium version: 4.0.0-rc1 Language Bindings version: C#","closed","","svadivel0006","2021-09-16T11:39:49Z","2021-10-17T00:06:57Z"
"","9832","Selenium-specflow test script displays error in VS2019","üêõ Bug Report  Selenium-specflow test script displays error in VS2019  Error Details:  Severity Code Description Project File Line Suppression State Error The ""GenerateFeatureFileCodeBehindTask"" task failed unexpectedly. System.Exception: Error when reading project file. ---> System.Configuration.ConfigurationErrorsException: Unrecognized element 'unitTestProvider'. at System.Configuration.ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) at System.Configuration.ConfigurationSection.DeserializeSection(XmlReader reader) at TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler.CreateFromXml(String xmlContent) at TechTalk.SpecFlow.Configuration.ConfigurationLoader.Load(SpecFlowConfiguration specFlowConfiguration, ISpecFlowConfigurationHolder specFlowConfigurationHolder) at TechTalk.SpecFlow.Generator.Configuration.GeneratorConfigurationProvider.LoadConfiguration(SpecFlowConfiguration specFlowConfiguration, SpecFlowConfigurationHolder specFlowConfigurationHolder) at TechTalk.SpecFlow.Generator.Configuration.GeneratorConfigurationProviderExtensions.LoadConfiguration(IGeneratorConfigurationProvider configurationProvider, SpecFlowConfigurationHolder configurationHolder) at TechTalk.SpecFlow.Generator.Project.ProjectReader.ReadSpecFlowProject(String projectFilePath, String rootNamespace) --- End of inner exception stack trace --- at TechTalk.SpecFlow.Generator.Project.ProjectReader.ReadSpecFlowProject(String projectFilePath, String rootNamespace) at TechTalk.SpecFlow.Generator.Project.MSBuildProjectReader.LoadSpecFlowProjectFromMsBuild(String projectFilePath, String rootNamespace) at SpecFlow.Tools.MsBuild.Generation.SpecFlowProjectProvider.GetSpecFlowProject() at SpecFlow.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTaskExecutor.Execute() at SpecFlow.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTask.Execute() at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() at Microsoft.Build.BackEnd.TaskBuilder.d__26.MoveNext() SeleniumWebdriver  Expected behavior  Build generation should be successful  Environment OS: Windows 10 specflow version: 3.9.22 Selenium version: 4.0.0-rc1 Language Bindings version: C#","closed","","svadivel0006","2021-09-16T11:42:54Z","2021-10-17T00:06:56Z"
"","9325","Proxy auth is not working with chrome and nodejs","üêõ Bug Report  I tried everything but cant success. How to use proxy authentication with Selenium? I tried these ways:  options.addArguments(""--proxy-server=http://username:pass@proxy_url"");  and  options.setProxy(proxy.manual({http: username:pass@proxy_url}));  These are not working.   ## Environment  OS: OSX Browser: Chrome Browser version: Latest Browser Driver version: Latest ChromeDriver Language Bindings version: Latest Nodejs","closed","","alicanso","2021-03-23T14:31:51Z","2021-09-05T08:10:41Z"
"","9206","Â¶Ç‰ΩïÁî®selenium4Êã¶Êà™ÁΩëÁªúÊµÅÈáèÂπ∂ÊòæÁ§∫Âá∫Êù•?","Êàë‰∏çÁü•ÈÅìÊÄé‰πàÊ†∑ÈÄöËøádriver.log.add_listener()ËøõË°åÁΩëÁªúÊµÅÈáèÁöÑÊã¶Êà™ÔºåËøô‰∏™ÂäüËÉΩÂú®javaËØ≠Ë®Ä‰∏äÂ∫îËØ•ÊòØËÉΩÂ§üÊ≠£Â∏∏‰ΩøÁî®‰∫ÜÔºå‰ΩÜÊòØPythonÁâàÊú¨Áº∫Â∞ëÂØπÂ∫îÁöÑÊñáÊ°£ÊîØÊíëÔºåÂú®google‰∏ä‰πüÊó†Ê≥ïÊêúÁ¥¢Âà∞Áõ∏Â∫îÁöÑÂÜÖÂÆπ„ÄÇ seleniumÁâàÊú¨‰∏∫selenium4.0.0b1 pythonÁâàÊú¨‰∏∫3.8.2","closed","","Swj-ningbo","2021-02-24T09:17:12Z","2021-09-05T08:15:49Z"
"","9195","Add attribute_to_be_include method to expected_conditions when the at‚Ä¶","‚Ä¶tribute given is include the element's attributes  This method is for the expected conditions is the given attribute include in the given element's attributes, if dose not exist, will return False.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Add attribute_to_be_include method to expected_conditions when the attribute given is include the element's attributes   ### Motivation and Context Add attribute_to_be_include method to expected_conditions when the attribute given is include the element's attributes    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","sunnyyukaige","2021-02-20T08:43:27Z","2021-02-22T08:14:13Z"
"","9200","Add attribute_to_be_include method to expected_conditions when the at‚Ä¶","‚Ä¶tribute given is include the element's attributes    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Add attribute_to_be_include method to expected_conditions when the attribute given is include the element's attributes  ### Motivation and Context Can use attribute_to_be_include method of expected_conditions when the attribute given is include the element's attributes	  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","sunnyyukaige","2021-02-22T08:51:03Z","2021-03-02T10:18:00Z"
"","9135","I want to run tests with reactor-based http client once again to check its performance","‚Ä¶k its performance    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","barancev","2021-02-02T22:21:40Z","2021-02-03T10:58:08Z"
"","9273","Allow RelativeBy to start with any locator, not just tag name","‚Ä¶ tests for these methods    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.    added new methods for RelativeBy(withXpath,withCssSelector)  ### Description Added new Methods for RelativeLocator to improve UX.   ### Motivation and Context  I believe it improves UX. now it's easier to use RelativeLocator.    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ x] My change requires a change to the documentation. - [ -] I have updated the documentation accordingly. - [ x] I have added tests to cover my changes. - [ x] All new and existing tests passed.","closed","","JustasMonkev","2021-03-12T17:21:21Z","2021-05-14T08:40:48Z"
"","9068","Only set 'startup.homepage_welcome_url' if 'browser.startup.homepage'‚Ä¶","‚Ä¶ is set in profile - Issue 8845    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","twalpole","2021-01-19T23:47:55Z","2021-11-08T16:14:10Z"
"","9268","The log shows ""The key ""target-densitydpi"" is not supported."" when i open site use chrome headless","windows 10 python 3.7.3 selenium 3.141.0 Chrome 88.0.4324.190  My code:  `Python` class Driver(object):      def __init__(self):          self.options = webdriver.ChromeOptions()         self.options.add_argument(""--disable-blink-features=AutomationControlled"")         self.options.add_argument('--headless')         self.driver = webdriver.Chrome(options=self.options)      def host(self):          self.driver.get(""xxxxxxx"")  driver = Driver() drive.host()  # The log shows ""The key ""target-densitydpi"" is not supported."" when i open site use chrome headless.","closed","","lxjmaster","2021-03-12T09:25:17Z","2021-09-05T08:12:21Z"
"","9503","will .reset_actions() be fixed in 4.0, if not when will it be for python?","will .reset_actions() be fixed in 4.0, if not when will it be for python?","closed","","TheMakerOfWorlds","2021-05-21T17:20:56Z","2021-09-05T08:03:22Z"
"","9012","WebDriver instance cannot access camera feed on MacOS BigSur","While testing web application to video chat web driver session could not get camera feed even when the camera is turned ON( green light is ON). I have tried using the latest selenium version and the issue is with 3.14.* versions too, this is observed after upgrading to macOS 11.0.1. Logs show that it is using the 10.16 version  > Build info: version: '4.0.0-alpha-7', revision: 'de8579b6d5' > System info: host: '*******', ip: '*******', os.name: 'Mac OS X', os.arch: 'x86_64', **os.version: '10.16'**, java.version: '1.8.0_271' > Driver info: org.openqa.selenium.chrome.ChromeDriver > Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: /var/folders/_y/x1_12lqj6_l...}, goog:chromeOptions: {debuggerAddress: localhost:50378}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} >  > Starting ChromeDriver 87.0.4280.88 (89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761}) on port 1786 > Only local connections are allowed. > Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. > ChromeDriver was started successfully. > Dec 30, 2020 1:55:53 PM org.openqa.selenium.remote.ProtocolHandshake createSession > INFO: Detected dialect: W3C > Dec 30, 2020 1:55:53 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch > WARNING: Unable to find an exact match for CDP version 87, so returning the closest version found: 86 > Dec 30, 2020 1:55:53 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch > INFO: Found CDP implementation for version 87 of 86 >   ## Last working Selenium version  Worked up to version: 3.141.59  Stopped working in version:  ## To Reproduce :3.141.59  Detailed steps to reproduce the behavior:  ## Expected behavior  Open Chrome browser and open any site to test web camera  ## Test script reproducing this issue (when applicable)  Chrome profile is opened with below options  System.setProperty(""webdriver.chrome.driver"", System.getProperty(""user.dir"")+""/apps/drivers/""+Utils.getOSname()+""/chromedriver"");  				Map prefs = new HashMap(); 				prefs.put(""profile.default_content_setting_values.notifications"", 1); 				prefs.put(""profile.default_content_setting_values.media_stream_mic"", 1); 				prefs.put(""profile.default_content_setting_values.media_stream_camera"", 1); 				loggingprefs = new LoggingPreferences(); 				loggingprefs.enable(LogType.PERFORMANCE,Level.ALL); 				ChromeOptions options = new ChromeOptions(); 				options.addArguments(""--start-maximized""); 				options.addArguments(""--enable-javascript""); 				options.setExperimentalOption(""prefs"", prefs); 				options.addArguments(""--auto-open-devtools-for-tabs""); 				options.addArguments(""--disable-web-security""); 				options.addArguments(""--user-data-dir=/tmp/chrome_dev_test""); 				options.addArguments(""--no-sandbox""); 				options.setCapability(CapabilityType.LOGGING_PREFS, loggingprefs); 				options.setAcceptInsecureCerts(true); 				options.addArguments(""use-fake-ui-for-media-stream""); 				bdriver = new ChromeDriver(options);  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: OSX 11.0.1  Browser: chrome, all Browser version: 87 Browser Driver version: chromedriver 87 Language Bindings version: java","closed","","sankalphirke","2020-12-30T08:57:25Z","2021-09-05T08:27:44Z"
"","9050","selenium.common.exceptions.InvalidArgumentException: Message: unexpected end of hex escape at line 1 column 76022","while I'm using python selenium (Last Version) on Win10, I got this error:  ``` Traceback (most recent call last):   File ""C:\Users\buf\Desktop\GrapThem\grapusers.py"", line 111, in      getUsers(args.groupName,wait,driver)   File ""C:\Users\buf\Desktop\GrapThem\grapusers.py"", line 22, in getUsers     UsersCount = BeautifulSoup(driver.page_source,""html.parser"")   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 679, in page_source     return self.execute(Command.GET_PAGE_SOURCE)['value']   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: unexpected end of hex escape at line 1 column 76022 ``` this is the part of my code which is the error began:  ```     driver.get(f""https://web.telegram.org/#/im?p=@{groupName}"")     def usrs():         try:             wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,'div[class=""tg_head_peer_info""]'))).click()             wait.until(EC.element_to_be_selected((By.CSS_SELECTOR,'i[class=""md_modal_section_icon md_modal_section_icon_people""]')))             status = False         except:             print(""[!]Error to get members data!"")     wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR,'div[class=""tg_head_peer_info""]'))).click()  ``` this is the website : https://web.telegram.org/","closed","","CJSparrow","2021-01-15T00:45:07Z","2021-09-05T08:25:04Z"
"","9358","Selenium while dragAndDrop drag element to physical cursor","While drag and drop an element from one point to other, instead of moving to the defined target element location, the element is at the physical cursor position. Unable to drag and drop to the desired location  Browser details: Google Chrome 89.0.4389.114","closed","","yeskayviswa","2021-04-05T13:25:43Z","2021-09-05T08:08:41Z"
"","9745","[question] How to wait until onload event is fired when navigating","when using ``webdriver.get()`` to navigate a website, it will return after all resource are loaded. But is there any way to wait until the onload event logic is processed? For example, when visit this html file:  ```html     func(){     console.log(""before"")     //      // heavy jobs     //     console.log(""after"") }  ```  ``webdriver.get()`` will return before the browser calls ``func()``. What I want is to wait until ``func()`` is returned. Is there any feasible solution?","closed","","ntcmp2u","2021-08-18T09:16:57Z","2021-09-18T00:05:14Z"
"","8904","Cache IWebElement before checking TagName is correct","When creating a SelectElement we must first check the WrappedElement tag is select and throw a UnexpectedTagNameException otherwise.  Previously the WrappedElement was not cached so WebDriver API could be called up to three times: first to check the tag is not null, second to check it's value is select (ignoring case) and a third time as a parameter of UnexpectedTagNameException if any of the previous conditions failed.  Fixes #8899    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","elgatov","2020-11-24T19:03:32Z","2020-11-24T21:50:29Z"
"","9885","When calling Quit method after collecting network/console logs, getting an error that belong to cookies RC2","When collecting network request/responses or collect console logs in the end of the test when doing quit I've got the next  exception: Error converting value {null} to type 'System.Double'. Path 'params.blockedCookies[0].cookie.expires', line 1, position 364. Stack trace:    at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)    at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)    at System.Threading.Tasks.Task.Wait()    at OpenQA.Selenium.DevTools.DevToolsSession.Dispose(Boolean disposing)    at OpenQA.Selenium.DevTools.DevToolsSession.Dispose()    at OpenQA.Selenium.Chromium.ChromiumDriver.CloseDevToolsSession()    at OpenQA.Selenium.Chromium.ChromiumDriver.Dispose(Boolean disposing)    at OpenQA.Selenium.WebDriver.Dispose()    at OpenQA.Selenium.WebDriver.Quit()  **PLEASE NOTE : This Happen only if I've had a logout step from my the SUT in my test **  ## To Reproduce public void EnableNetworkConsoleDevTools()         {             session = devtools.GetDevToolsSession();             var domains = session.GetVersionSpecificDomains();             domains.Console.MessageAdded += Console_MessageAdded;             domains.Network.RequestWillBeSent += Network_RequestWillBeSent;             domains.Network.ResponseReceived += Network_ResponseReceived;             domains.Console.Enable(new OpenQA.Selenium.DevTools.V94.Console.EnableCommandSettings());             domains.Network.Enable(new OpenQA.Selenium.DevTools.V94.Network.EnableCommandSettings(), new CancellationToken(false));          }  public void DisableNetworkConsoleDevTools()         {                              var domains = session.GetVersionSpecificDomains();                 domains.Console.MessageAdded -= Console_MessageAdded;                 domains.Network.RequestWillBeSent -= Network_RequestWillBeSent;                 domains.Network.ResponseReceived -= Network_ResponseReceived;                 domains.Console.Disable(new OpenQA.Selenium.DevTools.V94.Console.DisableCommandSettings());                 domains.Network.Disable(new OpenQA.Selenium.DevTools.V94.Network.DisableCommandSettings(), new CancellationToken(false));                 domains.Network.ClearBrowserCache();                 devtools.CloseDevToolsSession();                      }  And then in the end of the test when I did driver.Quit() I've got the exception that described at the top of the bug.  Expected Behavior: Driver closed successfully    ## Environment  OS: Windows 10 Browser: Chrome94.0.4606.61 Browser version: 94.0.4606.61 Browser Driver version: Chrome driver 94.0.4606.61 Language Bindings version: .Net 4.6","closed","","assafmashal","2021-10-06T08:22:25Z","2021-11-06T00:06:13Z"
"","9540","Fix incorrect uses of 'NoReturn' type annotation","When a function or method explicitly or implicitly returns `None`, its return type annotation should be `None`. `NoReturn` should only be used when a function or method never returns e.g., it always raises an `Exception`.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","varunsurapaneni","2021-06-02T12:35:18Z","2021-06-09T20:06:34Z"
"","9057","best practices to ease the Test Maintenance on Selenium Scripts","What are the best practices to ease the Test Maintenance and keep the Test suite to latest and real time on Selenium","closed","","Shamz2610","2021-01-15T13:37:57Z","2021-09-05T08:25:04Z"
"","8944","Jquery (jquery-3.1.1.min.js) Secuirty Vulnerability in Selenium 3.141.59","We have recently run our organization vulnerability scan on the machine where Selenium is running ,and it is throwing security breach for Jquery 3.1.1.min.js version . And the Jquery has already worked on the security breach in there 3.5.0 version.  Can selenium also upgrades the Jquery Version within so that the selenium could run through without any breach . Thanks","closed","","Afrina-Alam","2020-12-10T13:28:23Z","2021-09-05T08:30:12Z"
"","9290","Too Many Open Files","We have a pool of chromedrivers (10) that are rotating requests. 3.14 has been in production for years and has had no issues. We switched to beta and after about 10 minutes of running thousands of requests, we are getting the ""too many open files"" error on linux.  [root@tst05 ec2-user]# ulimit -a core file size (blocks, -c) 0 data seg size (kbytes, -d) unlimited scheduling priority (-e) 0 file size (blocks, -f) unlimited pending signals (-i) 31377 max locked memory (kbytes, -l) 64 max memory size (kbytes, -m) unlimited open files (-n) 1024 pipe size (512 bytes, -p) 8 POSIX message queues (bytes, -q) 819200 real-time priority (-r) 0 stack size (kbytes, -s) 8192 cpu time (seconds, -t) unlimited max user processes (-u) 31377 virtual memory (kbytes, -v) unlimited file locks (-x) unlimited  The ""lsof"" command, quickly balloons to 2,000,000 in 10 minutes (getting thousands of these, the PID is just the wildfly container PID):  java 24029 jboss 1635u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1636r FIFO 0,11 0t0 5276106 pipe java 24029 jboss 1637w FIFO 0,11 0t0 5276106 pipe java 24029 jboss 1638u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1639r FIFO 0,11 0t0 5276107 pipe java 24029 jboss 1640w FIFO 0,11 0t0 5276107 pipe java 24029 jboss 1641u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1642r FIFO 0,11 0t0 5276108 pipe java 24029 jboss 1643w FIFO 0,11 0t0 5276108 pipe java 24029 jboss 1644u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1645w FIFO 0,11 0t0 5324005 pipe java 24029 jboss 1646r FIFO 0,11 0t0 5304978 pipe java 24029 jboss 1647r FIFO 0,11 0t0 6772505 pipe java 24029 jboss 1648r FIFO 0,11 0t0 5276545 pipe java 24029 jboss 1649r FIFO 0,11 0t0 5500458 pipe java 24029 jboss 1650w FIFO 0,11 0t0 6776069 pipe java 24029 jboss 1651u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1652r FIFO 0,11 0t0 7122391 pipe java 24029 jboss 1653r FIFO 0,11 0t0 5325400 pipe java 24029 jboss 1654w FIFO 0,11 0t0 5297692 pipe java 24029 jboss 1655r FIFO 0,11 0t0 5273503 pipe java 24029 jboss 1656u a_inode 0,12 0 7664 [eventpoll]  ## To Reproduce  Crawl with a pool of 10 chromedrivers.  ## Expected behavior  too many open files should not occur, limits are very high.  ## Test script or set of commands reproducing this issue  public class ChromePool extends ResourcePool {  	private static Log log = LogFactory.getLog(ChromePool.class);  	private static ChromeOptions options;   	public static int JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS = 20000; 	public static String JAVASCRIPT_DIR = ""c:/temp/javascript-tmp""; 	public static final boolean isWindows; 	 	private static String webVitalsSnippet = null; 	 	static {  		System.setProperty(""webdriver.chrome.silentOutput"", ""true""); 		 		isWindows = System.getProperty(""os.name"").toLowerCase().startsWith(""windows""); 		 		/** 		 * Cleanup orphaned chromedriver and chrome instances, and setup new environment 		 */ 		if (isWindows) { 			 			JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS = 20000; 			JAVASCRIPT_DIR = ""c:/temp/javascript-tmp"";  			killChromeProcesses(); 			killChromeDriverProcesses();  			System.setProperty(""webdriver.chrome.driver"", ""y:/code/chromedriver.exe""); //TODO make catalogControl  			options = new ChromeOptions();   			options.setBinary(""C:/Program Files (x86)/Google/Chrome/Application/chrome.exe""); //TODO make catalogControl 			 		} else { // linux 			 			JAVASCRIPT_DIR = ""/tmp/javascript-tmp""; 			 			killChromeProcesses(); 			killChromeDriverProcesses();  			System.setProperty(""webdriver.chrome.driver"", ""/usr/bin/chromedriver"");   			options = new ChromeOptions();   			options.setBinary(""/usr/bin/chrome"");   		}  	    try {  			FileIO.createDir(JAVASCRIPT_DIR);  			File dir = new File(JAVASCRIPT_DIR); 			String[] children = dir.list(); 			for (int i = 0; i < children.length; i++) { 				FileIO.deleteDir(new File(dir, children[i])); 			}  	    } catch (Exception e) { 	    	log.error("""",e); 	    }  	} 	 	private static ChromePool pool = null;  	private static int NUM_JAVASCRIPT_PARSERS = 9; // 2x backlink (3) + 3x crawler (1) 	private ChromePool(int maxDrivers) {           super(maxDrivers, true);         createPool();  	}       public static ChromePool getInstance() {          if (pool == null) {             pool = new ChromePool(NUM_JAVASCRIPT_PARSERS); // 1 for each crawler, and 3 backlink analyzers         }         return pool;      }       @Override     protected WebDriver createObject() {      	return createDriver();     	     }      private WebDriver createDriver() {     	     	ChromiumDriver driver = null; 		try {   			options.addArguments(""--silent"", ""--headless"", ""--blink-settings=imagesEnabled=false"", ""--disable-blink-features"", ""--disable-blink-features=AutomationControlled"", ""--disable-gpu"", ""--no-sandbox"", ""--window-size=1920,1200"", ""--ignore-certificate-errors"", ""--disable-application-cache"");   			options.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);              LoggingPreferences logPrefs = new LoggingPreferences();             logPrefs.enable(LogType.PERFORMANCE, Level.ALL);             options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);             options.setCapability( ""goog:loggingPrefs"", logPrefs );             options.setPageLoadStrategy(PageLoadStrategy.EAGER);  			DriverService.Builder serviceBuilder = new ChromeDriverService.Builder().withSilent(true); 			ChromeDriverService chromeDriverService = (ChromeDriverService)serviceBuilder.build();   			if (!isWindows) { 				chromeDriverService.sendOutputTo(new FileOutputStream(""/dev/null"")); 			} 			 			int localRetryCount2 = 0; 			boolean lastRequestGood2 = false;         	while (localRetryCount2 < 3 && !lastRequestGood2){ 				try { 					driver = new ChromeDriver(chromeDriverService, options); 					lastRequestGood2 = true; 				} catch (Exception e) { 					log.warn(""localRetryCount2: "" + localRetryCount2,e); 					Thread.sleep(5000); 					localRetryCount2++; 				}         	}         	         	if (!lastRequestGood2) {         		log.fatal(""Unable to create ChromeDriver after 3 retries..."");         	}         	 			driver.manage().timeouts().pageLoadTimeout(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS, TimeUnit.MILLISECONDS); 			driver.manage().timeouts().setScriptTimeout(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS, TimeUnit.MILLISECONDS); 			 		} catch (Exception e) {  			log.error("""",e);  		} 		 		return driver;      }           	@Override 	public WebDriver acquire() throws Exception { 		WebDriver driver = super.acquire(); 		 		if (driver == null || driver.getWindowHandles().size()  100 && (System.currentTimeMillis() - threadTimer) < ChromePool.JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS) { 							Thread.sleep(1000); 							diff = Math.abs(content.length() - driver.getPageSource().length()); 							content = driver.getPageSource(); 						} 						 						long navigationStart = (Long)js.executeScript(""return window.performance.timing.navigationStart""); 						long responseStart = (Long)js.executeScript(""return window.performance.timing.responseStart"");  						timer = responseStart - navigationStart; 						  						try { 							new Actions(driver).moveByOffset(50, 50).contextClick().build().perform();  						} catch (MoveTargetOutOfBoundsException mtobe) { 						}  					} catch (Exception e) { 						log.warn(""Problem getting content and clicking for URL: "" + uRL.toExternalForm(),e); 					} 					 					try { 						LogEntries logs = driver.manage().logs().get(LogType.PERFORMANCE);  						URL currentURL = null; 						try { 							currentURL = new URL(driver.getCurrentUrl()); 						} catch (Exception e) { 							currentURL = uRL; 							log.error(""["" + uRL.toExternalForm() + ""] defaulting back to original URL. driver.getCurrentUrl: "" + driver.getCurrentUrl(),e); 						} 						String messageUrlString = null;						 			            String redirectedURL = null; 			            List responses = new LinkedList(); 			             			            for (Iterator it = logs.iterator(); it.hasNext();) { 			                LogEntry entry = it.next();  			                try { 			                    JSONObject json = new JSONObject(entry.getMessage());  			                    JSONObject message = json.getJSONObject(""message""); 			                    String method = message.getString(""method"");  			                    if (method != null && RESPONSE_RECEIVED.equals(method)) { 			                         			                    	JSONObject params = message.getJSONObject(""params""); 			                        JSONObject response = params.getJSONObject(""response""); 			                         			                        responses.add(response); 			                        messageUrlString = response.getString(""url"");  			                        URL messageURL = null; 			                        try { 			                        	messageURL = new URL(messageUrlString); 			                        } catch (Exception e) { 			                        }  			                        if (messageURL != null &&  			                        		 			                        		(Util.isServerHostSame(messageURL.getHost(), currentURL.getHost()) ||  			                        				Util.isServerHostSame(messageURL.getHost(), uRL.getHost())) ) { 			                        	 			                        	responseCode = String.valueOf(response.getInt(""status"")); 			                            JSONObject headers = response.getJSONObject(""headers""); 			                             			                            try { 				                            redirectedURL = (String) getIgnoreCase(headers,""location""); 			                            } catch (JSONException je) { 			                            } 			                            try { 				                            contentType = (String) getIgnoreCase(headers,""content-type"");  			                            } catch (JSONException je) { 				                            try { 					                            contentType = (String) getIgnoreCase(response,""mimeType"");  				                            } catch (JSONException je2) { 				                            	log.error(""no content-type or mimeType for messageUrlString: "" + messageUrlString); 				                            } 			                            } 			                            try { 				                            encoding = (String) getIgnoreCase(headers,""content-encoding""); 			                            } catch (JSONException je) { 			                            } 			                             			                            break; 			                        } 			                         			                    } 			                     			                } catch (JSONException e) { 			                    log.error("""",e); 			                } 			                 			            } // next network log line  				        String updatedURL = null; 				        if (redirectedURL != null){ 				        	updatedURL = redirectedURL; 				        } else { 				        	updatedURL = currentURL.toExternalForm(); 				        }  				        updatedURL = Util.convertRelativeURLToAbsolute(uRL, updatedURL); 				        updatedURL = Util.formatURL(updatedURL);  				        uRL = new URL(updatedURL);  			        	int responseCodeInt = Integer.parseInt(responseCode); 				        if (responseCodeInt < 400){  					        success = true;  					        if (contentType == null ||  					        		(contentType.indexOf(""text/css"") == -1 &&  					        				contentType.indexOf(""text/plain"") == -1 &&  					        				contentType.indexOf(""text/html"") == -1 &&  					        				contentType.indexOf(""text/csv"") == -1 &&  					        				contentType.indexOf(""text/javascript"") == -1 &&  					        				contentType.indexOf(""application/xml"") == -1 &&  					        				contentType.indexOf(""application/json"") == -1) ){ 					        	 					        	log.info(""["" + uRL.toExternalForm() + ""] ["" + driver.getCurrentUrl() + ""] ["" + messageUrlString + ""] content being set to null because contentType = "" + contentType +  					        			"", responses: "" + responses); 					        	success = true; 					        	content = null; 					        	return;  					        } 					         				        }  					} catch (JavascriptException jse) { 						log.warn("""",jse); 					} catch (UnhandledAlertException uae2) { 						log.warn(""alert exception"",uae2); 					} catch (TimeoutException tme) { 						log.warn(""timedOut!"",tme); 					}  					done = true; 					 				} catch (UnreachableBrowserException ube) { 					retryCount++; 					ChromePool.getInstance().recycle(driver, true); 					Thread.sleep(new BigDecimal(Math.random() * 5000).longValue()); 					driver = (ChromiumDriver)ChromePool.getInstance().acquire(); 				} catch (WebDriverException wde) { 					if (wde.getMessage().contains(""chrome not reachable"") || wde.getMessage().contains(""Remote browser did not respond"") || wde.getMessage().contains(""cannot determine loading status"")) { 						retryCount++; 						ChromePool.getInstance().recycle(driver, true); 						Thread.sleep(new BigDecimal(Math.random() * 5000).longValue()); 						driver = (ChromiumDriver)ChromePool.getInstance().acquire(); 					} else { 						throw wde; 					} 				}  			} 			 			if (!done) { 				throw new InterruptedException(""Unable to run JavaScriptParserThread due to too many retries. Webpage: "" + uRL.toExternalForm()); 			} 			  		} catch(InterruptedException ie) {     		log.warn(""This Javascript thread was timed out: "" + uRL.toExternalForm(), ie);     		timedOut = true;     		recycleError = true; 		} catch(TimeoutException te) {     		log.warn(""Chrome Driver thread timed out: "" + uRL.toExternalForm());     		timedOut = true;     		recycleError = true; 		} catch(WebDriverException e) {  			int errorIndex = e.getMessage().indexOf(""unknown error: net::""); 			if (errorIndex >= 0) { 				responseCode = e.getMessage().substring(errorIndex+20, e.getMessage().indexOf(""\n"")); 				log.warn(""["" + uRL.toExternalForm() + ""] ERROR: "" + responseCode); 			} else { 				log.error(""["" + uRL.toExternalForm() + ""] timed out."", e); 	    		timedOut = true; 	    		recycleError = true; 			} 			 		} catch(Exception e) { 			log.error(uRL.toExternalForm(),e);     		timedOut = true; 		} finally { 			try { 				ChromePool.getInstance().recycle(driver, recycleError); 			} catch (Exception e) { 				log.error("""",e); 			} 		}  	} 	 	public Object getIgnoreCase(JSONObject jobj, String key) throws JSONException {  	    Iterator iter = jobj.keys(); 	    while (iter.hasNext()) { 	        String key1 = iter.next(); 	        if (key1.equalsIgnoreCase(key)) { 	            return jobj.get(key1); 	        } 	    }  	    throw new JSONException(""no find"");  	}  	 	  }   ## Environment  OS: AWS EC2 Amazon Linux 2 AMI Browser: Chrome (headless) Browser version: Google Chrome 88.0.4324.182 Browser Driver version: ChromeDriver 88.0.4324.96 Language Bindings version: Java 8 Selenium Grid version (if applicable): 4.0.0-beta-1","closed","","githubuser100007","2021-03-16T17:03:43Z","2021-09-05T08:12:12Z"
"","9289","Too Many Open Files, Beta failing","We have a pool of chromedrivers (10) that are rotating requests. 3.14 has been in production for years and has had no issues. We switched to beta and after about 10 minutes of running thousands of requests, we are getting the ""too many open files"" error on linux.  [root@tst05 ec2-user]# ulimit -a core file size          (blocks, -c) 0 data seg size           (kbytes, -d) unlimited scheduling priority             (-e) 0 file size               (blocks, -f) unlimited pending signals                 (-i) 31377 max locked memory       (kbytes, -l) 64 max memory size         (kbytes, -m) unlimited open files                      (-n) 1024 pipe size            (512 bytes, -p) 8 POSIX message queues     (bytes, -q) 819200 real-time priority              (-r) 0 stack size              (kbytes, -s) 8192 cpu time               (seconds, -t) unlimited max user processes              (-u) 31377 virtual memory          (kbytes, -v) unlimited file locks                      (-x) unlimited    The ""lsof"" command, quickly balloons to 2,000,000 in 10 minutes (getting thousands of these, the PID is just the wildfly container PID):  java      24029                jboss 1635u  a_inode               0,12          0       7664 [eventpoll] java      24029                jboss 1636r     FIFO               0,11        0t0    5276106 pipe java      24029                jboss 1637w     FIFO               0,11        0t0    5276106 pipe java      24029                jboss 1638u  a_inode               0,12          0       7664 [eventpoll] java      24029                jboss 1639r     FIFO               0,11        0t0    5276107 pipe java      24029                jboss 1640w     FIFO               0,11        0t0    5276107 pipe java      24029                jboss 1641u  a_inode               0,12          0       7664 [eventpoll] java      24029                jboss 1642r     FIFO               0,11        0t0    5276108 pipe java      24029                jboss 1643w     FIFO               0,11        0t0    5276108 pipe java      24029                jboss 1644u  a_inode               0,12          0       7664 [eventpoll] java      24029                jboss 1645w     FIFO               0,11        0t0    5324005 pipe java      24029                jboss 1646r     FIFO               0,11        0t0    5304978 pipe java      24029                jboss 1647r     FIFO               0,11        0t0    6772505 pipe java      24029                jboss 1648r     FIFO               0,11        0t0    5276545 pipe java      24029                jboss 1649r     FIFO               0,11        0t0    5500458 pipe java      24029                jboss 1650w     FIFO               0,11        0t0    6776069 pipe java      24029                jboss 1651u  a_inode               0,12          0       7664 [eventpoll] java      24029                jboss 1652r     FIFO               0,11        0t0    7122391 pipe java      24029                jboss 1653r     FIFO               0,11        0t0    5325400 pipe java      24029                jboss 1654w     FIFO               0,11        0t0    5297692 pipe java      24029                jboss 1655r     FIFO               0,11        0t0    5273503 pipe java      24029                jboss 1656u  a_inode               0,12          0       7664 [eventpoll]","closed","","githubuser100007","2021-03-16T16:50:40Z","2021-09-05T08:12:13Z"
"","8896","Create Stub File for Type Annotation","Using VSCode with pylance plugin in strict mode generate a lot of errors about missing type annotation. The request is to create a stub file (*.pyi) to document every type of constants, methods, functions, etc.  https://www.python.org/dev/peps/pep-0484/ https://www.python.org/dev/peps/pep-0561/","closed","","diegostammer","2020-11-23T10:00:06Z","2021-09-05T08:30:27Z"
"","9760","Selenium tests ran from exe launched via Windows service fail when using Chrome v92.","UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36  Steps to reproduce the problem:  1. Run Selenium test with chromedriver v92 and Chrome v92 from a Windows service. 2. Watch Selenium test fail with chromedriver reporting error ""Chrome not reachable"". 3. Repeat test with chromedriver v91 and matching chrome browser version. 4. Notice that test passes without error.  What is the expected behavior? When using versions of Chrome before v92, the tests pass without error.  What went wrong? Background on my use case - my application can be by launched either via a separate UI application or via a Windows service. The example flows are as follows.  Flow 1 - [ Execution via UI application ]:  `ui.exe > application.exe > chromedriver.exe > chrome.exe`  Flow 2 - [ Execution via Windows service ]:  `service.exe > application.exe > chromedriver.exe > chrome.exe`  A few things to note:  (1) The difference between the two outlined flows is that:  - in flow 1 (UI), application.exe gets launched from interactive desktop user (under session 1). This is because a desktop user has logged into the machine, started ui.exe and thus application.exe gets launched with the same desktop privilege's as ui.exe.  - in flow 2 (Windows service), service.exe is running as a Windows service (session 0), therefore if I understand correctly, it will have no rights to interact with desktop.  (2) In both described flows, all components are running on the same Windows machine, i.e.:  - in flow 1 I log onto machine, open ui.exe, hit 'start' which launches applciation.exe which launches chromedriver.exe which launches chrome.exe etc.  - in flow 2 I hit a local REST API (running on the same machine) which causes service.exe (running as a Windows service) to launch application.exe which launches chromedriver.exe which launches chrome.exe etc.  (3) I have tested with and without the --headless flag, which succeeds in versions of Chrome before v92.  As mentioned, before v92 of Chrome this worked, but for some reason with the release of v92 of Chrome (and associated chromedriver version), when chrome.exe from gets launched from chromedriver.exe via the Windows service, it crashes immediatley with errors:  Chrome log:  ``` [20812:2436:0809/094323.477:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.477:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 1 time(s) [20812:2436:0809/094323.601:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.601:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 2 time(s) [20812:2436:0809/094323.718:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.719:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 3 time(s) [20812:2436:0809/094323.837:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.837:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 4 time(s) [20812:2436:0809/094323.967:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.967:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 5 time(s) [20812:2436:0809/094324.133:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094324.134:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 6 time(s) [20812:2436:0809/094324.134:FATAL:gpu_data_manager_impl_private.cc(414)] GPU process isn't usable. Goodbye. ```  And chromedriver.exe reports the following error:  `chrome not reachable. (Session info: headless chrome=92.0.4515.131).`  Chrome version: 92.0.4515.159  Channel: stable OS Version: 10.0  From reading these logs it looks like chrome.exe has crashed and thus, is genuinely not reachable from chromedriver.exe. NOTE: Just to be clear - execution via flow 1 (UI) works as intended with Chrome v92. It is only execution via flow 2 (Windows service) that fails in this way. And before v92 of Chrome, both flows worked without error.  The only way I have got execution via flow 2 (Windows service) to work with Chrome v92 is to specify the --no-sandbox flag as an argument to be passed to chrome when launching chromedriver. When I supply this argument, execution runs to completion and we do not receive the above errors.  From reading online about Chrome sandboxing, I want to avoid use of --no-sandbox flag. I know this may not be a Selenium issue as such, since it seems to be related to Chrome and Chromedriver, but I would appreciate any advice on the issue if possible.  Thanks","closed","","cmcateer-845","2021-08-25T09:32:23Z","2021-09-25T00:05:35Z"
"","9048","[rb] Update Rubocop","Updating Ruby code to match the latest Rubocop version  The PR is to kick off the tests in GitHub Actions before merging; there shouldn't be anything controversial in this one.","closed","C-rb,","titusfortner","2021-01-13T20:49:40Z","2021-01-14T02:20:18Z"
"","9136","Unable to launch webbrowser, using selenium webdriver","Unable to launch Edge browser, using selenium webdriver  from selenium import webdriver >>> d=webdriver.Edge() Traceback (most recent call last):   File """", line 1, in    File ""C:\Users\test\flasky\venv\lib\site-packages\selenium\webdriver\edge\webdriver.py"", line 61, in __init__     RemoteWebDriver.__init__(   File ""C:\Users\test\flasky\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""C:\Users\test\flasky\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""C:\Users\test\flasky\venv\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\test\flasky\venv\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 208, in check_response     raise exception_class(value) selenium.common.exceptions.WebDriverException: Message: Unknown error     ## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior: The script suppose to open Edge browser, but unfortunately it exited with an error  A clear and concise description of what you expected to happen.  from selenium import webdriver driver=webdriver.Edge(executable_apth='msedgedriver.exe')  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: windows 10 Browser: Edge Browser version: 87.0.664.75 Browser Driver version: 87.0.664.0/ Language Bindings version: python 3.8 Selenium Grid version (if applicable):","closed","R-awaiting answer,","shans0535","2021-02-03T09:24:49Z","2021-09-05T08:21:28Z"
"","8936","Support for float types in text fields","TypeError: object of type 'float' has no len()    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Added support for float types when converting keys to list in the keys_to_typing method  ### Motivation and Context  The current implementation raises ""TypeError: object of type float has no len()"" when a float value is passed to the send_keys method which in turn calls keys_to_typing which calls range(len(value)) on every type other than int  ### Types of changes  - [x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ x] All new and existing tests passed.","closed","","Naveen3Singh","2020-12-07T10:50:31Z","2020-12-07T11:02:34Z"
"","9664","[rb] Run tests iff files relevant to ruby update","This uses the paths feature on github workflows to only run automations if relevant files change   ### Motivation and Context Build less unnecessarily.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","toddtarsi","2021-07-19T14:49:04Z","2021-07-19T15:17:30Z"
"","9209","Selenium 4 - Unable to set Chrome download.default_directory","This python code is working with Selenium 3.141 but is not in 4.0.0.b1.  I see a warning - Expected type 'Union[str, int]', got 'dict[str,str]' instead.  The documentation I see on this shows prefs is a dictionary (https://chromedriver.chromium.org/capabilities).  options = webdriver.ChromeOptions() prefs = {'download.default_directory': 'C:\\Temp'} options.add_experimental_option('prefs', prefs)","closed","","chadnorris","2021-02-24T20:29:08Z","2021-09-05T08:15:49Z"
"","8988","ElementClickInterceptedError with chrome and chromedriver 87","This issue has been discussed many times over the years but I can now offer the maintainers a 100% reproducible, open source project that consistently demonstrates the problem.  The environment is SVG.  driver.findElement() finds the DOM element, an SVG image, and clicks on it.  The test suite that fails does this 14 times, and exactly the same seven tests fail every time.  The application source is here:  https://github.com/walthaas/snow_profile  The SVG images move before they are clicked.  I can't see a direct relationship between the movement and the failure, although the ElementClickIntercepted message seems to show that the click happened closer to the original location than the current location.  I tried waiting for movement to settle down by inserting a driver.sleep() between movement and click but that didn't make any difference.  The test environment is Jest and the suite that fails is __tests__/squaretop-east-2014-02-13.js The results are the same whether only that suite, or all four, are run.  Executing the test script by moving the mouse and clicking on the SVG produces the expected result every time.  The application will seem obscure, unless you go into the mountains in the winter, in which case it is a matter of life or death.","closed","","walthaas","2020-12-21T23:30:30Z","2021-09-05T08:27:51Z"
"","9856","Create interfaces for RemoteWebDriver to use with Augmenter","This is similar to what we did for the Firefox capabilities, but I'm implementing, but I'm not sure this is the best way to do this (i.e. with the `ChromiumNetworkConditions` class). Would be a lot simpler to do ordered parameters, but this lets users only specify the things they care about.  Edit: I'm just going to add everything here to get feedback on it all.","closed","C-java,","titusfortner","2021-09-21T06:25:43Z","2021-09-28T14:03:20Z"
"","9864","[rb] move new window functionality into TargetLocator","This is essentially to match the other bindings  I tied it to the existing `TargetLoctor#window` method to allow using it with a block, but instead of just switching back to the original window, I changed it so that it closes the window and switches back. Is that too cute? It makes more sense for it to be like this if it is going to take a block, but maybe it would be surprising to a user?","closed","C-rb,","titusfortner","2021-09-23T03:22:01Z","2021-09-24T04:37:31Z"
"","9412","[build] Remove old unused python third_party items","This is clearing out the old /third_party/py directory. Using PR to see what breaks but not expecting anything to.  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-04-22T14:52:14Z","2021-04-22T20:36:53Z"
"","9164","[rb] implement initial support for Firefox BiDi","This is a little hacky in parts, but it shows Firefox working with DevTools code;  Set `ENV[""FIREFOX_NIGHT_BINARY""]` to the path of Firefox Nightly & run: `./go //rb:firefox-nightly-test`  * Not sure what the plan is for version support from Firefox BiDi going forward, this hard codes it to v85 for now * Chrome & Firefox log exceptions differently, so there's an ugly conditional * Firefox registers events multiple times, so specs now say `>=` instead of `==`  It's rough, but it should be good enough to go into the beta I think.","closed","C-rb,","titusfortner","2021-02-10T20:46:40Z","2021-03-01T21:31:38Z"
"","9710","Move java sources and tests into a single tree","This emphasizes that all the java code is inter-related. We make use of bazel to avoid introducing Java 8 incompatible changes, and bazel's visibility rules to ensure that generated jars only contain what they should.  ### Description Move all the java code into a single place  ### Motivation and Context Because it's nice to have everything in one place.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [x] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-java,","shs96c","2021-08-03T10:38:16Z","2021-08-03T14:39:32Z"
"","9870","Add w3c capabilities to Python options","This creates setters and getters in the options classes for all w3c compliant standard capabilities. Type hints, docstrings and links to the spec have been added to each method.","closed","","titusfortner","2021-09-25T22:56:36Z","2021-09-27T12:43:31Z"
"","9715","Update IE Options Classes to match currently supported IE Driver Capabilities","This addresses #9699   I think I did this correctly for each language, please verify.  (Oh, and I wanted to double check I'm not screwing up backward compatibility with a JWP capability I deleted in Java)  Thanks!","closed","C-java,","titusfortner","2021-08-03T22:21:54Z","2021-08-20T20:07:59Z"
"","9344","Provide W3C-compliant API for setting `alwaysMatch` and `firstMatch`","There are multiple variants that need to be supported:  ```ruby require 'selenium-webdriver'  caps1 = Selenium::WebDriver::Remote::Capabilities.firefox caps2 = Selenium::WebDriver::Remote::Capabilities.chrome opts1 = Selenium::WebDriver::Chrome::Options.new  Selenium::WebDriver.for(:remote, capabilities: :chrome) Selenium::WebDriver.for(:remote, capabilities: {browser_name: 'chrome'}) Selenium::WebDriver.for(:remote, capabilities: {always_match: {browser_name: 'chrome'}}) Selenium::WebDriver.for(:remote, capabilities: {first_match: [{browser_name: 'chrome'}]}) Selenium::WebDriver.for(:remote, capabilities: caps1) Selenium::WebDriver.for(:remote, capabilities: [caps1, opts1]) Selenium::WebDriver.for(:remote, capabilities: Selenium::WebDriver::Remote::Capabilities.first_match(caps1, caps2)) Selenium::WebDriver.for(:remote, capabilities: Selenium::WebDriver::Remote::Capabilities.first_match(caps1, caps2, opts1)) Selenium::WebDriver.for(:remote, capabilities: Selenium::WebDriver::Remote::Capabilities.always_match(caps1)) ```","closed","C-rb,","p0deje","2021-03-29T22:38:32Z","2021-09-05T08:08:47Z"
"","9111","Improve ""Ruby Bindings"" wiki page","There are common Ruby settings used to configure `::Selenium::WebDriver::Chrome::Options` that don't have a good home on the web where they are clearly documented and accessible to fellow users to save them time researching.  These common settings were scraped together from various StackOverflow and blog posts over the years. It'd be good if these were available in one place, on the wiki page at https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings   If given edit permission I will document these on that page.  ```rb options = ::Selenium::WebDriver::Chrome::Options.new  # Set window size options.add_argument 'window-size=2000,2000'  # Open dev tools options.add_argument 'auto-open-devtools-for-tabs'  # Exclude switch 'enable-automation' to remove infobar. This stops the # ""Chrome is being controlled by automated software."" infobar at the top of the # browser window from animating and breaking clicks sporadically. # https://bugs.chromium.org/p/chromedriver/issues/detail?id=1683 # https://github.com/GoogleChrome/chrome-launcher/blob/master/docs/chrome-flags-for-tools.md#--enable-automation options.add_option 'excludeSwitches', ['enable-automation']  # Stop Chrome from popping up ""Save password?"" dialog during logins # https://stackoverflow.com/questions/63189532/ruby-watir-disable-save-password-prompt options.add_preference 'credentials_enable_service', false options.add_preference 'password_manager_enabled', false  # Headless options options.add_argument 'headless' options.add_argument 'disable-gpu'  Capybara::Selenium::Driver.new(app, browser: :chrome, options: options) ```","closed","","eliotsykes","2021-01-27T12:07:42Z","2021-09-05T08:21:35Z"
"","9836","allow Augmenter implementations to specify additional commands","The problem with existing implementation is that while you can cast to the interface, you don't have access to the commands that are needed to actually execute the associated methods.  This code creates an additional method `getAdditionalCommands()` on the `AugmenterProvider` interface. There is a default of an empty Map, so implementing it is optional.  `Augmentation` class has this method added to the constructor, which meant updating a bunch of things in the class. This is probably not backwards compatible, I'm not sure the right way to address that.  Essentially I need Augmenter class to provide a public method `getMatchingAdditionalCommands()`.  `RemoteWebDriverBuilder` can now call this method after augmenting the driver, and set `additionalCommands` field.  The tricky/messy bit is that I hacked into the middle of the `baseExecutor` lambda to `defineCommand` on each of the commands in the `additionalCommands` field.  There has to be a better way to do this, but it works, ~and my only real concern is backwards compatibility for the Augmentation class constructor~. (edit: fixed this!)","closed","C-java,","titusfortner","2021-09-17T01:52:04Z","2021-09-20T20:22:02Z"
"","9304","Link to Python API doc is dead. Please check.","The link https://seleniumhq.github.io/selenium/docs/api/py/index.html is dead!","closed","","dornech","2021-03-18T19:43:11Z","2021-09-05T08:10:46Z"
"","9098","Selenium Cant add referer value to header","The inability to assign referer values ‚Äã‚Äãto selenium header information is a major omission, in the hope that you make up for this deficiency,regards","closed","","muhendis80","2021-01-25T21:23:24Z","2021-09-05T08:21:42Z"
"","9077","[rb] ensure options classes have defaults for accessors","The impetus of this refactor was to allow: ``` ChromeOptions.new.args","closed","C-rb,","titusfortner","2021-01-20T23:50:11Z","2021-02-10T06:28:13Z"
"","9257","[rb] separate guards from conditions for more general use case","The idea is to make guards more extensible so they can be used by 3rd party dependency libraries (e.g. Watir, webdrivers, etc), or pulled into a separate gem entirely.  I started by creating a subclass of `Guard` and then having `Guards` accept the class as a parameter, but it seemed like separating the conditions from the guard attribute might be a better way to go, and then you get more visibility into exactly what is getting set in the before hook. I'm sure there are other ways to do this, but this seemed like a reasonable approach.  Existing specs are all passing, but there's more functionality here that I should probably add more specs for, so let me know what you think about this approach in general, @p0deje.","closed","C-rb,","titusfortner","2021-03-10T22:43:31Z","2021-04-08T15:28:55Z"
"","9665","Workflow path filters to reduce overhead","The goal is to reduce unnecessary parts being tested, so we're filtering down to relevant changes by file.  ### Description   Add path filters for ruby and java to the workflow shape.  ### Motivation and Context   Less unnecessary tests means people doing stuff faster.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","toddtarsi","2021-07-19T15:19:04Z","2021-07-19T17:47:04Z"
"","8892","Chrome opens in english regardless the value set on ChromeOptions --lang=es on Linux/Mac","The following line is working okay with Firefox on linux and windows alike. It opens the browser in the locale code set. But  chrome always opens in english  on linux and mac.   chromeOptions.AddArguments(""--lang=es"");   I have tried several options but not sure how to make chrome honor the language settings on linux but in vain. Please help me  ## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","gvramakrishna79","2020-11-22T05:29:44Z","2021-09-05T08:31:23Z"
"","9118","wrong number of arguments","The Following Code:  options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless'])       $DRIVER = Selenium::WebDriver.for(:firefox, options: options)        Causes this:  ArgumentError: wrong number of arguments (given 1, expected 0) vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/firefox/driver.rb:31:in `new' vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:54:in `for' vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver.rb:88:in `for'  ## Environment:  OS: Ubuntu 20.04 Browser: - Mozilla Firefox 84.0.2 Browser version: - Mozilla Firefox 84.0.2 Browser Driver version: Gecko 0.25 https://github.com/mozilla/geckodriver/releases/download/v0.25.0/geckodriver-v0.25.0-linux64.tar.gz Language Bindings version: Ruby (using 3.0 as can be seen in error path)","closed","","AdamaTNT","2021-01-28T23:24:30Z","2021-09-05T08:21:36Z"
"","9868","[dotnet] mark deprecated chromedriver commands as obsolete and implem‚Ä¶","The commands being used here are deprecated according to: https://bugs.chromium.org/p/chromedriver/issues/detail?id=2307  I have a basic template of a test I'm using for other languages, but I'm not sure how to write/run tests in .NET.   There are a dozen custom browser commands I'd like to add once I make sure I'm doing everything correctly, so please let me know if I'm violating conventions, etc.","closed","C-dotnet,","titusfortner","2021-09-24T22:49:08Z","2021-09-28T22:32:55Z"
"","9855","Remove Safari specific new window feature which no longer works; w3c ‚Ä¶","The Apple specific endpoint was added for 3.141.0.   I'm not sure which versions of Safari it worked with, but it does not work for Safari 14. It was marked `@beta` so I think we can just delete it, but I wanted to make sure we didn't need to keep it for backwards compatibility with older Safari versions, or throw a deprecation notice, before I merged this.","closed","C-java,","titusfortner","2021-09-20T23:21:18Z","2021-09-21T14:40:22Z"
"","8918","Enforcing xpath lookup for drivers to lookup elements.","The api for easy use of selectors is contra productive. All what a selenium api has to provide, is the xpath. It is the most open. You can redirect all others to xpath resolution. eg. By.id(theId) is the same as By-xpath(//*[@id = theId]). But implementors of the driver api might focus on implementing stuff for id, instead of focusing to implement xpath lookup.  Enforcing xpath lookup will drive the focus for future implementors of WebDriver-Api.","closed","","HenningL","2020-11-28T23:34:16Z","2021-09-05T08:30:13Z"
"","9170","[rb] add support for logging preferences in Chrome","test","closed","","titusfortner","2021-02-12T20:02:59Z","2021-02-12T20:19:18Z"
"","9900","A recommendation on the document","Strongly recommend that tell users not use Power shell to run this command!! ![image](https://user-images.githubusercontent.com/7996256/136889597-09b06ec8-c6f6-4a84-9c21-57d5f7ebaa68.png)  I use Power shell to run this command and all my PATH env lost.","closed","","jingedawang","2021-10-12T04:07:49Z","2021-11-12T00:07:03Z"
"","9713","Selenium Grid not working with webview2","Steps to reproduce:  Run the below code with Selenium Grid :             EdgeOptions edgeOptions = new EdgeOptions();             edgeOptions.UseChromium = true;             edgeOptions.UseWebView = true;             edgeOptions.BinaryLocation = @""C:\MyWebView2App.exe"";             IWebDriver webDriver = new RemoteWebDriver(new Uri(""http://127.0.0.1:4444""),edgeOptions);  Below exception is thrown:  OpenQA.Selenium.WebDriverException   HResult=0x80131500   Message=The HTTP request to the remote WebDriver server for URL http://127.0.0.1:4444/session timed out after 60 seconds.   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, DriverOptions options)    at WebViewTesting.Program.Main(String[] args) in     This exception was originally thrown at this call stack:     [External Code]  Inner Exception 1: WebException: The operation has timed out.","closed","","pramodkeeliputti12345","2021-08-03T19:18:46Z","2021-09-05T07:50:05Z"
"","9569","required fix to make the built scripts available in browsers","Sorry, I mistakenly submitted a PR. Please ignore this.","closed","","moriyak","2021-06-14T05:59:36Z","2021-06-14T06:02:12Z"
"","9869","driver.get(url) sometimes not working in a loop","Sometimes driver.get(url) function is not working in a loop without any error and logs. ``` from selenium import webdriver options = webdriver.ChromeOptions() options.add_argument('--ignore-certificate-errors') options.add_argument(""--disable-webgl"") options.add_experimental_option(""excludeSwitches"", [""enable-logging""]) path = r'chromedriver.exe' driver = webdriver.Chrome(path,options=options)  for x in range(1000):     url = ""https://www.palabrasaleatorias.com/random-words.php""     driver.get(url)     url = ""https://www.google.ru/imghp?hl=ru""     print(x,""Test[1]"")     driver.get(url)     print(x,""Test[2]"") driver.close() ```  Environment: Google Chrome: Version 94.0.4606.61 (Official Build) (64-bit) Google Drive: Latest beta release: ChromeDriver 94.0.4606.41","closed","","DrShams","2021-09-25T22:11:09Z","2021-10-26T00:06:18Z"
"","9166","Remove Edge HTML","Since Microsoft is forcing users to upgrade from Legacy Edge to the Chromium backed Edge, we've decided to remove support for it from the Selenium bindings for 4.0  Bindings maintainers can remove the label when completed in their code.","closed","","titusfortner","2021-02-11T18:05:28Z","2022-01-07T00:07:37Z"
"","9263","EdgeDriver, Set UseChromium option as true by default.","Set the UseChromium property as true by default as Edge Legacy is [no longer supported](https://support.microsoft.com/en-us/microsoft-edge/what-is-microsoft-edge-legacy-3e779e55-4c55-08e6-ecc8-2333768c0fb0).","closed","","anebot","2021-03-11T15:53:36Z","2021-03-17T15:16:41Z"
"","9785","chrome driver version 93.0.4577.1500 not supporting chrome browser version 93.0.4577.63 when using selenium grid","selenium-server-standalone-3.141.59 Selenium.WebDriver.ChromeDriver version 93.0.4577.1500 chrome browser version 93.0.4577.63  Getting below error while running tests (Selenium with C#) Message:      System.InvalidOperationException : session not created: This version of ChromeDriver only supports Chrome version 90     Current browser version is 93.0.4577.63 with binary path C:\Program Files (x86)\Google\Chrome\Application\chrome.exe     Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'     System info: host: 'APINP-ELPT49997', ip: '192.168.0.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'     Driver info: driver.version: unknown     remote stacktrace: Backtrace:     	Ordinal0 [0x007EC013+2474003]     	Ordinal0 [0x007829C1+2042305]     	Ordinal0 [0x00692F68+1060712]     	Ordinal0 [0x006B188E+1185934]     	Ordinal0 [0x006AD600+1168896]     	Ordinal0 [0x006AAA83+1157763]     	Ordinal0 [0x006DA2A2+1352354]     	Ordinal0 [0x006D8FAA+1347498]     	Ordinal0 [0x006D66DB+1337051]     	Ordinal0 [0x006B3427+1192999]     	Ordinal0 [0x006B42EE+1196782]     	Ordinal0 [0x006B4279+1196665]     	GetHandleVerifier [0x009796FC+1590332]     	GetHandleVerifier [0x00A28614+2306900]     	GetHandleVerifier [0x00879E93+543699]     	GetHandleVerifier [0x008792CE+540686]     	Ordinal0 [0x007886BA+2066106]     	Ordinal0 [0x0078D1C8+2085320]     	Ordinal0 [0x0078D308+2085640]     	Ordinal0 [0x007967F3+2123763]     	BaseThreadInitThunk [0x7659FA29+25]     	RtlGetAppContainerNamedObjectPath [0x77477A7E+286]     	RtlGetAppContainerNamedObjectPath [0x77477A4E+238]      (SessionNotCreated)     TearDown : System.NullReferenceException : Object reference not set to an instance of an object.   Stack Trace:      RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)     RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)     RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)     RemoteWebDriver.ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)     RemoteWebDriver.ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)     RemoteWebDriver.ctor(Uri remoteAddress, ICapabilities desiredCapabilities)","closed","","RajeshPolishetty","2021-09-02T15:25:40Z","2021-10-03T00:06:35Z"
"","9613","Selenium-docker Hard disk space occupation","selenium-hub version:selenium/hub:4.0.0-rc-1-prerelease-20210618 selenium-node version:selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618 A large number of invalid files are generated under the /var/lib/docker-overlay2 path after performing background tasks for a period of time, which takes up server memory space","closed","","newrohlzy","2021-06-28T08:19:21Z","2021-09-05T07:59:08Z"
"","9775","Selenium Web Driver C# binding does not work on a Chrome window where new window is open using window.open("""")","Selenium Web Driver does generate window handle on a the new window which is created from a web page on Chrome.  However, it timesout when tried to perform any action on pop up.  The window on parent window was created using below command.  window.open("""", ""DesktopPreview"", 'top=450,left=450,width=450,height=450,location=no,toolbar=no,menubar=no,addressbar=0,titlebar=no,scrollbars=yes,resizable=yes');","closed","","SalmanShaik07","2021-08-31T17:39:55Z","2021-10-01T00:07:27Z"
"","9451","selenium Minimize function invalid in linux","selenium Minimize function invalid in linux, can you help me, how can fix it. code:python browser:Chrome windwos/mac pass","closed","","highboy168","2021-05-06T09:35:14Z","2021-09-05T08:06:34Z"
"","9737","AddScriptToEvaluateOnNewDocumentCommandSettings not working with GetDevToolsSession()","Selenium 4 Beta ``` IDevTools devTools = driver as IDevTools; DevToolsSession session = devTools.GetDevToolsSession();  var page = session.GetVersionSpecificDomains().Page;  var enableCommandSettings = new OpenQA.Selenium.DevTools.V91.Page.EnableCommandSettings();  page.Enable(enableCommandSettings);  page.AddScriptToEvaluateOnNewDocument(new OpenQA.Selenium.DevTools.V91.Page.AddScriptToEvaluateOnNewDocumentCommandSettings() {     Source = @""var a = 'a';"" }); ```  With Selenium 4 Alpha, DevToolsSession is created via code below: ``` IDevTools devTools = driver as IDevTools; devTools.CreateDevToolsSession(); ```  Any idea why devTools.GetDevToolsSession() not working as expected?","closed","","kevinyeo92","2021-08-13T09:10:16Z","2021-09-13T00:05:34Z"
"","9058","RIGHT SHIFT Key support?","Seems from the code that there is only LEFT_SHIFT and SHIFT (which are the same), but RIGHT_SHIFT is not supported? Please let me know if there is a way to use the right shift key specifically?","closed","","sneheshs","2021-01-17T22:17:35Z","2021-09-05T08:25:02Z"
"","9765","Selenium not able to interact with browser inside citrix with Selenium jar in local system and not in VDI.","Scenario :  login to Citrix Connect to VDI desktop launch chrome and hit url Automate the flow. Note : Selenium Setup is not present in VDI. its present locally.","closed","","AnilMohnani","2021-08-26T17:32:08Z","2021-09-27T00:05:47Z"
"","8958","[rb] Allow httpOnly property to be bubbled up to cookie manager","Ronseal PR - Add httpOnly property of cookies to be ascertained in ruby.  There's currently no test file for this, so didn't amend any specs.","closed","","luke-hill","2020-12-11T13:36:08Z","2021-09-02T08:06:37Z"
"","9405","Rework the LocalNewSessionQueue to be simpler","Reworks the LocalNewSessionQueue, putting all of the logic in the queue itself, and preventing users from accidentally adding requests that are not being tracked into the queue. This code only relies on the event bus to indicate that a request has been added to the queue.  ### Description See above.  ### Motivation and Context The original code worked, but was hard to reason about.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","selenium-4,","shs96c","2021-04-21T11:31:24Z","2021-04-26T17:42:29Z"
"","9489","Unable to register centos7 machine as node to Windows server 2019 hub","Request to provide help on below issue Summary: Unable to register centos7 machine as node to Windows server 2019 hub  Grid v 4.0.0-beta-3 HUB: WIndows server 2019 Node CentOS 7  HUB Command used: java -jar selenium-server-4.0.0-beta-3.jar hub Node Command used: java -jar selenium-server-4.0.0-beta-3.jar node --detect-drivers true --publish-events tcp://HUB_IP:4442 --subscribe-events tcp://HUB_IP:4443   Steps: Tried to add Centos 7 as node to windows server 2019 hub Getting below response in terminals in node terminal: 17:07:21.868 INFO [UnboundZmqEventBus.] - Connecting to tcp://HUB_IP:4442 and tcp://HUB_IP:4443 17:07:21.946 INFO [UnboundZmqEventBus.] - Sockets created 17:07:22.048 INFO [UnboundZmqEventBus.] - Event bus ready 17:07:22.228 INFO [NodeServer.createHandlers] - Reporting self as: http://NODE_IP:5555 17:07:22.251 INFO [NodeOptions.getSessionFactories] - Detected 2 available processors 17:07:22.275 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 17:07:22.312 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome"",""platformName"": ""LINUX""} 2 times 17:07:22.314 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox"",""platformName"": ""LINUX""} 2 times 17:07:22.329 INFO [Node.] - Binding additional locator mechanisms: name, id 17:07:22.583 INFO [NodeServer$1.start] - Starting registration process for node id 20f289b3-8435-4b90-b9e1-1e82602e7730 17:07:22.586 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-3 (revision 5d108f9a67): http://10.60.14.75:5555 17:07:22.614 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 17:07:32.627 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 17:07:42.635 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 17:07:52.658 INFO [NodeServer$1.lambda$start$1] - Sending registration event...   in hub terminal: WARN [UnboundZmqEventBus.lambda$notifyListeners$10] - Caught exception from listener: org.openqa.selenium.events.EventListener@4b63b957 Caused by: java.net.ConnectException: connection timed out: /NODE_IP:5555         at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179)         at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108)         at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28)         at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20)         at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)         at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)         at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)         at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)         at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)         at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)         at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)         at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262)         at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)         at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170)         at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)         at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)         at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)         ... 1 more","closed","","sasidharengg","2021-05-19T08:10:42Z","2021-09-05T08:03:26Z"
"","9590","Selenium WebDriver hover() are not working on few elements in Chrome 91, everything working fine up-to chrome 89 #9588","Ref: https://github.com/SeleniumHQ/selenium/issues/9588  But manual hovering work in Chrome 91. I think Selenium hover() library needs to update as per Latest Chrome browser (version 91) update.  _Originally posted by @subrato29 in https://github.com/SeleniumHQ/selenium/issues/9588#issuecomment-863553779_","closed","","subrato29","2021-06-18T00:45:15Z","2021-09-05T08:01:03Z"
"","9769","geolocation permisson on linux","Recently I am using selenium to write a program that run on Linux(ubuntu 20.04).A visit to a web page, it prompts me it needs geolocation permissions.In the code, I've given it geolocation permissionsÔºö ``` chrome_options = Options() chrome_options.add_argument('disable-infobars') chrome_options.add_argument('--headless') chrome_options.add_experimental_option(""prefs"",{""profile.default_content_setting_values.geolocation"": 1}) ``` and I've set my location: ``` Map_coordinates = dict({         ""latitude"": latitude,         ""longitude"": longitude,         ""accuracy"": 98     })  self.execute_cdp_cmd(""Emulation.setGeolocationOverride"", Map_coordinates) ``` but apparently didn't work. Why?What should I do?(The code is can be used on Windows, no longer warrant permissions)","closed","","stone322","2021-08-27T09:28:45Z","2021-09-27T00:05:52Z"
"","9799","Make Node.js browser creation non-blocking","Re-opened from #9706  # Feature Proposal Make Builder.prototype.build asynchronous.  # Motivation Currently, creating browsers limits concurrency, which is a performance problem.  Exacerbating the problem is the lack of timeout when creating browsers. **Creating a browser can literally hang the entire process forever.**  # Example  ```js const builder = new Builder() const driver = await builder.build(); ```  ---  This request isn't about any change to the WebDriver protocol.  Rather, it's a change the Node.js SDK, to not hang on browser creation.","closed","","pauldraper","2021-09-07T15:30:10Z","2021-10-08T00:06:05Z"
"","8905","Selenium modify timezone","Puppeteer has a page.emulateTimezone('Australia/Melbourne') method to modify the time zone. Does Selenium have a similar method?","closed","","ychrewd","2020-11-25T07:31:03Z","2021-09-05T08:30:23Z"
"","8971","Selenium Chrome Webdriver gets 408 time out error","Problem is getting HTTP 408 error every time when we execute the test. When we try manually there is no any problem on the URL tried lots of time, even one of them did not receive the error.  Java 8  ChromeDriver and Chrome Browser(v86)  selenium-chrome-driver in pom version is 3.141.59  windows 10.  Fail Scenario: -User/pass is entered -Click the enter botton -Get the 408 error too quickly (20ms). (It is weird because I dont think any service configure its timeout lower than 20 milliseconds) -Additionally backend login service does not receive any login attempt from the frontend login service.   Mixed success scenario; (Executed on the same setup using browser with the head) -User/pass is filled out by selenium driver -Click enter button manually not selenium -Successfully pass the test, I mean log-in is successfull, not get any error.  -In backend login service log attempt logs can be seen   As you see from the above test, there is not any mistake for finding username, password and enter elements, the difference is who clicks the enter button. If selenium driver clicks the enter, gets 408 error. If selenium fills out but I click the enter button, login successful.  The Url we used is directed 2 times due to authorization  (LDAP login)  then comes the main page we need. I think I am facing this issue in the link below, but I could not find any solution  [https://sny.no/2018/08/webdriver-keepalive ](url)  Also, there is an update in selenium change log but I dont know how to use it.   [https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/CHANGELOG  ](url)  ctrl+f -> ""IsKeepAliveEnabled "" v3.14.0      Thanks in advance  `    String user = ""myuser""     WebElement userElement = driver.findElement(By.cssSelector(USERNAME));     sendKeys(userElement, user);     String pass = ""myPass""     WebElement passElement = driver.findElement(By.cssSelector(PASSWORD));     sendKeys(passElement, pass);     Thread.sleep(60000); // Try to enter manually before webdriver click     driver.findElement(By.xpath(INPUT_VALUE_ENTER)).click();`","closed","","fatihtepekoy","2020-12-16T11:52:42Z","2021-09-05T08:30:06Z"
"","9374","[py] Expand element to be clickable","Previously only supported locator usage, added ability to pass element directly.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  - Added the ability to pass an element to element_to_be_clickable(), rather than just a locator. - Checks argument type, and then operates accordingly (in the case of a locator arg, it is first converted/resolved to an element)  ### Motivation and Context This feature already exists in the Java version, but does not in Python. It adds convenience.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.   I've never submitted a real pull request to anything before (or worked on a large project), so I'd appreciate any guidance necessary.","closed","C-py,","maxtheaxe","2021-04-11T04:20:33Z","2021-04-20T08:22:35Z"
"","9147","Fix 8525 by limiting concurrent test on CI","PR is just to run the tests to see where things stand on #8525  Curious if my issue was fixed or if it is related to #9123 (unlikely)","closed","","titusfortner","2021-02-05T06:27:33Z","2021-03-01T21:40:18Z"
"","9812","Unable to locate react-select dropdown element via selenium javascript","Please go through the url (https://react-select.com/home) and see the first select box. Unable to locate react-select element via selenium javascript.     So far i've tried:  ``` By.xpath(""//input[@id='react-select-2-input']"").click(); // no drop down show up here  By.xpath(""click` on drop down value"").click(); ``` But no luck and still having an issues. I have also asked at stackoverflow here(https://stackoverflow.com/questions/69116300/unable-to-locate-react-select-dropdown-element-via-selenium-javascript). I having a problem to solve this. Can you pls look at my work and see if i missing a steps?","closed","","jaihan","2021-09-12T01:51:38Z","2021-10-13T00:06:06Z"
"","9401","Grid4 -- Allow configuration of logging timestamp in log formatters.","Perhaps I missed the ability do this, so please feel free to close this if I did indeed miss it!   ## üöÄ Feature Proposal  It would be great if we could configure the format of the timestamp. I use plain logs and thus utilize the `TerseFormatter`. I think all that would need to be done is:  - Add a new logging flag [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-3/java/server/src/org/openqa/selenium/grid/log/LoggingFlags.java) that specifies the timestamp format. - Read the new flag [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-3/java/server/src/org/openqa/selenium/grid/log/LoggingOptions.java) - Update the constructor [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-3/java/server/src/org/openqa/selenium/grid/log/TerseFormatter.java#L63) to accept a parameter, which would be defaulted to it's currently hardcoded `HH:mm:ss.SSS`. - Update the instantiation of the object [here](https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/java/server/src/org/openqa/selenium/grid/log/LoggingOptions.java#L115) to pass the configuration to it.   I am not sure if this could be applied to the JSON formatter as well -- but I mainly am interested in the `TerseFormatter`.  ## Motivation  In my use case, I want the log pattern of all my integrated tools to follow a similar pattern so I can have consistency within my log aggregator. Having this flexibility would help me do that.  ## Example  For example, the current logging format:  `11:50:40.668 INFO [LoggingOptions.getTracer] - Using null tracer`  I would like that timestamp to be configurable, so I could format it like so:  `2021-04-12T11:50:40.668-04:00 INFO [LoggingOptions.getTracer] - Using null tracer`","closed","","mjthomsen1","2021-04-20T16:25:30Z","2021-09-05T08:06:48Z"
"","9177","pause action function is not present in dotnet bindings","pause action function is not present in dotnet bindings. It is present in java bindings.","closed","","rameshrc","2021-02-14T23:12:22Z","2021-09-05T08:19:06Z"
"","9163","Neither ""choose ok on next confirmation"" nor ""webdriver choose ok"" work","OS: Windows 10 Browser: Chrome Version 88.0.4324.150  I have a pop-up with 1 OK button and either Choose OK nor Web driver OK works.  I put the choose ok on next confirmation BEFORE clicking a submit button...didn't work I put the webdriver choose ok on next confirmation AFTER clicking a submit button...didn't work I sandwiched the clicking of a submit button with both...didn't work  The behavior is the the pop-up is not acknowledge, the session hungs.  I did observe an interesting behavior in all failed scenarios is that when I click on the IDE.  The tests would all report ""completed successfully.""  However, the pop-up was never acknowledged, but the app session did resume.  Unfortunately, I am testing an inhouse web-app.","closed","","jwu-dharmo","2021-02-10T19:56:59Z","2021-09-05T08:19:10Z"
"","9648","Can selenium firefox support webgl in headless mode","OS: Windows Selenium Version: 3.141.59 Browser: Firefox Browser Version: 89 geckodriver: 0.29.1  Firefox works very well on non-headless mode, open broswer, navigate to...., but when I switch to headless mode, unfortunately, it says the followings:  JavaScript warning: three.min.js, line 2: Failed to create WebGL context: WebGL creation failed:  Does that mean webgl is not supported in headless mode?","closed","","ThomasSun001","2021-07-13T02:38:25Z","2021-09-05T07:58:54Z"
"","8934","AsyncHttpClient-1-4] WARN org.asynchttpclient.netty.handler.WebSocketHandler - onError","OS: MAC ChromeDriver: 87.0.4280.88 Selenium alpha -7  log4j2: 2.14.0 maven: 3.7.0  dependencies:   selenium, maven, log4j2   When Tests run after method driver.quit it shows error in below :    [AsyncHttpClient-1-4] WARN org.asynchttpclient.netty.handler.WebSocketHandler - onError java.net.SocketException: Connection reset 	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:345) 	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:376) 	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253) 	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1134) 	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:830) Dec 04, 2020 2:11:45 AM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Connection reset java.net.SocketException: Connection reset 	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:345) 	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:376) 	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253) 	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1134) 	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.base/java.lang.Thread.run(Thread.java:830)","closed","","amiluslu","2020-12-03T23:16:02Z","2021-09-05T08:30:14Z"
"","9661","Opera 77.0.4054.254 GetAttribute method always returns null","OperaDriver 91.0.4472.77  I use a selonoid. GetAttribute method always returns null","closed","","bloodgang94","2021-07-19T07:11:29Z","2021-09-05T07:50:43Z"
"","9687","Selenium Python how to write elements to pandas","Newbie here. Need help on Selenium Python, Find Elements, Pandas: Codes as follows: array=[] array=driver.find_elements_by_xpath(""//fl-list-item"") for e in array:     print(e.text)  I can see the print(e.text) as follows: (there are 20 elements and here is the 1st one)  Convert a PDF in Word $250 ‚Äì 750 USD Posted 6 minutes ago We would like to have a (scanned) PDF file convert to a Word file Data Entry Excel PDF Word Copy Typing Fixed Price 28 Bids 0.0  Question: how do I get these as one row with headers using Pandas?   Went to numerous videos and kind of know bits and pieces but couldn't get the data into Pandas.  Appreciate help to newbie here.","closed","","epiphronSG","2021-07-26T14:14:11Z","2021-09-05T07:50:29Z"
"","9659","Is there a way to specific max-sessions in the docker section?","My grid config looks as follows. Is there a way to limit the number of sessions available for both Firefox and Chrome in the docker section of standalone config file ```[toml] [node] detect-drivers = false max-sessions=4  [docker] configs = [""selenium/standalone-chrome:latest"", ""{\""browserName\"": \""chrome\"", \""browserVersion\"": \""91\""}"", ""selenium/standalone-firefox:latest"", ""{\""browserName\"": \""firefox\"", \""browserVersion\"": \""89\""}""] host = ""localhost"" port = 2375 url = ""unix:/var/run/docker.sock"" video-image = ""selenium/video:latest"" ```  Running this command `java -jar selenium-server-4.0.0-beta-4.jar standalone --config grid.config.toml` creates 12 sessions each of Chrome and Firefox with a max concurrency of 4  ![image](https://user-images.githubusercontent.com/17963268/126071586-743c2f2a-3ed3-4299-b8bf-1512c70d1f12.png)  In the file https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/java/server/src/org/openqa/selenium/grid/docker/DockerOptions.java#L137   we have initialised it to the # of availableProcessors  whereas in the file https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/java/server/src/org/openqa/selenium/grid/node/config/NodeOptions.java#L79  we take into consideration the value available in the node section of the config file  Can we have a similar config in the docker section as well?","closed","","gpt14","2021-07-18T14:52:45Z","2021-09-05T07:50:44Z"
"","9873","Implement browser specific functionality","Mostly double checking names are good (I'm matching Java on method names), and also need to know if I should be casting to String for message, and if (and/or how) I should cast to an Array or List for the `GetCastSinks` response. Fwiw, Java does: `(List)`  Edit: Went ahead and added all of the additional commands to bring it in parity with other languages.","closed","C-dotnet,","titusfortner","2021-09-28T21:29:02Z","2021-09-29T03:37:06Z"
"","9219","Attribute & Property Methods","Looking to get agreement from the other maintainers before committing...  ~**Update**: Looks like Java & .NET are both converting property Boolean responses to Strings, and Ruby & Python are not. Why would we override the spec/driver result in the code?~ (Static language vs Dynamic language thing, so this is good)  ### Python * implements `get_dom_attribute`  * Adds a test for `get_dom_attribute` and `get_property` * I've verified tests are passing, but @AutomatedTester, can you tell me if I did the docstring method reference correctly?  ### Java, Python & Ruby * switch from using the `getAttribute.js` atom to using the  w3c `/attribute` endpoint for determining if a Select element is a multiple select list. This should be completely backward compatible, even if they use JS to remove the value, it will still return the same value as the atom.  ### Ruby * implements `#dom_attribute` * Adds 53 tests that should well-differentiate the expected/desired behavior for the 3 different methods we now have for working with properties/attributes, along with references to the applicable Chrome & Firefox bugs","closed","C-java,","titusfortner","2021-02-28T00:44:21Z","2021-03-10T17:47:07Z"
"","9610","üí• Regression Report (a supported feature is not working anymore) 'Problem accessing selenium after install","Just installed selenium in my virtual environment like so:      conda create --name myenv python=3.95      conda activate myenv      conda install selenium  --and ""conda list"" shows ""selenium  3.141.0   py39h2bbff1b_1000""  However, I am  receiving the following errors: cmd line: ""selenium --help""       'selenium' is not recognized as an internal or external command, operable program or batch file. jupyter notebook:  : from selenium import webdriver       No module named 'selenium'  what did I do incorrect?","closed","","KCS40","2021-06-28T01:30:20Z","2021-09-05T07:59:09Z"
"","9413","ChromeDriver Version 90 no longer paths user-data-dir correctly","Issue: I have an application that uses chromedriver with the user-data-dir option to specify different user profiles when using chromedriver and Chrome.  This has worked fine up to and including version 89.  I upgraded my application today to version 90 and all usages of this option give me the following error:  Failed To Create Data Directory Google Chrome cannot read and write to its data directory: [Directory Name]  Research indicates this is a standard chrome error when it has trouble creating a profile.  However, normal Chrome interaction works fine with profiles, which leads me to conclude this is a new bug in chromedriver 90 and not Chrome.  Workaround: This is happening to me because my application uses local paths.  Up until now, it would use the ""start in"" directory for chromedriver to create and seek these folders.  If I alter my application to use a full, explicit path to the profile, it starts working again.","closed","","dougan778","2021-04-22T17:33:33Z","2021-09-05T08:06:45Z"
"","9640","Issue with context click on edge browser on execution on VM through selenium in case the VM is not open in a console","Issue with context click on edge browser on execution on VM through selenium in case the VM is not open in a console.   The controls are jqx widgets on which the test tries to perform right-click using action/SendKeys. the test works fine in chrome but has issues in edge chromium","closed","","nitinukg","2021-07-07T04:28:06Z","2021-09-05T07:58:59Z"
"","9552","Disable access to Grid Console web page","Is it possible to disable web access to the Grid Console page accessible via http://hostname:4444/grid/console ?","closed","","CG-root","2021-06-07T10:52:04Z","2021-09-05T08:01:12Z"
"","9282","Is any method returns WebWorkers associated with the page?","Is any method returns WebWorkers associated with the page? like puppeteer:[page.workers](https://github.com/puppeteer/puppeteer/blob/v8.0.0/docs/api.md#pageworkers)?","closed","","jacksontwu","2021-03-15T08:24:24Z","2021-09-05T08:12:19Z"
"","9485","fix : Removed incorrect end point for uploadFileCommand,","incorrect binding for file upload.getting un support command error with se/file.Working fine with the /file .Verified with other bindings.    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","siva201010sivakumar","2021-05-18T11:02:51Z","2021-05-18T13:46:12Z"
"","8907","Network not accessible","In WIndows with Visual Studio 2017 and using Selenium.WebDriver 4.0.0 alpha 07.  Trying to use the Network ability but not showing up on my session as I would expect.  Using someone else's example:  ```         public void setup()         {             var driver = new ChromeDriver();             var session = driver.CreateDevToolsSession();              var blockedUrlSettings = new SetBlockedURLsCommandSettings();             blockedUrlSettings.Urls = new string[];             {                 ""http://automationpractice.com/img/p/1/6/16-large_default.jpg"",                  ""http://automationpractice.com/modules/blockbanner/img/sale70.png"",             };              session.Network         } ```  The network option isn't there when I put a dot after session.  The few examples I find show it should work.","closed","","jriker1","2020-11-25T22:57:28Z","2021-09-05T08:30:22Z"
"","9301","[py] retry the frame in webdriver wait tests due to Firefox bug","Ignore this PR while I try clean the Python CI failures","closed","","AutomatedTester","2021-03-18T14:26:29Z","2021-11-12T13:04:05Z"
"","9428","Update doc for ignored_exceptions of WebDriverWait()","If we set  `WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=[TimeoutException])` It won't ignore the `TimeoutException` because[ the source code](https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/py/selenium/webdriver/support/wait.py#L87) shows  it still raise the exception","closed","","redstoneleo","2021-04-28T15:03:24Z","2021-04-29T12:58:12Z"
"","9427","ignored_exceptions=[TimeoutException] didn't work for WebDriverWait","If we set  `WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=[TimeoutException])` It won't ignore the `TimeoutException` because[ the source code](https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/py/selenium/webdriver/support/wait.py#L87) shows  it still raise the exception","closed","","redstoneleo","2021-04-28T07:56:59Z","2021-09-05T08:06:41Z"
"","9034","Unsuccessfull creation of ChromeDriver ends in file lock on chromedriver.exe","If I try to create ChromeDriver and some errors happens,  (To reproduce, for example. uninstall chrome) driver object will be null which means I cannot do anything with it.  But chromedriver.exe is locked (Used by another process error on windows)  What I have to do is something like this:  ```                 _ = Process.Start(""taskkill"", ""/F /IM chromedriver.exe""); try{ var chromeDriver=new ChromeDriver(); }catch(Exception){                 _ = Process.Start(""taskkill"", ""/F /IM chromedriver.exe"");  } ```","closed","","vladop","2021-01-11T13:28:04Z","2021-09-05T08:25:08Z"
"","9811","Rb extension capabilities","I'm working on an update to the [Sauce Platform Configurator](https://saucelabs.com/platform/platform-configurator#/) for Selenium 4. All of the other languages are pretty straightforward with what they need to do, even if they do things a little differently:  #### Java ```java ChromeOptions browserOptions = new ChromeOptions(); browserOptions.setCapability(""platformName"", ""macOS 11.00""); browserOptions.setCapability(""browserVersion"", ""latest""); MutableCapabilities sauceOptions = new MutableCapabilities(); browserOptions.setCapability(""sauce:options"", sauceOptions); ```  #### .NET ```c# var browserOptions = new ChromeOptions(); browserOptions.PlatformName = ""macOS 11.00""; browserOptions.BrowserVersion = ""latest""; var sauceOptions = new Dictionary(); browserOptions.AddAdditionalOption(""sauce:options"", sauceOptions, true); ```  #### Python ```python from selenium.webdriver.chrome.options import Options as ChromeOptions  options = ChromeOptions() options.set_capability('browserVersion', 'latest') options.set_capability('platformName', 'macOS 11.00') sauce_options = {} options.set_capability('sauce:options', sauce_options) ```  #### Ruby  ```ruby options = Selenium::WebDriver::Options.chrome options.browser_version = 'latest' options.platform_name = 'macOS 11.00' sauce_options = Selenium::WebDriver::Remote::Capabilities.new  capabilities = [options, sauce_options] ```  it works, but it's a little weird.  @jimevans did a nice thing in .NET where there is: `AddAdditionalChromeOption` to get put inside `goog:chromeOptions` and `AddAdditionalOption` to get put at the top level of the capabilities.  But Ruby's `Options#add_option` currently will only put the value inside the vendor namepsaced capability (except for Safari since it doesn't have that, so everything is put at the top level).  This PR has `#add_option` checking if the value has a w3c compliant namespace, and if so it is put at the top level and if it doesn't, it is put inside the browser vendor's namespace. Thankfully the spec says this can't conflict:  > Other specifications may define additional WebDriver capabilities. Each defined capability must have a capability name which is a string not containing a "":"" (colon) character  This PR also allows `#add_option` to be a `Hash` instead of just ordered pairs.  So both of these would now work as desired: ```ruby options = Selenium::WebDriver::Options.chrome options.browser_version = 'latest' options.platform_name = 'macOS 11.00' sauce_options = {} options.add_option('sauce:options' => sauce_options) ```  ```ruby sauce_options ={} options = Selenium::WebDriver::Options.chrome('sauce:options' => sauce_options) options.browser_version = 'latest' options.platform_name = 'macOS 11.00' ```","closed","C-rb,","titusfortner","2021-09-10T23:46:31Z","2021-09-15T01:21:10Z"
"","9653","Opera support: capabilities.Capabilities.opera is not a function","I'm using npm package ""selenium-webdriver"": ""4.0.0-beta.4"" The code is from https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/opera.js#L55 ```    const operaOptions: any = new opera.Options();    const service = new (opera).ServiceBuilder(""e2e/operadriver_mac64/operadriver"").build();    return await opera.Driver.createSession(operaOptions, service); ```  The result is: ``` TypeError: capabilities.Capabilities.opera is not a function     at Options.toCapabilities (/node_modules/selenium-webdriver/opera.js:315:62)     at Function.createSession (/node_modules/selenium-webdriver/opera.js:367:22) ```  Changing the code to use `new chrome.Options()` fixes the issue, but this is just a temporary workaround.","closed","","milen-yordanov","2021-07-14T16:11:07Z","2021-09-05T07:50:55Z"
"","9645","[py] remove non-w3c compliant parameters from default capabilities","I'm not sure this is the right fix for this. I'm trying to generate compliant capabilities with `ChromeOptions().to_capabilities()`, but it includes `version` and `platform` kyes. The right answer might be not to call this in the first place during the init? `self._caps = self.default_capabilities`  The Python tests appear to all be broken from [this commit](2ea9026477a051e62cc486eb18a61db3fc228934), so I'm not sure if there are tests that also need to be updated for this.","closed","C-py,","titusfortner","2021-07-10T01:03:42Z","2021-07-20T15:31:48Z"
"","9184","Selenium cannot interact with popup menu","I'm not sure if this is expected behaviour, but:  I have a webpage that, has almost everything happen online and is piped to the page, the html is very chaotic and unpredictable and all elements change so I just latch to a static image and do this  `ac.move_to_element(source).move_by_offset(731, 528).click().perform()`  This preforms the click and the menu opens.   I then do  `time.sleep(6)`  `ac.move_to_element(source).move_by_offset(775, 275).click().perform()`  except instead of clicking on the popup, it clicks on the layer below and closes the popup, I know this because it highlights the words behind it, which after hours of trial and error it was like the code spit in my face.  I have no clue if this is intended function or not, or if theres a work around, please help.  The popup isn't an element that exists, and only populates after the JS script is called.","closed","","Retkid","2021-02-16T19:48:41Z","2021-09-05T08:19:03Z"
"","9722","selenium.common.exceptions.WebDriverException: Message: unknown error: cannot create default profile directory","I'm getting this error  ```selenium.common.exceptions.WebDriverException: Message: unknown error: cannot create default profile directory``` any idea to how can i fix?","closed","","Scarner56","2021-08-06T14:40:01Z","2021-09-06T00:05:30Z"
"","9199","How can i open an external app from the browser automatically","I'm automating tests using Selenium and python and I need to open an external app from the browser. The problem is, how can i do this automatically, it's not alert, so i can't use ""driver.switch_to.alert().accept()""  ![image](https://user-images.githubusercontent.com/66584897/108618947-dc7e2580-745c-11eb-8607-42d0bdec598c.png)","closed","","xiaosanye886","2021-02-21T07:54:16Z","2021-09-05T08:15:52Z"
"","9504","Selenium Validation Report","I work for a pharmaceutical company and we recently got audited. One of the issues found was that we weren't validating out test tools. Is there a report I can download or have one provided that demonstrates the functions are working as expected? potentially a unit test report or a validation report I can present to the auditors.","closed","","nabsofken","2021-05-22T01:15:50Z","2021-09-05T08:03:22Z"
"","9145","[rb] update default cookie setting behavior with thorough documentati‚Ä¶","I went down a rabbit hole exploring desired cookie behavior.  I added all the specs, filed all the bugs, and referenced them in the guards as applicable.  The main change I want to get reviewed is overriding the defaults when we create the cookies. Per the WebDriver spec only name & value are required, and per the Cookie RFC, the path & the secure value are the expected defaults from the browser. As such I don't think we should be overriding the behavior, even if it might not be backward compatible (Chrome has a bug that sets secure to true by default on non-localhost sites)  @luke-hill you should be happy with this. :)","closed","C-rb,","titusfortner","2021-02-05T00:07:21Z","2021-03-01T21:34:01Z"
"","9533","send_keys() in python handle 'r' and 'e' chars as RETURN and BACKSPACE","I trying to insert some text in login text box using selenium and python (Chrome driver).  At first I created driver ‚Üí  ```python from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By from selenium.common.exceptions import TimeoutException, NoSuchElementException from selenium.webdriver.common.keys import Keys from selenium.webdriver.chrome.options import Options from selenium import webdriver  options = Options() options.binary_location = '/usr/bin/google-chrome' options.add_argument('--window-size=1200,1024') drv = webdriver.Chrome('chromedriver', options=options) ```  After that I tried to insert text ‚Üí  ```python # first try WebDriverWait(drv, 3).until(EC.presence_of_element_located((By.ID, 'email'))).send_keys('ageb')  # second try login = 'ageb' WebDriverWait(drv, 3).until(EC.presence_of_element_located((By.ID, 'email'))).send_keys(login)  # third try drv.find_element_by_id(""email"").send_keys('ageb')  # fourth try for chr in 'ageb':   drv.find_element_by_id(""email"").send_keys(chr)  # fifth try elem = drv.find_element_by_id(""email"") for character in login_user:     actions = webdriver.ActionChains(drv)     actions.move_to_element(elem)     actions.click()     actions.send_keys(character)     print(character)     actions.perform()     sleep(1) ```  In all cases `e` working as backspace  |Input string|Result string that I can see in browser| |--|--|   |`ageb`|`ab`|    |`aggeb`|`agb`|    |`ageeb`|`b`|  In my local MacOS script working perfect, but problem appear at development Ubuntu 18.04.2 Server.    I lost hope of finding a solution.  Looks like here is keyboard layout problems. I trying to run Chrome via SSH session with X forwarding (but headless Chrome behavior is same).  Infrastructure specs  ``` ChromeDriver 90.0.4430.24  Google Chrome 90.0.4430.85  /etc/default/keyboard ‚Üí     XKBMODEL=""pc105""     XKBLAYOUT=""jp""     XKBVARIANT=""""     XKBOPTIONS=""""     BACKSPACE=""guess""  Linux 4.15.0-54-generic #58-Ubuntu x86_64 GNU/Linux  Ubuntu 18.04.2 LTS (Bionic Beaver)  Python 3.6.9  selenium 3.141.0 ```  Not sure if that is Selenium bug or my configuration problems, but I don't know how to check it.","closed","","razielvamp666","2021-06-01T13:30:06Z","2021-09-05T08:01:16Z"
"","9324","Can't use proxy with authentication on nodejs","I tried everything but cant success. How to use proxy authentication with Selenium? I tried these ways:  options.addArguments(""--proxy-server=http://username:pass@proxy_url"");  and  options.setProxy(proxy.manual({http: username:pass@proxy_url}));  Do you have an idea?","closed","","alicanso","2021-03-23T13:23:52Z","2021-09-05T08:10:41Z"
"","9049","[rb] add support for intercepting assets","I took a look at the Ruby DevTools code for the first time. Great work getting this imported, @p0deje!  First, does it make sense to have `#record_page_events!` and `#record_network_events` to tally when events are called?. Seems easier for basic validations if we need to do them.  [Network.setRequestInterception](https://chromedevtools.github.io/devtools-protocol/tot/Network/#method-setRequestInterception) is deprecated, so I implemented this with [Fetch.enable](https://chromedevtools.github.io/devtools-protocol/tot/Fetch/#method-enable)  The biggest issue is that the `RequestId` has to be obtained from the `requestPaused` event but this doesn't appear to be thread safe. I got it ""working"" for this example by using [concurrent-ruby](https://github.com/ruby-concurrency/concurrent-ruby).  Does it make sense to use concurrent-ruby to ensure we're using the correct id? Is this hacky or useful as a solution?","closed","C-rb,","titusfortner","2021-01-15T00:20:08Z","2021-03-02T15:21:26Z"
"","9220","Ruby selenium-devtools gem","I think this is the best I can do, so I'd love some eyes on it to make sure it's reasonable.  * 2!?! gemspecs. This was weirder/more complicated than I expected, but I think I did everything correctly here. * Using `selenium-devtools.gem` since Java is doing `selenium-devtools-v88` for their jars * I wasn't sure about namespacing. I decided that the gems should have different namespaces and that `Selenium::WebDriver::DevTools` would use `#method_missing` to point to `Selenium::DevTools` * User doesn't need to require the gem, though currently they need to add it to their gemfile if they want to use it. * The gem is essentially built entirely dynamically, so I'm thinking we support a range of versions at a time; I'm starting with 84 - 88 because that's how far back Java has maven jars for. We should do 3 at a time going forward, and the user can specify in gemfile which one they want to freeze on if they need to. * separated build commands `bidi` & `devtools` to limit what is required for building devtools gem * new namespacing for build/release: `./go //rb:gem:webdriver:release` and `./go//rb:gem:devtools:release` * I already released alphas! https://rubygems.org/gems/selenium-devtools   I can already see there's some minor housekeeping I can do still, but please try this out and let me know if there is something not working.","closed","C-rb,","titusfortner","2021-02-28T07:16:31Z","2021-03-15T19:28:23Z"
"","9138","[rb] restore default Firefox Profile settings to match 3.x","I think this is a better option than #9068 for maintaining backward compatibility.  These are the ones that aren't default, but make sense for testing.  * Set everything to about:blank and/or prevent extra tabs opening.  * `""network.captive-portal-service.enabled"": false`: When you launch Firefox, the browser immediately establishes a new connection to detectportal.firefox.com. This behavior is caused by Captive Portal, a special feature of Firefox. Disabling Captive Portal will stop Firefox from connecting to detectportal.firefox.com.  * `""security.csp.enable"": false`: allows including external javascript code on a page  tbh, these sound like more reasonable defaults than what geckodriver creates by default.","closed","D-firefox,","titusfortner","2021-02-03T22:06:06Z","2021-02-10T06:19:45Z"
"","9260","Need help in solving this issue.","I run into a problem trying to develop a scenario and I can't figure it out. This is my log below:  Scenario: Successful import of a product # com/bdd/features/fcr/product/Import.feature:76       org.openqa.selenium.TimeoutException: timeout   (Session info: headless chrome=87.0.4280.66)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 4.4.0-1122-aws x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'i-07adc.internal.aws.com', ip: '10.90.1.145', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-1122-aws', java.version: '1.8.0_282' Driver info: org.openqa.selenium.chrome.ChromeDriver selenide.url: https://i-07adc.internal.aws.com:8443/fcr/login Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.35.528139 (47ead77cb35ad2..., userDataDir: /home/ubuntu/jenkinsb-agent...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.66, webStorageEnabled: true} selenide.baseUrl: http://localhost:8080 Session ID: ea11703154fe82b92b60bbb4a218eccf 	at sun.reflect.GeneratedConstructorAccessor55.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600) 	at org.openqa.selenium.remote.RemoteWebDriver.getTitle(RemoteWebDriver.java:275) 	at com.codeborne.selenide.impl.WebDriverThreadLocalContainer.isBrowserStillOpen(WebDriverThreadLocalContainer.java:73) 	at com.codeborne.selenide.impl.WebDriverThreadLocalContainer.getAndCheckWebDriver(WebDriverThreadLocalContainer.java:110) 	at com.codeborne.selenide.WebDriverRunner.getAndCheckWebDriver(WebDriverRunner.java:137) 	at com.codeborne.selenide.impl.Navigator.navigateToAbsoluteUrl(Navigator.java:68) 	at com.codeborne.selenide.impl.Navigator.open(Navigator.java:32) 	at com.codeborne.selenide.Selenide.open(Selenide.java:94) 	at com.codeborne.selenide.Selenide.open(Selenide.java:68) 	at com.ignis.LoginPage.open(LoginPage.java:22) 	at com.bdd.steps.Background.logout(Background.java:31)    Given I am logged in to FCR Engine with username ""admin"" and **** ""****""                                          # com.bdd.steps.fcr.LogInOutSteps.iAmLoggedIn(java.lang.String,java.lang.String)   When I import the ""test"" product                                                                                      # com.bdd.steps.fcr.ImportSteps.iImportTheProduct(java.lang.String)   Then I should see the ""test"" product in the products grid having files number [4]                                     # com.bdd.steps.fcr.ImportSteps.iShouldSeeTheProductInTheProductsGrid(java.lang.String,int) Mar 10, 2021 4:05:54 PM com.codeborne.selenide.impl.ScreenShotLaboratory printOnce SEVERE: Failed to takeScreenshotAsFile: org.openqa.selenium.TimeoutException: timeout   (Session info: headless chrome=87.0.4280.66)   (Driver info: chromedriver=2.35.528139 (47ead77cb35ad2a9a83248b292151462a66cd881),platform=Linux 4.4.0-1122-aws x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: 'i-07adc.internal.aws.com', ip: '10.90.1.145', os.name: 'Linux', os.arch: 'amd64', os.version: '4.4.0-1122-aws', java.version: '1.8.0_282' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.35.528139 (47ead77cb35ad2..., userDataDir: /home/ubuntu/jenkinsb-agent...}, cssSelectorsEnabled: true, databaseEnabled: false, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: , unhandledPromptBehavior: , version: 87.0.4280.66, webStorageEnabled: true} Session ID: ea11703154fe82b92b60bbb4a218eccf 2021-03-10 16:05:54:649 [main] [WARN] com.bdd.steps.Background - Ran scenario [Successful import of a product]: FAILED","closed","","ramimlayel","2021-03-11T09:03:09Z","2021-09-05T08:12:25Z"
"","8937","Array/Fields being offset by 1 ( i think )","I program automation with Selenium and have a Ryzen 9 3900X, 64gb RAM, and a 2080 Super RTX.  My automation worked without issues until 12/4/2020 at around midnight and it still does work on other virtual machines within the company I work for. However, my personal computer has weird issues involving calculating arrays now. They seem to be out of order.  I have written everything in C# and use multithreading programming as well.  Again the same EXACT version of all dlls and the program and it works on Virtual Machines. Works on one VMWare machine and one Azure Windows Server 2019 without issue.  Chrome is the same version, ChromeDriver is the same version, Selenium is the same version.  I have the latest chipset, Ryzen Master, BIOS, and Nvidia drivers.  I use driver.executescript due to shadow roots as you will see here below. The firsttabroot is just a long deep string that is the same on these calls as an example. I believe there is an offset on where it clicks during this process on my main personal machine for some reason but not on 2 other virtual machines. This was an issue before and after the windows 10 20h2 update.  When running driver.executescript( FirstTabRoot + "".querySelector('div > div > div > section > div > div > div:nth-child(2) > div > glide-input').shadowRoot.querySelector('div > div > div > input')""; ) it clicks here: FirstTabRoot + "".querySelector('div > div > div > section > div > div > div > div > glide-choice:nth-child(3)').shadowRoot.querySelector('sn-choice').shadowRoot.querySelector('div > div > div > span')"";  As you can see this is a completely different path and makes no sense whatsoever. It can't be the websites code because on multiple machines Chrome/ChromeDriver/Selenium is the exact same version and it works on them.  It's like it's off by one array/field no matter what site I try to automate. I use selenium 3.141.0.0 but i have tried many versions all the way up to alpha 7 and it makes no difference. I use the following during driver iniitalization: ChromeOptions seleniumOptions = new ChromeOptions();             seleniumOptions.AddArgument(authProfile);             seleniumOptions.AddArguments(""--window-position=-32000,-32000"");             seleniumOptions.AddArguments(""--disable-infobars""); // disabling infobars             seleniumOptions.AddArguments(""--disable-extensions""); // disabling extensions             seleniumOptions.AddArguments(""--disable-dev-shm-usage""); // overcome limited resource problems             seleniumOptions.AddArguments(""--no-sandbox""); // Bypass OS security model //ever since Chrome 87 this has been required due to show/hide browser methods.             seleniumOptions.AddArguments(""--disable-backgrounding-occluded-windows"");  I can NOT use headless because this is a tool with partly based automation that requires user input when needed. So the browser automatically hides/shows when the user is needed.  I am wondering if this is some sort of scaling bug from switching window position or something. Whatever it is, i can not pinpoint the problem. I have tried getting help from many sources but I believe this is actually some sort of bug that may occur on all machines one day and should be investigated.","closed","","ziron999","2020-12-08T06:49:58Z","2021-09-05T08:30:12Z"
"","9307","To build Selenium-server-standalone 3.141.59 from source.","I need to create standalone executable jar, selenium-server-standalone-3.141.59.jar from Source.  Below are the steps followed on Windows, 1. Cloned Selenium from Github. 2. Installed the required software's,            Java 8 JDK,           Python 2.7           The Requests Library for Python: pip install requests 3. To compile/build selenium-server-standalone, issued the below command.        go selenium-server-standalone  Problem Statement:  Unable to find selenium-server-standalone-3.141.59.jar even after the command is successful.   ## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Bhuvanavd","2021-03-19T08:55:42Z","2021-09-05T08:10:45Z"
"","9371","Selenium Grid v4 shutdown command","I know that in V2 and even V3 e were able to use an address to shutdown selenium For example: http://localhost:4444/lifecycle-manager/LifecycleServlet?action=shutdown  Is this still possible in V4, as I haven't seen anything related to this in the documentation, or anywhere else.  I want to run selenium as a standalone server, not a node/hub, and during a deployment, I want to shut it down gracefully, and not by using a `kill` command","closed","","Scobee","2021-04-09T11:44:44Z","2021-09-05T08:08:34Z"
"","8927","node options `detect-drivers` and `drivers` is confusing","I hope to only run chrome on a specific node (though it has other browsers installed for some reason.  If I set  ```toml [node] detect-drivers = ""false"" drivers = [""chrome""] ``` then node browser will be added.  If I set  ```toml [node] detect-drivers = ""true"" drivers = [""chrome""] ```  Then I will find that all browsers will be added, and chrome will be added twice. ``` 16:59:25.523 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 2 times 16:59:25.524 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 2 times 16:59:25.525 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 2 times 16:59:25.525 INFO [NodeOptions.report] - Adding Safari for {""browserName"": ""safari""} 1 times 16:59:25.526 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox""} 2 times ```  Is there any combination can just let me only have chrome enabled?   I am using the latest build on the trunk (2020/12/01).","closed","","link89","2020-12-01T09:00:47Z","2021-09-05T08:30:16Z"
"","9278","Python - How to run execute_cdp_cmd for all tabs","I have use execute_cdp_cmd to excute some script like change useragent for chromedriver. But it only work for first tab and not working for new tab.  Anyone have the same problem as me?","closed","","lequanghiep74","2021-03-14T11:17:18Z","2021-09-05T08:12:20Z"
"","9194","ArgumentError: wrong number of arguments (given 1, expected 0)   # /usr/local/bundle/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:44:in `handshake","I have the following capybara config:  ``` Capybara.register_driver :chrome_headless do |app|   media_tab_screen_size = '1280,800'   chrome_capabilities = Selenium::WebDriver::Remote::Capabilities.chrome(     loggingPrefs: {       browser: 'ALL',       client: 'ALL',       driver: 'ALL',       server: 'ALL'     },     chromeOptions: {       args: %W[no-sandbox                disable-dev-shm-usage                no-default-browser-check                start-maximized                headless                disable-gpu                window-size=#{media_tab_screen_size}]     }   )   if ENV['HUB_URL']     Capybara::Selenium::Driver.new(app,                                    browser: :remote,                                    url: ENV['HUB_URL'],                                    desired_capabilities: chrome_capabilities)   else     Capybara::Selenium::Driver.new(app,                                    browser: :chrome,                                    desired_capabilities: chrome_capabilities)   end end  RSpec.configure do |config|      driven_by :chrome_headless      # Sets host for tests with selenium     Capybara.app_host = ""http://#{IPSocket.getaddress(Socket.gethostname)}:3000""     # Capybara.server = :puma # Until your setup is working     Capybara.server_host = IPSocket.getaddress(Socket.gethostname)     Capybara.server_port = 3000 end ```   When I am running a system test, I am getting the following error:   ```           ArgumentError:             wrong number of arguments (given 1, expected 0)           # /usr/local/bundle/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:44:in `handshake'           # /usr/local/bundle/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/driver.rb:39:in `initialize'           # /usr/local/bundle/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:58:in `new'           # /usr/local/bundle/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:58:in `for'           # /usr/local/bundle/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver.rb:88:in `for'           # /usr/local/bundle/gems/capybara-3.35.3/lib/capybara/selenium/driver.rb:83:in `browser'           # /usr/local/bundle/gems/capybara-3.35.3/lib/capybara/selenium/driver.rb:104:in `visit'           # /usr/local/bundle/gems/capybara-3.35.3/lib/capybara/session.rb:278:in `visit'           # /usr/local/bundle/gems/capybara-3.35.3/lib/capybara/dsl.rb:53:in `call'           # /usr/local/bundle/gems/capybara-3.35.3/lib/capybara/dsl.rb:53:in `visit'           # ./spec/system/home_page_spec.rb:7:in `block (2 levels) in '           # /usr/local/bundle/gems/webmock-3.11.2/lib/webmock/rspec.rb:37:in `block (2 levels) in '       1.2) Failure/Error:                     def self.handshake(**opts)                       desired_capabilities = opts.delete(:desired_capabilities) { Capabilities.new }                        if desired_capabilities.is_a?(Symbol)                         unless Capabilities.respond_to?(desired_capabilities)                           raise Error::WebDriverError, ""invalid desired capability: #{desired_capabilities.inspect}""                         end                          desired_capabilities = Capabilities.__send__(desired_capabilities)                       end            ArgumentError:             wrong number of arguments (given 1, expected 0)  ```  I really don't know what is causing this. I tried to debug it myriad times and change the gem version but nothing happened. I would appreciate any help.","closed","","modullar","2021-02-19T22:08:55Z","2021-09-05T08:10:41Z"
"","9086","How can i set custom headers whet sending get request?","I have installed selenium in python 3.6, now, when i trying to get `driver.get(some_url)` i need to set custom headers for this, how can i do this?","closed","","daeeros","2021-01-22T13:09:25Z","2021-09-05T08:24:56Z"
"","9867","Py commands","I have a checklist of all of the browser specific commands to add to each of the bindings; Python had most of them implemented already, so these were all I needed to add to make it the first one to have everything. @AutomatedTester let me know if I did the deprecation correctly.","closed","C-py,","titusfortner","2021-09-23T18:51:15Z","2021-09-24T14:50:15Z"
"","9337","Deadlock with ChromeDriver","I have a bug I can't reproduce easily, but this happen once in a while:  1. We have like 50+ tests on selenium. (no parallelism) 2. At one point, one of them fail because ChromeDriver timeout (on the constructor, in MakeHttpRequest) 3. From this point, all remaining tests timeout on ChromeDriver  I believe that [this PR](https://github.com/SeleniumHQ/selenium/pull/7987) is not fixing the problem right. `TaskFactory` will not create a new thread, unless marked as long running. So What I think happen is that ChromeDriver is clogging the thread pool making everything else fail later on.","closed","","NicolasDorier","2021-03-26T03:29:00Z","2021-09-05T08:10:33Z"
"","9872","[java] use FileDetector to install Firefox addons","I don't see an ideal way to do this.  The whole point is to be able to do this with the Augmenter, which means the interfaces which don't know about RemoteWebDriver methods, and I don't want to put the driver instance as a parameter for the method in the interface.   ~This is the best I came up with.:~  ~The implementation is mostly copied from `RemoteWebElement#upload` but again, I don't see an easy way to put this logic where both of them can access it.~  Edit: I changed this so it tries the string as provided first, and if that doesn't work, it determines if the file exists locally, and if so uploads it and retries.   Not sure it's ideal either, but it won't break anything, and won't keep us from doing something better later.","closed","C-java,","titusfortner","2021-09-28T16:01:35Z","2021-09-29T14:19:19Z"
"","9433","Handle Onload Alert","I am unable to handle alert which prompted onload().  The below is scenario, There is a window opening by clicking a button and alert shown by OnLoad function in new window.  This alert is not able to handle using Java Selenium.  Kindly suggest any solution.","closed","","sakthivelcse2506","2021-05-03T09:32:33Z","2021-09-05T08:06:37Z"
"","9081","Running Python Selenium Script through PHP","I am having a PHP script which executes a python script containing Selenium.  ``` $command = escapeshellcmd(""/home/clouduser/bots/telegram/send_alerts""); $output = shell_exec($command);  echo $output;  ```  Selenium works just fine when running it outside of php, I only get the following error when the python script is executed through php.  I have set folder permissions to 777 as well as group to www-data.  ``` Traceback (most recent call last):   File ""/home/clouduser/bots/telegram/send_alerts/main.py"", line 35, in      selenium()   File ""/home/clouduser/bots/telegram/send_alerts/main.py"", line 27, in selenium     driver = webdriver.Chrome(executable_path='/home/clouduser/bots/telegram/send_alerts/chromedriver', options=options)    File ""/home/clouduser/bots/telegram/send_alerts/lib/python3.8/site-packages/selenium/webdriver/chrome/webdriver.py"", line 73, in __init__     self.service.start()   File ""/home/clouduser/bots/telegram/send_alerts/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 98, in start     self.assert_process_still_running()   File ""/home/clouduser/bots/telegram/send_alerts/lib/python3.8/site-packages/selenium/webdriver/common/service.py"", line 109, in assert_process_still_running     raise WebDriverException( selenium.common.exceptions.WebDriverException: Message: Service chromedriver unexpectedly exited. Status code was: 1 ```  The code I am using is:  ``` #!/home/clouduser/bots/telegram/send_alerts/bin/python3.8  from selenium import webdriver import time  def selenium():     options = webdriver.ChromeOptions()     options.add_argument('--headless')     options.add_argument('--no-sandbox')     options.add_argument(""--window-size=1920,1080"")     options.add_argument(""--start-maximized"")     options.add_argument(""--disable-extensions"")     driver = webdriver.Chrome(executable_path='/home/clouduser/bots/telegram/send_alerts/chromedriver', options=options)      driver.get (""https://google.com"")      time.sleep(5)     print(driver.title)     driver.quit()     return selenium   selenium() ```  As mentioned running the python file alone works perfectly.  I appreciate any help, thank you!","closed","","kroil","2021-01-21T20:03:36Z","2021-09-05T08:24:58Z"
"","9598","USB device handle error in using onclick function","I am getting USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) When I try to use .click function on a submit button ![Capture](https://user-images.githubusercontent.com/61241857/122929166-40bbe200-d388-11eb-900a-38d35ea432eb.PNG)","closed","","DakshYadav358","2021-06-22T13:03:31Z","2021-09-05T07:59:11Z"
"","9198","Selenium error when loading specific page ‚Äúselenium Failed to resolve address‚Äù","I am creating a bot in python and when loading a page it shows the following errors on the console but it still runs but when I try to run anything that involves the page it crashes giving the information that the element was not found as if it had not loaded the page ```[19268:23244:0220/122212.124:ERROR:socket_manager.cc(128)] Failed to resolve address for b61e8cb6-1616-485e-8ff4-278ce4d32d1e.local., errorcode: -105``` ```[19268:23244:0220/122212.138:ERROR:socket_manager.cc(128)] Failed to resolve address for b61e8cb6-1616-485e-8ff4-278ce4d32d1e.local., errorcode: -105```  already tried to reload the page but the same error.  part of the code that is giving error: ``` logar = driver.find_element_by_id(""joinBtn"")             logar.click()             sleep(10)              driver.get(driver.current_url)             sleep(10)             microfone = driver.find_element_by_link_text(""Entrar √°udio por computador"")             microfone.click() ``` **is locking when it reaches the** ```microfone = driver.find_element_by_link_text(""Entrar √°udio por computador"")```","closed","","lucasolopes","2021-02-20T19:17:31Z","2021-09-05T08:15:52Z"
"","9107","js extension is missing in main field of package.json","https://github.com/SeleniumHQ/selenium/blob/84fc16db8d8bd39be72590fe01d454ff6f1de9bd/javascript/node/selenium-webdriver/package.json#L17  eslint was complaining that it coudn't resolve ""selenium-webdriver"" until I changed the value of the `main` property in _package.json_ to `index.js` instead of `./index`.","closed","","thdk","2021-01-26T20:53:59Z","2021-09-05T08:21:38Z"
"","9858","How to download the logs using ""devtools"" with ""Remote webdriver"" using selenium 4 rc1?","How to download the logs using ""devtools"" with ""Remote webdriver"" using selenium 4 rc1?  I tried with the following link in latest selenium 4 rc1, SeleniumHQ/selenium#9017 (comment) which throws me , Unhandled Exception: OpenQA.Selenium.WebDriverException: Cannot find se:cdp capability for driver at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession(Int32 protocolVersion) at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession()  Below is my code, //Remote Webdriver  ChromeOptions chromeOptions = new ChromeOptions(); //chromeOptions.AddAdditionalOption(""RemoteDevToolsEndPointCapabilityName"", ""se:cdp""); //chromeOptions.AddAdditionalOption(""RemoteDevToolsVersionCapabilityName"", ""se:cdpVersion""); RemoteWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:9515""), chromeOptions); Console.WriteLine("">>>>>>>>>>>>>"" + driver.RemoteDevToolsEndPointCapabilityName); // -> this returns the string se:cdp Console.WriteLine("">>>>>>>>>>>>>"" + driver.RemoteDevToolsVersionCapabilityName); // -> this returns the string se:cdpVersion var devToolsSession = ((IDevTools)driver).GetDevToolsSession();// => this line throws the exception ""Cannot find se:cdp capability for driver"" if (devtoolsession != null) { //code }","closed","","Febbie15","2021-09-21T10:20:15Z","2021-10-22T00:06:52Z"
"","9229","how to change the var name in source code ,i can'not find where the source  code?","how to change the var name in source code ,i can'not find where the source code? help me! thank you!  like ""__webdriver_evaluate"",  ""__selenium_evaluate"",  ""__webdriver_script_function"",  ""__webdriver_script_func"", ""__webdriver_script_fn"",  ""__fxdriver_evaluate","closed","","zengfr","2021-03-02T08:47:42Z","2021-09-05T08:15:47Z"
"","9515","how add another header","how i can add header ?  code:  ``` options = webdriver.ChromeOptions() options.add_argument('User-Agent=""111""') options.add_argument('Authorization=""666""') browser = webdriver.Chrome(chrome_options=options) browser.implicitly_wait(10) wait=WebDriverWait(browser,10) ``` result now : 'User-Agent' had In the request, but 'Authorization' not","closed","","Paul101432","2021-05-26T08:26:08Z","2021-09-05T08:03:18Z"
"","9778","How do i open multiple instances of chromedriver in python?","How do i open multiple instances of chromedriver in python?   Without using multiple chrome profiles For instance i input 3, it should open 3 different chromedriver windows and .get(""example.com"")","closed","","sr2echa","2021-09-01T02:40:41Z","2021-10-02T00:06:27Z"
"","9599","How can I use local certificates in selenium?","How can I use local certificates in selenium? I have done quite a bit of research on this, but have not been able to solve the problem.","closed","","johnvonneumann7","2021-06-23T11:23:42Z","2021-09-05T07:59:10Z"
"","9015","Could you help to check the issue is an incompatibility  between selenium version and chrome version.","HIÔºå Today I upgrade chrome version and chrome webdirver version from 81.0.4044.138 to 87.0.4280.88 on my selenium grid node  machines , but when i test click checkbox on UI , then i get the following error: **(org.openqa.selenium.ElementNotInteractableException: element not interactable: element has zero size**   (Session info: chrome=87.0.4280.88) Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16' System info: host: 'shcAimeeCOS72.hpeswlab.net', ip: '16.155.199.109', os.name: 'Linux', os.arch: 'amd64', os.version: '4.7.3-1.el7.elrepo.x86_64', java.version: '1.8.0_72' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:53895}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: d5b503c73bb648a89de3ed26023...} Session ID: d5b503c73bb648a89de3ed260232042e).  but if my chrome version and chrome webdriver version is **81.0.4044.138**, then click the checkbox is ok.  Could you help to check the issue is an incompatibility  between selenium version and chrome version. my selenium  jar version is **selenium-server-standalone-3.141.59.jar**","closed","","ChrisD1990","2020-12-31T07:21:44Z","2021-09-05T08:27:43Z"
"","9027","DRAG and DROP using selenium to same container for rearranging elements not working","hi...   I am using python3 and selenium chromedriver 2.41 : https://chromedriver.storage.googleapis.com/index.html?path=2.41/  MAC laptop : MAC OS Mojave : version 10.14.6   Drag and drop operation is not working.   there is a container with some elements arranged in some order - I need to drag and drop and element to the same container to a different place so that the Order /priority  of the elements  changed accordingly   eg: priorrity 1 element - is drragged and dropped at priority 6 so that priority eleement 2 will be the new priority 1  priority 6 element will move to priority 5   please find the screenshot.       I tried the below  using xpath of source element and destination element   from selenium import webdriver driver = webdriver.Chrome() from selenium.webdriver.common.action_chains import ActionChains  self.drag_and_drop_webelement_direct(source_element,dest_element)   self.drag_and_drop(source_loc, dest_loc)   actions.click_and_hold(src_element).perform() actions.move_to_element_with_offset(dest_element,-1,-1).perform() actions.move_to_element(dest_element).perform() actions.release().perform() actions.release(dest_element).perform()    Drag is happening, but the DROP is not happening. the element is still in the hold position.","closed","","Ranjima123","2021-01-06T08:28:33Z","2021-09-05T08:27:40Z"
"","9684","üêõ Bug Report : openjdk out of memory error when running the standalone service for a long time","Hi, I find that when I use the docker image to start a standalone service on a CentOS 7 node with the following command,   `docker run -p 5555:4444 -v /dev/shm:/dev/shm -e SE_NODE_MAX_SESSIONS=20 -e SE_NODE_SESSION_TIMEOUT=60 -e SE_OPTS=""--grid-url http://1.2.3.4:5555/wd/hub --max-threads 20""  selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618`  Everything is fine at the beginning, but after about 3-4 days the JVM will crash due to the out-of-memory issue. You can find the log in the attachment.  [selenum4-oom.log](https://github.com/SeleniumHQ/selenium/files/6875235/selenum4-oom.log)  docker image: selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618 os: linux (docker)","closed","","link89","2021-07-26T02:52:06Z","2021-09-05T07:50:30Z"
"","9617","Why does my test randomy crash ?","Hi, I am new to Selenium and I try to automate tests on a CRM Dynamics.  I have made a very little script which :  - connect to website with credentials - detect an iframe then switch to it - click on a button in that iframe -  Then I made a testSuite to play this test 10 times and it crashes 2 or 3 times on 10 because of the button click (stale element reference: element is not attached to the page document)  Here is the code :  int timeout = 60; WebDriver driver = new ChromeDriver(); WebDriverWait wait = new WebDriverWait(driver, timeout); driver.manage().window().maximize(); driver.manage().deleteAllCookies(); driver.get(""http://login:password@dsi08.pl.oxymis.fr/B2BDEV/""); WebElement iFramePopinBienvenue = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""InlineDialog_Iframe""))); driver.switchTo().frame(iFramePopinBienvenue); wait.until(ExpectedConditions.elementToBeClickable(By.id(""buttonClose""))).click(); driver.quit();  Thanks for all your ideas.","closed","","awissart","2021-06-29T08:23:58Z","2021-09-05T07:59:06Z"
"","9093","Clicking on coordinates","Hi, can i clicking on coordinates with selenium ? (so, not clicking a button)","closed","","davidefiorini","2021-01-25T10:56:30Z","2021-09-05T08:21:46Z"
"","9767","Selenium 4 night build","Hi, Is there any place, where I can download nigth buld ? Or when will be  next beta version 4 released ?  Thank you a lot.  Karel","closed","","KarelHaruda","2021-08-27T05:40:32Z","2021-09-27T00:05:53Z"
"","9174","Fastest way to switch between tabs","Hi, I'm using selenium with python and chromedriver and I'm trying to do a script that clicks in a button from multiple taps in the shortest time (","closed","","jmmb13","2021-02-14T12:26:02Z","2021-09-05T08:19:07Z"
"","8986","Selenium close Websocket with code 1006","Hi, I think Selenium closes the Websockets with code 1006 randomly, with Quit(). Which is an [abnormal closure](https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent). I think it's pretty easy to reproduce it with the latest version of Selenium. The websocket onclose event sometimes print the code 1006.  Tested on : Windows and Linux. Selenium : C# and JS. Browser : Chrome 87. I used a NodeJS / Apollo server.","closed","","ZiedHf","2020-12-21T15:28:21Z","2021-09-05T08:27:52Z"
"","9823","Tkinter file browser with send_key function","Hi,  I wrote the following code to make a gui with a file chooser to upload a file to a website:  filename = StringVar()     filename = filedialog.askopenfilename(initialdir = ""/"", title = ""Select a File"",filetypes = ((""jpg"",""*.jpg*""),(""png"",""*.png*""),(""jpeg"",""*.jpeg*"")))     y='""' +str(filename) + '""'     filepath = y.replace(""/"", str('\\\\'))     options = webdriver.FirefoxOptions()     options.headless = True      browser = webdriver.Firefox(executable_path=r""geckodriver.exe"", options=options)         browser.get('url')     element = browser.find_element_by_xpath('/html/body/center/form/table/tbody/tr[3]/td[1]/input[2]').send_keys(filepath)        WebDriverWait(browser, 10000).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""b_upload""]'))).click()     WebDriverWait(browser, 10000).until(EC.element_to_be_clickable((By.XPATH, '//*[@id=""b_getsmiles""]'))).click()     smiles = browser.find_element_by_xpath('/html/body/center/form/table/tbody/tr[3]/td[2]/input[1]').get_property('value')     print(smiles)     browser.close()    I choose the file over the file browser of tkinter and send it to the send_keys function But after I choose the file over the tkinter file browser I get the follwing error:  Exception in Tkinter callback Traceback (most recent call last):   File ""C:\Users\TMK\anaconda3\lib\tkinter\__init__.py"", line 1892, in __call__     return self.func(*args)   File ""C:\Users\TMK\Desktop\RoseBoom2.1alphaHolidayEdition Installation\RoseBoom2.1alphaHolidayEdition.py"", line 12618, in cactus     element = browser.find_element_by_xpath('/html/body/center/form/table/tbody/tr[3]/td[1]/input[2]').send_keys(filepath)   File ""C:\Users\TMK\anaconda3\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 477, in send_keys     self._execute(Command.SEND_KEYS_TO_ELEMENT,   File ""C:\Users\TMK\anaconda3\lib\site-packages\selenium\webdriver\remote\webelement.py"", line 633, in _execute     return self._parent.execute(command, params)   File ""C:\Users\TMK\anaconda3\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""C:\Users\TMK\anaconda3\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.InvalidArgumentException: Message: File not found: ""C:\\Users\\TMK\\Desktop\\anilin.png""  I would be very grateful for some help.","closed","","pythonnewbie3","2021-09-14T11:41:15Z","2021-10-15T00:06:07Z"
"","9386","How to invoke Edgechromium headless and disable infor bar using Msedgedriver and Selenium 4.x-Beta","Hi,  I am unable to understand how to i launch Chromium edge browser headless and without infobar( normal launch) using selenium 3.x or 4.xBeta Please advice the pseudo code or way forward  N.B  1. I have all the drivers ready with me","closed","","bhatr1","2021-04-16T06:50:24Z","2021-09-05T08:08:30Z"
"","9690","Work with Selenium Grid project in Visual Studio Code","Hi,  Does anyone have some experience with working on Selenium Grid in VS Code? I need some guidelines on how to set up the env to be able to build the solution.  Cheers, PM","closed","","pm90pl","2021-07-28T12:00:40Z","2021-09-05T07:50:19Z"
"","9215","Automate the signature","Hi! In my application there is a ""textarea"" in which the user has to insert his signature (it works only with the pen and not with the finger!), For this the ""Namirial"" library was used.  I tried to write the following code, but I don't see anything on the screen. `		 IWebElement input_Sign = DriverHelper.driver.FindElement(By.Id	(""fragment_sign_namirialFEASignatureView_container"")).FindElement(By.ClassName(""android.view.View""));  int x = input_Sign.Location.X; int y = input_Sign.Location.Y;  TouchAction builder = new TouchAction(DriverHelper.driver);  builder.LongPress(x, y).MoveTo(x + 200, y + 15).Release().Perform(); //.Release()`  I don't know if I'm on the right track or completely off track...  I tried too with ClickAndHold() and MoveToElement... without any result!  [Appium.WebDriver 4.3.1] [Selenium.Support 3.14.1.0] [Selenium.WebDriver 3.14.1.0]","closed","","robertosalemi","2021-02-25T23:00:54Z","2021-09-05T08:15:48Z"
"","9234","Selenium 4 beta1 Devtools doesnt capture Http POST request","Hi there. I'm using Selenium 4 beta 1 and Im trying to capture all network request as in the following code.  ` private def configRequestCapture(devTools: DevTools) = {     devTools.addListener(       Network.requestWillBeSent(),       new Consumer[RequestWillBeSent] {         override def accept(r: RequestWillBeSent): Unit = {           println(s""""""                      |New request: ${r.getRequestId} - ${r.getRequest.getMethod} ${r.getRequest.getUrl}                      |"""""".stripMargin)            repository.add(             NetworkRequest(               r.getRequestId(),               r.getRequest,               r.getWallTime.toString.toDouble.toLong,               -1             )           )         }       }     )   }  `       The problem is it only can capture GET request only.  So does anyone know how to fix this?   Thanks in advanced","closed","","andy1xx8","2021-03-03T16:04:36Z","2021-09-05T08:15:45Z"
"","9846","Selenium 4 - Node taking 3 minutes to be registered as UP","Hi there,  I'm running Selenium Grid 4 using the fully distributed mode on K8s running on GKE.   However, I have some issue with node taking a long time to be marked as UP.  As Dynamic Grid (https://github.com/SeleniumHQ/docker-selenium#dynamic-grid-) is not currently supported in Kubernetes, I wrote a cronjob that will automatically scale up & down the number of node depending on the number of sessions running & sessions in the queue.  While the script is working fine (it's scaling up & down depending on the number of tests), our tests are taking a very long time to run as some nodes would take a long time to be ready.  ## To Reproduce  I'm running the fully distributed mode using the following yaml file - https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/k8s-deployment-full-grid.yaml  Which is the same as the provided yaml file: https://github.com/SeleniumHQ/docker-selenium/blob/trunk/k8s-deployment-full-grid.yaml, I'm just adding namespace to make it easier to manage on my side.  I managed to reproduce this issue by manually scaling up/down the number of node (using `kubectl scale deployment`).   In order to track this issue, I wrote a small bash script to see how many of nodes are registered and how many are up or down. https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/check.sh  You can see all logs here https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/check-30.log  Please note, I started from a fresh new deployment of selenium to my k8s cluster using `kubectl apply -f k8s-deployment-full-grid.yaml`  Events (extract from https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/check-30.log)  - `Mon Sep 20 11:41:25 AEST 2021`: Started deployment of Selenium Grid to K8s. No node is ready yet. - `Mon Sep 20 11:41:48 AEST 2021`: Node is ready and marked as UP - `Mon Sep 20 11:44:51 AEST 2021`: Scaled up the number of replicas to 30 (`kubectl scale --replicas=30 deployment`) - `Mon Sep 20 11:44:57 AEST 2021`: After a few seconds, all 30 are marked as `UP` - `Mon Sep 20 11:47:04 AEST 2021`: Scaled down the number of replicas to 1. - `Mon Sep 20 11:50:54 AEST 2021`: Still waiting for grid to remove 2 node marked as `DOWN` - `Mon Sep 20 11:50:59 AEST 2021`: Scaled back the number of replicas to 30. - `Mon Sep 20 11:51:04 AEST 2021`: All 30 new nodes are added to the grid, but marked as `DOWN` - `Mon Sep 20 11:53:53 AEST 2021`: Only about 3 minutes later, all 30 nodes are marked as `UP`  I captured logs from a few nodes that you can see here: https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/chrome-node-1.log https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/chrome-node-2.log https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/chrome-node-3.log  As you can see, nodes have been added to the grid at ``` 01:51:01.874 INFO [NodeServer.lambda$createHandlers$2] - Node has been added ```  But are only marked as `UP` about 3 minutes later.  You can find the full log of the distributor here: https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/distributor.log  I'm not sure if my issue is related to https://github.com/SeleniumHQ/docker-selenium/issues/1337, as I have this issue with the latest version (4.0.0-rc-2-prerelease-20210916). I also tried to run the suggested version `4.0.0-rc-1-prerelease-20210618`, but have the same issue.  ## Expected behavior  It should take that long for a node to be marked as `UP` and ready to run tests  ## Test script or set of commands reproducing this issue  Please see above  ## Environment  Selenium Grid version: 4.0.0-rc-2-prerelease-20210916","closed","","gtaujeky","2021-09-20T04:57:01Z","2021-10-21T00:06:25Z"
"","9066","some methods are removed in the remote_connection.py file","Hi Team, I noticed that in Python selenium package(https://pypi.org/project/selenium/#files) some methods mentioned below are removed in the remote_connection.py, def get_certificate_bundle_path(cls): def set_certificate_bundle_path(cls, path): def get_remote_connection_headers(cls, parsed_url, keep_alive=False): def _get_proxy_url(self): def _get_connection_manager(self):  But the same methods are still in the Github package - https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py  If it is removed, could you please tell me how I can set custom CA path without set_certificate_bundle_path method.  Selenium version: 3.14.1","closed","","SaravananRavi","2021-01-19T23:13:18Z","2021-09-05T08:25:00Z"
"","9065","some methods are removed in the remote_connection.py file","Hi Team, I noticed that in Python selenium package(https://pypi.org/project/selenium/#files) some methods mentioned below are removed in the remote_connection.py, def get_certificate_bundle_path(cls): def set_certificate_bundle_path(cls, path): def get_remote_connection_headers(cls, parsed_url, keep_alive=False): def _get_proxy_url(self): def _get_connection_manager(self):  But the same methods are still in the Github package - https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py  If it is removed, could you please tell me how I can set custom CA path without set_certificate_bundle_path method.","closed","","SaravananRavi","2021-01-19T23:10:17Z","2021-09-05T08:25:00Z"
"","9619","Unable to take full page screenshot","Hi Team,  i am unable to take full page screenshot , my code is below, i am using java 8. ChromeOptions options = new ChromeOptions(); //options.addArguments(""headless""); driver = new ChromeDriver(options); driver.get(""https://aib.ie""); driver.manage().window().maximize(); Screenshot screenshot=new AShot().shootingStrategy(ShootingStrategies.viewportPasting(1000)).takeScreenshot(driver); //getting error here while taking full page screenshot.  Maven  org.seleniumhq.selenium selenium-java 3.13.0 compile 		 		 			ru.yandex.qatools.ashot 			ashot 			1.5.4 			compile  		 Error  rg.apache.sling.engine.impl.SlingRequestProcessorImpl service: Uncaught Throwable java.lang.RuntimeException: java.lang.NullPointerException at ru.yandex.qatools.ashot.util.InnerScript.execute(InnerScript.java:32) at ru.yandex.qatools.ashot.shooting.ViewportPastingDecorator.getFullHeight(ViewportPastingDecorator.java:67) at ru.yandex.qatools.ashot.shooting.ViewportPastingDecorator.getScreenshot(ViewportPastingDecorator.java:41) at ru.yandex.qatools.ashot.shooting.ViewportPastingDecorator.getScreenshot(ViewportPastingDecorator.java:35) at ru.yandex.qatools.ashot.AShot.takeScreenshot(AShot.java:145)","closed","","abhishek140389","2021-06-29T11:57:06Z","2021-09-05T07:59:05Z"
"","9780","Python Selenium stuck at webdriver.Ie()","Hi I am running Selenium in python with internet explorer using `IEDriverServer_Win32_3.150.2`  from [selenium.dev site][1] with the following code:  ```     from selenium import webdriver     from selenium.webdriver.common.keys import Keys      #Setting up the driver     caps = webdriver.DesiredCapabilities.INTERNETEXPLORER     caps['ignoreProtectedModeSettings'] = True     caps['nativeEvents'] = True     caps['ignoreZoomSetting'] = True     caps['InternetExplorerDriver.INTRODUCE_FLAKINESS_BY_IGNORING_SECURITY_DOMAINS'] = True     caps['requireWindowsFocus'] = True          driver = webdriver.Ie(executable_path=""C:\\IEDriverServer.exe"", capabilities=caps)  ```  The driver successfully open IE 11 with no warning and with the welcoming page `""This is the initial start page for the WebDriver server.""` however Python seems to stuck at executing `drive = webdriver.Ie()` and I have no way to call `driver.get()`  I have follow the instruction by making sure all protected mode turns on.     [1]: https://www.selenium.dev/downloads/","closed","","gabrielwong1991","2021-09-01T12:06:19Z","2021-10-02T00:06:26Z"
"","9547","Python3 can't run with ChromeOptions() in ChromeDriver 91","Hi guys.  Today i just updated my ChromeDriver to version 91, and my code can't run into with ChromeOptions Class. Please help me solve this issue.","closed","","lnn2204","2021-06-04T10:02:45Z","2021-09-05T08:01:13Z"
"","8888","session not created from disconnected: unable to connect to renderer   (Session info: chrome=87.0.4280.67)","Hi Everyone! I've been experiencing issue with creating chromedriver session since yesterday. Chrome browser version got updated to latest version( 87.0.4280.67) & I've downloaded the latest chromedriver version (87). But still not able to create a chrome session. [Chrome_SessionNotCreated_v87.docx](https://github.com/SeleniumHQ/selenium/files/5572008/Chrome_SessionNotCreated_v87.docx)  Attached the logs for reference.  Thanks!","closed","","Pavithra24x7","2020-11-20T07:47:28Z","2021-09-05T08:31:25Z"
"","9709","Getting java.lang.NoSuchMethodError: org.openqa.selenium.WebElement.getDomAttribute(Ljava/lang/String;)Ljava/lang/String;in select class for Selenium 4.0.0-beta-4","Hi , I am using selenium 4.0.0-beta-4 with chrome 89 . While selecting value from drop down using select class  I am getting exception java.lang.NoSuchMethodError: org.openqa.selenium.WebElement.getDomAttribute(Ljava/lang/String;)Ljava/lang/String;","closed","","vijaysri22","2021-08-03T08:24:21Z","2021-09-05T07:50:06Z"
"","9650","Cant track a call from network tab when call is sent on another page redirection","Hey, We are using Selenium 4 (4.0.0-beta-4) with java,   We have a problem with devtools (Network) There is a page where on button click(which redirecting to another page) an API call is being sent,   Actual: On this case listener (Network.requestWillBeSent()) is unable to catch the event, need help","closed","","armanayvazyan","2021-07-14T09:59:06Z","2021-09-05T07:58:53Z"
"","9583","RunScript implementation","Hey there I was reading a `spec` of selenium commands and discovered `run script` I starting to think if it any different from `execute script` according to the doc it is.  > Creates a new ""script"" tag in the body of the current test window, and adds the specified text into the body of the command. Beware that JS exceptions thrown in these script tags aren't managed by Selenium, so you should probably wrap your script in try/catch blocks if there is any chance that the script will throw an exception.  But from what I see in the code is just the same as `exec script` (I may be wrong), except not saving a returned value?  https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/dotnet/src/webdriverbackedselenium/Internal/SeleniumEmulation/RunScript.cs#L27-L55","closed","","zhiburt","2021-06-16T09:50:50Z","2021-09-05T08:01:05Z"
"","9563","> I try send_key with icons (for facebook), but browser crash with error : ""ChromeDriver only supports characters in the BMP ""","Hey everybody !! I saw this and i¬¥m having the same problem....  can anyone help me please???  how can I use this exemple below in python?    > I try send_key with icons (for facebook), but browser crash with error : ""ChromeDriver only supports characters in the BMP "" >  > what solution?  JavaScript! ``` python driver.execute_script('''     document.evaluate(         '//label[text()=""Subject Icons""]/following-sibling::div/input',  // your selector/expression here         document     ).iterateNext().value = '{}'; '''.format('‚≠êüî∏Ô∏èüîπÔ∏è‚ñ™üíÉüéß üçπüçïüåØüçñüöóüîÜ')) ```  _Originally posted by @Congee in https://github.com/SeleniumHQ/selenium/issues/3257#issuecomment-424404670_","closed","","felipedelamata","2021-06-11T19:07:57Z","2021-09-05T08:01:08Z"
"","9565","Can't get script generated data - python API","Hey all. I've been testing out the python api for a few days, trying to get script generated data from several sites, However, I've failed up until this point, and I'm wondering if there's an issue.  Here is the code I am using:   ``` from selenium import webdriver from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By  url= ""https://www.zillow.com/homes/90277_rb/"" WEBDRIVER_PATH = ""./geckodriver.exe""  driver = webdriver.Firefox(executable_path=WEBDRIVER_PATH) driver.get(url)   WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.ID, ""grid-search-results""))) element=driver.find_element(By.ID,""grid-search-results"") print(element) ```  I've also played around with WebDriverWait for different expected condition methods (visibility_of_element_located, presence_of_element_located) for different IDs, classNames, and XPATHs. Nothing helped.   I found in a forum in which someone suggested executing scripts using   `driver.execute_script(""return document.documentElement.outerHTML"")`  but that didn't do anything either.  Has anyone run into this issue before? I've attached an image below showing that the id  ""grid-search-results"" does in fact exist in the dom at the url listed in the code.  Thanks for your help.  ![Capture](https://user-images.githubusercontent.com/37492983/121792303-f9736b80-cba7-11eb-8187-cdb489dd5dd8.PNG)","closed","","ajrehl","2021-06-13T01:05:31Z","2021-09-05T08:01:08Z"
"","9465","Bug found when using selenium web driver with ruby and firefox","Here is my env in my Centos7  - Linux  3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux - geckodriver version:   geckodriver 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) - Firefox version:   Failed to open connection to ""session"" message bus: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11   Running without a11y support!   Mozilla Firefox 68.12.0esr  I only use headless mode, here is the simple code: require 'selenium-webdriver'  => true 2.4.1 :002 > Selenium::WebDriver::Firefox::Service.driver_path = ""/var/han/legal/HLP_Test/GoCD/firefox_driver/geckodriver""  => ""/var/han/legal/HLP_Test/GoCD/firefox_driver/geckodriver"" 2.4.1 :003 > options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless'],log_level: :info)  => #  =>2.4.1 :004 > driver = Selenium::WebDriver.for(:firefox,options:options), _it will take a long time to start the browser, normally just a few seconds and it consumes 100 % CPU and up to 5 or 6 GB RAM given my machine is 8GB during the startup_ 2.4.1 :006 > driver.navigate.to(""https://www.baidu.com"") _It failed at this step! it return nil or Net::ReadTimeout: Net::ReadTimeout_  2.4.1 :006 > driver.navigate.to(""https://www.baidu.com"")  => nil 2.4.1 :009 > $driver.navigate.to(""https://www.baidu.com"") Net::ReadTimeout: Net::ReadTimeout         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:176:in `rbuf_fill'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:154:in `readuntil'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:164:in `readline'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:40:in `read_status_line'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:29:in `read_new'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1446:in `block in transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `catch'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1416:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:82:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:59:in `get'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/navigation.rb:32:in `to'         from (irb):9         from /home/centos/.rvm/rubies/ruby-2.4.1/bin/irb:11:in `' but my network to this website is : PING baidu.com (220.181.38.148) 56(84) bytes of data. 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=1 ttl=44 time=3.87 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=44 time=3.91 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=4 ttl=44 time=3.93 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=5 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=6 ttl=44 time=3.83 ms I only user headless mode, when I switch to non-headless, it then will say: _Selenium::WebDriver::Error::UnknownError: invalid argument: can't kill an exited process_  What's wrong here, could anyone take a second to analyze??","closed","","ThomasSun001","2021-05-11T11:16:51Z","2021-09-05T08:03:34Z"
"","9464","Bug when using selenium web-driver with ruby and firefox","Here is my env in my Centos7  - Linux  3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux - geckodriver version:   geckodriver 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) - Firefox version:   Failed to open connection to ""session"" message bus: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11   Running without a11y support!   Mozilla Firefox 68.12.0esr  I only use headless mode, here is the simple code: require 'selenium-webdriver'  => true 2.4.1 :002 > Selenium::WebDriver::Firefox::Service.driver_path = ""/var/han/legal/HLP_Test/GoCD/firefox_driver/geckodriver""  => ""/var/han/legal/HLP_Test/GoCD/firefox_driver/geckodriver"" 2.4.1 :003 > options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless'],log_level: :info)  => #  =>2.4.1 :004 > driver = Selenium::WebDriver.for(:firefox,options:options), _it will take a long time to start the browser, normally just a few seconds and it consumes 100 % CPU and up to 5 or 6 GB RAM given my machine is 8GB during the startup_ 2.4.1 :006 > driver.navigate.to(""https://www.baidu.com"") _It failed at this step! it return nil or Net::ReadTimeout: Net::ReadTimeout_  2.4.1 :006 > driver.navigate.to(""https://www.baidu.com"")  => nil 2.4.1 :009 > $driver.navigate.to(""https://www.baidu.com"") Net::ReadTimeout: Net::ReadTimeout         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:176:in `rbuf_fill'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:154:in `readuntil'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:164:in `readline'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:40:in `read_status_line'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:29:in `read_new'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1446:in `block in transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `catch'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1416:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:82:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:59:in `get'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/navigation.rb:32:in `to'         from (irb):9         from /home/centos/.rvm/rubies/ruby-2.4.1/bin/irb:11:in `' but my network to this website is : PING baidu.com (220.181.38.148) 56(84) bytes of data. 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=1 ttl=44 time=3.87 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=44 time=3.91 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=4 ttl=44 time=3.93 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=5 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=6 ttl=44 time=3.83 ms I only user headless mode, when I switch to non-headless, it then will say: _Selenium::WebDriver::Error::UnknownError: invalid argument: can't kill an exited process_  What's wrong here, could anyone take a second to analyze??","closed","","ThomasSun001","2021-05-11T11:14:29Z","2021-09-05T08:03:34Z"
"","9609","Selenium 4 beta-4 - Unable to launch browser with remotewebdriver","Here is my code -  string url = """";                          url = ""http://localhost:4444"";                                       System.Environment.SetEnvironmentVariable(""webdriver.chrome.driver"", @""Path\chromedriver.exe"");                         ChromeOptions chromoptions = new ChromeOptions();                          chromoptions.PlatformName = ""Win10"";                        driver = new RemoteWebDriver(new Uri(url), chromoptions);             driver.Navigate().GoToUrl(""http://www.google.com"");   I am getting timeout error on RemoteWebDriver. i have checked browser version (91) and driver version.  Webdriver - Selenium4 beta 4 OS - Win10 Chrome - 91 Selenium grid is connecting node correctly and localhost showing other details   Please suggest...","closed","","rohitkhankhoje","2021-06-27T21:28:06Z","2021-09-05T07:59:09Z"
"","9212","Is it possible to enable CORS on chromedriver running on port 9515 ?","Here is description   Given :      1. React app running on localhost:3000     2. ChromeDriver running on port 9515   When :      1. User try to create a session by clicking button from react app  Then :     1. CORS error is thrown.  Question : Is there any way to enable or start ChromeDriver to accept the request.","closed","","ghost","2021-02-25T05:08:52Z","2021-09-05T08:15:49Z"
"","9759","Stopping the code when connecting to a remote DevTools","Hello.I use python and chromedriver. After I added the remote-debugging-port option and connected to the remote DevTools via my main browser, my code stopped when it reached ActionChains and no longer continues to work. Please help me.","closed","","johny322","2021-08-24T09:37:29Z","2021-09-24T00:05:22Z"
"","9758","Stopping the code when connecting to a remote DevTools","Hello.I use python and chromedriver. After I added the remote-debugging-port option and connected to the remote DevTools via my main browser, my code stopped when it reached ActionChains and no longer continues to work. Please help me.","closed","","johny322","2021-08-24T09:36:27Z","2021-09-24T00:05:23Z"
"","9453","java.io.IOException: ????????? ???? ????????????? ???????? ???????????? ???????????","Hello. I newbie in selenium. I use webdriverIO + standalone server. I tried to read log and found this. Sorry, I'm really noob, so I attached log file for you. [log_sss.txt](https://github.com/SeleniumHQ/selenium/files/6443162/log_sss.txt)  ``` 18:22:40.221 FINEST [LoggingHandler.exceptionCaught] - [id: 0xc5e5861d, L:/127.0.0.1:51270 - R:localhost/127.0.0.1:51261] EXCEPTION: java.io.IOException: ????????? ???? ????????????? ???????? ???????????? ??????????? java.io.IOException: ????????? ???? ????????????? ???????? ???????????? ???????????         at sun.nio.ch.SocketDispatcher.read0(Native Method)         at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)         at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)         at sun.nio.ch.IOUtil.read(IOUtil.java:192)         at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:378)         at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253)         at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1134)         at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350)         at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151)         at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)         at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)         at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)         at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)         at java.lang.Thread.run(Thread.java:748) ```  ## Environment  OS: Windows 10 Browser:  Chrome  Browser version: 90.0.4430.24 Language Bindings version: 1.8.0_281 Selenium Standalone 4.0.0-beta-3 (revision 5d108f9a67)","closed","","Trueside","2021-05-07T16:57:26Z","2021-09-05T08:06:33Z"
"","9486","A way to block cookie in driver initialization (EDGE, IE, SAFARI)","Hello.  I faced that we cannot open driver with disabled cookies for Edge, Internet Explorer and Safari browsers. For Chrome and FF we found the correct solution: Chrome: `preferences.put(""profile.default_content_setting_values.cookies"" //value 2 to disable All Cookies` FF `network.cookie.cookieBehavior //value 5 to disable All Cookies`  Do you know the way to implement such things for Edge, Internet Explorer and Safari browsers?","closed","","horuktaras","2021-05-18T13:06:34Z","2021-09-05T08:03:27Z"
"","9332","Pandora detect selenium","Hello, pandora detect selenium, please help","closed","","GodStar88","2021-03-24T15:11:16Z","2021-09-05T08:10:34Z"
"","9646","Tab not found, even though it is open.","Hello, I need to play a test from which it opens the code of a page (view-source:https://www.youtube.com/watch?v=JeQuelXsUYA) and try to find a certain word, I'm using youtube as an example , however when clicking ""select targed in page"" the following error appears ""Tab not found /No tab is available for this test case, either continue recording it, or play it back.""  ![CODE SELENIUM](https://user-images.githubusercontent.com/87277109/125206389-6a687a80-e25d-11eb-9c97-405c1d82a618.PNG) ![ERROR SELENIUM IDE](https://user-images.githubusercontent.com/87277109/125206292-eb734200-e25c-11eb-9fa3-51fe130c7d09.PNG) OS:  Windows 10 Browser: Chrome Browser version: Version 91.0.4472.124 (Vers√£o oficial) 64 bits Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","lucasaa482","2021-07-11T18:49:51Z","2021-09-05T07:58:55Z"
"","9644","Chrome Headless Is not working for certain webpages","Hello,   I using Selenium in order to automate web-scrapping in the AWS Lambda Environment.  headless chrome 69.0.3497.81  chrome driver = 2.43.600233 platform = Linux 4.14.231-180.360.amzn2.x86_64 x86_64  I have used this to run chrome headless in other scripts and it works perfectly. However for certain web pages, I am returned ""Page Not Found"". When I run the Script without headless options on my local Mac OS, the web page loads fine. To the best of my knowledge, I am not able to run the chrome driver without headless options within the AWS Lambda Environment.    The options I am using is below:    ``` class WebDriver(object):      def __init__(self):         self.options = Options()         self.options.binary_location = '/opt/headless-chromium'         self.options.add_argument('--headless')         self.options.add_argument('--no-sandbox')         self.options.add_argument('--start-maximized')         self.options.add_argument('--start-fullscreen')         self.options.add_argument('--single-process')         self.options.add_argument('--disable-dev-shm-usage')         self.options.add_argument(""--disable-gpu"")         self.options.add_argument(""--disable-extensions"")         self.options.add_argument(""--window-size=1920,1080"")         self.options.add_argument(""--proxy-server='direct://'"")         self.options.add_argument(""--proxy-bypass-list=*"")      def get(self):         driver = Chrome('/opt/chromedriver', options=self.options)         return driver  ```  Is this an issue with the options that I am adding or are there specific options that can be used to make sure the webpage loads properly? Or would this be an issue with the specific webpage.   Thanks","closed","","cfolan17","2021-07-09T18:19:45Z","2021-09-05T07:58:55Z"
"","9554","Input Attribute.Value always null","Hello, I cannot reach an Input Value even it is displayed in the ComputedProperties.  I tried :  -   wait.Until(ExpectedConditions.TextToBePresentInElementValue(WebElementInput, ""ValueExpected"")); **(Which gives       true, with a wrong ValueExpected it goes in timeout**)     driver.FindElement(ByToInput).GetAttribute(""Value""); **(return null, always)**     - Also i tried get all the attributes value with a[ javascript](https://stackoverflow.com/questions/27307131/selenium-webdriver-how-do-i-find-all-of-an-elements-attributes) and get no value attribute.   - To avoid timing errors i launched a while loop to refresh the value, still null returned, but a value is present in      the computed properties.   What am i missing, is this  a Selenium error or not?  I cannot show code due to privacy reasons.","closed","","ZephyrusMB","2021-06-08T11:59:49Z","2021-09-05T08:01:09Z"
"","9555","Input GetAttribute Value returns always null","Hello, I cannot reach an Input Value even it is displayed in the ComputedProperties. I tried :  wait.Until(ExpectedConditions.TextToBePresentInElementValue(WebElementInput, ""ValueExpected"")); (Which gives true, with a wrong ValueExpected it goes in timeout) driver.FindElement(ByToInput).GetAttribute(""Value""); (return null, always)  Also i tried get all the attributes value with a javascript and get no value attribute.  To avoid timing errors i launched a while loop to refresh the value, still null returned, but a value is present in the computed properties.  What am i missing, is this a Selenium error or not?  I cannot show code due to privacy reasons.","closed","","ZephyrusMB","2021-06-08T12:01:51Z","2021-09-05T08:01:10Z"
"","9669","Chrome Browser Headless problem : no such element: Unable to locate element for chrome://downloads/","Hello, due to some scenarios, i need to access chrome://downloads/ by headless mode but I got the error looks like:  ``` org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {""method"":""css selector"",""selector"":""#useragent""}   (Session info: headless chrome=91.0.4472.124) ``` after trying to search around and try much time, but failed I've added a lot of options for chrome  ``` //		options.headless = true 		options.addArguments('--headless') 		options.addArguments(""--start-maximized""); //		options.addArguments(""--window-size=1366,768""); 		options.addArguments(""disable-blink-features=AutomationControlled"") 		options.addArguments(""privileged"") 		options.addArguments(""--test-type""); 		options.addArguments(""--disable-gpu""); 		options.addArguments(""--no-first-run""); 		options.addArguments(""--no-default-browser-check""); 		options.addArguments(""--ignore-certificate-errors""); 		options.addArguments(""--disable-extensions"") 		options.addArguments(""--proxy-bypass-list=*"") 		options.addArguments(""--disable-dev-shm-usage"") 		options.addArguments(""--no-sandbox"") 		options.addArguments(""--lang=en_US"") 		options.addArguments(""--allow-running-insecure-content"") 		options.addArguments('user-agent=Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) coc_coc_browser/97.0.124 Chrome/91.0.4472.124 Safari/537.36') 		 		options.setExperimentalOption(""useAutomationExtension"", false);  		options.setExperimentalOption(""excludeSwitches"", [""enable-automation""]) 		options.addArguments(""--proxy-server='direct://'"") ``` but no lucky  So anyone could help to resolve this problem, thanks a lot! PS:  it can work on normal mode.","closed","","nguyenquangtay","2021-07-21T07:14:34Z","2021-09-05T07:50:40Z"
"","9699","Update IE Driver Capabilities in Bindings","Hello,  Is there a way to add these two capabilities to IE Driver in Ruby? I only see the examples in VB.NET and C#:  var ieService = InternetExplorerDriverService.CreateDefaultService(dir, driver);  var ieOptions = new InternetExplorerOptions{};  ieOptions.AddAdditionalCapability(""ie.edgechromium"", true);  ieOptions.AddAdditionalCapability(""ie.edgepath"", @""\\msedge.exe"");   I need to automate IE Mode for Microsoft Edge browser and my project is in Ruby. However, there is not such method as ""AddAdditionalCapability"" in  Selenium::Webdriver::Remote::Capabilities in Ruby. Please let me know if there is a siluion for this issue.  Thanks.","closed","C-java,","Michail864","2021-07-30T19:02:59Z","2021-09-20T00:05:50Z"
"","8978","Expected location of Chrome binary file on Windows 10","Hello,  I see that [this documentation](https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver#requirements) is outdated as I do not see the expected Chrome location for ChromeDriver in Windows 10 systems. It does not make much sense to have in this list OS like Windows XP or Vista but not 10.  What is the expected location in Windows 10 so that we can update this documentation?","closed","","tteguayco","2020-12-17T09:49:20Z","2021-09-05T08:30:06Z"
"","9036","Errors with 57, 59 firefox when call implicitlyWait","Hello team. Could you please explain why we have errors in our cases when we try use 57 or 59 version of firefox browser? And when we use 52 version of firefox browser we have no such error?  ## Test script or set of commands reproducing this issue  We call setTimeouts method in java application with variables implicitlyWait = 30; implicitlyWaitUnit = TimeUnit.MILLISECONDS and get error when timeouts.implicitlyWait() is called  Code of this method: `protected static WebDriver setTimeouts(WebDriver driver, Settings settings) {         Timeouts timeouts = driver.manage().timeouts();         timeouts.implicitlyWait(settings.getImplicitlyWait(), settings.getImplicitlyWaitUnit());         try {             timeouts.pageLoadTimeout(settings.getPageLoadTimeout(), settings.getPageLoadTimeoutUnit());             timeouts.setScriptTimeout(settings.getScriptTimeout(), settings.getScriptTimeoutUnit());         } catch (WebDriverException e) {             String error = e.toString();             if (error.contains(""setScriptTimeout"")) {                 log.warn(""setScriptTimeout has been failed. Default Script timeout remains. \n"" + e);             } else if (error.contains(""pageLoadTimeout"")) {                 log.warn(""pageLoadTimeout has been failed. Default page load timeout remains. \n"" + e);             }         }         return driver;     }`  ## Expected behavior Firefox browser 57, 59 version will be up  ## Actual behavior Firefox browser session 52 version has been up but Firefox browser 57, 59 version won't up and we see next errors in logs: `Caused by: org.openqa.selenium.WebDriverException: route not found (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 0 milliseconds Build info: version: '3.12.0', revision: '7c6e0b3', time: '2018-05-08T14:04:26.12Z' System info: host: '...', ip: '...', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-862.3.2.el7.x86_64', java.version: '1.8.0_231' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {capabilities: {acceptInsecureCerts: true, browserName: firefox, browserVersion: 59.0.1, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 60, moz:profile: /tmp/rust_mozprofile.0WkUQ1..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: none, platformName: linux, platformVersion: 3.10.0-862.3.2.el7.x86_64, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}, javascriptEnabled: true, platform: ANY, platformName: ANY, sessionId: c7ef2437cf4e151630d75bd3419...} Session ID: null 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40) 	at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80) 	at com.netcracker.automation.wd.shell.browser.WDHttpCommandExecutor.execute(WDHttpCommandExecutor.java:82) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteTimeouts.implicitlyWait(RemoteWebDriver.java:771)`  ## Environment  OS: Linux Browser: Firefox Browser version: 57, 59 Browser Driver version:  Language Bindings version: java.version: '1.8.0_231' Selenium Grid version (if applicable): 3.12.0","closed","","rif88","2021-01-12T15:03:29Z","2021-09-05T08:25:08Z"
"","9478","Firefox opened with webdriver ignores proxy settings","Hello Everyone, Apologies for my english if I wrote something wrong.  My problem is that Firefox webdriver is ignoring proxy settings. So, if I open a Firefox webdriver with proxy the opened Firefox ignores the proxy settings and tries to go directly to the web page.  What's weird is that if after Firefox opens, I manualy go to Netwerk Preferences, the proxy settings are Ok. Proxy ip ok, proxy port ok, everything seems ok...   ... what's MORE WEIRD is this >>> if I select Ok in order to leave ""Network Preferences"", now Firefox starts to use the proxy settings correctly!. This is a sort of walkaround, but its not working for me because it is a manual procedure.  The problem is that I'm need to implement an atomated script that configures proxy, opens Firefox, loads a page, performs some tasks and leave... all 100% automatic. But with this kind of bug the opened Firefox can't go trhoug the proxy, so the page never loads.  Tryed several methods: - Using desiredcapabilities parameter with proxy settings loaded on the desiredcapabilities object 	 - Using ""firefox_profile method"", does not solved the issue either 	profileWebdriver.set_preference(""network.proxy.type"", 1) # Direct = 0, Manual = 1, PAC = 2, AUTODETECT = 4, SYSTEM = 5 	profileWebdriver.set_preference(""network.proxy.http"", 127.0.0.1)  	profileWebdriver.set_preference(""network.proxy.http_port"", 8080)  	profileWebdriver.set_preference(""network.proxy.share_proxy_settings"", True)  	  Tried ""proxy parameter method"", does not solved the issue either. Yes I know it's deprecated but I'm a desperate man and tried it annyway :D 	 - Could not find in the WEB how to set proxy values on options object 	 Thanks in advance!  from selenium import webdriver from selenium.webdriver.firefox.options import Options from selenium.webdriver.common.proxy import Proxy, ProxyType  if __name__ == '__main__':     opts = Options()     opts.headless = False      # ----- desired_capability method     desired_capability = webdriver.DesiredCapabilities.FIREFOX     prox = Proxy()     prox.proxy_type = ProxyType.MANUAL     prox.http_proxy = ""127.0.0.1:8080""     prox.add_to_capabilities(desired_capability)      # ----- profile method     profile = webdriver.FirefoxProfile()     profile.set_preference(""dom.disable_beforeunload"", True)     profile.set_preference(""browser.tabs.warnOnClose"", False)     PrivateMode = False     profile.set_preference(""browser.privatebrowsing.autostart"", PrivateMode)     profile.set_preference(""browser.privatebrowsing.autostart"", PrivateMode)     profile.set_preference(""network.proxy.type"", 1)  # Direct = 0, Manual = 1, PAC = 2, AUTODETECT = 4, SYSTEM = 5     profile.set_preference(""network.proxy.http"", ""127.0.0.1"")     profile.set_preference(""network.proxy.http_port"", 2020)     profile.set_preference(""network.proxy.share_proxy_settings"", True)     profile.update_preferences()  	# None of the following procedures works 	     #1 Using firefox_profile     BrowserManager = webdriver.Firefox(options=opts, firefox_profile=profile)      #2 desired_capabilities     #BrowserManager = webdriver.Firefox(options=opts, firefox_profile=profile,     #                                   desired_capabilities=desired_capability)      #3 proxy     # BrowserManager = webdriver.Firefox(options=opts,     #                                   firefox_profile=profile,     #                                   proxy=prox)      BrowserManager.get(""https://whatismyipaddress.com/"")     print(""The End"")   Environmentvironment: IDE: Pycharm Community 2021.1 Build PC-211.7142.13, built on April 21, 2021 Runtime version:11.0.10+9-b1341.41 amd64 VM: Dynamic Code Evolution 64-Bit Server VM by JetBrains s.r.o  System:  Linux  5.8.0-53-generic #60~20.04.1-Ubuntu SMP Thu May 6 09:52:46 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux  geckodriver 0.27.0 (7b8c4f32cdde 2020-07-28 18:16 +0000)   Browser: Firefox Browser 88.0.1 (64-bit)  Package                 Version    ----------------------- ---------- attrs                   20.2.0     autobahn                20.7.1     Automat                 20.2.0     beautifulsoup4          4.9.3      bs4                     0.0.1      certifi                 2020.6.20  cffi                    1.14.3     chardet                 3.0.4      constantly              15.1.0     cryptography            3.1.1      cycler                  0.10.0     dateparser              0.7.6      fake-useragent          0.1.11     file-read-backwards     2.0.0      httmock                 1.4.0      http-request-randomizer 1.3.2      hyperlink               20.0.1     idna                    2.10       incremental             17.5.0     kiwisolver              1.2.0      llvmlite                0.34.0     mariadb                 1.0.3      matplotlib              3.3.2      numba                   0.51.2     numpy                   1.19.2     opencv-python           4.4.0.44   panda                   0.3.1      pandas                  1.1.3      Pillow                  8.0.0      pip                     20.0.2     pkg-resources           0.0.0      psutil                  5.7.2      pyasn1                  0.4.8      pyasn1-modules          0.2.8      pycparser               2.20       PyHamcrest              2.0.2      pyOpenSSL               19.1.0     pyparsing               2.4.7      python-binance          0.7.5      python-dateutil         2.8.1      pytz                    2020.1     regex                   2020.10.15 requests                2.24.0     scipy                   1.5.2      selenium                3.141.0    service-identity        18.1.0     setuptools              44.0.0     six                     1.15.0     soupsieve               2.2.1      stem                    1.8.0      tqdm                    4.51.0     Twisted                 20.3.0     txaio                   20.4.1     tzlocal                 2.1        urllib3                 1.25.10    wheel                   0.35.1     zope.interface          5.1.2","closed","","AlfGod","2021-05-14T04:11:22Z","2021-09-05T08:03:29Z"
"","9863","How to quickly get text data in web-elementS ?","hello !  can you told me - how faster get text data in web-elements ?   i have ~7k div where have a text  i get all web-elements  from XPATH   `links_elements = driver.find_elements(By.XPATH, '/html/body/div[2]/div[3]/div[2]/div[2]/table/tbody/tr/td[2]/div') ` and  for first test i used Cython `    start_time = time.time() `   `  a = hello.hallo(links_elements)`    ` print(""--- %s seconds ---"" % (time.time() - start_time))`        hello.pyx    -------------- ```    import cython  from cpython cimport array import array  cpdef hallo(object obj):     cdef arr =[]     for i in obj:             arr.append(i.text)                  return arr ``` **--- 84.87725853919983 seconds ---**  not what I expected from the vaunted –°  then second test  ```     start_time = time.time()     b = [i.text for i in links_elements]     print(""--- %s seconds ---"" % (time.time() - start_time)) ``` **--- 85.29670596122742 seconds ---**  Tell me how to efficiently and quickly receive data and not wait for the victory of communism ? (it was a joke about endless waiting)","closed","","NeilRiver","2021-09-22T22:58:07Z","2021-10-23T00:05:58Z"
"","9481","focus","Hello   When I use selenium to operate the chrome browser If Chrome has an alert or window.open behavior in the background, Chrome will pop up to the foreground. Is there any way to prevent it from popping up to the foreground?","closed","","sininit","2021-05-16T04:59:09Z","2021-09-05T08:03:27Z"
"","9566","error when running chrome profile with selenium python","from selenium import webdriver options = webdriver.ChromeOptions() options.add_argument(""user-data-dir=C:\\Users\\Administrator\\AppData\\Local\\Google\\Chrome\\User Data\\Default"") drive = webdriver.Chrome(executable_path=""D:\ggauto\chromedriver.exe"", chrome_options=options) when i'm running : DeprecationWarning: use options instead of chrome_options   drive = webdriver.Chrome(  DevTools listening on ws://127.0.0.1:57654/devtools/browser/217fefe3-72fa-4feb-b95a-964e883954f1 PS C:\Users\Administrator> [13504:11156:0613/094413.736:ERROR:device_event_log_impl.cc(214)] [09:44:13.736] USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [13504:11156:0613/094413.739:ERROR:device_event_log_impl.cc(214)] [09:44:13.739] USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [13504:11156:0613/094419.378:ERROR:device_event_log_impl.cc(214)] [09:44:19.378] USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [13504:11156:0613/094419.383:ERROR:device_event_log_impl.cc(214)] [09:44:19.383] USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) How i can fix this","closed","","chidung7271","2021-06-13T02:45:38Z","2021-09-05T08:01:08Z"
"","9541","[rb] fix parsing differences between options and capabilities","For testing","closed","","titusfortner","2021-06-02T15:44:45Z","2021-06-02T15:47:19Z"
"","9335","[rb] fix bugs and allow saving print page","Fixes #9298   This implementation assumes each parameter will be a snake_case `Symbol`. According to the spec there are only two valid parameters that are multiple words, so this converts each to a camelCase `Symbol`. We can do something more robust here if we don't feel like this is good enough.  I pulled the method from `Remote::Driver` because `Driver` superclass is now extending `Extensions` for the applicable browser, so it is no longer necessary.  Also, I'm not sure why we weren't matching what we do in `TakesScreenshot` module, so I added a `#save_print_page` method while I was here.  Also, our specs are a little frustrating because they don't (can't?) test whether the parameters work as intended.   @f4z4on does this seem like a workable solution?","closed","C-rb,","titusfortner","2021-03-25T20:14:28Z","2021-04-11T17:19:10Z"
"","9425","Add LogEntry public constructor","Fixes #7643 Add LogEntry public constructor  ### Description Add LogEntry public constructor with 3 parameters - timestamp of log entry with type DateTime, level of logging with type LogLevel and log entry message with type string.  ### Motivation and Context Problem is there is no public constructor for LogEntry  ### Types of changes - [x] New feature (non-breaking change which adds functionality)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-dotnet,","irina-voropaeva","2021-04-27T18:56:17Z","2021-10-13T10:07:38Z"
"","9495","[Javascript] Ensure correct serialization of extensions in chromium.Options","Fixes #6676  ### Description Wraps the internal `options_.extensions` list in an `Extensions` object with serialization logic to resolve each extension given to a base64-encoded string.  ### Motivation and Context According to the documentation, when calling `chromium.Options.addExtensions()` each extension should be specified as a path to a packed CRX file, or a Buffer containing the extension data.  The `chromium.Options` object defines a `[Symbols.serialize]()` method that resolves each extension to a base64-encoded string.  However, as of the v4 changes, the Chromium options get merged into a generic `Capabilities` object so the extra serialization logic is never invoked.  This PR fixes the issue by wrapping the list of extensions in an object that will be preserved across capabilities merges.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","nickgaya","2021-05-20T02:46:30Z","2021-11-04T16:56:42Z"
"","9155","Fix of the issue 9059","Fix of the issue [9059](https://github.com/SeleniumHQ/selenium/issues/9059) ### Description  Updated package version Update some variables declaration  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","potapovDim","2021-02-07T12:04:49Z","2021-02-08T18:09:39Z"
"","9862","[rb] bugfix: Loading type of driver can fail if previously loaded files are not present","Fix issue where requiring a type of webdriver file would autoload all required files except the platform module. This then causes a failure when checking paths","closed","","luke-hill","2021-09-22T09:11:45Z","2021-09-22T17:12:08Z"
"","9041","New method request: Driver.ReloadDOM()","First of all let me complement you for an excellent set of projects. A great contribution to the development community.  ## üöÄ Feature Proposal  The introduction of a method to force the reloading of the internal DOM cache. This proposal assumes that either the chrome driver or Selenium maintains an internal cache of the HTML DOM structure.  ## Motivation  I have an HTML spreadsheet using the SlickGrid api. The spreadsheet contains a large number of rows/cells and complex calculations. I have developed Selenium scripts to change base values and verify calculations. Despite the fact that the script adheres to strict ‚Äúwait on elements and browser ready‚Äù rules before continuing to the next step I have noticed that in some situations the HTML DOM maintained by Selenium becomes out of sync with the actual HTML body.  e.g. After an update `By.XPath(‚Äú//div[@id='myTable']/div[contains(@class, 'slick-pane-top') and contains(@class, 'slick-pane-right')]/div[contains(@class, 'slick-viewport-top') and contains(@class, 'slick-viewport-right')]/div[contains(@class, 'grid-canvas') and contains(@class, 'grid-canvas-top') and contains(@class, 'grid-canvas-right')]/div[contains(@class, 'slick-row')][4]/div[contains(@class, 'slick-cell')][7]‚Äù)` may return a different row (e.g. row 7) or may not find the element.  This is despite that the `Driver.FindElement(By.TagName(""body"")).GetAttribute(""innerHTML"")` returns the correct html structure.  ## Example  To get around this issue and where the problem manifest itself I call `Driver.Navigate().Refresh()` after an update and before searching for the next element by xpath.  It would however be great if I could force Selenium to refresh it‚Äôs internal DOM e.g. `Driver.ReloadDOM()` instead of reloading the entire page.","closed","","xavier-90","2021-01-13T11:51:01Z","2021-09-05T08:25:07Z"
"","9557","Issue 9549","Feature implementation of Issue#9549    ### Description  Update `PageFactory` methods signature from `WebDriver` to `SearchContext`.   Currently: ```java   public static void initElements(WebDriver driver, Object page) {     initElements(new DefaultElementLocatorFactory(driver), page);   }    public static  T initElements(WebDriver driver, Class pageClassToProxy) {     T page = instantiatePage(driver, pageClassToProxy);     initElements(driver, page);     return page;   }    private static  T instantiatePage(WebDriver driver, Class pageClassToProxy) {     try {       try {         Constructor constructor = pageClassToProxy.getConstructor(WebDriver.class);         return constructor.newInstance(driver);       } catch (NoSuchMethodException e) {         return pageClassToProxy.getDeclaredConstructor().newInstance();       }     } catch (ReflectiveOperationException e) {       throw new RuntimeException(e);     }   } ```  With changes: ```java   public static void initElements(SearchContext searchContext, Object page) {     initElements(new DefaultElementLocatorFactory(searchContext), page);   }    public static  T initElements(SearchContextsearchContext, Class pageClassToProxy) {     T page = instantiatePage(searchContext, pageClassToProxy);     initElements(searchContext, page);     return page;   }    private static  T instantiatePage(SearchContext searchContext, Class pageClassToProxy) {     try {       try {         Constructor constructor = pageClassToProxy.getConstructor(WebDriver.class);         return constructor.newInstance(searchContext);       } catch (NoSuchMethodException e) {         return pageClassToProxy.getDeclaredConstructor().newInstance();       }     } catch (ReflectiveOperationException e) {       throw new RuntimeException(e);     }   } ```  No further changes would be needed as upstream classes already use `SearchContext` as type instead of `WebDriver`  My current concern is about `instantiatePage` change. Currently Selenium tries to instantiate the page with 2 different constructors (`WebDriver` arg and parameterless), I am wondering if there should be a third for `SearchContext` between the two existing ones, and if it would be useful.    ### Motivation and Context  Allow elements to be passed as an argument to `PageFactory#initElements` methods and be used as the `SearchContext`.    My objective here is to solve issues related to shadow doms and elements lookup.  I currently have this changed implemented on my project which has a lot of shadow DOMs on the page, and being able to provide the shadow element to `initElements` allows me to use `PageFactory` with the shadow element as the search context, providing WebDriver would never work as the elements are ""hidden"" inside the shadow DOM.    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","Jiwari","2021-06-09T12:36:20Z","2022-03-02T10:33:15Z"
"","9006","further improvements to the json processing","Faster reading and writing of json data, focused on base64 encoded data. This will e.g. help reading 4k screenshots or sending binary data.  ### Description `Input.java` maintained a buffer with the chars read, to allow a helpfull `toString()`. It is more efficient to use an input buffer and keep the chars read in the buffer to allow a helpfull `toString()`. Changes to `JsonOutput.java` / `JsonInput.java` are small performance improvements, not related to the changes inside the `Input.java`.  ### Motivation and Context same as https://github.com/SeleniumHQ/selenium/pull/8546  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","joerg1985","2020-12-28T13:30:17Z","2021-02-01T12:12:19Z"
"","9805","Raises InvalidSelectorException for invalid xpaths","expected_conditions and wait modules raises InvalidSelectorException for invalid xpaths  ### Motivation and Context Fixes issue #8813  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gpt14","2021-09-08T18:14:23Z","2021-09-24T21:55:47Z"
"","8982","Failed to connect to localhost/0:0:0:0:0:0:0:1:4585","Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:4585 Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'YANFA-CESHI1', ip: '192.168.2.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: RemoteWebDriver  ```java  driver.findElement(By.linkText(""„ÄêÁÇπÂáªÊ∑ªÂä†ÂïÜÂìÅ/ÊúçÂä°È°πÁõÆ„Äë"")).click();  Set handles = driver.getWindowHandles(); ```","closed","","EatGoods","2020-12-21T05:14:42Z","2021-09-05T08:27:54Z"
"","9632","/opt/geckodriver-0.29.1: 1: Syntax error: ""("" unexpected","Exception in docker firefox standalone  /opt/geckodriver-0.29.1: 1: Syntax error: ""("" unexpected  Architecture: arm64 Os: Manjaro Arm 21.06  16:40:04.203 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {args: [], prefs: {}}}] /opt/geckodriver-0.29.1: 1: Syntax error: ""("" unexpected 16:40:04.398 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""a4da31f0ab634c88b36a18e639974c61"",""eventTime"": 1625416804383938433,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Driver server process died prematurely.\nBuild info: version: '4.0.0-rc-1', revision: '23ece4f646'\nSystem info: host: '131924c739d1', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'aarch64', os.version: '5.12.10-1-MANJARO-ARM', java.version: '11.0.11'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.WebDriverException: Driver server process died prematurely.\nBuild info: version: '4.0.0-rc-1', revision: '23ece4f646'\nSystem info: host: '131924c739d1', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'aarch64', os.version: '5.12.10-1-MANJARO-ARM', java.version: '11.0.11'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.service.DriverService.start(DriverService.java:230)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:120)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:63)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:324)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.startSession(LocalDistributor.java:481)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.newSession(LocalDistributor.java:408)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.handleNewSessionRequest(LocalDistributor.java:616)\n\tat java.base\u002fjava.util.Optional.ifPresent(Optional.java:183)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.run(LocalDistributor.java:580)\n\tat org.openqa.selenium.concurrent.Regularly$RetryingRunnable.run(Regularly.java:105)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""org.openqa.selenium.WebDriverException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""acceptInsecureCerts\"": true,\""browserName\"": \""firefox\"",\""moz:firefoxOptions\"": {\""args\"": [  ],  \""prefs\"": {  }  },  \""se:vncEnabled\"": true  }\n""}}  16:40:04.495 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""a4da31f0ab634c88b36a18e639974c61"",""eventTime"": 1625416804490879277,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"",""http.host"": ""swarm-node2:4444"",""http.method"": ""POST"",""http.request_content_length"": ""427"",""http.scheme"": ""HTTP"",""http.status_code"": 500,""http.target"": ""\u002fsession"",""http.user_agent"": ""selenium\u002f4.0.0-beta-4 (java unix)""}}   ``` java         FirefoxOptions firefoxOptions = new FirefoxOptions();         WebDriver driver = new RemoteWebDriver(new URL(""http://remote-selenium:4444""), firefoxOptions);         driver.get(""https://.......com"");         String page = driver.getPageSource();         File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);         FileUtils.copyFile(scrFile, new File(""screenshot.png""));         driver.quit();         return ""ok""; ```","closed","","andriusjakas","2021-07-04T17:24:38Z","2021-09-05T07:59:02Z"
"","9366","[rb] implement computedrole & computedlabel","Example tests: https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/test/elementAccessibleName_test.js#L41-L57","closed","C-rb,","titusfortner","2021-04-08T18:40:04Z","2021-09-05T08:08:32Z"
"","9865","Selenium 4.0.0-beta-3 starts Browser in Eclipse, but not with from a Fat-Jar","Environment: Driver: MSEdgeDriver 93.0.961.52 Browser: Version 93.0.961.47  Seleniu:  4.0.0-beta-3 OP: Windows 10 Enterprise 64  Language Bindings version: Java 11  Using local Webdriver - no Selenium Grid!  Exception:  Command: [null, newSession {desiredCapabilities=Capabilities {browserName: MicrosoftEdge}}]         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637)         at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:251)         at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:173)         at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:89)         at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:44)         at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:36)         at org.openqa.selenium.edge.EdgeDriver.(EdgeDriver.java:33)         at de.vpv.lifter.mod.selenium.driver.concretedriver.DriverEdge.createLocalWebDriver(DriverEdge.java:38)         at de.vpv.lifter.mod.selenium.driver.model.Driver.createLocalWebDriver(Driver.java:26)         at de.vpv.lifter.mod.selenium.driver.model.DriverFactory.createLocalWebDriver(DriverFactory.java:66)         at de.vpv.lifter.mod.selenium.SeleniumInterpreter.open(SeleniumInterpreter.java:53)         at de.vpv.lifter.runner.OperationRegistry.initInterpreter(OperationRegistry.java:23)         at de.vpv.lifter.runner.TestRunner.execute(TestRunner.java:45)         at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1654)         at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)         at de.vpv.lifter.runner.TestRunner.execute(TestRunner.java:34)         at de.vpv.lifter.execution.Task.call(Task.java:37)         at de.vpv.lifter.execution.Task.call(Task.java:23)         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.lang.NoSuchMethodError: com.google.common.base.Throwables.throwIfUnchecked(Ljava/lang/Throwable;)V         at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:145)         at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:619)         ... 21 more  When I start the program in Eclipse everything is running fine, but running the program through the jar (maven-shaded-build), the browser isn't starting, throwing the above exception.  I start the test also with Selenium 4.0.0-beta-4 - the browser isn't starting and no exception is thrown.","closed","","CharasEu","2021-09-23T11:57:26Z","2021-10-24T00:06:39Z"
"","9796","html css flex mode cant not element it, always say not found this element","env: python:3.7.9 selenium:3.141.0  question: html css flex mode cant not element it, always say not found this element, can you help me?  html example: ![image](https://user-images.githubusercontent.com/31539113/132191359-83aaa5c4-0a12-4e63-a0d3-836abc40cd95.png)","closed","","highboy168","2021-09-06T09:08:38Z","2021-10-07T00:04:48Z"
"","9795","html css flex mode cant not element it, always say not found this element","env: python:3.7.9 selenium:3.141.0  question: html css flex mode cant not element it, always say not found this element, can you help me?  html example:  ![image](https://user-images.githubusercontent.com/31539113/132188557-fe10ad70-a91c-468e-889b-651783df96c2.png)","closed","","highboy168","2021-09-06T08:49:30Z","2021-10-07T00:04:49Z"
"","9850","[rb]: Standardise driver logging output","Ensure all log formats (Including browser ones), are in a consistent format    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Alter logging to conform to other standard log formats  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","luke-hill","2021-09-20T10:04:15Z","2021-09-27T00:49:33Z"
"","9742","Isn't `presence_of_all_elements_located()` redundant?","Does `presence_of_all_elements_located` do anything that `presence_of_element_located` doesn't for `WebDriverWait`?  It looks like they both do the same thing: wait until one element is found. The first does it by using `findElement` and the second by using `findElements`. The fact that the latter returns a list doesn't seem to matter because all the presence function cares about is that an exception wasn't thrown in the attempt.  `presence_of_all_elements_located` also gives misleading impression that it somehow waits until all elements are loaded, when in fact Selenium isn't capable of anything like that. It looks like this function is doing more harm than good. Wouldn't it be better to just remove it?","closed","","stevennic","2021-08-15T17:00:58Z","2021-09-15T00:05:49Z"
"","9738","Dispose HttpRequestMessage and HttpResponseMessage objects","Disposing all Http objects immediately","closed","","nvborisenko","2021-08-13T12:08:59Z","2021-08-16T17:25:12Z"
"","9418","Action Class not working after the recent ChromeDriver Update","Detailed steps to reproduce the behavior: Actions class no longer working after the recent ChromeDriver Update.Getting JavaAScript Error each time.Previously it was working fine 3 days ago. It is a generic issue and happening for all.  ## Expected that Actions class works for sendkeys or click  ##  WebElement input=driver.findElement(By.id(""input""));  Actions action = new Actions(WebHelper.getWebDriver());  action.sendKeys(input,""text"").build().perform();  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:    org.openqa.selenium.JavascriptException: javascript error:    (Session info: chrome=90.0.4430.85) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'C02ZJ39SLVDM', ip: '10.0.0.32', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_261' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.85, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: /var/folders/s9/763mfj75725...}, goog:chromeOptions: {debuggerAddress: localhost:55488}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 6984e1ef17c9e96a15990830d711bc70  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:618) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:639)","closed","","abu112629","2021-04-26T00:20:36Z","2021-09-05T08:06:43Z"
"","9172","Allow Remote WebDriver to access browser specific functionality","Current code prevents accessing browser specific functionality via remote server, which should be fixed.  This works, but I'm not sure if it is the best solution. Any suggestions?  `Bridge` is a private API, and it doesn't look like this affects Ruby Appium, Watir or Capybara.","closed","C-rb,","titusfortner","2021-02-13T20:09:54Z","2021-03-15T19:28:07Z"
"","9340","wrong number of arguments (given 1, expected 0), when connect to sauce session","Code: `Capybara.current_session.driver.browser.manage.window.maximize`  getting error of wrong argument when connect to sauce. It is working fine at local execution.  Started getting this error when I have upgrade the ruby version from Ruby 2.3 to Ruby 3.0. Using selenium version 3.142.7 in sauce capabilities. Please guide me.","closed","","vidhijain24","2021-03-26T11:46:51Z","2021-09-05T08:08:43Z"
"","9237","Why Action Flick Operation Not working of DotNet","code:  `string driver_path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""Resources"");             ChromeDriverService driverService = ChromeDriverService.CreateDefaultService(driver_path,""chromedriver88.exe"");             var chromeOptions = new ChromeOptions();             chromeOptions.EnableMobileEmulation(""Nexus 6P"");             chromeOptions.AddArgument(""--auto-open-devtools-for-tabs"");             ChromeDriver chromeDriver = new ChromeDriver(driverService,chromeOptions);             chromeDriver.Navigate().GoToUrl(""http://www.baidu.com"");             IWebElement button = chromeDriver.FindElement(By.Id(""index-bn""));             TouchActions actions = new TouchActions(chromeDriver);             Thread.Sleep(5000);             actions.Flick(button, 10, -800, 300).Perform();`  selenium version:4.0.0beta1, flick no working","closed","","chenzanyu","2021-03-05T04:12:29Z","2021-09-05T08:15:43Z"
"","9642","How to use cdp cmd for javascript","Can't find the relevant information, can you tell me where there is the relevant information, thank you","closed","","Dd-ouni","2021-07-08T08:52:07Z","2021-09-05T07:58:58Z"
"","8984","Unable to change the always_open_pdf_externally setting in edge browser using Selenium?","Can we have a method to enable the ""always_open_pdf_externally"" in the edge similar to chrome?  For chrome, we can alter the setting for always_open_pdf_externally by following code:  var options = new ChromeOptions(); options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);  Is there any way in Edge chromium to change the ""always_open_pdf_externally"" value?  I tried using it the same way but not worked. I have also tried it by using AddAdditionalOption but not worked.  Code :   var options = new EdgeOptions();                        options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);     var options = new EdgeOptions();                        options.AddAdditionalOption(""plugins.always_open_pdf_externally"", true);","closed","","heyitsmesuraj","2020-12-21T13:30:46Z","2021-09-05T08:27:53Z"
"","8983","Is there any way to change the always_open_pdf_externally in edge browser using Selenium?","Can we have a method to enable the ""always_open_pdf_externally"" in the edge similar to chrome?  For chrome, we can alter the setting for always_open_pdf_externally by following code:   var options = new ChromeOptions(); options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);  Is there any way in Edge chromium to change the ""always_open_pdf_externally"" value?","closed","","heyitsmesuraj","2020-12-21T13:13:17Z","2021-09-05T08:27:53Z"
"","9228","Fix ruby 2.7 kwargs warning in 3.x branch when using Firefox driver","By switching back to use a hash as default param here, we can silence the following warning:  ```  warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call ```  This part of the codebase has been modified in 4.x branch and it does not have the same behavior there.    ### Description  There is a difference in how Chrome and Firefox driver initializer is declared. In Firefox case it is using double splats, but the rest of the codebase is not prepare (in 3.x) to handle it in a way that is compatible with ruby 3, therefore in ruby 2.7 we get the following warning:  ``` ../.rvm/gems/ruby-2.7.2/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:54: warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call  ../.rvm/gems/ruby-2.7.2/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/firefox/driver.rb:31: warning: The called method `new' is defined here ```  By switching back to use a hash as default param (which is what Chrome driver uses in 3.x branch), we can silence this.  ### Motivation and Context  We have a deprecation toolkit in our codebase and since I've enabled Firefox driver, it flagged the warning and broke the build. I understand that the effort is in 4.x codebase, but since this is a small change, I hope this can be added to a patch release.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","brodock","2021-03-01T21:50:45Z","2021-03-02T15:18:08Z"
"","9531","Bump ws from 7.4.5 to 7.4.6","Bumps [ws](https://github.com/websockets/ws) from 7.4.5 to 7.4.6.  Release notes Sourced from ws's releases.  7.4.6 Bug fixes  Fixed a ReDoS vulnerability (00c425ec).  A specially crafted value of the Sec-Websocket-Protocol header could be used to significantly slow down a ws server. for (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {   const value = 'b' + ' '.repeat(length) + 'x';   const start = process.hrtime.bigint(); value.trim().split(/ *, */); const end = process.hrtime.bigint(); console.log('length = %d, time = %f ns', length, end - start); }  The vulnerability was responsibly disclosed along with a fix in private by Robert McLaughlin from University of California, Santa Barbara. In vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the --max-http-header-size=size and/or the maxHeaderSize options.    Commits  f5297f7 [dist] 7.4.6 00c425e [security] Fix ReDoS vulnerability 990306d [lint] Fix prettier error 32e3a84 [security] Remove reference to Node Security Project 8c914d1 [minor] Fix nits fc7e27d [ci] Test on node 16 587c201 [ci] Do not test on node 15 See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ws&package-manager=npm_and_yarn&previous-version=7.4.5&new-version=7.4.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","","dependabot[bot]","2021-05-30T16:40:24Z","2021-05-30T17:57:14Z"
"","9311","Bump urllib3 from 1.26.2 to 1.26.3 in /py","Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.2 to 1.26.3.  Release notes Sourced from urllib3's releases.  1.26.3 :warning: IMPORTANT: urllib3 v2.0 will drop support for Python 2: Read more in the v2.0 Roadmap   Fixed bytes and string comparison issue with headers (Pull #2141)   Changed ProxySchemeUnknown error message to be more actionable if the user supplies a proxy URL without a scheme (Pull #2107)   If you or your organization rely on urllib3 consider supporting us via GitHub Sponsors    Changelog Sourced from urllib3's changelog.  1.26.3 (2021-01-26)   Fixed bytes and string comparison issue with headers (Pull #2141)   Changed ProxySchemeUnknown error message to be more actionable if the user supplies a proxy URL without a scheme. (Pull #2107)      Commits  361f1e2 Release 1.26.3 3179dfd Allow using deprecated OpenSSL with CRYPTOGRAPHY_ALLOW_OPENSSL_102 d97e5d4 Use Python 3.5 compatible get-pip cb5e2fc [1.26] Don't compare bytes and str in putheader() b89158f [1.26] Update RECENT_DATE to 2020-07-01 a800c74 [1.26] Recommend GitHub Sponsors instead of Open Collective 947284e [1.26] Improve message for ProxySchemeUnknown exception See full diff in compare view      [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.2&new-version=1.26.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)  Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.  [//]: # (dependabot-automerge-start) [//]: # (dependabot-automerge-end)  ---   Dependabot commands and options   You can trigger Dependabot actions by commenting on this PR: - `@dependabot rebase` will rebase this PR - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it - `@dependabot merge` will merge this PR after your CI passes on it - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it - `@dependabot cancel merge` will cancel a previously requested merge and block automerging - `@dependabot reopen` will reopen this PR if it is closed - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself) - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself) - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language  You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/SeleniumHQ/selenium/network/alerts).","closed","","dependabot[bot]","2021-03-19T20:05:53Z","2021-03-22T08:51:04Z"
"","8964","set http proxy not running","Bug Report  here is my proxy code in java:  ```         String pxo = ""175.42.68.187:9999"";         ChromeOptions options = new ChromeOptions();         Proxy proxy = new Proxy();         proxy.setHttpProxy(pxo);         options.setCapability(""proxy"", proxy); ``` but when chrome running ,i got thoes info,look at blew:  _chrome://version/_ ` Google Chrome | 87.0.4280.88¬†(Ê≠£ÂºèÁâàÊú¨)¬†Ôºà64 ‰ΩçÔºâ¬†(cohort: Stable) -- | -- ‰øÆËÆ¢ÁâàÊú¨ | 89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761} Êìç‰ΩúÁ≥ªÁªü | Windows¬†10 OS Version 1909 (Build 18363.1198) JavaScript | V8¬†8.7.220.29 Flash | 33.0.0.417 C:\Windows\system32\Macromed\Flash\pepflashplayer64_33_0_0_417.dll Áî®Êà∑‰ª£ÁêÜ | Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 ÂëΩ‰ª§Ë°å | ""C:/Program Files/Google/Chrome/Application/chrome.exe"" --disable-background-networking --disable-backgrounding-occluded-windows --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --enable-automation --enable-blink-features=ShadowDOMV0 --enable-logging --log-level=0 --no-first-run --no-service-autorun --password-store=basic **--proxy-server=http=175.42.68.187:9999** --remote-debugging-port=0 --test-type=webdriver --use-mock-keychain --user-data-dir=""C:\Users\yone\AppData\Local\Temp\scoped_dir41080_718675084"" --flag-switches-begin --flag-switches-end data:, ÂèØÊâßË°åÊñá‰ª∂Ë∑ØÂæÑ | C:\Program Files\Google\Chrome\Application\chrome.exe ‰∏™‰∫∫ËµÑÊñôË∑ØÂæÑ | C:\Users\yone\AppData\Local\Temp\scoped_dir41080_718675084\Default ÂÖ∂‰ªñÂèò‰Ωì | 5e3a236d-4113a79e  ` now ,i just jump a scan my ip address ,but it show me my ip is my local ip(isnt dynamic proxy ip ) ,like this,  ÊÇ®ÁöÑiPÂú∞ÂùÄÊòØÔºö[**139.228.171.15**] Êù•Ëá™Ôºö‰∏≠ÂõΩ‰∏äÊµ∑‰∏äÊµ∑ ËÅîÈÄö  please tell me how to set a right proxy,and if you know how to set dynamic proxy that not restart chorme,pelase tell me ,thx a lot.","closed","","pangoo-reuse","2020-12-13T07:06:55Z","2021-09-05T08:30:11Z"
"","9816","Add support for ""webSocketUrl"" capability to opt-in to WebDriver BiDi support","Browser vendors are going to add [WebDriver BiDi](https://w3c.github.io/webdriver-bidi/) support, and as such it is required to support the [webSocketUrl](https://w3c.github.io/webdriver-bidi/#establishing) capability. Right now at least the Python implementation completely ignores this capability, and doesn't send it to the remote end. I assume that other bindings might behave the same.  Even Selenium not supporting any commands and events yet, it would be great to support this capability at least. Could this maybe done for the Selenium 4 release?  CC'ing @AutomatedTester and @shs96c.","closed","","whimboo","2021-09-13T06:44:50Z","2021-10-14T00:06:12Z"
"","9232","Just call `HttpClient.Factory.createDefault();` im neccesary","Because it is a static field  `HttpClient.Factory.createDefault();` in called on instantiating the HttpCommandExecutor. If you are using on of the Constructors with `HttpClient.Factory httpClientFactory)` as parameter it is no neccesary to have the `HttpClient.Factory.createDefault();` And you will stock on exceptions inside this `HttpClient.Factory.createDefault();`  https://github.com/SeleniumHQ/selenium/blob/26c65c7a5c1be4558311e91802ce35942cfacee8/java/client/src/org/openqa/selenium/remote/HttpCommandExecutor.java#L48","closed","C-java,","stbischof","2021-03-03T06:46:23Z","2021-09-05T08:12:24Z"
"","9739","[dotnet] Network usage is not optimized using HttpClient","Based on [documentation](https://docs.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests) `HttpClient` is used incorrectly.  Generally saying `WebDriver` instance should have one single `HttpClient` object. Unfortunately, current implementation creates new object every time when making http request.","closed","","nvborisenko","2021-08-13T12:20:57Z","2021-09-17T00:05:21Z"
"","9814","Whenever Edge Driver is used in Selenium automatically the browser is getting pinned to taskbar","Automatically the Browser is getting pinned to taskbar when the latest Edge Driver is invoked from a selenium test run. There was no command passed for that action. Please check","closed","","vishnuakella","2021-09-12T11:00:58Z","2021-10-13T00:06:05Z"
"","9252","Microsoft has changed the name of the Edge webdriver but Selenium is still expecting the old name.","An exception is thrown when you instantiate the EdgeDriver class in .NET, It seems the name of the webdriver binary has changed, but Selenium is expecting the previous name.","closed","","anebot","2021-03-10T16:53:03Z","2021-03-11T15:43:07Z"
"","9543","3.141.59: pytest suite is using pytest private type which has been removed from latest pytest","All is described  on https://github.com/pytest-dev/pytest/issues/8728 Looks like selenium is usiomg in test units private pytest  type which has been removed from latest pytest (I'm using pytest 6.2.4).","closed","","kloczek","2021-06-03T15:45:14Z","2021-09-05T08:01:14Z"
"","9497","[rb] add support for Firefox full page screenshot","Alex, can you double check this code for me, please?  I'm getting an  `IOError:  closed stream` error when I'm calling `File.exist?` in the test I've added and I can't figure out the right way to do it. I mean, maybe we could just skip the check because it's going to error either way?","closed","D-firefox,","titusfortner","2021-05-20T22:30:08Z","2021-05-26T17:04:24Z"
"","9506","The HTTP request to the remote WebDriver server for URL http://localhost:42607/session timed out after 60 seconds.","After running this simple code               Process.Start(""msedge.exe"", ""www.google.com"" + ""-remote-debugging-port=9222"");             EdgeOptions options = new EdgeOptions() { DebuggerAddress = ""127.0.0.1:9222"" };             IWebDriver driver = new EdgeDriver();  appears error message:""The HTTP request to the remote WebDriver server for URL http://localhost:42607/session timed out after 60 seconds.""  I've developed it few days ago and it worked till today...  ## Environment  OS: Windows 10 Browser: Edge Browser version: 89.0.774.45 (Official build) (64-bit) Browser Driver version: Microsoft Edge Driver 89.0.774.45 Language Bindings version: c# 4.0.0-beta2","closed","","stam3333","2021-05-23T14:43:30Z","2021-09-05T08:03:21Z"
"","9790","Timeout issue for chrome 93.0.4577.63","After recent update of chrome to 93.x, getting timeout issue for chromedriver.  Same file is running fine locally but after executing it from jenkins below error is coming:       browser = webdriver.Chrome(executable_path=r""C:\python38\chromedriver.exe"")   File ""c:\python38\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 76, in __init__     RemoteWebDriver.__init__(   File ""c:\python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""c:\python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""c:\python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""c:\python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: session not created from timeout: Timed out receiving message from renderer: 600.000   (Session info: chrome=93.0.4577.63)","closed","","kulkarnisuraj92","2021-09-03T10:33:46Z","2021-10-04T00:06:11Z"
"","9881","Expected condition for checking attribute value","Adds expected condition function text_to_be_present_in_element_attribute  for checking if an element's attribute contains certain text.  Fixes #7628  **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","joesho112358","2021-10-03T02:11:06Z","2021-10-12T11:20:19Z"
"","8894","Adding workflow for JavaScript","Adding GitHub actions for JavaScript","closed","","diemol","2020-11-22T18:54:24Z","2020-11-22T21:38:37Z"
"","9074","Added from .common.keys import Keys (same as selenium.webdriver.common.keys.Keys)","Added from .common.keys import Keys (same as selenium.webdriver.common.keys.Keys)    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  After this change we can simply import the Keys by running,  `from selenium.webdriver import Keys`  Instead of,  `from selenium.webdriver.common.keys import Keys`  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","shreyanavigyan","2021-01-20T19:30:38Z","2021-01-20T20:12:22Z"
"","9457","Add NuGet and SourceLink support in CSProj files","Add NuGet build to CSProjs, symbol package build, and SourceLink support  ### Description Add nuget build properties to CSProj files Centralizes dll, nupkg, and snupkg build information  Add symbols package version and SourceLink support. This can make debugging much easier. #### Details How to creating symbols package: https://docs.microsoft.com/en-us/nuget/create-packages/symbol-packages-snupkg Adding and using SourceLink: https://www.hanselman.com/blog/ExploringNETCoresSourceLinkSteppingIntoTheSourceCodeOfNuGetPackagesYouDontOwn.aspx  ### Motivation and Context SourceLink makes debugging problems much easier Allows us to drop separate nuspec files  Makes nupkg and snupkg builds part of the standard dll builds  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","TroyWalshProf","2021-05-09T05:11:06Z","2021-06-22T13:05:12Z"
"","9062","Allow to specify Secure, HttpOnly and SameSite attributes when adding new cookie with dotnet bindings","According to WebDriver specification of [Add Cookie](https://www.w3.org/TR/webdriver/#add-cookie) it should be possible to set various cookie attributes, like domain and expiration time. However, constructor of Cookie class in dotnet bindings doesn't have parameters for 3 of them: Secure, HttpOnly, SameSite. https://github.com/SeleniumHQ/selenium/blob/04714514f4ed3247560be27fc692b531fe9369e8/dotnet/src/webdriver/Cookie.cs#L53  Would be great to have them like guys in js do :) https://github.com/SeleniumHQ/selenium/blob/04714514f4ed3247560be27fc692b531fe9369e8/javascript/node/selenium-webdriver/lib/webdriver.js#L1261","closed","","BoundedChenn31","2021-01-19T12:09:38Z","2021-09-05T08:25:01Z"
"","9744","Improve Travis CI build Performance","According to [Build times out because no output was received](https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received), we should carefully use travis_wait, as it may make the build unstable and extend the build time.  ===================== If there are any inappropriate modifications in this PR, please give me a reply and I will change them.","closed","","YunLemon","2021-08-17T02:44:17Z","2021-08-18T07:38:56Z"
"","9657","a","a","closed","C-py,","wes-swinson-tackmobile","2021-07-15T17:25:52Z","2021-09-05T07:50:53Z"
"","9683","ValueError: Could not get version for Chrome with this command: reg query","```ValueError: Could not get version for Chrome with this command: reg query ""HKEY_CURRENT_USER\Software\Google\Chrome\BLBeacon"" /v version```   **Any fix for this? I used to run selenium in python 3.9.4 but when i updated to 3.9.6 , this error comes . Please help !**","closed","","httpanand","2021-07-24T16:01:06Z","2021-09-05T07:50:31Z"
"","9682","ValueError: Could not get version for Chrome with this command: reg query","```ValueError: Could not get version for Chrome with this command: reg query ""HKEY_CURRENT_USER\Software\Google\Chrome\BLBeacon"" /v version```   **Any fix for this? I used to run selenium in python 3.9.4 but when i updated to 3.9.6 , this error comes . Please help !**","closed","","httpanand","2021-07-24T15:58:07Z","2021-09-05T07:50:32Z"
"","9681","ValueError: Could not get version for Chrome with this command: reg query","```ValueError: Could not get version for Chrome with this command: reg query ""HKEY_CURRENT_USER\Software\Google\Chrome\BLBeacon"" /v version```   **Any fix for this? I used to run selenium in python 3.9.4 but when i updated to 3.9.6 , this error comes . Please help !**","closed","","httpanand","2021-07-24T15:56:53Z","2021-09-05T07:50:33Z"
"","9544","3.141.59: build_sphinx setup tools target is failing because copy.py is using outdated 'sphinx.ext.pngmath' extension","```console [tkloczko@barrel py]$ /usr/bin/python3 setup.py build_sphinx -b man running build_sphinx Running Sphinx v4.0.2  Extension error: Could not import extension sphinx.ext.pngmath (exception: No module named 'sphinx.ext.pngmath') ```` That extension is no longer available in sphinx 4.0.2 I found simillar issu in cython https://github.com/cython/cython/issues/4209 and cython has been fiixed.","closed","","kloczek","2021-06-03T15:50:49Z","2021-09-05T08:01:13Z"
"","9448","Selenium Functions Missing Unable to use them!","``` from selenium import webdriver # pip install selenium from selenium.webdriver.common.keys import Keys import time import random import sys  #op = webdriver.ChromeOptions() #op.add_argument('headless')   def print_same_line(text):     sys.stdout.write('\r')     sys.stdout.flush()     sys.stdout.write(text)     sys.stdout.flush()       class Join:     def join_link():         driver = webdriver.Chrome()         driver.get(""https://meetingsapac29.webex.com/meet/pr1566903906"")         driver.maximize_window()         time.sleep(4)         click = driver.find_element_by_xpath('//*[@id=""push_download_join_by_browser""]')         click.click()         time.sleep(10)                  input_name = lambda: driver.find_element_by_xpath('//*[@id=""meetingSimpleContainer""]/div[2]/div[2]/input')         input_name.clear()         input_name.send_keys(Name)                            input_email = lambda: driver.find_element_by_xpath('//*[@id=""meetingSimpleContainer""]/div[2]/div[3]/input')         input_email.clear()         input_email.send_keys(Email)                   if __name__ == ""__main__"":     name = [""Rutul"",""Satyajit"",""Swaraj""]     email = [""rutulkmr10@gmail.com"",""Satyajit2003@gmail.com"",""Swaraj12@gmail.com""]     Name = random.choice(name)     Email = random.choice(email)     Join.join_link() ``` Error: ``` File ""webhook.py"", line 44, in      Join.join_link()   File ""webhook.py"", line 29, in join_link     input_name.clear() AttributeError: 'function' object has no attribute 'clear' AttributeError: 'function' object has no attribute 'send_keys' ``` **This error is blowing my nerves If anyone has any idea how to resolve this Please Help**","closed","","realshantanu","2021-05-06T06:06:06Z","2021-09-05T08:06:35Z"
"","9449","Selenium Functions Missing Unable To use them!","``` from selenium import webdriver # pip install selenium from selenium.webdriver.common.keys import Keys import time import random import sys  #op = webdriver.ChromeOptions() #op.add_argument('headless')   def print_same_line(text):     sys.stdout.write('\r')     sys.stdout.flush()     sys.stdout.write(text)     sys.stdout.flush()       class Join:     def join_link():         driver = webdriver.Chrome()         driver.get(""https://meetingsapac29.webex.com/meet/pr1566903906"")         driver.maximize_window()         time.sleep(4)         click = driver.find_element_by_xpath('//*[@id=""push_download_join_by_browser""]')         click.click()         time.sleep(10)                  input_name = lambda: driver.find_element_by_xpath('//*[@id=""meetingSimpleContainer""]/div[2]/div[2]/input')         input_name.clear()         input_name.send_keys(Name)                            input_email = lambda: driver.find_element_by_xpath('//*[@id=""meetingSimpleContainer""]/div[2]/div[3]/input')         input_email.clear()         input_email.send_keys(Email)                   if __name__ == ""__main__"":     name = [""Rutul"",""Satyajit"",""Swaraj""]     email = [""rutulkmr10@gmail.com"",""Satyajit2003@gmail.com"",""Swaraj12@gmail.com""]     Name = random.choice(name)     Email = random.choice(email)     Join.join_link() ``` **_Error:_**  ``` File ""webhook.py"", line 44, in      Join.join_link()   File ""webhook.py"", line 29, in join_link     input_name.clear() AttributeError: 'function' object has no attribute 'clear' AttributeError: 'function' object has no attribute 'send_keys' ``` **This error is blowing my nerves If anyone has any idea how to resolve this Please Help**","closed","","realshantanu","2021-05-06T06:13:14Z","2021-09-05T08:06:34Z"
"","9702","python switch_to.frame  Why the function doc string does not indicate that frame id can be used for positioning","```  def frame(self, frame_reference):         """"""         Switches focus to the specified frame, by index, name, or webelement.          :Args:          - frame_reference: The name of the window to switch to, an integer representing the index,                             or a webelement that is an (i)frame to switch to.          :Usage:             driver.switch_to.frame('frame_name')             driver.switch_to.frame(1)             driver.switch_to.frame(driver.find_elements_by_tag_name(""iframe"")[0])         """""" ``` Why the function doc string does not indicate that frame id can be used for positioning?","closed","","FlowerOda","2021-07-31T14:17:38Z","2021-09-05T07:50:12Z"
"","9902","[py] implement relative locator for find_element","@AutomatedTester this implementation ok for you?","closed","C-py,","titusfortner","2021-10-12T04:43:58Z","2021-10-12T08:56:20Z"
"","9884","Closes #9689 jcip for Apache 2 License into selenium source","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   Closes #9689 Linked jcip annotations library which is under Apache 2 License into selenium source.  ### Description   Changes happened into maven_deps.bzl then repinned again maven_install.json updated.  ### Motivation and Context   net.jcip.annotations are licensed under CC BY 2.5, because of this we have to keep that source not under cc license.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.   After this changes, I executed bazel commands, then successfully pinned resolved artifacts for maven  ![image](https://user-images.githubusercontent.com/5931858/136105509-e8db9ffc-42de-444f-8eb5-32e016b313c7.png)","closed","","amiluslu","2021-10-05T21:31:50Z","2021-10-12T15:10:40Z"
"","9110","[py] Remove legacy WebElement key `ELEMENT`","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.   ### Description The `ELEMENT` key has been removed from the WebElement w3c spec. Removing dictionary values for the same.  ### Motivation and Context Fixes #9102  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","nirantak","2021-01-27T10:23:31Z","2021-01-31T15:38:00Z"
"","9637","[js] feat: add client_options for keep-alive and custom user-agent","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.    It adds a feature to allow adding custom user-agent in the http client and also allow the agent to enable keep-alive on the clients as well for socket reuse on the client-end  ### Description   ### Motivation and Context  As we have started using selenium-webdriver in nightwatch v2, we have hit a speedbump with default http agent provided by selenium-webdriver since it doesnt allow us to set custom user-agent in the header, as well as the client sockets arnt reused because the default agent has keep-alive as false by default https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/_http_agent.js#L107 See https://stackoverflow.com/a/58332910 for more explanation  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","Dharin-shah","2021-07-05T20:45:32Z","2021-07-06T11:00:57Z"
"","9883","This can be deleted. Wrong PR. I created again.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     Linked jcip annotations library which is under Apache 2 License into selenium source.   ### Description  Changes happened into maven_deps.bzl then repinned again maven_install.json updated.   ### Motivation and Context  net.jcip.annotations are licensed under CC BY 2.5, because of this we have to keep that source not under cc license.   ### Types of changes  - [x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","amiluslu","2021-10-05T20:44:16Z","2021-10-05T21:36:20Z"
"","9328","Fix inaccessible RelativeBy methods","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description When using the By methods (LinkText, ClassName) they are all static and accessible outside of the Selenium assembly. Using RelativeBy has a protected constructor and non-static methods, meaning it is inaccessible.   ### Motivation and Context This brings RelativeBy in line with the same accessibility as By.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","jordan-mace","2021-03-23T21:34:32Z","2021-03-23T23:12:10Z"
"","9231","Update example in edge.js","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Update example in edge.js In particular, change options.useEdgeChromium(true) to options.setEdgeChromium(true).  ### Motivation and Context Fix outdated documentation in edge.js file header.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","hectorhon","2021-03-02T14:12:56Z","2021-03-02T18:07:23Z"
"","9639","[js] chore: fix linter","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description This PR fixes the error thrown by eslint.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Dharin-shah","2021-07-06T11:00:08Z","2021-07-09T11:04:57Z"
"","9638","add http client options","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description This PR adds an option to enable keep-alive via the default http agent, also allow custom user-agent to be passed  ### Motivation and Context As we have started using selenium-webdriver in nightwatch v2, we have hit a speedbump with default http agent provided by selenium-webdriver since it doesnt allow us to set custom user-agent in the header, as well as the client sockets arnt reused because the default agent has keep-alive as false by default https://github.com/nodejs/node/blob/e46c680bf2b211bbd52cf959ca17ee98c7f657f5/lib/_http_agent.js#L107 See https://stackoverflow.com/a/58332910 for more explanation  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","Dharin-shah","2021-07-06T10:55:24Z","2021-07-15T18:20:03Z"
"","9367","add support for CONNECT method to tunnel TLS","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description The current implementation of proxy support in the HTTP library is broken when connecting to HTTPS servers. This patch adds support for the ""CONNECT"" method to tunnel TLS.  See here for details: https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_method  ### Motivation and Context   ### Types of changes  - [ x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ x ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","backdoorcodr","2021-04-08T21:11:37Z","2021-06-13T05:16:47Z"
"","9021","Fix WebDriver.start_session docstring","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Small docstring fix  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](x) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","GeyseR","2021-01-04T10:23:38Z","2021-01-05T12:28:53Z"
"","9109","[py] deprecate w3c checks in python bindings","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Removing w3c checks in python bindings   ### Motivation and Context https://github.com/SeleniumHQ/selenium/issues/9096  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Dharin-shah","2021-01-27T08:21:58Z","2021-07-05T13:59:48Z"
"","9635","chore: cleanup","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Just a general cleanup PR while going through the code  ### Motivation and Context Cleanup  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Dharin-shah","2021-07-05T13:55:59Z","2021-07-05T17:57:43Z"
"","9208","Fixed headless option not being passed to RemoteWebDriver constructor","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Fixed `headless` option not being passed to `RemoteWebDriver` constructor `desired_capatibilities` argument by`ChromiumDriver` constructor. `desired_capatibilities` are used to pass `--headless` option to browser.  ### Motivation and Context Please see https://github.com/SeleniumHQ/selenium/issues/9188  ### Types of changes  - [x ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Dmitri-Sintsov","2021-02-24T15:24:44Z","2021-03-01T15:28:48Z"
"","9424","[dotnet] Add additional RelativeSelectors","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Expands the number of RelativeSelectors that can be created.   Additions to RelativeBy: - WithClassName - WithId - WithName - WithXPath - WithCssSelector - WithLinkText - WithPartialLinkText  @jimevans mentioned the need for this while answering a question of mine.  ### Motivation and Context Currently in the dotnet bindings the RelativeSelector can only be created through WithTagName, but support for all other selectors needs to be implemented.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","jordan-mace","2021-04-27T11:01:05Z","2021-08-16T16:47:31Z"
"","9701","Deprecates withCapabilities method and removes tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Deprecates method `withCapabilities(capabilities)` method in `javascript/node/selenium-webdriver/index.js` and removes tests in `javascript/node/selenium-webdriver/test/builder_test.js`  ### Motivation and Context solves issue #9694  created by @AutomatedTester   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","gpt14","2021-07-31T13:05:57Z","2021-08-13T09:59:45Z"
"","9319","[dotnet] Fix inaccessible RelativeBy methods","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Currently, the use of RelativeBy is not possible as the methods are not static whilst the constructor is protected.  ### Motivation and Context RelativeBy should be accessible/usable.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","jordan-mace","2021-03-23T02:43:22Z","2021-03-23T02:58:37Z"
"","9258","[dotnet] Add screenshot support for EventFiringWebElement","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description Add support for taking element screenshot when the underlying web element is a EventFiringWebElement.  ### Motivation and Context Fixes #9256  ### Types of changes - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","TroyWalshProf","2021-03-11T01:30:19Z","2021-03-18T08:33:58Z"
"","9572","Issue #8550: SlowLoadableComponent ignores UnableToLoadMessage","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description `SlowLoadableComponent` type ignores `UnableToLoadMessage` and instead defaults to message ""Timed out after X seconds."". This PR checks if string `UnableToLoadMessage` is set and uses that string instead.  ### Motivation and Context The `SlowLoadableComponent` was not working as expected.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","elgatov","2021-06-14T11:23:58Z","2021-10-12T19:05:13Z"
"","9571","Issue #8550: SlowLoadableComponent ignores UnableToLoadMessage","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description `SlowLoadableComponent` type ignores `UnableToLoadMessage` and instead defaults to message ""Timed out after X seconds."". This PR checks if string `UnableToLoadMessage` is set and uses that string instead.  ### Motivation and Context The `SlowLoadableComponent` was not working as expected.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","elgatov","2021-06-14T10:09:33Z","2021-06-14T10:24:57Z"
"","9570","Issue #8550: SlowLoadableComponent ignores UnableToLoadMessage","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description `SlowLoadableComponent` type ignores `UnableToLoadMessage` and instead defaults to message ""Timed out after X seconds."". This PR checks if string `UnableToLoadMessage` is set and uses that string instead.  ### Motivation and Context The `SlowLoadableComponent` was not working as expected.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","elgatov","2021-06-14T08:27:11Z","2021-06-14T08:42:43Z"
"","9321","[grid] Use heartbeat to register the Node","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Use the heartbeat to register the Node. Related to #9297.  ### Motivation and Context  Currently, the Node uses the NodeStatus event to register itself with the Distributor. Once it is registered, it fires the NodeHeartbeat event at a configurable regular interval to indicate it is alive. If the Distributor goes down and comes up again, the same Node will not re-register on its own since it fires the NodeStatus event to register only when it spins up. So the Node(s) will have to be restarted so they register again.  To fix this behaviour, the changes here use the NodeHeartBeat to register the node and indicate it is alive.   Thank you @diemol for helping me understand the issue and potential solution.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-23T05:24:26Z","2021-03-23T21:36:24Z"
"","9247","Upgrade OpenTelemetry to latest stable version 1.0.0","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Upgrade OpenTelemetry to latest stable version 1.0.0  ### Motivation and Context  The latest version updates the default span and metric exporters. As a result, default system properties were added to avoid unnecessary metric exporters. The change ensures tracing works as expected.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-09T10:54:05Z","2021-03-09T12:27:00Z"
"","9187","Upgrade OpenTelemetry to 0.16.0","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Upgrade OpenTelemetry to 0.16.0  ### Motivation and Context  The changes aim to keep the OpenTelemetry in sync with the latest release. The changes are related to fixing/updating the existing APIs in accordance with OpenTelemetry 0.15.0 and 0.16.0 release.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-02-17T16:18:19Z","2021-02-20T22:56:48Z"
"","9055","Upgrade OpenTelemetry to 0.13.1","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Upgrade OpenTelemetry to 0.13.1  ### Motivation and Context  The new version mainly splits the opentelemetry-api package into smaller packages. The changes ensure the build is intact.  The changes are in sync with https://github.com/open-telemetry/opentelemetry-java/blob/master/CHANGELOG.md#version-0130---2020-12-17. Depcreated APIs are replaced with the recommended ones.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-15T12:38:22Z","2021-01-15T13:34:45Z"
"","9029","[grid] Upgrade OpenTelemetry to 0.12.0","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Upgrade OpenTelemetry to 0.12.0.   ### Motivation and Context  The newer versions of OpenTelemetry do not maintain backward compatibility and introduce new APIs. To protect from such changes, Selenium has a wrapper around OpenTelemetry. The wrapper is updated to match the new APIs, adjust imports and update the deprecated APIs.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-07T06:54:16Z","2021-01-07T09:47:51Z"
"","8889","Upgrade OpenTelemetry to 0.10.0","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Upgrade OpenTelemetry to 0.10.0  ### Motivation and Context  Upgrading to OpenTelemetry to 0.10.0 to keep up with the breaking changes mentioned in https://github.com/open-telemetry/opentelemetry-java/blob/master/CHANGELOG.md#version-0100---2010-11-06  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-20T12:59:34Z","2020-11-23T14:27:12Z"
"","9246","[grid] Update plain logs default value to true","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Update the default config value for enabling plain logs to true.  ### Motivation and Context  Ensure the default value for plain logs is set to true, else by default the application starts without displaying any logs.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-09T06:14:28Z","2021-03-09T07:20:16Z"
"","8911","Update tests to check results of Either when calling newSession() method.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Update grid tests to fail if the results of newSession() if an exception.  ### Motivation and Context  Updating grid tests that use newSession() method. The newSession() method returns Either. However, the tests did not use the Either and assumed that the session always existed resulting in NullPointerException if tests were flaky.   The changes check if session is created and carry on assertions else the test fails.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-26T14:00:55Z","2020-11-26T22:30:26Z"
"","9430","Update driver command executor thread executor for driver shutdown","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Update driver command executor thread executor  ### Motivation and Context  By default `CompletableFuture.supplyAsync` uses ForkJoinPool's commonpool. While use JUnit 5 parallel execution, faces driver shutdown() errors due the same. It uses ForkJoinPool in the background as well. This is related to #9359.  The changes fix that by adding a fixed threadpool and passing it to the async call.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-29T09:52:35Z","2021-05-10T12:05:46Z"
"","9227","[grid] Using a single Netty client instance","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  This helps to reduce the amount of thread pools used to handle connections. This change is possibleTimeouts because timeouts can be set per request.   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","diemol","2021-03-01T20:35:58Z","2021-03-02T15:32:16Z"
"","9139","[grid-ui] Update stereotype column count method","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The Grid UI was not unable to display the stereotype of the Node, if it has only one stereotype.  ### Motivation and Context  In order to ensure the stereotypes are displayed correctly, the changes use ""Math.ceil"" to calculate the stereotype count.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.    Before ![image](https://user-images.githubusercontent.com/10705590/106870551-3cec3380-66f7-11eb-9e30-cb9aab46d5e7.png)   After  ![image](https://user-images.githubusercontent.com/10705590/106870435-1fb76500-66f7-11eb-9168-f4c43d468caa.png)","closed","","pujagani","2021-02-04T09:12:59Z","2021-02-04T09:23:42Z"
"","9652","Fix Distributor tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The Distributor tests are flaky in nature due to updates in the heartbeat mechanism of the Node. This impacts when the Node is registered. It is critical during testing. The changes fix that for breaking tests.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2021-07-14T15:14:01Z","2021-07-15T08:55:10Z"
"","8884","Add implementation  for context propagation based on changed in OpenTelemetry 0.9.0.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The changes add the required implementation for a propagating the tracing context correctly.   ### Motivation and Context  The version bump to 0.9.0 for OpenTelemertry made a breaking change of returning no-op TextMapPropagator. As a result, the trace context was not being passed when ""inject"" operation was called. So in a full distributed grid mode, a request had a different trace id and context as it made its way through different Grid 4 components instead of the same trace id. Thus, defeating the purpose of tracing.  The changes fix the above-mentioned issue by passing a valid implementation of TextMapPropagator. The changes add a unit test to safe-guard from future breaking changes in OpenTelemetry.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-18T11:24:55Z","2020-11-19T21:34:24Z"
"","9214","[grid] Setting Netty client pool size to 1","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  The AsyncHttpClient has built in a thread pool to handle connections and the pool was growing based on the way we use the client. As a result, we were having many threads that kept objects in memory that were not getting released, a memory leak.  This is not an issue in the AsyncHttpClient but most likely in the way we use the client.  ### Motivation and Context  To prevent memory from leaking. This is a fix for #9152  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","diemol","2021-02-25T19:45:15Z","2021-02-28T21:17:29Z"
"","9213","[grid] Send node heartbeat only on successful node registration","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Send node heartbeat only on successful node registration  ### Motivation and Context  The Node sends heartbeats at regular intervals. The Distributor leverages the heartbeats to purge dead nodes if any. When a Node starts up, it attempts registration with the Distributor. If the registration fails due to an incorrect registration secret, the Node continues sending the heartbeat and it leads to a series of failed events via the Eventbus. The changes fix this by ensuring that heartbeat should only be sent upon successful registration.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-02-25T07:19:23Z","2021-03-07T20:43:48Z"
"","9179","[grid] Running unit tests in GitHub Actions (UI) [WIP]","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Running unit tests for the UI with bazel  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-02-15T18:02:25Z","2021-02-17T12:26:27Z"
"","8919","Removed obsolete browsers from BrowserType (#8317)","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Removed obsolete browsers from BrowserType (Firefox Proxy, Firefox Chrome, GoogleChrome, EdgeHtml, IExplore, IExplory Proxy, Safari Proxy, Konqueror, Mock, IE HTA, PhantomJS) and unused variables (Android, iPad, iPhone) ### Motivation and Context   Fixes #8317   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","prafair","2020-11-29T19:50:22Z","2020-12-21T18:27:47Z"
"","9310","[grid] Remove redundant listeners in Grid Model.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove redundant listeners in Grid Model.  ### Motivation and Context  The LocalDistributor uses the GridModel. Some event listeners were common between the two and LocalDistributor in turn calls the GridModel methods for the same events, leading to repetitive calls for the same functionality. Hence the redundant event listeners were removed from the GridModel.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-19T12:19:36Z","2021-03-23T09:20:44Z"
"","9400","[grid] Remove old Grid tests since features exist in current Grid","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove old Grid tests since features exist in current Grid  ### Motivation and Context   **LoadBalancedTest**  Feature: Incoming test should be load-balanced among all the Nodes in the Grid  Details: In Grid 4 the Distributor identifies the Node for new incoming session request. This Node selection is done here: https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/distributor/selector/DefaultSlotSelectorTest.java While selecting the Node, the Node‚Äôs load is also considered.  Test: https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/distributor/DistributorTest.java#L496  **NewRequestCrashesDuringNewSessionTes**t Feature: New session creation error should not lead to an inconsistent state in the Grid  Details:  If any error happens while creating a new session request, the error is propagated back to the Distributor and depending on the error, the request is either retried or rejected. In case the request is retried, it will be retried up to a certain timelimit then rejected. Similarly, if the request sits in the new session request queue and the Grid is facing any issue in polling the session, the timed-out requests are removed from the queue.   Tests:  https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/router/SessionQueueGridTest.java https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/router/NewSessionCreationTest.java#L158  **RemoteProxySlowSetup**  Feature: Multiple time if the same node is registered, then it is counted as one.  Grid 3 :  Any new incoming node registers itself with the Hub. If two same nodes (same configuration) register to the Hub, only one node registers itself.   Grid 4 :  Same as Grid 3   Test:  https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/distributor/DistributorTest.java#L480  **SessionTimesoutTest**  Feature: Remove any inactive session after a configured time period. Poll all nodes at regular intervals (configurable) and remove inactive Nodes.  Grid 3 :  timeout - Configurable flag for removing inactive session. If the session is inactive for more than that time, the session is removed from the Grid and frees up the slot.  cleanUpCycle - Hub polls all the Node at regular interval and removes inactive Node.   Grid 4 :  Same as Grid 3  session - timeout - Configurable flag for removing inactive session. If the session is inactive for more than that time, the session is removed from the Grid and frees up the slot.   heartBeat-period - Hub polls all the Node at regular interval and removes inactive Node.  **SmokeTest**   Grid 3 :  Test to check end to end functionality of the Grid for 10 tests.  Grid 4 :  Covered in https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/router/EndToEndTest.java  https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/router/StressTest.java  Since the features described above are present in Grid 4. It is safe to remove the tests.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-20T14:48:05Z","2021-04-21T16:48:45Z"
"","9410","[grid] Remove GridShutdown test","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove GridShutdown test since Grid 4 has the functionality   ### Motivation and Context  Grid 3 :  GridRegistry is the central place of the Grid where each Node registers itself to the Hub. It assigns any new incoming request to the queue and maintains HTTP connections to the Node.  Hence, to control its lifecycle, correctly clean up the resources and stop threads, shutdown() method is used. It stops the queue, stops the request matching thread, stops all registered nodes and closes the HTTP client connections.   Grid 4 :  The current implementation for Grid 4 is very different. The fully distributed mode has 5 components. Each component runs as a netty server. The netty server implements a stop() method, that stops all its thread groups gracefully. Additionally, there are JVM hooks to shutdown any ongoing threads like the new session distributor thread, retry request session queue thread. The JVM hook also shuts down the async HTTP client to free up the resources. There are separate endpoints to drain a node which in turns frees up the resources. However, there is no single endpoint/method to be called that can explicitly shut down the entire grid since this is a security risk.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-22T09:45:09Z","2021-04-22T09:54:59Z"
"","9370","[dotnet] Remove CDP version support for 86 and 87. Add CDP version support for 90 and 91.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Remove CDP version support for 86 and 87. Add CDP version support for 90 and 91.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2021-04-09T10:14:23Z","2021-06-02T19:30:40Z"
"","9129","[grid] Add info and warn log while adding specific drivers to node","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #9122   ### Motivation and Context  Adding a log in case no drivers are discovered on the system path and the node is configured to add specific drivers.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-02-02T07:18:30Z","2021-03-09T21:38:08Z"
"","9272","[grid] Make health check interval a configurable option for Distributor","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #9045.  Make health check interval a configurable option for Distributor  ### Motivation and Context  The changes add an option to configure the health check interval. This flag is similar to ""cleanupcycle"" in Grid 3.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-12T13:16:06Z","2021-03-12T15:45:55Z"
"","9030","[grid] Add new session request queue size endpoint and GraphQL support","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #9024. Exposing the new session queue size via an endpoint and GraphQL.   ### Motivation and Context  As mentioned in #9024, it will help users to scale nodes and get information regarding the pending new session requests. A quick way to get the queue size would be using an endpoint directly. The Grid supports GraphQL for richer querying support, the changes add the new session request queue count to the GraphQL schema.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-07T12:32:14Z","2021-01-11T19:34:13Z"
"","8902","Add  additional HTTP attributes to event-logs","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #8883   ### Motivation and Context  Currently, Grid uses OpenTelemetry events for event-logging. For the HTTP request, the first iteration of changes added the mandatory field recommended in the [OpenTelemetry specification](https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/trace/semantic_conventions/http.md). With the issue #8883, the feature requests wants additional fields to match the request access logs provided by servers. These fields are also recommended in the OpenTelemetry specification. The changes add the fields and now the HTTP request event-log will be of the format:   `15:45:17.248 INFO [LoggingOptions$1.lambda$export$0] - {    ""traceId"": ""4e8ee5692eb9d76d1fd5b5ecfef2b0ba"",   ""spanId"": ""9fbbad7f38327008"",   ""spanKind"": ""INTERNAL"",   ""eventTime"": 1606212917247018373,   ""eventName"": ""HTTP request execution complete"",   ""attributes"": {     ""http.status_code"": 200,     ""http.target"": ""\u002fsession"",     ""http.flavor"": 1,     ""http.user_agent"": ""selenium\u002f4.0.0-alpha.7 (js mac)"",     ""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueuer"",     ""http.method"": ""POST"",     ""http.host"": ""localhost:4444"",     ""http.request_content_length"": ""104"",     ""http.scheme"": ""HTTP""   }`   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-24T10:16:26Z","2020-11-24T11:58:23Z"
"","8997","Update toJson() method creation for integer type in CdpClientGenerator.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #8871. Fixes toJson() method's return type for integer parameters.  ### Motivation and Context  Sending the  Cdp command using websocket requires the request to be serialized into Json string, and for this toJson() method of WindowID is used. The CdpClientGenerator generates classes based on the browser_protocol.    While creating WindowID class, the return type for toJson() method was String. As a result following error was received anytime WindowID was used,  `WARNING: Unhandled type: {""id"":6,""error"":{""code"":-32602,""message"":""Invalid parameters"",""data"":""Failed to deserialize params.windowId - BINDINGS: int32 value expected at position 16""}}` .  The changes fix the serialization issue by ensuring Integer return type is added.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-12-24T10:05:44Z","2021-01-03T21:49:59Z"
"","8977","Add retry http request filter for transient errors. Integrate filter with ClientConfig.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Related to #8167. Add retry mechanism using Failsafe.  ### Motivation and Context  When a client makes a request to the server, it might not get fulfilled due to different errors. One category of errors is transient in nature. In such cases, the request might be fulfilled if it is reattempted with a delay. The changes introduce a retry mechanism as a filter. The retry policies handler read timeout, connection failures and server errors (server unavailable and internal server error without response body). Rest of the failures are not retried.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2020-12-17T09:40:50Z","2021-10-26T13:34:25Z"
"","9283","[grid] Purge timed out requests sitting the queue at regular intervals","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Purge timed out requests sitting the queue at regular intervals  ### Motivation and Context  Currently, if the request has timed out, it will not be rejected unless it reaches the Distributor and the Distributor removes the request from the queue or retries the request. The timeout check was only performed at those times. The changes now go through the new session request queue at regular intervals and remove any timed out requests and communicate the response back to the client.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-15T09:05:43Z","2021-03-18T10:15:33Z"
"","9721","[grid] Purge Nodes if health check fails consistently","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Purge Nodes if health check fails consistently  ### Motivation and Context  Currently, the Node is purged if the heartbeat is not received for the threshold time interval (value is 4 times the heartbeat interval). If the health check fails, the Node is marked as ""Down"" but the next heartbeat can again change it to ""Up"".  Heartbeat serves the purpose to ensure Node's liveliness. The health check serves the purpose to ensure Node's reachability from the Distributor. So there might a situation where the health check is continuously failing but the heartbeat is alive, then the Node should be removed since it will not be reachable or might not be able to process new sessions.  The changes keep track of consecutive Node health check failures and purge the Nodes if it is beyond a threshold. The failed health check count is reset if the Node's healthcheck passes before hitting the threshold.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-08-05T05:43:16Z","2021-08-05T12:27:18Z"
"","9265","[grid] Propagate the error to the client when reserving a slot","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Propagate the error to the client when reserving a slot  ### Motivation and Context  Ideally, the exception received while creating a session with the driver should be bubbled up to the client. A part of the work would be to ensure DriverSessionFactory communicates the error details to the LocalNode which in turn reaches the Distributor (separate PR after this). Another part is to ensure the LocalDistributor passes on the error details to the client.  The changes are related to the 2nd part. When reserving a slot in the grid and creating a session, in case of error situations, the error is simply thrown instead of being passed back to the client. The changes fix that by using Either.    ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-12T07:47:46Z","2021-03-12T10:00:41Z"
"","9156","[py] Added the functionality for changing the user-agent of Firefox and Chromium-based browsers like Edge, Chrome and Opera","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Now we can simply call `add_userAgent()` method on `FirefoxProfile` object, `FirefoxOptions` object `ChromeOptions` object, `EdgeOptions` object and `OperaOptions` object and while using the webdriver object we can pass the profile or options object as an argument.   Like this in Firefox using `FirefoxProfile` object:-  ``` from selenium import webdriver profile = webdriver.FirefoxProfile() profile.add_userAgent(_userAgent_) driver = webdriver.Firefox(profile=profile)  ```  If we wanted to use `FirefoxOptions`, it would look something like this:-  ``` from selenium import webdriver options = webdriver.FirefoxOptions() options.add_userAgent(_userAgent_) driver = webdriver.Firefox(options=options)  ```  While using a Chromium-based browser it would look something like this (This is an example of how we can do it in Chrome but since the change has been made directly in the Chromium source code others like Edge and Opera also works) :-  ``` from selenium import webdriver options = webdriver.ChromeOptions() options.add_userAgent(_userAgent_) driver = webdriver.Chrome(options=options)  ``` To verify the userAgent we can simple call `driver.execute_script('return navigator.userAgent')`.  ### Motivation and Context   I added this functionality since as a beginner I had a lot of problems to change the user-agent. I searched the entire Internet only to find out selenium didn't provide a easy way to change the user-agent. Then I found out about how to change the user-agent from someone but it was still complex and pretty hard to remember. So to provide a much more easier way to change the user-agent, I added this functionality which is pretty simple and easy to remember. This is all I have to say about my new feature.  Thanking you,  With Regards, Shreyan Avigyan  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shreyanavigyan","2021-02-08T06:35:51Z","2021-02-12T09:12:42Z"
"","9131","Move cdp code to webdriver.js","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Moves CDP code from `chromium.js` to `webdriver.js`   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2021-02-02T10:48:54Z","2021-02-04T05:39:22Z"
"","8886","Fixes issue where logs were unavailable for RemoteWebDriver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Makes RemoteWebDriver implement `ISupportsLogs` This has been tested with the example given in #8229   ### Motivation and Context  Closes issue #8229   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-dotnet,","jordan-mace","2020-11-19T10:03:04Z","2021-03-16T00:07:49Z"
"","9120","[grid] Leverage Grid Model to check capacity before polling the queue","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Leverage Grid Model to check capacity before polling the queue  ### Motivation and Context  The LocalDistributor checks if the Grid has capacity before polling the queue. The changes leverage the Grid Model to check the Grid capacity to keep the implementation consistent with the Distributor functionality and avoid extra network calls in the distributed Grid modes.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-29T05:39:19Z","2021-02-03T09:34:48Z"
"","9444","[java] Handle bad gateway response from the server","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Handle bad gateway response from the server  ### Motivation and Context   When the server responds with a bad gateway error for this format:  ```  502 Bad Gateway  502 Bad Gateway nginx   ```  The Selenium clients responds with an exception:  ``` org.openqa.selenium.json.JsonException: Unable to determine type from:  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-05T11:44:43Z","2021-05-06T08:04:18Z"
"","9385","[grid] Update eventbus poll timeout","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixing event bus flaky tests to avoid ClosedSelectorException and CancelledKeyException.   ### Motivation and Context  Increasing the Eventbus poll timeout to ensure all messages are read as they come on the listener end.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-16T05:05:28Z","2021-04-19T09:53:42Z"
"","9251","[grid] Make session timeout configurable option for Node role","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes partially #9045.  ### Motivation and Context  The local node in Grid keeps track of current ongoing sessions using a cache. The cache allows setting a timeout for evicting a record if it has not been accessed for the duration of the timeout. This value was hardcoded to 5 minutes. The changes make it configurable.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-10T11:15:36Z","2021-03-11T14:29:06Z"
"","9877","[grid] Use a valid json for error message","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9866  ### Motivation and Context  Use a valid JSON for the error message in case the route is not found. This way the client bindings will be able to correctly parse and display the message.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-09-30T12:43:35Z","2021-09-30T13:19:57Z"
"","9686","[cdp] Avoid using Void.class as a type","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9676   ### Motivation and Context  When using Java 11 (current LTS), a warning would appear as follows due to using Void.class as type. ``` INFO: Found CDP implementation for version 92 of 91 WARNING: An illegal reflective access operation has occurred WARNING: Illegal reflective access by org.openqa.selenium.json.InstanceCoercer (file:/org/seleniumhq/selenium/selenium-json/4.0.0-beta-4/selenium-json-4.0.0-beta-4.jar) to constructor java.lang.Void() WARNING: Please consider reporting this to the maintainers of org.openqa.selenium.json.InstanceCoercer WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations WARNING: All illegal access operations will be denied in a future release ```   However, when using Java 16, this access is denied as warned. Hence, creating the devTools sessions throws an error. To provide support for future version of Java, using Void.class type is removed.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-07-26T12:21:04Z","2021-07-27T04:37:21Z"
"","9677","Close DriverService and DriverCommandExecutor executor on quit","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9666  ### Motivation and Context  A dedicated thread pool is provided for DriverService's async calls. The thread pool was initially not closed after the session is quit. The changes fix that.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-07-23T06:50:26Z","2022-04-27T09:54:38Z"
"","9688","Add docker max sessions flag","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9660 and https://github.com/SeleniumHQ/docker-selenium/issues/1340.  ### Motivation and Context  A max-sessions flag specific to the Docker section of the config will allow the users to set the value for maximum concurrent sessions allowed. This value is upper-bound by the maximum available processors.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-07-26T14:21:47Z","2021-07-29T09:13:24Z"
"","9394","[java] Implement getDomAttribute method in EventFiringWebDriver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9381.  ### Motivation and Context  While creating the Select instance, the getDomAttribute() method of element is called in the constructor. This method call throws UnsupportedOperationException by default. The changes fix that.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-19T13:46:52Z","2021-04-21T17:42:16Z"
"","9357","[java] Set logging level to the logger when method is called","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9352  ### Motivation and Context  The logging level was always defaulting to INFO in spite of the `setLogLevel()` method being called. The changes fix this.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2021-04-05T12:52:27Z","2021-04-07T09:11:58Z"
"","9261","Lazy initialisation of the singleton default client factory instance","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9232   ### Motivation and Context  The single global instance of the default http client factory is lazily initialized as needed.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-11T09:39:55Z","2021-03-11T13:34:33Z"
"","9193","[grid] Update Distributor to not retry session requests on unexpected driver errors","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9154   ### Motivation and Context  The Distributor would retry new session requests for driver-related errors. Ideally, instead of retrying the new session request, the Distributor should respond to the client with the error immediately. In order to do this, the new session creation at Node needed to bubble up the exception so the Distributor can act accordingly. The changes ensure the Distributor retries the request when necessary.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-02-19T10:49:40Z","2021-03-09T12:10:06Z"
"","9361","[dotnet] Add constructor for creating a Cookie instance with all optional arguments","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9063  ### Motivation and Context  As described in #9063, the changes allowing setting all optional arguments as defined in the WebDriver spec for adding a cookie.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-dotnet,","pujagani","2021-04-06T15:14:44Z","2021-10-13T00:19:40Z"
"","9363","[dotnet] Make SlowLoadable component's timeout and wait() protected","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #9009.  ### Motivation and Context  As described in #9009, the changes update the modifier for wait() method to be accessible to the subclasses and provide a getter for the timeout variable for the same.  The clock variable uses the IClock interface, so making it accessible to subclasses does not allow the use of a subclass specific method, hence instead creating and using a local variable copy will suffice as shown in the tests here https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/test/support/UI/SlowLoadableComponentTest.cs#L147.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)   ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-dotnet,","pujagani","2021-04-08T07:13:18Z","2021-10-12T19:13:22Z"
"","9368","[dotnet] Call the base constructor to set capability for EdgeDriver","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #8358  ### Motivation and Context  While creating a DevToolsSession, a capability check is done. Since the EdgeDriver was calling the base constructor of ChromiumDriver that did not set the capability name, it was defaulting to null. Thus, leading to the error described in #8358. The changes fix this.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-09T08:29:46Z","2021-08-26T17:17:47Z"
"","9346","Update javadoc for getCssValue()","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #7697  ### Motivation and Context  Fix Javadoc for getCssValue() while returning values for color values. Different browsers have different interpretations for returning the colour value either using rgb or rgba. Some browsers (Chrome for example) preserve the implicit opacity value 1, where Firefox omits it.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2021-03-30T07:01:39Z","2021-03-30T07:26:57Z"
"","9116","refactor: removed moveto command","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #6809  ### Motivation and Context  We will be removing this legacy `moveto` action as w3c had implemented actions API which can be used to move the mouse.  - Removed [mouseMove](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/actions.js#L143) function, as this method consumes command `LEGACY_ACTION_MOUSE_MOVE`. - Also removed `Action.Type.POINTER_MOVE`, as that switch case was using `LEGACY_ACTION_MOUSE_MOVE`, and we are deprecating it. As we had removed `Action.Type.POINTER_MOVE`, so now we don't need [POINTER_MOVE](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L207) as well. - Removed [scheduleMouseAction_](https://github.com/SeleniumHQ/selenium/blob/d61c780f728dc82894a4b576007a9fd30ba542c1/javascript/node/selenium-webdriver/lib/actions.js#L180) function, as this method was using `mouseMove`. - Removed [click](https://github.com/SeleniumHQ/selenium/blob/d61c780f728dc82894a4b576007a9fd30ba542c1/javascript/node/selenium-webdriver/lib/actions.js#L297), [doubleClick](https://github.com/SeleniumHQ/selenium/blob/d61c780f728dc82894a4b576007a9fd30ba542c1/javascript/node/selenium-webdriver/lib/actions.js#L326), [mouseDown](https://github.com/SeleniumHQ/selenium/blob/d61c780f728dc82894a4b576007a9fd30ba542c1/javascript/node/selenium-webdriver/lib/actions.js#L226), [mouseUp](https://github.com/SeleniumHQ/selenium/blob/d61c780f728dc82894a4b576007a9fd30ba542c1/javascript/node/selenium-webdriver/lib/actions.js#L256), [dragAndDrop](https://github.com/SeleniumHQ/selenium/blob/d61c780f728dc82894a4b576007a9fd30ba542c1/javascript/node/selenium-webdriver/lib/actions.js#L276) and [move](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L836) functions as these functions were using `scheduleMouseAction_`   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","vaibhavsingh97","2021-01-28T11:23:55Z","2021-04-18T14:27:43Z"
"","9113","refactor: removed moveto command","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #6809  ### Motivation and Context  We will be removing this legacy `moveto` action as w3c had implemented actions API which can be used to move the mouse.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","vaibhavsingh97","2021-01-27T22:04:21Z","2021-01-28T10:12:59Z"
"","9293","[java] Removing the 'ELEMENT' key when serialising RemoteWebElement to Json","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fixes #6393   ### Motivation and Context  The changes remove the legacy pointer 'ELEMENT' while serialising the RemoteWebElement to Json. This aligns with the Webdrive spec https://w3c.github.io/webdriver/#dfn-web-element-identifier  ""The JSON serialization of an element is a JSON Object where the web element identifier key is mapped to the element‚Äôs web element reference.""   ""The web element identifier is the string constant ""element-6066-11e4-a52e-4f735466cecf"".  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2021-03-17T05:48:17Z","2021-12-24T22:24:11Z"
"","9005","Fix ExpectedConditions javadoc for a return type.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix return type in javadoc for jsReturnsValue() method in ExpectedConditions.   ### Motivation and Context  Related to issue #8882.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-12-28T12:36:45Z","2020-12-28T19:31:05Z"
"","9115","Fix OpenTelemetry 0.14.1 exporter functionality. Update tracing.txt.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix OpenTelemetry 0.14.1 exporter functionality. Update tracing.txt.  ### Motivation and Context  The OpenTelemetry version bump to 0.14.1 did not affect the build. But with the new changes the underlying global tracer provider implementation changed and it impacted the Jaeger exporter.  The changes fix the span exporter for the latest version and update the tracing.txt.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-28T05:19:02Z","2021-01-31T20:43:00Z"
"","9438","[grid] Fix new session creation test","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix new session creation test  ### Motivation and Context  The new session creation request should not be retried for an unexcepted error from the driver. The changes fix that.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-04T07:26:16Z","2021-05-07T09:55:57Z"
"","9033","[grid] Fix indentation for New Session Queuer classes.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix indentation for New Session Queuer classes.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-08T13:21:13Z","2021-01-08T13:52:57Z"
"","9728","[grid] Fix flaky SessionCleanup tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix flaky SessionCleanup tests  ### Motivation and Context  Fix flaky SessionCleanup tests  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-08-09T05:53:45Z","2021-08-09T06:57:11Z"
"","9876","[js] Fix builder test","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix builder test that is failing due to restoring `withCapabilities()`.  ### Motivation and Context  Adding a missing import statement to fix the tests.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-09-30T05:35:23Z","2021-09-30T07:21:16Z"
"","9397","[grid] Fix build due to SessionRequests renaming","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Fix build due to SessionRequests renaming  ### Motivation and Context  The java build was breaking due since it was unable to find LocalSessionRequests. The LocalSessionRequests class contents were merged into SessionRequests class. The changes rename the LocalSessionRequests to SessionRequests all necessary source files and test files.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-20T06:54:53Z","2021-04-20T09:36:34Z"
"","9168","[grid] Extract Node session creation to use Either to help retry sessions accurately","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Extract new session creation method in the LocalNode to return Either.   ### Motivation and Context  New session requests should only be retried if Node does not have available slots for the request. In case the session could be not be created at the driver end, then session request should not be retried. The changes start the refactoring required to solve #9154.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-02-12T08:38:33Z","2021-02-12T13:38:58Z"
"","9383","[grid] Fix flaky event bus tests by dedicated threading, reverting the polling loop logic and increasing poll timeout","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Event bus tests when run using the following command would fail :  `bazel test --cache_test_results=no --runs_per_test=20 //java/server/test/org/openqa/selenium/events:EventBusTest --test_filter=org.openqa.selenium.events.EventBusTest#`   ### Motivation and Context  The pattern observed in the failure was that the countdown latch would keep waiting and never receive the messages as expected intermittently event after increasing the wait times. This was primarily due to errors :  1. ClosedSelectorException ``` java.nio.channels.ClosedSelectorException 	at java.base/sun.nio.ch.SelectorImpl.ensureOpen(SelectorImpl.java:75) 	at java.base/sun.nio.ch.SelectorImpl.keys(SelectorImpl.java:80) 	at zmq.ZMQ.poll(ZMQ.java:647) 	at org.zeromq.ZMQ$Poller.poll(ZMQ.java:3892) ``` 2. CancelledKeyException ``` java.nio.channels.CancelledKeyException 	at java.base/sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:71) 	at java.base/sun.nio.ch.SelectionKeyImpl.interestOps(SelectionKeyImpl.java:90) 	at zmq.ZMQ.poll(ZMQ.java:663) 	at org.zeromq.ZMQ$Poller.poll(ZMQ.java:3892) ``` This was observed when tcp transport layer was used in creating the socket when the poll wait time was set to return immediately i.e. set to 0. Once this was updated to a higher value, the tests were not longer flaky but the run time was very slow since a scheduled thread ran and waited for a bit in each run. Reverting the polling loop to  https://github.com/SeleniumHQ/selenium/blob/de8579b6d5959bf3c78d35e1b8a95861728d0cb4/java/server/src/org/openqa/selenium/events/zeromq/UnboundZmqEventBus.java#L118 had a significant impact on the test run speed and fixed this issue.   Additionally, closed the poller during resource clean up. Added a separate dedicated thread to publish messages.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-15T08:55:56Z","2021-04-21T18:35:13Z"
"","9323","[bazel] Ensure third party files are available for browser testing","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Ensure third party files are available for browser testing  ### Motivation and Context  The changes fix the Chrome and Firefox functional tests that rely on third party files/extensions.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-23T12:04:48Z","2021-03-23T22:24:13Z"
"","9649","[grid] Ensure the RemoteNode can reach the LocalNode during tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Ensure the RemoteNode can reach the LocalNode during tests  ### Motivation and Context  Tests failed intermittently with a connection error. The failing tests had a common use case of the RemoteNode trying to reach the LocalNode. Adding a PassthroughHttpClient factory has helped fix this.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2021-07-13T11:46:21Z","2021-07-14T05:49:20Z"
"","9593","[grid] Ensure the Node registers itself again once it is marked down","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Ensure the Node registers itself again once it is marked down  ### Motivation and Context  Related to https://github.com/SeleniumHQ/docker-selenium/issues/1257. Though the changes don't fix the issue, it is able to register the node again once it starts sending the heartbeat after being removed from the Grid. That way a Hub restart is not required.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-06-18T10:24:23Z","2021-09-28T09:51:03Z"
"","9331","Ensure extension is available on the path for Firefox tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Ensure extension is available on the path for Firefox tests  ### Motivation and Context   Firefox unit test was unable to fix a resource on the path. The changes fix that.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-24T09:37:03Z","2021-03-24T14:10:29Z"
"","9510","[grid] Ensure Distributor rejects request immediately if no matching slot exists in the Grid","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Ensure Distributor rejects request immediately if no matching slot exists in the Grid  ### Motivation and Context  When a new session request comes in, the Distributor polls the queue based on the available matching capabilities of the Nodes in the Grid. Hence, if a new session request requests for a capability that does not exist in the Grid, it sits in the queue until it times out instead of been rejected immediately. The changes fix that and provide the client correct error message about the request.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-25T06:17:56Z","2021-05-27T05:42:19Z"
"","9736","[grid] Delete existing sessions if the Node is restarted","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Delete existing sessions if the Node is restarted  ### Motivation and Context  If the Node is restarted, the Session Map might have some leftover sessions. In this case, they need to be deleted.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-08-13T04:54:58Z","2021-08-13T08:58:28Z"
"","9838","[grid] Consider max-session value while selecting the slot and identifying Node capacity","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Consider max-session value while selecting the slot and identifying Node capacity  ### Motivation and Context  Node allows configuring max-session value. In the current implementation, to ensure Grid is not underutilized, multiple threads are used to reserve a slot and create the session. As a result, multiple sessions are created simultaneously which often exceeds the max-session value and disregards it. To avoid overloading the machine, it is crucial that the max-session value is considered. The changes fix this by checking for that the current number of sessions do not exceed the max-session value during slot selection.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-09-17T13:54:13Z","2021-09-20T19:58:28Z"
"","8938","chore: Use subfolder for NPM package homepage","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Changes the NPM package homepage to the folder where the package contents are located  ### Motivation and Context  When trying to trace back something in the NPM package so I could look at the source it was initially not super clear where to find the source for this package in the larger repo  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","nschonni","2020-12-08T23:47:29Z","2020-12-18T17:36:38Z"
"","8908","Add HTTP response span for grid status. Add tracing for GraphqlHandler.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Changes are related to #8883.  ### Motivation and Context  All incoming requests need to be a part of event-log. GridStatusHandler had a missing event-log. This change fixes that.  Graphql requests did not have tracing and the changes address that. As a result, now all incoming request are logged as event-logs with HTTP attributes.  Additionally, as a part of this, verified if event-logs are available for all path defined in SessionMap, Node, Distributor and Queuer.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-11-26T09:11:52Z","2020-11-26T10:57:38Z"
"","8939","[node] Update ESLint setup","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Bump to the latest versions of the linting plugins and autofix issues  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","nschonni","2020-12-09T01:23:35Z","2020-12-17T23:05:29Z"
"","9857","[js] Allow builder to set a single arbitrary capability","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Allow builder to set a single arbitrary capability. Fixes #9830.  ### Motivation and Context  Details are explained in #9830  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-09-21T06:36:51Z","2021-09-29T14:44:28Z"
"","9157","[grid-ui] Align the stereotype information for each Node","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Align the stereotype information for each Node  ### Motivation and Context  The ui displays stereotype information for each node. The changes align the UI element to display it in a uniform manner.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.  Before ![image](https://user-images.githubusercontent.com/10705590/107203438-74bde880-6a21-11eb-963e-b523204ad446.png) After ![image](https://user-images.githubusercontent.com/10705590/107203419-6e2f7100-6a21-11eb-9007-3ebcebf14bbd.png)","closed","","pujagani","2021-02-08T09:53:07Z","2021-02-08T10:05:04Z"
"","9076","[py] Added from .common.keys import Keys (same as selenium.webdriver.common.keys.Keys)","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  After this change we can simply import the Keys by running,  `selenium.webdriver import Keys`  Instead of,  `from selenium.webdriver.common.keys import Keys`  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","shreyanavigyan","2021-01-20T20:10:34Z","2021-01-21T09:06:55Z"
"","8903","Add print page command to python binding","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adding support for 'print' endpoint in python binding.  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","raju249","2020-11-24T10:49:28Z","2020-12-03T15:43:39Z"
"","9161","[grid] Make event bus listener for Queuer and LocalQueue thread-safe","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adding Rentrant lock to ensure thread-safety.   ### Motivation and Context  Running concurrent tests on the Grid leads to some sessions getting created but hanging indefinitely. This could be potentially due to a race-condition while sending the response back to the client.  Running concurrently tests on Grid also leads to an error while sending to event bus from the LocalNewSessionQueue, this also could be potentially due to firing the event after releasing the lock. The changes attempt to fix these issues.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","pujagani","2021-02-10T08:19:50Z","2021-02-10T21:57:07Z"
"","8980","[grid] Add lock while finding a node in GridModel setSession() method. Fix a log typo.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Adding a lock while finding a node in GridModel.   ### Motivation and Context  All methods using `findNode()` in GridModel grab a lock before calling it, except `setSession()`. LocalDistributor returns a Supplier on reserving a slot which calls setSession() https://github.com/SeleniumHQ/selenium/blob/5543c5879374ec4649a02ac88284a9cad94d6779/java/server/src/org/openqa/selenium/grid/distributor/local/LocalDistributor.java#L383 .  Since 'findNode()' loops over a HashSet(), in a multi-threaded environment this might cause errors. The changes add a lock in setSession().    ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-12-18T07:38:59Z","2020-12-18T09:18:48Z"
"","9499","[grid] Add trace headers to SessionRequest for distributed Grid tracing","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add trace headers to SessionRequest for distributed Grid tracing  ### Motivation and Context  When run in Hub-Node or fully distributed Grid mode, the trace for a new session request was incomplete between New Session Queue and Distributor. The changes fix that by ensuring the trace context is propagated correctly between services. This is done by adding tracer headers and using them to recreate the trace context to create the span.  Thank you @shs96c for providing the right direction via https://github.com/shs96c/selenium/tree/queue-tracing.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-21T13:51:13Z","2021-05-21T15:02:57Z"
"","9471","[grid] Add thread pool for driver service startup","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add thread pool for driver service startup.  ### Motivation and Context  Driver service startup uses CompletableFuture that uses the ForkJoinPool's common pool by default. This might have performance-related implications when sessions run in parallel. The changes add a fixed thread pool that is used by the CompletableFuture.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-12T15:15:11Z","2021-05-13T05:13:42Z"
"","9490","[grid] Add spans to new session queue remove functions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add spans to new session queue remove functions  ### Motivation and Context  To ensure the tracing works when Grid is running in a fully distributed node, two spans were missing. The changes add spans for functions that get the next available request that matches the empty slot which in turn removes the matching request from the queue.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-19T12:35:14Z","2021-05-19T12:53:23Z"
"","9466","[java] Add remote web driver related interfaces for dynamic proxy creation","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add remote web driver related interfaces for dynamic proxy creation  ### Motivation and Context  Fixes #9416. It is related to the motivation of #8346 (will help create a Proxy due to the interface).   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-11T13:31:12Z","2021-05-12T06:18:58Z"
"","9026","[grid] Add registration secret to the New Session Queuer","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add registration secret to the New Session Queuer endpoints.  ### Motivation and Context  The Grid uses registration secret for endpoints that change the state of the Grid. Hence, for New Session Queuer endpoints that effect the Grid state, registration secret filter is added.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [X] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-06T05:58:29Z","2021-01-07T11:47:03Z"
"","9560","Add Redis backed distributor","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add Redis backed distributor  ### Motivation and Context  Distributor maintains the state of the Grid using Grid Model.  The changes extract the Grid Model  into an interface. The existing Grid Model implementation is moved into LocalGridModel. The redis backed Grid Model aims at allowing multiple distributors since the state will not longer be stored locally. All the distributors can fetch the grid state from the central store i.e Redis.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-06-10T13:20:05Z","2021-06-10T13:37:04Z"
"","9434","[java] Add proxy support to NettyClient","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add proxy support to NettyClient.   ### Motivation and Context  Selenium 4 Alpha 4 onwards, AsyncHttpClient was used. This version onwards proxy support via Java properties or Proxy selector was not supported. The changes add the config to support the same and ensure backward compatibility to earlier versions.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-03T14:16:14Z","2022-03-09T22:59:35Z"
"","9299","[java] Add null check before returning isDisplayed value","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add null check before returning isDisplayed value. Fixes #9266 from Java client end.  ### Motivation and Context  Related to the issue mentioned above when isDisplayed() throws an NullPointerException randomly when running with the Firefox driver. To get the result of isDisplayed() function the script https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver/atoms/isDisplayed.js is run on the driver end.  Sometimes the Firefox driver returns null and a null check would safeguard against that. It could be similar to https://github.com/SeleniumHQ/selenium/issues/4555.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-18T06:07:17Z","2021-03-18T11:42:59Z"
"","9512","[grid] Add http logs flag to allow http trace event logs","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add http logs flag to allow http trace event logs  ### Motivation and Context  Trace event logs print at FINE log level by default. The changes add a ""--http-logs"" flag to print Http trace events at INFO level. This ensure backwards feature compatibility with previous versions.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-25T12:43:29Z","2021-05-25T15:31:53Z"
"","9085","[grid] Add GraphQL support for getting session queue requests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add GraphQL query to return session queue requests and queue size.  ### Motivation and Context  The information returned by GraphQL can be leveraged by Grid UI to show pending requests and request details.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-22T11:42:14Z","2021-01-22T14:51:01Z"
"","8943","[grid] Add error event-logs when capabilities are not found.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add event-logs to capture error when requested capabilities do not exist in any of the nodes while creating a new session  ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-12-10T11:17:50Z","2020-12-14T10:10:23Z"
"","9078","Add endpoint to return new session request queue contents","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add endpoint to return new session request queue contents  ### Motivation and Context  The end-user might want information regarding the pending requests in the Grid's new session queue. The changes add an endpoint that provides a list of capabilities from the requests in the queue. Such information can be leveraged to spin-up/scale nodes.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-21T07:47:51Z","2021-01-21T15:18:04Z"
"","9043","[grid] Add endpoint to display browser, platform and version wise grouping of the requests in the New Session Queue.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add endpoint to display new session queue info.  ### Motivation and Context  The queue size does not suffice in providing enough information to stand up or scale nodes. Hence, the changes introduce queue info endpoint which provides browser, platform and version wise grouping and count of the requests waiting in the new session queuer.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-13T12:19:40Z","2021-01-20T11:08:32Z"
"","9038","Add disable escaping option for json parsing. Fix string escaping for event-logs.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add disable escaping option for json parsing.   ### Motivation and Context  The event-logs attributes like session payload and capabilities leverage the built-in json parse to convert the objects to json strings. By default, the escape characters are included in the string. It resulted in inconsistent log string with some fields having escape characters and some being printed normally. The changes added, fix this by adding a disable escaping option.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","pujagani","2021-01-13T11:36:28Z","2021-01-25T12:28:31Z"
"","9094","[grid] Add capabilities as json string attribute. Fix span status based logging.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add capabilities as json string attribute. Fix span status based logging.  ### Motivation and Context  The capabilities attribute of event-log was printing capabilities object as a string instead of json string. The changes fix this. Additionally, the assumption that the default span status is ""ok"" is not valid in newer OpenTelemetry version, this resulted in a bug where the normal logs are printed at `WARN` level instead of `FINE`. The changes fix this.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-01-25T14:05:05Z","2021-01-31T19:28:47Z"
"","9520","[grid] Add a flag to allow the Distributor to reject a request for unsupported capabilities","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add a flag to allow the Distributor to reject the request for unsupported capabilities  ### Motivation and Context  Related to https://github.com/SeleniumHQ/selenium/pull/9510#issuecomment-849179607  If unsupported capabilities the Distributor will reject the request only if the flag is set to true. This change is made to ensure feature compatibility of Session Queue with Selenium 3 and to support cloud Grid setup that spin up Nodes on demand.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-05-27T08:53:12Z","2021-05-27T09:59:08Z"
"","8940","[grid] Make distributor pick up session requests from the queue only if the grid is not full","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add a feature to pick up new session requests from the new session queue only if the grid is not busy.  ### Motivation and Context  Currently, the Distributor will pick up requests from the queue immediately as soon as they arrive and if the Grid is busy then it will initiate a retry. Ideally, the Distributor should check if there are any new requests and if the Grid can handle the new request and accordingly poll the new session queue.  New session queue is actually a staging area for the new requests. The changes address this.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-12-09T06:56:23Z","2020-12-22T05:08:27Z"
"","9821","[js] Add a check for Grid CDP endpoint","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add a check for Grid CDP endpoint and accordingly return the URL for websocket connection. Fixes #9779.  ### Motivation and Context  When a remote web driver is built and a create CDP connection request is made, it just waits for an indefinite period of time. This happens because the client tries to send a request to the endpoint of this format ""http://ws://session/{session-id}/se/cdp"" to the Grid server. Since the Grid does not recognize this, the client does not receive any response. This is fixed by checking if the endpoint received from ""se:cdp"" capability is a Grid CDP endpoint and accordingly it is handled. The client then uses this endpoint to make a websocket connection with the Grid.   ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-09-14T07:05:35Z","2021-09-20T13:19:23Z"
"","8968","[grid] Add log-level config option","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description  Add ""log-level"" config option that can be passed while running the server jar.  ### Motivation and Context  The default log level is INFO. If the server user wants to see logs at different level, then currently the only option is update the code. But since that might not be a feasible option for every user, a config flag that can be passed with the desired log-level is added. By default the log level defaults to INFO.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2020-12-14T12:23:57Z","2020-12-15T11:49:44Z"
"","9270","[grid]  Update session slot to return Either for error propagation. Fix http response.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Update session slot to return Either for error propagation. Fix HTTP response.  ### Motivation and Context  Related to ensuring that the error is bubbled up all the way from the driver to the client. The changes update the session slot's method to return Either in order to encapsulate the error. The local node further responds accordingly.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-03-12T10:49:54Z","2021-03-12T12:10:04Z"
"","9579","[grid] Remove new session event listener from Distributor. Shutdown executors in Distributor.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Remove new session event listener from Distributor. Shutdown executors in Distributor.  ### Motivation and Context  The LocalDistributor runs a scheduled thread that polls the queue and creates sessions accordingly. No locks are used while polling the queue and setting the response for request under the assumption that only one thread executes it. However, there was an even listener that explicitly also called the polling queue related code. This was triggered when the request was added or retried.  This led to the Grid hanging after running tests using multiple browsers (ideal candidate for retrying sessions).   The new sessions were created but the response was not sent back to the client. Leading to a full queue with no progress.   The issue was less obvious in Standalone mode which uses Guava as the event bus and it uses a single thread to do all operations. The issue was more prominent while using the Grid in Hub-Node or fully distributed mode which uses the Selenium wrapper over ZeroMQ event bus which has a different threading model underneath.  So multiple threads accessing the non-thread-safe code was creating the issue. The changes in this PR fix this.    ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-06-15T07:36:37Z","2021-06-15T08:23:35Z"
"","9061","Add follow up changes from Print Page Java PR","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Follow up of suggestions from https://github.com/SeleniumHQ/selenium/pull/8991 ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2021-01-19T10:45:09Z","2021-01-21T13:28:01Z"
"","9128","[py] deprecate all but `Options` and `Service` arguments in driver instantiation.","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   Deprecated remaining `__init__` params from `chromium` and `IE` webdriver class I haven't touched the `chrome` driver since all the params are already deprecated if not deprecated in the parent `chromium` class.  Left out `browser_name` & `vendor_prefix` for chromium driver family  ### Motivation and Context   Fixes #9125   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","itsjwala","2021-02-02T05:26:21Z","2021-02-05T11:16:10Z"
"","9622","[grid] Start heartbeat after registering the Node","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context  The change for ensuring heartbeat is always sent once Node starts is valid and correct. However, it has also lead to test failures for tests using the LocalNode. The changes revert the change potentially causing the test failures.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2021-07-02T08:41:24Z","2021-07-02T13:12:55Z"
"","9875","attempt to add metrics to LocalDistributor","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context  https://github.com/SeleniumHQ/selenium/issues/9794  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ X ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ X] My change requires a change to the documentation. - [ X ] I have updated the documentation accordingly. - [ X ] I have added tests to cover my changes. - [ X ] All new and existing tests passed.  Following a conversation in (issue 9794)[https://github.com/SeleniumHQ/selenium/issues/9794]  I added new Method for metrics collection on register node and remove for un register","closed","C-grid,","dratler","2021-09-29T19:19:19Z","2022-02-23T10:34:05Z"
"","8991","Add Print page support in Java","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   Fixes https://github.com/SeleniumHQ/selenium/issues/8802  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-java,","raju249","2020-12-22T08:49:17Z","2021-01-19T10:30:31Z"
"","9631","adding commandName","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","R-awaiting answer,","hariprasathj387","2021-07-04T15:55:51Z","2021-07-15T17:58:24Z"
"","8916","[JS] Remove Closure usages in Id atom","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","D-atoms,","AutomatedTester","2020-11-27T15:28:16Z","2021-03-01T15:59:38Z"
"","9783","Single method for clear & send keys for webelement","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","aishwarya-suresh-e2827","2021-09-02T11:01:35Z","2021-09-08T12:46:43Z"
"","9031","[py] Adding initial GH workflow for Python","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-01-07T12:32:43Z","2021-01-07T16:01:25Z"
"","9403","[grid] Split eventbus tests","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","pujagani","2021-04-21T05:56:33Z","2021-04-22T04:26:45Z"
"","9546","[grid] Improving DistributorTest","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-06-04T09:10:11Z","2021-06-04T11:34:47Z"
"","9550","Troubleshoot Python GitHub Actions","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","diemol","2021-06-04T18:44:02Z","2021-06-04T19:03:10Z"
"","9470","[grid] Update JDBC commands of session map info","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","pujagani","2021-05-12T14:22:58Z","2021-05-12T14:54:52Z"
"","9399","adding debug info to the webserver startup","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-04-20T14:03:10Z","2021-07-29T12:04:56Z"
"","9376","Github actions needs investigating...¬†again","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-04-12T12:29:29Z","2021-07-29T12:04:49Z"
"","9296","Checking Chromedriver action","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-03-17T14:22:42Z","2022-06-09T07:45:38Z"
"","9250","[build] Set up python for pinned browsers","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-03-10T10:51:01Z","2021-11-12T13:03:53Z"
"","9235","Selenium 3.141.59 allow cors","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","zcmgyu","2021-03-04T11:18:42Z","2021-03-04T11:19:57Z"
"","9207","[py] Add dataclasses as a dependency to cdp generation","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-02-24T10:10:53Z","2021-11-12T13:03:43Z"
"","9169","why!!!!","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-02-12T10:58:55Z","2021-02-12T11:19:10Z"
"","9141","Firefox CDP support for js binding","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","raju249","2021-02-04T11:23:03Z","2021-02-12T09:10:11Z"
"","9054","Please ignore, trying to fix tox docs","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AutomatedTester","2021-01-15T11:19:21Z","2021-01-15T12:10:40Z"
"","9019","Update README.md","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","Sindhura8","2021-01-03T01:37:31Z","2021-01-03T01:45:27Z"
"","8920","Add print page command to ruby binding","**Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description   ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","raju249","2020-11-30T06:05:31Z","2020-12-18T14:38:44Z"
"","8998","drop not working (react DnD)","**In example I attached console.log in order to define, it works correctly or not. So when drag begins in console appears drag begins when dropping element to destination in console appears drag end.**   ``` python # Generated by Selenium IDE import pytest import time import json from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  class TestDND2():   def setup_method(self, method):     self.driver = webdriver.Chrome()     self.vars = {}      def teardown_method(self, method):     self.driver.quit()      def test_dND2(self):     self.driver.get(""https://codesandbox.io/s/great-montalcini-8cs99"")     self.driver.set_window_size(1552, 840)     time.sleep(20)     self.driver.switch_to.frame(0)               dragged = self.driver.find_element(By.CSS_SELECTOR, "".ant-table-row[index='0']"")     dropped = self.driver.find_element(By.CSS_SELECTOR, "".ant-table-row[index='1']"")     actions = ActionChains(self.driver)     #actions.drag_and_drop(dragged, dropped).release(dragged).release().perform()     actions.click_and_hold(dragged).perform()     actions.move_to_element(dropped).perform()     actions.release(dropped).perform()     time.sleep(15)     self.driver.close() ```   - when I attempting  drop  dragging element  it doesnot works, but in logs test passed 100%  -  pytest 6.1.2 - OS: win10 64x  - selenium 3.141.59 - google chrome  87.0.4280.88","closed","","iamkabulov","2020-12-25T04:56:13Z","2021-09-05T08:27:47Z"
"","9181","[4.0.0-alpha-7 python] How add listeners for events in CDP","* Selenium: 4.0.0-alpha-7 python * Python: 3.7  Hi! I've built 4.0.0-alpha-7 python wheel from source to test CDP functionalities. Specifically I would like to intercept request using [Fetch Domain protocol](https://chromedevtools.github.io/devtools-protocol/tot/Fetch/).  I can enable the domain using `Fetch.enable` command, but I don't see how I can subscribe to events like `Fetch.requestPaused` to intercept the request:  ```py from selenium import webdriver from selenium.webdriver.chrome.options import Options  driver = webdriver.Chrome()  # Enable Fetch domain driver.execute_cdp_cmd('Fetch.enable', cmd_args={})  # How to subscribe to Fetch.requestPaused event?? # driver.add_event_listener ...  ```  Thanks for any help!","closed","","spinlud","2021-02-16T15:04:23Z","2021-09-05T08:19:03Z"
"","9469","> What is the actual bug? Can we have a script to reproduce the behaviour? Narrative descriptions leave lots of room for assumptions.","> What is the actual bug? Can we have a script to reproduce the behaviour? Narrative descriptions leave lots of room for assumptions. Well, thx for your reply, If I know that the bug is, then I will be looking for some solutions, the thing is I have no idea what happened for this error! by the way: the script to reproduce: `Selenium::WebDriver::Firefox::Service.driver_path = ""/geckodriver""     Selenium::WebDriver.logger.level = :info     Selenium::WebDriver.logger.output = 'selenium.log'     options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless'],log_level: :info)     driver = Selenium::WebDriver.for(:firefox,options:options) ` The log will output nothing, I update my firefox to Mozilla Firefox 78.10.0esr, it works smoothly, but my another computer which is also centos7, the firefox version Mozilla Firefox 68.12.0esr, it also works, So I'm deeply confused!  _Originally posted by @ThomasSun001 in https://github.com/SeleniumHQ/selenium/issues/9467#issuecomment-839434366_","closed","","ThomasSun001","2021-05-12T06:41:47Z","2021-09-05T08:03:32Z"
"","9056","Track the DOM changes through Selenium scripts","#Hello All,  We have a web UI which post change need to track DOM changes through events in Selenium Scripts. We tried track  mutation events through Selenium scripts but without success. We have tried putting it in After methods bit did not work.  Pls let us know  Thanks Shambhavi","closed","","Shamz2610","2021-01-15T13:25:02Z","2021-09-05T08:25:04Z"
"","9643","Alternative of puppeteer exposeFunction in selenium-webdriver?","### üöÄ  Feature Proposal *Is there any alternative of puppeteer exposeFunction in selenium-webdriver?** or any way to achieve this functionality?","closed","","aquibzahidisofyrus","2021-07-08T09:41:09Z","2021-09-05T07:58:58Z"
"","8932","ETIMEDOUT connect ETIMEDOUT during run test case using selenium grid (or standalone or selenoid)","### üêõ Bug Report  During run test case on protractor using any selenium remote machine (it could be selenium standalone, or selenoid) the following error occurs from time to time:  ``` ETIMEDOUT connect ETIMEDOUT xx.xx.xx.xx:443           at ClientRequest. (/workdir/node_modules/selenium-webdriver/http/index.js:238:15)           at emitOne (events.js:116:13)           at ClientRequest.emit (events.js:211:7)           at TLSSocket.socketErrorListener (_http_client.js:387:9)           at emitOne (events.js:116:13)           at TLSSocket.emit (events.js:211:7)           at emitErrorNT (internal/streams/destroy.js:64:8)           at _combinedTickCallback (internal/process/next_tick.js:138:11)           at process._tickCallback (internal/process/next_tick.js:180:9)Error  ```  This looks the same issue which was fixed previously: https://github.com/SeleniumHQ/selenium/issues/8129  ### To Reproduce Detailed steps to reproduce the behavior:      have a remote grid (selenium or selenoid would make no difference) deployed on the network, but not on your machine.     running those test(-s) should from time to time display errors about ETIMEDOUT  Expected behavior Test(-s) run without this exception  ### Environment OS: Windows 10 Browser: Chrome  87.0.4280.66 Language: Javascript protractor 7.0 selenium standalone or selenoid","closed","","StanislavKharchenko","2020-12-03T16:35:16Z","2021-09-05T08:30:14Z"
"","9002","[3.x] Add rexml to support Ruby 3","### ‚ö†Ô∏è First PR here, read contributing guidelines, searched for duplicates. This is also an issue in `trunk` branch. I can't run tests on my local machine. Also, Ruby 3.0 should be add to the matrix. I can't understand if the deprecated Grid 3.x is related to this branch. Feel free to close this PR and only consider #9001       ### Description Add rexml to runtime dependencies and net-telnet to development dependencies  ### Motivation and Context `rexml` is a bundled gem in Ruby 3.0  This causes errors with selenium‚Äôs Firefox webdriver when requiring `rexml/document`  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.   ### References  - https://bugs.ruby-lang.org/issues/16485 - ruby/ruby@c3ccf23 - jnunemaker/crack#62 - https://www.ruby-lang.org/en/news/2020/12/25/ruby-3-0-0-released/ - #9001","closed","C-rb,","tagliala","2020-12-27T11:40:28Z","2021-01-13T23:49:41Z"
"","9603","Update package.json to include the repository key","### Title: With the rise in supply chain attacks and OSS dependencies being used as a attack vector, Microsoft is working with our ecosystem partners, such as the Linux Foundation's¬†OpenSSF, to enable OSS consumers to track packages back to their public sources. We've identified that the following packages published to NPM do not report where sources can be found, typically accomplished by including a link to your GitHub repository in your `package.json` REPOSITORY field. This PR was created to add this value, ensuring future releases will include this provenance information. Published NPM packages with repository information: *selenium-webdriver    **Thanks for contributing to Selenium!** **A PR well described will help maintainers to quickly review and merge it**  Before submitting your PR, please check our [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) guidelines. Avoid large PRs, help reviewers by making them as simple and short as possible.     ### Description /  Motivation and Context With the rise in supply chain attacks and OSS dependencies being used as a attack vector, Microsoft is working with our ecosystem partners, such as the Linux Foundation's¬†OpenSSF, to enable OSS consumers to track packages back to their public sources. We've identified that the following packages published to NPM do not report where sources can be found, typically accomplished by including a link to your GitHub repository in your `package.json` REPOSITORY field. This PR was created to add this value, ensuring future releases will include this provenance information. Published NPM packages with repository information: *selenium-webdriver  ### Types of changes #### This is not a contributing change  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)   ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","msftenhanceprovenance","2021-06-25T03:37:34Z","2021-06-25T08:41:45Z"
"","9761","Selenium Remote Web Driver not starting with given Firefox Profile","### Test Case I want to install a custom extension in a Firefox remote web driver. To achieve that I have created a FirefoxProfile and added the custom extension via setExtension. The problem is that the profile I have just created is not added to the Driver instance. Here is the piece of code I have used: ```           File firefoxExtension = new File(""src\\main\\resources\\browser-extensions\\firefox-extension.xpi"");           FirefoxProfile profile = new FirefoxProfile();           profile.addExtension(firefoxExtension);           FirefoxOptions options = new FirefoxOptions();           options.setProfile(profile);           capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS,options);          try {             return new RemoteWebDriver(new URL(""https://"" + username + "":"" + accessKey + ""@""                     + environmentVariables.getProperty(""browserstack.server"") + ""/wd/hub""), capabilities);         } catch (Exception e) {             System.out.println(e);             return null;         } ``` ### System Remote Platform: Windows 10 Firefox version: 68 Selenium: 3.141.59 Selenium Hub: Browser Stack  ### Expected result  1. Browser opened 2. Profile loaded with the extension 3. Browser can be interacted using RemoteWebDriver","closed","","alexfernandezv","2021-08-26T10:20:12Z","2021-09-26T00:06:15Z"
"","9879","Screenshot with remotewebdriver in Python","### How to capture screenshot with remote webdriver in Python  I'm using selenium remote webdriver to drive the UI testing and trying to capture the screenshot when test fails.   I'm using the following but it only works with local webdriver and no screenshot gets captured with remote and I don't see any error/exception as well. Is there a way to capture the screenshot with remote webdriver?  `get_screenshot_as_file(""/path/to/image.png"")`","closed","","LeeseHe","2021-09-30T20:45:17Z","2021-10-31T00:06:33Z"
"","9491","C# WebDriver ChromeOptions LeaveBrowserRunning property not working","### DLL Version Install-Package Selenium.WebDriver -Version 3.141.0  ### Chrome Driver Version & Chrome Version ChromeDriver: 90.0.4430.24  Chrome: 90.0.4430.212(64bit)  ### Code ``` ChromeOptions option = new ChromeOptions(); option.LeaveBrowserRunning = true; using (IWebDriver driver = new ChromeDriver(option)) {     driver.Navigate().GoToUrl(""https://www.google.com""); } ``` ### Expectation When the ChromeDriver quit or close, the Chrome keep open.  ### Result Run the code above, the Chrome will closed when ChromeDriver quit or close.","closed","","Luzemin","2021-05-19T15:14:46Z","2021-09-05T08:03:25Z"
"","9774","[js] Updating rules_nodejs to 4.0.0","### Description Updating rules_nodejs to 4.0.0   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-08-31T16:29:12Z","2021-09-01T07:47:54Z"
"","9211","[js] updating rules nodejs to 3.2.1","### Description Updating rules_nodejs to 3.2.1  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2021-02-24T20:47:04Z","2021-02-25T18:49:21Z"
"","9105","[JS] updating rules_nodejs to 3.0.0","### Description updating rules_nodejs to 3.0.0   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-01-26T17:55:20Z","2021-02-02T07:26:14Z"
"","9244","Introduce select support for js","### Description This PR is the start of the implementation for the select element support class for the JavaScript client. The global documentation already exists and can be found [here](https://www.selenium.dev/documentation/en/support_packages/working_with_select_elements/). The lag of this feature is already noted in the code example boxes on this page. However issue #8721 also mentions this, however it was never solved because the issue lags a template.  ### Motivation and Context Crucial feature for testing and automating.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","open","C-nodejs,","luukvhoudt","2021-03-08T20:33:08Z","2022-03-31T21:23:47Z"
"","9647","[py] fix type hints for selenium.webdriver.remote.file_detector","### Description This PR introduces a module `selenium.types` that contains types reused throughout the codebase. Unfortunately, I forgot to include that in #9606, which caused tests breakage.  ### Motivation and Context The type of the input valid to be typed in a `WebElement` (`Union[str, float, int]`) is required for typing in several modules, so the proposal to avoid duplication is to move it to a common module `selenium.types` used to declare custom types. This approach is often used in large libraries, for example in `tensorflow`.  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-07-12T19:11:36Z","2021-07-13T08:37:28Z"
"","9606","[py] PEP 484 type hints for selenium.webdriver.remote.file_detector","### Description This PR adds type hints to `selenium.webdriver.remote.file_detector`.  ### Motivation and Context This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-06-27T15:38:20Z","2021-07-12T19:12:13Z"
"","9605","[py] PEP 484 type hints for selenium.webdriver.remote.errorhandler","### Description This PR adds type hints to `selenium.webdriver.remote.errorhandler`.  ### Motivation and Context This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-06-27T15:37:17Z","2021-07-16T09:31:42Z"
"","9568","[py] PEP 484 type hints for selenium.webdriver.common.utils","### Description This PR adds type hints to `selenium.webdriver.common.utils`.  ### Motivation and Context This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-06-13T17:10:38Z","2021-06-27T15:14:47Z"
"","9608","[py] PEP 484 type hints for selenium.webdriver.common.print_page_options","### Description This PR adds type hints to `selenium.webdriver.common.print_page_options`.  ### Motivation and Context This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-06-27T17:03:54Z","2021-07-03T11:52:12Z"
"","9827","Require ""uri"" in Selenium::Webdriver container module","### Description This PR adds one line to `rb/lib/selenium/webdriver.rb`:  ```ruby require 'uri' ```  Fixes #9825  ### Motivation and Context  `URI` was gemified in Ruby 2.7 https://github.com/ruby/uri/commit/a4a1d4c8094663585a5e8d9e08b52164cbadf267 and therefore must be manually required to use. I opened issue https://github.com/SeleniumHQ/selenium/issues/9825 illustrating the problem I was running into.  NB: I was not sure how to add tests for this, as this was a bugfix that made the library work correctly.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","flanger001","2021-09-14T18:59:08Z","2021-09-22T08:20:19Z"
"","9482","[py] PEP 484 type hints for common.exceptions and webdriver.support.color","### Description This is the initial PR that adds type hints to Python codebase. Typed modules: * `selenium.common.exceptions`, * `webdriver.support.color`. I have selected those two for the initial typing since they do not depend on any other modules and can be typed in isolation.  ### Motivation and Context The goal of this PR is to configure and add initial integration for the `mypy` tool (checks the type hints validity). It can be run via ```sh $ tox -e mypy ``` or ```sh $ TOXENV=mypy tox ``` Right now it emits 1248 errors, mainly due to missing type hints; the goal is to gradually reduce it to zero. No errors are emitted in modules typed in this PR.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-05-17T21:17:56Z","2021-05-27T18:37:51Z"
"","9840","[py] Fix type hint on chrome option method","### Description This is a followup fix to @AutomatedTester's fix (https://github.com/SeleniumHQ/selenium/commit/95707f2c77ef83fc7e033d437a440c6d9108baa6) which adds string lists to the type hint. Quick code example to repro the bug/fix:  ``` from selenium import webdriver  options = webdriver.ChromeOptions() options.add_experimental_option(""excludeSwitches"", [""enable-automation""]) ```    ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","fergushev","2021-09-17T16:59:50Z","2021-09-20T17:11:39Z"
"","9882","[dotnet] Remove Edge Legacy options","### Description This change removes the `UseChromium` property from EdgeOptions, and removes leftover EdgeHTML-only properties and methods that no longer have any effect with the Chromium EdgeDriver.  ### Motivation and Context In #9166 the decision was made to remove EdgeHTML support from Selenium 4. Capabilities that were only applicable to MicrosoftWebDriver (EdgeHTML) can safely be removed. Now that Edge Chromium is the default and only supported Edge version, the `UseChromium` switch and the related EdgeDriverService constructors can be removed as well.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-dotnet,","bwalderman","2021-10-03T09:29:44Z","2021-10-12T18:27:55Z"
"","9575","[JS] Add support for ChromeDriver `--enable-chrome-logs`","### Description The `--enable-chrome-logs` ChromeDriver option can now be enabled using the Chromium (or Chrome) ServiceBuilder, similarly to the other options provided by ChromeDriver.  ### Motivation and Context  I found this option critically useful for debugging test failures. It can reveal internal Chrome errors, or console errors for the page being tested.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.   I have not added any additional tests because this module appears to be untested at the moment. I don't know enough about this project's test setup to know where to begin with that.","closed","C-nodejs,","Gudahtt","2021-06-15T04:00:32Z","2021-07-16T09:52:10Z"
"","9700","Specify that the ""find_element_by_* ..."" warning is a deprecation warning","### Description Specify that the ""find_element_by_* ..."" warning is a deprecation warning just like all the other deprecation warnings.  ### Motivation and Context This change means that the warning will be suppressed with all other deprecation warnings when `filterwarnings` is called for `DeprecationWarning`.  The following is a demonstration of the issue ``` >>> warnings.filterwarnings(""ignore"", category=DeprecationWarning) >>> driver.find_element_by_id(""id"") :1: UserWarning: find_element_by_* commands are deprecated. Please use find_element() instead ```  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","LeonShams","2021-07-30T22:06:53Z","2021-08-13T13:00:52Z"
"","9336","[py] Allow overriding the default 250 msecs duration of pointer movement","### Description Set the duration of a pointer movement by adding a kwarg `duration=` to `ActionChains` constructor that will percolate down to `PointerInput.create_pointer_move` via `ActionBuilder` and `PointerActions`.  Addresses #7281.  ### Motivation and Context  There is a default duration of 250 msecs (`DEFAULT_MOVE_DURATION`)  set in `PointerInput`. However `PointerActions`, a consumer of the method `PointerInput.create_pointer_move`, does not override this  duration. Thus every pointer move incurs 250 msecs.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-py,","space88man","2021-03-25T23:26:27Z","2021-04-08T16:30:28Z"
"","9046","Introduce a new http command-executor","### Description Revamp the `RemoteWebDriverBuilder`  ### Motivation and Context The current implementation isn't great, and doesn't do a whole pile of things that people might find useful. This rewrite resolves those issues.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [X] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-java,","shs96c","2021-01-13T14:14:43Z","2021-01-18T10:22:31Z"
"","9223","[js] resolve file path","### Description Resolves mutation-listener file path.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-03-01T05:45:59Z","2021-03-03T07:47:20Z"
"","9362","[JS] Remove legacy action API support","### Description Replacing PR #9116   This PR removes support for legacy actions. And also bridge mode support for action class which was used to translate actions to leacgy API  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-nodejs,","harsha509","2021-04-06T17:58:41Z","2021-04-08T09:05:11Z"
"","9239","[JS] Remove support for Edge HTML","### Description Removing edge legacy support as discussed in [here](https://github.com/SeleniumHQ/selenium/issues/9166)   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-03-05T15:31:53Z","2021-03-15T14:32:46Z"
"","9309","[java] Refactoring OutputType.FILE#save","### Description Refactoring leveraging Java 7's Files class.  ### Motivation and Context A refactoring which allows us to save one extra try/catch nested block.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alb-i986","2021-03-19T11:06:45Z","2021-04-03T15:45:37Z"
"","9806","demo of drag and drop not working","### Description Our current html for demo of drag and drop is using a JS implementation and not the `draggable=""true""` HTML elements  ### Motivation and Context This demonstrates the failure of Selenium to properly do a drag and drop which is indicated by the failing wpt tests. It further shows that the passing wpt tests might not also be accurate since this code shows drivers unable to drag/drop by offset as well.  https://wpt.fyi/results/webdriver/tests/perform_actions/pointer.py?label=experimental&label=master&aligned","closed","","titusfortner","2021-09-08T20:07:01Z","2021-09-21T23:16:40Z"
"","9801","Fix typo in python webdriver for IE","### Description Minor typo fixes: - ""a Options object"" -> ""an Options object"" - ""if Options object also used"" -> ""if an Options object is also used""  ### Motivation and Context Readability  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","jacobtylerwalls","2021-09-08T00:26:18Z","2021-09-08T11:31:35Z"
"","9308","[java] Fix getScreenshotAs: avoid unnecessary conversions","### Description I've noticed that the getScreenshotAs methods were not leveraging `OutputType#convertFromPngBytes`; instead, they were all using `OutputType#convertFromBase64Png`, **even when the raw bytes was what we got from the Server**.   ### Motivation and Context   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","alb-i986","2021-03-19T10:36:13Z","2021-04-03T16:17:50Z"
"","9192","Additional Python type hints","### Description I wasn't able to get the right suggestion for the code completion using pylance in vs code. That's why I started adding a few lines to improve the suggestions  ### Motivation and Context  I made these changes because I was working on a personal project and having those ""type hints"" really helped me  ### Types of changes I only changed a few lines adding type hints. If this kind of changes are welcomed I'll continue to update the hints in the future when I use selenium and I need it  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","AlbertoCentonze","2021-02-18T19:01:25Z","2021-03-11T05:44:31Z"
"","9240","Pass options to RemoteWebDriver","### Description I believe that was the original intention of code in c23e4406a2a94f6546fe3bc69dcd9662126dc7d0 - it updates or creates the options object, but it doesn't use it later.  This reverts #9208 and passes options to the super class.  In case passing desired_capabilities instead of options to super class is really intended, a lot of code dealing with the `options` object can be removed because it is never used here.  CC @Dmitri-Sintsov, @earendil, @AutomatedTester   ### Motivation and Context  Please see #9188, #9208 and #7348  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","nijel","2021-03-07T10:20:43Z","2021-03-10T11:54:21Z"
"","9354","[java] Improving exception when server returns 504 (WIP)","### Description Here I'm adding one extra condition to `W3CHttpResponseCodec#decode` in order to specifically handle 504 Gateway Time-out server errors.  This fix is very similar to the fix that was applied in 6a9c546 (see #7792).  ### Motivation and Context  While running a test on a Selenium Grid (v3.141.59), I got the following pretty **unfriendly** exception upon a `WebElement#click` call:  ``` org.openqa.selenium.json.JsonException: Unable to determine type from:  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed. (note: I only ran _small_ tests)   PS: I was wondering if it makes sense to extend this special handling logic to **any** 4XX/5XX errors, instead of only to 405 and 504. I mean, I would expect the server to return a Json only when the HTTP status is 200.  I did some research and I found that `AbstractHttpResponseCodec` (the superclass of `W3CHttpResponseCodec`) is already doing what I was thinking:  https://github.com/SeleniumHQ/selenium/blob/fcfbc6ba2582d67704f62a728f82fbb09e447ee9/java/client/src/org/openqa/selenium/remote/codec/AbstractHttpResponseCodec.java#L105  On the other hand, I also see that in W3CHttpResponseCodec there's a line which expects to get a JSON together with a 500 error  üòï  https://github.com/SeleniumHQ/selenium/blob/fcfbc6ba2582d67704f62a728f82fbb09e447ee9/java/client/src/org/openqa/selenium/remote/codec/w3c/W3CHttpResponseCodec.java#L117  @shs96c can you maybe spread some light? Tagging you as the author of `W3CHttpResponseCodec`  Thanks!","closed","","alb-i986","2021-04-03T22:10:34Z","2021-05-25T16:32:27Z"
"","9090","Fix 'webview2' browser name for Edge python options","### Description Fixing the casing of the browserName capability for Edge WebView2. It should be `webview2`.  ### Motivation and Context The previous spelling was a typo. MsEdgeDriver expects the capability to match `webview2` (case sensitive). This was already fixed for C# in #8455.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","","bwalderman","2021-01-22T21:02:26Z","2021-01-22T23:10:45Z"
"","9330","[py] Fix converting list of tuples to str in send_keys","### Description Fixes a bug in converting a tuple of values passed to WebElement.send_keys method  ### Motivation and Context Detecting local files is broken in the 4.0.0.b2.post1 version  ### Types of changes - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)","closed","C-py,","GeyseR","2021-03-24T08:04:22Z","2021-04-20T12:20:53Z"
"","9022","Updated CHANGELOG","### Description Fixed version number for changes in v3.150.1.1  ### Motivation and Context Fixes a typo in the documentation  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change) - [x] Documentation  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","icnocop","2021-01-05T08:44:37Z","2021-01-05T09:15:54Z"
"","8913","README: Update docs for running browser tests","### Description Clarify that tests can be run in the current X-server, and running in xvfb or xnest is optional. Mention `--run_under`, which might be an easier way to run the tests.  ### Types of changes - [x] Improved documentation  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","ulfjack","2020-11-27T00:17:44Z","2020-11-27T10:40:34Z"
"","9771","Allows None to be set for the sameSite attribute","### Description Allows None to be set while adding sameSite cookies ### Motivation and Context Fixes #9746   ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","gpt14","2021-08-29T13:52:56Z","2021-09-08T10:59:32Z"
"","9073","[JS] Adding support for /computedlabel (getAccessibleName)","### Description Adding support for endpoint /computedlabel as `getAccessibleName()`  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-01-20T14:03:52Z","2021-01-22T00:40:22Z"
"","8990","[JS] Adding support for computedrole","### Description Adding support for computedrole  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2020-12-22T06:27:40Z","2021-01-03T20:39:33Z"
"","9587","[py] Add async web driver wait","### Description Adding asynchronous web driver wait helps a lot in using Python selenium alongside asynchronous codes. A big part of using selenium is finding the elements and their status in the [DOM](https://de.wikipedia.org/wiki/Document_Object_Model). With the addition of this feature. We can do these things asynchronous  ### Motivation and Context  Helps selenium to use alongside asynchronous codes ### Examples ## Example 1 ``` import asyncio  from selenium import webdriver from selenium.webdriver.support.wait import AsyncWebDriverWait  async def check_logo(driver):       return bool(driver.find_element_by_id(""logo""))  async def wait_until_logo_loaded():        driver = webdriver.Chrome()        driver.get(""https://example.com"")        driver_wait = AsyncWebDriverWait(driver,60)        await driver_wait.until(check_logo)        print(""logo found!"")  async def do_somethings():       while 1:           await asyncio.sleep(10)           print(""i'm doing something"")   asyncio.ensure_future(do_somethings) asyncio.ensure_future(wait_until_logo_loaded) asyncio.get_event_loop().run_forever() ``` In this example when the browser is waiting. The do_something function is running at the same time  ## Example 2  ``` import asyncio import aiohttp  from selenium import webdriver from selenium.webdriver.support.wait import AsyncWebDriverWait  async def check_paragraph_text(driver):       paragraph_text` = driver.find_element_by_id(""para"").text       async with aiohttp.ClientSession() as session:         async with session.get(f'https://example.com/check_word={paragraph_text}') as response:             html = await response.text()             return html == ""true""                     async def wait_for_paragraph_text():        driver = webdriver.Chrome()        driver.get(""https://example.com"")        driver_wait = AsyncWebDriverWait(driver,60)        await driver_wait.until(check_paragraph_text)        print(""The text of the paragraph is now correct!"")  async def do_somethings():       while 1:           await asyncio.sleep(10)           print(""i'm doing something"")   asyncio.ensure_future(do_somethings) asyncio.ensure_future(wait_for_paragraph_text) asyncio.get_event_loop().run_forever() ``` In this example we send a request to a site to check if the text of the paragraph is appropriate. the do_something function continues to work even when sending a request  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [X] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","mostafa-arshadi","2021-06-16T21:07:45Z","2021-07-16T10:26:37Z"
"","9561","Add the debuggerAddress option to chromium.js","### Description Adding a setter for Chromium's debuggerAddress capability. This is available in other language bindings but was missing from the JS bindings.  ### Motivation and Context Chromium-based drivers provide the `debuggerAddress` option to let the user attach to an already-running browser instance at the specified address instead of launching a new one. One example where this is useful is certain WebView2 (WV2) scenarios. Users may want to test the web portion of an app that embeds WV2, but need to launch the app outside WebDriver first and drill through some native UI in order to activate the WV2 they are trying to test.  ### Types of changes  - [X] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [X] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [X] My change requires a change to the documentation. - [ X] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [X] All new and existing tests passed.","closed","C-nodejs,","bwalderman","2021-06-10T22:46:13Z","2021-07-15T17:54:13Z"
"","9854","Allow commands to be loaded via the ServiceLoader","### Description  When adding commands via the Augmenter, it is sometimes helpful to provide an actual command too. This change allows drivers to specify new commands and add them as necessary.  ### Types of changes - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","shs96c","2021-09-20T19:02:59Z","2021-09-20T20:22:23Z"
"","9101","Modify: Updating year in LICENSE and NOTICE doc","### Description  Updating year in LICENSE and NOTICE doc.   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","harsha509","2021-01-26T06:32:43Z","2021-01-26T10:42:26Z"
"","9525","[py] PEP 484 type hints for selenium.webdriver.remote.utils","### Description  This PR adds type hints to `selenium.webdriver.remote.utils`.  ### Motivation and Context  This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-05-27T20:32:19Z","2021-06-27T15:14:30Z"
"","9524","[py] PEP 484 type hints for selenium.webdriver.common.timeouts","### Description  This PR adds type hints to `selenium.webdriver.common.timeouts`.  ### Motivation and Context  This is a follow-up of #9482 to address #9480.  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist  - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","hoefling","2021-05-27T20:20:54Z","2021-06-13T15:50:08Z"
"","9523","[py] Run type checks in CI and report typing coverage to codecov","### Description  This PR adds another Github action that runs type checks (using the `mypy` toxenv) and reports the current status to https://codecov.io. An example report, generated from this branch in my fork, can be viewed [here](https://codecov.io/gh/hoefling/selenium/tree/95450a15332092e285819de8e49f789907d5c9a9/): in the typing context, `100%` coverage means all types could be successfully resolved and verified, while `","closed","","hoefling","2021-05-27T20:07:35Z","2021-07-16T10:34:48Z"
"","9007","Add rexml dependency","### Description  Since ruby 3.0.0, rexml is a bundled gem. So it must be depend explicitly.  ### Motivation and Context  https://stackoverflow.com/questions/65479863/rails-6-1-what-is-preventing-tests-from-running/65480744#65480744  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","C-rb,","znz","2020-12-28T16:37:45Z","2021-06-07T03:35:49Z"
"","9008","[rb] Fix deprecation warnings for Ruby 2.7 in 3.x","### Description  Same as https://github.com/SeleniumHQ/selenium/commit/ee994fe79e37fe6ed4050aac1bf4b0befb0d5338 but in the remote driver that was forgotten  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","rafaelfranca","2020-12-28T23:24:33Z","2020-12-29T01:08:29Z"
"","9577","[py] Fix deprecation warnings for Safari","### Description  Minor fix: Modifies the Safari webdriver initialization depreciation warnings to work with the default arguments.  ### Motivation and Context  Currently, depreciation warnings pop up for arguments that were never passed.  ```python >>> webdriver.Safari() DeprecationWarning: port has been deprecated, please set it via the service class DeprecationWarning: reuse_service has been deprecated, please use the Service class to set it DeprecationWarning: quiet has been deprecated, please use the Service class to set it ```  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] All new and existing tests passed.","closed","","LeonShams","2021-06-15T06:32:06Z","2021-07-02T09:49:15Z"
"","8976","[node] Fix typo: tracingCategories -> traceCategories","### Description  Fix a typo in the documentation for `setPerfLoggingPrefs` of the `chromium.Options` class  ### Motivation and context  According the [ChromeDriver docs](https://chromedriver.chromium.org/capabilities#TOC-perfLoggingPrefs-object) this field is called `traceCategories` not `tracingCategories`. Further I'm getting the following error when trying to use `tracingCategories`. Using `traceCategories` fixes it.  This is using ChromeDriver 87.0.4280.20 (c99e81631faa0b2a448e658c0dbd8311fb04ddbd-refs/branch-heads/4280@{#355}) on Windows.  ``` InvalidArgumentError: invalid argument: cannot parse capability: goog:chromeOptions from invalid argument: cannot parse perfLoggingPrefs from invalid argument: unrecognized performance logging option: tracingCategories     at Object.throwDecodedError (D:\github\andrewiggins\tachometer\node_modules\selenium-webdriver\lib\error.js:517:15)     at parseHttpResponse (D:\github\andrewiggins\tachometer\node_modules\selenium-webdriver\lib\http.js:655:13)     at Executor.execute (D:\github\andrewiggins\tachometer\node_modules\selenium-webdriver\lib\http.js:581:28)     at processTicksAndRejections (node:internal/process/task_queues:93:5) {   remoteStacktrace: 'Backtrace:\n' +     '\tOrdinal0 [0x007DECE3+3337443]\n' +     '\tOrdinal0 [0x006BF041+2158657]\n' +     '\tOrdinal0 [0x00546FA8+618408]\n' +     '\tOrdinal0 [0x004B83DA+33754]\n' +     '\tOrdinal0 [0x004BAB74+43892]\n' +     '\tOrdinal0 [0x004B72A3+29347]\n' +     '\tOrdinal0 [0x004BAB74+43892]\n' +     '\tOrdinal0 [0x004B515D+20829]\n' +     '\tOrdinal0 [0x004E4F6C+216940]\n' +     '\tOrdinal0 [0x004E4C2E+216110]\n' +     '\tOrdinal0 [0x004E5D4B+220491]\n' +     '\tOrdinal0 [0x004E5BFC+220156]\n' +     '\tOrdinal0 [0x004E181B+202779]\n' +     '\tOrdinal0 [0x004C3D74+81268]\n' +     '\tOrdinal0 [0x004C4D6E+85358]\n' +     '\tOrdinal0 [0x004C4CF9+85241]\n' +     '\tOrdinal0 [0x006D6F2C+2256684]\n' +     '\tGetHandleVerifier [0x00962FAC+1478332]\n' +     '\tGetHandleVerifier [0x00962AFD+1477133]\n' +     '\tGetHandleVerifier [0x0096AAD8+1509864]\n' +     '\tGetHandleVerifier [0x0096369E+1480110]\n' +     '\tOrdinal0 [0x006CD6BD+2217661]\n' +     '\tOrdinal0 [0x006D89AB+2263467]\n' +     '\tOrdinal0 [0x006D8AEF+2263791]\n' +     '\tOrdinal0 [0x006ED363+2347875]\n' +     '\tBaseThreadInitThunk [0x76D3FA29+25]\n' +     '\tRtlGetAppContainerNamedObjectPath [0x772B75F4+228]\n' +     '\tRtlGetAppContainerNamedObjectPath [0x772B75C4+180]\n' } ```  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [ ] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","andrewiggins","2020-12-17T03:45:06Z","2020-12-17T09:25:24Z"
"","9158","[nodejs] code cleanup first iteration","### Description  Clean up code of the javascript/node/selenium-webdriver folder iteration first. assert.deepEqual - deprecated, updated to assert.deepStrictEqual assert.equal - deprecated, updated to assert.strictEqual  ### Motivation and Context  Cleanup javascript/node/selenium-webdriver folder and variables declaration aligning  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","potapovDim","2021-02-08T20:42:21Z","2021-10-23T13:00:16Z"
"","9456","make HttpRequestData properties settable","### Description  Changed `internal set` to `set` for the fields in `HttpRequestData`.   These fields need to me modifiable from outside the assembly in some way for request transformation to work properly. This is the most direct fix for #9455.  ### Types of changes  - [x] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [ ] My change requires a change to the documentation. - [ ] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","doctor-house","2021-05-07T20:04:04Z","2021-06-04T18:15:35Z"
"","9395","[JS] Allow relativeby with findElement","### Description  Allow RelativeBy to work with findElement. * Returns: first resolved element from array of elements * throws: NoSuchElementError if no element is found  ### Motivation and Context   ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [x] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-04-19T15:47:03Z","2021-04-19T15:53:49Z"
"","9396","[JS] Allow relativeby with findElement","### Description  Allow RelativeBy to work with findElement.  * Returns: first resolved element from array of elements * throws: NoSuchElementError if no element is found  ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","","harsha509","2021-04-19T16:17:35Z","2021-04-20T11:35:02Z"
"","9167","fix typo by adding missing 's' character to README","### Description  All this pull request does is change the word ""generate"" to ""generates"" by adding an ""s"" to fix what I think is a typo. ### Motivation and Context  This change would hopefully slightly improve the readability of [`README.md`](https://github.com/SeleniumHQ/selenium/blob/trunk/README.md) if we decide to merge it. ### Types of changes  - [ ] Bug fix (non-breaking change which fixes an issue) - [ ] New feature (non-breaking change which adds functionality) - [ ] Breaking change (fix or feature that would cause existing functionality to change)  ### Checklist   - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [ ] I have added tests to cover my changes. - [ ] All new and existing tests passed.","closed","","hamirmahal","2021-02-11T20:17:41Z","2021-02-12T17:20:40Z"
"","9828","Add methods to options classes for w3c compliant capabilities","### Description  Adds methods and tests for: * `setBrowserVersion()` * `setPlatformName()` * ~`setTimeouts()`~ edit: * `setImplicitWaitTimeout()` * `setPageLoadTimeout()` * `setScriptTimeout()`  Timeouts has user-facing `Duration` that gets converted to millis when adding it to capabilities.   ### Motivation and Context  It makes sense to have specific methods for known capabilities, and this is backwards compatible.","closed","C-java,","titusfortner","2021-09-14T21:08:26Z","2021-09-20T19:38:32Z"
"","9494","[Javascript] Add support for installing addon by remote path in Firefox","### Description  Add a `remotePath` parameter to the firefox `Driver.installAddon()` method to allow specifying a path to the addon on the WebDriver server.  ### Motivation and Context Geckodriver allows two ways of specifying an addon to install at runtime: * The addon contents may be specified with the `addon` parameter * The path to the addon may be specified with the `path` parameter  Currently the Javascript code reads the specified path to a string and sends it using the `addon` parameter.  This requires the addon to be in a ""packed"" .xpi or .zip file format.  This change adds the capability to send the path to the remote server instead of the addon data. In this case, the path may be either a .xpi/.zip file or an unpacked directory.  See #8357  ### Types of changes - [x] New feature (non-breaking change which adds functionality)  ### Checklist - [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md) document. - [x] My change requires a change to the documentation. - [x] I have updated the documentation accordingly. - [x] I have added tests to cover my changes. - [x] All new and existing tests passed.","closed","C-nodejs,","nickgaya","2021-05-19T22:05:19Z","2021-12-27T16:13:30Z"
"","9216","[Selenium 4] Config Help Should Display Default Values","## üöÄ Feature Proposal When running `java -jar selenium-server-4.0.0-beta-1.jar hub --config-help`, the example should be the actual default value.  ## Motivation  When creating a config file, it would be nice to work off the defaults and tweak as necessary. However, it's not very clear what these defaults are.  An example of a mismatch is `max-threads = 24`, but the actual default is 200. That's a very different number.  Additionally, within the code, the defaults are scattered in different places. Example: - https://github.com/SeleniumHQ/selenium/blob/7df94e03a481b2292382e084ba2dd202a7be3003/java/server/src/org/openqa/selenium/grid/server/BaseServerOptions.java#L74 - https://github.com/SeleniumHQ/selenium/blob/7df94e03a481b2292382e084ba2dd202a7be3003/java/server/src/org/openqa/selenium/grid/sessionqueue/config/NewSessionQueueOptions.java#L35  It might be nice to have all defaults defined in one spot. Then again, it probably wouldn't be necessary if the help prompt specified the defaults.  ## Example  Very condensed, but I think you get the point. `java -jar selenium-server-4.0.0-beta-1.jar hub --config-help` ``` # Maximum number of listener threads. # Type: int max-threads = 200 ```","closed","C-grid,","dylanlive","2021-02-26T01:13:10Z","2021-09-05T08:15:41Z"
"","9404","[grid] Poll new session queue based on Grid capability","## üöÄ Feature Proposal The Grid should not block requests in the new session queue if matching slots are available  ## Motivation ### Grid setup  Consider Selenium Grid is set up with a Hub and two Nodes. One node is capable of handling 1 Chrome request and another node is capable of handling 1 Firefox request. Consider 3 new Chrome requests that are sent to the Grid. All are added to the new session queue. 1 Chrome request is currently processed. So now the queue has 2 Chrome requests. Now a Firefox request comes in and it is added after the existing Chrome requests.   ### Grid 3  Grid 3 has a mechanism that any request for one browser, would not block a request for a different browser.  The Firefox request is not blocked since there is a free slot available to process it.   ### Grid 4  The current implementation for Grid 4 does not have that. The Distributor first checks if the Grid has any free slot irrespective of Browser type, if so, it polls the queue for requests and creates a session using its GridModel of the Nodes. While the Chrome request is being processed, though the Firefox slot is free, the Firefox request will be blocked due to Chrome requests.  Thus, this feature is important for maintaining feature parity with Grid 3.   ## Getting started  1. Check out the [contributing guidelines](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md)   2. [Build the server](https://github.com/SeleniumHQ/selenium/blob/trunk/README.md) successfully before getting started.   Ensure `bazel build grid` runs successfully. 3. Now start coding! Refer https://github.com/SeleniumHQ/selenium/blob/trunk/README.md#editing-code for IDE and plugin info.  ### Current implementation   As the requests come in, the New Session Queue adds the request to its queue and sends an event with the request-id to the LocalDistributor. The LocalDistributor upon receiving the event and adds the request to own local queue.  The logic of polling the new session queue is present in https://github.com/SeleniumHQ/selenium/blob/18c94547c0118877afdf7c1a4f9fe624c582391e/java/server/src/org/openqa/selenium/grid/distributor/local/LocalDistributor.java#L382  The line below checks only if the Grid has the capacity, if it does then it removes from the queue. https://github.com/SeleniumHQ/selenium/blob/18c94547c0118877afdf7c1a4f9fe624c582391e/java/server/src/org/openqa/selenium/grid/distributor/local/LocalDistributor.java#L391    To implement this feature, it should check if any request in the queue has a matching free slot available and use that slot.  However, currently, the LocalDistributor only adds the request-id to its local queue, it has no information about the requested capability. Since Grid uses an Event bus for communicating between New Session Queue and Distributor, sending the entire request payload may not be ideal since they can be huge. This is the main problem to be solved.   ### Testing  Use existing tests https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/distributor/DistributorTest.java as a reference to write the test for the new feature.  The test can be run by using command below:  `bazel test --cache_test_results=no //java/server/test/org/openqa/selenium/grid/distributor:DistributorTest --test_filter=org.openqa.selenium.grid.distributor.DistributorTest#$`  Example:  `bazel test --cache_test_results=no //java/server/test/org/openqa/selenium/grid/distributor:DistributorTest --test_filter=org.openqa.selenium.grid.distributor.DistributorTest#shouldStartHeartBeatOnNodeRegistration$`","closed","help wanted,","pujagani","2021-04-21T08:50:23Z","2021-09-05T08:01:15Z"
"","9127","Support non-browser-based WebDrivers in Selenium Grid 4","## üöÄ Feature Proposal Selenium Grid 4 should - support automatic detection of non-browser-based WebDrivers like all Appium based ones and WinAppDriver - and automatically distribute and handle according sessions.  ## Motivation Selenium Grid 3 supported Appium integration via manually configuring nodes in Appium. Now, with the new automatic detection mechanism (and to stay up-to-dated with Selenium Grid versions), creating Grid infrastructures seems a lot easier. However, it seems (from reading documentation and conducting some quick experiments), that Selenium Grid 4 only works for browser-based WebDrivers (like ChromeDriver, GeckoDriver, etc.). Appium-based/wrappable automation APIs and WinAppDriver (also Appium-wrappable, as it was done for Selenium Grid 3 integration) should offer the same Selenium Grid 4 integration.  ## Example E.g. adding the WinAppDriver installation directory to the PATH environment variable should automatically detect the driver executable when starting a node and enable interaction with WinAppDriver sessions on that node (e.g. starting sessions, executing WebDriver-based scripts, session handling).","closed","C-grid,","ChristoWolf","2021-02-01T05:32:33Z","2021-10-15T00:06:06Z"
"","9636","Add configuration helper for browsers on Android","## üöÄ Feature Proposal Right now it is required to add necessary options for Android by setting custom capabilities as provided by the different drivers:   https://developer.mozilla.org/en-US/docs/Web/WebDriver/Capabilities/firefoxOptions#android https://chromedriver.chromium.org/getting-started/getting-started---android  It would be great to have configuration helpers that would set defaults, and allow a simple configuration of Android options by just operating with the `FirefoxOptions` class. Something similar to what has been already done for Python by @AutomatedTester in https://github.com/SeleniumHQ/selenium/commit/a22d0fd220abf69e7ad32100f6f60a426dfba9c6.  Android options to support would be: * androidPackage (required) * androidActivity (optional) * androidDeviceSerial (optional) * androidUseRunningApp (optional, not supported by geckodriver) * androidIntentArguments (optional, geckodriver only)  Here an example for Python:  ``` def test_enable_mobile_with_device_serial(options):     options.enable_mobile(android_package=""org.mozilla.firefox_beta"",                           android_activity=""some_activity_override"",                           device_serial=""1234"")     options.mobile_options[""androidDeviceSerial""] == ""1234"" ```  CC'ing @jimevans, @barancev, @diemol, @titusfortner.","closed","I-enhancement,","whimboo","2021-07-05T18:30:07Z","2021-11-01T00:06:58Z"
"","9351","Add TLS minimum protocol version and cipher filters for beta HTTPS features","## üöÄ Feature Proposal Netty supports setting a ciphersuite filter and limiting support for older TLS protocol versions. Selenium Grid 4's new https-enabled services shoud expose configuration parameters to set these.  ## Motivation Enabling https for secure environments is moot if bad ciphers and old protocols (like TLS 1.0) are enabled and the user cannot disable them. Not only will compliance checkers find and flag these services, the services themselves are exposed to well-known vulnerabilities. This pushes the user back to using a reverse proxy for security and defeats the purpose of the https enablement. At the very least, TLS 1.0 should be disabled by default. https://www.ssl.com/guide/ssl-best-practices/#ftoc-heading-4  ## Example I don't know java, so I only have some google quick hits on Netty: https://netty.io/4.1/api/io/netty/handler/ssl/CipherSuiteFilter.html From my limited understanding, it looks like supported TLS versions are specified in the SSLContext object. https://www.ssl.com/guide/ssl-best-practices/#ftoc-heading-4","closed","help wanted,","XanaDublaKublaConch","2021-04-01T16:43:30Z","2022-07-08T12:24:58Z"
"","9117","jQuery Vulnerability in Grid Version 3","## üöÄ Feature Proposal It appears that version 3 contains an older version of jQuery for the Selenium Grid, which contains several security vulnerabilities that our organization's security team identified. Would like to request that a new release of version 3 be made that updates the version of jQuery included to one without the security vulnerabilities. Details below.  ## Motivation Selenium Version: 3.14.0 jQuery version found: 3.1.1 CVEs:  * [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11023](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11023)  * [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11022](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11022)  * [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11022](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11022)  ## Example Upgrading Selenium version 3 to use a jQuery version 3.5.0 or greater would remediate the vulnerability.","closed","needs-triaging,","chrisg321","2021-01-28T21:21:50Z","2021-09-05T08:21:37Z"
"","9897","OnRequest Handle","## üöÄ Feature Proposal Hello Can U Add OnRequestHandle Event ?  Like when on logining provide an event to change parameters:  example:  OnSeleniumHttpRequest(....){  if(e.Type == POST){ change post data here... }  }","closed","needs-triaging,","Saleh-Software","2021-10-10T23:46:31Z","2021-11-12T00:06:53Z"
"","9537","Selenium Grid 4 Beta - Expose Configuration option for custom response headers","## üöÄ Feature Proposal Allow users to configure custom/default response headers for HTTP/S services.  ## Motivation Most webservers, including Netty's HTTP protocol server, allow users to set custom/default response headers to increase the security of web traffic. Selenium Grid Beta 4 does not appear to expose any method for setting these headers.  When deploying in secure environments or corporate environments that get scanned by vulnerability scanners, this lack of security headers will be flagged by scanning systems. Once flagged, the lack of an option to fix the issue may make Selenium Grid an undesirable testing platform for corporate security departments.   ## Example OWASP provides guidance on implementing secure headers on other HTTP servers like Apache: https://owasp.org/www-project-secure-headers/#div-headers  Netty supports inserting headers into HTTP server responses: https://netty.io/4.1/api/io/netty/handler/codec/http/class-use/HttpHeaders.html","closed","I-stale,","XanaDublaKublaConch","2021-06-02T03:38:11Z","2022-05-09T00:11:03Z"
"","9407","[grid] Prioritizer to prioritize new session requests","## üöÄ Feature Proposal Allow Grid to have a default Prioritizer and a custom Prioritizer for new incoming requests. Resulting in the highest priority request being handled first.   ## Motivation Currently, Grid 4 has the following components:  - Router - Session Map - New Session request queue - Distributor - Node  How these pieces fit with each other is explained in https://www.selenium.dev/documentation/en/grid/grid_4/components_of_a_grid/  Grid 3 :  Any new incoming request is added to the new session queue. The new session queue has a prioritizer instance which is used to identify the order (priority) of the requests in the queue. The requests in the queue are rearranged according to the defined prioritizer every time a new request is added. By default, the prioritizer value is null which means the requests in the queue will be arranged in FIFO. A custom prioritizer can be configured in the Hub.    Grid 4 :  All incoming requests are added to the new session queue in a FIFO manner and processed in the same order by the Distributor.   ## Getting started  1. Check out the [contributing guidelines](https://github.com/SeleniumHQ/selenium/blob/trunk/CONTRIBUTING.md)   2. [Build the server](https://github.com/SeleniumHQ/selenium/blob/trunk/README.md) successfully before getting started.   Ensure `bazel build grid` runs successfully. 3. Now start coding! Refer https://github.com/SeleniumHQ/selenium/blob/trunk/README.md#editing-code for IDE and plugin info.  ### Implementation pointers  Currently, there is no way to assign priority to the incoming requests. Every new incoming request is added to the [queue](https://github.com/SeleniumHQ/selenium/blob/f0149077f196709e1f68f9b855612b31a5535801/java/server/src/org/openqa/selenium/grid/sessionqueue/local/LocalNewSessionQueue.java#L179). A way to provide custom prioritizer via the new session config needs to be implemented. Grid 4 uses toml config. [NodeFlags](https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/src/org/openqa/selenium/grid/node/config/NodeFlags.java) and [NodeOptions](https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/src/org/openqa/selenium/grid/node/config/NodeOptions.java) can be used as a reference to get started and make changes to NewSessionQueue config files [here](https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/src/org/openqa/selenium/grid/sessionqueue/config/NewSessionQueueFlags.java). The [LocalNewSessionQueue](https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/src/org/openqa/selenium/grid/sessionqueue/local/LocalNewSessionQueue.java) maintains a local queue to store any incoming request ids. The LocalDistributor [polls](https://github.com/SeleniumHQ/selenium/blob/f0149077f196709e1f68f9b855612b31a5535801/java/server/src/org/openqa/selenium/grid/distributor/local/LocalDistributor.java#L596) based on available slots. While polling from the [queue](https://github.com/SeleniumHQ/selenium/blob/f0149077f196709e1f68f9b855612b31a5535801/java/server/src/org/openqa/selenium/grid/sessionqueue/local/LocalNewSessionQueue.java#L280), priority should be considered.   Prioritizer can be used here: https://github.com/SeleniumHQ/selenium/blob/f0149077f196709e1f68f9b855612b31a5535801/java/server/src/org/openqa/selenium/grid/sessionqueue/local/LocalNewSessionQueue.java#L280  ### Testing  Use existing tests  https://github.com/SeleniumHQ/selenium/blob/trunk/java/server/test/org/openqa/selenium/grid/sessionqueue/local/LocalNewSessionQueueTest.java as a reference to write the test for the new feature.  The test can be run by using command below:  `bazel test --cache_test_results=no //java/server/test/org/openqa/selenium/grid/sessionqueue/local:LocalNewSessionQueueTest --test_filter=org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueueTest#$`","closed","I-stale,","pujagani","2021-04-21T13:41:25Z","2022-06-18T00:11:59Z"
"","9564","Chromedriver URL update","## üöÄ Feature Proposal  When the exception is thrown.  ``` selenium.common.exceptions.WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home ```  https://sites.google.com/a/chromium.org/chromedriver/home specified that  > Please note that we have migrated to a new ChromeDriver site. Current site will be deprecated soon.  The exception should update as well with this new URL `https://sites.google.com/chromium.org/driver/`.  ## Motivation  Google chromedriver updated.  To make the exception more user-friendly, the respondent URL needs to be updated.   ## Example  As in #Feature-Proposal","closed","R-awaiting answer,","PabloLION","2021-06-12T12:01:35Z","2021-09-05T08:01:07Z"
"","9365","`se:cdpVersion` should be used properly by each language binding","## üöÄ Feature Proposal  When a session is started on a Chromium based browser or Firefox, it is possible to set the `cdpVersion` being used by checking the browser version, and for Firefox (for now) is hardcoded to `85`.  Language bindings need to read the information provided by that capability (and if running locally, create the capability after the session is created), so they can use the ""right"" version of the CDP bindings.","closed","I-stale,","diemol","2021-04-08T16:00:08Z","2022-06-19T00:11:59Z"
"","9792","WebDriverException: let's add some info about the Grid node","## üöÄ Feature Proposal  WebDriverException's should include the IP of the Grid node which is actually executing the commands, along with the info about the host running the test (which is being printed already).  ## Motivation  I've just bumped into an exception (pasted below) which is due to an issue between the Grid and the SUT,  and I've realised that there is no way for me to figure out, just by looking at the exception, which node(s) of the Grid are affected (only one or two, or all?): the exception mentions the host executing the tests (which I don't really care about), but it doesn't say anything about the specific grid node running the browser (which I do care about).  ``` org.openqa.selenium.WebDriverException: Unable to parse remote response:  [..]   	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:115) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144) 	at RemoteDriverFactory.createDriver(RemoteDriverFactory.java:21)        [..] Caused by: org.openqa.selenium.json.JsonException: Unable to determine type from:","open","I-enhancement,","alb-i986","2021-09-03T14:29:59Z","2022-05-27T09:20:10Z"
"","8945","Security Vulnerability in Jquery 3.1.1 min version under Selenium 3.141.59","## üöÄ Feature Proposal  We have recently run our organization vulnerability scan on the machine where Selenium is running ,and it is throwing security breach for Jquery 3.1.1.min.js version . And the Jquery has already worked on the security breach in there 3.5.0 version.  Can selenium also upgrades the Jquery Version within so that the selenium could run through without any breach . Thanks  ## Motivation  Security Vulnerability avoidance from Selenium   ## Example  Please provide an example for how this feature would be used.","closed","R-awaiting answer,","Afrina-Alam","2020-12-10T13:30:54Z","2021-09-05T08:03:18Z"
"","9549","Change initElements parameter from WebDriver to SearchContext","## üöÄ Feature Proposal  Update `PageFactory` methods signature from `WebDriver` to `SearchContext`.   ## Motivation  Allow elements to be passed as an argument to `PageFactory#initElements` methods and be used as the `SearchContext`.    My objective here is to solve issues related to shadow doms and elements lookup.  I currently have this changed implemented on my project which has a lot of shadow DOMs on the page, and being able to provide the shadow element to `initElements` allows me to use `PageFactory` with the shadow element as the search context, providing WebDriver would never work as the elements are ""hidden"" inside the shadow DOM.    ## Example  Only 3 methods need to be updated.  Currently: ```java   public static void initElements(WebDriver driver, Object page) {     initElements(new DefaultElementLocatorFactory(driver), page);   }    public static  T initElements(WebDriver driver, Class pageClassToProxy) {     T page = instantiatePage(driver, pageClassToProxy);     initElements(driver, page);     return page;   }    private static  T instantiatePage(WebDriver driver, Class pageClassToProxy) {     try {       try {         Constructor constructor = pageClassToProxy.getConstructor(WebDriver.class);         return constructor.newInstance(driver);       } catch (NoSuchMethodException e) {         return pageClassToProxy.getDeclaredConstructor().newInstance();       }     } catch (ReflectiveOperationException e) {       throw new RuntimeException(e);     }   } ```  With changes: ```java   public static void initElements(SearchContext searchContext, Object page) {     initElements(new DefaultElementLocatorFactory(searchContext), page);   }    public static  T initElements(SearchContextsearchContext, Class pageClassToProxy) {     T page = instantiatePage(searchContext, pageClassToProxy);     initElements(searchContext, page);     return page;   }    private static  T instantiatePage(SearchContext searchContext, Class pageClassToProxy) {     try {       try {         Constructor constructor = pageClassToProxy.getConstructor(WebDriver.class);         return constructor.newInstance(searchContext);       } catch (NoSuchMethodException e) {         return pageClassToProxy.getDeclaredConstructor().newInstance();       }     } catch (ReflectiveOperationException e) {       throw new RuntimeException(e);     }   } ```  No further changes would be needed as upstream classes already use `SearchContext` as type instead of `WebDriver`  My current concern is about `instantiatePage` change. Currently Selenium tries to instantiate the page with 2 different constructors (`WebDriver` arg and parameterless), I am wondering if there should be a third for `SearchContext` between the two existing ones, and if it would be useful.","closed","R-awaiting answer,","Jiwari","2021-06-04T14:10:19Z","2021-09-05T08:01:02Z"
"","9480","Add type hints in python codebase","## üöÄ Feature Proposal  Type hints in Python are specified by [PEP 484](https://www.python.org/dev/peps/pep-0484/) and are of a great help when developing, thus proposing to add them to Python codebase. Would this be an option if I volunteer to (gradually) add them, assuming the types are validated in the CI by a checker tool like `mypy` so the types are validated on each pull request?  I have noticed rudimentary type hints already exist here and there, for example  https://github.com/SeleniumHQ/selenium/blob/e9c738de8a587dc6bc86b55949c57b8574ec68bb/py/selenium/webdriver/remote/webdriver.py#L263  indicates that `WebDriver().name` is a string. This offers better code completions in IDEs.  I have searched for similar issues, but it seems like this wasn't discussed yet (at least not on Github). As far as I can see, the only issue mentioning type hints is #1917; however, type stubs were removed since then.  Another alternative would be maintaining a third-party stub package (as specified in [PEP 561](https://www.python.org/dev/peps/pep-0561/#stub-only-packages)). However, I don't want to start a third-party package if you are willing to keep the type hints along with the code (which is a much better option), or planning to add them already.  ## Motivation  Better code completion in IDEs is surely something the end users will appreciate. Another advantage is that type hints often  intercept bugs, thus making the code more robust.","open","C-py,","hoefling","2021-05-15T19:41:26Z","2022-03-14T08:53:48Z"
"","9607","Traverse all tabs without disturbing the manually browsing activity, i.e., without change the window focusing.","## üöÄ Feature Proposal  Traverse all tabs without disturbing the manually browsing activity, i.e., without change the window focusing.  ## Motivation  Set selenium's managing tab/window  in background without switch_to.window(some_window_handle).  when I'm trying to traverse all tabs of an opened browser(chromium) and manually open some tabs and do some browsing, selenium changes the focus of the window and disturbs the browsing activity.  So, the motivation is: manually browsing could be done when selenium could monitor all tabs background.  ## Example  ``` class Foo():     def traverseTabs(self):         while True:             for wh in self.browser.window_handles:                 self.getCurrentTabSource(wh)      def getCurrentTabSource(self, wh):         self.browser.switch_to.window(wh)         url = self.browser.current_url         time.sleep(1)         h = {             'url': url,             'time': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),             'src': self.browser.page_source,             'text': self.browser.find_element_by_tag_name('body').text         }         if h['url'] not in self.history:             self.history[url] = [h]         else:             for hs in self.history[url]:                 if h['text'] == hs['text']:                     return             self.history[url].append(h) ```","closed","","noisnemid","2021-06-27T16:14:04Z","2021-09-05T07:59:05Z"
"","9238","Add resolve_ip option to remote WebDriver","## üöÄ Feature Proposal  The resolve_ip param should be added to the remote WebDriver class. ```python class WebDriver(object):     # ...     def __init__(self, command_executor='http://127.0.0.1:4444/wd/hub',                  desired_capabilities=None, browser_profile=None, proxy=None,                  keep_alive=False, file_detector=None, options=None, resolve_ip=True):         """"""         Create a new driver that will issue commands using the wire protocol.          :Args:          - command_executor - Either a string representing URL of the remote server or a custom              remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.          - desired_capabilities - A dictionary of capabilities to request when              starting the browser session. Required parameter.          - browser_profile - A selenium.webdriver.firefox.firefox_profile.FirefoxProfile object.              Only used if Firefox is requested. Optional.          - proxy - A selenium.webdriver.common.proxy.Proxy object. The browser session will              be started with given proxy settings, if possible. Optional.          - keep_alive - Whether to configure remote_connection.RemoteConnection to use              HTTP keep-alive. Defaults to False.          - file_detector - Pass custom file detector object during instantiation. If None,              then default LocalFileDetector() will be used.          - options - instance of a driver options.Options class          - resolve_ip - specify whether the remote server hostname should be resolved to an IP              address. Defaults to True.         """"""         # ...         if type(self.command_executor) is bytes or isinstance(self.command_executor, str):             self.command_executor = RemoteConnection(command_executor, keep_alive=keep_alive, resolve_ip=resolve_ip)         # ... ```  ## Motivation  I am using the Remote Webdriver to attach to a Selenium grid cluster running on Kubernetes. Since I am using an Nginx ingress, there is an issue with the resolve IP functionality of the RemoteConnection class. ```python driver = webdriver.Remote(     command_executor='http://myseleniumgrid.it/wd/hub',     ... ) ``` This code throws an exception since the hostname is resolved to the default backend IP. That IP is then used as the ""Host"" header value. Since Nginx does not know that virtualhost, the default backend response is returned: ""default backend - 404"".  ## Example ```python driver = webdriver.Remote(     command_executor='http://myseleniumgrid.it/wd/hub',     ...,     resolve_ip=False ) ```","closed","C-py,","federicoparroni","2021-03-05T14:41:29Z","2021-09-05T07:50:50Z"
"","9150","FirefoxDriverService longer InitializationTimeout","## üöÄ Feature Proposal  The default InitializationTimeout in the DriverService base class is 20 seconds, however the FirefoxDriverService overrides it to be only 2 seconds.  I propose lengthening this timeout for Firefox, and maybe just using the default like all the other browsers do.  ## Motivation  I am unable to run selenium tests in Firefox on my machine because it always times out in the WaitForServiceInitialization method.  I have a 2019 MacBook Pro, so I don't think it's an issue of hardware performance.","closed","D-firefox,","eldon111","2021-02-05T21:22:12Z","2021-09-05T08:10:48Z"
"","9797","Javascript/Node feature request: Surface PID of browser","## üöÄ Feature Proposal  Surface the PID of the browser. ``` let driver = await new Builder().forBrowser('firefox'); let session = driver.getSession(); let browser_pid = session.getBrowserPid(); ```  I might be able to work on this with some support! I'd like to hear if this is possible, and any other pointers as to where it should go or what needs to be done.  ## Motivation  This is a feature I would like for the following scenario: 1. Open a browser and do some things in the browser. 2. Then test the operating systems accessibility API against the browser's content. To test the accessibility API, I need the browser's PID.  The accessibility API is consumed by screen readers, and screen readers are programs that visually impaired or blind users use to operate computers. I'm testing whether or not the operating system accurately represent the HTML according to the W3C's [CORE-AAM standard](https://www.w3.org/TR/core-aam-1.2/). These tests run on all operating systems and all browsers, which is why selenium is perfect!  ## Example  ``` let driver = await new Builder().forBrowser('firefox'); let session = driver.getSession(); let browser_pid = session.getBrowserPid(); ```","closed","C-nodejs,","spectranaut","2021-09-06T17:00:17Z","2022-01-27T00:06:53Z"
"","9901","Please modify the document to make it more clearly.","## üöÄ Feature Proposal  Strongly recommend that tell users not use Power shell to run this command!! ![image](https://user-images.githubusercontent.com/7996256/136889902-f603e774-d26f-4853-8312-7009d734d708.png)   ## Motivation  I use Power shell to run this command and all my PATH env lost.  ## Example  No example needed.","closed","","jingedawang","2021-10-12T04:09:52Z","2021-11-12T00:06:59Z"
"","9705","Timeout for creating browser","## üöÄ Feature Proposal  Specify a timeout for creating a browser.  ## Motivation  Browser drivers can take an arbitrarily long time to create a browser. This creates hard-to-debug situations, like a CI job that tests multiple browsers, but all results are not recorded because one of them misbehaves (e.g. recent https://github.com/SeleniumHQ/docker-selenium/issues/1351).  (This is even worse in Node.js, which for some reason uses blocking browser creation.)  ## Example  ```ts const builder = new Builder(); builder.withTimeout(1000 * 10); const driver = builder.build(); ```","closed","C-nodejs,","pauldraper","2021-08-01T16:04:19Z","2022-07-08T12:12:29Z"
"","9218","Selenium 4 dynamic grid - add support for get downloaded files to your host path","## üöÄ Feature Proposal  Selenium 4 Dynamic Grid - get downloaded files from eg. /home/seluser/Downloads to your host path. It should be same as get video file when you have to mount your host path (/path/on/your/host/machine:/opt/selenium/assets)","open","help wanted,","rdark100","2021-02-27T10:02:24Z","2022-05-27T09:20:08Z"
"","9707","Move from Google Storage to GitHub releases","## üöÄ Feature Proposal  Right now, all binaries released from the Selenium project are stored at https://selenium-release.storage.googleapis.com/index.html. We want to stop using Google Storage and attach the binaries from each release to its respective release/tag in GitHub.  ## Motivation  This will simplify release management as access control will be centralized with GitHub permissions. Additionally users won't need to switch context when checking a release, they will see the release details and right below that, the release artifacts.","closed","C-infra,","diemol","2021-08-02T11:17:24Z","2021-09-27T00:05:45Z"
"","9011","Allow using query parameters in Selenium URL","## üöÄ Feature Proposal  Right now it is not possible to use query parameters in Selenium URL like this:  ```java WebDriver driver = new RemoteWebDriver(""http://localhost:4444/wd/hub?orientation=landscape""); ```  In such case URL is being transformed to ""http://localhost:4444/wd/hub?orientation=landscape/session"".  However the following initialization works:  ```java WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444/wd/hub/session?orientation=landscape#""), options); ```  In C# client the similar pattern works. In case of Python client such URLs with query parameters do not work.  ## Motivation  Previous discussion was in https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/8116. The main idea of using query parameters is that the do not require reading full request body to get what user is requesting. JSON-based capabilities being transferred in request body contrarily require reading and parsing full request body which is more CPU and memory intensive operation. This could be used in intermediary and endpoint Selenium nodes e.g. to work with extension capabilities. Right now according to W3C spec it is implementation-specific decision to throw or not throw an error when getting unknown extension capabilities. E.g. new IEDriver versions are throwing `no matching set of capabilities` error when getting some capabilities from Selenoid in `selenoid:options` namespace. By using query parameters we could avoid unmarshalling initial user capabilities, removing intermediary node specific stuff and marshalling all the rest to JSON again.  ## Example  See above.","closed","R-awaiting answer,","vania-pooh","2020-12-29T16:33:42Z","2021-09-05T08:03:19Z"
"","9080","Add support for ""get/set session context""","## üöÄ Feature Proposal  Re. https://github.com/SeleniumHQ/mobile-spec/blob/81201df03cb76464afe8df17c4c203093793ea6e/spec-draft.md#webviews-and-other-contexts  We need an interface for these new endpoints. Maybe something like `driver.setSessionContext(value)`?  This is already available in `wd` as `driver.context`.","closed","R-awaiting answer,","OliverJAsh","2021-01-21T14:58:38Z","2021-09-05T08:19:15Z"
"","9178","pause action function is not present in dotnet bindings","## üöÄ Feature Proposal  pause action function is not present in dotnet bindings. It is present in java bindings  ## Motivation  I am trying to do a drag and drop.   ## Example  It happens using CodedUI, not using current dotnet Action class. Seems to be very fast. Drag and drop is on tree node element structure. Basically move from one node under to another node.   //WebEement1.Move();                //Thread.Sleep(5000);                //Mouse.StartDragging();                //Mouse.MouseMoveSpeed = 120;                //Mouse.StopDragging(WebEement2));                //Thread.Sleep(3000);","closed","C-dotnet,","rameshrc","2021-02-14T23:16:42Z","2021-09-05T08:12:15Z"
"","9339","Hide/mask/scrub secrets/passwords in logs","## üöÄ Feature Proposal  Passwords and other secrets sent by sendKeys variants are seen in plaintext in the logs. It would be nice to be able to prevent that for example by providing an additional parameter to sendKeys function as done in Appium, FR https://github.com/appium/appium/issues/7622, PR https://github.com/appium/appium-support/pull/180.   I wonder if it‚Äôs technically possible to hide in the headers and body of responses as well as printing to standart output.   ## Motivation  As a developer, I would like to know that the data in Selenium logs does not expose secrets that can be used to harm my company in case an attacker would take over an account.   ## Example  Example given, if my tests requires me to have a secret as part of it ‚Äì in a best case, a session token; in a worse case, credentials to an application ‚Äì I would like to be sure it can not be retrieved from Selenium logs.  For that, I would like to have a way to tell Selenium that I want to mask or redact logging particular data in logs. For example, providing a regex to change `QC123456789` in the logs to `QC*********`.","closed","I-enhancement,","lqkallas","2021-03-26T09:05:32Z","2022-07-08T12:24:12Z"
"","9830","Convenience Builder method to set arbitrary capabilities (JavaScript/Node.js)","## üöÄ Feature Proposal  Now that `Builder.withCapabilities()` is [deprecated](https://github.com/SeleniumHQ/selenium/pull/9701), there is no longer a convenient and non-deprecated way to set arbitrary capabilities such as [`sauce:options`](https://docs.saucelabs.com/dev/test-configuration-options/#desktop-and-mobile-capabilities-sauce-specific--optional) when building a new `WebDriver` instance.  This feature proposal is to restore the convenience of `.withCapabilities()`, but with different semantics so that users are still encouraged to use the `.setBrowserOptions()` methods.  > ### Class Builder Instance Methods > > #### _`this.`_**setCapability(** _`key`_ **,** _`value`_ **)** ‚Üí `Builder` > > Sets the desired capability when requesting a new session. If there is already a capability named _`key`_, its value will be overwritten with _`value`_. This is a convenience wrapper around `builder.getCapabilities().set(key, value)` to support Builder method chaining. > > ##### Parameters >   * _`key`_ `string`: The capability key. >   * _`value`_ `*`: The capability value. > > ##### Returns > `Builder`: A self reference.  ## Motivation  Before `Builder.withCapabilities()` was deprecated, it was possible to do this:  ```javascript   const driver = await new wd.Builder()       .usingServer('https://ondemand.saucelabs.com/wd/hub')       .withCapabilities({'sauce:options': {         username: process.env.SAUCE_USERNAME,         accessKey: process.env.SAUCE_ACCESS_KEY,         tunnelIdentifier: process.env.SAUCE_TUNNEL_ID,       }})       .forBrowser(browser, version, platform)       .setChromeOptions(chromeOptions)       .setEdgeOptions(edgeOptions)       .setFirefoxOptions(firefoxOptions)       .build(); ```  Users now have to do something like this if they want to avoid the deprecated method:  ```javascript   const builder = new wd.Builder()       .usingServer('https://ondemand.saucelabs.com/wd/hub')       .forBrowser(browser, version, platform)       .setChromeOptions(chromeOptions)       .setEdgeOptions(edgeOptions)       .setFirefoxOptions(firefoxOptions);   builder.getCapabilities().set('sauce:options', {     username: process.env.SAUCE_USERNAME,     accessKey: process.env.SAUCE_ACCESS_KEY,     tunnelIdentifier: process.env.SAUCE_TUNNEL_ID,   });   const driver = await builder.build(); ```  ## Example  ```javascript   const driver = await new wd.Builder()       .usingServer('https://ondemand.saucelabs.com/wd/hub')       .setCapability('sauce:options', {         username: process.env.SAUCE_USERNAME,         accessKey: process.env.SAUCE_ACCESS_KEY,         tunnelIdentifier: process.env.SAUCE_TUNNEL_ID,       })       .forBrowser(browser, version, platform)       .setChromeOptions(chromeOptions)       .setEdgeOptions(edgeOptions)       .setFirefoxOptions(firefoxOptions)       .build(); ```","closed","C-nodejs,","rhansen","2021-09-16T01:30:54Z","2021-10-30T00:06:10Z"
"","9009","Modify the SlowLoadableComponent class to be open for extension","## üöÄ Feature Proposal  Modify the `SlowLoadableComponent` class to be open for extension, following the [Open-closed principle](https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle):  > In object-oriented programming, the open‚Äìclosed principle states ""software entities (classes, modules, functions, etc.) should be open for extension, but closed for modification"";[1] that is, such an entity can allow its behaviour to be extended without modifying its source code.  Specifically:  > At the time Meyer was writing, adding fields or functions to a library inevitably required changes to any programs depending on that library.[citation needed] Meyer's proposed solution to this dilemma relied on the notion of object-oriented inheritance (specifically implementation inheritance): A class is closed, since it may be compiled, stored in a library, baselined, and used by client classes. But it is also open, since any new class may use it as parent, adding new features. When a descendant class is defined, there is no need to change the original or to disturb its clients.[4]  ## Motivation  Right now `SlowLoadableComponent` allows a derived class to inherit from it and override how the `Load` method works:  https://github.com/SeleniumHQ/selenium/blob/bf2fc564eeaeecfd980984119bd18d0a00bdb29e/dotnet/src/support/UI/SlowLoadableComponent%7BT%7D.cs#L72-L110  It also lets derived classes access to SleepInterval:  https://github.com/SeleniumHQ/selenium/blob/bf2fc564eeaeecfd980984119bd18d0a00bdb29e/dotnet/src/support/UI/SlowLoadableComponent%7BT%7D.cs#L63-L70  And IsLoaded:  https://github.com/SeleniumHQ/selenium/blob/bf2fc564eeaeecfd980984119bd18d0a00bdb29e/dotnet/src/support/UI/LoadableComponent%7BT%7D.cs#L51-L74  It does **not**, however, let us access `clock` and `timeout` fields, and the `Wait` method:  https://github.com/SeleniumHQ/selenium/blob/bf2fc564eeaeecfd980984119bd18d0a00bdb29e/dotnet/src/support/UI/SlowLoadableComponent%7BT%7D.cs#L39-L40  https://github.com/SeleniumHQ/selenium/blob/bf2fc564eeaeecfd980984119bd18d0a00bdb29e/dotnet/src/support/UI/SlowLoadableComponent%7BT%7D.cs#L124-L127  Which stops us from changing how the `Load` method works and still be able to wait for the `IsLoaded` condition to be true.  **I propose `clock`, `timeout` and `Wait` become `protected`.**  ## Example  Let's imagine a component that we now for a fact will only load when the user executes an action (for example, clicking on a button). and we know the component will load slowly. We could skip the first evaluation of `IsLoaded`:  ```csharp public override T Load() {      /*if (this.IsLoaded)       //{       //    return (T)this;       //}       //else       //{       //    this.TryLoad();       //}       // we skip this party and go straight to trying to loading the component      */      this.TryLoad();      DateTime end = this.clock.LaterBy(this.timeout);      while (this.clock.IsNowBefore(end))     {         if (this.IsLoaded)         {             return (T)this;         }          this.HandleErrors();         this.Wait();     }      if (this.IsLoaded)     {         return (T)this;     }     else     {         string timeoutMessage = string.Format(CultureInfo.InvariantCulture, ""Timed out after {0} seconds."", this.timeout.TotalSeconds);         throw new WebDriverTimeoutException(timeoutMessage);         }     } ``` This implementation will not work because we do not have access to `clock`, `timeout` and `Wait`  The same can be achieved by saving a local copy of the fields on a derived class and recreating the `Wait` method:  ```csharp         private readonly TimeSpan timeout;         private readonly IClock clock;          protected CustomSlowLoadableComponent(TimeSpan timeout) : this(timeout, new SystemClock())         {         }          protected CustomSlowLoadableComponent(TimeSpan timeout, IClock clock) : base(timeout, clock)         {             this.timeout = timeout;             this.clock = clock;         }          ...         private void Wait()         {             Thread.Sleep(SleepInterval);         } ``` But then again, we would be adding ""unnecesary"" code.  Thank you.","closed","C-dotnet,","elgatov","2020-12-29T10:11:42Z","2021-11-12T00:06:56Z"
"","9706","Make Node.js browser creation non-blocking","## üöÄ Feature Proposal  Make `Builder.prototype.build` asynchronous.  ## Motivation  Currently, creating browsers limits concurrency, which is a performance problem.  Exacerbating the problem is the lack of timeout when creating browsers. Creating a browser can literally hang the entire process forever.  ## Example  ```ts const builder = new Builder() const driver = await builder.build(); ```","closed","","pauldraper","2021-08-01T16:07:18Z","2021-09-05T07:50:11Z"
"","9845","Dynamic Selenium 4 grid on kubernetes","## üöÄ Feature Proposal  Just like dynamic Selenium 4 grid using docker, having a similar k8s ""pod factory"" (or something similar) would be nice.  https://github.com/zalando/zalenium does that. Perhaps some of that can be ported to grid 4","open","help wanted,","gazal-k","2021-09-19T12:35:20Z","2022-06-08T07:53:13Z"
"","9391","Implementing Chrome DevTools Protocol method ""Page.printToPDF""","## üöÄ Feature Proposal  It would be great, if Selenium 4 would implement Chrome DevTools Protocol method [Page.printToPDF](https://chromedevtools.github.io/devtools-protocol/tot/Page/#method-printToPDF) to print websites to PDF. In Selenium 4 Beta 3 this method isn't implemented yet.  ## Motivation  There are multiple ways to convert web pages/HTML to PDF but each alternative has its shortcomings:  - [wkhtmltopdf](https://wkhtmltopdf.org/) and [WeasyPrint](https://weasyprint.org/) aren't suitable for modern websites because they lack in supporting modern HTML/CSS/JS like flexbox, SVG images etc. - [puppeteer/chromedriver](https://github.com/puppeteer/puppeteer) in this respect is a better choice, but unfortunately it's puppeteer and not Selenium; using it outside node/js is a real pain, as a python coder for example, you have to use an [unofficial port of puppeteer](https://github.com/miyakogi/pyppeteer). Also, when using puppeteer natively or ported, you can't use the latest chromedrivers since they have to match puppeteer's version.  If Selenium would implement the method Page.printToPDF, this would be really great for all people who need to take searchable PDF ""screenshots"" with small file size and support for latest webdesign features.  ## Python Example  `pdf = driver.executeCdpCommand(""Page.printToPDF"", {})`","closed","","madamadami","2021-04-18T23:50:18Z","2021-09-05T08:06:49Z"
"","9402","Grid4 -- Allow configuration of logging timestamp in log formatters.","## üöÄ Feature Proposal  It would be great if we could configure the format of the timestamp in log output. I use plain logs and thus utilize the `TerseFormatter`. I think all that would need to be done is:  - Add a new logging flag [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-3/java/server/src/org/openqa/selenium/grid/log/LoggingFlags.java) that specifies the timestamp format. - Read the new flag [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-3/java/server/src/org/openqa/selenium/grid/log/LoggingOptions.java) - Update the constructor [here](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-3/java/server/src/org/openqa/selenium/grid/log/TerseFormatter.java#L63) to accept a parameter, which would be defaulted to it's currently hardcoded `HH:mm:ss.SSS`. - Update the instantiation of the object [here](https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/java/server/src/org/openqa/selenium/grid/log/LoggingOptions.java#L115) to pass the configuration to it.   I am not sure if this could be applied to the JSON formatter as well -- but I mainly am interested in the `TerseFormatter`. Also, perhaps I missed the ability do this, so please feel free to close this if I did indeed miss it!  ## Motivation  In my use case, I want the log pattern of all my integrated tools to follow a similar pattern so I can have consistency within my log aggregator. Having this flexibility would help me do that.  ## Example  For example, the current logging format:  `11:50:40.668 INFO [LoggingOptions.getTracer] - Using null tracer`  I would like that timestamp to be configurable, so I could format it like so:  `2021-04-12T11:50:40.668-04:00 INFO [LoggingOptions.getTracer] - Using null tracer`","closed","help wanted,","mjthomsen1","2021-04-20T16:28:06Z","2022-02-28T00:10:21Z"
"","9297","[Selenium 4] [Grid] Node: Allow infinite register-period","## üöÄ Feature Proposal  In Se 4 Beta 2, the node's config allows for a value like: `register-period = 120`  It would be nice if we could set an infinite number. Perhaps something like `-1`, which could be documented in the comments. This way, the node will keep trying to register itself to the Hub forever.  For now, I'll just use a large number like `9999999`  ## Motivation  If a Hub is offline when a Node boots up, it would be nice to not have to restart the node whenever you start the Hub  ## Example In a node's config, something like:  ``` # How long, in seconds, will the Node try to register to the Distributor for the first time. After this period is completed, the Node will not attempt to register again. Use -1 to infinitely try to register to the Distributor. # Type: int # Default: 120 # Example: register-period = -1 ```","closed","C-grid,","dylanlive","2021-03-17T19:31:17Z","2021-09-05T08:10:34Z"
"","9190","Implement a native `getLocator()` method from a `By` object instance","## üöÄ Feature Proposal  Implement a native `getLocator()` method from a `By` object instance  ## Motivation  The problem I faced is getting relative elements from an already instanced `By` object  ## Example  Let's say that we have a `` located in a browser by its `XPath`, for example: `//div[@id='foo']//label[@class='bar']`.  We create a `By` instance because we need this specific label for multiple assertions during the test flow: `public static final By BAR_LABEL = By.xpath(""//div[@id='foo']//label[@class='bar']"");` and making assertions like: `Assert.assertEquals(""This is the Bar Label"", driver.findElement(BAR_LABEL).getText());`  But in some point, we need to make assertions to its following sibling ``. This specific input is located in a browser also by its `XPath`, for example: `//div[@id='foo']//label[@class='bar']/following-sibling::input[@type='hidden']`.  How can we make a `WebElement` instance of this `` using the already defined BAR_LABEL relatively?  So, my proposal is to create a **native** `getLocator()` method, something like (for example): `BAR_LABEL.getLocator();`  This should return a `String` with its clear defined `XPath`: `//div[@id='foo']//label[@class='bar']` in order to **concatenate** with the `XPath` of the relative and use it like: `WebElement relativeInput = driver.findElement(BAR_LABEL.getLocator() + ""/following-sibling::input[@type='hidden']"")`  This is much more needed when you call an abstract verification method that can be used in many tests and for a variety of `WebElements`. For example, if we have: ``` public static final By BAR_LABEL = By.xpath(""//div[@id='foo']//label[@class='bar']""); public static final By TOMY_LABEL = By.xpath(""//div[@id='foo']//label[@class='tomy']"");  Assert.assertTrue(elementHasInputSibling(BAR_LABEL));  Assert.assertFalse(elementHasInputSibling(TOMY_LABEL));  ``` and the `elementHasInputSibling()` method: ``` public void elementHasInputSibling(By by) {      if (driver.findElements(By.xpath(by.getLocator().concat(""/following-sibling::input[@type='hidden']""))).size() > 0) {                    //If the List is not empty, it means that the element exist, so it will return true          return true;      } else {          return false;      } } ```  **My Workaround**  In order to make this work (it is really important to me), I used `toString()` method and `String` iterations. The vanilla `BAR_LABEL.toString()` will return a `String`: `By.xpath: //div[@id='foo']//label[@class='bar']`  So I implemented a custom method, parsing the `By` object as parameter: ``` public static String getLocator(By by) {    return by.toString().substring(by.toString().indexOf("" "") + 1); } ``` This method iterates on the `toString()`, finds the first space and subtracts it, leaving just the `XPath`.  Hope I made my point clear. Thanks! :)","closed","needs-triaging,","konarx","2021-02-18T10:44:41Z","2021-09-05T08:15:53Z"
"","9695","Process multiple options objects to produce `firstMatch/alwaysMatch` capabilities","## üöÄ Feature Proposal  If you are looking for a bit of a challenge this issue is for you.   We need to add the ability to generate `firstMatch/alwaysMatch` capabilities as described in the [webdriver spec](https://w3c.github.io/webdriver/#processing-capabilities). A user would call `setChromeOptions(...).setEdgeOptions(...).build()` when creating a WebDriver instance and we would return the relevant capabilities to be sent to the remote end (Selenium Grid).  ## Motivation  This allows companies like Google to use Selenium in an easier way when they can't always guarantee the browser that is returned from their grid.  ## Example  There is an example on how to create this in `py/selenium/webdriver/remote/webdriver.py`.  When code is done there should be a test and that should pass when we run `SELENIUM_BROWSER=firefox bazel test //javascript/node/selenium-webdriver:tests`","open","I-stale,","AutomatedTester","2021-07-29T14:12:17Z","2022-07-24T20:20:24Z"
"","9372","Security Issue Public Accessible Selenium GRIDs","## üöÄ Feature Proposal  I'm currently working a lot with selenium GRID for a private project and a I really enjoy it. Unfortunately, it came to my attention, that there is no way to secure, at least, the Selenium-Hub with some functionality. I secured my GRID with a separated network and Firewall, but not all Users of Selenium are that experienced.   So, I propose to add a simple authentication method (password) for connections to the hub so there is at least one layer of security. This feature should not be optional.  ## Motivation  There are currently Selenium-GRIDs publicly accessible in the Internet that can be used by anybody without knowledge or permission by the owner. This situation can pose a threat to everyone in the Internet. This Hubs can be used as proxys or they can be combined to create a Bot-Net.","closed","C-grid,","Mariuxdeangelo","2021-04-09T19:14:27Z","2021-10-16T00:06:18Z"
"","9794","Monitoring the components of a Grid","## üöÄ Feature Proposal  I'd like to reinvigorate discussion that was started in #6092, but from a couple of different perspectives.  ## Motivation  First, tracing and metrics are different ways to monitor behavior of applications at runtime. Right now Grid 4, has a great start on tracing and some basic JMX monitoring, but there could be much more. As stated in the previous ticket, there are things missing with respect to JVM performance. Tracing by itself can capture most of any API centered latency, but you lose out on some real time alerting if you go down the trace only route.  ## Example  Right now my use cases are based on Grid 3, but looking forward to see how these would fit into Grid 4.  In my world, I have a couple of different use cases that center around being able to monitor the Grid.  - Monitoring the Hub JVM -- Is there enough compute performance? -- Is there enough memory? Heap? Other spaces? -- How many nodes are there? -- How many test slots? Active? Idle? -- Session elapsed time? (Eg. How long did tests run) - Monitoring the Node JVM -- Compute? -- Memory? -- Enough system compute and memory for the browser instances?  We chose to run our Grid on AWS EC2 and furthermore decided that we would like to have seen more dynamicism with the nodes (eg. Spin up/down, scale to zero, etc), so we pretty much extended the GridRegistry and came up with the idea of node pools (nodes with their capabilities) and by using those node pools can spin up a full VM dynamically and have it join the cluster based on the current load of session requests entering the cluster. While we ended up doing this manually with some code logic in our custom implementation of the GridRegistry, it could have been exported as a metric and consumed by an EC2 Auto Scaling Group, Horizontal Pod Autoscaler (for k8s), etc. On the flip side, we do actively monitor these metrics within Prometheus and Grafana and have various alerts on them so that we know how the Grid is doing or if we need to allow it more resources.  I think it would be nice to see some of the key metrics for Selenium around which you may desire to take similar actions with Grid 4 -- especially in it's distributed mode -- to achieve similar goals.  PS. I'm hoping that I'll be able to open source our own internal alterations at some point to help Grid be the best that it can be. :)","closed","I-enhancement,","shanman190","2021-09-04T18:13:41Z","2022-06-23T00:11:10Z"
"","9276","Enable ""preset"" of cookies","## üöÄ Feature Proposal  I would like to being able to add a cookie for a certain domain without the need of performing a prior navigation to some URL of that domain for which the cookie is to be added.  ## Motivation  Currently we forcely need to navigate a URL before being able to set a cookie for a domain. See: https://www.selenium.dev/documentation/en/support_packages/working_with_cookies/  For some scenarios, the information displayed by a web site could depend on cookie configuration. If so, we need to first navigate a given URL, set the cookies and then refresh the page (second navigation) to display the information that wouldn't be displayed without the cookie. Having some sort of way of ""presetting"" the cookies would save us this second navigation.  ## Example  For the C# language:  ```c# using OpenQA.Selenium; using OpenQA.Selenium.Chrome;  namespace AddCookie {  class AddCookie {   public static void Main(string[] args) {    IWebDriver driver = new ChromeDriver();    try {     driver.Manage().Cookies.AddCookieToDomain(""https://example.com"", new Cookie(""key"", ""value""));      // Navigations performed after this line would be done containing the cookie    } finally {     driver.Quit();    }   }  } } ```","closed","","tteguayco","2021-03-13T17:30:27Z","2021-09-05T08:12:14Z"
"","8979","Expected location of Chrome binary file on Windows 10","## üöÄ Feature Proposal  I see that this documentation is outdated as I do not see the expected Chrome location for ChromeDriver in Windows 10 systems. It does not make much sense to have in this list OS like Windows XP or Vista but not 10.  What is the expected location in Windows 10 so that we can update this documentation","closed","","tteguayco","2020-12-17T09:55:35Z","2021-09-05T08:30:05Z"
"","8993","Chromium-based Edge in Selenium 3","## üöÄ Feature Proposal  I propose to send a PR to add Chromium-based Edge support to Selenium 3.  ## Motivation  Selenium 4 isn't ready yet, and it's not clear when it will be ready for use.  Meanwhile, legacy Edge is no longer supported by Microsoft.  Everyone testing on Edge should be testing the new Chromium-based Edge.  We have a Selenium 3 grid that is part of critical testing infrastructure for our project, and Edge is a critical platform.  We are currently unable to test in the new Chromium-based Edge.  Microsoft has WebDriver servers available, so it's unclear why there should be any problem using these in Selenium 3.  If anyone can outline the differences between what Selenium 3 does today and what Selenium 4 does differently to communicate with the new drivers, I can start working on a PR to address this critical gap in Selenium 3.","closed","","joeyparrish","2020-12-22T17:29:00Z","2021-09-05T08:27:50Z"
"","9558","Provide an official way to get a server url","## üöÄ Feature Proposal  I propose to add an API to the `Executor` or `WebDriver` instances to be able to get server URL, something like `Builder::getServerUrl()` but after the driver was built.   ## Motivation  The motivation behind this request is simple I want to put a driver in a function and extract from the driver all of the information I have to know to attach a different driver instance to the same session. Without knowing a web driver server URL it doesn't look possible. I cannot just create a `WebDriver` instance using the same `Executor` because I have to send this data through the network and attach another driver to the same session on another side.   ## Example  ```ts async function serializeDriver(driver: WebDriver): Promise {   const session = await driver.getSession()   return {     serverUrl: driver.getServerUrl(),     session: session.getId()   } } ```","closed","C-nodejs,","kyryloonufriiev","2021-06-10T09:32:35Z","2022-07-08T12:16:35Z"
"","9334","Feature Request: Will selenium be available for C/C++?","## üöÄ Feature Proposal  Hi I would like to know that is there any chance that selenium will also be available for C/C++? I know how to use selenium in python but still it would be kind of nice if selenium became available for C/C++.  Is selenium already available for C++?  ## Motivation  There are a lot of projects like the selenium project that support C/C++ but I just want to request if selenium became available for C/C++.","closed","","shreyanavigyan","2021-03-25T11:56:04Z","2021-09-05T08:10:32Z"
"","10011","Ping related services for health via node and display health info on UI","## üöÄ Feature Proposal  For now if Grid pings relayed service like appium only on startup and if something went wrong with appium after node already started you‚Äôll not see it in console UI. Would be great to ping related service every time and display if something went wrong.","closed","help wanted,","dbudim","2021-10-06T02:47:26Z","2022-04-04T00:10:09Z"
"","8883","[Grid] Feature Request: Request Access Logs","## üöÄ Feature Proposal  For all Grid Components (Hub, Node, Router, etc.) it would be beneficial to allow storing request access logs to assist in investigating unauthorized access. Per recommendation of security engineers, these access logs should include ([apache combined log format](https://httpd.apache.org/docs/2.4/logs.html#accesslog) & X-Forwarded-For): - Client IP - Timestamp - HTTP Method - Path - HTTP Response Code - User agent - Number of byes returned to the client - Referer - X-Forwarded-For  These can either be: 1) Stored within a file 2) Embedded within the OpenTelemetry Data _(though I'd need to research how to export it out and into its own dedicated file)_  I noticed OpenTelemetry already has some of the data (method, path, status code, IP _although unsure if that's the client or the host machine's ip_).  If Grid utilized Reactor Netty, [access logs likely could be easily enabled](https://cloud.spring.io/spring-cloud-gateway/multi/multi__reactor_netty_access_logs.html).  My search for ""netty access logs"" only show Reactor Netty, which is why I concluded it's not possible to do with Netty out of the box.  ## Motivation  Security Engineers may ask for services to log requests. While it's possible to put Nginx (with logs) in front of Grid Hub or Router, the requests to Grid Node are not logged. It's important to see what kinds of requests were made across all nodes, in the event there are unauthorized requests.  In Se3 Grid, it was possible to put Nginx in front of a Node, and launch the node with `-remoteHost  ""http://NODE_IP:80""` (port 80 so that the hub would pass requests through nginx, and nginx forward to 5555). The `-remoteHost` flag appears to have been removed in Se4 Alpha.   ## Example  1) Launch `java -jar selenium-server-4.0.0-alpha-7.jar hub --access-log-file access.log` or within the config something like: ``` [logging] # Configure logging # Type: boolean enable = true # Store Access Logs within a file # Type: string access_log_file = access.log ``` 2) Make a request to http://localhost:4444/status 3) Within `access.log` a line like:  `127.0.0.1 - frank [10/Oct/2000:13:55:36 -0700] ""GET /status HTTP/1.1"" 200 2326 ""http://localhost:4444/status"" ""selenium/3.141.59 (java unix)""`","closed","C-java,","dylanlive","2020-11-17T17:13:58Z","2021-09-05T08:30:21Z"
"","9042","Feature Proposal: DOM cache reset option","## üöÄ Feature Proposal  First of all let me complement you for an excellent set of projects. A great contribution to the development community.  This proposal is for the introduction of a method to force the reloading of the internal DOM cache. I am assuming that either the chrome driver or Selenium maintains an internal cache of the HTML DOM structure.  ## Motivation I have an HTML spreadsheet using the SlickGrid api. The spreadsheet contains a large number of rows/cells and complex calculations. I have developed Selenium scripts to change base values and verify calculations. Despite the fact that the script adheres to strict ‚Äúwait on elements and browser ready‚Äù rules before continuing to the next step I have noticed that in some situations the HTML DOM maintained by Selenium becomes out of sync with the actual HTML body.  e.g. After an update `By.XPath(‚Äú//div[@id='myTable']/div[contains(@class, 'slick-pane-top') and contains(@class, 'slick-pane-right')]/div[contains(@class, 'slick-viewport-top') and contains(@class, 'slick-viewport-right')]/div[contains(@class, 'grid-canvas') and contains(@class, 'grid-canvas-top') and contains(@class, 'grid-canvas-right')]/div[contains(@class, 'slick-row')][4]/div[contains(@class, 'slick-cell')][7]‚Äù)` may return a different row (e.g. row 7) or may not find the element.  This is despite that the `Driver.FindElement(By.TagName(""body"")).GetAttribute(""innerHTML"")` returns the correct html structure.  ## Example To get around this issue and where the problem manifest itself I call `Driver.Navigate().Refresh()` after an update and before searching for the next element by xpath.  It would however be great if I could force Selenium to refresh it‚Äôs internal DOM e.g. `Driver.ReloadDOM()` instead of reloading the entire page.","closed","needs-triaging,","xavier-90","2021-01-13T11:55:52Z","2021-09-05T08:21:46Z"
"","9487","Selenium Grid Graceful Node Shutdown for Safe Scale Down (eg. Kubernetes Horizontal Pod Autoscaler)","## üöÄ Feature Proposal  Feature Request to add a simple trigger for graceful shutdown of a node using non-interrupting draining behaviour.  Needs to be runnable as a local node command or local URL so that it can be incorporated into a pre-shutdown hook to not interrupt currently running tests.  ## Motivation  This is to allow safe auto scale down of Selenium Grid nodes on Kubernetes when using a Horizontal Pod Autoscaler.  ## Example  When the HPA wants to delete a node to scale down, it'll trigger a lifecycle hook to run a local command or curl against the local url in order to get the node to stop accepting any new sessions, and just complete any current sessions - essentially a safe drain method to use with an extended termination grace period to allow a node self shut down graceful after completing tests in progress to avoid failing tests running on the grid.","closed","","HariSekhon","2021-05-18T15:27:36Z","2021-09-05T08:03:25Z"
"","9024","Expose newSessionRequestCount in /status endpoint","## üöÄ Feature Proposal  Expose `newSessionRequestCount` in `/wd/hub/status` to show the number of pending request or the size of request queue.  ## Motivation  By looking at the request queue size, users will be able to scale the nodes in selenium grid.  ## Example  Add an entry `newSessionRequestCount` in the schema: https://github.com/SeleniumHQ/docker-selenium#waiting-for-the-grid-to-be-ready","closed","I-enhancement,","olivia-hhe","2021-01-05T00:43:43Z","2021-09-05T08:25:08Z"
"","9819","Deleting Browser Cache via Selenium Automation","## üöÄ Feature Proposal  Delete Cache/browser data while automation execution is in progress  ## Motivation  We already have a method [driver.manage().deleteCookies()] for deleting the cookies. It would be great to have a similar method to delete the cache.  I found some articles on the internet which basically tell us to navigate to""chrome://settings/clearBrowserData"" and click on ""Clear Data"". However it is extremely inconvenient to do this as all the elements on the page are a part of a nested Shadow-root Dom, so normal selenium operations like click() do not work.  The process of dealing with shadow-root is quite complicated . I would Love to have a simple method from Selenium that takes care of deleting the cache.  ## Example  We have frequently encountered scenarios in our organization where in we need to delete both the cache and cookies so that the 'Welcome Pop-up' [which is only displayed the first time a user logs in] is displayed. We need to clear the cookies and cache for that welcome pop-up to be displayed once again.  And we need to do it in the same session. Closing the browser and staring fresh execution is not an option  Primary browser- Google chrome- Version 90.0.4430.85","closed","","Sourajit07","2021-09-13T13:29:23Z","2021-10-15T00:06:05Z"
"","9817","Add support for ""webSocketUrl"" capability to opt-in to WebDriver BiDi support","## üöÄ Feature Proposal  Browser vendors are going to add [WebDriver BiDi](https://w3c.github.io/webdriver-bidi/) support, and as such it is required to support the [webSocketUrl](https://w3c.github.io/webdriver-bidi/#establishing) capability.   ## Motivation  Even Selenium not supporting any commands and events yet, it would be great to support this capability at least. Could this maybe done for the Selenium 4 release?  Right now at least the Python implementation completely ignores this capability, and doesn't send it to the remote end. I assume that other bindings might behave the same.  ## Example  This would be up to the individual binding.  CC'ing @AutomatedTester and @shs96c. Already filed as issue #9816 but that got closed immediately by the bot.","closed","I-enhancement,","whimboo","2021-09-13T06:48:39Z","2022-01-01T00:07:27Z"
"","8962","webElement.isObscured()","## üöÄ Feature Proposal  As isDisplayed() create isObscured(), which returns true if there is any other element that obscures my element  ## Motivation  be possible to check for this type of error not to occur: `""Element  is not clickable at point (1128,877) because another element  obscures it""`  ## Example  ``` if(!webElement.isObscured()) { 	((JavascriptExecutor) driver).executeScript(""arguments[0].scrollIntoView(true);"", webElement); } ```","closed","needs-triaging,","samuelfac","2020-12-12T09:21:42Z","2021-09-05T08:30:09Z"
"","9454","[Grid] Add sessionTimeout capability for Dynamic Grid to remove any stale containers","## üöÄ Feature Proposal  Allow Grid to have a default `sessionTimeout` which will be used in closing any open stale browser sessions or stale docker containers while using **Dynamic Grid.**   ## Motivation When users using Dynamic Grid, we should be keeping any stale docker containers or browser sessions running for a long time which will consume more resources.  ## Example Lets say user running a manual session using Dynamic Grid and from client side If the user lost the network connection or closed the current session. Grid should not keep that session(container/browser) active after not receiving any commands after the given sessionTimeout.  ## Testing  1. Start dynamic grid as described here: https://github.com/SeleniumHQ/docker-selenium#dynamic-grid- 2. Run any simple automation test in debug mode pointing to local dynamic grid. 3. Cancel the session Manually form client side. 4. After given `sessionTimeout` the docker container should be closed along with the browser session.","closed","C-grid,","hemanthvenkata","2021-05-07T18:41:55Z","2021-09-05T08:03:36Z"
"","9373","[py] Element to be Clickable Expansion","## üöÄ Feature Proposal  Add the ability to pass an element to element_to_be_clickable(), rather than just a locator.  ## Motivation  It would add convenience. This feature [already exists in the Java version](https://www.selenium.dev/selenium/docs/api/java/org/openqa/selenium/support/ui/ExpectedConditions.html#elementToBeClickable(org.openqa.selenium.WebElement)), but [does not in Python](https://www.selenium.dev/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.expected_conditions.html) (as far as I can tell according to the docs).  ## Example  I'm currently trying to dynamically scroll a page until a certain number of elements exist (found using a while loop and xpath), but I want to be sure they've all _fully_ loaded before I start operating on them. Thus, I'm currently trying to pass the last element in the list of (partially-loaded) elements in as my expected condition, and wait until it's clickable, but that's not directly possible.","closed","","maxtheaxe","2021-04-11T03:40:44Z","2021-09-05T08:06:46Z"
"","8885","[WebAuthn] Virtual authenticator management in Ruby gem","## üöÄ Feature Proposal  Add bindings in the Ruby gem which can be used to manage virtual authenticators  Related: SeleniumHQ/selenium#7753, and SeleniumHQ/selenium#7842  ## Motivation  The generated API docs for the Ruby gem include docs for the `WebAuthn` APIs which can be used to test a site using a virtual authenticator: https://www.selenium.dev/selenium/docs/api/rb/Selenium/WebDriver/DevTools/WebAuthn.html#add_virtual_authenticator-instance_method  However, the constant declared at the top of those docs (`Selenium::WebDriver::DevTools::WebAuthn`) does not exist and the file it claims defines it (`lib/selenium/webdriver/devtools/web_authn.rb`) also does not exist. This is true both for the latest alpha version and for the code as it today in `trunk`.  ## Example  I have a WebAuthn-based authentication process for which I need to write some unit tests and regression tests within our existing Ruby-based (Capybara + selenium-webdriver) test suite.","closed","C-rb,","bjeanes","2020-11-19T06:24:21Z","2021-09-05T08:30:11Z"
"","9342","Find an element by the text of label","## üöÄ Feature Proposal  Add a `By` for locating an input-type element (``, ``, etc) by the text of the label for that element.   ## Motivation  Many server-side and client-side frameworks will generate `id`s for elements. This can require additional work to use Selenium to find the desired element - either additional elements/attributes, or complicated XPath. See [this Stack Overflow Question/Answer](https://stackoverflow.com/a/2031104/151825) (note the reference to WatiN having such a method). However, this doesn't handle things like elements where the `` encompasses the input, which is common with ``.  In addition to being an *incredibly common* use case, this will encourage improving the accessibility (a11y) of the markup - forms having labels is one of the first checks by Chrome DevTools' Lighthouse, Firefox's Developer Tools (Accessibility tab) or other accessibility checkers. These are all based off the [WCAG guidelines](https://www.w3.org/WAI/WCAG21/quickref/?showtechniques=332#labels-or-instructions)  If this doesn't seem general enough to be part of the API (though this seems equivalent to finding an anchor by its text), is there some other contrib or extras project that this should be in?   If there's interest, I can do a preliminary pass on implementing this for all the languages (i'm not used to Ruby, but can make an attempt).  * Technically there are non-input [labellable elements](https://www.w3.org/TR/html52/sec-forms.html#labelable-element), those could be done if there's a desire  ## Example  Given the markup ```html      Event Name:                                                ```  The following Java  ```java List theInputElements = driver.FindElements(By.labelText(""Event Name:"")) ``` would get the list of all elements whose label has text ""Event Name:"" - eg `` is labelled by `Event Name:`","closed","","msingle","2021-03-28T17:02:05Z","2021-09-05T08:10:30Z"
"","9063","Allow to specify Secure, HttpOnly and SameSite attributes when adding new cookie with dotnet bindings","## üöÄ Feature Proposal  According to WebDriver specification of [Add Cookie](https://www.w3.org/TR/webdriver/#add-cookie) it should be possible to set various cookie attributes, like domain and expiration time. However, constructor of Cookie class in dotnet bindings doesn't have parameters for 3 of them: Secure, HttpOnly, SameSite. https://github.com/SeleniumHQ/selenium/blob/04714514f4ed3247560be27fc692b531fe9369e8/dotnet/src/webdriver/Cookie.cs#L53  Would be great to have them like guys in js do :) https://github.com/SeleniumHQ/selenium/blob/04714514f4ed3247560be27fc692b531fe9369e8/javascript/node/selenium-webdriver/lib/webdriver.js#L1261  ## Motivation .  ## Example .","closed","C-dotnet,","BoundedChenn31","2021-01-19T12:24:22Z","2021-11-13T00:06:32Z"
"","9160","Add ability to use cdp listeners in python","## üöÄ Feature Proposal  Ability to interact with Events is already implemented for Java. Will you add same logic for python? If yes then when?","closed","C-py,","Nikikuzi","2021-02-09T06:57:31Z","2021-09-05T08:19:08Z"
"","9620","get","## üöÄ Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","intens77","2021-07-01T14:48:21Z","2021-09-05T07:59:03Z"
"","9553","how to get a element by coordinate(x, y)","## üöÄ Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","","kuangshi00","2021-06-08T06:21:36Z","2021-09-05T08:01:11Z"
"","9333","Feature Request: Can there be a selenium for C/C++?","## üöÄ Feature Proposal  A clear and concise description of what the feature is.  ## Motivation  Please outline the motivation for the proposal.  ## Example  Please provide an example for how this feature would be used.","closed","needs-triaging,","shreyanavigyan","2021-03-25T11:50:04Z","2021-09-05T08:10:34Z"
"","9768","Selecting a global language in selenium official web site","## üöÄ Feature Proposal  `https://www.selenium.dev/documentation/webdriver/browser_manipulation/` every time I go through the code, I have to select   a required language, instead of that we can make the first selected language global and display code in that particular    ## Example I am using selenium framework in python whenever I go through the documentation for each and every code example I have to   select python as a language of choice, instead of that if i select python once, all other examples should be displayed in python","closed","","Lakshmikanth2001","2021-08-27T07:44:14Z","2021-09-27T00:05:44Z"
"","8923","http proxy use questions","## üöÄ Feature Proposal  ## Questions background http proxy use can only be set in new ChromeDriver() ``` ChromeOptions chromeOptions = new ChromeOptions();         chromeOptions.addArguments(""-headless"");         Proxy proxy = new Proxy();         chromeOptions.setProxy(proxy);         //new webDriver         webDriver = new ChromeDriver(chromeOptions); ``` ## Questions How to set the proxy after the new ChromeDriver() event occurs","closed","needs-triaging,","caiquan-github","2020-11-30T06:52:21Z","2021-09-05T08:27:47Z"
"","9092","When will selenium 4.0 have a supporting IEDriverServer 4.0 driver","## üí¨When will selenium 4.0 have a supporting IEDriverServer 4.0 driver ![image](https://user-images.githubusercontent.com/11961613/105632591-f264ee80-5e8e-11eb-8ce4-53983359a681.png)","closed","","zxxwslq","2021-01-24T13:56:22Z","2021-09-05T08:24:54Z"
"","9379","Selenium Chrome Leak","## üí¨ When the Selenium Nodes lose contact with the Selenium Hub, because it has crashed or because of a network fault, this typically involves the Hub restarting. When Nodes reconnect, any running Chrome processes within the Node's pod are lost and never shut down by the Selenium Node wrapper.  In extreme cases, after multiple Hub restarts, this can result in 4-5 simultaneous Chrome instances with multiple processes each:    This causes our Selenium Node pods to crash and the tests using the browser/Node to fail. We are running the Hub as a Kubernetes Deployment and have designed our tests to handle some timeouts, but have not been able to fully resolve this, since it occurs when contact with the Nodes is lost. Restarting all of the Selenium Nodes when this occurs would delay test pipelines by many minutes, and we cannot reliably identify which Chrome processes should be shut down.","closed","","reneelanders","2021-04-13T21:12:56Z","2021-09-05T08:08:31Z"
"","9432","Unable to register the node and the config help doesn't seem to have the latest browser specific args","## üí¨ Questions and Help Receiving this below error when trying to register the nodes to the router and the config file for the node doesn't seem to have accurate info on the browser specific args to pass. [server] # Whether the Selenium server should allow web browser connections from any host # Type: boolean # Default: false # Example: allow-cors = false  # Server IP or hostname: usually determined automatically. # Type: string # Example: host = """"  # Server certificate for https. Get more detailed information by running ""java -jar selenium-server.jar info security"" # Type: path # Example: https-certificate = ""\\cert.pem""  # Private key for https. Get more detailed information by running ""java -jar selenium-server.jar info security"" # Type: path # Example: https-private-key = ""\\key.pkcs8""  # Maximum number of listener threads. Default value is: (available processors) * 3. # Type: int # Default: 12 # Example: max-threads = 4  # Port to listen on. There is no default as this parameter is used by different components, for example Router/Hub/Standalone will use 4444 and Node will use 5555. # Type: integer # Example: port = 5555  # Node registration secret # Type: string # Example: registration-secret = ""grid4""   [node] # Autodetect which drivers are available on the current system, and add them to the Node. # Type: boolean # Default: true # Example: detect-drivers = true  # List of configured drivers a Node supports. It is recommended to provide this type of configuration through a toml config file to improve readability. Command line example: --drivers-configuration name=""Firefox Nightly"" max-sessions=6 stereotype='{""browserName"": ""firefox"", ""browserVersion"": ""ANY"", ""moz:firefoxOptions"": {""binary"":""n\\geckodriver""}}' # Type: list of strings # Example: [[node.driver-configuration]] name = ""Firefox Nightly"" max-sessions = 4 stereotype = ""{""browserName"": ""firefox"", ""browserVersion"": ""85"", ""moz:firefoxOptions"": {""binary"":""\\geckodriver.exe""}}""  # Mapping of fully qualified class name to a browser configuration that this matches against. --driver-factory org.openqa.selenium.example.LynxDriverFactory '{""browserName"": ""lynx""}' # Type: list of strings # Example: #driver-factories = [""org.openqa.selenium.firefox.FirefoxDriver '{""browserName"": ""firefox""}']  # Drivers that should be checked. If specified, will skip autoconfiguration. Example: -I ""firefox"" -I ""chrome"" # Type: list of strings # Default: [] # Example: driver-implementation = [""firefox""]  # Public URL of the Grid as a whole (typically the address of the Hub or the Router) # Type: string # Example: grid-url = """"  # How often, in seconds, will the Node send heartbeat events to the Distributor to inform it that the Node is up. # Type: int # Default: 60 # Example: heartbeat-period = 60  # Maximum number of concurrent sessions. Default value is the number of available processors. # Type: int # Default: 4 # Example: #max-sessions = 4  # The # of available processos is the recommended max sessions value (1 browser session per processor). Setting this flag to true allows the recommended max value to be overwritten. Session stability and reliability might suffer as the host could run out of resources. # Type: boolean # Default: false # Example: override-max-sessions = false  # How often, in seconds, the Node will try to register itself for the first time to the Distributor. # Type: int # Default: 10 # Example: register-cycle = 10  # How long, in seconds, will the Node try to register to the Distributor for the first time. After this period is completed, the Node will not attempt to register again. # Type: int # Default: 120 # Example: register-period = 120  # Let X be the session-timeout in seconds. The Node will automatically kill a session that has not had any activity in the last X seconds. This will release the slot for other tests. # Type: int # Default: 300 # Example: session-timeout = 300   [logging] # Log encoding # Type: string # Example: log-encoding = UTF-8  # File to write out logs # Type: string # Example: log-file = ""\\node.log""  # Log level. Default logging level is INFO. Log levels are described here https://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html # Type: string # Default: INFO # Example: log-level = ""FINE""  # Use plain log lines # Type: boolean # Default: true # Example: plain-logs = true  # Use structured logs # Type: boolean # Default: false # Example: structured-logs = false   [events] # Whether the connection string should be bound or connected. When true, the component will be bound to the Event Bus (as in the Event Bus will also be started by the component, typically by the Distributor and the Hub). When false, the component will connect to the Event Bus. # Type: boolean # Example: bind = false  # Full classname of non-default event bus implementation # Type: string # Example: implementation = ""org.openqa.selenium.events.zeromq.ZeroMqEventBus""  # Connection string for publishing events to the event bus # Type: string # Example: publish = ""tcp://:4442""  # Connection string for subscribing to events from the event bus # Type: string # Example: subscribe = ""tcp://:4443""      **Error:** java.lang.reflect.InvocationTargetException         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)         at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.base/java.lang.reflect.Method.invoke(Method.java:566)         at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77)         at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: io.ous.jtoml.ParseException: Newline expected after assignment at 53:16         at io.ous.jtoml.impl.Parser.error(Parser.java:250)         at io.ous.jtoml.impl.Parser.parse(Parser.java:51)         at io.ous.jtoml.JToml.parse(JToml.java:35)         at org.openqa.selenium.grid.config.TomlConfig.(TomlConfig.java:45)         at org.openqa.selenium.grid.config.TomlConfig.from(TomlConfig.java:55)         at org.openqa.selenium.grid.config.Configs.from(Configs.java:40)         at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)         at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)         at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)         at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)         at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)         at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)         at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:517)         at org.openqa.selenium.grid.config.ConfigFlags.readConfigFiles(ConfigFlags.java:72)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:105)         at org.openqa.selenium.grid.Main.launch(Main.java:83)         at org.openqa.selenium.grid.Main.go(Main.java:57)         at org.openqa.selenium.grid.Main.main(Main.java:42)         ... 6 more","closed","","shmikkil","2021-04-30T17:07:23Z","2021-09-05T08:06:38Z"
"","9355","selenium not support client hints?","## üí¨ Questions and Help now chrome support about useragentdata, client hints so when i use chrome it can see on header, there is data like below image ![Ï†úÎ™© ÏóÜÏùå](https://user-images.githubusercontent.com/43901020/113493185-396b0200-9518-11eb-9c9c-09f481037f14.png)  but when i use selenium, it cant see that data so i want to know how to set data on header that datas ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","spellofstar","2021-04-03T22:36:51Z","2021-09-05T08:08:42Z"
"","9180","Script Button does not appear in Headless","## üí¨ Questions and Help Hi, I wrote an integration test with ePayco, a payment provider. The button is from a script tag and it does appear when it is not in headless mode. I am not sure why the button does not appear in headless mode.  I have attached a screenshot of it ![Uploading Screen Shot 2021-02-16 at 10.11.04 am.png‚Ä¶](Button does not appear in Headless mode)  ![Uploading Screen Shot 2021-02-16 at 10.14.02 am.png‚Ä¶](Normal mode)","closed","","ckhung5","2021-02-15T23:14:28Z","2021-09-05T08:19:04Z"
"","9743","Isn't `presence_of_all_elements_located` redundant?","## üí¨ Questions and Help Does presence_of_all_elements_located do anything that presence_of_element_located doesn't for WebDriverWait?  It looks like they both do the same thing: wait until one element is found. The first does it by using findElement and the second by using findElements. The fact that the latter returns a list doesn't seem to matter because all the presence function cares about is that an exception wasn't thrown in the attempt.  presence_of_all_elements_located also gives misleading impression that it somehow waits until all elements are loaded, when in fact Selenium isn't capable of anything like that. It looks like this function is doing more harm than good. Wouldn't it be better to just remove it?","closed","","stevennic","2021-08-15T17:02:41Z","2021-09-15T00:05:48Z"
"","9288","Chromedriver version not available for 89.0.4389.82","## üí¨ Questions and Help Chromedriver version not available for 89.0.4389.82 because of which my current chrome version is not able to run functional tests  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Ace0611","2021-03-16T07:23:35Z","2021-09-05T08:12:16Z"
"","9656","can't scrap content of span element.","## üí¨ Questions and Help #This is mycode:          cost_exist = driver.find_element_by_xpath(""/html/body/main/div[1]/div/div/div[2]/div[1]/ul/li/span[2]"").text         assert cost_exist is not None         print(cost_exist)  #Gives blank output and getting no error. Element exists with value in it.","closed","","sandeepyadav1478","2021-07-15T10:08:49Z","2021-09-05T07:50:45Z"
"","9519","After the button is clicked, the statement will not be executed down and the timeout will not be reported.","## üí¨ Questions and Help  ÂΩìÊàëÊìçÊéßdriverÁÇπÂáª‰∏Ä‰∏™ÊåâÈíÆÂêéÔºåÊ≠§ÊåâÈíÆÁöÑ‰∫ã‰ª∂‰∏∫‰ΩøÁî®showModalDialogÊâìÂºÄ‰∏Ä‰∏™Êñ∞ÁöÑÁ™óÂè£ÔºåÁ®ãÂ∫è‰æø‰∏çÂÜçÂæÄ‰∏ãËøõË°å‰∫ÜÔºå‰ºö‰∏ÄÁõ¥ÂÅúÁïôÂú®ÁÇπÂáªÊåâÈíÆÁöÑËøôÊù°ËØ≠Âè•‰∏äÔºåÂç≥‰ΩøÊàëËÆæÁΩÆ‰∫Üset_page_load_timeoutÔºåÂç≥‰ΩøÊàë‰ΩøÁî®Â§öÁ∫øÁ®ãÁÇπÂáªÊåâÈíÆÔºàÁî®Â§öÁ∫øÁ®ãÁöÑËØùÂç≥‰ΩøËØ≠Âè•‰ºöÂæÄ‰∏ãËµ∞Ôºå‰ΩÜÊòØ‰∏ÄÊó¶Áî®Âà∞driverÔºå‰πü‰ºö‰∏ÄÁõ¥ÂÅúÂú®ËøôÊù°ËØ≠Âè•‰∏äÔºâ„ÄÇÊàëÊÉ≥ÈóÆ‰∏ãËøôÊòØÂê¶ÊòØbugÔºüÊàëÂ∫îËØ•ÊÄé‰πàÊìç‰ΩúËøõË°åÈÅøÂÖçÔºü  When I manipulate the driver to click a button, the event of this button is to use showModalDialog to open a new window, the program will no longer proceed down, and will always stay on the statement of clicking the button, even if I set set_page_load_timeout, even I use multithreading to click the button (even if the statement will go down with multithreading, but once the driver is used, it will always stop on this statement). I want to ask if this is a bug? What should I do to avoid it?  environmentÔºö seleniumÔºö3.141.0 firefoxÔºö52.9.0ÔºàThis version will support the showModalDialog commandÔºâ geckodriverÔºö0.15.0  The multi-threaded code is as follows ```python     PreCarriage_btnVoyageSelector = self.__driver.find_element_by_id(         'ctl00_ContentPlaceHolder1_UcLegs1_UcPreCarriage_btnVoyageSelector')     try:         _thread.start_new_thread(element_click, (PreCarriage_btnVoyageSelector,))     except TimeoutException:         pass     window_handles = self.__driver.window_handles  def element_click(element):     element.click() ```","closed","","sfx478076717","2021-05-27T06:57:44Z","2021-09-05T08:03:17Z"
"","9003","""Session was terminated due to BROWSER_TIMEOUT"" Exception seek help","## üí¨ Questions and Help  versionÔºö3.141.59 browserÔºöchrome questionÔºöIn the process of case testing, abnormal results are often reported Ôºöwas terminated due to BROWSER_TIMEOUTÔºåTry to increase the startup parameter ‚Äútimeout‚Äù and ‚ÄúbrowserTimeout‚Äù or soÔºå By adding startup parameters ‚Äú java -Dwebdriver.server.session.timeout=36000‚Äù, the system still reports an exception. How to deal with this problem  Slenium startup scriptÔºö java -Dwebdriver.server.session.timeout=36000 -jar selenium-server-standalone-3.141.59.jar -role hub  -maxSession 100 -timeout 36000 -browserTimeout 36000 -port 4444 java -Dwebdriver.server.session.timeout=36000 -jar selenium-server-standalone-3.141.59.jar -role node -maxSession 100 -timeout 36000 -browserTimeout 36000 -port 5001  Exception info Ôºö ` ""Session [67c5d47bd8a90de0fccc568a4370be62] was terminated due to BROWSER_TIMEOUT Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'iZbp142ibmibicnlpjkwynZ', ip: '172.16.160.46', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1062.12.1.el7.x86_64', java.version: '1.8.0_151' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 85.0.4183.83, chrome: {chromedriverVersion: 85.0.4183.83 (94abc2237ae0c..., userDataDir: /tmp/.com.google.Chrome.PIQWop}, goog:chromeOptions: {debuggerAddress: localhost:35734}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: eager, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: 67c5d47bd8a90de0fccc568a437...} Session ID: 67c5d47bd8a90de0fccc568a4370be62"" `","closed","","MaxBill","2020-12-28T05:38:52Z","2021-09-05T08:27:45Z"
"","9834","Selenium-specflow test script displays error in VS2019","## üí¨ Questions and Help  Selenium-specflow test script displays error in VS2019  Error Details:  Severity Code Description Project File Line Suppression State Error The ""GenerateFeatureFileCodeBehindTask"" task failed unexpectedly. System.Exception: Error when reading project file. ---> System.Configuration.ConfigurationErrorsException: Unrecognized element 'unitTestProvider'. at System.Configuration.ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey) at System.Configuration.ConfigurationSection.DeserializeSection(XmlReader reader) at TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler.CreateFromXml(String xmlContent) at TechTalk.SpecFlow.Configuration.ConfigurationLoader.Load(SpecFlowConfiguration specFlowConfiguration, ISpecFlowConfigurationHolder specFlowConfigurationHolder) at TechTalk.SpecFlow.Generator.Configuration.GeneratorConfigurationProvider.LoadConfiguration(SpecFlowConfiguration specFlowConfiguration, SpecFlowConfigurationHolder specFlowConfigurationHolder) at TechTalk.SpecFlow.Generator.Configuration.GeneratorConfigurationProviderExtensions.LoadConfiguration(IGeneratorConfigurationProvider configurationProvider, SpecFlowConfigurationHolder configurationHolder) at TechTalk.SpecFlow.Generator.Project.ProjectReader.ReadSpecFlowProject(String projectFilePath, String rootNamespace) --- End of inner exception stack trace --- at TechTalk.SpecFlow.Generator.Project.ProjectReader.ReadSpecFlowProject(String projectFilePath, String rootNamespace) at TechTalk.SpecFlow.Generator.Project.MSBuildProjectReader.LoadSpecFlowProjectFromMsBuild(String projectFilePath, String rootNamespace) at SpecFlow.Tools.MsBuild.Generation.SpecFlowProjectProvider.GetSpecFlowProject() at SpecFlow.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTaskExecutor.Execute() at SpecFlow.Tools.MsBuild.Generation.GenerateFeatureFileCodeBehindTask.Execute() at Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute() at Microsoft.Build.BackEnd.TaskBuilder.d__26.MoveNext() SeleniumWebdriver  Expected behavior  Build generation should be successful  Environment OS: Windows 10 specflow version: 3.9.22 Selenium version: 4.0.0-rc1 Language Bindings version: C#","closed","","svadivel0006","2021-09-16T14:19:26Z","2021-10-17T00:06:52Z"
"","8975","DevTools for RemoteWebDriver","## üí¨ Questions and Help  Is it possible to use DevTools when the driver is ""RemoteWebDriver""? I've tried the different modules and they are working really well and are really useful, although it's on a local run using ""ChromeDriver"". When trying to execute a remote test using RemoteWebDriver, I cannot use DevTools, since the driver does not implement the interface IDevTools.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","LyubomirStoimchev","2020-12-16T12:55:17Z","2021-09-05T08:30:06Z"
"","9144","Chrome Driver wiki update","## üí¨ Questions and Help  In this section: https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver#quick-installation  Please update this:   Mac users with Homebrew installed: `brew tap homebrew/cask && brew cask install chromedriver` To this:   Mac users with Homebrew installed: `brew tap homebrew/cask && brew install chromedriver --cask`  Running the original command results in an error due to deprecation","closed","","RamiTaleb","2021-02-04T20:41:52Z","2021-09-05T08:19:13Z"
"","8966","how to controls the browser that has been opened by nodejs","## üí¨ Questions and Help  I've read the api docs , but I can't find a way to do it","closed","","enncy","2020-12-14T02:29:47Z","2021-09-05T08:30:10Z"
"","9279","Python - How to run execute_cdp_cmd for all tabs","## üí¨ Questions and Help  I have use execute_cdp_cmd to excute some script like change useragent for chromedriver. But it only work for first tab and not working for new tab. Anyone have the same problem as me?","closed","","lequanghiep74","2021-03-14T11:18:47Z","2021-09-05T08:12:20Z"
"","8891","python document","## üí¨ Questions and Help  I can't visit the python document! Has its website  been changed?","closed","","Yesuyang","2020-11-21T18:06:17Z","2021-09-05T08:31:23Z"
"","9584","`RunScript` command adds a script section or not?","## üí¨ Questions and Help  Hey there I was reading a `spec` of selenium commands and discovered `run script` I starting to think if it any different from `execute script` according to the doc it is. c > Creates a new ""script"" tag in the body of the current test window, and adds the specified text into the body of the command. Beware that JS exceptions thrown in these script tags aren't managed by Selenium, so you should probably wrap your script in try/catch blocks if there is any chance that the script will throw an exception.  But from what I see in the code is just the same as `exec script` (I may be wrong), except not saving a returned value?  https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/dotnet/src/webdriverbackedselenium/Internal/SeleniumEmulation/RunScript.cs#L27-L55","closed","","zhiburt","2021-06-16T09:57:34Z","2021-09-05T08:01:04Z"
"","9070","Facing issue while running selenium script in firefox.","## üí¨ Questions and Help  AOA,  Please help me I am facing issue while running a selenium script in firefox. following is the error: Can't find symbol 'eglSwapBuffersWithDamageEXT'. Can't find symbol 'eglSetDamageRegionKHR'. console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new Error("""", ""(unknown module)"")) 1611135123928	Marionette	INFO	Listening on port 8903 1611135123966	Marionette	WARN	TLS certificate errors will be ignored for this session Jan 20, 2021 2:32:04 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C  Please also note that, script was running successfully till 24 dec 2020, and now I have run my scripts then I got jar files missing errors in Java Buld path location on eclispe,.  i have updated all jars and then run the same script, but now I am getting this error..like Cant find sybmol....... ![Cant find symbol error](https://user-images.githubusercontent.com/77724525/105157231-9583d400-5b2e-11eb-9006-d4f197ce02c8.png)   Thanks, Faraz","closed","","faraz031","2021-01-20T09:49:02Z","2021-09-05T08:24:59Z"
"","8922","http proxy use questions","## üí¨ Questions and Help  ### Questions background http proxy use can only be set in new ChromeDriver() ``` ChromeOptions chromeOptions = new ChromeOptions();         chromeOptions.addArguments(""-headless"");         Proxy proxy = new Proxy();         chromeOptions.setProxy(proxy);         //new webDriver         webDriver = new ChromeDriver(chromeOptions); ``` ### Questions  How to set the proxy after the new ChromeDriver() event occurs","closed","","caiquan-github","2020-11-30T06:42:00Z","2021-09-05T08:30:18Z"
"","9459","What is the alternative for Implicit wait","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed. What is the alternative for selenium implicit wait 'implicitlyWait(long, java.util.concurrent.TimeUnit)' as it has been deprecated. I don't want to use explicit and fluent wait. The implicit wait was simple as we need to specify once in the code.","closed","","paritoshnice","2021-05-10T13:31:39Z","2021-09-05T08:06:29Z"
"","9723","selenium.common.exceptions.WebDriverException: Message: unknown error: cannot create default profile directory","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  Hi   I getting this error   ```selenium.common.exceptions.WebDriverException: Message: unknown error: cannot create default profile directory``` How can i fix this?","closed","","Scarner56","2021-08-06T14:41:20Z","2021-09-06T00:05:29Z"
"","9670","How to deploy autoscalable selenium grid 4 on kubernetes?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jagannagare","2021-07-21T10:13:58Z","2021-09-05T07:50:39Z"
"","9612","Can we scroll to the bottom of a ""dialogue box"" ""automatically"" ? I don't want to be using the x_path","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","aparnakesarkar","2021-06-28T04:03:52Z","2021-09-05T07:59:08Z"
"","9458","How do I add custom locator to @FindBy annotation?","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group so far i have used this code  `public class SomeIds extends By {  private final String someid;  public SomeIds(String someid) {     this.someid = someid; }  @Override public List findElements(SearchContext searchContext) {     return searchContext.findElements(By             .xpath(""//*[@someIDs = '"" + someid + ""']"")); }  @Override public WebElement findElement(SearchContext context) {     return context.findElement(By             .xpath(""//*[@someIDs = '"" + someid + ""']"")); }}`  with the helo of this i can do this   `drver.findElement(new SomeIds(""""))`  but how do I make it available in @FindBy annotation? `@FindBy(SomeIds='test') WebElement testElement`","closed","","Shreeranga1","2021-05-10T05:59:26Z","2021-09-05T08:06:30Z"
"","9375","Getting ""RangeError: Maximum call stack size exceeded"" due to ""Exception in PromiseRejectCallback"" when I try to switch to an iframe. My Iframe contains a huge map that requires significant amount of time to load completely.","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group ![IMG_20210412_151816](https://user-images.githubusercontent.com/38814600/114377035-d7f40480-9ba3-11eb-8564-064c3f95210b.jpg)  Getting ""RangeError: Maximum call stack size exceeded"" due to ""Exception in PromiseRejectCallback"" when I try to switch to an iframe. My Iframe contains a huge map that requires significant amount of time to load completely.","closed","","kwishna","2021-04-12T10:00:12Z","2021-09-05T08:08:33Z"
"","9064","Why Selenuim is Sooooooo slow?!","## üí¨ Questions and Help  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/)","closed","","TuTAH1","2021-01-19T19:24:56Z","2021-09-05T08:25:00Z"
"","9899","prueba1","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Emmi05","2021-10-11T15:59:16Z","2021-11-11T00:06:50Z"
"","9890","proxy","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","rrmittal013","2021-10-07T10:52:11Z","2021-11-07T00:06:34Z"
"","9871","MGB-Protocol","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","MGBtrust","2021-09-28T05:08:29Z","2021-10-29T00:06:13Z"
"","9829","Possible causes are invalid address of the remote server or browser start-up failure.","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","luzhihua407","2021-09-15T04:16:43Z","2021-10-16T00:06:19Z"
"","9809","internet","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","chance-up","2021-09-10T07:50:36Z","2021-10-11T00:06:04Z"
"","9788","selenium","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sayed-quader","2021-09-03T06:21:15Z","2021-10-04T00:06:12Z"
"","9781","how to select a drop down in selenium using java xpath","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ileko1","2021-09-01T19:24:36Z","2021-10-02T00:06:25Z"
"","9772","how to create a variable in python","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Desire1991","2021-08-31T08:30:16Z","2021-10-01T00:07:28Z"
"","9764","Automate an application by logint o Citrix and Connecting to VDI?","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","AnilMohnani","2021-08-26T17:30:22Z","2021-09-26T00:06:10Z"
"","9757","sslcertverification","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","morenoledax","2021-08-23T14:04:19Z","2021-09-23T00:05:34Z"
"","9679","Exception in thread ""main"" java.lang.NoClassDefFoundError: com/google/common/collect/ImmutableMap","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","KulkarniNiranjan","2021-07-23T14:17:01Z","2021-09-05T07:50:34Z"
"","9674","Search button","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","yessine66","2021-07-21T16:24:26Z","2021-09-05T07:50:36Z"
"","9673","bitton","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","yessine66","2021-07-21T16:24:14Z","2021-09-05T07:50:37Z"
"","9641",".","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Mariner41165","2021-07-07T17:32:42Z","2021-09-05T07:58:59Z"
"","9597","Timed out waiting for ChromeDriver server to start.","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jbedge","2021-06-18T19:59:46Z","2021-09-05T07:59:13Z"
"","9596","Timed out waiting for ChromeDriver server to start.","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jbedge","2021-06-18T19:58:46Z","2021-09-05T07:59:13Z"
"","9573","https","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","carloskaa","2021-06-15T01:15:22Z","2021-09-05T08:01:07Z"
"","9556","dword","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","pilsony","2021-06-09T04:08:33Z","2021-09-05T08:01:10Z"
"","9539","remotely access chrome in python file","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Nayana93","2021-06-02T10:20:40Z","2021-09-05T08:01:15Z"
"","9532","src","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Ilsaf7","2021-05-30T17:40:27Z","2021-09-05T08:01:18Z"
"","9530","remote webdriver","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","bhupal6011","2021-05-28T08:15:47Z","2021-09-05T08:01:18Z"
"","9514","Select Chrome Profile","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","dgrayluv2fly","2021-05-25T19:14:14Z","2021-09-05T08:03:19Z"
"","9508","test","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","fahimainfo","2021-05-24T07:41:35Z","2021-09-05T08:03:21Z"
"","9446","ERROR: Could not find a version that satisfies the requirement webdriver (from versions: none)","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","neha6520","2021-05-05T13:26:25Z","2021-09-05T08:06:35Z"
"","9408","timeouts","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","VTEP1","2021-04-21T15:38:39Z","2021-09-05T08:06:47Z"
"","9356","isDisplayed() not returning false","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","praveengithub1985","2021-04-04T06:17:09Z","2021-09-05T08:08:42Z"
"","9317","Message: 'chromedriver' executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","divyaprasad95","2021-03-22T02:58:50Z","2021-09-05T08:10:45Z"
"","9267","Exception in thread ""main"" java.lang.UnsupportedClassVersionError: com/google/common/collect/ImmutableSet :","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","vikashtripathi007","2021-03-12T08:24:50Z","2021-09-05T08:12:22Z"
"","9242","Exception occured: org.openqa.selenium.ElementNotInteractableException: element not interactable","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","PriyankaRCM","2021-03-08T13:42:22Z","2021-09-05T08:15:40Z"
"","9230","1","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","anb76ru","2021-03-02T13:33:24Z","2021-09-05T08:15:46Z"
"","9185","binarylocation","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","abylkhatov","2021-02-16T21:08:22Z","2021-09-05T08:19:03Z"
"","9151","chrome binary","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","nilshapavan77","2021-02-07T06:22:47Z","2021-09-05T08:19:13Z"
"","9121","PHPUnit_Extensions_Selenium2TestCase_Keys","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","yokomichi-debono","2021-01-29T14:51:56Z","2021-09-05T08:21:36Z"
"","9114","chromedriver","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","ymichen","2021-01-28T03:56:56Z","2021-09-05T08:21:37Z"
"","9100","java.lang.ClassNotFoundException","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","sunitsdongare","2021-01-26T06:10:22Z","2021-09-05T08:21:41Z"
"","9099","webdriverjs","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","provanandparanjape","2021-01-26T00:14:55Z","2021-09-05T08:21:42Z"
"","9097","199 Exit code","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","meeta-dayama-thd","2021-01-25T18:38:23Z","2021-09-05T08:21:44Z"
"","9095","hidden dropdown","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","alex-sadchenko","2021-01-25T16:48:41Z","2021-09-05T08:21:45Z"
"","9088","new issue","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","EmreErolQA","2021-01-22T15:35:18Z","2021-09-05T08:24:55Z"
"","8970","webpage does not load","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","RashPath","2020-12-16T09:58:53Z","2021-09-05T08:30:07Z"
"","8969","""The server is asking for your user name and password""","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","kac-cg","2020-12-14T20:08:51Z","2021-09-05T08:30:10Z"
"","8924","Capabilities_JSON_Object","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","291727610","2020-11-30T07:40:03Z","2021-09-05T08:30:18Z"
"","8910","withTagName","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jdakata","2020-11-26T11:30:30Z","2021-09-05T08:30:20Z"
"","8909","with","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","jdakata","2020-11-26T11:28:57Z","2021-09-05T08:30:20Z"
"","8898","Unable to open URL using selenium VBA","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","righteous-a11y","2020-11-23T12:21:22Z","2021-09-05T08:30:25Z"
"","8895","switch_to_window","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","GregoMiranda","2020-11-23T06:21:01Z","2021-09-05T08:31:22Z"
"","8890","page load wait","## üí¨ Questions and Help  ## Note: You didn't choose a template in the previous step, therefore this will be treated as a ""Questions / Help"" one.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC channel](https://webchat.freenode.net/) - [SeleniumHQ Slack channel](https://seleniumhq.slack.com/join/shared_invite/enQtODAwOTUzOTM5OTEwLTZjZjgzN2ExOTBmZGE0NjkwYzA2Nzc0MjczMGYwYjdiNGQ5YjI0ZjdjYjFhMjVlMjFkZWJmNDYyMmU1OTYyM2Y) - The [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","evkuz","2020-11-20T13:29:51Z","2021-09-05T08:31:24Z"
"","9241","Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 800700C1 ('%1 is not a valid win32 application')","## üí¨ Questions and Help  ## ENV: OS: Windows 10 Selenium Version: 3.141.0 Browser: Internet Explorer 11  ## ISSUE: ``` selenium.common.exceptions.SessionNotCreatedException: Message:  Unexpected error launching Internet Explorer.  IELaunchURL() returned HRESULT 800700C1 ('%1 is not a valid win32 application') ``` ## log: ``` I 2021-03-08 14:55:52:482 c:\projects\webdriver\cpp\webdriver-server\server.cc(87) Starting WebDriver server on port: '4083' on host: '' I 2021-03-08 14:55:52:482 c:\projects\webdriver\cpp\iedriver\ieserver.cpp(33) Driver version: 3.141.0.0 (32-bit) D 2021-03-08 14:55:52:897 c:\projects\webdriver\cpp\webdriver-server\server.cc(338) Command: POST /session {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {""browserName"": ""internet explorer"", ""platformName"": ""windows""}}, ""desiredCapabilities"": {""browserName"": ""internet explorer"", ""version"": """", ""platform"": ""WINDOWS""}} D 2021-03-08 14:55:52:897 c:\projects\webdriver\cpp\iedriver\iesession.cpp(53) Mutex acquired for session initalization D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\iesession.cpp(109) Releasing session initialization mutex D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\webdriver-server\command.cc(36) Raw JSON command: { ""name"" : ""newSession"", ""locator"" : { }, ""parameters"" : {""capabilities"": {""firstMatch"": [{}], ""alwaysMatch"": {""browserName"": ""internet explorer"", ""platformName"": ""windows""}}, ""desiredCapabilities"": {""browserName"": ""internet explorer"", ""version"": """", ""platform"": ""WINDOWS""}} } D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(788) Executing command: newSession D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(46) Found W3C capabilities structure D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(217) Found alwaysMatch in capabilities D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(225) Validating alwaysMatch capability set D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(601) Validating capabilities object D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(636) Found browserName capability. Validating value type is string. D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(665) Found platformName capability. Validating value type is string. D 2021-03-08 14:55:52:900 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(246) Validating firstMatch capability set with index 0 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(601) Validating capabilities object D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(300) Processing matched capability set with index 0 W 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\commandhandlers\newsessioncommandhandler.cpp(107) Invalid capability setting: timeouts is type null instead of object. Default value will be used: null  D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(147) Ignoring Protected Mode Settings: 0 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(150) Checking validity of Protected Mode settings. D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(1080) Detected IE version: 11, Windows version supports Protected Mode: 1 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(1171) Found Protected Mode setting value of 3 for zone 1 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(1171) Found Protected Mode setting value of 3 for zone 2 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(1171) Found Protected Mode setting value of 3 for zone 3 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(1171) Found Protected Mode setting value of 3 for zone 4 D 2021-03-08 14:55:52:901 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(153) Has Valid Protected Mode Settings: 1 D 2021-03-08 14:55:52:904 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(249) Starting IE using the IELaunchURL API W 2021-03-08 14:55:52:908 c:\projects\webdriver\cpp\iedriver\browserfactory.cpp(254) -2147024703 [%1 ‰∏çÊòØÊúâÊïàÁöÑ Win32 Â∫îÁî®Á®ãÂ∫è„ÄÇ]: Error using IELaunchURL to start IE W 2021-03-08 14:55:52:908 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(1045) Unable to launch browser, received NULL process ID D 2021-03-08 14:55:52:908 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(791) Command execution for newSessioncomplete W 2021-03-08 14:55:52:908 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(837) Unable to get current browser D 2021-03-08 14:55:52:908 c:\projects\webdriver\cpp\iedriver\iecommandexecutor.cpp(843) Setting serialized response to { 	""value"" :  	{ 		""data"" : null, 		""error"" : ""session not created"", 		""message"" : ""Unexpected error launching Internet Explorer. IELaunchURL() returned HRESULT 800700C1 ('%1 \u4e0d\u662f\u6709\u6548\u7684 Win32 \u5e94\u7528\u7a0b\u5e8f\u3002') for URL 'http://localhost:4083/'"", 		""stacktrace"" : """" 	} } ```","closed","","Hideinsecret","2021-03-08T07:30:08Z","2021-09-05T08:15:40Z"
"","9691","Where can I see the firefox.webdriver.options.add_argument?","## üí¨ Questions and Help   I want to find the option argument value corresponding to firefox.  I checked that there is the following in the official document, but I could not confirm the code or information.  Is there a link that I can refer to?  I cheked your link but I don't help : https://www.selenium.dev/selenium/docs/api/rb/Selenium/WebDriver/Firefox/Options.html  For questions or help please see: - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","HanHoRang","2021-07-29T05:49:23Z","2021-09-05T07:50:18Z"
"","9463","The question about selenium web-driver with ruby and firefox","## üí¨ Not Sure the problem Here is my env in my Centos7  - Linux  3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux - geckodriver version:   geckodriver 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) - Firefox version:   Failed to open connection to ""session"" message bus: Unable to autolaunch a dbus-daemon without a $DISPLAY for X11   Running without a11y support!   Mozilla Firefox 68.12.0esr  I only use headless mode, here is the simple code: require 'selenium-webdriver'  => true 2.4.1 :002 > Selenium::WebDriver::Firefox::Service.driver_path = ""/var/han/legal/HLP_Test/GoCD/firefox_driver/geckodriver""  => ""/var/han/legal/HLP_Test/GoCD/firefox_driver/geckodriver"" 2.4.1 :003 > options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless'],log_level: :info)  => #  =>2.4.1 :004 > driver = Selenium::WebDriver.for(:firefox,options:options), _it will take a long time to start the browser, normally just a few seconds and it consumes 100 % CPU and up to 5 or 6 GB RAM given my machine is 8GB during the startup_ 2.4.1 :006 > driver.navigate.to(""https://www.baidu.com"") _It failed at this step! it return nil or Net::ReadTimeout: Net::ReadTimeout_  2.4.1 :006 > driver.navigate.to(""https://www.baidu.com"")  => nil 2.4.1 :009 > $driver.navigate.to(""https://www.baidu.com"") Net::ReadTimeout: Net::ReadTimeout         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:176:in `rbuf_fill'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:154:in `readuntil'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:164:in `readline'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:40:in `read_status_line'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:29:in `read_new'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1446:in `block in transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `catch'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1416:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:82:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:59:in `get'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/navigation.rb:32:in `to'         from (irb):9         from /home/centos/.rvm/rubies/ruby-2.4.1/bin/irb:11:in `' but my network to this website is : PING baidu.com (220.181.38.148) 56(84) bytes of data. 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=1 ttl=44 time=3.87 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=44 time=3.91 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=4 ttl=44 time=3.93 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=5 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=6 ttl=44 time=3.83 ms I only user headless mode, when I switch to non-headless, it then will say: _Selenium::WebDriver::Error::UnknownError: invalid argument: can't kill an exited process_  What's wrong here, could anyone take a second to analyze??","closed","","ThomasSun001","2021-05-11T11:12:20Z","2021-09-05T08:03:35Z"
"","9322","Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start.","## üí¨ Not able to start chrome driver in Ubuntu. Getting below error:   `package com.test;  import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver;  import io.github.bonigarcia.wdm.WebDriverManager;  public class A { public static void main(String[] args) throws InterruptedException { 	 	WebDriverManager.chromedriver().setup(); 	WebDriver driver=  new ChromeDriver(); 	driver.get(""http://www.google.com""); 	 	Thread.sleep(5000); 	 	driver.quit(); } } `   Error log:  `SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Starting ChromeDriver 89.0.4389.23 (61b08ee2c50024bab004e48d2b1b083cdbdac579-refs/branch-heads/4389@{#294}) on port 12322 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'dakshesh', ip: '172.17.0.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-139-generic', java.version: '1.8.0_282' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:202) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:188) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:123) 	at com.test.A.main(A.java:12) Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://localhost:12322/status] to be available after 20001 ms 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:100) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:197) 	... 9 more Caused by: java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(FutureTask.java:205) 	at com.google.common.util.concurrent.SimpleTimeLimiter.callWithTimeout(SimpleTimeLimiter.java:156) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:75) 	... 10 more `","closed","","Dakshesh123","2021-03-23T10:16:03Z","2021-09-05T08:10:42Z"
"","9521","Opening link  through already opened chrome Profile using selenium Python","## üí¨ I'm Trying to open a link  https://console.developers.google.com/ from chrome profile using selenium (PYTHON) and do some tasks. I want to by pass the google login by opening the above link from signed in Chrome Profile.  After executing the below code, Its opening a new chrome page and still asking for sign in.   : (   **This is the code I wrote** _from selenium import webdriver options = webdriver.ChromeOptions() options.add_argument(r""user-data-dir=C:\Users\Gowtham Hanumanthu\AppData\Local\Google\Chrome\User Data\Profile 1"")  chrome_path= r""C:\Program Files (x86)\chromedriver.exe"" driver = webdriver.Chrome(chrome_path, chrome_options=options) driver.get(""https://console.developers.google.com/"")_   **The terminal message I got after running** `C:\Users\Gowtham Hanumanthu\Desktop\web scraping\app.py:6: DeprecationWarning: use options instead of chrome_options   driver = webdriver.Chrome(chrome_path, chrome_options=options)  _DevTools listening on ws://127.0.0.1:50631/devtools/browser/99d885bf-b2a5-4fb7-ae02-ea570db57efd [12532:15428:0527/170819.813:ERROR:device_event_log_impl.cc(214)] [17:08:19.814] USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F) [12532:15428:0527/170819.815:ERROR:device_event_log_impl.cc(214)] [17:08:19.816] USB: usb_device_handle_win.cc:1058 Failed to read descriptor from node connection: A device attached to the system is not functioning. (0x1F)_","closed","","hsm-Gowthambalu","2021-05-27T11:48:14Z","2021-09-05T08:03:16Z"
"","9763","C# Project Compilation Error in DevTools V85, V91 & V92","## üí¨ Help required to solve the compilation issue in C#.net on DevTools V85, V91 & V92  I am getting compilation error on C#.net WebDriver.csproj as below  These are the reference are missing and I not seeing any code for this classes  > - using OpenQA.Selenium.DevTools.V85.Log > - using OpenQA.Selenium.DevTools.V85.Page; > - using OpenQA.Selenium.DevTools.V85.Runtime; > - using OpenQA.Selenium.DevTools.V85.Fetch; > - using OpenQA.Selenium.DevTools.V85.Network;  ![image](https://user-images.githubusercontent.com/6602970/130952446-91366eb4-0b46-47b7-9447-8fba6f86d77e.png)  ![image](https://user-images.githubusercontent.com/6602970/130951974-fef3b53c-c22d-46db-a67c-e11df285f8b3.png)  **Kindly please let me know, why this reference error is appearing and how to solve this. Am missing something on this?**  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","Arthanarieaswaran","2021-08-26T11:32:43Z","2021-09-26T00:06:14Z"
"","9749","Overload the Sendkeys() Method to take an int parameter","## üí¨ Feature Requests  I work with Selenium and C# bindings. I worked on a project and we struggled to get an integer value into a numeric field. We researched and tried other techniques but the value that gets passed eventually by the WebDriver is always a string.  If we could overload the SendKeys method to take an integer value as a parameter, I think this will resolve this issue. If there is such an implementation that I am not aware of, please, kindly point me in the right direction.  Thank you for your insights.  ### Please note that this issue tracker is not a help form and this issue will be closed.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","EugeneKonneh","2021-08-19T16:54:33Z","2021-09-19T00:06:01Z"
"","9848","/api/grid/testsession not work in selenium4.0","## üí¨ /api/grid/testsession not work in selenium4.0  ### As the webdriver doc writted, https://webdriver.io/docs/api/selenium/#gridtestsession, I use this API to get detail but failed in selenium 4.0 with can not access this API, but work well in selenium 3.0. Does this API  not support in selenium 4.0? Hope to get your response.  For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hzk007","2021-09-20T06:32:46Z","2021-10-21T00:06:24Z"
"","9849","/api/grid/testsession not work in selenium4.0","## üí¨ /api/grid/testsession not work in selenium4.0  ## Hi, As the WebDriver doc shown,https://webdriver.io/docs/api/selenium/#gridtestsession(it should access to hub:4444/grid/api/testssesion). this API is not work in selenium 4.0 with error cannot access this API,but work well in 3.0, does this API have not supported in 4.0?  Hope to get your response. )   For questions or help please see:  - [SeleniumHQ IRC/Slack channel](https://www.selenium.dev/support/) - [Selenium Users](https://groups.google.com/forum/#!forum/selenium-users) google group","closed","","hzk007","2021-09-20T06:42:58Z","2021-10-21T00:06:23Z"
"","9800","Action Class not working in all the Latest browsers and Selenium C# V""4.0.0-beta4"" or in ""4.0.0-rc1""","## üí• Regression Report Action Class not working in all the latest browsers and Selenium C# V""4.0.0-beta4"" or in ""4.0.0-rc1"", such as 'Drag and Drop', 'Click and Hold', etc..  Code :   ``` using System; using System.Threading; using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.Edge; using OpenQA.Selenium.Firefox; using OpenQA.Selenium.IE; using OpenQA.Selenium.Interactions;   namespace ActionsClass {     [TestClass]     public class UnitTest1     {         [TestMethod]         public void Edge()         {             IWebDriver driver = new EdgeDriver(@""\Edge\93.0.961.38\X64"");              driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html"");              Actions act = new Actions(driver);              Thread.Sleep(4000);              IWebElement src1 = driver.FindElement(By.XPath(""//span[text()='Draggable 1']""));             IWebElement tar1 = driver.FindElement(By.XPath(""//div[@id='mydropzone']""));              Thread.Sleep(4000);              IAction dragAndDrop1 = act.ClickAndHold(src1).MoveToElement(tar1).Release(src1).Build();             dragAndDrop1.Perform();              driver.Close();          }                  [TestMethod]         public void Chrome()         {             IWebDriver driver = new ChromeDriver(@""\Chrome\93.0.4577.15"");              driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html"");              Actions act = new Actions(driver);              IWebElement src2 = driver.FindElement(By.XPath(""//span[text()='Draggable 2']""));             IWebElement tar1 = driver.FindElement(By.XPath(""//div[@id='mydropzone']""));              Thread.Sleep(4000);              act.DragAndDrop(src2, tar1)                 .Build()                 .Perform();              Thread.Sleep(4000);              driver.Close();          }          [TestMethod]         public void Firefox()         {             IWebDriver driver = new FirefoxDriver(@""\Firefox\0.29.1\X64"");              driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html"");              Actions act = new Actions(driver);              //Ctl + t - for opening a new tab              act.KeyDown(Keys.LeftControl)                        .SendKeys(""t"")                        .KeyDown(Keys.LeftControl)                        .Build()                        .Perform();              driver.Close();          }          [TestMethod]         public void IExplorer()         {              IWebDriver driver = new InternetExplorerDriver(@""\InternetExplorer\3.150.1\X64"");              driver.Navigate().GoToUrl(""https://www.seleniumeasy.com/test/drag-and-drop-demo.html"");              Actions act = new Actions(driver);               //alt + f + x - for clsoing the tab              act.KeyDown(Keys.Alt)                .SendKeys(""f"")                .SendKeys(""x"")                .Build()                .Perform();              //driver.Close();          }     } } ```  A clear and concise description of what the regression is.    ## Last working Selenium version  Worked up to version:  Stopped working in version:  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  It was working in the previous version of the browser and Selenium C3  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","G-w3c,","svadivel0006","2021-09-07T23:10:18Z","2021-10-09T00:05:39Z"
"","9787","IEDriverServer, problem of version 3.150.2","## üí• Regression Report (Other people confirms same error and presumed the cause. I followed them. ) I encountered a IE, python and IEDriverServer Error.   * IEDriverServer_Win32_3.150.1/IEDriverServer.exe  -> that works.   * IEDriverServer_Win32_.3.150.2/IEDriverServer.exe  -> that do not work.  The error occurs when attempting driver-update by using webdriver_manager. The error code is: `exception-content:Version must consist of major, minor and/or patch, but given was: .3.150.2`  This error occurs in the following code part of webdriver_manager. The cause is by version string becoming 4-parts composition other than 3-parts one of '3.150.1'.  https://github.com/ghoshchandan19/PythonSelenium/blob/3c1d2a07a3dbf4fbcc50d57374e8c0880ffef5fb/venv/Lib/site-packages/webdriver_manager/driver.py  I think that the version part of IEDriverServer need to be modified.  ### another symptom By using exe file downloaded, another error occurs. (The reproducing sample code contains the part of this point.0 However, I this maybe due to lack of optimal configuration of IE browser setting. Therefore, I think that the problem of version processing need to be modified first.  The driver's ""find_element_by_xpath"" returns a error of finding no result. `Message: Unable to find element with xpath == /html`  (Downloading from:  https://www.selenium.dev/downloads/   ->  https://github.com/SeleniumHQ/selenium/releases/download/selenium-3.150.0/IEDriverServer_Win32_3.150.2.zip )  ## Last working Selenium version  IEDriverServer 3.150.1  ## To Reproduce The below link page contains the source code to reproduce, and preparatory construction procedures (README.md): https://github.com/cashewleaf/error_report_reference  ## Expected behavior No error of version decoding happens.  ## Test script reproducing this issue when applicable) As written in the above,  the below link page contains the source code to reproduce, and preparatory construction procedures (README.md): https://github.com/cashewleaf/error_report_reference  ## Environment OS: Windows 10 Browser: Internet Explorer Browser version: version 21H1 (OS build 19043.1165) Browser Driver version:  .3.150.2 Language Bindings version:  Python 3.9.5 Selenium Grid version (if applicable): N/A","closed","","cashewleaf","2021-09-03T05:23:50Z","2021-10-05T00:05:50Z"
"","9786","IEDriverServer,  problem of version 3.150.2","## üí• Regression Report (Other people confirms same error and presumed the cause. I followed them. ) I encountered a IE, python and IEDriverServer Error.   * IEDriverServer_Win32_3.150.1/IEDriverServer.exe  -> that works.   * IEDriverServer_Win32_.3.150.2/IEDriverServer.exe  -> that do not work.  The error occurs when attempting driver-update by using webdriver_manager. The error code is: `exception-content:Version must consist of major, minor and/or patch, but given was: .3.150.2`  This error occurs in the following code part of webdriver_manager. The cause is by version string becoming 4-parts composition other than 3-parts one of '3.150.1'.  https://github.com/ghoshchandan19/PythonSelenium/blob/3c1d2a07a3dbf4fbcc50d57374e8c0880ffef5fb/venv/Lib/site-packages/webdriver_manager/driver.py  I think that the version part of IEDriverServer need to be modified.  ### another symptom By using exe file downloaded, another error occurs. (The reproducing sample code contains the part of this point.0 However, I this maybe due to lack of optimal configuration of IE browser setting. Therefore, I think that the problem of version processing need to be modified first.  The driver's ""find_element_by_xpath"" returns a error of finding no result. `Message: Unable to find element with xpath == /html`  (Downloading from:  https://www.selenium.dev/downloads/   ->  https://github.com/SeleniumHQ/selenium/releases/download/selenium-3.150.0/IEDriverServer_Win32_3.150.2.zip )  ## Last working Selenium version  IEDriverServer 3.150.1  ## To Reproduce The below link page contains the source code to reproduce, and preparatory construction procedures (README.md): https://github.com/cashewleaf/error_report_reference  ## Expected behavior No error of version decoding happens.  ## Test script reproducing this issue when applicable) As written in the above,  the below link page contains the source code to reproduce, and preparatory construction procedures (README.md): https://github.com/cashewleaf/error_report_reference  ## Environment OS: Windows 10 Browser: Internet Explorer Browser version: version 21H1 (OS build 19043.1165) Browser Driver version:  .3.150.2 Language Bindings version:  Python 3.9.5 Selenium Grid version (if applicable): N/A","closed","","cashewleaf","2021-09-03T05:16:07Z","2021-10-04T00:06:13Z"
"","9483","Selenium 4.0.0-beta-3 : EventFiringDecorator throws error when using JavascriptExecutor to click webelement","## üí• Regression Report  When Using WebDriverListener interface and EventFiringDecorator, i was unable to use JavascriptExecutor to click any webelement. Tried in Google Chrome and in MS Edge  -->  ## Last working Selenium version  Worked up to version: 3.141.59  Stopped working in version: 4.0.0-beta-3  ## To Reproduce Need to create Class for implementing WebDriverListener, and another Test Class to use EventFiringDecorator. (Added test scripts below)  Detailed steps to reproduce the behavior: It was supposed to click on the Webelement , when using   js.executeScript(""arguments[0].click();"", button); **It throws console error** java.lang.IllegalArgumentException: Argument is of an illegal type: com.sun.proxy.$Proxy15 at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:85) at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:550) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64) at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.base/java.lang.reflect.Method.invoke(Method.java:564) at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:228) at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48) at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:287) at com.sun.proxy.$Proxy14.executeScript(Unknown Source)  ## Expected behavior After creating the above class if we run , the application stops and throws error A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable)  **Create a Listener Class** public class DriverEventListener implements WebDriverListener {  public void beforeExecuteScript(WebDriver driver, String script, Object[] args) {     System.out.println(""beforeExecuteScript ""); }  public void afterExecuteScript(WebDriver driver, String script, Object[] args, Object result) {     System.out.println(""afterExecuteScript ""); } } **Create Test Class** WebDriver driver; @Test(priority = 1) public void testNewFeature() {     WebDriverManager.chromedriver().setup();     System.setProperty(""webdriver.chrome.silentOutput"", ""true"");     WebDriverListener customListener = new DriverEventListener();     driver = new EventFiringDecorator(customListener).decorate(new ChromeDriver());     driver.get(""http://www.google.com"");     WebElement button = driver.findElement(By.xpath("".//a[text()='Sign in']""));     JavascriptExecutor js = (JavascriptExecutor) driver;     js.executeScript(""arguments[0].click();"", button);  } }  ## Environment  OS: Windows 10 Browser:  Chrome Browser version: Version 90.0.4430.212 Browser Driver version: Version 90.0.4430.212 Language Bindings version:  java version ""15.0.1"" 2020-10-20 Selenium Grid version (if applicable):   ___________________________________________________________________________","closed","needs-triaging,","Rengarajan347","2021-05-18T05:20:46Z","2021-09-05T08:03:26Z"
"","9052","When opening a new TAB in Internet Explorer, the code throws a connection that has a timeout problem.","## üí• Regression Report  When opening a new TAB in Internet Explorer, the code throws a connection that has a timeout problem. Details of the error are as follows  `Started InternetExplorerDriver server (32-bit) 3.150.1.1 Listening on port 26038 Only local connections are allowed ‰∏ÄÊúà 15, 2021 2:02:30 ‰∏ãÂçà org.openqa.selenium.remote.ProtocolHandshake createSession ‰ø°ÊÅØ: Detected dialect: W3C  Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:26038 Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'LIUKAIGE', ip: '192.168.117.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84) 	at com.zhucx.demo.Test2.main(Test2.java:156) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:26038 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165) 	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257) 	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135) 	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) 	at okhttp3.RealCall.execute(RealCall.java:77) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 4 more Caused by: java.net.ConnectException: Connection refused: connect 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:606) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245) 	... 24 more ` ## Last working Selenium version  Worked up to version: unknown  Stopped working in version: unknown  ## To Reproduce  Detailed steps to reproduce the behavior: Use IE browser for UI operation  ## Expected behavior  Proceed normally  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Internet Explorer Browser version: 19042.685 Browser Driver version:  3.150.1.1 Language Bindings version: Java 1.8 Selenium Grid version (if applicable): 3.141.59","closed","needs-triaging,","EatGoods","2021-01-15T06:26:40Z","2021-09-05T08:25:03Z"
"","9388","Grid 4 doesn't allow more than 1 session for Internet Explorer","## üí• Regression Report  We used Selenium Grid 2 and 3 to run multiple IE sessions in parallel without issues for many years. But now Selenium 4 restrict the number of IE sessions to only 1 without any way to override the restriction.  ## Last working Selenium version  Worked up to version: 3.141.59  Stopped working in version: 4.0.0-alpha  ## To Reproduce  1. Start the hub using `java -jar selenium-server-4.0.0-beta-3.jar hub` 2. Start the IE node using `java -Dwebdriver.ie.driver=IEDriverServer-3.150.1.exe -jar selenium-server-4.0.0-beta-3.jar node --max-sessions 7 --override-max-sessions true`  ## Expected behavior  A grid node that allows up to 7 tests that use IE to run in parallel.  ## Environment  OS: Windows Browser: IE Browser version: 11 Browser Driver version: 3.150.1 Language Bindings version: Java 4.0.0-beta-3 Selenium Grid version (if applicable): 4.0.0-beta-3  I understand that IE might need to be limited to only one instance because of the issues described in http://jimevansmusic.blogspot.com/2012/06/whats-wrong-with-internet-explorer.html Specifically, there are 2 issues when IEDriver uses native events to interact with the browser: - Mouse clicks to the IE window get swallowed up when the browser window does not have the system focus - Mouse hovers work incorrectly (this issues was resolved in newer IEDriver versions)  But http://jimevansmusic.blogspot.com/2013/01/revisiting-native-events-in-ie-driver.html describes that using simulated events instead of native events fixes the remaining ""mouse clicks when not in focus"" issue. This mode can be activated by `InternetExplorerOptions.disableNativeEvents()`. Selenium 3 Grid also has simulated events enabled by default, so simultaneous IE tests worked out of the box with it.  We have a few physical servers with many CPU cores and a lot of RAM to run Selenium tests. We have been running up to 10-15 IE sessions per server without issues for many years thanks to simulated events. Now if Selenium 4 Grid limits us to only 1 IE instance per server, it becomes simply not feasible to do IE testing with the existing infrastructure anymore. I can think of the following solutions: 1. Run virtual machines on a physical server, one VM for one IE instance. This will increase the expenses a lot because we'll need new Windows licenses for each VM. And we still won't be able to run as many IE tests as with Selenium 3 because of the overhead of running a separate OS for each browser instance. 2. Use Docker. This is potentially a bit better than #1, but unfortunately the company policy doesn't allow us to use Docker. 3. Stay on Selenium 3 as long as it still works and look for alternatives for the future. Unfortunately, this is the most realistic option I can think of.  I would appreciate if you allow multiple IE sessions, perhaps with a warning message, or suggest any option other that the three mentioned above.","closed","C-grid,","JohnA2","2021-04-16T18:39:40Z","2021-09-05T08:03:17Z"
"","9318","Could not start a new session. No Node supports the required capabilities","## üí• Regression Report  Using selenium-java version 4-beta 2, session is getting created with server version 3.141.59 but not on server version 4-beta 2.   ## Last working Selenium version  Worked up to version: Server version 3.141.59  Stopped working in version: Server version: 4 beta -2  Gist with server logs and desired capabilities: https://gist.github.com/omkarnathsingh/b378057198f9cd9c850fe8564c660cb3  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 89.0.4389.90 Browser Driver version:  89.0.4389.23 Language Bindings version: Java 4.0.0-beta-2  Selenium Grid version (if applicable): 4 beta-2","closed","C-grid,","omkarnathsingh","2021-03-22T09:00:38Z","2021-09-05T08:10:32Z"
"","9210","Selenium 4 - Unable to set Chrome download.default_directory","## üí• Regression Report  This python code is working with Selenium 3.141 but is not in 4.0.0.b1. I see a warning - Expected type 'Union[str, int]', got 'dict[str,str]' instead. The documentation I see on this shows prefs is a dictionary (https://chromedriver.chromium.org/capabilities).  options = webdriver.ChromeOptions() prefs = {'download.default_directory': 'C:\Temp'} options.add_experimental_option('prefs', prefs)   ## Last working Selenium version  Worked up to version: 3.141  Stopped working in version: 4.0.0.b1  ## To Reproduce  from selenium import webdriver  options = webdriver.ChromeOptions() prefs = {'download.default_directory': 'C:\\Temp'} options.add_experimental_option('prefs', prefs) driver = webdriver.Chrome(options=options) driver.maximize_window() driver.get(""https://www.seleniumhq.org/download/"") laa = driver.find_element_by_link_text(""32 bit Windows IE"") laa.click()  Detailed steps to reproduce the behavior:  ## Expected behavior  Default Download Directory set to specified directory and file is downloaded there.  C:\Temp in this example.  ## Test script reproducing this issue (when applicable)  options = webdriver.ChromeOptions() prefs = {'download.default_directory': 'C:\Temp'} options.add_experimental_option('prefs', prefs)  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 88.0.4324.190 Browser Driver version: 88.0.4324.96 Language Bindings version: Python 3.9.2 Selenium Grid version (if applicable): N/A","closed","C-py,","chadnorris","2021-02-24T20:40:02Z","2021-09-05T08:15:47Z"
"","9753","selenium-server-standalone.jar is not available for Selenium 3.150.0","## üí• Regression Report  There is no selenium-server-standalone.jar available for Selenium 3.150.0     ## Last working Selenium version  Worked up to version: Selenium 3.141.59 (https://github.com/SeleniumHQ/selenium/releases/download/selenium-3.141.59/selenium-server-standalone-3.141.59.jar)  Stopped working in version: Selenium 3.150.0  ## To Reproduce  wget https://selenium-release.storage.googleapis.com/3.150/selenium-server-standalone-3.150.0.jar  ## Expected behavior  https://selenium-release.storage.googleapis.com/3.150/selenium-server-standalone-3.150.0.jar","closed","","al-cheb","2021-08-20T06:46:02Z","2021-09-20T00:05:55Z"
"","9880","Can't start Firefox through Geckodriver on a version below 0.30.0 on Selenium 4.0.0 RC 2","## üí• Regression Report  On Selenium 4 Rc1 I was able to use Geckodriver 0.29 with the latest Firefox version and Geckodriver 0.14 with Firefox version 50.0.2.   Starting on Selenium 4 Rc2, it seems that when I try to start Geckodriver + Firefox it doesn't work unless it's on Geckodriver version 0.30.  I am not sure if this should be considered a regression because I am not using the latest driver, but it used to work on Selenium 4 Rc1 and now it doesn't, so maybe it's a regression?  ## Last working Selenium version  Worked up to version: Selenium 4.0.0 RC 1  Stopped working in version: Selenium 4.0.0 RC 2  ## To Reproduce      Detailed steps to reproduce the behavior:  E.g. on this code:  ``` using OpenQA.Selenium.Firefox; using System;  namespace Selenium_RC2_Firefox {     class Program     {         static void Main(string[] args)         {             FirefoxOptions _firefoxOptions = new FirefoxOptions();             FirefoxDriverService driverService = FirefoxDriverService.CreateDefaultService(""."", ""geckodriver.exe"");              driverService.InitializationTimeout = TimeSpan.FromSeconds(30);             _firefoxOptions.AcceptInsecureCertificates = true;              try             {                 var Browser = new FirefoxDriver(driverService, _firefoxOptions);             }             catch ( Exception e)             {              }         }     } } ```  When running on Geckodriver 0.30 it works. When running on Geckodriver 0.29 it doesn't work and gives this error.  ![image](https://user-images.githubusercontent.com/6776230/135648865-df427364-d682-4442-b845-a794a6e091ae.png)    ## Expected behavior Driver was supposed to start and open firefox.    ## Environment  OS: Windows 10 Browser: Firefox Latest Version Browser version:  92.0.1 for Geckodriver 0.29 and 0.30 and 50.0.2 for Geckodriver 0.14. Browser Driver version: Geckodriver 0.29, Geckodriver 0.30 and Geckodriver 0.14 Language Bindings version: .NET Core 2.1","closed","","AlexWFreitas","2021-10-01T15:44:04Z","2021-11-07T00:06:33Z"
"","9611","Getting error No module named 'selenium' after installing selenium","## üí• Regression Report  Just installed selenium in my virtual environment like so: conda create --name myenv python=3.95 conda activate myenv conda install selenium  --and ""conda list"" shows ""selenium 3.141.0 py39h2bbff1b_1000""  However, I am receiving the following errors: cmd line: ""selenium --help"" 'selenium' is not recognized as an internal or external command, operable program or batch file. jupyter notebook: : from selenium import webdriver No module named 'selenium'","closed","needs-triaging,","KCS40","2021-06-28T01:38:02Z","2021-09-05T07:59:08Z"
"","9281","Options not applied to Chrome in Selenium 4","## üí• Regression Report  It seems that options are not applied properly to Chrome driver anymore in Selenium 4.  ## Last working Selenium version  Worked up to version: 3.141.0  Stopped working in version: 4.0.0.b1  ## To Reproduce  Detailed steps to reproduce the behavior:  ```python >>> from selenium import webdriver >>> options = webdriver.ChromeOptions() >>> options.add_argument('--headless') >>> options.add_argument('--window-size=1800,800') >>> driver = webdriver.Chrome(options=options) ```  ## Expected behavior  I would expect Chrome to start in headless mode with the right window size, but it seems that the chosen options are ignored.  Perhaps the options need to be specified differently in 4.0 but I have not been able to find any documentation on that.  ## Environment  OS: Ubuntu 20.04 LTS Browser: Chrome Browser version: 89.0.4389.82 (Official Build) (64-bit) Browser Driver version: ChromeDriver 89.0.4389.23 Language Bindings version: Python 4.0.0.b1","closed","C-py,","GergelyKalmar","2021-03-14T13:00:28Z","2021-09-05T08:12:18Z"
"","9452","Selenium4b ignores webdriver.chrome.binary","## üí• Regression Report  In previous versions I was able to set `webdriver.chrome.binary` to point to my google-chrome-beta browser binary. In Selenium 4 beta (I checked 1 through 3), this property is ignored.    ## Last working Selenium version  Worked up to version: 3.141.59  Stopped working in version: 4.0.0-beta-1 (I checked up to beta-3)  ## To Reproduce    Detailed steps to reproduce the behavior:  1. Take any working test, for Selenium 4. 2. Add `webdriver.chrome.binary = /any/invalid/path`. 3. Test will still pass, and it should not.  ## Expected behavior  A clear and concise description of what you expected to happen.  I would like to be able to point to different versions of chrome browser, on a machine that has multiple installations - for example: stable and beta. Ideally using the same mechanism as what worked in Selenium 3.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Linux  Browser: Chrome  Browser version: any, I used 91.0.4472.38 beta  Browser Driver version: any matching, I used 91.0.4472.19  Language Bindings version: Java 4.0.0-beta-3  Selenium Grid version (if applicable): n/a","closed","R-awaiting answer,","SiKing","2021-05-06T18:31:28Z","2021-09-05T08:03:36Z"
"","8900","@FindBys stopped working not interacting with the respective element after i update the selenium version","## üí• Regression Report  I was using selenium 3.8.0 till yesterday and it was working perfectly fine but when I tried to enable the framework of the latest firefox I got to know with Gecko driver we need to have selenium more than 3.11 so I added the dependency of 3.141.59 after that everything messed up. The browser is opening but @Findbys elements are not readable.  I have also tried with the 3.8.0 by removing the maven classpath but it is not working at all  ## Last working Selenium version  3.8.0  Stopped working in version:  3.141.59    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  Test:- /* HomePage - verify with popularity in part list page */     @Test(dataProvider = ""getPartsForPopularityCheck"")     public void verifyPopularityInPartResultPage(String partNumber)      {     	int count=-1;     	Iterator itr=productPopularityParts.iterator();     	     		searchQuery=partNumber.substring(0, (partNumber.length()-3));     		System.out.println(""Search query is:-""+searchQuery);     		homePage.searchForProductPopularity(searchQuery); 			Util.waitForPageToBeLoad(); 			while(itr.hasNext()) 	    	{ 	            String element = (String) itr.next(); 	            if(element.contains(searchQuery)) 	            { 	            	count++; 	            	if(element.equals(partNumber)) 	            	{ 	            		break; 	            	} 	            } 	         } 			Assert.assertTrue(srchResultsPage.validateThePartForProductPopularity(partNumber,count), ""The Search by Suggestion is not navigating to SearchResults."");	     }  Page:- /*verify the product Popularity*/ 		 public boolean validateThePartForProductPopularity(String partNo,int count)  		 {  			 clickOnListView(); 			 changeSortByPopularity(); 			 String part = parts.get(count).getText(); 			 String []partNum = part.split("" ""); 			 return (partNo.equals(partNum[0])); 		 } Element:- /* list of parts in partlist*/ 	 @FindBys(@FindBy(xpath = ""//div[@class='inner-container']//h2[@class='name ng-binding']"")) 	 List parts; It is unable to return any list for parts before it was working fine.  ![image](https://user-images.githubusercontent.com/36322878/100038785-42411e00-2e2a-11eb-9c5e-78166f03de3e.png)   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 87.0.4280.66 Browser Driver version: Chome driver manager Language Bindings version:   Selenium Grid version (if applicable):    **Error On the console**   [RemoteTestNG] detected TestNG version 6.14.3 The Test has been Initiated. [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Using chromedriver 87.0.4280.20 (since Google Chrome 87 is installed in your machine) [main] INFO io.github.bonigarcia.wdm.WebDriverManager - Exporting webdriver.chrome.driver as C:\Users\satya\.m2\repository\webdriver\chromedriver\win32\87.0.4280.20\chromedriver.exe ChromeDriver was started successfully. Nov 24, 2020 7:25:10 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C /*--------------------------------------------------------------------------------------*/ Test 1 of 3 2020-11-24 07:25:15:145 : The launchUrlTest has been Started. Launching the Application in UAT Environment, On Chrome browser. 2020-11-24 07:25:15:147 : The launchUrlTest is Passed. /*--------------------------------------------------------------------------------------*/ /*--------------------------------------------------------------------------------------*/ Test 2 of 3 2020-11-24 07:25:27:389 : The verifyPopularityInPartResultPage has been Started. Search query is:-TSS 2020-11-24 07:26:13:335 : The verifyPopularityInPartResultPage is Failed. /*--------------------------------------------------------------------------------------*/ /*--------------------------------------------------------------------------------------*/ Test 3 of 3 2020-11-24 07:26:26:977 : The verifyPopularityInPartResultPage has been Started. Search query is:-LAB 2020-11-24 07:26:53:427 : The verifyPopularityInPartResultPage is Failed. /*--------------------------------------------------------------------------------------*/ Nov 24, 2020 7:27:53 AM org.openqa.selenium.remote.ErrorCodes toStatus INFO: HTTP Status: '500' -> incorrect JSON status mapping for 'timeout' (408 expected) org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 10.000   (Session info: chrome=87.0.4280.66) Build info: version: '3.11.0', revision: 'e59cfb3', time: '2018-03-11T20:26:55.152Z' System info: host: 'DESKTOP-9Q0MPR9', ip: '192.168.43.200', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.66, chrome: {chromedriverVersion: 87.0.4280.20 (c99e81631faa0..., userDataDir: C:\Users\satya\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:50558}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: none, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: 6d4606fa0bcbada465d01955d3a18eb4 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602) 	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:291) 	at com.cxCommerce.base.TestBase.captureScreenshot(TestBase.java:270) 	at com.cxCommerce.base.TestBase.getResults(TestBase.java:260) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source) 	at java.lang.reflect.Method.invoke(Unknown Source) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59) 	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458) 	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:648) 	at org.testng.TestRunner.run(TestRunner.java:505) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:455) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415) 	at org.testng.SuiteRunner.run(SuiteRunner.java:364) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1137) 	at org.testng.TestNG.runSuites(TestNG.java:1049) 	at org.testng.TestNG.run(TestNG.java:1017) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)","closed","needs-triaging,","Satyabrata4957","2020-11-24T02:33:23Z","2021-09-05T08:30:25Z"
"","9044","POST /frame","## üí• Regression Report  I version 3.14 a test that is switching to an iFrame by making a POST to /frame works (e.g. `http://selenium:4444/wd/hub/session/ae8d437ab9389e07bad222c22cfbe66f/frame`  After upgrading to `Selenium server version: 3.141.59, revision: e82be7d358` the test results in a exception: ``` {   ""state"": ""invalid argument"",   ""sessionId"": null,   ""class"": ""org.openqa.selenium.remote.Response"",   ""value"": {     ""additionalInformation"": ""\nDriver info: driver.version: unknown"",     ""localizedMessage"": ""invalid argument: 'id' can not be string\n  (Session info: chrome=87.0.4280.66)\nBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\nSystem info: host: '59fcecfc051f', ip: '172.19.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-60-generic', java.version: '1.8.0_275'\nDriver info: driver.version: unknown"",     ""systemInformation"": ""System info: host: '59fcecfc051f', ip: '172.19.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-60-generic', java.version: '1.8.0_275'"",     ""supportUrl"": null,     ""cause"": null,     ""stackTrace"": [       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null,       null     ],     ""suppressed"": [     ],     ""message"": ""invalid argument: 'id' can not be string\n  (Session info: chrome=87.0.4280.66)\nBuild info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'\nSystem info: host: '59fcecfc051f', ip: '172.19.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-60-generic', java.version: '1.8.0_275'\nDriver info: driver.version: unknown"",     ""class"": ""org.openqa.selenium.InvalidArgumentException"",     ""buildInformation"": null   },   ""status"": 61 } ```  ## Last working Selenium version  Worked up to version: Selenium build info: version: '3.14.0', revision: 'aacccce0'  Stopped working in version: Selenium server version: 3.141.59, revision: e82be7d358  ## To Reproduce  ``` curl -d '{ ""id"": ""stringhere"" }' http://selenium:4444/wd/hub/session/ae8d437ab9389e07bad222c22cfbe66f/frame ```  Detailed steps to reproduce the behavior:  Open a session to a page with an iframe, try switching iframe by name in that session  ## Expected behavior  It should not give an error  ## Test script reproducing this issue (when applicable)   ## Environment  OS: Linux Browser: chrome Browser version: 87.0.4280.66 Browser Driver version: unknown (docker image krytpon) Language Bindings version: curl","closed","R-awaiting answer,","miiimooo","2021-01-13T12:24:13Z","2021-09-05T08:24:59Z"
"","9678","Warnings when using Firefox and IE (Python)","## üí• Regression Report  I noticed that if I run tests using Chrome, there are zero warnings, but with Firefox or IE, Selenium itself produces some deprecation warnings. I know it's only warnings, but the problem is each tests produces 1 or 2 of them. If there are a lot of tests, it takes some time to go over all warnings to check if they are real warnings that should be fixed or they are just these, caused by the Selenium code itself. Selenium 3 didn't have this problem.  ## Last working Selenium version  Worked up to version: 3.141.0  Stopped working in version: 4.x  ## To Reproduce  - Install pytest using `pip install pytest`. - Save the following code to test_warnings.py. ``` from selenium.webdriver import Chrome, Firefox, Ie  def test_warnings():     driver = ()     driver.get('http://example.com')     driver.quit() ``` - Execute `pytest` to run the test case.  ## Expected behavior  No warnings.  ## Actual behavior  No warnings with Chrome only. Warnings with Firefox and IE.  > ================================= warnings summary ================================= > test_warnings.py::test_warnings >   ...\lib\site-packages\selenium\webdriver\firefox\webdriver.py:182: DeprecationWarning: desired_capabilities has been deprecated, please pass in an Options object with options kwarg >     RemoteWebDriver.__init__( >  > -- Docs: https://docs.pytest.org/en/stable/warnings.html > ============================== 1 passed, 1 warning in 9.95s ==============================  > ================================= warnings summary ================================= > test_warnings.py::test_warnings >   ...\lib\site-packages\selenium\webdriver\ie\webdriver.py:119: DeprecationWarning: desired_capabilities has been deprecated, please pass in an Options object with options kwarg >     RemoteWebDriver.__init__( >  > test_warnings.py::test_warnings >   ...\lib\site-packages\selenium\webdriver\ie\webdriver.py:119: DeprecationWarning: keep_alive has been deprecated. We will be using True as the default value as we start removing it. >     RemoteWebDriver.__init__( >  > -- Docs: https://docs.pytest.org/en/stable/warnings.html > ============================== 1 passed, 2 warnings in 5.17s ==============================  ## Environment  OS: any Browser: Firefox and Internet Explorer Browser version: any Browser Driver version: latest Language Bindings version: Python 4.0.0b4  Selenium Grid version (if applicable): N/A","closed","C-py,","JohnA2","2021-07-23T13:53:18Z","2021-09-05T07:50:09Z"
"","9818","Incomplete fix in issue #9678","## üí• Regression Report  I described two types of warnings in #9678, but it was closed after only one of them was fixed. I tested the commit shortly after it was done and left a comment where I mentioned it. It's been more than a month since the comment and that issue was ""automatically locked since there has not been any recent activity after it was closed"", so I have to open a new one. Now I also tested rc1 and can confirm that the second warning is still not fixed.  ## Last working Selenium version  Worked up to version: 3.141.0  Stopped working in version: 4.x  ## To Reproduce  See #9678  ## Expected behavior  See #9678  ## Test script reproducing this issue (when applicable)  See #9678  ## Environment  OS: any Browser: Firefox and Internet Explorer Browser version: any Browser Driver version: latest Language Bindings version: Python 4.0.0rc1 Selenium Grid version (if applicable): N/A","closed","C-py,","JohnA2","2021-09-13T13:03:41Z","2021-11-08T00:06:54Z"
"","9894","Performance regression with Chrome and Edge browser with Selenium 4 beta-4 and RC 1 release (Dotnet language binding)","## üí• Regression Report  Hi, We have upgraded Selenium 3.141.59 to Selenium 4 RC1 using the Nuget packages from https://www.nuget.org/profiles/selenium  The above code to create the driver instance is working as expected and running the automation script fine. But after replacing the selenium dlls with the latest alpha 5 dlls, it is running the same script 10 times slower.  Are there any breaking changes in Selenium 4 or do we need to modify any code?  We already tried out the following approaches -   1. chService.EnableVerboseLogging = True or False 2. opt.AddArguments(""--no-proxy-server"") and Disabling proxy from browser setting( Internet Options). 3. Disabling IPv6 4. Combination of all the above options  Thanks  ## Last working Selenium version  Worked up to version:  v3.141.59  Stopped working in version: v4.0.0 Alpha  ## To Reproduce  Chrome.ChromeOptions opt = new Chrome.ChromeOptions(); opt.LeaveBrowserRunning = false;  Chrome.ChromeDriverService chService; Chrome.ChromeDriver ch;  chService = Chrome.ChromeDriverService.CreateDefaultService(appPath, driverFile); chService.HideCommandPromptWindow = true; ch = new Chrome.ChromeDriver(chService, opt);  Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10, Windows Server 2016, 19 Browser: Chrome, Edge Browser version: v94 Browser Driver version: v94 Language Bindings version: C# (but using with VB.net project)","closed","C-dotnet,","Shankiv","2021-10-08T12:27:05Z","2022-01-15T00:07:22Z"
"","9284","Exceptions from driver's start not properly returned in Selenium 4 (java)","## üí• Regression Report  Hello, it seems that exceptions when the driver fails to start are not properly returned in Selenium 4 (java).   ## Last working Selenium version  Worked up to version: 3.141.59  Stopped working in version: 4.0.0-beta-1  ## To Reproduce  - Requires to have an outdated driver to fail during driver's start - Then just put code inside a main to start the driver with Selenium 4   ``` public static void main(String[] args) throws InterruptedException { 	// This is an outdated driver 	System.setProperty(""webdriver.chrome.driver"", ""D:/SeleniumDrivers/chromedriver.exe"");  	WebDriver driver = new ChromeDriver();  	Thread.sleep(5000); 	driver.close(); } ``` You should get this output in Selenium 4 (cut some of the stack) :  > Starting ChromeDriver 87.0.4280.88 (89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761}) on port 26700 > 	[...] > 	ChromeDriver was started successfully. > 	Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. > 	Build info: version: '4.0.0-beta-1', revision: '9c03156c2b' > 	System info: host: 'XXX', ip: 'XXX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' > 	Driver info: org.openqa.selenium.chrome.ChromeDriver > 	Command: [null, newSession {desiredCapabilities=Capabilities {browserName: chrome}}] > 	Capabilities {} > 		at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635) > 		[...] > 	Caused by: java.lang.NullPointerException > 		at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:122) > 		[...] > 		at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:620)   ## Expected behavior  - I would expect the ""real"" exception from the driver to be transmitted back (outdated driver version) as it was in Selenium 3 - I don't expect to have a NullPointerException nor a generic error message _ - I've only tested this with Chrome and I haven't tested the Selenium 4 alpha versions but I can do more tests if needed - I've only tried when the driver is outdated but I guess that it should be reproduced whenever the driver fails to start for any reason - I haven't checked with the latest code base but even if it is fixed I think it would be great to add some tests so that it doesn't happen again (if that's possible)   Here was the output in Selenium 3 (cut some of the stack) :  > Starting ChromeDriver 87.0.4280.88 (89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761}) on port 44551 > 	[...] > 	ChromeDriver was started successfully. > 	Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: session not created: This version of ChromeDriver only supports Chrome version 87 > 	Current browser version is 89.0.4389.82 with binary path C:\Program Files (x86)\Google\Chrome\Application\chrome.exe > 	Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' > 	System info: host: 'XXX', ip: 'XXX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181' > 	Driver info: driver.version: ChromeDriver > 	remote stacktrace: Backtrace: > 		[...] > 		at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) > 		at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) > 		[...]   ## Environment  OS: Windows 10 1909 Browser: Chrome Browser version: 89.0.4389.82 (Build officiel) (64 bits) Browser Driver version: ChromeDriver 87.0.4280.88 (outdated yep that's the point) Language Bindings version: Java 4.0.0-beta-1    ## Technical details  I have looked at the code inside the class ProtocolHandshake, inside the method createSession As you can see in the screenshot below, the blob object contains the error from the driver but the call to 'get(""message"")' is null The toString then causes the NullPointerException The cause of the problem is quite simple itself but I'm not sure what would be the correct way of fixing this regarding the project, I would have sent a pr otherwise :)  ![image](https://user-images.githubusercontent.com/9906385/111137466-1a172f80-857f-11eb-89a4-9675bd309b36.png)   This is my first issue, tried to make it as concise as possible  Thank you in advance","closed","C-java,","ThaNico","2021-03-15T10:14:46Z","2021-09-05T08:12:18Z"
"","9359","Can no longer limit the number of parallel sessions from JUnit 5","## üí• Regression Report  Can no longer limit the number of parallel sessions from JUnit 5 (v3.0.0-M5) Likely related to this ticket: https://github.com/junit-team/junit5/issues/2273   ## Last working Selenium version  Worked up to version: 4.0.0-alpha-3  Stopped working in version: 4.0.0-alpha-4  ## To Reproduce  This is with Maven Surefire plugin, but should be the same behavior for Gradle I think. Run `mvn test` with a test suite that has this plugin config in the `pom.xml` file: ```                              org.apache.maven.plugins                 maven-surefire-plugin                 3.0.0-M5                                                                                            junit.jupiter.execution.parallel.enabled = true                             junit.jupiter.execution.parallel.mode.default = concurrent                             junit.jupiter.execution.parallel.config.strategy = fixed                             junit.jupiter.execution.parallel.config.fixed.parallelism = 3                                                                             ```  ## Expected behavior  Only 3 driver sessions should be running at a time, instead, all tests in the suite are executed.","closed","C-java,","titusfortner","2021-04-05T19:00:38Z","2022-01-02T00:34:42Z"
"","9429","Java 4.0.0-beta-3 Relative locators - withTagName is missing","## üí• Regression Report  After updating to beta3, all of my relative locators are showing import errors on  import static org.openqa.selenium.support.locators.RelativeLocator.withTagName;  ![obraz](https://user-images.githubusercontent.com/9053610/116515416-9023eb80-a8cc-11eb-8b26-cb9262a33867.png)  On beta2 it works just fine.     Worked up to version: 4.0.0-beta-2  Stopped working in version: 4.0.0-beta-3  ## To Reproduce  1. Add ""import static org.openqa.selenium.support.locators.RelativeLocator.withTagName;"" 2. Update to beta3 3. ""withTagName"" shows and error ""Cannot resolve symbol 'withTagName'""   ## Expected behavior  A clear and concise description of what you expected to happen.  Successful import.  ## Environment  OS: Windows 10 Browser: any Browser version: any Browser Driver version: any Language Bindings version: java:4.0.0-beta-3","closed","","kasprzakdanielt","2021-04-29T07:29:50Z","2021-09-05T08:06:39Z"
"","9756","Nodes not registering router","## üí• Regression Report  After the **4.0.0-rc-1-prerelease-20210804** release, in every deployment with docker and kuberentes there are some Chrome nodes that are not registered to the router. I have used the previous rc and Grid4.0 releases and haven't seen a similar behaviour. Only chrome node deployments are being used and the Grid4.0 components.  ## Last working Selenium version  Worked up to version: 4.0.0-rc-1-prerelease-20210713  Stopped working in version: 4.0.0-rc-1-prerelease-20210804  ## To Reproduce    Detailed steps to reproduce the behavior: Deploying about 40 chrome nodes with the configuration file in the official docker selenium. On average less than the half of chrome nodes get registered to the router. Also in the logs I see the following:  ``` 2021-08-22 07:44:30,068 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing 2021-08-22 07:44:30,071 INFO supervisord started with pid 7 2021-08-22 07:44:31,076 INFO spawned: 'xvfb' with pid 9 2021-08-22 07:44:31,079 INFO spawned: 'vnc' with pid 10 2021-08-22 07:44:31,086 INFO spawned: 'novnc' with pid 11 2021-08-22 07:44:31,089 INFO spawned: 'selenium-node' with pid 14 2021-08-22 07:44:31,192 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2021-08-22 07:44:31,192 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2021-08-22 07:44:31,192 INFO success: novnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2021-08-22 07:44:31,192 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) Configuring server... Setting up SE_NODE_HOST... Setting up SE_NODE_PORT... Setting up SE_NODE_GRID_URL... Selenium Grid Node configuration:  [events] publish = ""tcp://selenium-event-bus:4442"" subscribe = ""tcp://selenium-event-bus:4443""  [node] session-timeout = ""300"" override-max-sessions = false detect-drivers = false max-sessions = 1  [[node.driver-configuration]] name = ""chrome"" stereotype = '{""browserName"": ""chrome"", ""browserVersion"": ""92.0"", ""platformName"": ""Linux""}' max-sessions = 1  Starting Selenium Grid Node... 07:44:32.882 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 07:44:32.888 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 07:44:33.280 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-event-bus:4442 and tcp://selenium-event-bus:4443 07:44:33.431 INFO [UnboundZmqEventBus.] - Sockets created 07:44:34.433 INFO [UnboundZmqEventBus.] - Event bus ready 07:44:34.737 INFO [NodeServer.createHandlers] - Reporting self as: http://10.2.188.61:5555 07:44:34.798 INFO [NodeOptions.getSessionFactories] - Detected 1 available processors 07:44:34.899 INFO [NodeOptions.report] - Adding chrome for {""browserVersion"": ""92.0"",""browserName"": ""chrome"",""platformName"": ""Linux"",""se:vncEnabled"": true} 1 times 07:44:34.917 INFO [Node.] - Binding additional locator mechanisms: name, id 07:44:35.513 INFO [NodeServer$1.start] - Starting registration process for node id 3442b460-a325-450f-8aee-1f5dd8e79554 07:44:35.515 INFO [NodeServer.execute] - Started Selenium node 4.0.0-rc-1 (revision c498dad8c5): http://10.2.188.61:5555 07:44:35.518 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:44:45.579 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:44:55.582 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:45:05.584 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:45:15.586 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:45:25.588 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:45:35.590 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:45:45.593 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:45:55.595 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:46:05.597 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:46:15.599 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:46:25.601 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 07:46:35.516 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   ## Expected behavior  Its clear that the chrome nodes cannot get registered to the router. If you need any further script or log please let me know.  ## Test script reproducing this issue (when applicable)  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Docker alpine Browser: Chrome docker nodes in K8s","closed","needs-triaging,","yasha-dev1","2021-08-22T09:38:56Z","2021-09-23T00:05:33Z"
"","9600","IE stopped working on Grid in beta 4","## üí• Regression Report  `RemoteWebDriver.get()` throws an exception when used with IE on Grid. It started happening in beta 4. Beta 3 worked fine. IE still works fine when used directly, without Grid.  ## Last working Selenium version  Worked up to version: 4.0.0-beta-3  Stopped working in version: 4.0.0-beta-4  ## To Reproduce  Start Grid hub and node ``` java -jar selenium-server-4.0.0-beta-4.jar hub java -jar selenium-server-4.0.0-beta-4.jar node ``` Execute a simple test ``` InternetExplorerOptions ieOptions = new InternetExplorerOptions(); WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444""), ieOptions); driver.get(""http://www.google.com""); driver.quit(); ``` The exception is ``` Exception in thread ""main"" org.openqa.selenium.InvalidArgumentException: parameters property of command is not a valid JSON object Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: '...', ip: '...', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '11' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [c8ce0e31-e678-4cd7-b453-7d2209c49105, get {url=http://www.google.com}] Capabilities {acceptInsecureCerts: false, browserName: internet explorer, browserVersion: 11, javascriptEnabled: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:ieOptions: {browserAttachTimeout: 0, elementScrollBehavior: 0, enablePersistentHover: true, ie.browserCommandLineSwitches: , ie.edgechromium: false, ie.edgepath: , ie.ensureCleanSession: false, ie.fileUploadDialogTimeout: 3000, ie.forceCreateProcessApi: false, ignoreProtectedModeSettings: false, ignoreZoomSetting: false, initialBrowserUrl: http://localhost:26710/, nativeEvents: true, requireWindowFocus: false}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: c8ce0e31-e678-4cd7-b453-7d2209c49105 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:612) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:326) 	at test.Test.main(Test.java:14)  ```  ## Environment  OS: Windows Browser: Internet Explorer Browser version: 11 Browser Driver version: IEDriver 3.150.1 Language Bindings version: Java 4.0.0-beta-4 Selenium Grid version (if applicable): 4.0.0-beta-4","closed","D-IE,","JohnA2","2021-06-23T15:24:31Z","2021-09-05T09:02:44Z"
"","9826","Need to reopen issue #9600","## üí• Regression Report  #9600 was fixed by an updated IE driver from https://github.com/SeleniumHQ/selenium/tree/trunk/cpp/prebuilt/Win32/Release . But then a new driver version 3.150.2 was released, as mentioned by @diemol in the last comment. That driver breaks some things fixed by https://github.com/SeleniumHQ/selenium/tree/trunk/cpp/prebuilt/Win32/Release . For example, the below code doesn't work using both Selenium 4.0.0 rc-1 and beta-4 with the 3.150.2 driver, but works fine if I use the test driver from the above url instead.  ## Last working Selenium version  Worked up to version: N/A  Stopped working in version: N/A  ## To Reproduce  Use the below code. It gives me `org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.name: q`  ## Expected behavior  The code should work.  ## Test script reproducing this issue (when applicable)  ``` InternetExplorerOptions ieOptions = new InternetExplorerOptions(); WebDriver driver = new RemoteWebDriver(new URL(""...""), ieOptions); try { 	driver.get(""http://www.google.com""); 	new WebDriverWait(driver, Duration.ofMillis(10000), Duration.ofMillis(100)).until( 		ExpectedConditions.visibilityOfElementLocated(By.name(""q""))); } finally { 	driver.quit(); } ```  ## Environment  OS: Windows Browser: Internet Explorer Browser version: 11 Browser Driver version: IEDriver 3.150.2 Language Bindings version: Java 4.0.0-rc-1 Selenium Grid version (if applicable): 4.0.0-rc-1","closed","D-IE,","JohnA2","2021-09-14T18:37:33Z","2022-01-03T00:07:41Z"
"","9886","Not able to instantiate ChromeDriver Object with reference of WebDriver with Selenium RC-2","## üí• Regression Report  ## Last working Selenium version  Worked up to version: java selenium rc-1  Stopped working in version: java selenium rc-2  ## To Reproduce  Detailed steps to reproduce the behavior:  1. WebDriver driver = new ChromeDriver();  This statement is not working with rc-2 update.  Not sure why this statement in java is throwing an compile time error.   ## Expected behavior  driver reference should work pointing to object of ChromeDriver();  ## Environment  OS: Windows 7  Browser: Chrome Browser version: 94.0 Browser Driver version: ChromeDriver=94.0 Language Bindings version: Java Selenium rc-2","closed","R-awaiting answer,","ssurwas","2021-10-06T13:32:06Z","2021-11-20T00:06:33Z"
"","9822","Selenium standalone (grid) hangs from time to time (4.0 beta or rc1)","## üí• Regression Report  ## Last working Selenium version  Worked up to version: 3.141.59 (selenium standalone) Stopped working in version: 4.0 (beta, rc1)  Steps to reproduce: 1. Start selenium standalone: `java -Dwebdriver.chrome.driver=chromedriver.exe -Dwebdriver.edge.driver=msedgedriver.exe -jar selenium-server-4.0.0-rc-1.jar standalone --port 4444 --max-sessions 8 --override-max-sessions true --log ./server.log --session-timeout 3600` 2. Run several tests in parallel; execution status will be ok; 3. Don't stop/restart selenium standalone process; 4. In the next days try to run tests again  Expected: the behavior is the same as in step#2 Actual: some times (not always in the next day after grid starting, could be in 2-3-4 days) webdriver can't establish connection to selenium. If I open selenium console in browser by link http://:4444  then it trying to display sessions, but can't load.  The output logs are following:  ``` 09:38:06.467 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""1b8f54a543ea9542950248f1deb040cb"",""eventTime"": 1631601486466429800,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Unable to execute request for an existing session: Unable to find session with ID: 3686a38bf7fed013fee68a9554aaa8f6\nBuild info: version: '4.0.0-rc-1', revision: 'bc5511cbda'\nSystem info: host: 'PC-GENAT01', ip: '10.98.74.219', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.NoSuchSessionException: Unable to find session with ID: 3686a38bf7fed013fee68a9554aaa8f6\nBuild info: version: '4.0.0-rc-1', revision: 'bc5511cbda'\nSystem info: host: 'PC-GENAT01', ip: '10.98.74.219', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_291'\nDriver info: driver.version: unknown\r\n\tat  org.openqa.selenium.grid.sessionmap.local.LocalSessionMap.get(LocalSessionMap.java:129)\r\n\tat  org.openqa.selenium.grid.router.HandleSession.lambda$loadSessionId$3(HandleSession.java:136)\r\n\tat  io.opentelemetry.context.Context.lambda$wrap$2(Context.java:219)\r\n\tat  org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:110)\r\n\tat  org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:373)\r\n\tat  org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat  org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat  org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat  org.openqa.selenium.grid.router.Router.execute(Router.java:91)\r\n\tat  org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:66)\r\n\tat  org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:70)\r\n\tat  org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34)\r\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat  org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat  org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat  org.openqa.selenium.remote.http.Route$NestedRoute.handle(Route.java:270)\r\n\tat  org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat  org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat  org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat  org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\r\n\tat  org.openqa.selenium.remote.http.Route.execute(Route.java:68)\r\n\tat  org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\r\n\tat  org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat  org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat  org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\r\n\tat  org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\r\n\tat  org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\r\n\tat  java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat  java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n"",""exception.type"": ""org.openqa.selenium.NoSuchSessionException"",""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.router.HandleSession"",""http.host"": ""pc-genat01:4444"",""http.method"": ""GET"",""http.request_content_length"": ""0"",""http.scheme"": ""HTTP"",""http.target"": ""\u002fsession\u002f3686a38bf7fed013fee68a9554aaa8f6\u002fscreenshot"",""http.user_agent"": ""selenium\u002f4.0.0-beta.4 (js windows)"",""session.id"": ""3686a38bf7fed013fee68a9554aaa8f6""}} ```  It repeats each time when webdriver trying to connect to selenium. Restart of selenium-stanndalone process help, but also not always and could work from 1, 2,...n attempts of restart.  ## Environment  OS: Windows 10 Browser: Chrome, Edge Browser version: 93 (reproduced also previously in 90, 91, 92) Browser Driver version: 93 (reproduced also previously in 90, 91, 92) Language Bindings version: Javascript Selenium Grid version (if applicable): 4.0 rc1","closed","R-awaiting answer,","StanislavKharchenko","2021-09-14T10:47:55Z","2021-10-30T00:06:11Z"
"","9091","Selenium.dev is broken","## üí• Regression Report  ![image](https://user-images.githubusercontent.com/46102189/105626588-9162f980-5e41-11eb-8ed3-551360deee4d.png)  https://selenium.dev","closed","","koynoyno","2021-01-24T09:42:23Z","2021-09-05T08:24:54Z"
"","9887","Unable to launch the driver after upgrading to version 4.0.0-alpha-7","## üêõ Unable to launch the driver with version 4.0.0-alpha-7  Trying to launch the driver with Selenium 4.0.0-alpha-7 version but getting unexpected error.  ## To Reproduce  **Earlier maven dependency**: ```     org.seleniumhq.selenium    selenium-java    3.141.59  ```  **Updated maven dependency**:  ```     org.seleniumhq.selenium    selenium-java    4.0.0-alpha-7  ```  **Code**:  ``` System.setProperty(""webdriver.chrome.driver"", ""path to chromeDriver""); WebDriver driver = new ChromeDriver(); driver.get(""https://www.google.com""); ```  **Error**: ``` Exception in thread ""main"" java.lang.AbstractMethodError: org.openqa.selenium.remote.service.DriverService$Builder.createArgs()Lcom/google/common/collect/ImmutableList; 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:358) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:119) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:105) ``` ## Expected behavior  Chrome driver should be launched and should navigated to google.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 92.0.4515.107 Browser Driver version: ChromeDriver 92.0.4515.107 Language Bindings version: Java 1.8  Selenium Grid version (if applicable): No IDE: Eclipse  **Note**:   - I created a sample project from scratch by with version `4.0.0-alpha-7` and that is working fine (able to launch driver successfully) but issue occurs when upgrading from ` 3.14` to `4.0.0-alpha-7` - I did force update for the Maven project - Cleaned and rebuilt the project","closed","","geethub17","2021-10-06T19:42:57Z","2021-11-06T00:06:12Z"
"","8996","unhandledRejection: self signed certificate","## üêõ Error: self signed certificate  I am testing an application build on top of _React.js v.16.12.0_ using _Nightwatch.js v1.5.1_ an automated UI test framework, I'm using _selenium-server v3.141.59_ with it. Every time I run the tests I get the following error.  ``` Error: self signed certificate        at TLSSocket.onConnectSecure (_tls_wrap.js:1497:34)        at TLSSocket._finishInit (_tls_wrap.js:932:8)        at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:706:12) ``` I already reported this [issue ](https://github.com/nightwatchjs/nightwatch/issues/2558) in the _Nightwatch.js_ forum but got no response so far. Any clue or help would be greatly appreciated.  ## Environment OS: Windows 10 Browser:  Chrome  Browser version: 87.0.4280.88 (64-bit) Browser Driver version: chromedriver v87.0.4 Selenium:  selenium-server v3.141.59  Nightwatch: v1.5.1","closed","","umar-ps","2020-12-23T10:58:27Z","2021-09-05T08:27:47Z"
"","8995","unhandledRejection: self signed certificate","## üêõ Error: self signed certificate  I am testing an application build on top of _React.js v.16.12.0_ using _Nightwatch.js v1.5.1_ an automated UI test framework, I'm using _selenium-server v3.141.59_ with it. Every time I run the tests I get the following error.  ``` Error: self signed certificate        at TLSSocket.onConnectSecure (_tls_wrap.js:1497:34)        at TLSSocket._finishInit (_tls_wrap.js:932:8)        at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:706:12) ``` I already reported this [issue ](https://github.com/nightwatchjs/nightwatch/issues/2558) in the _Nightwatch.js_ forum but got no response so far. Any clue or help would be greatly appreciated.  ## Environment OS: Windows 10 Browser:  Chrome  Browser version: 87.0.4280.88 (64-bit) Browser Driver version: chromedriver v87.0.4 Selenium:  selenium-server v3.141.59  Nightwatch: v1.5.1","closed","","umar-ps","2020-12-23T10:56:03Z","2021-09-05T08:27:48Z"
"","9202","[Selenium 4] [Grid] Se:Options CDP Endpoint Points to Node","## üêõ Bug Report When making a `POST /session` request to a Selenium 4 Grid Hub, the returned CDP Endpoint points to the node.  Example: ``` {     ""status"": 0,     ""sessionId"": ""c8adfc6384648299d726d9c63d4e7a15"",     ""value"": {         ""se:options"": {             ""cdp"": ""http://:5555/session/c8adfc6384648299d726d9c63d4e7a15/se/cdp""          },     } } ```  Is it intended to not prefer proxying these requests through the Hub (4444)? For [WebdriverIO I'm hoping ](https://github.com/webdriverio/webdriverio/issues/6470)to utilize the URL returned from this response.  For security purposes, I would prefer to lock my Nodes down to only be able to communicate with the Hub, and not have the clients making individual requests to the node.  From my tests back in Alpha, cdp websocket requests to both hub (4444) and node (5555) both were working. So this is more of a decision on which should be advertised.  ## To Reproduce 1) Launch a Selenium 4 Hub/Node 2) Make a `POST /session` request  ## Expected behavior Response to be: ``` {     ""status"": 0,     ""sessionId"": ""c8adfc6384648299d726d9c63d4e7a15"",     ""value"": {         ""se:options"": {             ""cdp"": ""http://:4444/session/c8adfc6384648299d726d9c63d4e7a15/se/cdp""          },     } } ```  ## Test script or set of commands reproducing this issue ``` curl -d ' {""desiredCapabilities"": { ""browserName"": ""chrome"" }}' -H 'Content-Type: application/json; charset=utf-8' http://localhost:4444/session ```  ## Environment  OS: 10 Browser: Chrome Browser version: `88.0.4324.150` Browser Driver version: `88.0.4324.96` Language Bindings version: n/a Selenium Grid version (if applicable): 4.0.0-beta-1","closed","C-java,","dylanlive","2021-02-22T18:51:46Z","2021-09-05T08:12:17Z"
"","9316","Selenium 4 Alpha-1 leaves many AsyncHttpClient threads","## üêõ Bug Report We have used selenium 3 for taking rendered SVG image from page. It works fine without any problems. Now I upgraded selenuim to version 4 alpha -1 and we started use selenium for printing page to PDF. Since now in tomcat threads we can see many of threads AsyncHttpClient in Runnable state. In maven dependency i can se that only Selenium use AsyncHttpClient.  ![image](https://user-images.githubusercontent.com/19901055/111906559-54863e00-8a51-11eb-827f-847e23e2eee7.png)  ![image](https://user-images.githubusercontent.com/19901055/111906584-754e9380-8a51-11eb-9985-03799938fbfe.png)   Now after few days there are about 200 of threads ..","closed","R-awaiting answer,","KarelHaruda","2021-03-21T13:26:47Z","2021-09-05T08:10:42Z"
"","9782","Selenium tests ran from exe launched via Windows service fail when using Chrome v92.","## üêõ Bug Report UserAgent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36  Steps to reproduce the problem:  Run Selenium test with chromedriver v92 and Chrome v92 from a Windows service. Watch Selenium test fail with chromedriver reporting error ""Chrome not reachable"". Repeat test with chromedriver v91 and matching chrome browser version. Notice that test passes without error. What is the expected behavior? When using versions of Chrome before v92, the tests pass without error.  What went wrong? Background on my use case - my application can be by launched either via a separate UI application or via a Windows service. The example flows are as follows.  Flow 1 - [ Execution via UI application ]:  ui.exe > application.exe > chromedriver.exe > chrome.exe  Flow 2 - [ Execution via Windows service ]:  service.exe > application.exe > chromedriver.exe > chrome.exe  A few things to note:  (1) The difference between the two outlined flows is that:  in flow 1 (UI), application.exe gets launched from interactive desktop user (under session 1). This is because a desktop user has logged into the machine, started ui.exe and thus application.exe gets launched with the same desktop privilege's as ui.exe.  in flow 2 (Windows service), service.exe is running as a Windows service (session 0), therefore if I understand correctly, it will have no rights to interact with desktop.  (2) In both described flows, all components are running on the same Windows machine, i.e.:  in flow 1 I log onto machine, open ui.exe, hit 'start' which launches applciation.exe which launches chromedriver.exe which launches chrome.exe etc.  in flow 2 I hit a local REST API (running on the same machine) which causes service.exe (running as a Windows service) to launch application.exe which launches chromedriver.exe which launches chrome.exe etc.  (3) I have tested with and without the --headless flag, which succeeds in versions of Chrome before v92.  As mentioned, before v92 of Chrome this worked, but for some reason with the release of v92 of Chrome (and associated chromedriver version), when chrome.exe from gets launched from chromedriver.exe via the Windows service, it crashes immediatley with errors:  Chrome log:  [20812:2436:0809/094323.477:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.477:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 1 time(s) [20812:2436:0809/094323.601:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.601:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 2 time(s) [20812:2436:0809/094323.718:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.719:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 3 time(s) [20812:2436:0809/094323.837:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.837:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 4 time(s) [20812:2436:0809/094323.967:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094323.967:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 5 time(s) [20812:2436:0809/094324.133:ERROR:gpu_process_host.cc(995)] GPU process exited unexpectedly: exit_code=-1066598274 [20812:2436:0809/094324.134:WARNING:gpu_process_host.cc(1308)] The GPU process has crashed 6 time(s) [20812:2436:0809/094324.134:FATAL:gpu_data_manager_impl_private.cc(414)] GPU process isn't usable. Goodbye. And chromedriver.exe reports the following error:  chrome not reachable. (Session info: headless chrome=92.0.4515.131).  Chrome version: 92.0.4515.159 Channel: stable OS Version: 10.0  From reading these logs it looks like chrome.exe has crashed and thus, is genuinely not reachable from chromedriver.exe. NOTE: Just to be clear - execution via flow 1 (UI) works as intended with Chrome v92. It is only execution via flow 2 (Windows service) that fails in this way. And before v92 of Chrome, both flows worked without error.  The only way I have got execution via flow 2 (Windows service) to work with Chrome v92 is to specify the --no-sandbox flag as an argument to be passed to chrome when launching chromedriver. When I supply this argument, execution runs to completion and we do not receive the above errors.  From reading online about Chrome sandboxing, I want to avoid use of --no-sandbox flag. I know this may not be a Selenium issue as such, since it seems to be related to Chrome and Chromedriver, but I would appreciate any advice on the issue if possible.  Thanks","closed","","cmcateer-845","2021-09-02T10:23:12Z","2021-10-05T00:05:51Z"
"","9660","There is no way to provide max-sessions parameter in the docker section of the standalone config file","## üêõ Bug Report There is no way to provide max-sessions parameter in the docker section of the standalone config file   ## To Reproduce  My grid config looks as follows. Is there a way to limit the number of sessions available for both Firefox and Chrome in the docker section of standalone config file ```[toml] [node] detect-drivers = false max-sessions=4  [docker] configs = [""selenium/standalone-chrome:latest"", ""{\""browserName\"": \""chrome\"", \""browserVersion\"": \""91\""}"", ""selenium/standalone-firefox:latest"", ""{\""browserName\"": \""firefox\"", \""browserVersion\"": \""89\""}""] host = ""localhost"" port = 2375 url = ""unix:/var/run/docker.sock"" video-image = ""selenium/video:latest"" ```  Running this command `java -jar selenium-server-4.0.0-beta-4.jar standalone --config grid.config.toml` creates 12 sessions each of Chrome and Firefox with a max concurrency of 4  ![image](https://user-images.githubusercontent.com/17963268/126071586-743c2f2a-3ed3-4299-b8bf-1512c70d1f12.png)  In the file https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/java/server/src/org/openqa/selenium/grid/docker/DockerOptions.java#L137   we have initialised it to the # of availableProcessors  whereas in the file https://github.com/SeleniumHQ/selenium/blob/941dc9c6b2e2aa4f701c1b72be8de03d4b7e996a/java/server/src/org/openqa/selenium/grid/node/config/NodeOptions.java#L79  we take into consideration the value available in the node section of the config file  ## Expected behavior  There should be a config to set max-sessions in the docker section  ## Test script or set of commands reproducing this issue  ## Environment  Selenium Grid version (if applicable): selenium-server-4.0.0-beta-4","closed","C-grid,","gpt14","2021-07-18T15:01:28Z","2021-09-05T07:50:16Z"
"","9559","withTagName has no JavaScript reference documentation","## üêõ Bug Report There doesn't appear to be any documentation for withTagName:  https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/  Git blame says https://github.com/SeleniumHQ/selenium/commit/13f415bbefc248a149a2db4ebfd1ead4a9728f59 added it.  In the Java bindings, withTagName was removed altogether:  https://github.com/SeleniumHQ/selenium/commit/6a3f867fd250d4532e27ca860ab58171e42cb577  Is this API expected to stay? Judging from the code, it is public at least:  https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/javascript/node/selenium-webdriver/lib/by.js#L408-L415  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 89.0 (64-bit) Browser Driver version: geckodriver 0.29.1 (970ef713fe58 2021-04-08 23:34 +0200) Language Bindings version: ?","closed","C-nodejs,","mitchcurtis","2021-06-10T12:29:53Z","2021-09-05T07:50:46Z"
"","9576","selenium can't contorl Canvas elements to do click,double click ,drap and so on","## üêõ Bug Report There are abnormalities in the functions such as click, double-click, drag and drop of Canvas used by Selenium to automate testing.  The specific reason is that Selenium cannot get the elements inside Canvas.  ## To Reproduce  Exercising a page's dragging and dropping functionailty used to be simple with  Seleniums's Action Builder, but sadly ,it won't work with HTML5 drag and drop .  We use the selenium function 'Actions.moveToElement'  to control the elements inside canvas,it dosen't work that way for selenium can't select the element .  ## Test script or set of commands reproducing this issue   Actions actions = new Action(driver); actions.dragAndDrop(source,target)Ôºõ  The code dosen't work ,also no exception.   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 90.0.4430.24 Browser Driver version:  90.0.4430.24   Language Bindings version:  Java 8  ¬†","closed","","YinChunGuang","2021-06-15T04:21:36Z","2021-09-05T08:01:06Z"
"","9580","selenium can't drag Canvas elements","## üêõ Bug Report There are abnormalities in the functions such as click, double-click, drag and drop of Canvas used by Selenium to automate testing.  The specific reason is that Selenium cannot get the elements inside Canvas.  ## To Reproduce  Exercising a page's dragging and dropping functionailty used to be simple with  Seleniums's Action Builder, but sadly ,it won't work with HTML5 drag and drop .  We use the selenium function 'Actions.moveToElement'  to control the elements inside canvas,it dosen't work that way for selenium can't select the element .  ## Test script or set of commands reproducing this issue   ``` Actions actions = new Action(driver); actions.dragAndDrop(source,target)Ôºõ ```  The code dosen't work ,also no exception.   ## Environment  OS: Windows 10 Browser: Chrome Browser version: 90.0.4430.24 Browser Driver version:  90.0.4430.24   Language Bindings version:  Java 8  ¬†","closed","","YinChunGuang","2021-06-16T04:00:51Z","2021-09-05T08:01:05Z"
"","9096","[py] Remove W3C handshake code","## üêõ Bug Report The Python bindings still have W3C handshake code in `py/selenium/webdriver/remote/webdriver.py` and `py/selenium/webdriver/remote/webelement.py` and possibly else where. We can remove the code that is not in the positive part of the w3c conditionals.    ## To Reproduce  Nothing at the moment Detailed steps to reproduce the behavior:   ## Expected behavior  If encountering a non-W3C repo to error and don't care.  ## Test script or set of commands reproducing this issue  When complete, run tests with `bazel test //py:unit` and `bazel test //py:test-firefox`   ## Environment    OS: All Browser: All Browser version: All Browser Driver version: All Language Bindings version: Python Selenium Grid version (if applicable): N/A","closed","C-py,","AutomatedTester","2021-01-25T18:27:05Z","2021-09-05T08:21:33Z"
"","9461","The data rates in the ChromiumNetworkConditions.cs properties are incorrect","## üêõ Bug Report The data rate in the tooltips for [DownloadThroughput](https://github.com/SeleniumHQ/selenium/blob/0436178e2567ae5f5e3b6ff2c7a5006a1001bd2b/dotnet/src/webdriver/Chromium/ChromiumNetworkConditions.cs#L55) and [UploadThroughput](https://github.com/SeleniumHQ/selenium/blob/0436178e2567ae5f5e3b6ff2c7a5006a1001bd2b/dotnet/src/webdriver/Chromium/ChromiumNetworkConditions.cs#L64) of ChromiumNetworkConditions.cs appear to be incorrectly listed as kb/second when it should be bytes per second.  ## To Reproduce For any basic test using the `ChromeDriver`, initialize the driver's `NetworkConditions` property with a `ChromeNetworkConditions` object with `DownloadThroughput` and `UploadThroughput` in kb/s, then run the test while observing data transfer rate using your preffered monitoring software e.g. WireShark  ## Expected behavior Chrome driver throttles network rates at the speeds that were defined in kb/s.  ## Test script or set of commands reproducing this issue If for example you supply the download with a value of 10000 then during the actual test it will show a rate of 0.08Mbps rather than the expected 10Mbps.  To get the desired 10Mbps throughput you would have to instead set the download value to 1250000. ```cs public class NetworkConditionsTests {     public void IncorrectNetworkThrottleTest()     {         int latencyInMilliseconds = 20;         long downloadLimitMbps = 10;         long uploadLimitMbps = 5;          ChromeDriver driver = new ChromeDriver()         {             NetworkConditions = new ChromeNetworkConditions()             {                 Latency = new TimeSpan(0, 0, 0, 0, latencyInMilliseconds),                 DownloadThroughput = downloadLimitMbps * 1000, // Mbps to kb/s                 UploadThroughput = uploadLimitMbps * 1000, // Mbps to kb/s                 IsOffline = false,             }         };          driver.Navigate().GoToUrl(""https://github.com/SeleniumHQ/selenium"");          var wait = new WebDriverWait(driver, new TimeSpan(0, 0, 30));         wait.Until(SeleniumExtras.WaitHelpers.ExpectedConditions.ElementIsVisible(By.ClassName(""repository-content"")));     }      public void CorrectNetworkThrottleTest()     {         int latencyInMilliseconds = 20;         long downloadLimitMbps = 10;         long uploadLimitMbps = 5;          ChromeDriver driver = new ChromeDriver()         {             NetworkConditions = new ChromeNetworkConditions()             {                 Latency = new TimeSpan(0, 0, 0, 0, latencyInMilliseconds),                 DownloadThroughput = downloadLimitMbps * 125000, // Mbps to bytes per second                 UploadThroughput = uploadLimitMbps * 125000, // Mbps to bytes per second                 IsOffline = false,             }         };          driver.Navigate().GoToUrl(""https://github.com/SeleniumHQ/selenium"");          var wait = new WebDriverWait(driver, new TimeSpan(0, 0, 30));         wait.Until(SeleniumExtras.WaitHelpers.ExpectedConditions.ElementIsVisible(By.ClassName(""repository-content"")));     } } ```  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 89.0.4389.2300 Browser Driver version: ChromeDriver 89.0.4389.2300 Language Bindings version: C# 3.141.0 Selenium Grid version (if applicable): N/A","closed","C-dotnet,","TridentTrue","2021-05-10T17:53:42Z","2021-10-30T00:06:06Z"
"","9777","Chrome webdriver window stays open indefinitely if KeyboardInterrupt exception raised while running with a certain option","## üêõ Bug Report The Chrome webdriver with the experimental option of 'excludeSwitches', ['enable-logging'] does not close when the code is halted with a KeyboardInterrupt exception. This option is necessary to stop selenium from logging to the console which I have found to be a common requisite.  ## To Reproduce  Detailed steps to reproduce the behavior:  Using Python, configure the Chrome webdriver with the experimental option of 'excludeSwitches', ['enable-logging']. Start the webdriver, open a website, and do something to keep the webdriver from instantly closing (such as blocking input or a long sleep). Wait for it to launch and open the website. While the webdriver is still open, go in the terminal used to run the script and enter ctrl + c to trigger a KeyboardInterrupt exception. The script will halt, but the webdriver window will remain open and hanging indefinitely. You will have to manually press on the X in the top right corner to close it as you would with a normal instance of chrome.  This behaviour only occurs when aforementioned option is configured.  ## Expected behavior When the KeyboardInterrupt exception is triggered, the script is halted. This should cause the webdriver window to close and halt as well, not be left open hanging and using resources indefinitely.   ## Test script or set of commands reproducing this issue ```python from selenium import webdriver  chrome_options = webdriver.ChromeOptions() chrome_options.add_experimental_option('excludeSwitches', ['enable-logging']) with webdriver.Chrome(options = chrome_options) as driver:      driver.get('https://www.selenium.dev/')     #input to stop the driver from instantly closing     input()  ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 92.0.4515.159 Browser Driver version: ChromeDriver 92.0.4515.107 Language Bindings version: Python 3.141.0 Selenium Grid version (if applicable): N/A","closed","","VolVox99","2021-08-31T23:03:20Z","2021-10-05T00:05:52Z"
"","9602","switch_to.window[-1] is not working","## üêõ Bug Report target method : switch_to.window[value]  It's better if I put in a positive value, but if I put in -1, there's something wrong.   ## To Reproduce  1. type under code ``` driver.get(""https://www.naver.com"") # First tab driver.execute_script(""window.open('https://www.daum.net')"") # Second tab driver.execute_script(""window.open('https://www.youtube.net')"") # Third tab driver.execute_script(""window.open('https://www.google.com')"") # Fourth tab  time.sleep(5)  print(driver.window_handles) print('\n') print(driver.current_window_handle)  driver.switch_to.window(driver.window_handles[-1]) print(driver.current_window_handle) ```  2. check driver's current handle 3. driver's current handle log is  # Fourth tab. but, (issue) The actual driver focus on #Second tab. Log is different from real action.  ** I already Know that Index [-1] value focus on latest tab.  ## Expected behavior The actual driver focus on # Fourth tab.  ## Environment - driver : Chromedriver (Chrome version : 91) - OS : MAC - Lang : Python - IDE : Pycharm   ## attachment Log : not issue ![image](https://user-images.githubusercontent.com/12168038/123224979-3d059800-d50d-11eb-83fd-036a5e5e01a7.png)  Actual driver foucs : # Second tab (issue) ![image](https://user-images.githubusercontent.com/12168038/123225074-53135880-d50d-11eb-844b-a79d8b4e9b03.png)","closed","","qkrdlsrnjs11","2021-06-24T07:58:34Z","2021-09-05T07:59:10Z"
"","9582","Split package error in java 11 and selenium java 4.0 beta 3","## üêõ Bug Report Split package `com.google.common` when requiring `org.seleniumhq.selenium.support`.  ## To Reproduce Create a new module and require (transitively or not) `org.seleniumhq.selenium.support`.  ## Expected behavior No errors should appear.  ## Actual behavior Split package error: Module reads package com.google.common.io from both com.google.common and com.google.common  ## Environment  OS: Windows 10 Language Bindings version: Java 4.0.0 Beta-3 Language SDK version: jdk 11.0.11","closed","needs-triaging,","HarryZalessky","2021-06-16T08:23:39Z","2021-09-05T08:01:04Z"
"","9779","Javascript client driver.createCDPConnection promise never resolved with usingServer in webdriver builder","## üêõ Bug Report Selenium jar version: `4.0.0-beta-4` Javascript client version: `4.0.0-beta.4` OS version: `MacOS Catalina` Javascript client promise is never is resolved if we create driver as follows. ```   let driver = new webdriver.Builder()   .forBrowser('chrome')   .usingServer('http://localhost:4444')   .build(); ``` and use CDP as follows. ``` const cdpConnection = await driver.createCDPConnection('page'); ``` The same script works if I remove `usingServer` and use `chromedriver` directly. ## To Reproduce Run following javascript code. ``` const webdriver = require('selenium-webdriver');  const run = async () => {   let driver = new webdriver.Builder()   .forBrowser('chrome')   .usingServer('http://localhost:4444')   .build();   try {     const cdpConnection = await driver.createCDPConnection('page');     await driver.onLogEvent(cdpConnection, (event) => {       console.log(event);     });     await driver.get('http://facebook.com');   } finally {     setTimeout(() => { driver.quit() }, 10000);   } }  run(); ``` Code will not make it past `const cdpConnection = await driver.createCDPConnection('page');` line. Detailed steps to reproduce the behavior: Run Selenium jar ``` java -jar selenium.jar standalone ``` Then run this code (same as earlier) ``` const webdriver = require('selenium-webdriver');  const run = async () => {   let driver = new webdriver.Builder()   .forBrowser('chrome')   .usingServer('http://localhost:4444')   .build();   try {     const cdpConnection = await driver.createCDPConnection('page');     await driver.onLogEvent(cdpConnection, (event) => {       console.log(event);     });     await driver.get('http://facebook.com');   } finally {     setTimeout(() => { driver.quit() }, 10000);   } }  run(); ``` But if we do not use `.usingServer('http://localhost:4444')` it works fine provided `chromedriver` is in the `PATH`. i.e. following code works. ``` const webdriver = require('selenium-webdriver');  const run = async () => {   let driver = new webdriver.Builder()   .forBrowser('chrome')   // .usingServer('http://localhost:4444')   .build();   try {     const cdpConnection = await driver.createCDPConnection('page');     await driver.onLogEvent(cdpConnection, (event) => {       console.log(event);     });     await driver.get('http://facebook.com');   } finally {     setTimeout(() => { driver.quit() }, 10000);   } }  run(); ``` ## Expected behavior Behavior should be the same with `usingServer` and without `usingServer`. I noticed that in client code it tries to make [HTTP request](https://github.com/SeleniumHQ/selenium/blob/40936c627d0da0fa502c61ae14a3305c7f20c951/javascript/node/selenium-webdriver/lib/webdriver.js#L1239) the WebSocket URL returned in `se:cdp` capability as [debuggerUrl](https://github.com/SeleniumHQ/selenium/blob/40936c627d0da0fa502c61ae14a3305c7f20c951/javascript/node/selenium-webdriver/lib/webdriver.js#L1200). I think the issue lies in that code. Selenium jar returns `se:cdp` as `ws://192.168.42.127:4444/session/14a41fd2f6ec134a3683ead66eb291ae/se/cdp` and client code modifies it to `http://ws://192.168.42.127:4444/session/14a41fd2f6ec134a3683ead66eb291ae/se/cdp` Besides, an http request to `http://192.168.42.127:4444/session/14a41fd2f6ec134a3683ead66eb291ae/se/cdp` or `http://192.168.42.127:4444/session/14a41fd2f6ec134a3683ead66eb291ae/se/cdp/json` also doesn't work as Selenium jar throws following: ``` ""error"":""unknown command"",""message"":""unknown command: unknown command: session/14a41fd2f6ec134a3683ead66eb291ae/se/cdp"" ``` ## Test script or set of commands reproducing this issue Run Selenium 4.0.0-beta-4: `java -jar selenium.jar standalone` Create a selenium node.js project: `npm init`  Install javascript library selenium-webdriver-4.0.0-beta-4: `npm install selenium-webdriver` Create node.js script `test.js`: ``` const webdriver = require('selenium-webdriver');  const run = async () => {   let driver = new webdriver.Builder()   .forBrowser('chrome')   .usingServer('http://localhost:4444')   .build();   try {     const cdpConnection = await driver.createCDPConnection('page');     await driver.onLogEvent(cdpConnection, (event) => {       console.log(event);     });     await driver.get('http://facebook.com');   } finally {     setTimeout(() => { driver.quit() }, 10000);   } }  run(); ``` Run the node.js script: `node test.js` ## Environment  OS: `OS X Catalina` Browser: `Chrome` Browser version: `92.0.4515.159 (Official Build) (x86_64)` Browser Driver version: `ChromeDriver 92.0.4515.107 (87a818b10553a07434ea9e2b6dccf3cbe7895134-refs/branch-heads/4515@{#1634})` Language Bindings version: `Javascript 4.0.0-beta-4` Selenium Grid version (if applicable): `4.0.0-beta-4`","closed","C-nodejs,","shashikdm","2021-09-01T03:53:11Z","2021-10-21T00:06:22Z"
"","9435","FindElements after FindElement with simple mistake on parameters By","## üêõ Bug Report In the Code below has miss-click error into class By, XPath(""serp-item""). `IList listenExeption = driver.FindElement(By.XPath(""/html/body/div[3]/div[1]/div[2]/div[1]/div[1]"")).FindElements(By.XPath(""serp-item"")); //ClassName`  ![image](https://user-images.githubusercontent.com/83610378/116925643-17bd8180-ac62-11eb-9df8-c132e6d37c79.png)  Detailed steps to reproduce the behavior:  Get all sub IWebElement's of parent element and if do you put wrong xpath ex: ""serp-item"" you don't get exception. Ofc, if i used FindElements(By.ClassName(""serp-item"")); this worked correctly.  A clear and concise description of what you expected to happen.  I expected to happen exception or fail\crush test   GitHub Gist, without highlight  My example:  https://gist.github.com/akumaSlavic/f2f802ec427de7eebfa6e6e8920ec3e5  ## Environment  OS: Windows 10 Browser: Chrome (chromedriver) Browser version: Version 90.0.4430.93 (Official Build) (64-bit) Browser Driver version: Version 90.0.4430.93 (Official Build) (64-bit) Language Bindings version: c#  Selenium Grid version (if applicable):  3.141.0","closed","","akumaSlavic","2021-05-03T20:11:00Z","2021-09-05T08:06:37Z"
"","9651","Network Listener cant catch call when it fires during page redirection","## üêõ Bug Report Hey, We are using Selenium 4 (4.0.0-beta-4) with java,  We have a problem with devtools (Network) There is a page where on button click(which redirecting to another page) an API call is being sent,   ## To Reproduce  Try to catch a call which is being send on element click (which is redirecting to another URL)  ## Expected behavior  The call should be catched  ## Test script or set of commands reproducing this issue   DevTools devTools = getDevTools();             devTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));             devTools.addListener(Network.requestWillBeSent(),                     entry -> {                         if (entry.getRequest().getUrl().contains(ANALYTIC_URL) && entry.getRequest().getMethod().equals(""POST"")) {                             resultMap.put(entry.getRequestId().toString(), entry.getRequest().getPostData().get());                         }                     });  ## Environment  OS: OSX, Linux Browser: Chome Browser version: 91.0.4472.114 Browser Driver version: 90.0.4430.24 Language Bindings version: Java 11.0.8","closed","","armanayvazyan","2021-07-14T10:08:16Z","2021-09-05T07:58:53Z"
"","9773","Issue in iOS with Safari: I can't scan my ID Card in my test","## üêõ Bug Report Hello! I design and run automated tests, I had no problem, my code worked very well but one day when I scanned my ID Card this window appeared and it does not allow me to do this action that is necessary for my flow to continue, I got in touch with Apple support but they tell me that it is a direct issue with selenium. Could you help me?  OS: iOS Browser: Safari Browser version: 13.3.1 ![15a5c492-591a-424e-9ff4-9461b8b001d5](https://user-images.githubusercontent.com/89858954/131530038-38632e4c-900e-455d-9b88-7eec9579973b.jpg)  Language Bindings version: Java Js","closed","","abiem2812","2021-08-31T15:22:38Z","2021-10-05T00:05:53Z"
"","9479","Mozilla ignores proxy configuration","## üêõ Bug Report Hello Everyone, Apologies for my english if I wrote something wrong.  My problem is that Firefox webdriver is ignoring proxy settings. So, if I open a Firefox webdriver with proxy the opened Firefox ignores the proxy settings and tries to go directly to the web page.  What's weird is that if after Firefox opens, I manualy go to Netwerk Preferences, the proxy settings are Ok. Proxy ip ok, proxy port ok, everything seems ok...  ... what's MORE WEIRD is this >>> if I select Ok in order to leave ""Network Preferences"", now Firefox starts to use the proxy settings correctly!. This is a sort of walkaround, but its not working for me because it is a manual procedure.  The problem is that I'm need to implement an atomated script that configures proxy, opens Firefox, loads a page, performs some tasks and leave... all 100% automatic. But with this kind of bug the opened Firefox can't go trhoug the proxy, so the page never loads.  Tryed several methods:  Using desiredcapabilities parameter with proxy settings loaded on the desiredcapabilities object  Using ""firefox_profile method"", does not solved the issue either profileWebdriver.set_preference(""network.proxy.type"", 1) # Direct = 0, Manual = 1, PAC = 2, AUTODETECT = 4, SYSTEM = 5 profileWebdriver.set_preference(""network.proxy.http"", 127.0.0.1) profileWebdriver.set_preference(""network.proxy.http_port"", 8080) profileWebdriver.set_preference(""network.proxy.share_proxy_settings"", True)  Tried ""proxy parameter method"", does not solved the issue either. Yes I know it's deprecated but I'm a desperate man and tried it annyway :D  Could not find in the WEB how to set proxy values on options object Thanks in advance!   ## To Reproduce Detailed steps to reproduce the behavior: Create a webdriver object using proxy configurations Get a webpage and check that the web page is loaded via the specified proxy   ## Expected behavior Must open web pages using the proxy configuration. If proxy is down must fail, if proxy is up must use it. The problem is that the proxy is not used.  ## Test script or set of commands reproducing this issue from selenium import webdriver from selenium.webdriver.firefox.options import Options from selenium.webdriver.common.proxy import Proxy, ProxyType  if name == 'main': opts = Options() opts.headless = False  # ----- desired_capability method desired_capability = webdriver.DesiredCapabilities.FIREFOX prox = Proxy() prox.proxy_type = ProxyType.MANUAL prox.http_proxy = ""127.0.0.1:8080"" prox.add_to_capabilities(desired_capability)  # ----- profile method profile = webdriver.FirefoxProfile() profile.set_preference(""dom.disable_beforeunload"", True) profile.set_preference(""browser.tabs.warnOnClose"", False) PrivateMode = False profile.set_preference(""browser.privatebrowsing.autostart"", PrivateMode) profile.set_preference(""browser.privatebrowsing.autostart"", PrivateMode) profile.set_preference(""network.proxy.type"", 1)  # Direct = 0, Manual = 1, PAC = 2, AUTODETECT = 4, SYSTEM = 5 profile.set_preference(""network.proxy.http"", ""127.0.0.1"") profile.set_preference(""network.proxy.http_port"", 2020) profile.set_preference(""network.proxy.share_proxy_settings"", True) profile.update_preferences()  # None of the following procedures works  #1 Using firefox_profile BrowserManager = webdriver.Firefox(options=opts, firefox_profile=profile)  #2 desired_capabilities #BrowserManager = webdriver.Firefox(options=opts, firefox_profile=profile, #                                   desired_capabilities=desired_capability)  #3 proxy # BrowserManager = webdriver.Firefox(options=opts, #                                   firefox_profile=profile, #                                   proxy=prox)  BrowserManager.get(""https://whatismyipaddress.com/"") print(""The End"")  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","C-py,","AlfGod","2021-05-14T18:15:22Z","2021-09-05T07:50:51Z"
"","9173","Unknown HttpClient factory netty when create remote webdriver","## üêõ Bug Report Get ""Unknown HttpClient factory netty"" when create remote web driver using latest selenium version 4.0.0-alpha-7.    ## To Reproduce Here's the pom I used:  ```               4.0.0      org.example     Selenium4     1.0-SNAPSHOT               org.springframework.boot         spring-boot-starter-parent         2.4.2                                 org.seleniumhq.selenium             selenium-java             4.0.0-alpha-7                                         org.testng             testng             7.3.0                                        org.projectlombok             lombok             1.18.18             provided                               org.springframework.boot             spring-boot-starter-web                                org.springframework.boot             spring-boot-starter-test                               org.springframework.boot             spring-boot-starter-validation             2.4.0                                org.apache.logging.log4j             log4j-api             2.14.0                                org.apache.logging.log4j             log4j-core             2.14.0                               io.github.bonigarcia             webdrivermanager             4.3.1                            UTF-8         UTF-8         1.8       ```  Error log: java.lang.ExceptionInInitializerError 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157) 	at com.kt.drivers.ChromeWebDriverServiceImpl.create(ChromeWebDriverServiceImpl.java:67) 	at com.kt.cases.BaseTest.beforeMethod(BaseTest.java:43) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:61) 	at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:366) 	at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:320) 	at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:701) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.util.ArrayList.forEach(ArrayList.java:1259) 	at org.testng.TestRunner.privateRun(TestRunner.java:764) 	at org.testng.TestRunner.run(TestRunner.java:585) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337) 	at org.testng.SuiteRunner.run(SuiteRunner.java:286) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140) 	at org.testng.TestNG.runSuites(TestNG.java:1069) 	at org.testng.TestNG.run(TestNG.java:1037) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109) Caused by: java.lang.IllegalArgumentException: Unknown HttpClient factory netty 	at org.openqa.selenium.remote.http.HttpClient$Factory.create(HttpClient.java:54) 	at org.openqa.selenium.remote.http.HttpClient$Factory.createDefault(HttpClient.java:70) 	at org.openqa.selenium.remote.HttpCommandExecutor.(HttpCommandExecutor.java:47) 	... 36 more     Detailed steps to reproduce the behavior:  ## Expected behavior Web driver can be created successfully.  ## Test script or set of commands reproducing this issue  Source codes to create web driver, and the same codes work for selenium 3.  ```    public WebDriver create(String testName) {         logger.debug(""create() - create chrome web driver"");         final ChromeOptions chromeOptions = new ChromeOptions();         chromeOptions.addArguments(""--no-sandbox"");         chromeOptions.addArguments(""disable-infobars"");         chromeOptions.addArguments(""--ignore-certificate-errors"");         chromeOptions.setPageLoadStrategy(PageLoadStrategy.NONE);         chromeOptions.setCapability(""screenResolution"", ""1920x1080"");         chromeOptions.setCapability(CapabilityType.BROWSER_NAME, BrowserType.CHROME);         chromeOptions.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true);         final Map prefs = new HashMap();         prefs.put(""credentials_enable_service"", false);         prefs.put(""profile.password_manager_enabled"", false);         prefs.put(""profile.default_content_settings.popups"", 0);         prefs.put(""download_prompt_for_download"", false);         chromeOptions.setExperimentalOption(""prefs"", prefs);         final LoggingPreferences loggingPreferences = new LoggingPreferences();         loggingPreferences.enable(LogType.BROWSER, Level.WARNING);         chromeOptions.setCapability(CapabilityType.LOGGING_PREFS, loggingPreferences);         chromeOptions.setCapability(""name"", testName);         chromeOptions.setCapability(""tz"", ""America/Montreal"");         logger.info(""create() - hub url is {}"", hubUrl);         final RemoteWebDriver remoteWebDriver = new RemoteWebDriver(hubUrl, chromeOptions);         logger.debug(""create() - remote web driver session with id {} created"", remoteWebDriver.getSessionId());         remoteWebDriver.manage().window().maximize();         return remoteWebDriver;     } ```  ## Environment  OS: IOS Browser: Chrome Browser version:  Browser Driver version: ChromeDriver 88.0.4324.96 Language Bindings version:   Selenium Grid version (if applicable):","closed","C-java,","yuandanxu","2021-02-14T06:28:25Z","2021-09-05T07:59:12Z"
"","8981","Firefox not launching with Selenium Java Binding. On Exception Stack trace: org.openqa.selenium.WebDriverException: invalid argument: can't kill an exited process","## üêõ Bug Report Firefox browser does not launch in non headless mode when connected to a linux machine over remote connection. However the test executes properly when the browser is running in headless mode.  I am also not able to enable geckodriver logs from my java code. I have tried https://firefox-source-docs.mozilla.org/testing/geckodriver/TraceLogs.html but this doesn't work, I get the error ""The method setLogLevel(Level) in the type FirefoxOptions is not applicable for the arguments (FirefoxDriverLogLevel)""  I have even tried making a wrapper in script file to launch geckodriver with the log level flag, that also didn't produce any logs.   Also, I am not running as a root user and I am able to launch the firefox browser directly through terminal without any errors.   Any help regarding this would be appreciated. Even any guidance of how to log geckodriver logs would be great so that I can proceed with troubleshooting myself.   I have checked all compatibility versions of the geckodriver, selenium and FF browser, everything seems fine.  TIA.  ## To Reproduce  Connect to a linux machine with GUI over a remote connection, try to run your test using selenium in non headless mode, you will get the following error:  org.openqa.selenium.WebDriverException: invalid argument: can't kill an exited process Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'apm-cent7-qa', ip: '192.168.141.19', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1127.13.1.el7.x86_64', java.version: '1.8.0_202' Driver info: driver.version: RealBrowserDriver remote stacktrace:  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62) 	at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126) 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958) 	at java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:126) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:498) 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:485) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) 	at java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:152) 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:464) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:133)  ## Expected behavior  Firefox browser window must launch when triggered in a linux machine over a remote session.   ## Environment  OS: Ubuntu 16 Browser: Firefox Browser version: Firefox Developer Edition v81 Browser Driver version: Geckodriver 27  Language Bindings version: Java 1.8.0_231 Selenium jar version: Selenium 3.141","closed","R-awaiting answer,","mindy14","2020-12-18T13:16:13Z","2021-09-05T08:27:54Z"
"","9431","Applied SSL Certs and started receiving the exceptions when trying to register the nodes when using Selenium Grid 4 - Beta 3. There has been an error while loading the Nodes from the Grid. Exception while fetching data (/nodesInfo/nodes) : java.lang.reflect.InvocationTargetException","## üêõ Bug Report Error while loading nodes from the Grid after applying SSL Certs  ## To Reproduce  - Leveraging Selenium Grid 4 Beta 3 - Applied SSL Certs - Setup 5 components on a linux box: Eventbus, Sessions, SessionQueuer, Distributor & Router using the files updated after getting copies of each from --config-help - Tried registering the Node and the Router starts throwing errors as below while accessing https://:4444/ui/index.html#/: Exception while fetching data (/grid/totalSlots) : java.lang.reflect.InvocationTargetException Exception while fetching data (/grid/nodeCount) : java.lang.reflect.InvocationTargetException Exception while fetching data (/grid/maxSession) : java.lang.reflect.InvocationTargetException Exception while fetching data (/grid/sessionCount) : java.lang.reflect.InvocationTargetException Accessing this URL - https://:4444/status gives the below error: {   ""value"": {     ""ready"": false,     ""message"": ""Unable to read distributor status.""   } }  Detailed steps to reproduce the behavior: Cmds executed: Event Bus: java -jar /path/selenium-server-4.0.0-beta-3.jar event-bus \ --https-private-key /path to key/keyfilename.pkcs8 \ --https-certificate /path to cert/certfilename/cert.pem \ --registration-secret  &   Sessions: java -jar /path/selenium-server-4.0.0-beta-3.jar sessions \ --https-private-key /path to key/keyfilename.pkcs8 \ --https-certificate /path to cert/certfilename/cert.pem \ --registration-secret &   Session Queuer: java -jar /path/selenium-server-4.0.0-beta-3.jar sessionqueuer \ --https-private-key /path to key/keyfilename.pkcs8 \ --https-certificate /path to cert/certfilename/cert.pem \ --registration-secret &   Distributor: java -jar /path/selenium-server-4.0.0-beta-3.jar distributor \ --sessions https://:5556 \ --sessionqueuer https://:5559 \ --bind-bus false \ --https-private-key /path to key/keyfilename.pkcs8 \ --https-certificate /path to cert/certfilename/cert.pem \ --registration-secret &   Router cmd: java -jar /path/selenium-server-4.0.0-beta-3.jar router \ --https-private-key /path to key/keyfilename.pkcs8 \ --https-certificate /path to cert/certfilename/cert.pem \ --sessions https://:5556 \ --distributor-host  \ --distributor-port 5553 \ --sessionqueuer https://:5559 \ --registration-secret  &  Node: java -jar drive:\path\selenium-server-4.0.0-beta-3.jar node --port 443 --detect-drivers true --publish-events tcp://:4442 --subscribe-events tcp://:4443 --https-private-key /path to key/keyfilename.pkcs8  --https-certificate /path to cert/certfilename/cert.pem --registration-secret   There has been an error while loading the Nodes from the Grid. Exception while fetching data (/nodesInfo/nodes) : java.lang.reflect.InvocationTargetException  ## Expected behavior  All the components should be up and running based on the documentation provided  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Ubuntu 18.04 Browser:  N/A Browser version:  N/A Browser Driver version:  N/A Language Bindings version:  N/A Selenium Grid version (if applicable):  4 beta 3","closed","C-grid,","shmikkil","2021-04-30T08:09:59Z","2021-09-05T08:01:11Z"
"","9492","C# WebDriver ChromeOptions LeaveBrowserRunning property not working","## üêõ Bug Report C# WebDriver ChromeOptions LeaveBrowserRunning property not working  ## To Reproduce ``` public class Program {         static void Main(string[] args)         {             ChromeOptions option = new ChromeOptions();             option.LeaveBrowserRunning = true;             using (IWebDriver driver = new ChromeDriver(""C:\Selenium"", option))             {                 driver.Navigate().GoToUrl(""https://www.google.com"");             }        } } ```  ## Expected behavior The Chrome should be left running after the ChromeDriver instance is exited  ## Test script or set of commands reproducing this issue See *To Reproduce*  ## Environment OS: Windows 10 Browser: Chrome Browser version: 90.0.4430.212(64bit) Browser Driver version: ChromeDriver 90.0.4430.24 Language Bindings version: C# 3.141.0","closed","C-dotnet,","Luzemin","2021-05-19T16:03:01Z","2021-10-30T00:06:04Z"
"","9621","se:cdp doesn't respect docker-port and docker-host","## üêõ Bug Report `se:cdp` doesn't respect docker-port and docker-host  ## To Reproduce  Run the following command `docker run -p 5555:4444 -e SE_OPTS=""--docker-host hostname.com --docker-port 5555""  selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618`  And start a new session.  ## Expected behavior `se:cdp` in new session response should be `ws://hostname.com:5555/...`  ## Actual behavior `se:cdp` in response is still the ip and port inside container `se:cdp: ws://172.17.0.2:4444/...`  ## Environment  Docker Image: selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618","closed","needs-triaging,","link89","2021-07-02T06:02:08Z","2021-09-05T07:59:00Z"
"","9389","Test web application install in Brightsign device with Selenium through debugAddress","## üêõ Bug Report ``` 2021-03-16T18:03:57.466Z ERROR webdriver: unknown error: unknown error: cannot connect to chrome at xx.xx.xx.xx:xx from unknown error: unrecognized Chrome version: brightsign/ ``` ## Context I want to develop a test framework using selenium . in order to validate our web application on brightSign device. But I could not connect to the debug address of the brightsign device. When I'm trying it manually without selenium , I can connect to it.   On brightsign the version of chromium use is 69.  ## Remark I also notice that in the 'chrome://inspect/devices#devices ' the remote target is (brightsign/) it doesnt specify the version of the chrome browser.  After running the application on brightsign and the electron version of the application in debug mode. we have the version of the chrome browser that is running on electron. But on brightsign we have brightsign/.     _**The execution error that selenium returns can it be related to that?**_  ### Environment  OS: macOS 11.2.3 Browser: Chrome Browser version: v69 Browser Driver version: ChromeDriver 2.44 Language Bindings version: Node 12.13.0 and selenium-standalone@6.20.1","closed","","simoThierry","2021-04-17T13:56:42Z","2021-09-05T08:06:49Z"
"","9390","Test web application install in Brightsign with Selenium through debugAddress","## üêõ Bug Report ``` 2021-03-16T18:03:57.466Z ERROR webdriver: unknown error: unknown error: cannot connect to chrome at xx.xx.xx.xx:xx from unknown error: unrecognized Chrome version: brightsign/ ```  ## To Reproduce  I want to develop a test framework using selenium . in order to validate our web application on brightSign device. But I could not connect to the debug address of the brightsign device. When I'm trying it manually without selenium , I can connect to it.   On brightsign the version of chromium use is 69.  ## Expected behavior  Connect to the application through the debug address  ## Remark  I also notice that in the 'chrome://inspect/devices#devices ' the remote target is (brightsign/) it doesnt specify the version of the chrome browser.  After running the application on brightsign and the electron version of the application in debug mode. we have the version of the chrome browser that is running on electron. But on brightsign we have brightsign/.     _**The execution error that selenium returns can it be related to that?**_  ## Environment  OS: macOS 11.2.3 Browser: Chrome Browser version: v69 Browser Driver version: ChromeDriver 2.44 Language Bindings version:Node 12.13.0 and selenium-standalone@6.20.1 Selenium Grid version (if applicable):","closed","","simoThierry","2021-04-17T14:07:56Z","2021-09-05T08:06:47Z"
"","9103","GraphQL error: Can't serialize value (/grid/nodes[24]/status) : Invalid input for Enum 'Status'. Unknown value 'DOWN'","## üêõ Bug Report **selenium/hub:4.0.0-beta-1-prerelease-20210114**  When running tests I came across this issue ![image](https://user-images.githubusercontent.com/20699180/105867934-88169000-5fed-11eb-8afb-014c617ccd7b.png)  Also hub containers cpu goes dangerously high ![image](https://user-images.githubusercontent.com/20699180/105868020-a1b7d780-5fed-11eb-8a7b-240d5bf5fe33.png) [gridLogs.zip](https://github.com/SeleniumHQ/selenium/files/5874406/gridLogs.zip)   | 14:58:25.128 WARN [ExecutionStrategy.handleCoercionProblem] - Can't serialize value (/grid/nodes[0]/status) : Invalid input for Enum 'Status'. Unknown value 'DOWN' selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    | graphql.schema.CoercingSerializeException: Invalid input for Enum 'Status'. Unknown value 'DOWN' selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.schema.GraphQLEnumType.getNameByValue(GraphQLEnumType.java:172) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.schema.GraphQLEnumType.serialize(GraphQLEnumType.java:91) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValueForEnum(ExecutionStrategy.java:613) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:433) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:393) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:204) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.uniApply(CompletableFuture.java:616) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:628) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:1996) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:203) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:659) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:443) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:538) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValueForList(ExecutionStrategy.java:490) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:428) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:393) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:204) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.uniApply(CompletableFuture.java:616) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:628) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:1996) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:203) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:659) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeValue(ExecutionStrategy.java:443) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.completeField(ExecutionStrategy.java:393) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.lambda$resolveFieldWithInfo$0(ExecutionStrategy.java:204) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.uniApply(CompletableFuture.java:616) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.uniApplyStage(CompletableFuture.java:628) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.CompletableFuture.thenApply(CompletableFuture.java:1996) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:203) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:74) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.Execution.executeOperation(Execution.java:167) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.execution.Execution.execute(Execution.java:108) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.GraphQL.execute(GraphQL.java:598) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.GraphQL.parseValidateAndExecute(GraphQL.java:529) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.GraphQL.executeAsync(GraphQL.java:493) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at graphql.GraphQL.execute(GraphQL.java:426) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.grid.graphql.GraphqlHandler.execute(GraphqlHandler.java:139) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:183) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.grid.web.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:29) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.grid.web.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.grid.web.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.FutureTask.run(FutureTask.java:266) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) selenium_hub.1.y1e6ctp2fti3@uiplspidoc002    |  at java.lang.Thread.run(Thread.java:748)","closed","C-grid,","mcopjan","2021-01-26T15:48:12Z","2021-09-05T08:21:33Z"
"","9112","ERROR [HashedWheelTimer.reportTooManyInstances] - You are creating too many HashedWheelTimer instances. HashedWheelTimer is a shared resource that must be reused across the JVM,so that only a few instances are created.","## üêõ Bug Report **4.0.0-beta-1-prerelease-20210114** I have a grid4 with 20 chrome nodes (SE_NODE_MAX_CONCURRENT_SESSIONS=5), when running 50 (max) headless tests in parallel I can see hub dying with the error above. When I stopped execution I could see that the hub recovered after some time.  ![image](https://user-images.githubusercontent.com/20699180/105994379-768dc080-609f-11eb-99fe-633d031747ee.png)  [selenium_hub_logs.txt.zip](https://github.com/SeleniumHQ/selenium/files/5880313/selenium_hub_logs.txt.zip)   ``` version: '3.7'  services:    hub:     image: selenium/hub:4.0.0-beta-1-prerelease-20210114     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444""     deploy:       placement:         constraints:           - node.role == manager       restart_policy:         condition: on-failure    chrome:     image: selenium/node-chrome:4.0.0-beta-1-prerelease-20210114     volumes:       - /dev/shm:/dev/shm     depends_on:       - hub     environment:       - SE_EVENT_BUS_HOST=hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443       - LANG=en_GB.UTF-8       - SE_NODE_MAX_CONCURRENT_SESSIONS=5       - START_XVFB=false       - SCREEN_WIDTH=1920       - SCREEN_HEIGHT=1080       - SCREEN_DEPTH=24     entrypoint: bash -c 'SE_OPTS=""--host $$HOSTNAME"" /opt/bin/entry_point.sh'     deploy:       replicas: 20       placement:         constraints:           - node.role == worker       restart_policy:         condition: on-failure   ```","closed","C-java,","mcopjan","2021-01-27T13:02:24Z","2021-09-05T08:15:50Z"
"","9762","Selenium Remote Web Driver not starting with Firefox Profile given","## üêõ Bug Report ### Test Case I want to install a custom extension in a Firefox remote web driver. To achieve that I have created a FirefoxProfile and added the custom extension via setExtension. The problem is that the profile I have just created is not added to the Driver instance. Here is the piece of code I have used: ```           File firefoxExtension = new File(""src\\main\\resources\\browser-extensions\\firefox-extension.xpi"");           FirefoxProfile profile = new FirefoxProfile();           profile.addExtension(firefoxExtension);           FirefoxOptions options = new FirefoxOptions();           options.setProfile(profile);           capabilities.setCapability(FirefoxOptions.FIREFOX_OPTIONS,options);          try {             return new RemoteWebDriver(new URL(""https://"" + username + "":"" + accessKey + ""@""                     + environmentVariables.getProperty(""browserstack.server"") + ""/wd/hub""), capabilities);         } catch (Exception e) {             System.out.println(e);             return null;         } ``` ### System Remote Platform: Windows 10 Firefox version: 68 Selenium: 3.141.59 Selenium Hub: Browser Stack  ### Expected result  1. Browser opened 2. Profile loaded with the extension 3. Browser can be interacted using RemoteWebDriver","closed","R-awaiting answer,","alexfernandezv","2021-08-26T10:21:21Z","2021-11-23T00:06:35Z"
"","9585","`RunScript` command adds a script section or not?","## üêõ Bug Report ## üí¨ Questions and Help  Hey there I was reading a `spec` of selenium commands and discovered `run script` I starting to think if it any different from `execute script` according to the doc it is. c > Creates a new ""script"" tag in the body of the current test window, and adds the specified text into the body of the command. Beware that JS exceptions thrown in these script tags aren't managed by Selenium, so you should probably wrap your script in try/catch blocks if there is any chance that the script will throw an exception.  But from what I see in the code is just the same as `exec script` (I may be wrong), except not saving a returned value?  https://github.com/SeleniumHQ/selenium/blob/64447d4b03f6986337d1ca8d8b6476653570bcc1/dotnet/src/webdriverbackedselenium/Internal/SeleniumEmulation/RunScript.cs#L27-L55  PS: it's not a bug but your bot kinda make me tired :) #9584 #9583","closed","","zhiburt","2021-06-16T10:01:13Z","2021-09-05T08:01:05Z"
"","8941","[Selenium 4] ExpectedConditions are not Kotlin-compatible","## üêõ Bug Report  With Selenium 4 actually, it is not possible to use the ExpectedConditions as in Selenium 3. I already discussed that with @shs96c in Slack.   Simon: ""You should be able to use ExpectedConditions. They're just a plain Function under the covers""  ## To Reproduce  Update your maven dependency to Selenium 4.0.0-alpha-7 and try to build (while using ExpectedConditions like   ``` WebDriverWait(webdriver, 10).until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("".Confirmation__heading"")) ``` ## Environment  OS: Windows 10 Browser: independent Language Bindings version: Java 4.0.0-alpha-7","closed","selenium-4,","boris779","2020-12-09T11:00:16Z","2021-09-05T08:15:42Z"
"","9460","Selenium with Python 3.9: Replace usage of base64.encodestring in WebElement._upload","## üêõ Bug Report  With Python 3.9 `base64.encodestring` got deprecated in favor of `base64.encodebytes`. This breaks selenium with Python 3.9 when trying to upload a file. The Python 3.8 [documentation](https://docs.python.org/3.8/library/base64.html) mentioned deprecation. In documentation of version 3.9 `encodestring`  disappeared.  ```webelement.py class WebElement(object):      ...      def _upload(self, filename):         fp = IOStream()         zipped = zipfile.ZipFile(fp, 'w', zipfile.ZIP_DEFLATED)         zipped.write(filename, os.path.split(filename)[1])         zipped.close()         content = base64.encodestring(fp.getvalue()) ``` ## Environment  OS: Windows 10 Browser:  Chrome Browser version:  docker image selenium/standalone-chrome-debug b35534228780 Browser Driver version:  Language Bindings version: Python 3.141.0","closed","C-py,","mpibpc-mroose","2021-05-10T14:23:26Z","2021-09-05T08:03:30Z"
"","9676","((ChromeDriver) driver).getDevTools().createSession() throw error","## üêõ Bug Report  With latest version of Selenium 4 beta `4.0.0-beta-4` on `java` throws exception when `((ChromeDriver) driver).getDevTools().createSession()` is called from `Test`    ## To Reproduce    - Create a `maven` project with Selenium 4 dependency as `4.0.0-beta-4` and `jdk` version as `jdk-16.0.1`  - Get `DevTools` object  - `createSession` using object of `DevTools` - Run the `Test`  ## Expected behavior  Calling `((ChromeDriver) driver).getDevTools().createSession()` should create a session and should allow user to register `Events` & `Listeners`.  ## Test script or set of commands reproducing this issue  > `CapturingPerformanceMetricTests.java` _(Test Script)_  ``` import com.qa.selenium4.demo.base.BaseDriver; import com.qa.selenium4.demo.helper.WaitHelper; import org.apache.logging.log4j.LogManager; import org.apache.logging.log4j.Logger; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.devtools.DevTools; import org.openqa.selenium.devtools.v91.performance.Performance; import org.openqa.selenium.devtools.v91.performance.model.Metric; import org.testng.annotations.Test;  import java.util.List; import java.util.Optional;  public class CapturingPerformanceMetricTests extends BaseDriver {     private static final Logger logger = LogManager.getLogger(CapturingPerformanceMetricTests.class.getName());      @Test(priority = 0, description = ""Capture Performance Metrics Using Chrome Dev Tools"")     public void getPerformanceMetricsUsingCDPTest() {         // Get Dev Tools         DevTools chromeDevTools = ((ChromeDriver) driver).getDevTools();          // Create Session         chromeDevTools.createSession(); // Calling this throws an exception          // Enable Performance         chromeDevTools.send(Performance.enable(Optional.of(Performance.EnableTimeDomain.TIMETICKS)));          // Load URL         driver.get(""https://www.amazon.in/"");         WaitHelper.hardWait(5);         List performanceMatrix = chromeDevTools.send(Performance.getMetrics());          chromeDevTools.send(Performance.disable());          performanceMatrix.forEach(matrix -> {             logger.info(matrix.getName() + "" : "" + matrix.getValue());         });     } } ```  > Exception details when `((ChromeDriver) driver).getDevTools().createSession()` is called  ``` ChromeDriver was started successfully. Jul 22, 2021 1:24:28 PM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C Jul 22, 2021 1:24:28 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch WARNING: Unable to find an exact match for CDP version 92, so returning the closest version found: 91 Jul 22, 2021 1:24:28 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch INFO: Found CDP implementation for version 92 of 91 Jul 22, 2021 1:24:29 PM org.openqa.selenium.devtools.Connection lambda$send$1 WARNING: Unable to map result for Target.setAutoAttach java.lang.reflect.InaccessibleObjectException: Unable to make private java.lang.Void() accessible: module java.base does not ""opens java.lang"" to unnamed module @6537cf78 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357 undefined) 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297 undefined) 	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:188 undefined) 	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:181 undefined) 	at org.openqa.selenium.json.InstanceCoercer.getConstructor(InstanceCoercer.java:155 undefined) 	at org.openqa.selenium.json.InstanceCoercer.test(InstanceCoercer.java:48 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$4(JsonTypeCoercer.java:134 undefined) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178 undefined) 	at java.base/java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1812 undefined) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488 undefined) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474 undefined) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150 undefined) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234 undefined) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.buildCoercer(JsonTypeCoercer.java:135 undefined) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:124 undefined) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:289 undefined) 	at org.openqa.selenium.devtools.Command.lambda$new$0(Command.java:41 undefined) 	at org.openqa.selenium.devtools.Connection.lambda$send$1(Connection.java:109 undefined) 	at org.openqa.selenium.devtools.Connection$NamedConsumer.accept(Connection.java:92 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:218 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Jul 22, 2021 1:24:29 PM org.openqa.selenium.devtools.Connection lambda$send$1 WARNING: Unable to map result for Log.clear java.lang.reflect.InaccessibleObjectException: Unable to make private java.lang.Void() accessible: module java.base does not ""opens java.lang"" to unnamed module @6537cf78 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357 undefined) 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297 undefined) 	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:188 undefined) 	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:181 undefined) 	at org.openqa.selenium.json.InstanceCoercer.getConstructor(InstanceCoercer.java:155 undefined) 	at org.openqa.selenium.json.InstanceCoercer.test(InstanceCoercer.java:48 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$4(JsonTypeCoercer.java:134 undefined) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178 undefined) 	at java.base/java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1812 undefined) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488 undefined) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474 undefined) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150 undefined) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234 undefined) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.buildCoercer(JsonTypeCoercer.java:135 undefined) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:124 undefined) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:289 undefined) 	at org.openqa.selenium.devtools.Command.lambda$new$0(Command.java:41 undefined) 	at org.openqa.selenium.devtools.Connection.lambda$send$1(Connection.java:109 undefined) 	at org.openqa.selenium.devtools.Connection$NamedConsumer.accept(Connection.java:92 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:218 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) java.lang.reflect.InaccessibleObjectException: Unable to make private java.lang.Void() accessible: module java.base does not ""opens java.lang"" to unnamed module @6537cf78 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357 undefined) 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297 undefined) 	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:188 undefined) 	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:181 undefined) 	at org.openqa.selenium.json.InstanceCoercer.getConstructor(InstanceCoercer.java:155 undefined) 	at org.openqa.selenium.json.InstanceCoercer.test(InstanceCoercer.java:48 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$4(JsonTypeCoercer.java:134 undefined) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178 undefined) 	at java.base/java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1812 undefined) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488 undefined) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474 undefined) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150 undefined) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234 undefined) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.buildCoercer(JsonTypeCoercer.java:135 undefined) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:124 undefined) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:289 undefined) 	at org.openqa.selenium.devtools.Command.lambda$new$0(Command.java:41 undefined) 	at org.openqa.selenium.devtools.Connection.lambda$send$1(Connection.java:109 undefined) 	at org.openqa.selenium.devtools.Connection$NamedConsumer.accept(Connection.java:92 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:218 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Jul 22, 2021 1:24:29 PM org.openqa.selenium.devtools.Connection$Listener lambda$onText$0 WARNING: Unable to process: {""id"":3,""result"":{},""sessionId"":""6385B3D3C023139BAB5BA89925C94EF0""} org.openqa.selenium.json.JsonException: Expected to read a NAME but instead have: START_MAP. Last 17 characters read: {""id"":3,""result"": Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:300 undefined) 	at org.openqa.selenium.json.JsonInput.nextName(JsonInput.java:136 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:216 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Exception in thread ""CDP Connection"" org.openqa.selenium.devtools.DevToolsException: Expected to read a NAME but instead have: START_MAP. Last 17 characters read: {""id"":3,""result"": Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:190 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Caused by: org.openqa.selenium.json.JsonException: Expected to read a NAME but instead have: START_MAP. Last 17 characters read: {""id"":3,""result"": Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:300 undefined) 	at org.openqa.selenium.json.JsonInput.nextName(JsonInput.java:136 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:216 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	... 3 more Jul 22, 2021 1:24:29 PM org.openqa.selenium.devtools.Connection$Listener lambda$onText$0 WARNING: Unable to process: {""id"":4,""result"":{},""sessionId"":""6385B3D3C023139BAB5BA89925C94EF0""} org.openqa.selenium.json.JsonException: Expected to read a NAME but instead have: START_MAP. Last 17 characters read: {""id"":4,""result"": Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:300 undefined) 	at org.openqa.selenium.json.JsonInput.nextName(JsonInput.java:136 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:216 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Exception in thread ""CDP Connection"" org.openqa.selenium.devtools.DevToolsException: Expected to read a NAME but instead have: START_MAP. Last 17 characters read: {""id"":4,""result"": Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:190 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Caused by: org.openqa.selenium.json.JsonException: Expected to read a NAME but instead have: START_MAP. Last 17 characters read: {""id"":4,""result"": Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: unknown 	at org.openqa.selenium.json.JsonInput.expect(JsonInput.java:300 undefined) 	at org.openqa.selenium.json.JsonInput.nextName(JsonInput.java:136 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:216 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	... 3 more org.openqa.selenium.devtools.DevToolsException: Unable to make private java.lang.Void() accessible: module java.base does not ""opens java.lang"" to unnamed module @6537cf78 Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PMCLAP1338', ip: '192.168.207.2', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: DevTools Connection 	at org.openqa.selenium.devtools.DevTools.createSession(DevTools.java:125 undefined) 	at com.qa.selenium4.demo.devtools.CapturingPerformanceMetricTests.getPerformanceMetricsUsingCDPTest(CapturingPerformanceMetricTests.java:24 undefined) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78 undefined) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43 undefined) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567 undefined) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132 undefined) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599 undefined) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174 undefined) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46 undefined) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822 undefined) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147 undefined) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146 undefined) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128 undefined) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511 undefined) 	at org.testng.TestRunner.privateRun(TestRunner.java:764 undefined) 	at org.testng.TestRunner.run(TestRunner.java:585 undefined) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384 undefined) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378 undefined) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337 undefined) 	at org.testng.SuiteRunner.run(SuiteRunner.java:286 undefined) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53 undefined) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96 undefined) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218 undefined) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140 undefined) 	at org.testng.TestNG.runSuites(TestNG.java:1069 undefined) 	at org.testng.TestNG.run(TestNG.java:1037 undefined) 	at com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:66 undefined) 	at com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:109 undefined) Caused by: java.lang.reflect.InaccessibleObjectException: Unable to make private java.lang.Void() accessible: module java.base does not ""opens java.lang"" to unnamed module @6537cf78 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:357 undefined) 	at java.base/java.lang.reflect.AccessibleObject.checkCanSetAccessible(AccessibleObject.java:297 undefined) 	at java.base/java.lang.reflect.Constructor.checkCanSetAccessible(Constructor.java:188 undefined) 	at java.base/java.lang.reflect.Constructor.setAccessible(Constructor.java:181 undefined) 	at org.openqa.selenium.json.InstanceCoercer.getConstructor(InstanceCoercer.java:155 undefined) 	at org.openqa.selenium.json.InstanceCoercer.test(InstanceCoercer.java:48 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$4(JsonTypeCoercer.java:134 undefined) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178 undefined) 	at java.base/java.util.Spliterators$IteratorSpliterator.tryAdvance(Spliterators.java:1812 undefined) 	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502 undefined) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488 undefined) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474 undefined) 	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150 undefined) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234 undefined) 	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.buildCoercer(JsonTypeCoercer.java:135 undefined) 	at java.base/java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1708 undefined) 	at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:124 undefined) 	at org.openqa.selenium.json.JsonInput.read(JsonInput.java:289 undefined) 	at org.openqa.selenium.devtools.Command.lambda$new$0(Command.java:41 undefined) 	at org.openqa.selenium.devtools.Connection.lambda$send$1(Connection.java:109 undefined) 	at org.openqa.selenium.devtools.Connection$NamedConsumer.accept(Connection.java:92 undefined) 	at org.openqa.selenium.devtools.Connection.handle(Connection.java:218 undefined) 	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:55 undefined) 	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:187 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130 undefined) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) Jul 22, 2021 1:24:31 PM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Connection reset java.net.SocketException: Connection reset 	at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:394 undefined) 	at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:426 undefined) 	at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253 undefined) 	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1132 undefined) 	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350 undefined) 	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151 undefined) 	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719 undefined) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655 undefined) 	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581 undefined) 	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493 undefined) 	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989 undefined) 	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74 undefined) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30 undefined) 	at java.base/java.lang.Thread.run(Thread.java:831 undefined) ```  ## Environment  OS: `Windows 10` Browser: `Chrome` Browser version: `92.0.4515.107` Browser Driver version: `ChromeDriver 92.0.4515.43` Language Bindings version: `Java jdk-16.0.1`  Selenium Grid version (if applicable): `Not applicable`  #### Additionally, I have tried checking the same code with following environment configuration as well, and the results are same as mentioned in this issue.  OS: `Windows 10` Browser: `Chrome` Browser version: `91.0.4464.0` Browser Driver version: `ChromeDriver 91.0.4472.101` Se.cdp Version : `91.0.4464.0` Language Bindings version: `Java jdk-16.0.1`  Selenium Grid version (if applicable): `Not applicable`","closed","","prajapati-hitesh","2021-07-22T09:10:22Z","2021-09-06T00:05:33Z"
"","9740","Selenium Chrome Web Driver fails to open new tab with error no browser is open","## üêõ Bug Report  While trying to open a new tab with the command `driver.switch_to.new_window('tab')` Selenium returns error **Failed to open new tab - no browser is open**  ## To Reproduce  Load a costume profile on the Chrome Web Driver and try to open a new tab  Same issue https://stackoverflow.com/questions/67970276/selenium-4-0-0b4-failed-to-open-new-tab-no-browser-is-open  ## Expected behavior  Open a new tab  ## Test script or set of commands reproducing this issue  ``` chrome_options = Options() chrome_options.add_argument\     (r""--user-data-dir=C:\\Users\\nicoc\\AppData\\Local\\Google\\Chrome\\User Data"") chrome_options.add_argument(r'--profile-directory=Profile 2') driver = webdriver.Chrome(executable_path=r""chromedriver.exe"", options=chrome_options) driver.get(""https://google.com/"") driver.switch_to.new_window('tab') ```  ## Environment  OS: Windows 10.0.19043 Build 19043 Browser: Chrome Browser version: 92.0.4515.131 Browser Driver version: ChromeDriver 92.0.4515.107 Language Bindings version: Python 3.8 Selenium Grid version (if applicable): 4.0.0.b4","closed","G-chromedriver,","NicoCaldo","2021-08-14T10:54:53Z","2022-01-26T00:10:00Z"
"","9824","Selenium IEDriver 3.150.2 has an incorrect filename","## üêõ Bug Report  While trying to fetch the selenium driver for IE version 3.150.2 the filename fails to be parsed by SemVer because it now contains a dot before the version https://selenium-release.storage.googleapis.com/index.html?path=3.150/  ## To Reproduce  Go to https://selenium-release.storage.googleapis.com/index.html?path=3.150/ and download the driver for 3.150.2. The filename should be IEDriverServer_Win32_3.150.2.zip but now there is a dot before the version number (IEDriverServer_Win32_.3.150.2.zip)  ## Expected behavior  Filename doesn't have the dot before the version, just like older versions.  ## Test script or set of commands reproducing this issue  Not applicable.  ## Environment  Not applicable.","closed","","razor85","2021-09-14T13:21:15Z","2021-11-05T00:06:18Z"
"","9013","WebDriver instance cannot access camera feed on MacOS BigSur","## üêõ Bug Report  While testing web application to video chat web driver session could not get camera feed even when the camera is turned ON( green light is ON). I have tried using the latest selenium version and the issue is with 3.14.* versions too, this is observed after upgrading to macOS 11.0.1. Logs show that it is using the 10.16 version  > Build info: version: '4.0.0-alpha-7', revision: 'de8579b6d5' > System info: host: '', ip: '', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '1.8.0_271' > Driver info: org.openqa.selenium.chrome.ChromeDriver > Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: /var/folders/_y/x1_12lqj6_l...}, goog:chromeOptions: {debuggerAddress: localhost:50378}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: MAC, platformName: MAC, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} >  > Starting ChromeDriver 87.0.4280.88 (89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761}) on port 1786 > Only local connections are allowed. > Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. > ChromeDriver was started successfully. > Dec 30, 2020 1:55:53 PM org.openqa.selenium.remote.ProtocolHandshake createSession > INFO: Detected dialect: W3C > Dec 30, 2020 1:55:53 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch > WARNING: Unable to find an exact match for CDP version 87, so returning the closest version found: 86 > Dec 30, 2020 1:55:53 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch > INFO: Found CDP implementation for version 87 of 86  ## To Reproduce Chrome profile used                          System.setProperty(""webdriver.chrome.driver"",                          System.getProperty(""user.dir"")+""/apps/drivers/""+Utils.getOSname()+""/chromedriver""); 			Map prefs = new HashMap(); 			prefs.put(""profile.default_content_setting_values.notifications"", 1); 			prefs.put(""profile.default_content_setting_values.media_stream_mic"", 1); 			prefs.put(""profile.default_content_setting_values.media_stream_camera"", 1); 			loggingprefs = new LoggingPreferences(); 			loggingprefs.enable(LogType.PERFORMANCE,Level.ALL); 			ChromeOptions options = new ChromeOptions(); 			options.addArguments(""--start-maximized""); 			options.addArguments(""--enable-javascript""); 			options.setExperimentalOption(""prefs"", prefs); 			options.addArguments(""--auto-open-devtools-for-tabs""); 			options.addArguments(""--disable-web-security""); 			options.addArguments(""--user-data-dir=/tmp/chrome_dev_test""); 			options.addArguments(""--no-sandbox""); 			options.setCapability(CapabilityType.LOGGING_PREFS, loggingprefs); 			options.setAcceptInsecureCerts(true); 			options.addArguments(""use-fake-ui-for-media-stream""); 			WebDriver driver = new ChromeDriver(options);  launch any web site to test web came driver.get(""https://webcamtests.com/""), and try to access the camera   ## Expected behavior  The camera should show a feed on the screen  ## Test script or set of commands reproducing this issue  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: OSX 11.0.1 Browser: chrome, all Browser version: 87 Browser Driver version: chromedriver 87 Language Bindings version: java","closed","","sankalphirke","2020-12-30T09:05:48Z","2021-09-06T00:05:32Z"
"","9285","Unable to upload file(15MB) in remote machine and failing with JsonParser Error","## üêõ Bug Report  While running in local machines, we are able to upload test files of different sizes upto 20 MB, however when running the same in browserstack (remote machine), getting exceptions  **Observed for 10 MB file**  org.openqa.selenium.WebDriverException:     Error 500 Java heap space   HTTP ERROR: 500Java heap space RequestURI=/wd/hub/session/63f218bdcf65131f207deca3188104671ed5f084/file Powered by Jetty://    ![8-6-mb](https://user-images.githubusercontent.com/7877445/111138469-fadfc880-85a5-11eb-837a-0b66e4f6182a.png)  Command duration or timeout: 3.51 seconds  **Observed for 15 MB file** Caused by: com.google.gson.JsonParseException: Failed parsing JSON source: JsonReader at line 1 column 16719873 to Json  Command duration or timeout: 0 milliseconds Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: os.name: 'Windows Server 2019', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_271'  ## To Reproduce Navigate to https://the-internet.herokuapp.com/upload Try to upload any file of 15 mb (attached 15 mb file)   Detailed steps to reproduce the behavior:  Try to upload any file of 15 mb in https://the-internet.herokuapp.com/upload in remote machine and observe that we are getting JsonParseException   ## Test script or set of commands reproducing this issue  WebDriver driver= new RemoteWebDriver(new URL(""RemoteUrl@hub-cloud.browserstack.com/wd/hub/""),                 new CapabilityHelper().addCapability(""chrome"", ""latest"", ""windows"", ""10"", """"));  ((RemoteWebDriver) driver).setFileDetector(new LocalFileDetector());   driver.get(""https://the-internet.herokuapp.com/upload"");  driver.findElement(By.cssSelector(""input[type='file']"")).sendKeys(""D:\\15-4-mb.pdf""); [15-4-mb.pdf](https://github.com/SeleniumHQ/selenium/files/6140477/15-4-mb.pdf)   ## Environment  OS:   Windows 10  Browser:  Chrome  Browser version: 89 Browser Driver version: ChromeDriver 89.0.4389.23 Language Bindings version:  Java 1.8 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","vinaygadegela","2021-03-15T10:19:36Z","2021-09-05T08:12:17Z"
"","9084","While executing Selenium script in firefox in server using jenkins getting below error.","## üêõ Bug Report  While executing Selenium script in firefox in server using jenkins getting below error.     Test result is as follows  [INFO] T E S T S [INFO] ------------------------------------------------------- [INFO] Running TestSuite SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"". SLF4J: Defaulting to no-operation (NOP) logger implementation SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details. Debug 1 at settingt options for Firefox driver Debug 2 at setting Headless as a option for Firefox driver 1611291894077 geckodriver INFO Listening on 127.0.0.1:26834 1611291894969 mozrunner::runner INFO Running command: ""/usr/lib/firefox/firefox"" ""--marionette"" ""--headless"" ""-foreground"" ""-no-remote"" ""-profile"" ""/tmp/rust_mozprofileiAWFwt"" *** You are running in headless mode.  (firefox:183043): GLib-GObject-WARNING **: 05:04:55.840: invalid (NULL) pointer instance  (firefox:183043): GLib-GObject-CRITICAL **: 05:04:55.841: g_signal_connect_data: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed  (/usr/lib/firefox/firefox:183081): GLib-GObject-WARNING **: 05:04:56.971: invalid (NULL) pointer instance  (/usr/lib/firefox/firefox:183081): GLib-GObject-CRITICAL **: 05:04:56.973: g_signal_connect_data: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed  (/usr/lib/firefox/firefox:183101): GLib-GObject-WARNING **: 05:04:58.282: invalid (NULL) pointer instance  (/usr/lib/firefox/firefox:183101): GLib-GObject-CRITICAL **: 05:04:58.285: g_signal_connect_data: assertion 'G_TYPE_CHECK_INSTANCE (instance)' failed Exiting due to channel error. Exiting due to channel error. [ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 64.471 s","closed","","meka-dharma","2021-01-22T05:18:14Z","2021-09-05T08:24:57Z"
"","9750","Unable to send an integer value to a numeric field using the SendKeys()","## üêõ Bug Report  While automating a web UI using Selenium, we encounter a numeric input field that accepts only integer values. Selenium's SendKeys() method could not be used in this situation as it only accepts a string parameter.  If we could overload the SendKeys() method to accept an integer value, [and other non-string values], this will append more flexibility to the method and enable it to meet up with the demands of the current web developments.  [Request: Overload the SendKeys() method to accept other input parameters other than a string. ]   -->  ## To Reproduce    ## Environment  OS:  Browser:  Browser version:   Language Bindings version:","closed","","EugeneKonneh","2021-08-19T17:12:53Z","2021-09-27T00:05:48Z"
"","9183","Can not re-connect a node in Grid 4 after failing registration-secret check","## üêõ Bug Report  When you spin up a node and it fails to connect due to having an incorrect registration-secret you can never connect it without first restarting the hub, even if you shut down the node and bring it back up with the correct secret.  ## To Reproduce  1. Spin up a hub with a registration-secret: `java -jar selenium-server-4.0.0-alpha-7.jar hub --host localhost --subscribe-events tcp://localhost:4443 --publish-events tcp://localhost:4442 --registration-secret lifebeforedeath` 2. Spin up a node without the secert: `java -jar selenium-server-4.0.0-alpha-7.jar node --subscribe-events tcp://localhost:4443 --publish-events tcp://localhost:4442 --host localhost --detectdrivers true` It fails as expected with log records from the hub indicating `Received message without a valid secret.` 3. Shutdown the node and spin it back up with the correct registration-secret 4. It doesn't connect, this can be verified in the UI, log records, and graphql api  ## Expected behavior  I expect the second time I spin up the node it connects and registers to the hub provided the secret is now correct.  ## Test script or set of commands reproducing this issue  see above  ## Environment  OS: Cent)S 8 Browser: Chrome Driver installed Browser version: N/A Browser Driver version: latest Language Bindings version: N/A Selenium Grid version (if applicable): 4.0.0-alpha-7","closed","C-grid,","dknopp","2021-02-16T18:55:09Z","2021-09-05T08:15:48Z"
"","9770","WebDriver tagging to WebDriverListener - Actions class perform() returns with exception","## üêõ Bug Report  When WebDriver instance is tagged/attached to WebDriverListener, using Actions class perform() call results in exception.  Actions class and related methods work fine if WebDriverListner is not used.  ## To Reproduce  Detailed steps to reproduce the behavior: Initialize a WebDriver Add/attach WebDriverListener Use Actions class method.  ## Expected behavior  Actions class method should work with no exception  ## Test script or set of commands reproducing this issue  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.interactions.Actions; import org.openqa.selenium.support.events.EventFiringDecorator; import org.openqa.selenium.support.events.WebDriverListener; import org.testng.annotations.Test;  import com.utilities.testng.driver.EventListner;  public class DemoTest2 {  	@Test 	public void demo() throws Exception { 		System.setProperty(""webdriver.chrome.driver"", 				""chromedriver.exe""); 		WebDriver driver = new ChromeDriver(); 		WebDriverListener evtListener = new EventListner(); 		WebDriver instance = new EventFiringDecorator(evtListener).decorate(driver);  		instance.get(""https://www.browserstack.com/""); 		Actions action = new Actions(instance); 		WebElement element = instance.findElement(By.linkText(""Get started free"")); 		action.click(element).perform(); 		Thread.sleep(10000); 		driver.close(); 	} }  ## Exception Trace  org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PF236H45', ip: '192.168.68.63', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [8da30166233e9c8b4ccc13ad019e6eb5, actions {actions=[org.openqa.selenium.interactions.Sequence@2b06681c]}] Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 92.0.4515.159, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: C:\Users\depatel\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50969}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50969/devtoo..., se:cdpVersion: 92.0.4515.159, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: accept and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 8da30166233e9c8b4ccc13ad019e6eb5 	at org.openqa.selenium.json.SimplePropertyDescriptor.lambda$getPropertyDescriptors$1(SimplePropertyDescriptor.java:107) 	at org.openqa.selenium.json.JsonOutput.mapObject(JsonOutput.java:392) 	at org.openqa.selenium.json.JsonOutput.lambda$new$31(JsonOutput.java:207) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.mapObject(JsonOutput.java:395) 	at org.openqa.selenium.json.JsonOutput.lambda$new$31(JsonOutput.java:207) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) 	at java.base/java.util.HashMap.forEach(HashMap.java:1425) 	at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) 	at java.base/java.util.LinkedList$LLSpliterator.forEachRemaining(LinkedList.java:1242) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) 	at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) 	at java.base/java.util.HashMap.forEach(HashMap.java:1425) 	at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:360) 	at org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:154) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) 	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) 	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133) 	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) 	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) 	at org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) 	at com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:66) 	at org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) 	at org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278) 	at org.openqa.selenium.json.Json.toJson(Json.java:42) 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:253) 	at org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:162) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:137) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:612) 	at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:680) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:228) 	at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:287) 	at jdk.proxy2/jdk.proxy2.$Proxy34.perform(Unknown Source) 	at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:617) 	at org.openqa.selenium.interactions.Actions.perform(Actions.java:573) 	at DemoTest3.demo(DemoTest3.java:22) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332) 	at org.testng.SuiteRunner.run(SuiteRunner.java:276) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1134) 	at org.testng.TestNG.runSuites(TestNG.java:1063) 	at org.testng.TestNG.run(TestNG.java:1031) 	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115) 	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251) 	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77) 	Suppressed: org.openqa.selenium.json.JsonException: Attempting to close incomplete json stream Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PF236H45', ip: '192.168.68.63', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: driver.version: RemoteWebDriver 		at org.openqa.selenium.json.JsonOutput.close(JsonOutput.java:303) 		at org.openqa.selenium.json.Json.toJson(Json.java:40) 		... 46 more Caused by: java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.openqa.selenium.json.SimplePropertyDescriptor.lambda$getPropertyDescriptors$1(SimplePropertyDescriptor.java:105) 	... 94 more Caused by: org.openqa.selenium.WebDriverException: unknown error: network connection must be enabled   (Session info: chrome=92.0.4515.159) Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'PF236H45', ip: '192.168.68.63', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.1' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [8da30166233e9c8b4ccc13ad019e6eb5, getNetworkConnection {}] Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 92.0.4515.159, chrome: {chromedriverVersion: 92.0.4515.107 (87a818b10553..., userDataDir: C:\Users\depatel\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:50969}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50969/devtoo..., se:cdpVersion: 92.0.4515.159, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: accept and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 8da30166233e9c8b4ccc13ad019e6eb5 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:162) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:137) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:612) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:667) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:671) 	at org.openqa.selenium.remote.RemoteExecuteMethod.execute(RemoteExecuteMethod.java:36) 	at org.openqa.selenium.remote.mobile.RemoteNetworkConnection.getNetworkConnection(RemoteNetworkConnection.java:38) 	at org.openqa.selenium.chromium.ChromiumDriver.getNetworkConnection(ChromiumDriver.java:184) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:228) 	at org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:287) 	at jdk.proxy2/jdk.proxy2.$Proxy34.getNetworkConnection(Unknown Source) 	... 99 more  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 92.0.4515.159 Browser Driver version: 92.0.4515.107","closed","needs-triaging,","deeppatel2","2021-08-27T19:12:52Z","2021-10-09T00:05:38Z"
"","9522","Java script executor fails to accept webelement when decorated with EventFiringDecorator","## üêõ Bug Report  When we register a WebDriverListener implementation with EventFiringDecorator the JavascriptExecutor.executeScript breaks and fails to accept the decorated web element passed in callback function.   ## To Reproduce  Add a class which implements WebDriverListener and override afterFindElement ``` @Override     public void afterFindElement(WebDriver driver, By locator, WebElement result) {         ((JavascriptExecutor)driver).executeScript(""arguments[0].setAttribute('style','background: yellow; border: 2px solid red;')"", result);     } ```  Now invoke the find element method like below for instance ``` WebDriver decorated = new EventFiringDecorator(new WebDriverDecorator(web)).decorate(web);         decorated.get(""https://www.google.com/"");         decorated.findElement(By.name(""q"")); ```  On executing below exception is thrown ``` java.lang.reflect.InvocationTargetException 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.openqa.selenium.support.events.EventFiringDecorator.callListenerMethod(EventFiringDecorator.java:311) 	at org.openqa.selenium.support.events.EventFiringDecorator.fireAfterEvents(EventFiringDecorator.java:252) 	at org.openqa.selenium.support.events.EventFiringDecorator.lambda$afterCall$1(EventFiringDecorator.java:177) 	at java.base/java.util.Arrays$ArrayList.forEach(Arrays.java:4390) 	at org.openqa.selenium.support.events.EventFiringDecorator.afterCall(EventFiringDecorator.java:177) 	at org.openqa.selenium.support.decorators.DefaultDecorated.afterCall(DefaultDecorated.java:53) 	at org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:288) 	at com.sun.proxy.$Proxy6.findElement(Unknown Source) 	at decorator.EnhancedWebDriver2.main(EnhancedWebDriver2.java:27) Caused by: java.lang.IllegalArgumentException: Argument is of an illegal type: com.sun.proxy.$Proxy7 	at org.openqa.selenium.remote.internal.WebElementToJsonConverter.apply(WebElementToJsonConverter.java:85) 	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) 	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948) 	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) 	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) 	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) 	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) 	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:550) 	at decorator.WebDriverDecorator.afterFindElement(WebDriverDecorator.java:13) 	... 13 more   Process finished with exit code 0  ```  ## Expected behavior Javascript executor should work even with a decorated object.  ## Environment  OS: OSX Browser: Chrome Browser version: 90.0.4430.212 Browser Driver version: ChromeDriver 90.0.4430.24 Language Bindings version: Java 11 Selenium - 4.0.0-beta-3","closed","","shroffsagar","2021-05-27T19:53:53Z","2021-09-05T08:03:16Z"
"","9275","OPERA & EDGE desired capabilities no longer working in Python","## üêõ Bug Report  When using the `selenium.webdriver.common.desired_capabilities.OPERA` or `selenium.webdriver.common.desired_capabilities.EDGE` capability (constant) together with the official Selenium Docker images, you'll end up in a `KeyError: 'value'` exception!    ## To Reproduce    1. Start Selenium Grid via Docker  2. Run Selenium tests via Python bindings 3. Use `selenium.webdriver.common.desired_capabilities.OPERA` or `selenium.webdriver.common.desired_capabilities.EDGE`  ## Expected behavior  The code should work and shouldn't end up in an exception like this:  ``` Traceback (most recent call last):   File ""/tmp/selenium-error/tests/test.py"", line 52, in      driver = Remote(desired_capabilities=DesiredCapabilities.OPERA)   File ""/tmp/selenium-error/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/tmp/selenium-error/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/tmp/selenium-error/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/tmp/selenium-error/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py"", line 127, in check_response     value = value['value'] ```  ## Test script or set of commands reproducing this issue  Docker Compose:  ```yaml --- version: '3.8'  services:    chrome:     image: selenium/node-chrome:4.0.0-beta-2-prerelease-20210312     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - '5901:5900'    firefox:     image: selenium/node-firefox:4.0.0-beta-2-prerelease-20210312     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - '5902:5900'    edge:     image: selenium/node-edge:4.0.0-beta-2-prerelease-20210312     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - '5903:5900'    opera:     image: selenium/node-opera:4.0.0-beta-2-prerelease-20210312     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - '5904:5900'    selenium-hub:     image: selenium/hub:4.0.0-beta-2-prerelease-20210312     container_name: selenium-hub     ports:       - '4442:4442'       - '4443:4443'       - '4444:4444' ```  Python Script:  ```python from selenium.webdriver import Remote from selenium.webdriver.common.desired_capabilities import DesiredCapabilities   driver = Remote(desired_capabilities=DesiredCapabilities.OPERA) driver.get('https://www.selenium.dev/') driver.close() ```  ## Environment  OS: Mac OS X.15 Browser: Edge / Opera Browser version: `selenium/node-edge:4.0.0-beta-2-prerelease-20210312` Browser Driver version: `selenium/node-edge:4.0.0-beta-2-prerelease-20210312` Language Bindings version: Python `selenium==3.141.0` Selenium Grid version (if applicable): `selenium/hub:4.0.0-beta-2-prerelease-20210312`","closed","C-py,","domibarton","2021-03-13T00:27:01Z","2021-09-05T08:12:17Z"
"","9447","Delays cause IE11 not to perform actions","## üêõ Bug Report  When using Selenium `4.0.0-beta.3` (Also tried `3.141.0` on Python) with IE11 if there are any delays (due to network, CPU hangs, IEDriverServer taking a bit to load, etc) it causes actions like navigating to a webpage, clicking, etc to not work and Selenium and IEDriverServer reports nothing out of the ordinary in the logs that I can see.  I noticed the issue when working with NodeJS but I have also written something in Python and see the same exact behavior.  **Clicking** issue is very easy to reproduce, however, the **navigation** issue (Where if IEDriverServer takes too long to load Selenium will not navigate to your page) is a bit more difficult to reproduce but what happens is that Internet Explorer will load up and wait for `http://localhost:4444` (IEDriverServer address/port) to load and if it takes a while you will get stuck on `This is the initial start page for the WebDriver server.` and not navigate to your start page and you see no exceptions and rest of the steps will try to execute anyways.  ## To Reproduce  I'm using breakpoints to introduce artificial delays as sleeping doesn't reproduce the issue as much.  I have run into this issue just letting tests run all day without interference from me and ran into one of these issues 40 to 50% of the time.  (Without breakpointing or introducing any artificial delays)  Configure a windows machine with IEDriverServer.exe that has IE11 on it.  You can run this example script in Python in VSCode (Make sure you have Python tools installed in VSCode) and put a breakpoint at the `button[0].click()` line to reproduce the issue.  The Google Search button will highlight but not actually click, but if you put a breakpoint and do the click twice, it works when you breakpoint (as one click), but if you don't breakpoint it'll click twice.  **NOTE:** You may have to do this a few times to reproduce it.  On some occasions it does work on Python even when you breakpoint, but on NodeJS the issue happens a lot more.  ``` from selenium import webdriver import time  desired_capabilities = {} desired_capabilities['platform'] = 'windows' desired_capabilities['browserName'] = 'internet explorer' desired_capabilities['version'] = '11'  host = '127.0.0.1' port = '4444'  driver = webdriver.Ie(executable_path=""C:\drivers\IEDriverserver.exe"")  driver.get('http://google.com') time.sleep(2) searchbox = element = driver.find_elements_by_name(""q"") button = driver.find_elements_by_name(""btnK"") searchbox[0].send_keys(""test"") time.sleep(2) button[0].click() # Breakpoint *only* here to cause the issue more consistently, remove the breakpoint to let selenium click normally. # button[0].click() # Even if you uncomment and breakpoint on both clicks click *may* work on the second try. # Lets not exit the script so we can see the issue. time.sleep(60) ```  ## Environment  OS: Windows 10 / Windows Server 2019 (Both have the same issue) Browser: Internet Explorer Browser version: 11 Browser Driver version: 3.150.1 (32 bit) Language Bindings version: Python, NodeJS 4.0.0-beta.3 Selenium Grid version (if applicable): N/A  ## Issue example  Here is an example, if I removed the breakpoint everything works and you get search results for ""test"".  **Notice how the ""Google Search"" button highlights but doesn't actually click.  ![selenium_click_issue](https://user-images.githubusercontent.com/73846594/117156624-e345e480-ad8b-11eb-9f07-d2b6b7463cb5.gif)","closed","D-IE,","dd-mozdemir","2021-05-05T14:27:17Z","2022-01-26T00:09:55Z"
"","9517","Selenium IEDriver loses window handles with IE Mode for Chromium Edge","## üêõ Bug Report  When using IEDriverServer.exe with C# to launch MS Edge in IE Mode, after clicking on a button in my application which closes the current window and opens a new window, I noticed that when we tried get driver.windowhandles.count it is returning always 0.  ## To Reproduce  Detailed steps to reproduce the behavior:  I have used the following code to open MS Edge in IE Mode.  > var ieService = InternetExplorerDriverService.CreateDefaultService(requiredDirPath, iedriverexefilename); > var ieOptions = new InternetExplorerOptions(); > ieOptions.AddAdditionalCapability(""ie.edgechromium"", true); > ieOptions.AddAdditionalCapability(""ie.edgepath"", @""C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe"");  > driver  = new InternetExplorerDriver(ieService, ieOptions, TimeSpan.FromSeconds(30));  > driver = new InternetExplorerDriver(); > driver.Navigate().GoToUrl(APP_URL); >driver.FindElement(By.XPath(""//input[@DIKey='txtUserName']"")).SendKeys(strUsername); >driver.FindElement(By.XPath(""//input[@DIKey='txtPassword']"")).SendKeys(strPassword); > IJavaScriptExecutor jse1 = (IJavaScriptExecutor)driver; > jse1.ExecuteScript(""arguments[0].scrollIntoView();"", driver.FindElement(By.Id(""ic_C_C8""))); > jse1.ExecuteScript(""arguments[0].click();"", driver.FindElement(By.Id(""ic_C_C8""))); > System.Threading.Thread.Sleep(2000); > int count = driver.WindowHandles.Count;   ## Expected behavior  > driver.WindowHandles.Count always returns '0' after login button is clicked  ## Test script or set of commands reproducing this issue  I have attached the page source code. After clicking on login button, the page is submitted using javascript ""document.Logon.Submit();"" which closes the login window and opens a home page.  ## Environment  OS: Windows 10 2019 (version 1909) Browser: MS Chromium Edge  Browser version: 88.0.705.74 Browser Driver version: IEDriverServer.exe 3.150.1.0 Language Bindings version: C#   [HTMLContent_LogonPage.txt](https://github.com/SeleniumHQ/selenium/files/6548461/HTMLContent_LogonPage.txt)","closed","","csharsha","2021-05-26T16:59:18Z","2021-09-05T08:03:15Z"
"","9104","Using JRuby, stopping the chromedriver service hangs indefinitely if the chromedriver process has died","## üêõ Bug Report  When using chromedriver, issuing a `quit` command hangs indefinitely if the chromedriver process has died.  ## To Reproduce  Start selenium webdriver, kill chromedriver, issue quit command.  ## Expected behavior  `driver.quit` to either return or raise an error within some time limit (e.g. net read timeout)  ## Test script or set of commands reproducing this issue  ```rb # 1. Instantiate the driver, which starts a chromedriver (which starts a chrome): driver = Selenium::WebDriver.for :chrome  # 2. find the chromedriver process id, e.g. using unix `ps`, and kill it, e.g. `kill `.  # 3. quit: driver.quit ```  ## Environment  OS: macOS Mojave 10.14.6 Browser: Chrome Browser version: Version 88.0.4324.96 (Official Build) (x86_64) Browser Driver version: ChromeDriver 88.0.4324.96 (68dba2d8a0b149a1d3afac56fa74648032bcf46b-refs/branch-heads/4324@{#1784}) Language Bindings version: Ruby gem 'selenium-webdriver', 3.142.7 Selenium Grid version (if applicable): N/A","closed","D-chrome,","bblack","2021-01-26T16:43:32Z","2021-09-05T08:19:08Z"
"","9473","Click Issue in Selenium with Safari Driver (Reproducable)","## üêõ Bug Report  When the Selenium do `Click()` command, with `SafariDriver()`. There is some chance that `Click()` is executed But it actually doesn't click on the element in webpage. And no error throw about that click event.  Result in test failed, because the button not actually get clicked.  This will happen if the running machine has other click event (on any other application, not Safari) at the same time when Selenium try to execute `Click()`    ## To Reproduce    Detailed steps to reproduce the behavior: 1. Write any Selenium `Click()` event. And expected behavior 2. Run the test 3. Keep double click anywhere (desktop) 4. The test will failed, got unexpected behavior.  ## Expected behavior The Selenium `Click()` should execute the click even if there is user interaction on that machine.  ## Test script or set of commands reproducing this issue ### C# Selenium ```         [Test]         public void SafariTestClick()         {             var textShow = true;             while (textShow)             {                 IWebDriver _driver = new SafariDriver(); //initialize the driver                 _driver.Navigate().GoToUrl(""http://localhost:1234"");                 var wait = new WebDriverWait(_driver, TimeSpan.FromSeconds(10));                 wait.Until(driver => driver.FindElement(By.XPath("".//*[@id='mybutton']"")).Displayed);                 _driver.FindElement(By.XPath("".//*[@id='mybutton']"")).Click();                 textShow = _driver.FindElement(By.XPath("".//*[@id='mytext']"")).Text == ""test"";                 _driver.Close(); // close the browser                 _driver.Quit(); // close the browser             }                          Console.WriteLine(""Safari Driver Bug"");         } ```  ### Website run it with  `python -m http.server 1234`  ```               Test Button                ```  ## Environment  OS: Mac OS Big Sur 11.2.3 Browser: Safari  Browser version: 14.0.3 (16610.4.3.1.7) Browser Driver version: 14.0.3 (16610.4.3.1.7)  This might related to https://github.com/SeleniumHQ/selenium/issues/8011 https://github.com/SeleniumHQ/selenium/issues/8001 https://github.com/SeleniumHQ/selenium/issues/7649 https://github.com/SeleniumHQ/selenium/issues/7324 https://github.com/SeleniumHQ/selenium/issues/7206","closed","","chaintng","2021-05-13T11:57:08Z","2021-09-05T08:03:27Z"
"","9724","Grid 4: RemoteWebDriver fails to generate new session","## üêõ Bug Report  When the RemoteWebDriver is instantiated, no new session is generated, apparently due to the fact that the session request sent by the class includes an ""Expect"" header.  If I send a curl request that omits this ""Expect"" header, the new session is created/queued as expected.   ## To Reproduce  Send a request with this content. Curl command below.  ```` POST http://server:4444/session HTTP/1.1 Accept: application/json; charset=utf-8 User-Agent: selenium/4.0.0 (.net windows) Content-Type: application/json; charset=utf-8 Host: server:4444 Content-Length: 160 Expect: 100-continue Connection: Keep-Alive  {""capabilities"":{""firstMatch"":[{""browserName"":""internet explorer"",""platformName"":""WINDOWS"",""se:ieOptions"":{""nativeEvents"":true,""enablePersistentHover"":true}}]}} ````  Curl command:   ```` curl -X POST -d @in.json -H ""Accept: application/json; charset=utf-8"" -H ""User-Agent: selenium/4.0.0 (.net windows)"" -H ""Content-Type: application/json; charset=utf-8"" -H ""Expect: 100-continue"" http://server:4444/session ````  ## Expected behavior  New session creation should be successful.  ## Environment  OS: Windows 10 Language Bindings version: C# (dotnet)  Selenium Grid version (if applicable): 4.0.0-beta4","closed","C-dotnet,","ccarmannt","2021-08-06T16:06:32Z","2022-02-07T00:07:16Z"
"","9808","When Excel is Data Driven and the Platform target is 'Any CPU', error is displayed","## üêõ Bug Report  When the Excel is Data Driven and Platform target is 'Any CPU' and installed is 'accessdatabaseengine_X64.exe', error is displayed but when the 'x64' is chosen, the error is not displayed here the performance is degraded  ## Expected behavior  Error should not be displayed and performance should be as expected as 'x86'  ## Environment  OS:  Windows 10 Browser: N/A Visual Studio version: Version 16.11.2 Excel version: 2018 Selenium version (if applicable): 4.0.0-rc1  Regards, Vadivel Sekar  ![DataDriven_Build_Platform_Target](https://user-images.githubusercontent.com/85741928/132625000-06843ca1-d786-4ec0-bb14-3b960987b80e.png)  ![DataDriven_Build_Platform_Target_1](https://user-images.githubusercontent.com/85741928/132625003-584b3da9-a218-4f50-b284-b371c218199b.png)  ![DataDriven_Build_Platform_Target_2](https://user-images.githubusercontent.com/85741928/132625004-c38001cf-5ebe-492a-a8b9-05a3c9befc0e.png)","closed","","svadivel0006","2021-09-09T05:06:48Z","2021-10-10T00:06:22Z"
"","9807","When the '.xlsb' file is being data driven, an additional empty row is being executed-Selenium-C#-V 4.0.0-rc1","## üêõ Bug Report  When the '.xlsb' file is being data driven/read, an additional empty row is being executed or stored-Selenium-C#-V 4.0.0-rc1  ## Expected behavior  The extra/empty row should not executed or read  ## Environment  OS:  Windows 10  Excel version: 2018 Selenium version (if applicable): 4.0.0-rc1  Regards, Vadivel Sekar  ![Excel_DataDriven_xlsb_Issue](https://user-images.githubusercontent.com/85741928/132618638-45a071fb-2b8e-40f9-bce7-4c1ff5bc0ad8.png)  ![Excel_DataDriven_xlsx_Ref](https://user-images.githubusercontent.com/85741928/132618639-6c1adc07-feef-4b6d-b3a1-ccfa44236d56.png)","closed","","svadivel0006","2021-09-09T05:06:42Z","2021-10-10T00:06:23Z"
"","9712","Selenium Grid 4: No parameter for defining hub for nodes to register with","## üêõ Bug Report  When starting the grid in hub and node mode, there appears to be no way to specify the hub address for registration.  ## To Reproduce  java -jar selenium-server-4.0.0-beta-2.jar node --config \RCT\GridConfig\node.toml  ## Expected behavior  There should be a command-line option and a toml parameter for specifying the address of the hub.  ## Environment  OS: Windows 10 Selenium Grid version (if applicable): 4.0.0-beta-2","closed","","ccarmannt","2021-08-03T17:41:36Z","2021-09-05T07:50:04Z"
"","9126","Not possible to specify client readTimeout via standalone jar","## üêõ Bug Report  When starting Selenium via the `java -jar /path/to/jar standalone` approach, it is not possible to specify a read timeout.  I see that commits 8be1107124d1851e7185a17e2b1ce71e27e7bf2e and 46d3642954a3ca35151ca91077bb61804b98b735 have recently been added to allow configuration of the `readTimeout` via `clientConfig`, but this does not seem to be configurable via any documented configuration option.  ## To Reproduce  ``` java -jar bazel-bin/java/server/src/org/openqa/selenium/grid/selenium_server_deploy.jar standalone --config-help ```  ## Expected behavior  A documented way to set `clientConfig.readTimeout`  ## Test script or set of commands reproducing this issue  Reproduction available in https://github.com/andrewnicols/selenium-bugs-timeout  ## Environment  OS: Mac OSX 11.1 Browser: N/A, but tested with Chrome Browser version: Chrome 88.0 Browser Driver version: Chromedriver 88.0.4324.96 Language Bindings version: N/A but using php-webdriver/webdriver Selenium Grid version (if applicable): trunk @ 65b253662f15c433e447ab24b461f9def1bbf6e4","closed","needs-triaging,","andrewnicols","2021-02-01T04:19:19Z","2021-09-05T08:21:31Z"
"","9526","Vulnerability: Selenium Node Remote Code Execution (Firefox/geckodriver)","## üêõ Bug Report  When Selenium runs, it creates a custom profile (in /tmp/ for Linux) on the Node. This profile then gets overwritten by a possible overlay that is sent in a base64 encoded zip file when a Selenium session is started.  One of the config file can be used to set a custom handler (which do things like, for instance, associates ‚Äúmailto:blah@blah.com‚Äù to your email client). In this example, a new handler is created for ‚Äúapplication/sh‚Äù that will execute the argument with ‚Äú/bin/sh‚Äù  The Payload is encoded and embedded as inline data associated with the ""application/sh"" mime type.  ## To Reproduce  See POC Code: https://github.com/JonStratton/selenium-node-takeover-kit/blob/master/examples/selenium_node_rce.rb  ## Expected behavior  Maybe have this as a featured turned off by default  ## Test script or set of commands reproducing this issue  See POC Code: https://github.com/JonStratton/selenium-node-takeover-kit/blob/master/examples/selenium_node_rce.rb  ## Environment  OS: Linux Browser: Firefox Browser version: All it seems Browser Driver version: GekoDriver Language Bindings version: Ruby Selenium Grid version (if applicable): 3.141.59","closed","","JonStratton","2021-05-28T00:03:49Z","2021-09-05T07:59:13Z"
"","9222","ResourceWarning: unclosed socket upon driver crashes","## üêõ Bug Report  When running tests in parallel with `pytest-xdist` Chromium webdriver creation occasionally crashes or holds up a thread indefinitely for varying reasons:  ``` E                 File "".../selenium-test/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response E                   raise exception_class(message, screen, stacktrace) E               selenium.common.exceptions.SessionNotCreatedException: Message: session not created E               from disconnected: Unable to receive message from renderer E                 (Session info: headless chrome=88.0.4324.182) ``` ``` E                 File "".../selenium-test/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response E                   raise exception_class(message, screen, stacktrace) E               selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: crashed. E                 (unknown error: DevToolsActivePort file doesn't exist) E                 (The process started from chrome location /snap/chromium/1497/usr/lib/chromium-browser/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) ```  I've been trying to work around it by just re-trying the creation, however, I'm also getting unclosed socket warnings every time there is a crash:  ``` E               During handling of the above exception, another exception occurred: E E               Traceback (most recent call last): E                 File """", line 580, in _compile_bytecode E               ResourceWarning: unclosed  ```  ## To Reproduce  Create a `pytest` test case file called `test_case.py`:  ```python from pytest import fixture, mark from selenium import webdriver   @fixture def browser():     options = webdriver.ChromeOptions()     options.add_argument('--headless')     options.add_argument(f'--window-size=1000,500')     driver = webdriver.Chrome(executable_path='/snap/bin/chromium.chromedriver', options=options)     yield driver     driver.close()   @mark.parametrize('index', list(range(50))) def test_create(browser, index):     print(browser) ```  Install the following requirements into a virtual environment: ``` pytest~=6.2.2 pytest-xdist[psutil]~=2.2.1 selenium~=3.141.0 ```  Add the following to `pyproject.toml`: ``` [tool.pytest.ini_options] filterwarnings = ['error'] ```  Run `pytest -n 8` a few times. Note that the errors appear only occasionally (in only a few percent of the cases), therefore you may need to change the number of parallel test runs (`-n 8`) or the number of tests (`list(range(50))`) to see it appear.  ## Expected behavior  A Chromium webdriver is created correctly 100% of the times, or, at least there is no unclosed socket warnings on failed webdriver creation.  ## Environment  OS: Ubuntu 20.04 Browser: Chromium Browser version: 88.0.4324.182 (installed via snap) Browser Driver version: chromium.chromedriver 88.0.4324.182 Language Bindings version: Python 3.141.0","closed","C-py,","GergelyKalmar","2021-02-28T18:38:43Z","2021-09-05T08:15:41Z"
"","9629","Installing selenium-webdriver/edge doesn't go through proxy and fail.","## üêõ Bug Report  When running `npm install selenium-webdriver/edge --save` it tries to access GitHub without proxy and eventually fails if the WLAN can only be accessed through proxy.  ## To Reproduce  Being in a network environment that can only access WLAN through proxy. Having `HTTP_PROXY` and `HTTPS_PROXY` env set, having proxy and https_proxy configured in `.npmrc` , and having proxy set in OS setting. Try to run `npm install selenium-webdriver/edge --save` .  ## Expected behavior  The package is installed through the proxy.   ## Actual behavior  npm quit with error:  ``` ‚ÄâWARN‚Äâ HEAD https://github.com/selenium-webdriver/edge error (ETIMEDOUT). Will retry in 10 milliseconds. 5 retries left. ‚ÄâWARN‚Äâ HEAD https://github.com/selenium-webdriver/edge error (ETIMEDOUT). Will retry in 60 milliseconds. 4 retries left. ‚ÄâERROR‚Äâ Command failed with exit code 128: git ls-remote git+ssh://git@github.com/selenium-webdriver/edge.git HEAD ERROR: Repository not found. fatal: Could not read from remote repository.  Please make sure you have the correct access rights and the repository exists. ```  By looking at the proxy log it seems that GitHub is not accessed through the proxy.  ## Test script or set of commands reproducing this issue  Just a single command.  ## Environment  OS: macOS Big Sur 11.3 Browser: I can't even install the package. Browser version: I can't even install the package. Browser Driver version: I can't even install the package. Language Bindings version: I can't even install the package. Selenium Grid version (if applicable): I can't even install the package.","closed","needs-triaging,","Jason5Lee","2021-07-04T01:57:33Z","2021-09-05T07:59:02Z"
"","9343","Safari on iOS returns different element IDs for the same element","## üêõ Bug Report  When requesting for Element Id using `driver.FindElement(By.Id(""body""))` (for example) several times consecutively on the same page, different IDs are returned, so when trying to use the first one it doesn't exist anymore and the test fails.  The BrowserStack Raw Logs:  ``` 2021-3-29 7:34:27:592 REQUEST [2021-3-29 7:34:27:592] POST /session {""desiredCapabilities"":{""browserName"":""safari"",""device"":""iPhone X"",""platformVersion"":""11.2"",""real_mobile"":true,""browserstack.appium_version"":""1.16.0"",""browserstack.local"":false,""platformName"":""iOS"",""acceptSslCert"":false,""detected_language"":""selenium/3.141.0 (.net windows)"",""new_bucketing"":true,""wda_port"":8404}} 2021-3-29 7:34:27:592 START_SESSION  2021-3-29 7:34:27:592 REQUEST [2021-3-29 7:34:27:592] GET /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e 2021-3-29 7:34:27:592 RESPONSE {""value"":{""webStorageEnabled"":false,""locationContextEnabled"":false,""browserName"":""safari"",""platform"":""MAC"",""javascriptEnabled"":true,""databaseEnabled"":false,""takesScreenshot"":true,""networkConnectionEnabled"":false,""useXctestrunFile"":true,""bootstrapPath"":""/usr/local/.browserstack/config/wda_derived_data_35d0a390f64b1f7153a84759334a06a0f54552b7_1.16.0/Build/Products"",""orientation"":""PORTRAIT"",""browserstack.isTargetBased"":""false"",""newCommandTimeout"":0,""udid"":""35d0a390f64b1f7153a84759334a06a0f54552b7"",""device"":""iphone"",""real_mobile"":true,""platformName"":""iOS"",""browserstack.is_hub_canary"":""false"",""acceptSslCert"":false,""detected_language"":""selenium/3.141.0 (.net windows)"",""new_bucketing"":true,""browser"":""iphone"",""browser_name"":""safari"",""deviceName"":""iPhone X"",""os_version"":""11.2"",""version"":"""",""mobile"":{""browser"":""mobile"",""version"":""iPhone X-11.2""},""orig_os"":""ios"",""64bit"":false,""automationName"":""XCUITest"",""safariInitialUrl"":""http://mobile-internet-check.browserstack.com"",""webkitResponseTimeout"":20000,""deviceOrientation"":""PORTRAIT"",""browserstack.appium_version"":""1.16.0"",""realMobile"":""true"",""acceptSslCerts"":false,""safariIgnoreFraudWarning"":true,""noReset"":true,""wda_port"":8404},""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""status"":0} 2021-3-29 7:34:29:43 REQUEST [2021-3-29 7:34:29:43] POST /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/url {""url"":""data:text/html,Hello, world!""} 2021-3-29 7:34:30:715 RESPONSE {""value"":null,""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""status"":0} 2021-3-29 7:34:31:873 REQUEST [2021-3-29 7:34:31:873] POST /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/element {""using"":""tag name"",""value"":""html""} 2021-3-29 7:34:31:964 RESPONSE {""value"":{""element-6066-11e4-a52e-4f735466cecf"":""5000"",""ELEMENT"":""5000""},""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""status"":0} 2021-3-29 7:34:33:258 REQUEST [2021-3-29 7:34:33:258] POST /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/element {""using"":""tag name"",""value"":""body""} 2021-3-29 7:34:33:334 RESPONSE {""value"":{""element-6066-11e4-a52e-4f735466cecf"":""5001"",""ELEMENT"":""5001""},""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""status"":0} 2021-3-29 7:34:33:620 REQUEST [2021-3-29 7:34:33:620] POST /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/element {""using"":""tag name"",""value"":""html""} 2021-3-29 7:34:33:687 RESPONSE {""value"":{""element-6066-11e4-a52e-4f735466cecf"":""5002"",""ELEMENT"":""5002""},""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""status"":0} 2021-3-29 7:34:33:967 REQUEST [2021-3-29 7:34:33:967] POST /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/element {""using"":""tag name"",""value"":""body""} 2021-3-29 7:34:34:34 RESPONSE {""value"":{""element-6066-11e4-a52e-4f735466cecf"":""5003"",""ELEMENT"":""5003""},""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""status"":0} 2021-3-29 7:34:35:420 REQUEST [2021-3-29 7:34:35:420] GET /session/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/element/5000/equals/5002 {} 2021-3-29 7:34:35:530 RESPONSE {""status"":405,""value"":{""message"":""Method has not yet been implemented"",""screen"":""https://s3.amazonaws.com/testautomation/65b5607ded635c9423b2c6be2f593cbbb6b5f53e/screenshot-7f3da3f59e.jpeg""},""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e""} 2021-3-29 7:34:39:32 STOP_SESSION {""status"":0,""sessionId"":""65b5607ded635c9423b2c6be2f593cbbb6b5f53e"",""value"":{""message"":""CLIENT_STOPPED_SESSION""},""errorStack"":{}} ```   ## To Reproduce  ```c-sharp using System; using NUnit.Framework; using OpenQA.Selenium; using OpenQA.Selenium.Appium; using OpenQA.Selenium.Appium.iOS; using OpenQA.Selenium.Safari;  namespace BrowserStackTests {     public class SafariDriverTest     {         [Test]         public void GetSameElementTwice()         {             SafariOptions options = new SafariOptions();              options.AddAdditionalCapability(""device"", ""iPhone X"");             options.AddAdditionalCapability(""platformVersion"", ""11.2"");             options.AddAdditionalCapability(""real_mobile"", ""true"");             options.AddAdditionalCapability(""browserstack.appium_version"", ""1.16.0"");             options.AddAdditionalCapability(""browserstack.local"", ""false"");             options.AddAdditionalCapability(""browserstack.user"", Environment.GetEnvironmentVariable(""BROWSERSTACK_USERNAME""));             options.AddAdditionalCapability(""browserstack.key"", Environment.GetEnvironmentVariable(""BROWSERSTACK_ACCESS_KEY""));              string remoteUri = ""https://hub-cloud.browserstack.com/wd/hub/"";             IWebDriver driver = new IOSDriver(new Uri(remoteUri), options, TimeSpan.FromMinutes(90));             driver.Url = ""data:text/html,Hello, world!"";             try             {                 var html1 = driver.FindElement(By.TagName(""html""));                 var body1 = driver.FindElement(By.TagName(""body""));                  var html2 = driver.FindElement(By.TagName(""html""));                 var body2 = driver.FindElement(By.TagName(""body""));                  Assert.AreEqual(html1, html2);                 Assert.AreEqual(body1, body2);             }             finally             {                 driver.Quit();             }         }     } }  ```  ## Expected behavior  I expect the driver to return the same IDs for the same elements.  ## Environment  OS: iOS Browser: Safari Browser version: 11.2 Browser Driver version: ran on BrowserStack Language Bindings version: .NET Selenium 3.141.0 Selenium Grid version (if applicable): I know the same things happens on Selenium Grid also, but I don't have the exact version.","closed","","itaibh","2021-03-29T07:41:38Z","2021-09-05T08:10:29Z"
"","9835","driver.quit() takes 6-10 seconds when handling SIGINT","## üêõ Bug Report  When python is handling a SIGINT as an exception, `driver.quit()` takes 6-10 times (6-10 seconds vs. ~1 second) to run.   ## To Reproduce  ```python #!/usr/bin/env python3  import time import signal import datetime import cProfile import pstats import io import sys  import selenium.webdriver  from selenium.webdriver.firefox.options import Options   p = cProfile.Profile()  geckodriver_path = TODO  opts = Options() opts.log.level = ""trace""  driver = selenium.webdriver.Firefox\     ( executable_path=geckodriver_path     , options=opts     )  def log(s):     print\         ( ""{}: {}"".format(datetime.datetime.now().isoformat("" "", ""seconds""), s)         , file=sys.stderr         )  def log_stats():     s = io.StringIO()     #sb = pstats.SortKey.CUMULATIVE     sb = pstats.SortKey.TIME     ps = pstats.Stats(p, stream=s).sort_stats(sb)     #ps.print_stats(0.1)     ps.print_stats()     print(s.getvalue())  try:     log(""Hello"")     time.sleep(2)     log(""Goodbye"")     #raise KeyboardInterrupt except:     log(""caught exception, reraising"")     raise finally:     #log(signal.getsignal(signal.SIGINT))     log(""driver quiting"")     p.enable()     driver.quit()     p.disable()     log(""driver quit"")     log_stats() ```  Detailed steps to reproduce the behavior:  1. Run the profiling program above normally. Note the time as `t1` - on my system about 1 second. 2. Run the same program and press `Control-C` between ""Hello"" and ""Goodbye"". Note the time as `t2` - on my system usually 6 seconds, sometimes more.  `t1`  ```          1121 function calls (1120 primitive calls) in 1.114 seconds     Ordered by: cumulative time     ncalls  tottime  percall  cumtime  percall filename:lineno(function)         1    0.000    0.000    1.114    1.114 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/firefox/webdriver.py:200(quit)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:690(quit)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:301(execute)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py:355(execute)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py:376(_request)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/request.py:58(request)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/request.py:82(request_encode_url)         1    0.000    0.000    1.088    1.088 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/poolmanager.py:352(urlopen)         1    0.000    0.000    1.087    1.087 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connectionpool.py:518(urlopen)         1    0.000    0.000    1.086    1.086 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connectionpool.py:357(_make_request)         1    0.000    0.000    1.085    1.085 /usr/lib/python3.8/http/client.py:1300(getresponse)         1    0.000    0.000    1.085    1.085 /usr/lib/python3.8/http/client.py:300(begin)         1    0.000    0.000    1.084    1.084 /usr/lib/python3.8/http/client.py:267(_read_status)         6    0.000    0.000    1.084    0.181 {method 'readline' of '_io.BufferedReader' objects}         1    0.000    0.000    1.084    1.084 /usr/lib/python3.8/socket.py:657(readinto)         1    1.084    1.084    1.084    1.084 {method 'recv_into' of '_socket.socket' objects}         1    0.000    0.000    0.025    0.025 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/common/service.py:137(stop) ... ```  `t2` ```          2418 function calls (2410 primitive calls) in 8.148 seconds     Ordered by: cumulative time     ncalls  tottime  percall  cumtime  percall filename:lineno(function)         1    0.000    0.000    8.148    8.148 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/firefox/webdriver.py:200(quit)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:690(quit)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:301(execute)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py:355(execute)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/selenium/webdriver/remote/remote_connection.py:376(_request)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/request.py:58(request)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/request.py:82(request_encode_url)         1    0.000    0.000    8.147    8.147 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/poolmanager.py:352(urlopen)       4/1    0.000    0.000    8.146    8.146 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connectionpool.py:518(urlopen)         4    0.000    0.000    8.142    2.035 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connectionpool.py:357(_make_request)         4    0.000    0.000    8.142    2.035 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connection.py:226(request)         4    0.000    0.000    8.141    2.035 /usr/lib/python3.8/http/client.py:1249(request)         4    0.000    0.000    8.141    2.035 /usr/lib/python3.8/http/client.py:1254(_send_request)         4    0.000    0.000    8.140    2.035 /usr/lib/python3.8/http/client.py:1236(endheaders)         4    0.000    0.000    8.140    2.035 /usr/lib/python3.8/http/client.py:998(_send_output)         4    0.000    0.000    8.140    2.035 /usr/lib/python3.8/http/client.py:939(send)         4    0.000    0.000    8.140    2.035 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connection.py:199(connect)         4    0.000    0.000    8.140    2.035 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/connection.py:156(_new_conn)         4    0.000    0.000    8.140    2.035 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/util/connection.py:38(create_connection)         4    8.138    2.034    8.138    2.034 {method 'connect' of '_socket.socket' objects}         5    0.000    0.000    0.001    0.000 .../py.3.8.venv/lib/python3.8/site-packages/urllib3/util/url.py:330(parse_url) ... ```  ## Expected behavior  I expect `driver.quit` to behave consistently regardless of a SIGINT during *other* code and handled by *other* code.  ## Test script or set of commands reproducing this issue  See above.  ## Notes  * Issue requires a SIGINT. For example, `raise KeyboardInterrupt` does not trigger the issue. See commented line #*39*. * Issues not due to SIGINT handler. Default signal handler in use - see commented line #*44*.  ## Environment  OS: Cygwin @ Windows 10 x86_64: 10.0.19043 Build 19043 Browser: Firefox Browser version: 92.0, build ID 20210903235534 Browser Driver version: GeckoDriver 0.29.1 Language Bindings version:  Python 3.141.0, Python 3.8.10 urllib3 version: 1.26.4","closed","C-py,","orbisvicis","2021-09-17T00:48:00Z","2022-07-12T14:34:41Z"
"","9032","IE looses focus when opening new window","## üêõ Bug Report  When opening a new window, closing the current window, and switching to the new window, Selenium looses the window and crashes. Error message `Message: Currently focused window has been closed`  ## To Reproduce  Click on a link that opens a new window, close current window, and switch to new window.  ## Expected behavior  Should not crash  ## Environment  OS: Windows 10 64-bit Browser: Internet Explorer Browser version: 20H2 (OS Build 19042.685) Browser Driver version: 32 and 64 bit IEDriverServer 3.150.1.0 Language Bindings version: Python 3.9","closed","R-awaiting answer,","tshingy","2021-01-07T15:15:07Z","2021-09-05T08:27:37Z"
"","9083","When opening a new TAB in Internet Explorer, the code throws a connection that has a timeout problem.","## üêõ Bug Report  When opening a new TAB in Internet Explorer, the code throws a connection that has a timeout problem. Details of the error are as follows.  ```java ""C:\Program Files\Java\jdk1.8.0_231\bin\java.exe"" -ea -Didea.test.cyclic.buffer.size=1048576 ""-javaagent:D:\IntelliJ IDEA 2020.1\lib\idea_rt.jar=54590:D:\IntelliJ IDEA 2020.1\bin"" -Dfile.encoding=UTF-8 -classpath ""D:\IntelliJ IDEA 2020.1\lib\idea_rt.jar;D:\IntelliJ IDEA 2020.1\plugins\junit\lib\junit5-rt.jar;D:\IntelliJ IDEA 2020.1\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\RXTXcomm.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_231\jre\lib\rt.jar;E:\1\autosubmit\target\test-classes;E:\1\autosubmit\target\classes;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-java\3.12.0\selenium-java-3.12.0.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-api\3.141.59\selenium-api-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-chrome-driver\3.141.59\selenium-chrome-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-edge-driver\3.141.59\selenium-edge-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-firefox-driver\3.141.59\selenium-firefox-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-ie-driver\3.141.59\selenium-ie-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-opera-driver\3.141.59\selenium-opera-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-remote-driver\3.141.59\selenium-remote-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-safari-driver\3.141.59\selenium-safari-driver-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\org\seleniumhq\selenium\selenium-support\3.141.59\selenium-support-3.141.59.jar;C:\Users\weiyu.ke\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\commons\commons-exec\1.3\commons-exec-1.3.jar;C:\Users\weiyu.ke\.m2\repository\commons-codec\commons-codec\1.14\commons-codec-1.14.jar;C:\Users\weiyu.ke\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\weiyu.ke\.m2\repository\com\google\code\gson\gson\2.8.6\gson-2.8.6.jar;C:\Users\weiyu.ke\.m2\repository\com\google\guava\guava\23.6-jre\guava-23.6-jre.jar;C:\Users\weiyu.ke\.m2\repository\com\google\code\findbugs\jsr305\1.3.9\jsr305-1.3.9.jar;C:\Users\weiyu.ke\.m2\repository\org\checkerframework\checker-compat-qual\2.0.0\checker-compat-qual-2.0.0.jar;C:\Users\weiyu.ke\.m2\repository\com\google\errorprone\error_prone_annotations\2.1.3\error_prone_annotations-2.1.3.jar;C:\Users\weiyu.ke\.m2\repository\com\google\j2objc\j2objc-annotations\1.1\j2objc-annotations-1.1.jar;C:\Users\weiyu.ke\.m2\repository\org\codehaus\mojo\animal-sniffer-annotations\1.14\animal-sniffer-annotations-1.14.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\httpcomponents\httpcore\4.4.13\httpcore-4.4.13.jar;C:\Users\weiyu.ke\.m2\repository\com\squareup\okhttp3\okhttp\3.14.9\okhttp-3.14.9.jar;C:\Users\weiyu.ke\.m2\repository\com\squareup\okio\okio\1.13.0\okio-1.13.0.jar;C:\Users\weiyu.ke\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.3\jackson-core-2.11.3.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\httpcomponents\httpclient\4.5.5\httpclient-4.5.5.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter-data-redis\2.3.5.RELEASE\spring-boot-starter-data-redis-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter\2.3.5.RELEASE\spring-boot-starter-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot\2.3.5.RELEASE\spring-boot-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.3.5.RELEASE\spring-boot-autoconfigure-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.3.5.RELEASE\spring-boot-starter-logging-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\weiyu.ke\.m2\repository\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\data\spring-data-redis\2.3.5.RELEASE\spring-data-redis-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\data\spring-data-keyvalue\2.3.5.RELEASE\spring-data-keyvalue-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\data\spring-data-commons\2.3.5.RELEASE\spring-data-commons-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-tx\5.2.10.RELEASE\spring-tx-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-oxm\5.2.10.RELEASE\spring-oxm-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-aop\5.2.10.RELEASE\spring-aop-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-context-support\5.2.10.RELEASE\spring-context-support-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\io\lettuce\lettuce-core\5.3.5.RELEASE\lettuce-core-5.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\io\netty\netty-common\4.1.53.Final\netty-common-4.1.53.Final.jar;C:\Users\weiyu.ke\.m2\repository\io\netty\netty-handler\4.1.53.Final\netty-handler-4.1.53.Final.jar;C:\Users\weiyu.ke\.m2\repository\io\netty\netty-resolver\4.1.53.Final\netty-resolver-4.1.53.Final.jar;C:\Users\weiyu.ke\.m2\repository\io\netty\netty-buffer\4.1.53.Final\netty-buffer-4.1.53.Final.jar;C:\Users\weiyu.ke\.m2\repository\io\netty\netty-codec\4.1.53.Final\netty-codec-4.1.53.Final.jar;C:\Users\weiyu.ke\.m2\repository\io\netty\netty-transport\4.1.53.Final\netty-transport-4.1.53.Final.jar;C:\Users\weiyu.ke\.m2\repository\io\projectreactor\reactor-core\3.3.11.RELEASE\reactor-core-3.3.11.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\reactivestreams\reactive-streams\1.0.3\reactive-streams-1.0.3.jar;C:\Users\weiyu.ke\.m2\repository\com\alibaba\fastjson\1.2.51\fastjson-1.2.51.jar;C:\Users\weiyu.ke\.m2\repository\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\weiyu.ke\.m2\repository\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\weiyu.ke\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.13.3\log4j-to-slf4j-2.13.3.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\logging\log4j\log4j-api\2.13.3\log4j-api-2.13.3.jar;C:\Users\weiyu.ke\.m2\repository\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.3.5.RELEASE\spring-boot-starter-web-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.3.5.RELEASE\spring-boot-starter-json-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.3\jackson-databind-2.11.3.jar;C:\Users\weiyu.ke\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.3\jackson-annotations-2.11.3.jar;C:\Users\weiyu.ke\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.3\jackson-datatype-jdk8-2.11.3.jar;C:\Users\weiyu.ke\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.3\jackson-datatype-jsr310-2.11.3.jar;C:\Users\weiyu.ke\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.3\jackson-module-parameter-names-2.11.3.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.3.5.RELEASE\spring-boot-starter-tomcat-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.39\tomcat-embed-core-9.0.39.jar;C:\Users\weiyu.ke\.m2\repository\org\glassfish\jakarta.el\3.0.3\jakarta.el-3.0.3.jar;C:\Users\weiyu.ke\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.39\tomcat-embed-websocket-9.0.39.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-web\5.2.10.RELEASE\spring-web-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-beans\5.2.10.RELEASE\spring-beans-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-webmvc\5.2.10.RELEASE\spring-webmvc-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-context\5.2.10.RELEASE\spring-context-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-expression\5.2.10.RELEASE\spring-expression-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.3.5.RELEASE\spring-boot-starter-test-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-test\2.3.5.RELEASE\spring-boot-test-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.3.5.RELEASE\spring-boot-test-autoconfigure-2.3.5.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\com\jayway\jsonpath\json-path\2.4.0\json-path-2.4.0.jar;C:\Users\weiyu.ke\.m2\repository\net\minidev\json-smart\2.3\json-smart-2.3.jar;C:\Users\weiyu.ke\.m2\repository\net\minidev\accessors-smart\1.2\accessors-smart-1.2.jar;C:\Users\weiyu.ke\.m2\repository\org\ow2\asm\asm\5.0.4\asm-5.0.4.jar;C:\Users\weiyu.ke\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\weiyu.ke\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\weiyu.ke\.m2\repository\org\assertj\assertj-core\3.16.1\assertj-core-3.16.1.jar;C:\Users\weiyu.ke\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\weiyu.ke\.m2\repository\org\junit\jupiter\junit-jupiter\5.6.3\junit-jupiter-5.6.3.jar;C:\Users\weiyu.ke\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.6.3\junit-jupiter-api-5.6.3.jar;C:\Users\weiyu.ke\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\weiyu.ke\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\weiyu.ke\.m2\repository\org\junit\platform\junit-platform-commons\1.6.3\junit-platform-commons-1.6.3.jar;C:\Users\weiyu.ke\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.6.3\junit-jupiter-params-5.6.3.jar;C:\Users\weiyu.ke\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.6.3\junit-jupiter-engine-5.6.3.jar;C:\Users\weiyu.ke\.m2\repository\org\junit\platform\junit-platform-engine\1.6.3\junit-platform-engine-1.6.3.jar;C:\Users\weiyu.ke\.m2\repository\org\mockito\mockito-core\3.3.3\mockito-core-3.3.3.jar;C:\Users\weiyu.ke\.m2\repository\net\bytebuddy\byte-buddy-agent\1.10.17\byte-buddy-agent-1.10.17.jar;C:\Users\weiyu.ke\.m2\repository\org\objenesis\objenesis\2.6\objenesis-2.6.jar;C:\Users\weiyu.ke\.m2\repository\org\mockito\mockito-junit-jupiter\3.3.3\mockito-junit-jupiter-3.3.3.jar;C:\Users\weiyu.ke\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\weiyu.ke\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-core\5.2.10.RELEASE\spring-core-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-jcl\5.2.10.RELEASE\spring-jcl-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\springframework\spring-test\5.2.10.RELEASE\spring-test-5.2.10.RELEASE.jar;C:\Users\weiyu.ke\.m2\repository\org\xmlunit\xmlunit-core\2.7.0\xmlunit-core-2.7.0.jar;C:\Users\weiyu.ke\.m2\repository\junit\junit\4.13.1\junit-4.13.1.jar;C:\Users\weiyu.ke\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar"" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 com.zhucx.autosubmit.Test3,testLoginValid Started InternetExplorerDriver server (32-bit) 3.150.1.1 Listening on port 40731 Only local connections are allowed ‰∏ÄÊúà 22, 2021 1:06:24 ‰∏ãÂçà org.openqa.selenium.remote.ProtocolHandshake createSession ‰ø°ÊÅØ: Detected dialect: W3C  org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:40731 Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'YANFA-CESHI1', ip: '192.168.2.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: RemoteWebDriver  	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285) 	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84) 	at com.zhucx.autosubmit.Test3.testLoginValid(Test3.java:35) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) 	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:40731 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:265) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:183) 	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224) 	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108) 	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88) 	at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229) 	at okhttp3.RealCall.execute(RealCall.java:81) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 31 more Caused by: java.net.ConnectException: Connection refused: connect 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:606) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:130) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:263) 	... 52 more   org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:40731 Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03' System info: host: 'YANFA-CESHI1', ip: '192.168.2.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: RemoteWebDriver  	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:609) 	at org.openqa.selenium.remote.RemoteWebDriver.close(RemoteWebDriver.java:442) 	at com.zhucx.autosubmit.Test3.teardown(Test3.java:29) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59) 	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) 	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56) 	at org.junit.internal.runners.statements.RunAfters.invokeMethod(RunAfters.java:46) 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100) 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103) 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63) 	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331) 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79) 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329) 	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66) 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293) 	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306) 	at org.junit.runners.ParentRunner.run(ParentRunner.java:413) 	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) 	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) 	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) 	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230) 	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:40731 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:265) 	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:183) 	at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.java:224) 	at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.java:108) 	at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.java:88) 	at okhttp3.internal.connection.Transmitter.newExchange(Transmitter.java:169) 	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:41) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) 	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) 	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142) 	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117) 	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229) 	at okhttp3.RealCall.execute(RealCall.java:81) 	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	... 30 more Caused by: java.net.ConnectException: Connection refused: connect 	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) 	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) 	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) 	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) 	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) 	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) 	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) 	at java.net.Socket.connect(Socket.java:606) 	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:130) 	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:263) 	... 51 more   Process finished with exit code -1  ```  ## To Reproduce  Open a new popup in Internet Explorer  ## Expected behavior  The code prompts the connection to timeout and throws an exception  ## Test script or set of commands reproducing this issue  ```java package com.zhucx.autosubmit;  import org.junit.After; import org.junit.Before; import org.junit.Test; import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.ie.InternetExplorerDriver;  /**  * @author SlagMale  * @version 1.0  * @date 2021/01/22 13:58  */ public class Test3 {     private WebDriver driver;      @Before     public void setup() {         System.setProperty(""webdriver.ie.driver"", ""E:\\driver\\IEDriverServer.exe"");         System.getProperty(""webdriver.ie.driver.host"", ""localhost"");         System.getProperty(""webdriver.ie.driver.loglevel"", ""ERROR"");         System.getProperty(""webdriver.ie.driver.logfile"", ""E:\\logs"");         driver = new InternetExplorerDriver();     }      @After     public void teardown() {         driver.close();     }      @Test     public void testLoginValid() {         driver.get(""http://wssq.sbj.cnipa.gov.cn:9080/tmsve/sycjwt_getMain.xhtml"");         driver.manage().window().maximize();         String originalWindow = driver.getWindowHandle();         driver.findElement(By.xpath(""//*[@id=\""form1\""]/TABLE/TBODY/TR/TD/TABLE[2]/TBODY/TR[2]/TD[3]/A"")).click();         for (String windowHandle : driver.getWindowHandles()) {             if (!originalWindow.contentEquals(windowHandle)) {                 driver.switchTo().window(windowHandle);                 break;             }             driver.findElement(By.xpath(""//INPUT[@class=\""zhuceBtn\""]"")).click();         }     }  }   ```  ## Environment  OS: Windows 10 Browser: Internet Explorer Browser version: 19042.685 Browser Driver version: 3.150.1.1 Language Bindings version: Java 1.8 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","EatGoods","2021-01-22T05:14:30Z","2021-09-05T08:24:56Z"
"","9053","When opening a new TAB in Internet Explorer, the code throws a connection that has a timeout problem.","## üêõ Bug Report  When opening a new TAB in Internet Explorer, the code throws a connection that has a timeout problem. Details of the error are as follows  ``` Started InternetExplorerDriver server (32-bit) 3.150.1.1 Listening on port 26038 Only local connections are allowed ‰∏ÄÊúà 15, 2021 2:02:30 ‰∏ãÂçà org.openqa.selenium.remote.ProtocolHandshake createSession ‰ø°ÊÅØ: Detected dialect: W3C  Exception in thread ""main"" org.openqa.selenium.WebDriverException: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:26038 Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'LIUKAIGE', ip: '192.168.117.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231' Driver info: driver.version: RemoteWebDriver at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:92) at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285) at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84) at com.zhucx.demo.Test2.main(Test2.java:156) Caused by: java.net.ConnectException: Failed to connect to localhost/0:0:0:0:0:0:0:1:26038 at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:247) at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165) at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257) at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135) at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114) at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147) at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121) at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200) at okhttp3.RealCall.execute(RealCall.java:77) at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103) at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:155) at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) ... 4 more Caused by: java.net.ConnectException: Connection refused: connect at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method) at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85) at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350) at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206) at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188) at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172) at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) at java.net.Socket.connect(Socket.java:606) at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129) at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245) ... 24 more ```  ## Last working Selenium version Worked up to version: unknown  Stopped working in version: unknown  ## To Reproduce Detailed steps to reproduce the behavior: Use IE browser for UI operation  ## Expected behavior Proceed normally  ## Environment OS: Windows 10 Browser: Internet Explorer Browser version: 19042.685 Browser Driver version: 3.150.1.1 Language Bindings version: Java 1.8 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","EatGoods","2021-01-15T06:35:02Z","2021-09-05T08:24:58Z"
"","9798","C# GetDevToolsSession() - is fixed forever to one tab/window","## üêõ Bug Report  When one calls `GetDevToolsSession()` then the session is set to stone for the webdriver and cannot be changed anymore.  For instance when one opens a new tab/window after calling `GetDevToolsSession()` once, it is impossible to get the DevToolsSession of the new tab/window.  When one closes the tab/window, then `GetDevToolsSession()` will continue to return the ""dead"" session. Trying to execute any command on that session will lead to an exception: ``` System.InvalidOperationException   HResult=0x80131509   Message=A command response was not received: Network.getAllCookies   Source=WebDriver   StackTrace:    at OpenQA.Selenium.DevTools.DevToolsSession.d__31.MoveNext()    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.DevToolsSession.d__30`2.MoveNext()    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.DevTools.V93.Network.NetworkAdapter.d__99.MoveNext()    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at $.d__0.MoveNext() in C:\src\devtoolssessionnewtab\DevToolsSessionNewTab\Program.cs:line 20    at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.GetResult()    at $.(String[] args) ```  ## To Reproduce  Program.cs ``` using System.Threading.Tasks; using OpenQA.Selenium; using OpenQA.Selenium.Chrome; using OpenQA.Selenium.DevTools.V93.Network;  using var chromeDriver = new ChromeDriver(); chromeDriver.Url = ""https://www.selenium.dev""; string originalWindow = chromeDriver.CurrentWindowHandle; await DevToolsSessionNewTab.Helper.GetAllCookies(chromeDriver);  chromeDriver.SwitchTo().NewWindow(WindowType.Tab); string newWindowHandle = chromeDriver.CurrentWindowHandle; await DevToolsSessionNewTab.Helper.GetAllCookies(chromeDriver);  // this .Close() kills the dev tools session, no chance to ever retrieve a new one for the other tab chromeDriver.SwitchTo().Window(originalWindow).Close(); chromeDriver.SwitchTo().Window(newWindowHandle); chromeDriver.Url = ""https://www.selenium.dev/documentation/webdriver/browser_manipulation/""; await DevToolsSessionNewTab.Helper.GetAllCookies(chromeDriver);   namespace DevToolsSessionNewTab {     public static class Helper     {         public static Task GetAllCookies(ChromeDriver driver)         {             return driver.GetDevToolsSession()                 .GetVersionSpecificDomains()                 .Network                 .GetAllCookies(new GetAllCookiesCommandSettings { });         }     } } ```  Project file ```                Exe         net5.0                                 ```   ## Expected behavior  `.GetDevToolsSession()` returns the DevToolsSession of the current active window or `.GetDevToolsSession(string windowIdentifier)` returns the DevToolsSession of the window or Any way to create a `DevToolsSession` manually. Right now it's impossible because the `DevToolsSession` `Start()` is `internal`.  https://chromedevtools.github.io/devtools-protocol/ supports a `GET` `/json` or `/json/list` where one can get all available devtools session.   ## Test script or set of commands reproducing this issue  See above code + github repo: https://github.com/schrufygroovy/devtoolssessionnewtab  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 93.0.4577.63 Browser Driver version: 93.0.4577.1500 Language Bindings version: dotnet 4.0.0-rc1","closed","C-dotnet,","schrufygroovy","2021-09-07T06:25:54Z","2021-11-22T00:06:46Z"
"","9545","Entire Script of Macbeth Found In Application","## üêõ Bug Report  When installing the npm package, the entire script of Macbeth can be found in the code.  ## To Reproduce  *  run `npm install selenium-webdriver` *  navigate to `node_modules/selenium-webdriver/lib/test/data/macbeth.html` *  find the entire script of Macbeth  ## Expected behavior  There should not be the entire script of Macbeth","closed","C-nodejs,","chase-manning","2021-06-03T20:16:16Z","2021-09-05T08:01:14Z"
"","9685","jdk out of memory after running selenium standalone server for a long time","## üêõ Bug Report  When I use the docker image to start a standalone service on a CentOS 7 node with the following command,  docker run -p 5555:4444 -v /dev/shm:/dev/shm -e SE_NODE_MAX_SESSIONS=20 -e SE_NODE_SESSION_TIMEOUT=60 -e SE_OPTS=""--grid-url http://1.2.3.4:5555/wd/hub --max-threads 20"" selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618  Everything is fine at the beginning, but after about 3-4 days the JVM will crash due to the out-of-memory issue. You can find the log in the attachment.  [selenum4-oom.log](https://github.com/SeleniumHQ/selenium/files/6875246/selenum4-oom.log)   docker image: selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618 os: linux (docker)","closed","","link89","2021-07-26T02:54:42Z","2021-09-05T07:50:02Z"
"","9106","PageFactory.initElements crashes the JVM","## üêõ Bug Report  When I use `PageFactory.initElements(...)`, the JVM crashes.  ## To Reproduce  Detailed steps to reproduce the behavior:  1. I have the scripts as below. 2. When I run the test from my IDE (Eclipse) it just hangs and I have to force-kill it. 3. When I run the test from command line, I get output that looks similar to: ``` [INFO] Running tests.PageFactoryTestIT Starting ChromeDriver 87.0.4280.88 (89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761}) on port 3180 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. Jan 26, 2021 10:37:48 AM org.openqa.selenium.remote.ProtocolHandshake createSession INFO: Detected dialect: W3C T10:37:51.893-0800 [main] [DEBUG] LoginPage - check point 1 ``` The ""check point 1"" line repeats 1400 times! ``` [ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 8.668 s","closed","needs-triaging,","SiKing","2021-01-26T18:55:43Z","2021-09-05T08:21:38Z"
"","9754","selectByVisibleText(org.openqa.selenium.support.ui) is not working properly in selenium version ""4.0.0-beta-3""","## üêõ Bug Report  When I try to select item from dropdown, it throws bellow error. But works fine in selenium version : 3.141.59  ## Error in console  Step failed java.lang.UnsupportedOperationException 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) 	at com.youvegotnigel.automation.stepdefs.InventoryPageStepDefinitions.select_items(InventoryPageStepDefinitions.java:57) 	at ‚úΩ.Select 'Price (low to high)' from the dropdown(file:///C:/Essentials/git-projects/Cucumber-Projects/cucmber-java-testng-saucelabs/src/test/resources/features/default/02_Products.feature:28)   ## To Reproduce  Run this cucumber feature file for bellow environment settings  https://github.com/youvegotnigel/cucmber-java-testng-saucelabs/blob/535782562b4a6a21d1c998d8e9a42a08ccf0df38/src/test/resources/features/default/02_Products.feature#L16    ## Expected behavior  I should be able to select items by visible text using ""selectByVisibleText"" method   ## Environment  OS:  Windows 10 Browser: Chrome Browser version: 92.0.4515.107 Browser Driver version: ChromeDriver 93.0.4577.15 Language Bindings version: Java 11 Selenium version : 4.0.0-beta-3 Github repo : https://github.com/youvegotnigel/cucmber-java-testng-saucelabs Branch : updateFramework Application Under Test : https://www.saucedemo.com/inventory.html ![image](https://user-images.githubusercontent.com/48122863/130344614-b54293c2-418b-4644-881b-68e987536fac.png)","closed","R-awaiting answer,","youvegotnigel","2021-08-22T06:17:17Z","2021-09-29T00:05:42Z"
"","9891","RemoteWebDriver not opening session with 4.0.0-rc2 in C#","## üêõ Bug Report  When I execute a new RemoteWebDriver in C# against a Selenium 4 server for RC 2 running locally on the same computer the call does not resolve (is stuck) until the timeout occurs (default of 60 seconds) and the following C# exception is thrown ...  ``` OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:4444/session timed out after 60 seconds. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled. ```  ## To Reproduce  Within a project in **Visual Studio Professional 2015** (other versions untested) ensure the NuGet package **Selenium.WebDriver v4.0.0-rc2** is installed (**Install-Package Selenium.WebDriver -Version 4.0.0-rc2**) and the **Target framework** of the project is **.NET Framework 4.7**.  Create a program with the following code ...  ``` using OpenQA.Selenium.Chrome; using OpenQA.Selenium; ```  ``` ChromeOptions options = new ChromeOptions(); IWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:4444""), options.ToCapabilities()); ```  Ensure the Selenium server **selenium-server-4.0.0-rc-2.jar** exists on the computer (**https://github.com/SeleniumHQ/selenium/releases/download/selenium-4.0.0-rc-2/selenium-server-4.0.0-rc-2.jar**).  Ensure java is installed (version **1.8.0_231** tested).  Start the Selenium server with the following command in a CLI ...  ``` ""\java.exe"" -Xmx128m -jar \selenium-server-4.0.0-rc-2.jar standalone ```  Ensure Selenium Server has successfully started by observing the message...  ``` Started Selenium Standalone 4.0.0-rc-2 ... http://:4444 ```  Run the program above in Debug mode in Visual Studio.  Execution of the **new RemoteWebDriver** call above will become stuck for 60 seconds after which time the program will exit (throw an exception) as follows ...  ``` OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:4444/session timed out after 60 seconds. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled.    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.Remote.HttpCommandExecutor.d__35.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.WebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.WebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.WebDriver..ctor(ICommandExecutor executor, ICapabilities capabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities) ... ```  No output (connection) message is logged in the Selenium Server process running (above) and no Chrome browser is started.  I have repeated the same test with the following combinations:  - NuGet package 4.0.0-rc1 and Selenium Server 4.0.0-rc1 - NuGet package 4.0.0-alpha7 and Selenium Server 4.0.0 Alpha 7  An existing issue with similar symptoms is as follows...  https://github.com/SeleniumHQ/docker-selenium/issues/1109  ## Expected behavior  The ""new RemoteWebDriver"" instruction in the code snippet above executes within a timely manner and returns a valid IWebDriver instance.  I have however successfully performed a new webdriver request against the same Selenium Server 4.0.0-rc2 via the following cUrl command ...  ``` curl -H ""Accept: application/json"" -H ""Content-Type:application/json; charset=utf-8"" -X POST -d ""{\""desiredCapabilities\"":{\""browserName\"":\""chrome\""}}"" http://localhost:4444/session ```  Chrome browser is started and the Selenium Server responds correctly with ...  ``` 16:12:01.897 INFO [LocalDistributor.newSession] - Session request received by the distributor:  [Capabilities {browserName: chrome}] Starting ChromeDriver 83.0.4103.39 (ccbf011cb2d2b19b506d844400483861342c20cd-refs/branch-heads/4103@{#416}) on port 4944 Only local connections are allowed. Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe. ChromeDriver was started successfully. 16:12:05.016 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C 16:12:05.031 INFO [LocalDistributor.newSession] - Session created by the distributor. Id: f05e25afe7a7ab2c43a58a65465eeed1, Caps: Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 83.0.4103.97, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\sgriffin\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:8210}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://10.1.1.102:4444/sessio..., se:cdpVersion: 83.0.4103.97, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} ```  This seems to indicate that my computer is able to make a HTTP request to the same Selenium Server process outside Visual Studio / C#.  Rolling back the v4.0.0-rc2 NuGet package with the latest stable v3.0.1 package in Visual Studio, and running the Selenium Server Standalone v3.141.59 (selenium-server-standalone-3.141.59.jar) instead of v4.0.0-rc2 is also successful (the IWebDriver instance is returned by the ""new RemoteWebDriver"" call in C# immediately with no timeout).  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 83.0.4103.97 Browser Driver version: ChromeDriver 83.0.4103.39 Language Bindings version: C# 4.0.0-rc2  Selenium Grid version (if applicable): 4.0.0-rc2","closed","needs-triaging,","seanhaydongriffin","2021-10-07T13:55:17Z","2021-11-07T00:06:32Z"
"","9037","Unable to identify Alert occurred on 'onLoad' event","## üêõ Bug Report  When I am clicking on a link a new Tab is opened in the browser and an Alert pop up appears on the tab due to the 'onLoad' event of the Page. I wish to perform operations on alert like storeMessage, acceptAlert but the Alert is not recognized. Also, the execution halts at 'driver.switchTo().alert()' until I manually accept the Alert.  ## To Reproduce Trial.html     HTML Links Visit    The execution halts when I try to switch to alert or get current URL after switching to the new Tab.  ## Expected behavior 1. The execution should not halt. 2. The alert must be identified. 3. It should be possible to perform operation on alert.  ## Environment OS: Windows 10 Browser: Chrome Browser version: 87.0.4280.141 Browser Driver version: ChromeDriver 87 Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.141.59","closed","","Gauravi03","2021-01-13T11:31:56Z","2021-09-05T08:25:07Z"
"","9040","Unable to identify Alert occurred on 'onLoad' event","## üêõ Bug Report  When I am clicking on a link a new Tab is opened in the browser and an Alert pop up appears on the tab due to the 'onLoad' event of the Page. I wish to perform operations on alert like storeMessage, acceptAlert but the Alert is not recognized. Also, the execution halts at 'driver.switchTo().alert()' until I manually accept the Alert.  ## To Reproduce Trial.html     HTML Links Visit    The execution halts when I try to switch to alert or get current URL after switching to the new Tab  ## Expected behavior  1. The execution should not halt. 2. The alert must be identified. 3. It should be possible to perform operation on alert.  ## Test script or set of commands reproducing this issue  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 87.0.4280.141 Browser Driver version: ChromeDriver 87 Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.141.59","closed","C-java,","Gauravi03","2021-01-13T11:41:46Z","2021-09-05T08:12:22Z"
"","9039","Unable to identify Alert occurred on 'onLoad' event","## üêõ Bug Report  When I am clicking on a link a new Tab is opened in the browser and an Alert pop up appears on the tab due to the 'onLoad' event of the Page. I wish to perform operations on alert like storeMessage, acceptAlert but the Alert is not recognized. Also, the execution halts at 'driver.switchTo().alert()' until I manually accept the Alert.  ## To Reproduce Trial.html     HTML Links Visit    The execution halts when I try to switch to alert or get current URL after switching to the new Tab  ## Expected behavior  1. The execution should not halt. 2. The alert must be identified. 3. It should be possible to perform operation on alert.  ## Test script or set of commands reproducing this issue  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 87.0.4280.141 Browser Driver version: ChromeDriver 87 Language Bindings version: Java 8 Selenium Grid version (if applicable): 3.141.59","closed","needs-triaging,","Gauravi03","2021-01-13T11:40:51Z","2021-09-05T08:25:06Z"
"","9493","Starting RemoteWebDriver with a DriverOptions that contains items AddAdditionalOption doesn't include them - Selenium 4 beta 2 C#","## üêõ Bug Report  When I add to a ChromeOptions or FirefoxOptions object with AddAdditionalOption and attempt to create a RemoteWebDriver with that Options object used the values don't send - only values set with AddAdditionalChromeOption / AddAdditionalFirefoxOption seem to send.   ## To Reproduce   ```  public static void Main(string[] args)         {              ChromeOptions options = new ChromeOptions()             {                 BrowserVersion = ""latest"",                 PlatformName = ""Windows 10"",              };              var customOptions = new Dictionary             {                 [""username""] = ""chrome"",                 [""accessKey""] = ""test""              };             var customOptions2 = new Dictionary             {                 [""username""] = ""global"",                 [""accessKey""] = ""test""             };              options.AddAdditionalChromeOption(""test.chrome"", customOptions);             options.AddAdditionalOption(""test.global"", customOptions2);                           RemoteWebDriver driver = new RemoteWebDriver (new System.Uri(""http://google.com/fake/""), options);              driver.Quit();         } ```  Tracking with Fiddler This results in a post call that looks like this  >  >  > { >  ""capabilities"": >  { >     ""firstMatch"":[ >     { >        ""browserName"":""chrome"", >        ""browserVersion"":""latest"", >        ""platformName"":""Windows 10"", >        ""goog:chromeOptions"": >        { >           ""test.chrome"": >           { >              ""username"":""chrome"", >              ""accessKey"":""test"" >           } >        } >     }] >  } > }   ## Expected behavior  The custom object added with              options.AddAdditionalOption(""test.global"", customOptions2); That contains values                 [""username""] = ""global"",                 [""accessKey""] = ""test"" Should be included in the post like test.chrome is, but at the same level as browserName, browserVersion, platformName  ## Environment  OS: Windows 10 Browser: RemoteWebDriver startup Language Bindings version: C# Selenium 4 beta 2","closed","","StormCat007","2021-05-19T19:06:50Z","2021-09-05T08:03:25Z"
"","9675","windows node not registering to dockerized hub","## üêõ Bug Report  When connecting to the Linux hub, the node just keeps resending Sending registration event.   Host Error:  ``` 18:07:25.696 WARN [UnboundZmqEventBus$PollingRunnable.lambda$notifyListeners$2] - Caught exception from listener: org.openqa.selenium.events.EventListener@4024f47c org.openqa.selenium.json.JsonException: Unable to create instance of class org.openqa.selenium.grid.data.NodeStatus Build info: version: '4.0.0-rc-1', revision: '74745cf081' System info: host: '23b731438d5f', ip: '172.50.240.3', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.24.1.el7.x86_64', java.version: '11.0.11' Driver info: driver.version: unknown         at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:61)         at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:145)         at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)         at org.openqa.selenium.json.Json.toType(Json.java:69)         at org.openqa.selenium.json.Json.toType(Json.java:55)         at org.openqa.selenium.json.Json.toType(Json.java:50)         at org.openqa.selenium.events.Event.getData(Event.java:59)         at org.openqa.selenium.events.EventListener.accept(EventListener.java:43)         at org.openqa.selenium.events.EventListener.accept(EventListener.java:25)         at org.openqa.selenium.events.zeromq.UnboundZmqEventBus$PollingRunnable.lambda$notifyListeners$2(UnboundZmqEventBus.java:273)         at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)         at java.base/java.lang.Thread.run(Thread.java:829) Caused by: java.lang.reflect.InvocationTargetException         at jdk.internal.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)         at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)         at java.base/java.lang.reflect.Method.invoke(Method.java:566)         at org.openqa.selenium.json.StaticInitializerCoercer.lambda$apply$0(StaticInitializerCoercer.java:59)         ... 14 more Caused by: java.lang.IllegalArgumentException: Node id must be set         at org.openqa.selenium.internal.Require.nonNull(Require.java:56)         at org.openqa.selenium.grid.data.NodeStatus.(NodeStatus.java:58)         at org.openqa.selenium.grid.data.NodeStatus.fromJson(NodeStatus.java:123)         ... 18 more  ```   Node Startup: ``` java -jar selenium-server-4.0.0-beta-4.jar node --publish-events tcp://host.name.net:4442 --subscribe-events tcp://host.name.net:4443  --host host.name.net --port 5555 ```  Docker-compose:  ```  20   node-docker:  21     image: selenium/node-docker:4.0  22     volumes:  23       - ./assets:/opt/selenium/assets  24       - ./config.toml:/opt/bin/config.toml  25     depends_on:  26       - selenium-hub  27     env_file:  28       - proxy.env  29     environment:  30       - SE_EVENT_BUS_HOST=selenium-hub  31       - SE_EVENT_BUS_PUBLISH_PORT=4442  32       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443  33       - SE_OPTS=--session-timeout 180  34     networks:  35       - selenium  36  37   selenium-hub:  38     image: selenium/hub:4.0  39     container_name: selenium-hub  40     volumes:  41       - ./resolv.conf:/etc/resolv.conf:ro  42     ports:  43       - ""4442:4442""  44       - ""4443:4443""  45       - ""4444:4444""  46     networks:  47       - selenium  48 networks:  49    selenium:  50      driver: bridge  51      ipam:  52        driver: default  53        config:  54         - subnet: 172.50.240.0/24  ```   Host Config: ```   1 [node]   2 session-timeout = 60   3   4 [docker]   5 # Configs have a mapping between the Docker image to use and the capabilities that need to be matched to   6 # start a container with the given image.   7 configs = [   8     ""selenium/standalone-firefox:4.0"", ""{\""browserName\"": \""firefox\""}"",   9     ""selenium/standalone-chrome:4.0"", ""{\""browserName\"": \""chrome\""}""  10     ]  11  12 # URL for connecting to the docker daemon  13 # host.docker.internal works for macOS and Windows.  14 # Linux could use --net=host in the `docker run` instruction or 172.17.0.1 in the URI below.  15 # To have Docker listening through tcp on macOS, install socat and run the following command  16 # socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock  17 url = ""http://host.name.net:2375""  18 # Docker imagee used for video recording  19 video-image = ""selenium/video:ffmpeg-4.3.1-20210713""  20  21 # Uncomment the following section if you are running the node on a separate VM  22 # Fill out the placeholders with appropriate values  23 #[server]  24 #host =   25 #port =  ```  The host docker container is able to ping port 5555 on the node. It can also pull the 5555/status when using wget.   ## To Reproduce  Detailed steps to reproduce the behavior:  1. Build linux containers. 2. Start windows java jar.  ## Expected behavior  The Windows node should connect to the linux host.  ## Test script or set of commands reproducing this issue  na  ## Environment  OS: Windows Server 2016, Rhel 7.9 Browser: Chrome Browser version: 91 Selenium Grid version (if applicable): 4.0.0-rc-1","closed","R-awaiting answer,","dahud10001","2021-07-21T18:11:45Z","2021-09-05T07:50:26Z"
"","9536","Selenium 4 beta 3 high memory usage","## üêõ Bug Report  When compared to running Selenium v.3.141.59 in hub and node setup, Selenium 4 beta consumes considerably more memory.  Usually when running Selenium 3.141.59 I would have 1 hub and 2 nodes - one with usually 5 threads running through xvfb and another 1 with 1 thread for confirming scenario's. The hub would rarely exceed 500mb memory usage, and the node running 5 threads rarely exceeded 1.5 gb after running for a few days.  After running overnight (~16 hours), Selenium 4 beta hub is consuming 4gb and the node is using 3.4gb (capability of 8 threads, but only 1 running) (note I also had a Firefox tab pointing to the server page (:/ui/index.html#/)  ## To Reproduce Detailed steps to reproduce the behavior: Run a large suite overnight. Moodle (moodle.org) is a large open source project that has a large suite that could be used (although this is not what I tested with, and may need some modifications to get to work with Selenium 4)  ## Expected behavior  RAM Usage for hub and node should be under 2 gb  ## Test script or set of commands reproducing this issue  Run a large suite  ## Environment  OS: Ubuntu 20.04 LTS Browser: chrome Browser version: 91.0.4472.77 (Official Build) (64-bit) Browser Driver version: ChromeDriver 90 Language Bindings version: PHP Selenium Grid version (if applicable): 4 beta 3  Java Version: openjdk 11.0.11 2021-04-20 OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04) OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)","closed","C-grid,","marsh0lion","2021-06-01T21:01:12Z","2021-09-16T00:05:38Z"
"","9851","Atoms getText returns strange values with absolutely positioned elements","## üêõ Bug Report  When apply RelativeLocator.above() to a sample page, there is unexpected output produced. See below.  ## To Reproduce  Detailed steps to reproduce the behavior:  Use this docker-compose to set up environment:  ```yaml version: '2'  services:    chrome:     image: selenium/node-chrome:4.0.0-rc-2-prerelease-20210916     shm_size: 2gb     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - ""6900:5900""     volumes:        - ./site:/site        selenium-hub:     image: selenium/hub:4.0.0-rc-2-prerelease-20210916     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```  Use this page:  ```xml                .c {     	position: absolute;     	border: 1px solid black;     	height: 50px;     	width: 50px;     }            El-A     El-B     El-C     El-D     El-E     El-F       ```  which is rendered as  ![image](https://user-images.githubusercontent.com/66011915/133996949-581a2982-c416-44bf-a215-13be2f091a47.png)  Then use the code like:  ```java WebElement base = driver         .findElement(By.id(""e"")); List cells = driver         .findElements(                 RelativeLocator                         .with(By.tagName(""div""))                         .above(base)); cells         .stream()         .map(webElement -> webElement.getText())         .forEach(System.out::println); ```  ## Expected behavior  The output produced:  ``` El-B El-A ``` ## Observed behavior:  The output produced:  ``` El-B El-A El-A El-B El-C El-D El-E El-F ```   ## Environment  OS: Ubuntu 20.04 Browser: Chrome Browser version: packaged to official selenium docker image Browser Driver version: packaged to official selenium docker image Language Bindings version: Java 4.0.0-rc-1 Selenium Grid version (if applicable): 4.0.0-rc-2","open","I-defect,","ar4development","2021-09-20T11:53:08Z","2022-05-09T17:11:14Z"
"","9182","Node status is not updated in selenium grid 4 alpha or beta when in Hub and Node Mode","## üêõ Bug Report  When a node is shutdown it is still listed in the hub and has a status of UP. I believe I also tested this in the latest beta version and got the same results.  ## To Reproduce  1. Spin up a hub: `java -jar selenium-server-4.0.0-alpha-7.jar hub --host localhost --subscribe-events tcp://localhost:4443 --publish-events tcp://localhost:4442 --registration-secret lifebeforedeath`  2. Spin up a node: `java -jar selenium-server-4.0.0-alpha-7.jar node --subscribe-events tcp://localhost:4443 --publish-events tcp://localhost:4442 --host localhost --detect-drivers true --registration-secret lifebeforedeath`  3. Query the hub: `curl -v -X POST -H ""Content-Type: application/json"" --data '{""query"": ""{ grid { nodes { status } } }""}' -s http://localhost:4444/graphql`     - you will see a status of ""UP""  4. Kill/shutdown the node 5. Query the hub again    - you will see the node listed and it still has a status of ""UP""  Detailed steps to reproduce the behavior:  ## Expected behavior  I expect the node status to be down  ## Test script or set of commands reproducing this issue  See steps to reproduce  ## Environment  OS: CentOS 8 Browser: Chrome Driver installed Browser version: N/A Browser Driver version: Latest Language Bindings version:","closed","C-grid,","dknopp","2021-02-16T18:49:43Z","2021-09-05T08:19:02Z"
"","9741","When a Chrome Node is restarted, it can not register back to the Grid","## üêõ Bug Report  When a Chrome Node is restarted, it can not register back to the Grid through the Hub.  ## To Reproduce  Detailed steps to reproduce the behavior:  1. Deploy the Grid as follows:  ``` --- apiVersion: helm.fluxcd.io/v1 kind: HelmRelease metadata:   name: selenium-grid-advanced   namespace: production spec:   releaseName: selenium-grid-advanced   chart:     # https://github.com/zzvara/docker-selenium/tree/selenium-grid-helm-chart-0.2.0     repository: https://redacted/artifactory/releases     name: selenium-grid     version: 0.2.1   values:     global:       seleniumGrid:         imageTag: ""4.0.0-rc-1-prerelease-20210804""         nodesImageTag: ""4.0.0-rc-1-prerelease-20210804""     isolateComponents: false     chromeNode:       replicas: 60       # nodeSelector:       #  selenium: ""true""       resources:         limits:           cpu: '1'           memory: 4000Mi         requests:           cpu: '1'           memory: 3400Mi     firefoxNode:       replicas: 0     operaNode:       replicas: 0     # @note These values only apply if components ARE NOT isolated.     hub:       imageTag: ""4.0.0-rc-1-prerelease-20210804""       resources:         requests:           memory: ""32Gi""         limits:           memory: ""32Gi""       extraEnvironmentVariables:         - name: JAVA_OPTS           # @note ""POOL_MAX"" not confirmed that it is working.           value: ""-Xmx20g -Xms2g -XX:+UseG1GC -DPOOL_MAX=512""         - name: SE_OPTS           value: ""--max-threads 100 --allow-cors true""           # @note ""SE_SESSION_REQUEST_TIMEOUT"" not confirmed that it is working.         - name: SE_SESSION_REQUEST_TIMEOUT           value: ""30"" ```  2. Kill a random Chrome Node pod. 3. Hub should accept the node.  ## Expected behavior  The restarted node should log that it has registered with the Hub. Also, I should see 61 nodes temporarily:  ![image](https://user-images.githubusercontent.com/8371789/129447621-5096e647-bdf9-4e14-8ebb-0744131be742.png)  ## What I see  ![image](https://user-images.githubusercontent.com/8371789/129447696-96b5cff7-8f17-40d5-8943-20fbb5300f8f.png)  ![image](https://user-images.githubusercontent.com/8371789/129447650-311e8834-88a1-4c29-8377-4b08eeed315b.png)  OS: 5.10.25-flatcar Browser: Chrome  Browser version: v.92.0 Selenium Grid version (if applicable): 4.0.0-rc-1 (revision c498dad8c5)","closed","needs-triaging,","zzvara","2021-08-14T13:24:51Z","2021-09-23T00:05:32Z"
"","8942","ConcurrentModificationException in GridModel when starting 4 tests concurrently","## üêõ Bug Report  We sometimes see a `ConcurrentModificationException` in `GridModel.findNode(GridModel.java:248)` when running a grid in docker and starting 4 tests (requests for a Chrome) at the same time.  We run the grid like so:  ``` SELENIUM_DOCKER_VER=""4.0.0-alpha-7-prerelease-20201009"" SELENIUM_HUB_IMAGE=""selenium/hub:${SELENIUM_DOCKER_VER}"" SELENIUM_NODE_IMAGE=""selenium/node-chrome:${SELENIUM_DOCKER_VER}"" SELENIUM_GRID=selenium-hub THREAD_COUNT=$(($(nproc) / 2)) # gives 4 on our 8 core machines  docker run \   --rm \   --network ""${K3D_NETWORK}"" \   --add-host ""${CUBE_URL}:${K3D_IP}"" \   --name ${SELENIUM_GRID} \   -p 4442-4444:4442-4444 \   ${SELENIUM_HUB_IMAGE} >""logs/selenium-hub.log"" &  for i in $(seq 1 $THREAD_COUNT); do   docker run \     --rm \     --network ""${K3D_NETWORK}"" \     --link ${K3D_NETWORK}-serverlb \     --link ${SELENIUM_GRID} \     --add-host ""${APP_URL}:${K3D_IP}"" \     -v /dev/shm:/dev/shm \     --name ""chrome-node-$i"" \     -e SE_EVENT_BUS_HOST=${SELENIUM_GRID} \     -e SE_EVENT_BUS_PUBLISH_PORT=4442 \     -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \     -e START_XVFB=false \     -e HUB_HOST=${SELENIUM_GRID} \     -e SCREEN_WIDTH=1200 \     -e SCREEN_HEIGHT=900 \     ${SELENIUM_NODE_IMAGE} >""logs/chrome-node-$i.log"" & done ```  The hub log file looks like:  ``` 2020-12-07 14:39:17,562 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing 2020-12-07 14:39:17,563 INFO supervisord started with pid 7 2020-12-07 14:39:18,565 INFO spawned: 'selenium-grid-hub' with pid 10 Starting Selenium Grid Hub... 2020-12-07 14:39:18,569 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 14:39:19.701 INFO [LoggingOptions.getTracer] - Using OpenTelemetry for tracing 14:39:19.707 INFO [LoggingOptions.createTracer] - Using OpenTelemetry for tracing 14:39:19.925 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://172.23.0.9:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://172.23.0.9:4443] 14:39:20.057 INFO [UnboundZmqEventBus.] - Connecting to tcp://172.23.0.9:4442 and tcp://172.23.0.9:4443 14:39:20.101 INFO [UnboundZmqEventBus.] - Sockets created 14:39:20.102 INFO [UnboundZmqEventBus.lambda$new$6] - Bus started 14:39:20.302 INFO [BoundZmqEventBus.] - Event bus ready 14:39:21.012 INFO [Hub.execute] - Started Selenium hub 4.0.0-alpha-7 (revision bd15e4e88a): http://172.23.0.9:4444 14:39:21.624 INFO [LocalDistributor.add] - Added node f96a88b9-5860-4065-aff9-0f0d921478d2 at http://172.23.0.5:5555. 14:39:21.894 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""d9d0ba0b00f69b2b4f7c529fd9302c19"",""spanId"": ""5ab44c98ba8f7956"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351961891059782,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:21.940 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""9cf105a71f9b0121cd068ac1285f9b10"",""spanId"": ""f0c6f3c66cf4ca9d"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351961939019355,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:21.943 INFO [LocalDistributor.add] - Added node a9edf3d1-2906-4da5-98bb-4105fd3a385b at http://172.23.0.8:5555. 14:39:22.060 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""cd9daec5599b407ddb7b91ab24befa1b"",""spanId"": ""c17797cab9ade213"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351962059097338,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:22.063 INFO [GridModel.setAvailability] - Switching node f96a88b9-5860-4065-aff9-0f0d921478d2 (uri: http://172.23.0.5:5555) from DOWN to UP 14:39:22.072 INFO [LocalDistributor.add] - Added node d8102fbe-6ad0-47b0-ac81-3011f541c0b4 at http://172.23.0.10:5555. 14:39:22.080 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""67146d757cb8891a8092f132a8116a91"",""spanId"": ""b215903d9837a2a5"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351962078728848,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:22.205 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""0b111cbc4b1e1b30be7a0f0662abbd84"",""spanId"": ""44b7d05915aab4cb"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351962204414010,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:22.208 INFO [GridModel.setAvailability] - Switching node a9edf3d1-2906-4da5-98bb-4105fd3a385b (uri: http://172.23.0.8:5555) from DOWN to UP 14:39:22.216 INFO [LocalDistributor.add] - Added node 176ef2c8-2d68-42b7-aaf1-f579d965923e at http://172.23.0.7:5555. 14:39:22.223 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""094e10b64e418228c4d75d5f930c0b29"",""spanId"": ""5703ea0aa6f1a012"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351962221740074,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:22.364 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""f823cda7401c2d5d9cb4a270d3b4e911"",""spanId"": ""f59242f7a1593f28"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351962363780010,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:22.367 INFO [GridModel.setAvailability] - Switching node d8102fbe-6ad0-47b0-ac81-3011f541c0b4 (uri: http://172.23.0.10:5555) from DOWN to UP 14:39:22.376 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""51df1a37ea0c2b734a806e502478cc5c"",""spanId"": ""b21cd0f3759e1432"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351962375822176,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fstatus"",""http.method"": ""GET""}}  14:39:22.379 INFO [GridModel.setAvailability] - Switching node 176ef2c8-2d68-42b7-aaf1-f579d965923e (uri: http://172.23.0.7:5555) from DOWN to UP 14:39:31.326 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""a9b98bde5886cf7e86800450d4a269f2"",""spanId"": ""831cdfbbb2ecfe93"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351971324647717,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fse\u002fgrid\u002fnode\u002fsession"",""http.method"": ""POST""}}  14:39:31.326 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""81d9d681ea366c3a89d98ea5bafa1118"",""spanId"": ""aaade92532456c77"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351971325812459,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fse\u002fgrid\u002fnode\u002fsession"",""http.method"": ""POST""}}  14:39:31.329 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""176c381a1f2fb02990d586446ba7f4b3"",""spanId"": ""155ec2416ff2003d"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351971326237128,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fse\u002fgrid\u002fnode\u002fsession"",""http.method"": ""POST""}}  14:39:31.333 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""79d7c73cb7b62e4b59a34f5e34a7021c"",""spanId"": ""0501177448163d1f"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351971332721570,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fse\u002fgrid\u002fnode\u002fsession"",""http.method"": ""POST""}}  14:39:31.336 WARN [SpanWrappedHttpHandler.execute] - Unable to execute request: null java.util.ConcurrentModificationException 	at java.util.HashMap$HashIterator.nextNode(HashMap.java:1445) 	at java.util.HashMap$KeyIterator.next(HashMap.java:1469) 	at org.openqa.selenium.grid.distributor.local.GridModel.findNode(GridModel.java:248) 	at org.openqa.selenium.grid.distributor.local.GridModel.setSession(GridModel.java:319) 	at org.openqa.selenium.grid.distributor.local.LocalDistributor.lambda$reserve$5(LocalDistributor.java:308) 	at org.openqa.selenium.grid.distributor.Distributor.newSession(Distributor.java:228) 	at org.openqa.selenium.grid.distributor.Distributor.lambda$new$0(Distributor.java:143) 	at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:183) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.grid.distributor.Distributor.execute(Distributor.java:293) 	at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.grid.router.Router.execute(Router.java:85) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.remote.http.Route$NestedRoute.handle(Route.java:261) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.grid.server.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:30) 	at org.openqa.selenium.grid.server.WrapExceptions.lambda$apply$0(WrapExceptions.java:36) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:46) 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) 	at java.lang.Thread.run(Thread.java:748) 14:39:31.336 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""79d7c73cb7b62e4b59a34f5e34a7021c"",""spanId"": ""f95888debe3bdc97"",""spanKind"": ""INTERNAL"",""eventTime"": 1607351971335449973,""eventName"": ""Added session into local session map"",""attributes"": {""logger"": ""org.openqa.selenium.grid.sessionmap.local.LocalSessionMap"",""session.id"": ""1d834bab67b836ec2af01f10365aa33b""}}  ```  ## Environment  OS: Ubuntu 16.04 Browser: Chrome Browser version: Grid Browser Driver version: Grid Language Bindings version: Java 4.0.0-alpha-7 Selenium Grid version (if applicable): 4.0.0-alpha-7-prerelease-20201009","closed","R-awaiting answer,","ham1","2020-12-09T14:50:27Z","2021-09-05T08:18:58Z"
"","9696","File Uploads Don't Work with Server","## üêõ Bug Report  We recently move to Selenium 4.0.0.beta4 and we found that file uploading is not working with Server. It works fine on local but get error `Selenium::WebDriver::Error::UnknownCommandError` with Server. As per issue #8524 this was fixed but somehow I still see this issue with 4.0.0.beta4  ## Last working Selenium Version 3.142.7  ## Stopped working in version: 4.0.0.beta4  ## To Reproduce I cannot share the details of application but I think you can reproduce it with any uploading option on page  ## Error       unknown command: unknown command: session/8123fe3a92a432334462657c28fa033e/se/file (Selenium::WebDriver::Error::UnknownCommandError)      #0 0x5645c63e5e89      /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/response.rb:56:in 'assert_ok'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/response.rb:35:in 'initialize'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/http/common.rb:83:in 'new'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/http/common.rb:83:in 'create_response'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/http/default.rb:109:in 'request'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/http/common.rb:59:in 'call'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/bridge.rb:576:in 'execute'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/bridge.rb:426:in 'upload'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/bridge.rb:410:in 'block in send_keys_to_element'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/bridge.rb:410:in 'map'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/remote/bridge.rb:410:in 'send_keys_to_element'     /Users/karimnarsindani/.rvm/gems/ruby-3.0.1/gems/selenium-webdriver-4.0.0.beta4/lib/selenium/webdriver/common/element.rb:208:in 'send_keys'  ## Expected behavior  File to be successfully upload  ## Acutal Behavior      unknown command: unknown command: session/8123fe3a92a432334462657c28fa033e/se/file (Selenium::WebDriver::Error::UnknownCommandError)      #0 0x5645c63e5e89   ## Environment  OS: All Browser: Chrome (We only support chrome) Browser version: 90.0 Language Bindings version: Ruby Selenoid: Latest Version","closed","","kndani","2021-07-29T19:47:33Z","2021-09-05T07:50:13Z"
"","9125","[py] deprecate all but `Options` and `Service` arguments in driver instantiation.","## üêõ Bug Report  We need the Chrome/Chromium/Ie `webdriver.py` class initialisation to only take `Service` and `Options` classes.  To get there we need to deprecate the rest of the arguments  Note: Remote doesn't need this deprecation, at least just yet.  To run the tests you need to `bazel test //py:test-chrome`   ## To Reproduce  Just read the code  Detailed steps to reproduce the behavior:  ## Expected behavior  A cleaner `__init__` is expected.  ## Test script or set of commands reproducing this issue   ## Environment  OS: All Browser: All Browser version:  Browser Driver version: all Language Bindings version: python Selenium Grid version (if applicable):","closed","C-py,","AutomatedTester","2021-01-31T22:32:41Z","2021-09-05T08:21:27Z"
"","8931","Very high and non configurable default timeouts in HttpClient.Builder","## üêõ Bug Report  We have an issue with IE11 and version 3.141.59 of selenium. I think the issue has already been reported as:  - https://github.com/SeleniumHQ/selenium/issues/8488  But my report is not about this issue, but about the non configurable defaults set here:  https://github.com/SeleniumHQ/selenium/blob/selenium-3.141.59/java/client/src/org/openqa/selenium/remote/http/HttpClient.java#L94  ## To Reproduce  The hanging happens randomly after around 17 to 20 executions of same test.  Calling Serenity PageObject.get() with a URL hangs suddenly for hours.  Making a thread dump shows following thread stack:  `""Forwarding newSession on session null to remote"" #1 prio=5 os_prio=0 cpu=4875.00ms elapsed=5219.50s tid=0x000002ddfa9cf000 nid=0x4da4 runnable  [0x000000f8f70fc000]    java.lang.Thread.State: RUNNABLE     at java.net.SocketInputStream.socketRead0(java.base@11.0.2/Native Method)     at java.net.SocketInputStream.socketRead(java.base@11.0.2/SocketInputStream.java:115)     at java.net.SocketInputStream.read(java.base@11.0.2/SocketInputStream.java:168)     at java.net.SocketInputStream.read(java.base@11.0.2/SocketInputStream.java:140)     at okio.Okio$2.read(Okio.java:140)     at okio.AsyncTimeout$2.read(AsyncTimeout.java:237)     at okio.RealBufferedSource.indexOf(RealBufferedSource.java:355)     at okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:227)     at okhttp3.internal.http1.Http1ExchangeCodec.readHeaderLine(Http1ExchangeCodec.java:242)     at okhttp3.internal.http1.Http1ExchangeCodec.readResponseHeaders(Http1ExchangeCodec.java:213)     at okhttp3.internal.connection.Exchange.readResponseHeaders(Exchange.java:115)     at okhttp3.internal.http.CallServerInterceptor.intercept(CallServerInterceptor.java:94)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)     at org.openqa.selenium.remote.internal.OkHttpClient$Factory$1.lambda$createClient$1(OkHttpClient.java:152)     at org.openqa.selenium.remote.internal.OkHttpClient$Factory$1$$Lambda$319/0x00000001003fe840.intercept(Unknown Source)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)     at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:43)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)     at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:94)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)     at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)     at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:88)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:142)     at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:117)     at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:229)     at okhttp3.RealCall.execute(RealCall.java:81)     at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)     at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105)     at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)     at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)     at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)     at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)     at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)     at org.openqa.selenium.ie.InternetExplorerDriver.run(InternetExplorerDriver.java:221)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:213)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:190)     at org.openqa.selenium.ie.InternetExplorerDriver.(InternetExplorerDriver.java:162)     at net.serenitybdd.core.webdriver.driverproviders.InternetExplorerDriverProvider.lambda$newInstance$0(InternetExplorerDriverProvider.java:75)     at net.serenitybdd.core.webdriver.driverproviders.InternetExplorerDriverProvider$$Lambda$304/0x00000001003cb840.newDriver(Unknown Source)     at net.serenitybdd.core.webdriver.driverproviders.ProvideNewDriver.withConfiguration(ProvideNewDriver.java:40)     at net.serenitybdd.core.webdriver.driverproviders.InternetExplorerDriverProvider.newInstance(InternetExplorerDriverProvider.java:71)     at net.thucydides.core.webdriver.WebDriverFactory.createWebDriver(WebDriverFactory.java:170)     at net.thucydides.core.webdriver.WebDriverFactory.newWebdriverInstance(WebDriverFactory.java:151)     - locked  (a net.thucydides.core.webdriver.WebDriverFactory)     at net.thucydides.core.webdriver.WebDriverFacade.newDriverInstance(WebDriverFacade.java:141)     at net.thucydides.core.webdriver.WebDriverFacade.newProxyDriver(WebDriverFacade.java:132)     at net.thucydides.core.webdriver.WebDriverFacade.getProxiedDriver(WebDriverFacade.java:102)     at net.thucydides.core.webdriver.WebDriverFacade.get(WebDriverFacade.java:172) ...`   Detailed steps to reproduce the behavior:  As explained in other bug, I don't have the reproduction scenario as it seems to be fully random.  Some notes still:  1) we have configured page load timeouts to 30 s calling:  `driver.manage().timeouts().pageLoadTimeout(30,` TimeUnit.SECONDS); `  But I don't think they apply to the issue here which seems to init of session with IExplore.  2) We have also set browserAttachTimeout to 10 seconds  ## Expected behavior  I would expect the default timeouts to be configurable through properties and set to much lower defaults. But maybe I missed something.   ## Test script or set of commands reproducing this issue  NA  ## Environment  OS:  Windows 10 Browser: IE 11 Browser version: 11.3986.14393.0 Browser Driver version:  Language Bindings version: Java 11.0.2 Selenium Grid version (if applicable): NA Serenity: 2.3.5 (https://github.com/serenity-bdd/serenity-core/releases/tag/v2.3.5)","closed","needs-triaging,","pmouawad","2020-12-02T20:40:18Z","2021-09-05T08:27:42Z"
"","9562","ChromeDriver failing to attach to ChromiumBrowser in application after upgrade from Cefsharp¬†89.0.170 to¬†90.6.70","## üêõ Bug Report  We have a UI automation suite that uses ChromeOptions.BinaryLocation to point at our windows application which in turn houses the chromiumbrowser that we want to connect to.¬†   As this starts up on a background thread and we normally get back a chromeDriver.¬†After upgrading from Cefsharp¬†89.0.170 to¬†90.6.70 we upgraded our corresponding ChromeDriver¬†to 90.0.4430.24 - but now we get a failure when initialising the ChromeDriver.¬†¬†  ChromeOptions options = new ChromeOptions(); ¬† ¬† ¬† ¬† options.AddArgument(""--no-sandbox""); ¬† ¬† ¬† ¬† options.AddArgument(""--disable-dev-shm-usage""); ¬† ¬† ¬† ¬† options.AddArgument(""--headless""); ¬† ¬† ¬† ¬† options.AddArgument(""--verbose""); ¬† ¬† ¬† ¬† options.AddArgument(""--log-path=c:\\tmp\\ChromeBrowser.log""); ¬† ¬† ¬† ¬† options.AddArgument(""--remote-debugging-port=9222""); ¬† ¬† ¬† ¬† options.AddArgument(@""user-data-dir="" + Path.GetTempPath()); ¬† ¬† ¬† ¬† options.AddArgument(""--profile-directory=Default"");  ¬† ¬† ¬† ¬† string anbPath = AnbRunner.AnbPath; ¬† ¬† ¬† ¬† anbPath = anbPath.Replace(""\\"", ""/""); ¬† ¬† ¬† ¬† anbPath = anbPath.Replace(""\"""", """"); ¬† ¬† ¬† ¬† options.BinaryLocation = anbPath;  mWebDriver = new ChromeDriver(currentDir, options, TimeSpan.FromSeconds(600));  The application starts up but immediately shuts down¬†and we get the following errors:Exception thrown: 'System.UnauthorizedAccessException' in ANB.UIAutomation.Framework.dll An exception of type 'System.UnauthorizedAccessException' occurred in ANB.UIAutomation.Framework.dll but was not handled in user code Access is denied. (Exception from HRESULT: 0x80070005 (E_ACCESSDENIED)) at interop.UIAutomationCore.IUIAutomationElement.get_CurrentName() at ANB.ScreenObjects.MainScreen..ctor() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\ScreenObjects\ANB\MainScreen.cs:line 30 at ANB.Helpers.Tasks.get_MainScreen() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\Helpers\Tasks.cs:line 90 at ANBP.ScreenObjects.ConnectToDataSourceDialog.get_Dialog() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\ScreenObjects\ANBP\ConnectToDataSourceDialog.cs:line 19 at ANBP.Helpers.ConnectToDataSourceHelper.IsDialogPresent() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\Helpers\ANBP\ConnectToDataSourceHelper.cs:line 24 at ANBP.Helpers.AnbpRunner.Run(String arguments) in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\Runners\AnbpRunner.cs:line 130 at ANB.Helpers.Tasks.RunANBP(String anbArguments) in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\Helpers\Tasks.cs:line 54 at ANB.Framework.ANBPTestBase.TestSuiteSetup() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\ANBPTestBase.cs:line 43 at ANBP.Tests.AutoFailExpected.TestSuiteSetup() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Tests\ANBP\Auto Fail Expected.cs:line 15 at ANB.Framework.ANBTestBase.RunBeforeTestSuite() in C:\RTC\Constable_Sandbox\Constable_AutomatedTest_Source Component\ANB.UIAutomation.Framework\ANBTestBase.cs:line 50  I believe the issue is that it's getting the Application briefly - but then as goes to query it with¬†IUIAutomationElement.get_CurrentName() the app closes.  I have to admit I did not set these tests up initially and so not the expert¬†in there, but I have tried setting up logging in the ChromeBrowser (as you can see in the chromeOptions) but it's not writing out to the log.  I can start the ChromeDriver in a cmd prompt by itself and I can start the app and run it by itself and that all works with the new CEF version 90.6.70...","closed","","Phatado","2021-06-11T15:20:44Z","2021-09-05T08:01:07Z"
"","9291","Too Many Open Files","## üêõ Bug Report  We have a pool of chromedrivers (10) that are rotating requests. 3.14 has been in production for years and has had no issues. We switched to beta and after about 10 minutes of running thousands of requests, we are getting the ""too many open files"" error on linux. No changes to our code.  [root@tst05 ec2-user]# ulimit -a core file size (blocks, -c) 0 data seg size (kbytes, -d) unlimited scheduling priority (-e) 0 file size (blocks, -f) unlimited pending signals (-i) 31377 max locked memory (kbytes, -l) 64 max memory size (kbytes, -m) unlimited open files (-n) 1024 pipe size (512 bytes, -p) 8 POSIX message queues (bytes, -q) 819200 real-time priority (-r) 0 stack size (kbytes, -s) 8192 cpu time (seconds, -t) unlimited max user processes (-u) 31377 virtual memory (kbytes, -v) unlimited file locks (-x) unlimited  The ""lsof"" command, quickly balloons to 2,000,000 in 10 minutes (getting thousands of these, the PID is just the wildfly container PID):  java 24029 jboss 1635u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1636r FIFO 0,11 0t0 5276106 pipe java 24029 jboss 1637w FIFO 0,11 0t0 5276106 pipe java 24029 jboss 1638u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1639r FIFO 0,11 0t0 5276107 pipe java 24029 jboss 1640w FIFO 0,11 0t0 5276107 pipe java 24029 jboss 1641u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1642r FIFO 0,11 0t0 5276108 pipe java 24029 jboss 1643w FIFO 0,11 0t0 5276108 pipe java 24029 jboss 1644u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1645w FIFO 0,11 0t0 5324005 pipe java 24029 jboss 1646r FIFO 0,11 0t0 5304978 pipe java 24029 jboss 1647r FIFO 0,11 0t0 6772505 pipe java 24029 jboss 1648r FIFO 0,11 0t0 5276545 pipe java 24029 jboss 1649r FIFO 0,11 0t0 5500458 pipe java 24029 jboss 1650w FIFO 0,11 0t0 6776069 pipe java 24029 jboss 1651u a_inode 0,12 0 7664 [eventpoll] java 24029 jboss 1652r FIFO 0,11 0t0 7122391 pipe java 24029 jboss 1653r FIFO 0,11 0t0 5325400 pipe java 24029 jboss 1654w FIFO 0,11 0t0 5297692 pipe java 24029 jboss 1655r FIFO 0,11 0t0 5273503 pipe java 24029 jboss 1656u a_inode 0,12 0 7664 [eventpoll]  ## To Reproduce  Crawl with a pool of 10 chromedrivers.  ## Expected behavior  too many open files should not occur, limits are very high.  ## Test script or set of commands reproducing this issue   public class ChromePool extends ResourcePool {  	private static Log log = LogFactory.getLog(ChromePool.class);  	private static ChromeOptions options;   	public static int JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS = 20000; 	public static String JAVASCRIPT_DIR = ""c:/temp/javascript-tmp""; 	public static final boolean isWindows; 	 	private static String webVitalsSnippet = null; 	 	static {  		System.setProperty(""webdriver.chrome.silentOutput"", ""true""); 		 		isWindows = System.getProperty(""os.name"").toLowerCase().startsWith(""windows""); 		 		/** 		 * Cleanup orphaned chromedriver and chrome instances, and setup new environment 		 */ 		if (isWindows) { 			 			JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS = 20000; 			JAVASCRIPT_DIR = ""c:/temp/javascript-tmp"";  			killChromeProcesses(); 			killChromeDriverProcesses();  			System.setProperty(""webdriver.chrome.driver"", ""y:/code/chromedriver.exe""); //TODO make catalogControl  			options = new ChromeOptions();   			options.setBinary(""C:/Program Files (x86)/Google/Chrome/Application/chrome.exe""); //TODO make catalogControl 			 		} else { // linux 			 			JAVASCRIPT_DIR = ""/tmp/javascript-tmp""; 			 			killChromeProcesses(); 			killChromeDriverProcesses();  			System.setProperty(""webdriver.chrome.driver"", ""/usr/bin/chromedriver"");   			options = new ChromeOptions();   			options.setBinary(""/usr/bin/chrome"");   		}  	    try {  			FileIO.createDir(JAVASCRIPT_DIR);  			File dir = new File(JAVASCRIPT_DIR); 			String[] children = dir.list(); 			for (int i = 0; i < children.length; i++) { 				FileIO.deleteDir(new File(dir, children[i])); 			}  	    } catch (Exception e) { 	    	log.error("""",e); 	    }  	} 	 	private static ChromePool pool = null;  	private static int NUM_JAVASCRIPT_PARSERS = 9; // 2x backlink (3) + 3x crawler (1) 	private ChromePool(int maxDrivers) {           super(maxDrivers, true);         createPool();  	}       public static ChromePool getInstance() {          if (pool == null) {             pool = new ChromePool(NUM_JAVASCRIPT_PARSERS); // 1 for each crawler, and 3 backlink analyzers         }         return pool;      }       @Override     protected WebDriver createObject() {      	return createDriver();     	     }      private WebDriver createDriver() {     	     	ChromiumDriver driver = null; 		try {   			options.addArguments(""--silent"", ""--headless"", ""--blink-settings=imagesEnabled=false"", ""--disable-blink-features"", ""--disable-blink-features=AutomationControlled"", ""--disable-gpu"", ""--no-sandbox"", ""--window-size=1920,1200"", ""--ignore-certificate-errors"", ""--disable-application-cache"");   			options.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);              LoggingPreferences logPrefs = new LoggingPreferences();             logPrefs.enable(LogType.PERFORMANCE, Level.ALL);             options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);             options.setCapability( ""goog:loggingPrefs"", logPrefs );             options.setPageLoadStrategy(PageLoadStrategy.EAGER);  			DriverService.Builder serviceBuilder = new ChromeDriverService.Builder().withSilent(true); 			ChromeDriverService chromeDriverService = (ChromeDriverService)serviceBuilder.build();   			if (!isWindows) { 				chromeDriverService.sendOutputTo(new FileOutputStream(""/dev/null"")); 			} 			 			int localRetryCount2 = 0; 			boolean lastRequestGood2 = false;         	while (localRetryCount2 < 3 && !lastRequestGood2){ 				try { 					driver = new ChromeDriver(chromeDriverService, options); 					lastRequestGood2 = true; 				} catch (Exception e) { 					log.warn(""localRetryCount2: "" + localRetryCount2,e); 					Thread.sleep(5000); 					localRetryCount2++; 				}         	}         	         	if (!lastRequestGood2) {         		log.fatal(""Unable to create ChromeDriver after 3 retries..."");         	}         	 			driver.manage().timeouts().pageLoadTimeout(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS, TimeUnit.MILLISECONDS); 			driver.manage().timeouts().setScriptTimeout(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS, TimeUnit.MILLISECONDS); 			 		} catch (Exception e) {  			log.error("""",e);  		} 		 		return driver;      }           	@Override 	public WebDriver acquire() throws Exception { 		WebDriver driver = super.acquire(); 		 		if (driver == null || driver.getWindowHandles().size()  100 && (System.currentTimeMillis() - threadTimer) < ChromePool.JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS) { 							Thread.sleep(1000); 							diff = Math.abs(content.length() - driver.getPageSource().length()); 							content = driver.getPageSource(); 						} 						 						long navigationStart = (Long)js.executeScript(""return window.performance.timing.navigationStart""); 						long responseStart = (Long)js.executeScript(""return window.performance.timing.responseStart"");  						timer = responseStart - navigationStart; 						  						try { 							new Actions(driver).moveByOffset(50, 50).contextClick().build().perform();  						} catch (MoveTargetOutOfBoundsException mtobe) { 						}  					} catch (Exception e) { 						log.warn(""Problem getting content and clicking for URL: "" + uRL.toExternalForm(),e); 					} 					 					try { 						LogEntries logs = driver.manage().logs().get(LogType.PERFORMANCE);  						URL currentURL = null; 						try { 							currentURL = new URL(driver.getCurrentUrl()); 						} catch (Exception e) { 							currentURL = uRL; 							log.error(""["" + uRL.toExternalForm() + ""] defaulting back to original URL. driver.getCurrentUrl: "" + driver.getCurrentUrl(),e); 						} 						String messageUrlString = null;						 			            String redirectedURL = null; 			            List responses = new LinkedList(); 			             			            for (Iterator it = logs.iterator(); it.hasNext();) { 			                LogEntry entry = it.next();  			                try { 			                    JSONObject json = new JSONObject(entry.getMessage());  			                    JSONObject message = json.getJSONObject(""message""); 			                    String method = message.getString(""method"");  			                    if (method != null && RESPONSE_RECEIVED.equals(method)) { 			                         			                    	JSONObject params = message.getJSONObject(""params""); 			                        JSONObject response = params.getJSONObject(""response""); 			                         			                        responses.add(response); 			                        messageUrlString = response.getString(""url"");  			                        URL messageURL = null; 			                        try { 			                        	messageURL = new URL(messageUrlString); 			                        } catch (Exception e) { 			                        }  			                        if (messageURL != null &&  			                        		 			                        		(Util.isServerHostSame(messageURL.getHost(), currentURL.getHost()) ||  			                        				Util.isServerHostSame(messageURL.getHost(), uRL.getHost())) ) { 			                        	 			                        	responseCode = String.valueOf(response.getInt(""status"")); 			                            JSONObject headers = response.getJSONObject(""headers""); 			                             			                            try { 				                            redirectedURL = (String) getIgnoreCase(headers,""location""); 			                            } catch (JSONException je) { 			                            } 			                            try { 				                            contentType = (String) getIgnoreCase(headers,""content-type"");  			                            } catch (JSONException je) { 				                            try { 					                            contentType = (String) getIgnoreCase(response,""mimeType"");  				                            } catch (JSONException je2) { 				                            	log.error(""no content-type or mimeType for messageUrlString: "" + messageUrlString); 				                            } 			                            } 			                            try { 				                            encoding = (String) getIgnoreCase(headers,""content-encoding""); 			                            } catch (JSONException je) { 			                            } 			                             			                            break; 			                        } 			                         			                    } 			                     			                } catch (JSONException e) { 			                    log.error("""",e); 			                } 			                 			            } // next network log line  				        String updatedURL = null; 				        if (redirectedURL != null){ 				        	updatedURL = redirectedURL; 				        } else { 				        	updatedURL = currentURL.toExternalForm(); 				        }  				        updatedURL = Util.convertRelativeURLToAbsolute(uRL, updatedURL); 				        updatedURL = Util.formatURL(updatedURL);  				        uRL = new URL(updatedURL);  			        	int responseCodeInt = Integer.parseInt(responseCode); 				        if (responseCodeInt < 400){  					        success = true;  					        if (contentType == null ||  					        		(contentType.indexOf(""text/css"") == -1 &&  					        				contentType.indexOf(""text/plain"") == -1 &&  					        				contentType.indexOf(""text/html"") == -1 &&  					        				contentType.indexOf(""text/csv"") == -1 &&  					        				contentType.indexOf(""text/javascript"") == -1 &&  					        				contentType.indexOf(""application/xml"") == -1 &&  					        				contentType.indexOf(""application/json"") == -1) ){ 					        	 					        	log.info(""["" + uRL.toExternalForm() + ""] ["" + driver.getCurrentUrl() + ""] ["" + messageUrlString + ""] content being set to null because contentType = "" + contentType +  					        			"", responses: "" + responses); 					        	success = true; 					        	content = null; 					        	return;  					        } 					         				        }  					} catch (JavascriptException jse) { 						log.warn("""",jse); 					} catch (UnhandledAlertException uae2) { 						log.warn(""alert exception"",uae2); 					} catch (TimeoutException tme) { 						log.warn(""timedOut!"",tme); 					}  					done = true; 					 				} catch (UnreachableBrowserException ube) { 					retryCount++; 					ChromePool.getInstance().recycle(driver, true); 					Thread.sleep(new BigDecimal(Math.random() * 5000).longValue()); 					driver = (ChromiumDriver)ChromePool.getInstance().acquire(); 				} catch (WebDriverException wde) { 					if (wde.getMessage().contains(""chrome not reachable"") || wde.getMessage().contains(""Remote browser did not respond"") || wde.getMessage().contains(""cannot determine loading status"")) { 						retryCount++; 						ChromePool.getInstance().recycle(driver, true); 						Thread.sleep(new BigDecimal(Math.random() * 5000).longValue()); 						driver = (ChromiumDriver)ChromePool.getInstance().acquire(); 					} else { 						throw wde; 					} 				}  			} 			 			if (!done) { 				throw new InterruptedException(""Unable to run JavaScriptParserThread due to too many retries. Webpage: "" + uRL.toExternalForm()); 			} 			  		} catch(InterruptedException ie) {     		log.warn(""This Javascript thread was timed out: "" + uRL.toExternalForm(), ie);     		timedOut = true;     		recycleError = true; 		} catch(TimeoutException te) {     		log.warn(""Chrome Driver thread timed out: "" + uRL.toExternalForm());     		timedOut = true;     		recycleError = true; 		} catch(WebDriverException e) {  			int errorIndex = e.getMessage().indexOf(""unknown error: net::""); 			if (errorIndex >= 0) { 				responseCode = e.getMessage().substring(errorIndex+20, e.getMessage().indexOf(""\n"")); 				log.warn(""["" + uRL.toExternalForm() + ""] ERROR: "" + responseCode); 			} else { 				log.error(""["" + uRL.toExternalForm() + ""] timed out."", e); 	    		timedOut = true; 	    		recycleError = true; 			} 			 		} catch(Exception e) { 			log.error(uRL.toExternalForm(),e);     		timedOut = true; 		} finally { 			try { 				ChromePool.getInstance().recycle(driver, recycleError); 			} catch (Exception e) { 				log.error("""",e); 			} 		}  	} 	 	public Object getIgnoreCase(JSONObject jobj, String key) throws JSONException {  	    Iterator iter = jobj.keys(); 	    while (iter.hasNext()) { 	        String key1 = iter.next(); 	        if (key1.equalsIgnoreCase(key)) { 	            return jobj.get(key1); 	        } 	    }  	    throw new JSONException(""no find"");  	}  	 	  }   import java.util.concurrent.ArrayBlockingQueue; import java.util.concurrent.BlockingQueue; import java.util.concurrent.locks.ReentrantLock;  public abstract class ResourcePool {     private final BlockingQueue pool;     private final ReentrantLock lock = new ReentrantLock();     private int createdObjects = 0;     private int size;      protected ResourcePool(int size) {         this(size, false);     }      protected ResourcePool(int size, Boolean dynamicCreation) {         // Enable the fairness; otherwise, some threads may wait forever.         pool = new ArrayBlockingQueue(size, true);         this.size = size;         if (!dynamicCreation) {             lock.lock();         }     }      public Resource acquire() throws Exception {         if (!lock.isLocked()) {             if (lock.tryLock()) {                 try {                     ++createdObjects;                     return createObject();                 } finally {                     if (createdObjects < size) lock.unlock();                 }             }         }         return pool.take();     }      public void recycle(Resource resource, boolean error) throws Exception {         // Will throws Exception when the queue is full,         // but it should never happen.         pool.add(resource);     }      public void createPool() {         if (lock.isLocked()) {             for (int i = 0; i < size; ++i) {                 pool.add(createObject());                 createdObjects++;             }         }     }      protected abstract Resource createObject(); }   ## Environment  OS: AWS EC2 Amazon Linux 2 AMI Browser: Chrome (headless) Browser version: Google Chrome 88.0.4324.182 Browser Driver version: ChromeDriver 88.0.4324.96 Language Bindings version: Java 8 Selenium Grid version (if applicable): 4.0.0-beta-1","closed","needs-triaging,","githubuser100007","2021-03-16T17:07:24Z","2021-09-05T08:12:12Z"
"","9377","C# - not able retrieving browser logs with RemoteWebDriver","## üêõ Bug Report  We are using Selenium Grid 4 and are not able retrieving browser log information with the RemoteWebDriver (see below code). It works great when using the python library selenium==4.0.0.b2  When getting the Logs (driver.Manage().Logs) the private field isLogSupported is always false. When just using the ChromeWebDriver  isLogSupported is true and it is possible retrieving the browser logs.  Does it means that retrieving logs with the RemoteWebDriver in C# is at the moment not supported?  ## Test script or set of commands reproducing this issue  ```csharp var options = new ChromeOptions(); options.SetLoggingPreference(LogType.Browser, LogLevel.All);  var driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""),    options.ToCapabilities(), TimeSpan.FromMinutes(1));  RunTest(driver);  // availableLogTypes are always empty when using RemoteWebDriver var logs = driver.Manage().Logs; var availableLogTypes = logs.AvailableLogTypes; var browserLogs = logs.GetLog(LogType.Browser); ```  ## Environment Selenium.WebDriver 4.0.0-beta2 Selenium Grid 4: selenium/standalone-chrome:4.0.0-beta-3-prerelease-20210402","closed","needs-triaging,","DavidStahl97","2021-04-13T10:47:34Z","2021-09-11T00:05:14Z"
"","9130","Selenium::WebDriver::Error::WebDriverError: unexpected response, code=200 content-type=""""","## üêõ Bug Report  We are upgrading our project to ruby 3.0 and receive the following error when doing the necessary updates of all gems including the `selenium-webdriver`  (see entire stacktrace below):   `Selenium::WebDriver::Error::WebDriverError:  unexpected response, code=200 content-type=""""`  The setup is as follows:  - ruby-3.0 - docker image `selenium/standalone-chrome:4.0.0` - selenium-webdriver (~> 4.0.0.alpha7) - webdrivers (4.5.0) - capybara (3.35.3)  Behavior is similar in running on Mac OSX and on e.g. circleci with linux images  I tracked it down to `Selenium::WebDriver::Remote::Http::Common.create_response`. It receives an empty `content_type`. When monkeypatching (üôà ) this method and checking if the content looks like json `if content_type.include?('application/json') || body.start_with?('{')` it works. Of course this is not a proper solution but it shows that some component (I guess the `selenium/standalone-chrome:4.0.0`) is not returning the `content_type` correctly for retrieving the current browser.  ## To Reproduce  Create a project with the above gems and call `browser = Capybara.current_session.driver.browser`  ## Expected behavior  It returns a correct content_type or knows how to handle an otherwise valid response.  ## Environment  OS: OSX, Ubuntu Browser: Chrome Browser version: '87.0.4280.88' Browser Driver version:  Language Bindings version:  Selenium Grid version (if applicable):  ## Entire stacktrace ```ruby             browser = Capybara.current_session.driver.browser                          Selenium::WebDriver::Error::WebDriverError:               unexpected response, code=200, content-type=""""               {                 ""value"": {                   ""sessionId"": ""d0de119d9869a46b7aa672b39051caa1"",                   ""capabilities"": {                     ""acceptInsecureCerts"": false,                     ""browserName"": ""chrome"",                     ""browserVersion"": ""88.0.4324.96"",                     ""chrome"": {                       ""chromedriverVersion"": ""88.0.4324.96 (68dba2d8a0b149a1d3afac56fa74648032bcf46b-refs\u002fbranch-heads\u002f4324@{#1784})"",                       ""userDataDir"": ""\u002ftmp\u002f.com.google.Chrome.1byTAz""                     },                     ""goog:chromeOptions"": {                       ""debuggerAddress"": ""localhost:46515""                     },                     ""networkConnectionEnabled"": false,                     ""pageLoadStrategy"": ""normal"",                     ""platformName"": ""linux"",                     ""proxy"": {                     },                     ""se:options"": {                       ""cdp"": ""http:\u002f\u002f192.168.176.3:4444\u002fsession\u002fd0de119d9869a46b7aa672b39051caa1\u002fse\u002fcdp""                     },                     ""setWindowRect"": true,                     ""strictFileInteractability"": false,                     ""timeouts"": {                       ""implicit"": 0,                       ""pageLoad"": 300000,                       ""script"": 30000                     },                     ""unhandledPromptBehavior"": ""dismiss and notify"",                     ""webauthn:extension:largeBlob"": true,                     ""webauthn:virtualAuthenticators"": true                   }                 }               }             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/remote/http/common.rb:98:in `create_response'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/remote/http/default.rb:110:in `request'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/remote/http/common.rb:64:in `call'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/remote/bridge.rb:567:in `execute'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/remote/bridge.rb:52:in `create_session'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/common/driver.rb:328:in `create_bridge'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/common/driver.rb:77:in `initialize'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/remote/driver.rb:46:in `initialize'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/common/driver.rb:61:in `new'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver/common/driver.rb:61:in `for'             # ./vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.alpha7/lib/selenium/webdriver.rb:90:in `for'             # ./vendor/bundle/ruby/3.0.0/gems/capybara-3.35.3/lib/capybara/selenium/driver.rb:83:in `browser' ```","closed","C-rb,","lvonk","2021-02-02T07:59:48Z","2021-09-05T08:19:11Z"
"","9302","Chrome not reachable exception while running selenium tests inside aws lambda","## üêõ Bug Report  We are seeing `chrome not reachable` exception while running selenium ui tests on aws lambda.   I wonder if some one else met this problem? Solved it? Worked around it? Maybe met similar problems on dockers or virtual machines?   Any body that has any suggestion of how to continue and explore this problem, please share. Also, if there is any new information that I can supply or provide, please let me know.   Disclaimer: About five months ago, I [published](https://bugs.chromium.org/p/chromium/issues/detail?id=1143503#c2) a similar bug on chromium bug list. Unfortunately, no happy news there. So I am trying my luck here as well.   ## To Reproduce  Step 1: Create AWS account, and then create the AWS lambda running selenium. For more information you can read docs [docs](https://moatazeldebsy.medium.com/ui-testing-using-selenium-webdriver-and-chrome-inside-aws-lambda-77a17ec64862)  Step 2: Then you can run the following test  ``` @Test public void appleAirPodsTest() {     navigateToURL(""https://www.apple.com/airpods-pro/"");      for(int i = 0; i < 10000; i++) {         scrollDownBy(0, 10);     } } ```  Or  ``` @Test public void appleIphone12Test() {     navigateToURL(""https://www.apple.com/iphone-12-pro/"");      for(int i = 0; i < 10000; i++) {         scrollDownBy(0, 10);     } } ```  ## Expected behavior  We expected the tests to finish the run, the driver to be terminated, the logs to be printed (published), and everyone to be happy ever since. However, the reality is slightly different - it occurs that the test ""fails"" right after 60-90 seconds into the run.   We get the following message  ``` org.openqa.selenium.WebDriverException: chrome not reachable   (Session info: headless chrome=89.0.4389.0) Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: '169.254.110.181', ip: '169.254.110.181', os.name: 'Linux', os.arch: 'amd64', os.version: '4.14.214-164.339.amzn2.x86_64', java.version: '1.8.0_201' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.0, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: /tmp/user-data}, goog:chromeOptions: {debuggerAddress: localhost:35123}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 149ae90b4fb8c1094acda489b3e86214 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489) 	at com.duda.webdriver.perfTestsSites.AppleIphone12Test.scrollDownBy(AppleIphone12Test.java:17) 	at com.duda.webdriver.perfTestsSites.AppleIphone12Test.appleIphone12Test(AppleIphone12Test.java:25) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:744) 	at org.testng.TestRunner.run(TestRunner.java:602) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226) 	at org.testng.TestNG.runSuites(TestNG.java:1144) 	at org.testng.TestNG.run(TestNG.java:1115) 	at com.duda.webdriver.elduderino.core.Main.runTest(Main.java:85) 	at com.duda.webdriver.elduderino.core.Main.machineMain(Main.java:55) 	at com.duda.webdriver.elduderino.core.Main.main(Main.java:24) ```  Sometimes, the chrome also outputs the following message   ``` [1027/164354.465008:FATAL:memory.cc(40)] Out of memory. size=262144 ```  ## More info  ### Not consistent problem  It is an interesting fact that the problem is not a consistent one, but rather statistical. For instance, running the tests above 30 times may result in 12 `chrome not reachable` failures and 18 successes. There are tests where some of them will file due to crashes for 5/30 and some 20/30.    ### The memory issue  We struggle to understand what memory runs out? At first, we thought that it might be the RAM that is used by Lambda. So, what we did is to increase the lambda to MAX of 3Gb RAM - no help, still same problems.   We also noticed that the max memory usage of the lambda is approx 1.1Gb - chrome, chromedriver, java (general), and java tests/infra. Everything that runs on lambda. So we concluded that it is probably not the lambda memory issues.  ### Local/BrowserStack Runs  We could not recreate the problem running chrome heedlessly/full on ""regular"" local computer. We tried on Linux, Windows, and Macs. No success there. The same goes for BrowserStack - we can run the same test on the browser stack 30 times and it will pass. No crashes there.  ### Chrome versions tested and test relations  1. First, we met the problem of migrating from chrome 69 to 74. At first, we didn't give it much attention because it was very scarce. 2. Seven months ago we migrated to 84. By doing it, we began to see it much more often. We noticed that tests with multi-tabs, or multi navigation, or tests with multi drivers running at the same time, have a greater probability to fail. We assumed that those are intense and heavy, and probably cause that problem. So what we did is refactoring part of our ""problematic tests"" to fit 84. Partially, it helped. Worthy to note that not all tests involving multi-tab, multi navigation, or multi drivers are failing due to this problem. 3. Migrating from 84 to 87/88 remained +- the same as 84. So no news there. 4. Now we are trying to migrate to 89, and it is too hard ... we are seeing these crashes hundreds of times each run on our ci/cd.  We also thought that there might be some relevance to some of our tests. However, we saw that on each browser version and each run there are different type of tests that fail. So no consistency there.    ## Environment  #### Operating System Name: Linux Architecture: amd64 OS Version: 4.14.214-164.339.amzn2.x86_64  #### Browser Vendor: Chromium Version: >= 79  #### Selenium/Language Java: 1.8.0_201 Binding version: 3.141.0  #### Chrome flags  ``` ""--headless"", ""--disable-gpu"", ""--no-sandbox"", ""--disable-dev-shm-usage"", ""--user-data-dir=/tmp/user-data"", ""--enable-logging"", ""--v=1"", ""--single-process"", ""--data-path=/tmp/data-path"", ""--homedir=/tmp"", ""--disk-cache-dir=/tmp/cache-dir"", ""--enable-precise-memory-info"" ```","closed","","avikha","2021-03-18T18:34:33Z","2021-09-05T08:10:47Z"
"","9303","'Chrome not reachable' error when running selenium in AWS Lambda","## üêõ Bug Report  We are seeing `chrome not reachable` exception while running selenium ui tests on aws lambda.   I also [published](https://bugs.chromium.org/p/chromium/issues/detail?id=1143503#c2) a similar bug on chromium bug list. Unfortunately, there is still no happy news there.  ## To Reproduce  Step 1: Create AWS account, and then create the AWS lambda running selenium. Similar to what you can find [here](https://moatazeldebsy.medium.com/ui-testing-using-selenium-webdriver-and-chrome-inside-aws-lambda-77a17ec64862)  Step 2: Then you can run the following test  ``` @Test public void appleAirPodsTest() {     navigateToURL(""https://www.apple.com/airpods-pro/"");      for(int i = 0; i < 10000; i++) {         scrollDownBy(0, 10);     } } ```  Or  ``` @Test public void appleIphone12Test() {     navigateToURL(""https://www.apple.com/iphone-12-pro/"");      for(int i = 0; i < 10000; i++) {         scrollDownBy(0, 10);     } } ```  The _Apple_ sites were chosen because they are rich, beautiful, interactive, and contain a lot of animations and modern techniques. However, this problem happens in our internal platform, not related to _Apple_ at all. And, not related to scroll. It happens in all different test cases.   ## Expected behavior  We expected the tests to finish the run, the driver to be terminated, the logs to be printed (published), and everyone to be happy ever since. However, the reality is slightly different - it occurs that the test ""fails"" right after 60-90 seconds into the run.   We get the following message  ``` org.openqa.selenium.WebDriverException: chrome not reachable   (Session info: headless chrome=89.0.4389.0) Build info: version: 'unknown', revision: 'unknown', time: 'unknown' System info: host: '169.254.110.181', ip: '169.254.110.181', os.name: 'Linux', os.arch: 'amd64', os.version: '4.14.214-164.339.amzn2.x86_64', java.version: '1.8.0_201' Driver info: org.openqa.selenium.chrome.ChromeDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.0, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: /tmp/user-data}, goog:chromeOptions: {debuggerAddress: localhost:35123}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 149ae90b4fb8c1094acda489b3e86214 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:489) 	at com.duda.webdriver.perfTestsSites.AppleIphone12Test.scrollDownBy(AppleIphone12Test.java:17) 	at com.duda.webdriver.perfTestsSites.AppleIphone12Test.appleIphone12Test(AppleIphone12Test.java:25) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108) 	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661) 	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869) 	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109) 	at org.testng.TestRunner.privateRun(TestRunner.java:744) 	at org.testng.TestRunner.run(TestRunner.java:602) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340) 	at org.testng.SuiteRunner.run(SuiteRunner.java:289) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226) 	at org.testng.TestNG.runSuites(TestNG.java:1144) 	at org.testng.TestNG.run(TestNG.java:1115) 	at com.duda.webdriver.elduderino.core.Main.runTest(Main.java:85) 	at com.duda.webdriver.elduderino.core.Main.machineMain(Main.java:55) 	at com.duda.webdriver.elduderino.core.Main.main(Main.java:24) ```  Sometimes, the chrome also outputs the following message   ``` [1027/164354.465008:FATAL:memory.cc(40)] Out of memory. size=262144 ```  ## More info  ### Not consistent problem  It is an interesting fact that the problem is not a consistent one, but rather statistical. For instance, running the tests above 30 times may result in 12 `chrome not reachable` failures and 18 successes. There are tests where some of them will fail due to crashes for 5/30 and some 20/30.    ### The memory issue  We struggle to understand what memory runs out? At first, we thought that it might be the RAM that is used by Lambda. So, what we did is to increase the lambda to MAX of 3Gb RAM - no help, still same problems.   We also noticed that the max memory usage of the lambda is approx 1.1Gb - chrome, chromedriver, java (general), and java tests/infra. Everything that runs on lambda. So we concluded that it is probably not the lambda memory issues.  ### Local/BrowserStack Runs  We could not recreate the problem running chrome heedlessly/full on ""regular"" local computer. We tried on Linux, Windows, and Macs. No success there. The same goes for BrowserStack - we can run the same test on the browser stack 30 times and it will pass. No crashes there.  ### Chrome versions tested and test relations  1. First, we met the problem of migrating from chrome 69 to 74. At first, we didn't give it much attention because it was very scarce. 2. Seven months ago we migrated to 84. By doing it, we began to see it much more often. We noticed that tests with multi-tabs, or multi navigation, or tests with multi drivers running at the same time, have a greater probability to fail. We assumed that those are intense and heavy, and probably cause that problem. So what we did is refactoring part of our ""problematic tests"" to fit 84. Partially, it helped. Worthy to note that not all tests involving multi-tab, multi navigation, or multi drivers are failing due to this problem. 3. Migrating from 84 to 87/88 remained +- the same as 84. So no news there. 4. Now we are trying to migrate to 89, and it is too hard ... we are seeing these crashes hundreds of times each run on our ci/cd.  We also thought that there might be some relevance to some of our tests. However, we saw that on each browser version and each run there are different type of tests that fail. So no consistency there.    ## Environment  #### Operating System Name: Linux Architecture: amd64 OS Version: 4.14.214-164.339.amzn2.x86_64  #### Browser Vendor: Chromium Version: >= 79  #### Selenium/Language Java: 1.8.0_201 Binding version: 3.141.0  #### Chrome flags  ``` ""--headless"", ""--disable-gpu"", ""--no-sandbox"", ""--disable-dev-shm-usage"", ""--user-data-dir=/tmp/user-data"", ""--enable-logging"", ""--v=1"", ""--single-process"", ""--data-path=/tmp/data-path"", ""--homedir=/tmp"", ""--disk-cache-dir=/tmp/cache-dir"", ""--enable-precise-memory-info"" ```","closed","","avikha","2021-03-18T18:45:17Z","2021-09-05T08:10:46Z"
"","9274","The browser hangs after using click() method","## üêõ Bug Report  We are having a problem with some of our test cases when running them on Angular project, what we are doing is we invoke the click method on a div element in a grid component (ag-grid based) to trigger an action, when we do that the action seems to happen but the browser hangs until we do a manual action on the screen like mouse move on top of the page! after that, the browser continues the execution and the remaining test cases resume normally.   The problem cannot be reproduced manually at all. We were able to reproduce the issue on Firefox using the latest version of the driver.  As a workaround, we used the JavaScript executer method and it worked fine.   Note: we are using Xpath to get the element before we click on it, we also tried to use CSS selector too and got the same problem.   ## Environment  OS: Windows 10 and  OSX Browser: Firefox Browser version: FireFox 86.0 (64-bit)  Browser Driver version: Mozilla 0.29.0 (2021-01-14, cf6956a5ec8e) Language Bindings version: Java","closed","R-awaiting answer,","YazeedFares","2021-03-13T00:00:31Z","2021-09-05T08:08:44Z"
"","9226","Node not attaching to hub due to ""delay must be less than the maxDuration"" error 4.0.0-beta-1-20210215","## üêõ Bug Report  version: 4.0.0-beta-1-20210215 When deploy grid in k8s, nodes are not registering with grid. Reason: `kubectl logs test-selenium-chrome-54777b787-f94mf  2021-03-01 16:14:07,017 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing 2021-03-01 16:14:07,099 INFO supervisord started with pid 7 2021-03-01 16:14:08,101 INFO spawned: 'xvfb' with pid 9 2021-03-01 16:14:08,102 INFO spawned: 'vnc' with pid 10 2021-03-01 16:14:08,103 INFO spawned: 'selenium-node' with pid 11 2021-03-01 16:14:08,106 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2021-03-01 16:14:08,106 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) 2021-03-01 16:14:08,106 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) Configuring server... Setting up SE_NODE_HOST... Setting up SE_NODE_PORT... Starting Selenium Grid Node with configuration:  [events] publish = ""tcp://test-selenium-hub:4442"" subscribe = ""tcp://test-selenium-hub:4443""  [node] max-concurrent-sessions = 1  Picked up JAVA_TOOL_OPTIONS: -Xmx700m 16:14:11.505 INFO [LogManager$RootLogger.log] - Using the system default encoding 16:14:11.700 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 16:14:12.305 INFO [UnboundZmqEventBus.] - Connecting to tcp://test-selenium-hub:4442 and tcp://test-selenium-hub:4443 16:14:12.608 INFO [UnboundZmqEventBus.] - Sockets created 16:14:12.709 INFO [UnboundZmqEventBus.] - Event bus ready 16:14:13.199 INFO [NodeServer.createHandlers] - Reporting self as: http://10.5.90.151:5555 16:14:13.409 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 1 times 16:14:13.500 INFO [Node.] - Binding additional locator mechanisms: name, id Exception in thread ""main"" java.lang.IllegalStateException: delay must be less than the maxDuration 	at net.jodah.failsafe.internal.util.Assert.state(Assert.java:38) 	at net.jodah.failsafe.RetryPolicy.withDelay(RetryPolicy.java:415) 	at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:193) 	at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:183) 	at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:224) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$2(TemplateGridCommand.java:101) 	at org.openqa.selenium.grid.Main.launch(Main.java:154) 	at org.openqa.selenium.grid.Main.go(Main.java:88) 	at org.openqa.selenium.grid.Main.main(Main.java:54) `  ## To Reproduce  I found the cause, which is part of this commit a) https://github.com/SeleniumHQ/selenium/commit/8500500c82f088e64afc7496e706b4c590e994f0#diff-5e7836f90bf50768ae656f9ddcfec06a3c33e83f277dd0662b67770edcc06f29  Cause: The name of ""--register-period"" should be ""register-period"" and not ""register-cycle""  b) https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-beta-1/java/server/src/org/openqa/selenium/grid/node/config/NodeOptions.java#L89  Here you can see, getRegisterPeriod() calls with name ""register-period"", but because there is no ""register-period"" in a), it defaults to 1, but getRegisterCycle gets 10, hence the above error. ""delay must be less than the maxDuration""  ## Environment  OS: LINUX Language Bindings version: Java Selenium Grid version (if applicable): 4.0.0-beta-1-20210215","closed","C-grid,","ambirag","2021-03-01T17:11:58Z","2021-09-05T08:08:32Z"
"","9626","Selenium 4 - Chromium functions are not available with MSEdgeDriver in TS/JS","## üêõ Bug Report  Using the **setNetworkConditions** function from Chrome DevTools in Selenium 4 (previously available in Selenium 3 with the edge-selenium-tools project) returns the following error:  `[error] this.getDriver(...).setNetworkConditions is not a function`  Due to our recent upgrade to Selenium 4 I read some of the PRs regarding MS Edge and Chromium and believe [edge.js](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/edge.js) Driver might need to extend chromium for these to be available.  PR #9239 @harsha509   ## To Reproduce  ``` await this.getDriver().setNetworkConditions({         offline: true,         latency: 0, // Additional latency (ms).         download_throughput: 0, // Maximal aggregated download throughput.         upload_throughput: 0 // Maximal aggregated upload throughput.   }); ```  Setting this up in a test and running with MS Edge browser will return the above error.   ## Expected behavior  Expected the function to be available in Selenium 4 as per the [edge-selenium-tools](https://github.com/microsoft/edge-selenium-tools/tree/main/js) description.  ## Test script or set of commands reproducing this issue  Use ""to reproduce""  ## Environment  OS: Windows10 Browser: MS Edge Browser version: 91.0.864.64 Browser Driver version: msedgedriver 91.0.864.64 Language Bindings version: Typescript 4.3.2","closed","needs-triaging,","alejandro-vime","2021-07-02T20:32:58Z","2021-09-05T07:58:55Z"
"","9477","UnhandledAlertException.getAlertText() does not return the alert text","## üêõ Bug Report  Using RemoteWebDriver, the UnhandledAlertException.getAlertText() always returns an empty String.  ## Test script or set of commands reproducing this issue  ``` driver.navigate().to(""https://www.google.com.br""); ((JavascriptExecutor) driver).executeScript(""alert('sometext')""); try { 	driver.findElement(By.tagName(""body"")); 	Assert.fail(); } catch (UnhandledAlertException e) { 	assertEquals(""sometext"", e.getAlertText());   // e.getAlertText() returns empty string here } ```  ## Environment  Browser:  from docker image selenium/standalone-firefox:4.0.0-beta-3-20210426 Browser Driver version: RemoteWebDriver from selenium-java 4.0.0-beta3 Language Bindings version: Java 4.0.0-beta3","closed","D-firefox,","rcesarlumis","2021-05-13T22:20:18Z","2021-09-05T08:01:17Z"
"","9716","Webdriver hangs on Nightly build","## üêõ Bug Report  Using Python Selenium with a build of Firefox (Nightly), Firefox GUI will load but any further instruction (e.g. driver.get) will hang forever.  ## To Reproduce  - Well, not a frequent behavior sure but first make your own build Firefox from source. (see [docs](https://firefox-source-docs.mozilla.org/setup/linux_build.html)) - Provide your own build as binary. - Try to use `webdriver`, any instruction after initial load will hang.  ## Expected behavior  Not an expert in low-level driver interactions but I guess any Firefox build should be usable.  ## Test script or set of commands reproducing this issue ```python from selenium import webdriver from selenium.webdriver.firefox.options import Options  options = Options() # Local build bin path options.binary_location = r'/tmp/firefox/mozilla-central/obj-x86_64-pc-linux-gnu/dist/bin/firefox' driver = webdriver.Firefox(firefox_options=options)  driver.get('http://google.com/') print(""test"") ```  Google will never be loaded and ""test"" will never be printed, script will hang indefinitely. Firefox window will load though and be interactive, just not used by Selenium.  ## Environment  OS: Ubuntu 21.04 Browser: Firefox (Nightly) Browser version: 86.0a1 (2021-08-04) (64-bit) Browser Driver version: geckodriver 0.29.1 Language Bindings version: Python 3.9   I know it's quite a niche issue, but any suggestion would be appreciated :wink:","closed","","PabloLec","2021-08-04T11:53:03Z","2021-09-06T00:05:31Z"
"","9071","Grid 4 UI, confusing 100%free vs 100% up message","## üêõ Bug Report  Using 4.0.0-beta-1-prerelease-20210114 hub and chrome node I have noticed that when grid is fully occupied (totalSlots=1 and usedSlots=1), UI still displays **100% free**, hovering over the pie chart with mouse it shows **100% UP**,  ![image](https://user-images.githubusercontent.com/20699180/105058205-dec01f00-5a6d-11eb-8f8b-608e6ee28b08.png) What is the meaning? Should that display capacity of the grid (number usedSlots/totalSlotsx100), or number of healthy nodes? I personally would prefer to display capacity of the grid.  graphql request: `{""query"":""{ grid {totalSlots, usedSlots , sessionCount } }""}` graphql response: `{     ""data"": {         ""grid"": {             ""totalSlots"": 1,             ""usedSlots"": 1,             ""sessionCount"": 1         }     } }`  ## Environment  4.0.0-beta-1-prerelease-20210114   [docker-compose.yml.zip](https://github.com/SeleniumHQ/docker-selenium/files/5836965/docker-compose.yml.zip)","closed","C-grid,","mcopjan","2021-01-20T09:52:07Z","2021-09-05T08:21:31Z"
"","8967","Selenium doesn't automatically fill username and password fields when Chrome is started in headless mode","## üêõ Bug Report  Username and password fields are not automatically filled when running Google Chrome in headless mode from Python script.  ## To Reproduce  I started Chrome with the following arguments from my script: '--user-data-dir=path\to\user_data' '--headless' '--disable-extensions' '--start-maximized' '--window-size=1920,1080'  Visited a website for which I had saved credentials and clicked on the login button.  ## Expected behavior  Selenium should (at least) automatically fill the username and password fields. This *does* happen if the browser is **not** in headless mode.  ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver from selenium.webdriver.chrome.options import Options from selenium.webdriver.common.by import By from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.support.ui import WebDriverWait   chrome_options = Options() chrome_options.add_argument(r'--user-data-dir=path\to\user_data') chrome_options.add_argument('--headless') chrome_options.add_argument('--disable-extensions') chrome_options.add_argument('--start-maximized') chrome_options.add_argument('--window-size=1920,1080')  driver = webdriver.Chrome(executable_path='chromedriver.exe', options=chrome_options)  driver.get('login_page')  login = WebDriverWait(driver, 10).until(              EC.element_to_be_clickable((By.ID, 'login_button'))          )  driver.find_element_by_id('login_button').click()  driver.quit()  ```  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 87.0.4280.88 Browser Driver version: ChromeDriver 87.0.4280.88 Language Bindings version: Python 3.8.5/3.9.0 Selenium version: 3.141.0","closed","","sgrontflix","2020-12-14T12:16:20Z","2021-09-05T08:27:54Z"
"","8901","URL https://www.selenium.dev/selenium/docs/api/py/api.html returns 404","## üêõ Bug Report  URL https://www.selenium.dev/selenium/docs/api/py/api.html returns 404","closed","needs-triaging,","Denis-Alexeev","2020-11-24T06:32:18Z","2021-09-05T08:30:25Z"
"","9655","URL-navigation throws CommandResponseException about getting response body after headers received","## üêõ Bug Report  Unable to open any page with enabled network monitoring because of  exception: ``` Unhandled exception. Unhandled exception. OpenQA.Selenium.DevTools.CommandResponseException: Fetch.getResponseBody: Can only get response body on requests captu red after headers received.    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken params, CancellationToken cancellationToken, Nullable`1 millisecondsTimeou t, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisec ondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V91.Fetch.FetchAdapter.GetResponseBody(GetResponseBodyCommandSettings command, CancellationToken cancellationToken, Nullable`1 mi llisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V91.V91Network.AddResponseBody(HttpResponseData responseData)    at OpenQA.Selenium.NetworkManager.OnResponsePaused(Object sender, ResponsePausedEventArgs e)    at System.Threading.Tasks.Task.c.b__140_1(Object state)    at System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() OpenQA.Selenium.DevTools.CommandResponseException: Fetch.getResponseBody: Can only get response body on requests captured after headers received.    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(String commandName, JToken params, CancellationToken cancellationToken, Nullable`1 millisecondsTimeou t, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.DevToolsSession.SendCommand[TCommand,TCommandResponse](TCommand command, CancellationToken cancellationToken, Nullable`1 millisec ondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V91.Fetch.FetchAdapter.GetResponseBody(GetResponseBodyCommandSettings command, CancellationToken cancellationToken, Nullable`1 mi llisecondsTimeout, Boolean throwExceptionIfResponseNotReceived)    at OpenQA.Selenium.DevTools.V91.V91Network.AddResponseBody(HttpResponseData responseData)    at OpenQA.Selenium.NetworkManager.OnResponsePaused(Object sender, ResponsePausedEventArgs e)    at System.Threading.Tasks.Task.c.b__140_1(Object state)    at System.Threading.QueueUserWorkItemCallbackDefaultContext.Execute()    at System.Threading.ThreadPoolWorkQueue.Dispatch()    at System.Threading._ThreadPoolWaitCallback.PerformWaitCallback() ```  ## To Reproduce **Program.cs** ```cs using System; using OpenQA.Selenium.Chrome;  using var chromeDriver = new ChromeDriver(); await chromeDriver.Manage().Network.StartMonitoring(); chromeDriver.Url = ""https://www.selenium.dev""; Console.ReadLine(); ``` **Project file** ```xml                Exe         net5.0                                 ```  ## Expected behavior  Be able to navigate to the page.  ## Test script or set of commands reproducing this issue  Please see steps to reproduce above.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.124 Browser Driver version: ChromeDriver 91.0.4472.101 Language Bindings version: dotnet 4.0.0-beta4 Selenium Grid version (if applicable): N/A","closed","C-dotnet,","BoundedChenn31","2021-07-14T21:12:51Z","2021-10-30T00:06:09Z"
"","8985","Unable to change the setting for 'always_open_pdf_externally' on edge using Selenium?","## üêõ Bug Report  Unable to change the setting for 'always_open_pdf_externally' on edge using Selenium?    ## To Reproduce  For chrome, we can alter the setting for always_open_pdf_externally by following code:  var options = new ChromeOptions(); options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);  Is there any way in Edge chromium to change the ""always_open_pdf_externally"" value?  I tried using it the same way but not worked. I have also tried it by using AddAdditionalOption but not worked.  Code :  var options = new EdgeOptions(); options.AddUserProfilePreference(""plugins.always_open_pdf_externally"", true);  var options = new EdgeOptions(); options.AddAdditionalOption(""plugins.always_open_pdf_externally"", true);  Detailed steps to reproduce the behavior:  ## Expected behavior  Should change the setting value to true for 'always_open_pdf_externally'.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Edge Chromium Browser version: Version 87.0.664.60 (Official build) (64-bit) Browser Driver version:  87.0.664.60 Language Bindings version: C#.net Selenium Grid version (if applicable): 3.14 and 4","closed","","heyitsmesuraj","2020-12-21T13:41:10Z","2021-09-05T08:27:52Z"
"","8925","Python selenium 3.141.0 typing '@' sign into any field will dump the content of the clipboard instead of '@' sign","## üêõ Bug Report  Typing '@' sign into any field will dump the content of the clipboard instead of '@' sign: example: xyz@hotmail.com will produce xyz(content of the clipboard)hotmail.com  `webElement.send_keys('xyz@example.com')  # where webElement is the actual input field`  Also tried to send: `ActionChains(self.__driver).key_down(Keys.LEFT_CONTROL).key_down(Keys.LEFT_ALT).send_keys('v').key_up(Keys.LEFT_ALT).key_up(Keys.LEFT_CONTROL).perform()`  Also tried with escape character.  Checked my language and regions, i have English(United States) keyboard.   It worked since the latest chrome (v87) update and the necessary chrome driver update. Downgraded chrome to v86 with the driver but didn't solve the issue.  Found only 1 same issue on stackoverflow: https://stackoverflow.com/questions/64892215/python-selenium-in-not-writing-instead-filling-with-other-code found and old, but same issue on stackoverflow: https://stackoverflow.com/questions/64385485/selenium-sendkeys-with-chromedriver-uses-clipboard-content-instead-of-char (won't apply my situation)  ## Environment  OS: Windows 10 Browser: Chrome 86 and 87 Browser Driver version: chromedriver 87.0.4280.20 and 86.0.4240.22 Language Bindings version: python 3.141.0","closed","needs-triaging,","tamaskakuszi","2020-11-30T11:48:22Z","2021-09-05T08:30:17Z"
"","9191","Headless chrome crashes","## üêõ Bug Report  Today I wrote a python script to simply predict a number using regression. Whenever I try to run the script on my centOS or Ubunto server the script crashes after a few minutes.  ```python from selenium import webdriver from webdriver_manager.chrome import ChromeDriverManager from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from sklearn.linear_model import LinearRegression import time import numpy as np from sklearn.svm import SVR import pytz from datetime import datetime from sys import argv, exit import os, psutil  ################################################ if len(argv) != 5:   print (argv[0] + '   ')   exit(2) X_predict = [(int(datetime.strptime(argv[3] + "" "" + argv[4], '%Y/%m/%d %H:%M:%S').timestamp()*(10000000)))] ################################################  X=[] y=[] #driver = webdriver.Chrome() driver = webdriver.Chrome(ChromeDriverManager().install()) driver.get('https://example.com/')  elem_xpath = '//div[contains(text(), ""the number"")]/following-sibling::div'  for i in range(1, int(argv[1])):     try:         elem = WebDriverWait(driver, 30).until(EC.visibility_of_element_located((By.XPATH, elem_xpath)))         print (""train => "", i)         X.append(int(time.time()*(10000000)))         y.append(int(elem.text.replace(',', '')))         time.sleep(int(argv[2]))     finally:         driver.quit          ############################################## X = np.array(X).reshape(-1, 1) y = np.array(y).reshape(-1, 1) X_predict = np.array(X_predict).reshape(-1, 1) ##############################################      svr_rbf = LinearRegression() y_rbf = svr_rbf.fit(X,y).predict(X_predict)  ########################################## #print ('X:'.format(X)) #print ('y:'.format(y)) #print ('X_predict:{}'.format(X_predict)) ##########################################  print ('y_rbf: {}'.format(int(y_rbf))) print('memory usage: {} MB'.format( int(psutil.Process(os.getpid()).memory_info().rss/1024/1024) ))  ```  Here is the screenshot where you can see the error and informations: enter image description here ![Captu555555555555re](https://user-images.githubusercontent.com/36165265/108400983-1965d480-7231-11eb-8f40-c8e5da33ff74.PNG)     ## To Reproduce    This should not crash after several hours/minutes  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Ubunto/CentOS Browser: Chrome Browser version: 88.0.4324.150 Browser Driver version:  Language Bindings version: Python3 Selenium Grid version (if applicable):","closed","needs-triaging,","Arioshoma","2021-02-18T18:06:04Z","2021-09-05T08:15:51Z"
"","9016","Could you help to check the issue is an incompatibility between selenium version and chrome version.","## üêõ Bug Report  Today I upgrade chrome version and chrome webdirver version from 81.0.4044.138 to 87.0.4280.88 on my selenium grid node machines , but when i test click checkbox on UI , then i get the following error: (org.openqa.selenium.ElementNotInteractableException: element not interactable: element has zero size (Session info: chrome=87.0.4280.88) Build info: version: '3.141.5', revision: 'd54ebd709a', time: '2018-11-06T11:42:16' System info: host: 'shcAimeeCOS72.hpeswlab.net', ip: '16.155.199.109', os.name: 'Linux', os.arch: 'amd64', os.version: '4.7.3-1.el7.elrepo.x86_64', java.version: '1.8.0_72' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.88, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\ADMINI~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:53895}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: d5b503c73bb648a89de3ed26023...} Session ID: d5b503c73bb648a89de3ed260232042e).  but if my chrome version and chrome webdriver version is 81.0.4044.138, then click the checkbox is ok.  Could you help to check the issue is an incompatibility between selenium version and chrome version. my selenium jar version is selenium-server-standalone-3.141.59.jar    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","ChrisD1990","2020-12-31T07:26:24Z","2021-09-05T08:27:43Z"
"","9450","[rb] - `#all_cookies` Using invalid bitness on IEDriver can return an Error string. Causes NME ""A string cannot be mapped""","## üêõ Bug Report  This may be an issue with the Driver specifically. The error is informative, but then causes a different error down the toolchain.  ## To Reproduce  I ran on browserstack **Windows 10 IE11** (Which is what generates the problem). However in essence it's running IE11 tests on a x64 system when it probably only should be running on x32 (Like a nice old Windows 7 or earlier).  Simply call `driver.browser.manage.all_cookies`  ## Expected behavior  StandardError ""Cannot obtain cookies due to a bitness mismatch""  Actual result ``` 0> cookie_manager.all_cookies => undefined method `map' for #  @bridge.cookies => ""Could not retrieve cookies. The most common cause of this error is a mismatch in the bitness between the driver and browser. In particular, be sure you are not attempting to use a 64-bit IEDriverServer.exe against IE 10 or 11, even on 64-bit Windows."" ```  ## Test script or set of commands reproducing this issue  As Above  ## Environment  Browerstack Windows 10 IE11 Browser Driver version: 3.141 Language Bindings version: Ruby 4 alpha 6 Selenium Grid version (if applicable): 4 alpha 6","closed","D-IE,","luke-hill","2021-05-06T08:25:11Z","2021-09-05T07:58:57Z"
"","9601","Queue size is always high and the grid is drastically underutilized","## üêõ Bug Report  This is the average utilization and queue size at all times on the grid:  ![image](https://user-images.githubusercontent.com/8371789/123149749-e2633200-d461-11eb-9ad7-3b0111a54fa3.png)  Sessions wait about 20 seconds in the queue, seemingly for no reason.  This problem is not present with grid version: `4.0.0-beta-4-prerelease-20210527`, but present in the latest release `4.0.0-rc-1-prerelease-20210618`.  ## To Reproduce  Detailed steps to reproduce the behavior:  Deploy the grid with the following configuration:  ``` --- apiVersion: helm.fluxcd.io/v1 kind: HelmRelease metadata:   name: selenium-grid-advanced   namespace: production spec:   releaseName: selenium-grid-advanced   chart:     # https://github.com/zzvara/docker-selenium/tree/selenium-grid-helm-chart-0.2.0     repository: redacted     name: selenium-grid     version: 0.2.1   values:     global:       seleniumGrid:         imageTag: ""4.0.0-rc-1-prerelease-20210618""         nodesImageTag: ""4.0.0-rc-1-prerelease-20210618""     isolateComponents: false     chromeNode:       replicas: 60       resources:         limits:           cpu: '1'           memory: 2000Mi         requests:           cpu: '1'           memory: 2000Mi     firefoxNode:       replicas: 0     operaNode:       replicas: 0     hub:       imageTag: ""4.0.0-rc-1-prerelease-20210618""       resources:         requests:           memory: ""32Gi""         limits:           memory: ""32Gi""       extraEnvironmentVariables:         - name: JAVA_OPTS           # @note ""POOL_MAX"" not confirmed that it is working.           value: ""-Xmx20g -Xms2g -XX:+UseG1GC -DPOOL_MAX=512""         - name: SE_OPTS           value: ""--max-threads 100 --allow-cors true""         - name: SE_SESSION_REQUEST_TIMEOUT           value: ""30"" ```  ## Expected behavior  A clear and concise description of what you expected to happen.  The queue should be close to 0 and concurrency should be high. Previous beta versions did not have this issue.  ## Test script or set of commands reproducing this issue  Unfortunately, scripts can not be disclosed, however, we reproduced the same problem with multiple tests/applications.  ## Environment  OS: Linux sigma02 5.10.43-flatcar #1 SMP Tue Jun 15 19:46:57 -00 2021 x86_64 Intel(R) Xeon(R) CPU E5-2650 v4 @ 2.20GHz GenuineIntel GNU/Linux Grid version:  Browser: Chrome Browser version: v.91.0 Selenium Grid version (if applicable): Grid version: 4.0.0-rc-1 (revision 23ece4f646)","closed","selenium-4,","zzvara","2021-06-23T18:39:49Z","2021-09-05T07:50:25Z"
"","9143","Merging of `InternetExplorerOptions` doesn't work","## üêõ Bug Report  This is a follow up for https://github.com/SeleniumHQ/selenium/issues/5279 as requested in https://github.com/SeleniumHQ/selenium/issues/5279#issuecomment-770905915  ## To Reproduce  Use `InternetExplorerOptions.merge()`  ## Expected behavior  Browser specific parameters in descendants of `MutableCapabilities` work after merging them.  ## Test script or set of commands reproducing this issue  ``` InternetExplorerOptions options1 = new InternetExplorerOptions(); InternetExplorerOptions options2 = new InternetExplorerOptions(); options1.useCreateProcessApiToLaunchIe().addCommandSwitches(""-private""); options1.merge(options2); WebDriver driver = new InternetExplorerDriver(options1); // IE doesn't start in private mode ```  ## Environment  OS: Windows (any version) Browser: Internet Explorer Browser version: 11 Browser Driver version: IEDriver 3.150.1 Language Bindings version: Java 4.0.0-alpha-7","closed","needs-triaging,","JohnA2","2021-02-04T20:04:08Z","2021-09-05T08:15:51Z"
"","8921","[C-js] Server terminated early with status 2","## üêõ Bug Report  This bug occur when the electron app, exported in linux-version, executes functions on selenium javascript library. The app was running on linux ubuntu. ```linux Error: Server terminated early with status 2    at .../node_modules/selenium-webdriver/remote/index.js:251:52 ```   This error occur when the following code was executed. ```js async function searchKeyWebdriverOnChrome(wordToSearch) {   try {     let driver = await new Builder().forBrowser('chrome').build() //","closed","R-awaiting answer,","cronumax","2020-11-30T06:28:39Z","2021-09-05T08:27:38Z"
"","8899","Performance issue in SelectElement dotnet","## üêõ Bug Report  There is three Webdriver API call to check element tag name  [     if (string.IsNullOrEmpty(element.TagName) || string.Compare(element.TagName, ""select"", StringComparison.OrdinalIgnoreCase) != 0)             {                 throw new UnexpectedTagNameException(""select"", element.TagName);             }](https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/src/support/UI/SelectElement.cs) ## Expected behavior It should be like in Java implementation:     [ if (null == tagName || !""select"".equals(tagName.toLowerCase())) {       throw new UnexpectedTagNameException(""select"", tagName);     }](https://github.com/SeleniumHQ/selenium/blob/trunk/java/client/src/org/openqa/selenium/support/ui/Select.java)","closed","C-dotnet,","VictorYakushenko","2020-11-23T20:50:44Z","2021-09-05T08:30:23Z"
"","9717","Grid 4: TOML Parameter for setting log file location doesn't work","## üêõ Bug Report  The TOML file parameter for setting the log file location doesn't work, throwing an exception when the server is launched.  ## To Reproduce  Define the following in a TOML config file:  ```` [logging] # File to write out logs # Type: string # Example: log-file = \my\path\goes\here\Logs\hub.log ````  Then invoke the server like this:  ```` java -jar selenium-server-4.0.0-beta-4.jar hub --config hub.toml ````  The following exception will be thrown:  ```` java.lang.reflect.InvocationTargetException         at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)         at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)         at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)         at java.lang.reflect.Method.invoke(Unknown Source)         at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77)         at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) Caused by: io.ous.jtoml.ParseException: Newline expected after assignment at 18:14         at io.ous.jtoml.impl.Parser.error(Parser.java:250)         at io.ous.jtoml.impl.Parser.parse(Parser.java:51)         at io.ous.jtoml.JToml.parse(JToml.java:35)         at org.openqa.selenium.grid.config.TomlConfig.(TomlConfig.java:45)         at org.openqa.selenium.grid.config.TomlConfig.from(TomlConfig.java:55)         at org.openqa.selenium.grid.config.Configs.from(Configs.java:40)         at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source)         at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(Unknown Source)         at java.util.stream.AbstractPipeline.copyInto(Unknown Source)         at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)         at java.util.stream.AbstractPipeline.evaluate(Unknown Source)         at java.util.stream.AbstractPipeline.evaluateToArrayNode(Unknown Source)         at java.util.stream.ReferencePipeline.toArray(Unknown Source)         at org.openqa.selenium.grid.config.ConfigFlags.readConfigFiles(ConfigFlags.java:72)         at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:105)         at org.openqa.selenium.grid.Main.launch(Main.java:83)         at org.openqa.selenium.grid.Main.go(Main.java:57)         at org.openqa.selenium.grid.Main.main(Main.java:42) ````  ## Expected behavior  The program should not throw and the log file parameter should work correctly.  ## Environment  OS: Windows 10 Selenium Grid version (if applicable): 4.0.0-beta4","closed","R-awaiting answer,","ccarmannt","2021-08-04T18:43:03Z","2021-09-18T00:05:13Z"
"","9802","Pypi package needs updated (current version [3.14.1] is 3 years old)","## üêõ Bug Report  The selenium package on [pypi.org](https://pypi.org/project/selenium/) is [3 years old](https://pypi.org/project/selenium/#files), and has an invalid version number (actual: `3.141.0`, expected: `3.14.1`).  This is the version users will install when following the instructions provided in [the readme](https://github.com/SeleniumHQ/selenium/blob/trunk/py/docs/source/index.rst) after issuing the command `pip install -U selenium`.  I suspect this is due to 4.0 being in development for 3 years (see [the last commit of 3.14.x](https://github.com/SeleniumHQ/selenium/commit/c513b18b7acdf7d1793fd2dce5f656157063ad7c) for reference). Is my suspicion correct? If so, with such a long layover time is there anything we can do to get a second pypi project with the beta release channel?  ### Why this matters  I somehow overlooked [this PR](https://github.com/SeleniumHQ/selenium/pull/9192) and forked the repo to make the same change only to find it had already been done. Type hinting is one of many important quality of life updates that the vast majority of Python users are completely unaware of. There have also been depreciations of critical well-used commands such as [find_element_by_*](https://github.com/SeleniumHQ/selenium/commit/72ffec9d2a241bd7833415f1b7b29499fff5c2c4) which Python users are completely unaware have taken place due to this.   ## To Reproduce  Detailed steps to reproduce the behavior:  ``` $ pip show selenium Name: selenium Version: 3.141.0 Summary: Python bindings for Selenium Home-page: https://github.com/SeleniumHQ/selenium/ Author: UNKNOWN Author-email: UNKNOWN License: Apache 2.0 Location: [redacted]\lib\site-packages Requires: urllib3 Required-by: ```  ## Expected behavior  ``` $ pip show selenium Name: selenium Version: 4.0.0.rc1 Summary: Python bindings for Selenium Home-page: https://github.com/SeleniumHQ/selenium/ Author: UNKNOWN Author-email: UNKNOWN License: Apache 2.0 Location: [redacted]\lib\site-packages Requires: urllib3 Required-by: ```  ## Test script or set of commands reproducing this issue  `pip show selenium`  ## Environment  Not Applicable","closed","needs-triaging,","ChadBailey","2021-09-08T01:04:15Z","2021-10-09T00:05:41Z"
"","9711","Selenium Grid 4: No parameter for setting log location","## üêõ Bug Report  The Selenium Grid 4 application appears to provide no parameter/setting for defining the log location.  ## Expected behavior  There should be a way to define the log location in both hub and node.  ## Environment  OS: Windows 10 Selenium Grid version (if applicable): 4.0.0-beta-2","closed","","ccarmannt","2021-08-03T14:33:56Z","2021-09-05T07:50:03Z"
"","9455","[dotnet] RequestTransformer can't transform requests","## üêõ Bug Report  The Selenium 4 beta C# bindings add `NetworkRequestHandler` to let users define network interception rules. In particular, one may define a `RequestTransformer` of type `Func` to apply some modification to outgoing requests in the browser, but `HttpRequestData` is a read only type and can't be modified.    ## To Reproduce    The following code generates a compile time error:  ```c# NetworkRequestHandler handler = new NetworkRequestHandler() {     RequestMatcher = (request) =>      {         return true;     },     RequestTransformer = (request) =>     {         request.Url = ""https://www.selenium.dev/""         return request;     } }; ``` `request.Url` (as well as every other field on the request object) is marked `internal set` and cannot be modified.   ## Expected behavior  A user should be able to modify the request data within the `RequestTransformer` method  ## Environment  OS:  Windows 10 Browser:  N/A Browser version:  N/A Browser Driver version:  N/A Language Bindings version:  C# 4.0-beta2 Selenium Grid version (if applicable):   N/A","closed","C-dotnet,","doctor-house","2021-05-07T19:51:56Z","2021-09-05T08:01:13Z"
"","9538","Python first/always logic in the client doesn't work with arrays as values","## üêõ Bug Report  The python first/always logic in the python client doesn't successfully handle the case where capability values are arrays  ## To Reproduce  ``` from selenium.webdriver.remote.webdriver import WebDriver from selenium.webdriver import FirefoxOptions  alternative_1 = FirefoxOptions() alternative_1.set_capability(""vendor:sameList"", [])  alternative_2 = FirefoxOptions() alternative_2.set_capability(""vendor:sameList"", [])  WebDriver(options=[alternative_1, alternative_2]) ```  ## Expected behavior  Everything works as expected  ## Actual behavior   ``` /Users/bob/.pyenv/versions/selenium/bin/python /blah/blah/blah/selenium/try.py Traceback (most recent call last):   File ""/blah/blah/blah/selenium/try.py"", line 8, in      WebDriver(options=[alternative_1, alternative_2])   File ""/Users/bob/.pyenv/versions/selenium/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 224, in __init__     capabilities = create_matches(options)   File ""/Users/bob/.pyenv/versions/selenium/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 133, in create_matches     samesies.update(opts[min_index].items() & opts[i + 1].items()) TypeError: unhashable type: 'list' ```  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS: macOS Browser: Firefox Browser version: n/a Browser Driver version: n/a Language Bindings version: pre-beta4 Selenium Grid version (if applicable): n/a","closed","C-py,","shs96c","2021-06-02T08:55:19Z","2021-09-05T07:50:54Z"
"","8989","ElementClickInterceptedError with chrome and chromedriver 87","## üêõ Bug Report  The page has an SVG diagram. driver.findElement() finds the DOM element, an SVG image, and clicks on it. The test suite that fails does this 14 times, and exactly the same seven tests fail every time with the message ElementClickInterceptedError.  ## To Reproduce  Download the application from https://github.com/walthaas/snow_profile and install its node dependencies in directory js/.npm .  There are four test suites in js/.npm/__tests__/  The suite that fails is  squaretop-east-2014-02-13.js   It can be run from Grunt or directly by jest.  This issue has come up a number of times over the years.  This appears to be the first open source, 100% consistent reproducible illustration of the bug.    ## Expected behavior  The test suite mentioned uses selenium to create a snow profile diagram by dragging and dropping with the mouse and filling in details on the popup form.  There are fourteen snow layers in the profile, and each should  have parameters describing that layer added to the diagram. If the same script is executed by hand with the mouse and keyboard, it works perfectly every time.  ## Test script or set of commands reproducing this issue   jest __tests__/squaretop-east-2014-02-13.js   Run Grunt or jest from the js/.npm directory.  ## Environment  OS: Fedora 33 Linux Browser: Chrome Browser version: 87 Browser Driver version: 87 Language Bindings version: Javascript in node v12.20.0 Selenium Grid version (if applicable): no, this is all running on the desktop.","closed","needs-triaging,","walthaas","2020-12-21T23:49:19Z","2021-09-05T08:27:51Z"
"","9588","Selenium WebDriver click(), hover() are not working on few elements in Chrome 91, everything working fine up-to chrome 89","## üêõ Bug Report  The overall issue is that, the test automation code use to work fine till Chrome browser 89, but while upgrading to Chrome 91, same code base is not working in few places. Below are some instances.  We have tried WebDriver hover() or click(), but it's not displaying hovering options use to get visible, which use to work fine till Chrome 89 without an issue.  div class=""abstract-tooltip-container cFWAbstractTooltip"" data-aura-class=""cFWAbstractTooltip"">   button class=""slds-button_neutral slds-button"" role=""button"" aria-label=""Select From Dropdown Menu"">  /div  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 91 Browser Driver version: Compatible with Chrome browser 91 Language Bindings version:  Java 1.8 Selenium WebDriver version: 3.141.59","closed","","subrato29","2021-06-17T16:01:32Z","2021-09-05T07:59:07Z"
"","9592","nodeConfig.json completely ignored 4.0.0-beta4","## üêõ Bug Report  The node-config appears to have no effect on which browser `binary` and driver are used. I have a setup of Selenium server 4.0.0-beta4 with three versions of chrome. 1 version is installed by a normal package-manager ( with `dpkg -i`) and the other two are manually installed in other folders and are not on the `$PATH`. The node-config (see below) is configured to point at the two manual installations of chrome however the `binary` property in the config has no effect as the `google-chrome` binary found on the `$PATH` is always used.  ## To Reproduce  - Prepare 2 manually installed versions of chrome. (one is 86 for this example) - Write a nodeConfig.json which specifies their `binary` paths. - Start the server. - Using selenium `webdriver.Remote` try to access version `86` of Chrome. - Version 86 will not be available.  Detailed steps to reproduce the behavior:  - Prepare 2 manually installed versions of chrome. (one is 86 for this example)  ```bash cd /home/mcutter/git/grid/chrome/86 ar x google-chrome-stable_current_amd64.deb tar xf data.tar.xz # check the chrome version opt/google/chrome/google-chrome # Google Chrome 86.0.4240.75 # Unzip the chrome-driver for Chrome 86 unzip chromedriver_linux64.zip # Repeat for 90 ... ```  - Write a nodeConfig.json which specifies their `binary` paths.  ( See below )  - Start the server. ( NOTE: The 90 and 86 folders are added to the path otherwise *no* driver is detected )  ```bash PATH=$PATH:`pwd`/90:`pwd`/86 java -jar selenium-server-4.0.0-beta-4.jar standalone --config nodeConfig.json --host localhost ```  - Using selenium webdriver try to access version `86` of chrome.  I am using the nginx docker image as a sample server to browse to.  ```bash docker run -it --rm --net=host nginx:latest ```  Run a script using the web-driver to open version 86 of the browser and navigate to a page.  ```bash python test.py ```  - Version 86 will not be available.   ## Expected behavior  - Chrome 86 should open and display a user-agent on the Nginx home page.  ## Test script or set of commands reproducing this issue  **script.js** (referenced in other test script)  ```javascript var agent = navigator.userAgent.toString() el = document.createElement('h1') el.innerText = agent document.body.appendChild(el) ```  **test.py** Main test script.  ```python from selenium.webdriver import Remote, ChromeOptions import time import atexit  options = ChromeOptions() url = 'http://127.0.0.1:4444/wd/hub'  print('> connecting') driver = None  @atexit.register def close():   global driver   if not driver:     return   driver.close()   driver = None   print('closed')   time.sleep(1)  print('> browsing') try:   driver = Remote(     command_executor=url,     desired_capabilities={       'browserName': 'chrome',       'version': '86'     },     options=options)    driver.get('http://localhost')   time.sleep(1)   res = driver.execute_script(open('script.js', 'r').read())   print(res)   time.sleep(3) except Exception as e:   print(e) finally:   close() ```  **nodeConfig.json**  ```json {   ""capabilities"":   [     {       ""browserName"": ""chrome"",       ""platform"": ""LINUX"",       ""version"": ""86"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver"",       ""webdriver.chrome.driver"": ""/home/mcutter/git/grid/chrome/86/chromedriver"",       ""binary"":""/home/mcutter/git/grid/chrome/86/opt/google/chrome/google-chrome""     },     {       ""browserName"": ""chrome"",       ""platform"": ""LINUX"",       ""version"": ""90"",       ""maxInstances"": 5,       ""seleniumProtocol"": ""WebDriver"",       ""webdriver.chrome.driver"": ""/home/mcutter/git/grid/chrome/90/chromedriver"",       ""binary"":""/home/mcutter/git/grid/chrome/90/opt/google/chrome/google-chrome""     }   ] } ```  ## Environment  OS: Ubuntu 20.10 Browser: Chrome  Browser version: 91 (normal install), 90, 86 (manual installs) Browser Driver version: Chrome 90 = 90.0.4430.24, Chrome 86 = chromedriver 86.0.4240.22 Language Bindings version: Python `selenium==4.0.0b4`  Selenium Grid version (if applicable): 4.0.0-beta4","closed","C-grid,","matutter","2021-06-18T01:46:25Z","2021-09-30T00:05:58Z"
"","9305","Link to Python API documentation is dead","## üêõ Bug Report  The link https://seleniumhq.github.io/selenium/docs/api/py/index.html is dead!  ## To Reproduce  Try link https://seleniumhq.github.io/selenium/docs/api/py/index.html   ## Environment  Not environment dependent","closed","","dornech","2021-03-18T20:00:48Z","2021-09-05T08:10:45Z"
"","9731","WebDriver Bidi APIs Java example does not work with FirefoxDriver","## üêõ Bug Report  The Java Bidi APIs example doesn't work because it is implemented with Firefox and FirefoxDriver doesn't implement the HasLogEvents interface. Happy to submit a PR for this issue.    ## To Reproduce    Running the Java Example code mentioned in https://www.selenium.dev/documentation/webdriver/bidi_apis/  ## Expected behavior  The WebDriver Bidi API for DOM Mutation should work with FirefoxDriver.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: OSX Browser: Firefox Browser version: 88.0.1 Browser Driver version: GeckoDriver 0.29.1 Language Bindings version:  Java 4.0.0-beta-3 Selenium Grid version (if applicable):","closed","R-awaiting answer,","abhi2810","2021-08-10T12:03:00Z","2021-11-12T00:06:58Z"
"","9586","Grid4-beta4: Caught exception while polling for event bus messages: Unable to determine type","## üêõ Bug Report  The issue was originally posted in Group (https://groups.google.com/g/selenium-users/c/OCiizPvTbJk), but since it is an exception error, there was no responses from other users.   The issue is that Node running outside of OpenShift does not register with Hub which is running in OpenShift, exception error is shown. If Hub is running on a different VM (outside of OpenShift), then the exact same Node is able to register.   Hub is running in OpenShift, command to start: ``` java -jar /opt/selenium/selenium-server-4.0.0-beta-4.jar hub --session-request-timeout ${SE_SESSION_REQUEST_TIMEOUT} --session-retry-interval ${SE_SESSION_RETRY_INTERVAL} --relax-checks ${SE_RELAX_CHECKS} ```   Node is run on a separate VM outside of OpenShift, command to start Node: ``` java -jar selenium-server-4.0.0-beta-4.jar node --publish-events tcp://selenium-grid4-hub-4442.xxxxx:80 --subscribe-events tcp://selenium-grid4-hub-4443.xxxx:80 --host xyzxyz --port 5555 ```   This is Log output from Node: ``` 06:44:29.838 INFO [LogManager$RootLogger.log] - Using the system default encoding 06:44:29.838 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 06:44:30.135 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-grid4-hub-4442.xxxxx:80 and tcp://selenium-grid4-hub-4443.xxxxx:80 06:44:30.213 INFO [UnboundZmqEventBus.] - Sockets created 06:44:31.229 INFO [UnboundZmqEventBus.] - Event bus ready 06:44:31.291 INFO [NodeServer.createHandlers] - Reporting self as: http://xxxxx:5555 06:44:31.307 INFO [NodeOptions.getSessionFactories] - Detected 4 available processors 06:44:31.338 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 06:44:31.369 INFO [NodeOptions.report] - Adding Internet Explorer for {""browserName"": ""internet explorer"",""platformName"": ""XP""} 1 times 06:44:31.369 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge"",""platformName"": ""XP""} 4 times 06:44:31.385 INFO [Node.] - Binding additional locator mechanisms: name, id 06:44:32.026 INFO [NodeServer$1.start] - Starting registration process for node id 7dfb77a5-24bb-49ad-bb80-efa9ff8177e7 06:44:32.041 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-4 (revision 29f46d02dd): http://xxxxx:5555 06:44:32.088 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 06:44:42.120 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   This is Log output from Hub running in OpenShift, the exception happens at the time when Node tries to register:   ``` 10:27:33.078 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:27:33.083 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:27:33.373 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://10.57.12.200:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://10.57.12.200:4443] 10:27:33.500 INFO [UnboundZmqEventBus.] - Connecting to tcp://10.57.12.200:4442 and tcp://10.57.12.200:4443 10:27:33.582 INFO [UnboundZmqEventBus.] - Sockets created 10:27:34.584 INFO [UnboundZmqEventBus.] - Event bus ready 10:27:35.880 INFO [Hub.execute] - Started Selenium Hub 4.0.0-beta-4 (revision 29f46d02dd): http://10.57.12.200:4444 10:33:10.159 WARN [UnboundZmqEventBus$PollingRunnable.run] - Caught exception while polling for event bus messages: Unable to determine type from: :. Last 1 characters read: : Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'selenium-grid-4-hub-1-k5cl8', ip: '10.57.12.200', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.24.1.el7.x86_64', java.version: '1.8.0_291' Driver info: driver.version: unknown org.openqa.selenium.json.JsonException: Unable to determine type from: :. Last 1 characters read: : Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'selenium-grid-4-hub-1-k5cl8', ip: '10.57.12.200', os.name: 'Linux', os.arch: 'amd64', os.version: '3.10.0-1160.24.1.el7.x86_64', java.version: '1.8.0_291' Driver info: driver.version: unknown                 at org.openqa.selenium.json.JsonInput.peek(JsonInput.java:126)                 at org.openqa.selenium.json.JsonTypeCoercer.lambda$buildCoercer$6(JsonTypeCoercer.java:141)                 at org.openqa.selenium.json.JsonTypeCoercer.coerce(JsonTypeCoercer.java:127)                 at org.openqa.selenium.json.Json.toType(Json.java:69)                 at org.openqa.selenium.json.Json.toType(Json.java:55)                 at org.openqa.selenium.json.Json.toType(Json.java:50)                 at org.openqa.selenium.events.zeromq.UnboundZmqEventBus$PollingRunnable.run(UnboundZmqEventBus.java:229)                 at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)                 at java.util.concurrent.FutureTask.run(FutureTask.java:266)                 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)                 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)                 at java.lang.Thread.run(Thread.java:748) ```  The same was tried with Distributed Grid, where each component was running in separate container. The issue was the same and the error message was the same, it was observed in Event Bus Log.  Expected behavior: Node should be able to register with Hub running in OpenShift if all required ports are exposed.   Additional details:   Hub has ports 4442, 4443, 4444 exposed to outside of OpenShift via Service and Routes as below: ``` - apiVersion: v1   kind: Service   metadata:     name: selenium-grid-4-hub     labels:       name: selenium-grid-4-hub       component: ""selenium-grid-4""   spec:     selector:       app: selenium-grid-4-hub     ports:       - name: web         protocol: TCP         port: 4444         targetPort: 4444       - name: publish         protocol: TCP         port: 4442         targetPort: 4442       - name: subscribe         protocol: TCP         port: 4443         targetPort: 4443 - apiVersion: v1   kind: Route   metadata:     name: selenium-grid4-hub     labels:       app: selenium-grid4-hub       name: selenium-grid4-hub   spec:     port:       targetPort: web     to:       kind: Service       name: selenium-grid-4-hub       weight: 100   wildcardPolicy: None - apiVersion: v1   kind: Route   metadata:     name: selenium-grid4-hub-4442     labels:       app: selenium-grid4-hub-4442       name: selenium-grid4-hub-4442   spec:     port:       targetPort: publish     to:       kind: Service       name: selenium-grid-4-hub       weight: 100   wildcardPolicy: None - apiVersion: v1   kind: Route   metadata:     name: selenium-grid4-hub-4443     labels:       app: selenium-grid4-hub-4443       name: selenium-grid4-hub-4443   spec:     port:       targetPort: subscribe     to:       kind: Service       name: selenium-grid-4-hub       weight: 100   wildcardPolicy: None  ```  Hub UI is confirmed to be accessible via browser on: http://selenium-grid4-hub.xxxxxxxxxx:80/ui/index.html#/ UI works fine and does not show any errors, only ""The Grid has no registered Nodes yet.""","closed","R-awaiting answer,","KrzysztofC","2021-06-16T11:12:01Z","2021-11-25T00:06:43Z"
"","9119","Firefox - Ruby - Causes ArgumentError: wrong number of arguments (given 1, expected 0) on start","## üêõ Bug Report  The Following Code:  options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless']) $DRIVER = Selenium::WebDriver.for(:firefox, options: options)  Causes this:  ArgumentError: wrong number of arguments (given 1, expected 0) vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/firefox/driver.rb:31:in new' vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/driver.rb:54:in for' vendor/bundle/ruby/3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver.rb:88:in `for'  ## To Reproduce  Just run it   ## Expected behavior  It should work  ## Test script or set of commands reproducing this issue  As above   ## Environment  Environment: OS: Ubuntu 20.04 Browser: - Mozilla Firefox 84.0.2 Browser version: - Mozilla Firefox 84.0.2 Browser Driver version: Gecko 0.25 https://github.com/mozilla/geckodriver/releases/download/v0.25.0/geckodriver-v0.25.0-linux64.tar.gz Language Bindings version: Ruby (using 3.0 as can be seen in error path)","closed","C-rb,","AdamaTNT","2021-01-28T23:27:31Z","2021-09-05T08:21:28Z"
"","9341","Download Restrictions not working in Beta-2","## üêõ Bug Report  The experimental option ""download_restrictions"" is not working.  ## To Reproduce  Set ""download_restrictions"" to ""3"" (block all downloads). Visit a site that redirects to a file download. See a download placed in working directory.  Detailed steps to reproduce the behavior:  ## Expected behavior  No downloaded files should be in the working directory after crawling.  ## Test script or set of commands reproducing this issue  ``` 		// no downloads 		Map chromePrefs = new HashMap(); 		chromePrefs.put(""download_restrictions"", 3); 		options.setExperimentalOption(""prefs"", chromePrefs);  		// Stop any unwanted downloading of *.pdf *.crdownload et al. files 		parameters = new HashMap(); 		parameters.put(""behavior"",""deny""); 		driver.executeCdpCommand(""Browser.setDownloadBehavior"", parameters);  ```  ## Environment  OS: Amazon Linux 2 Browser: Chrome Browser version: Version 89.0.4389.90 (Official Build) (64-bit) Browser Driver version: ChromeDriver 89.0.4389.23 Language Bindings version: Java 8 Selenium Grid version (if applicable): Beta 2","closed","","githubuser100007","2021-03-26T22:16:06Z","2021-09-05T08:10:30Z"
"","9445","Selenium 4 beta RemoteWebDriver cannot instantiate with Proxy","## üêõ Bug Report  The exception is thrown on the RemoteWebDriver object instantiation when selenium 4 beta 1/2/3 used with proxy.  Same piece of code working with Selenium v3.141.59 with proxy.  We are using BrowserStack's remote hub url and which is already whitelisted in corporate network. Proxy is not getting honoured with selenium 4 java binding.   ## To Reproduce  Need to use proxy and (public) hub url offered like BrowserStack https://hub-cloud.browserstack.com  Detailed steps to reproduce the behavior:  ## Expected behavior  RemoteDriver should able to connect with BS hub with proxy.  ## Test script or set of commands reproducing this issue                      org.seleniumhq.selenium             selenium-java             4.0.0-beta-3                                         org.seleniumhq.selenium             selenium-remote-driver             4.0.0-beta-3           ----------       package com.sample;              import org.openqa.selenium.Capabilities;       import org.openqa.selenium.WebDriver;       import org.openqa.selenium.remote.DesiredCapabilities;       import org.openqa.selenium.remote.RemoteWebDriver;              import java.net.URL;              public class Runner {      public static final String AUTOMATE_USERNAME = ""userName"";     public static final String AUTOMATE_ACCESS_KEY = ""AccessKey"";     public static final String hub = ""https://"" + AUTOMATE_USERNAME + "":"" + AUTOMATE_ACCESS_KEY + ""@hub-cloud.browserstack.com/wd/hub"";     public static WebDriver driver = null;      public static void main(String[] args) {         setProxy();         try {             driver = new RemoteWebDriver(new URL(hub), getBSCapabilities());         } catch (Exception e) {             e.printStackTrace();         }          if (driver != null) {             driver.get(""https://www.google.com"");             driver.quit();         }     }      public  static Capabilities getBSCapabilities(){         DesiredCapabilities caps = new DesiredCapabilities();         caps.setCapability(""os"", ""Windows"");         caps.setCapability(""os_version"", ""10"");         caps.setCapability(""browser"", ""Chrome"");         caps.setCapability(""browser_version"", ""80"");         caps.setCapability(""browserstack.localIdentifier"", ""xyz"");         return caps;     }      private static void setProxy() {         System.getProperties().put(""http.proxyHost"", ""host"");         System.getProperties().put(""http.proxyPort"", ""8080"");         System.getProperties().put(""http.proxyUser"", ""user"");         System.getProperties().put(""http.proxyPass"", ""psw"");          System.getProperties().put(""https.proxyHost"", ""host"");         System.getProperties().put(""https.proxyPort"", ""8080"");         System.getProperties().put(""https.proxyUser"", ""user"");         System.getProperties().put(""https.proxyPass"", ""psw"");     } }  You will get exception like        May 05, 2021 4:51:49 PM org.openqa.selenium.remote.tracing.opentelemetry.OpenTelemetryTracer createTracer         INFO: Using OpenTelemetry for tracing         org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.         Build info: version: '4.0.0-beta-1', revision: '9c03156c2b'         System info: host: 'XXXXXXXXX', ip: 'XXXXXXXXXX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_231'         Driver info: org.openqa.selenium.remote.RemoteWebDriver         Command: [null, newSession {desiredCapabilities=Capabilities {browserName: Chrome, bstack:options: {buildName: BUILD_NAME, chrome: Capabilities {browserName: ..., consoleLogs: info, debug: true, local: true, localIdentifier: LocalIdentifier, maskCommands: setValues, getValues, setCo..., networkLogs: true, os: Windows, osVersion: 10, projectName: Sampe Test , sessionName: Test Session}}}]         Capabilities {} 	        at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635) 	        at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:252) 	        at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:174) 	        at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:152) 	        at com.sample.Runner.main(Runner.java:27)         Caused by: java.io.UncheckedIOException: java.net.ConnectException: connection timed out: hub-cloud.browserstack.com/185.44.131.206:443 	        at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:73) 	        at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	        at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	        at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49) 	        at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) 	        at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) 	        at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:93) 	        at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:56) 	        at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:103) 	        at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	        at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:153) 	        at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39) 	        at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:620) 	        ... 4 more         Caused by: java.net.ConnectException: connection timed out: hub-cloud.browserstack.com/185.44.131.206:443 	        at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179) 	        at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108) 	        at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28) 	        at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20) 	        at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578) 	        at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571) 	        at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550) 	        at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491) 	        at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616) 	        at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609) 	        at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117) 	        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262) 	        at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) 	        at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) 	        at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) 	        at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472) 	        at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500) 	        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) 	        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) 	        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	        at java.lang.Thread.run(Thread.java:748)         Caused by: io.netty.channel.ConnectTimeoutException: connection timed out: hub-cloud.browserstack.com/185.44.131.206:443 	        at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:261) 	        ... 9 more  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 90 Language Bindings version: Java  4.0.0-beta-1/2/3","closed","","pritesh-patil","2021-05-05T12:38:33Z","2021-09-05T08:06:31Z"
"","9277","RemoteWebDriver cannot connect to Selenium Grid 4","## üêõ Bug Report  The exception is thrown on the RemoteWebDriver object instantiation when application targeting .Net Framework 4.8.  ## To Reproduce  Run following code in an application targeting net48:  ``` var chromeOpts = new ChromeOptions();‚Ä® var driver = new RemoteWebDriver(new Uri(""http://selenium-grid:4444/wd/hub/""), chromeOpts);‚Ä® driver.Navigate().GoToUrl(""http://application-url"");‚Ä® driver.Quit(); ```  You'll get exception like:  ``` Unhandled Exception: OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://selenium-grid:4444/wd/hub/session timed out after 60 seco nds. ---> System.Threading.Tasks.TaskCanceledException: A task was canceled.    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.Remote.HttpCommandExecutor.d__30.MoveNext() --- End of stack trace from previous location where exception was thrown ---    at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)    at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)    at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    --- End of inner exception stack trace ---    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, DriverOptions options)    at ConsoleApplication1.Program.Main(String[] args) in C:\Projects\Test\SeleniumTest\ConsoleApplication1\ConsoleApplication1\Program.cs:line 13 ```  ## Expected behavior  A RemoteWebDriver created successfully.  ## Test script or set of commands reproducing this issue  See above.  ## Environment  OS: Windows 10  Browser: any Browser version: any Browser Driver version: any Language Bindings version: .NET Selenium.WebDriver 4.0.0-beta1 Selenium Grid version (if applicable): docker image `selenium/hub:4.0.0-beta-2-prerelease-20210312`","closed","C-dotnet,","stawr93","2021-03-13T19:26:39Z","2021-11-07T00:06:30Z"
"","9671","[java] DevTools are using the INFO log level while debugging","## üêõ Bug Report  The DevTools are using the INFO log level while debugging, this might be usefull to debug the DevTools. While debugging a UI testcase this is disturbing and not desired, it would be good to change this.  One option would be to allow a system property to overwrite the automatic detection e.g. Setting selenium.webdriver.verbose explicit to false should overwrite the automatic detection   ## To Reproduce  Debug the following code, the console will be full with useless output.  ```    System.setProperty(""selenium.webdriver.verbose"", ""false"");     DevTools devTools = driver.getDevTools();    devTools.createSession();     devTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));     api.navigateTo(""https://www.google.com"", ""call a page""); ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.164 Browser Driver version: 91.0.4472.101 Language Bindings version: Java 4.0-beta4 Selenium Grid version (if applicable): N/A","closed","C-java,","joerg1985","2021-07-21T12:23:37Z","2022-01-13T00:07:49Z"
"","9018","Click() function doesn't work all the time","## üêõ Bug Report  The code find the element I ask him to find, but the function .click() doesn't work.    Detailed steps to reproduce the behavior:  ## Expected behavior The code find the element ""followers"" and click on it.  ## Test script or set of commands reproducing this issue  ``` from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC  # just launch tiktok on the browser  fp = webdriver.FirefoxProfile(""/home/pierre/.mozilla/firefox/0dcl56q3.default-release"") driver = webdriver.Firefox(executable_path='./geckodriver',firefox_profile=fp)  driver.get(""https://www.tiktok.com/@programm___r?lang=en"")   # YOU HAVE TO BE CONNECTED TO TIKTOK TO SEE THE BOX ICON AND THE FOLLOWER CATEGORY :)  # click on the box that shows notification  driver.find_element_by_class_name('jsx-1737374796.header-inbox-icon').click()  # wait until the pop up of notification appears and so we can see the ""followers"" category button WebDriverWait(driver,20).until(EC.presence_of_element_located((By.XPATH,'/html/body/div[1]/div/div[1]/div/div[3]/div[2]/div[2]/div/div[1]/div/span[5]') # supposed to click on the ""followers"" category  driver.find_element_by_xpath('/html/body/div[1]/div/div[1]/div/div[3]/div[2]/div[2]/div/div[1]/div/span[5]').click() ```                      ## Environment  OS:  Ubuntu Browser:  Firefox Browser version: 84.0  Browser Driver version: GeckoDriver 0.28  Language Bindings version: Python 3.8","closed","R-awaiting answer,","AphroMad","2021-01-01T18:28:17Z","2021-09-05T08:27:39Z"
"","9245","visibility_of_element_located yields AttributeError: 'bool' object has no attribute 'is_displayed'","## üêõ Bug Report  The code (either selector) ```             WebDriverWait(driver, 20) \                 .until(EC.visibility_of_element_located((                     # By.XPATH,                     # '//input[@id=""zipCode""]'                     By.ID,                     'zipCode'                 ))) ``` Yields  ``` AttributeError: 'bool' object has no attribute 'is_displayed' ``` When put after `driver.get(url)`. If I wait for the page to load myself, and then execute the code (when the element _is_ visible), then I do not get the error.  Full traceback: ``` File ""/home/torstein/code/fintechdb/MortgageComparison/mortgagecomparison/bankrate/scraper.py"", line 151, in go_comparison_page     141  def go_comparison_page(     142      self,     143      rq: RateQuery,     144  ) -> None:  (...)     147      driver.get(get_url(rq))     148       149      # Wait for page load     150      try: --> 151          WebDriverWait(driver, 20) .until(EC.visibility_of_element_located((     152                ..................................................      self =       rq = RateQuery(zip_code='01001', credit_score=, property_type=, loan_terms=[, ,             , , , , ,  71               value = method(self._driver)     72               if value:     ..................................................      self =       method =       message = ''      end_time = 1615238469.2731917      self._timeout = 20      self._driver =      ..................................................  File ""/home/torstein/anaconda3/lib/python3.8/site-packages/selenium/webdriver/support/expected_conditions.py"", line 128, in __call__     126  def __call__(self, driver):     127      try: --> 128          return _element_if_visible(_find_element(driver, self.locator))     129      except StaleElementReferenceException:     ..................................................      self =       driver =       self.locator = ('id', 'zipCode', )      StaleElementReferenceException =      ..................................................  File ""/home/torstein/anaconda3/lib/python3.8/site-packages/selenium/webdriver/support/expected_conditions.py"", line 148, in _element_if_visible     147  def _element_if_visible(element, visibility=True): --> 148      return element if element.is_displayed() == visibility else False     ..................................................      element = False      visibility = True      element.is_displayed = # AttributeError           element = False     ..................................................  ---- (full traceback above) ---- File ""/home/torstein/anaconda3/lib/python3.8/site-packages/IPython/core/interactiveshell.py"", line 3437, in run_code     exec(code_obj, self.user_global_ns, self.user_ns) File """", line 1, in      import codecs, os;__pyfile = codecs.open('''/tmp/py1rUXdq''', encoding='''utf-8''');__code = __pyfile.read().encode('''utf-8''');__pyfile.close();os.remove('''/tmp/py1rUXdq''');exec(compile(__code, '''/home/torstein/code/fintechdb/MortgageComparison/mortgagecomparison/test/test_scraper.py''', 'exec')); File ""/home/torstein/code/fintechdb/MortgageComparison/mortgagecomparison/test/test_scraper.py"", line 103, in      scraper.go_comparison_page(rq2) File ""/home/torstein/code/fintechdb/MortgageComparison/mortgagecomparison/bankrate/scraper.py"", line 151, in go_comparison_page     WebDriverWait(driver, 20) .until(EC.visibility_of_element_located(( File ""/home/torstein/anaconda3/lib/python3.8/site-packages/selenium/webdriver/support/wait.py"", line 71, in until     value = method(self._driver) File ""/home/torstein/anaconda3/lib/python3.8/site-packages/selenium/webdriver/support/expected_conditions.py"", line 128, in __call__     return _element_if_visible(_find_element(driver, self.locator)) File ""/home/torstein/anaconda3/lib/python3.8/site-packages/selenium/webdriver/support/expected_conditions.py"", line 148, in _element_if_visible     return element if element.is_displayed() == visibility else False  AttributeError: 'bool' object has no attribute 'is_displayed' ```   ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Fedora 32 Browser: Firefox Browser version: 85.0.1 (64-bit) geckodriver 0.26.0 Browser Driver version: Language Bindings version:   Python 3.8.8","closed","C-py,","tsoernes","2021-03-08T21:25:48Z","2021-09-05T08:10:43Z"
"","9708","GridLauncher missing","## üêõ Bug Report  The class org.openqa.grid.selenium.GridLauncherV4 does not exist. This makes us unable to use the parameters ""-proxy"" and ""-servlets"".  ## To Reproduce  Detailed steps to reproduce the behavior:  >java -cp selenium-server-4.0.0-beta-2.jar org.openqa.grid.selenium.GridLauncherV4 -role node Error: Could not find or load main class org.openqa.grid.selenium.GridLauncherV4  ## Expected behavior  The class should exist.  ## Environment  OS: Windows 10 Selenium Grid version (if applicable): 4.0.0-beta2","open","C-java,","ccarmannt","2021-08-02T18:21:28Z","2022-05-27T09:20:09Z"
"","9672","Incorrect syntax for /images/json API request","## üêõ Bug Report  The class `org.openqa.selenium.docker.v1_41.ListImages` sends a request like `{""reference"": {""familiarName"":true}}` but this is not correct according to the [documentation](https://docs.docker.com/engine/api/v1.41/#operation/ImageList). The request should be  `{""reference"": [""familiarName""]}`   ## To Reproduce  This assumes you have Docker installed and configured to accept tcp connections. For instructions see [Docker documentation](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option).  Execute the following commands: 1. `docker pull selenium/standalone-firefox:4.0.0-rc-1-prerelease-20210713` 2. `curl :2375/v1.41/images/json?filters=%7B%22reference%22%3A%7B%22selenium%2Fstandalone-chrome%3A4.0.0-rc-1-prerelease-20210713%22%3Atrue%7D%7D` ( URL encoded version of `curl dockerDaemonUrl:2375/v1.41/images/json?filters={""reference"":{""selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210713"":true}}` )    ## Expected behavior  This assumes you have Docker installed and configured to accept tcp connections. For instructions see [Docker documentation](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option). The container image details should be returned. Expected behaviour can be viewed by running the following commands:  1. `docker pull selenium/standalone-firefox:4.0.0-rc-1-prerelease-20210713` 2. `curl :2375/v1.41/images/json?filters=%7B%22reference%22%3A%5B%22selenium%2Fstandalone-chrome%3A4.0.0-rc-1-prerelease-20210713%22%5D%7D` ( URL encoded version of `curl dockerDaemonUrl:2375/v1.41/images/json?filters={""reference"":[""selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210713""]}` )  ## Test script or set of commands reproducing this issue  This assumes you have Docker installed and configured to accept tcp connections. For instructions see [Docker documentation](https://docs.docker.com/engine/reference/commandline/dockerd/#daemon-socket-option).  ### Linux ``` #!/bin/sh  # update to your docker tcp URL dockerUrl=  docker pull selenium/standalone-firefox:4.0.0-rc-1-prerelease-20210713 curl $dockerUrl:2375/v1.41/images/json?filters=%7B%22reference%22%3A%7B%22selenium%2Fstandalone-chrome%3A4.0.0-rc-1-prerelease-20210713%22%3Atrue%7D%7D ```  ### Windows   1. Open a command prompt and run `docker pull selenium/standalone-firefox:4.0.0-rc-1-prerelease-20210713` 2. Open a browser and paste into the address bar `:2375/v1.41/images/json?filters=%7B%22reference%22%3A%5B%22selenium%2Fstandalone-chrome%3A4.0.0-rc-1-prerelease-20210713%22%5D%7D` ( URL encoded version of `dockerDaemonUrl:2375/v1.41/images/json?filters={""reference"":[""selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210713""]}`  ## Suggested Solution  Change line 57 of `org.openqa.selenium.docker.v1_41.ListImages`  from: ```     Map filters = ImmutableMap.of(""reference"", ImmutableMap.of(familiarName, true)); ``` to: ```     Map filters = ImmutableMap.of(""reference"", ImmutableList.of(familiarName)); ```  Update `org.openqa.selenium.docker.v1_41.ListImagesTest` to reflect the change: ```         Map raw = new Json().toType(decoded, MAP_TYPE);          String[] rawRef = (Map) raw.get(""reference"");         assertThat(rawRef).contains(""selenium/standalone-firefox:latest""); ```  ## Environment  OS: CentOS 8 Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: N/A Selenium Grid version (if applicable): N/A","closed","needs-triaging,","m-lefevre","2021-07-21T13:43:16Z","2021-09-05T07:50:38Z"
"","9327","`ProxyNodeCdp` should also find Firefox CDP endpoints","## üêõ Bug Report  The `ProxyNodeCdp` class only looks for Chrome and Edge CDP endpoints. It should also look for Firefox's endpoint.  ## To Reproduce  Read the code of the `apply` method.  ## Expected behavior  Firefox's CDP end point is reported.  ## Test script or set of commands reproducing this issue  N/A  ## Environment  OS: All Browser: Firefox Browser version: 88b1+ Browser Driver version: N/A Language Bindings version: Java Selenium Grid version (if applicable): 4.0","closed","C-java,","shs96c","2021-03-23T17:59:48Z","2021-09-05T08:08:40Z"
"","9693","Deprecate `buildProfile` in JS Bindings","## üêõ Bug Report  The `buildProfile` command is not really supported anymore and the Mozilla team would prefer if we sent over the extensions in a separate command and that profile setting are done in smaller chunks to prevent people sending over profiles that are gigabytes big.    ## To Reproduce  This just a deprecation warning being added.  Detailed steps to reproduce the behavior:  ## Expected behavior  When you use those command that you get a warning.  ## Test script or set of commands reproducing this issue  Look at the code in `javascript/node/selenium-webdriver/firefox.js` and deprecate. Please feel to join us in the [slack](https://www.selenium.dev/support/) to get started. Please @ me directly and I will reply as soon as possible.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","I-stale,","AutomatedTester","2021-07-29T13:42:47Z","2022-06-19T00:12:05Z"
"","9853","events.js uses deprecated method initKeyEvent, disabled by default in Firefox 93","## üêõ Bug Report  Sorry, I'm foregoing the typical report structure since this is a very specific code/api issue.  In javascript/atoms/events.js, there is a call to initKeyEvent [here](https://github.com/SeleniumHQ/selenium/blob/36bc787321ee2b9ef88f37c23c8167aa30dc63eb/javascript/atoms/events.js#L358).  According to Mozilla's documentation [here](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyEvent), this method is deprecated. Importantly:  >Firefox hides this method behind the preference (dom.keyboardevent.init_key_event.enabled) from version 93 and plans to remove it shortly afterwards.  Any code that depends on this file's usage of initKeyEvent is broken by default starting with Firefox 93 (currently in beta). It's unclear when Mozilla will remove the workaround.","closed","needs-triaging,","mtrea","2021-09-20T18:58:44Z","2021-10-22T00:06:51Z"
"","9075","URL Validation denies valid TLDs (*.aero)","## üêõ Bug Report  Some rare TLDs like "".aero"" will trigger  `""malformed URL: URL constructor: *.aero is not a valid URL.""`  Stacktrace:  ``` stacktrace: 'WebDriverError@chrome://marionette/content/error.js:175:5 InvalidArgumentError@chrome://marionette/content/error.js:304:5 GeckoDriver.prototype.navigateTo@chrome://marionette/content/driver.js:1215:11 ```  ## To Reproduce  Request an url with TLD .aero.  ## Expected behavior  All valid TLDs should be accepted.  ## Environment  OS: Ubuntu 18.04 Browser: Firefox Browser version: latest Browser Driver version: latest Selenium Grid version (if applicable): Standalone","closed","R-awaiting answer,","ErrorInPersona","2021-01-20T20:04:09Z","2021-09-05T08:21:32Z"
"","9440","Selenium Grid Chrome Node - Chrome failed to start","## üêõ Bug Report  Since a view days running tests with a chrome node in selenium grid doesn't work for me anymore. The last line of the chrome node logs says that chrome crashed (Response code 500. Message: unknown error: Chrome failed to start: crashed.\n (chrome not reachable)).  It works for me fine when using a firefox node or when using a chrome driver locally without using selenium grid.  ``` 2021-05-04 16:10:28,041 INFO Included extra file ""/etc/supervisor/conf.d/selenium.conf"" during parsing  2021-05-04 16:10:28,043 INFO supervisord started with pid 8  2021-05-04 16:10:29,046 INFO spawned: 'xvfb' with pid 10  2021-05-04 16:10:29,047 INFO spawned: 'vnc' with pid 11  2021-05-04 16:10:29,049 INFO spawned: 'novnc' with pid 12  2021-05-04 16:10:29,050 INFO spawned: 'selenium-node' with pid 13  2021-05-04 16:10:29,064 INFO success: xvfb entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  2021-05-04 16:10:29,064 INFO success: vnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  2021-05-04 16:10:29,065 INFO success: novnc entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  2021-05-04 16:10:29,065 INFO success: selenium-node entered RUNNING state, process has stayed up for > than 0 seconds (startsecs)  Configuring server...  Setting up SE_NODE_HOST...  Setting up SE_NODE_PORT...  Setting up SE_NODE_GRID_URL...  Starting Selenium Grid Node with configuration:  [events]  publish = ""tcp://selenium-hub:4442""  subscribe = ""tcp://selenium-hub:4443""   [node]  session-timeout = ""300""  override-max-sessions = false  max-sessions = 1   16:10:29.815 INFO [LogManager$RootLogger.log] - Using the system default encoding  16:10:29.818 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing  16:10:29.919 INFO [UnboundZmqEventBus.] - Connecting to tcp://selenium-hub:4442 and tcp://selenium-hub:4443  16:10:29.979 INFO [UnboundZmqEventBus.] - Sockets created  16:10:30.081 INFO [UnboundZmqEventBus.] - Event bus ready  16:10:30.156 INFO [NodeServer.createHandlers] - Reporting self as: http://172.21.0.3:5555  16:10:30.172 INFO [NodeOptions.getSessionFactories] - Detected 12 available processors  16:10:30.187 INFO [NodeOptions.discoverDrivers] - Discovered 1 driver(s)  16:10:30.212 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome"",""platformName"": ""LINUX""} 1 times  16:10:30.221 INFO [Node.] - Binding additional locator mechanisms: name, id  16:10:30.395 INFO [NodeServer$1.start] - Starting registration process for node id bed65ecd-2b24-44a8-af66-02216a6fd137  16:10:30.396 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-3 (revision 5d108f9a67): http://172.21.0.3:5555  16:10:30.411 INFO [NodeServer$1.lambda$start$1] - Sending registration event...  16:10:31.023 INFO [NodeServer.lambda$createHandlers$1] - Node has been added  Starting ChromeDriver 90.0.4430.24 (4c6d850f087da467d926e8eddb76550aed655991-refs/branch-heads/4430@{#429}) on port 27869  Only local connections are allowed.  Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.  ChromeDriver was started successfully.  [1620144666.519][SEVERE]: bind() failed: Cannot assign requested address (99)  16:11:08.209 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""f27e54c48a0b4f927df64f30c126a00a"",""spanId"": ""d8b7c6d8cdc1175f"",""spanKind"": ""INTERNAL"",""eventTime"": 1620144668194799300,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:27869"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.\n (chrome not reachable)\n (The process started from chrome location \u002fusr\u002fbin\u002fgoogle-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.0.0-beta-3', revision: '5d108f9a67'\nSystem info: host: '987a00db7242', ip: '172.21.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.128-microsoft-standard', java.version: '1.8.0_282'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.\n (chrome not reachable)\n (The process started from chrome location \u002fusr\u002fbin\u002fgoogle-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.0.0-beta-3', revision: '5d108f9a67'\nSystem info: host: '987a00db7242', ip: '172.21.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.128-microsoft-standard', java.version: '1.8.0_282'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:128)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:63)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:325)\n\tat org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52)\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"",""exception.type"": ""org.openqa.selenium.SessionNotCreatedException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""browserName\"": \""chrome\"",\""goog:chromeOptions\"": {}}\n""}}   Starting ChromeDriver 90.0.4430.24 (4c6d850f087da467d926e8eddb76550aed655991-refs/branch-heads/4430@{#429}) on port 7430  Only local connections are allowed.  Please see https://chromedriver.chromium.org/security-considerations for suggestions on keeping ChromeDriver safe.  C[hro1m62e0D1r4i4v6e7r1 .w4a2s started successfully.  7][SEVERE]: bind() failed: Cannot assign requested address (99)  16:11:12.780 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""012dd4050fdd434ad31e59719d041c6f"",""spanId"": ""ea6ca3f338ee0f80"",""spanKind"": ""INTERNAL"",""eventTime"": 1620144672766739400,""eventName"": ""exception"",""attributes"": {""driver.url"": ""http:\u002f\u002flocalhost:7430"",""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.\n (chrome not reachable)\n (The process started from chrome location \u002fusr\u002fbin\u002fgoogle-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.0.0-beta-3', revision: '5d108f9a67'\nSystem info: host: '987a00db7242', ip: '172.21.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.128-microsoft-standard', java.version: '1.8.0_282'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: unknown error: Chrome failed to start: crashed.\n (chrome not reachable)\n (The process started from chrome location \u002fusr\u002fbin\u002fgoogle-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nBuild info: version: '4.0.0-beta-3', revision: '5d108f9a67'\nSystem info: host: '987a00db7242', ip: '172.21.0.3', os.name: 'Linux', os.arch: 'amd64', os.version: '4.19.128-microsoft-standard', java.version: '1.8.0_282'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)\n\tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:128)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:63)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:325)\n\tat org.openqa.selenium.grid.node.NewNodeSession.execute(NewNodeSession.java:52)\n\tat org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.security.RequiresSecretFilter.lambda$apply$0(RequiresSecretFilter.java:64)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:240)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:68)\n\tat org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n"",""exception.type"": ""org.openqa.selenium.SessionNotCreatedException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""browserName\"": \""chrome\"",\""goog:chromeOptions\"": {}}\n""}} ```    ## To Reproduce    ```yml version: ""3"" services:   chrome:     image: selenium/node-chrome:4.0.0-beta-3-20210426     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - ""6900:5900""    firefox:     image: selenium/node-firefox:4.0.0-beta-3-20210426     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - ""6902:5900""    selenium-hub:     image: selenium/hub:4.0.0-beta-3-20210426     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```  With C# (Selenium.WebDriver 4.0.0-beta2): ```csharp var options = new ChromeOptions();  using var driver = new RemoteWebDriver(new Uri(""http://localhost:4444/wd/hub""),     options.ToCapabilities(), TimeSpan.FromMinutes(6));  driver.Navigate().GoToUrl(""https://www.selenium.dev/"");  driver.Close(); ```  Or Python (selenium==4.0.0.b3): ```python from selenium import webdriver from selenium.webdriver.chrome.options import Options  chrome_options = Options()  driver = webdriver.Remote(    command_executor='http://127.0.0.1:4444/wd/hub',    options=chrome_options)  try:     driver.get('https://www.selenium.dev/') finally:     driver.close() ```  ## Expected behavior  Should run without errors","closed","R-awaiting answer,","DavidStahl97","2021-05-04T16:57:35Z","2021-09-05T08:06:29Z"
"","9892","Chrome driver not waiting for more than 60 seconds","## üêõ Bug Report  Simulating 3G/4G network capabilities which is causing page to load slow than usual. Even though implicit wait/page load time out is set , its not considering any of those. Default timeout of 60 seconds is always considered. https://github.com/SeleniumHQ/selenium/issues/6650 - Not seeing any constructor in chrome driver to override the same in java per this reference .   ## To Reproduce I have set implicit wait and tried using page load timeout to be set as 120 seconds.  Since running in slow condition, page load takes more than usual and getting timeout after 60 seconds.    Detailed steps to reproduce the behavior:  ## Expected behavior  There should be some way in which we can make driver wait for more than 60 seconds .  ## Test script or set of commands reproducing this issue          System.setProperty(""webdriver.chrome.driver"",""chromedriver-3"");         ChromeOptions co = new ChromeOptions();         co.addArguments(""--kiosk"");         ChromeDriver driver = new ChromeDriver(co);         driver.manage().timeouts().pageLoadTimeout(120,TimeUnit.SECONDS);         DevTools devTools = driver.getDevTools();         devTools.createSession();         devTools.send(Network.emulateNetworkConditions(                 false,                 500,                 4000,                 2000,                 Optional.of(ConnectionType.CELLULAR3G)         ));         driver.get(""https://www.youtube.com/feed/library"");         driver.findElement(By.xpath(""//div[@id='button']//*[contains(text(),'Sign in')]"")).click();  Exception:            Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:8003 after 60000 ms 	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357) 	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1908) 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:201) 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:55) 	... 39 more      Caused by: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:8003 after 60000 ms 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:680) 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:755) 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:483) 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) 	at java.lang.Thread.run(Thread.java:748)   Any alternative in place to have this timeout set by user?  ## Environment  OS: macOS  Browser:Chrome Browser version: 94.0 Browser Driver version: 94.0 Language Bindings version: 4.0.0-alpha-4","closed","R-awaiting answer,","Sriram-S","2021-10-08T05:24:21Z","2021-11-08T00:06:56Z"
"","9153","Server does not stop http client threads for closed sessions","## üêõ Bug Report  Server does not stop http client threads for closed sessions  ## To Reproduce  Start a standalone server, run a simple scenario that opens and closes sessions: ``` for (int i = 0; i < 60; i++) {   WebDriver driver = new RemoteWebDriver(new ChromeOptions());   driver.quit(); } ```  and watch the threads:  ![image](https://user-images.githubusercontent.com/617090/107142345-64cdd800-693f-11eb-80d0-b01954de0a39.png)  ## Environment  OS: Win10 Browser: any Browser version: any Browser Driver version: any Language Bindings version: java Selenium Grid version (if applicable): 4.0-alpha-7","closed","needs-triaging,","barancev","2021-02-07T09:25:00Z","2021-09-05T08:19:12Z"
"","9154","Server attempts indefinitely to create a session with invalid capabilities","## üêõ Bug Report  Server attempts indefinitely to create a session with invalid capabilities  ## To Reproduce  Start a server and attempt to create a session with invalid capabilities: ``` FirefoxOptions options = new FirefoxOptions(); options.setCapability(""moz:unsupported"", ""foo""); driver = new RemoteWebDriver(options); ``` The server tries to start a session, this attempt ends wity a failure, the server puts the request back to the queue and later try again to create a session and so on ad infinem.  Later the client thows `SessionNotCreatedException` after a timeout, but the server continues its attempts to create a session.  ## Environment  OS: Win10 Browser: Firefox Browser version: 83 Browser Driver version: 0.29 Language Bindings version: Java Selenium Grid version (if applicable): 4.0-alpha-7","closed","C-grid,","barancev","2021-02-07T11:30:54Z","2021-09-05T08:15:39Z"
"","9196","selenium4.0b1 the func driver.log.add_listener cant work","## üêõ Bug Report  selenium4.0b1 the func driver.log.add_listener cant work ```$(python) import asyncio from selenium import webdriver from selenium.webdriver.common.bidi.console import Console  async def main():     driver = webdriver.Chrome()     driver.get('http://192.168.70.45/#/login')     async with driver.log.add_listener(Console.ERROR) as messages:         driver.execute_script(""console.error(\""I don't cheese\"")"")         driver.execute_script(""console.log('I love cheese')"")     assert messages[""message""] == ""I don't cheese""  asyncio.run(main()) ``` the raise error ```$(cmd) DevTools listening on ws://127.0.0.1:62557/devtools/browser/615bde01-4012-4cda-a6e5-818e28dc10f8 [7004:17476:0220/165151.754:ERROR:device_event_log_impl.cc(211)] [16:51:51.755] USB: usb_device_handle_win.cc:1049 Failed to read descriptor from node connection: ËøûÂà∞Á≥ªÁªü‰∏äÁöÑËÆæÂ§áÊ≤°ÊúâÂèëÊå•‰ΩúÁî®„ÄÇ (0x1F) [7004:17476:0220/165151.755:ERROR:device_event_log_impl.cc(211)] [16:51:51.756] USB: usb_device_handle_win.cc:1049 Failed to read descriptor from node connection: ËøûÂà∞Á≥ªÁªü‰∏äÁöÑËÆæÂ§áÊ≤°ÊúâÂèëÊå•‰ΩúÁî®„ÄÇ (0x1F) [7004:17476:0220/165151.769:ERROR:device_event_log_impl.cc(211)] [16:51:51.769] USB: usb_device_handle_win.cc:1049 Failed to read descriptor from node connection: ËøûÂà∞Á≥ªÁªü‰∏äÁöÑËÆæÂ§áÊ≤°ÊúâÂèëÊå•‰ΩúÁî®„ÄÇ (0x1F) [7004:17476:0220/165151.785:ERROR:device_event_log_impl.cc(211)] [16:51:51.785] USB: usb_device_handle_win.cc:1049 Failed to read descriptor from node connection: ËøûÂà∞Á≥ªÁªü‰∏äÁöÑËÆæÂ§áÊ≤°ÊúâÂèëÊå•‰ΩúÁî®„ÄÇ (0x1F) Traceback (most recent call last):   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\runpy.py"", line 193, in _run_module_as_main     return _run_code(code, main_globals, None,   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\runpy.py"", line 86, in _run_code     exec(code, run_globals)   File ""c:\Users\a5036\.vscode\extensions\ms-python.python-2021.2.582707922\pythonFiles\lib\python\debugpy\__main__.py"", line 45, in      cli.main()   File ""c:\Users\a5036\.vscode\extensions\ms-python.python-2021.2.582707922\pythonFiles\lib\python\debugpy/..\debugpy\server\cli.py"", line 444, in main     run()   File ""c:\Users\a5036\.vscode\extensions\ms-python.python-2021.2.582707922\pythonFiles\lib\python\debugpy/..\debugpy\server\cli.py"", line 285, in run_file     runpy.run_path(target_as_str, run_name=compat.force_str(""__main__""))   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\runpy.py"", line 263, in run_path     return _run_module_code(code, init_globals, run_name,   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\runpy.py"", line 96, in _run_module_code     _run_code(code, mod_globals, init_globals,   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\runpy.py"", line 86, in _run_code     exec(code, run_globals)   File ""c:\workspace\study\test\test1.py"", line 16, in      asyncio.run(main())   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\asyncio\runners.py"", line 43, in run     return loop.run_until_complete(main)   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\asyncio\base_events.py"", line 616, in run_until_complete     return future.result()   File ""c:\workspace\study\test\test1.py"", line 10, in main     async with driver.log.add_listener(Console.ERROR) as messages:   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\contextlib.py"", line 171, in __aenter__     return await self.gen.__anext__()   File ""c:\workspace\study\test\venv\lib\site-packages\selenium\webdriver\remote\log.py"", line 143, in add_listener     async with self._get_bidi_connection():   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\contextlib.py"", line 171, in __aenter__     return await self.gen.__anext__()   File ""c:\workspace\study\test\venv\lib\site-packages\selenium\webdriver\remote\log.py"", line 180, in _get_bidi_connection     async with cdp.open_cdp(ws_url) as conn:   File ""C:\Users\a5036\AppData\Local\Programs\Python\Python38\lib\contextlib.py"", line 171, in __aenter__     return await self.gen.__anext__()   File ""c:\workspace\study\test\venv\lib\site-packages\selenium\webdriver\common\bidi\cdp.py"", line 459, in open_cdp     async with trio.open_nursery() as nursery:   File ""c:\workspace\study\test\venv\lib\site-packages\trio\_core\_run.py"", line 796, in __aenter__     self._scope.__enter__()   File ""c:\workspace\study\test\venv\lib\site-packages\trio\_core\_ki.py"", line 159, in wrapper     return fn(*args, **kwargs)   File ""c:\workspace\study\test\venv\lib\site-packages\trio\_core\_run.py"", line 449, in __enter__     task = _core.current_task()   File ""c:\workspace\study\test\venv\lib\site-packages\trio\_core\_run.py"", line 2267, in current_task     raise RuntimeError(""must be called from async context"") from None RuntimeError: must be called from async context ```  ## To Reproduce  Detailed steps to reproduce the behavior: Stable error report after running the above code  ## Expected behavior  dont raise error  ## Test script or set of commands reproducing this issue  ```$(python) import asyncio from selenium import webdriver from selenium.webdriver.common.bidi.console import Console  async def main():     driver = webdriver.Chrome()     driver.get('http://192.168.70.45/#/login')     async with driver.log.add_listener(Console.ERROR) as messages:         driver.execute_script(""console.error(\""I don't cheese\"")"")         driver.execute_script(""console.log('I love cheese')"")     assert messages[""message""] == ""I don't cheese""  asyncio.run(main()) ```  ## Environment  OS: Windows 10 Browser: Chrome  Browser version: 88.0.4324.182 Browser Driver version: chromedriver.exe 88.0.4324.96 Language Bindings version: Python 3.8.2 64-bit","closed","C-py,","Swj-ningbo","2021-02-20T09:20:25Z","2021-09-05T08:15:50Z"
"","9382","fail to start browser after Chrome upgraded to 90 with driver 90.0.4430.24 on Mac","## üêõ Bug Report  selenium-standalone start to throw the following error after Chrome upgraded to 90 with driver 90.0.4430.24 on Mac ```         message: `Failed to create session.‚êä         Unable to create new service: ChromeDriverService‚êä         Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'‚êä         System info: host: 'xxxxx.local', ip: '10.xx.xx.xx', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '11.2.3', java.version: '15.0.1'‚êä         Driver info: driver.version: unknown`,       } ```  ## To Reproduce  Upgrade chrome to 90 and start selenium via: `java -Dwebdriver.chrome.driver=chromedriver_ 90.0.4430.24 -jar selenium-server-standalone-3.141.59.jar -port 4444`  And test with the following script: ```typescript // run with ts-node test.ts import { remote } from ""webdriverio"";  const opt = {   hostname: 'localhost',   port: 4444,   path: '/wd/hub',   capabilities: {     browserName: 'chrome',   } };  void (async () => { const driver = await remote(opt); })(); ````","closed","R-awaiting answer,","link89","2021-04-15T04:28:21Z","2021-09-05T08:06:48Z"
"","9815","Selenium-C#- V 4.0.0-rc1-DesiredCapabilities has been deprecated and henceforth the WinAppDriver is not working","## üêõ Bug Report  Selenium-C#- V 4.0.0-rc1-DesiredCapabilities has been deprecated and henceforth the WinAppDriver is not working  Expected behavior:  DesiredCapabilities should not be deprecated, as it required for automating the WinAppDriver  Environment  OS:  Windows 10 WinAppDriver version: WinAppDriver v1.3 Release Candidate 1 (1.2.99) Language Bindings version: C# Selenium version : Selenium-C#- V 4.0.0-rc1  ![DesiredCapabilities](https://user-images.githubusercontent.com/85741928/133009609-634c9853-4c68-474a-b8f5-a77af9822bf5.png)  ![DesiredCapabilities1](https://user-images.githubusercontent.com/85741928/133009626-7b5b2857-91d5-4d8b-9e3c-0e492e5cb15d.png)","closed","C-dotnet,","svadivel0006","2021-09-13T01:00:56Z","2021-10-29T00:06:12Z"
"","9820","Selenium Java fails to find a CDP implementation after compilation","## üêõ Bug Report  Selenium works fine with Edge in the IDE environment, but becomes unable to find a CDP implementation after compilation.   Output log: ``` MSEdgeDriver was started successfully. Detected dialect: W3C Unable to find an exact match for CDP version 93, so returning the closest version found: a no-op implementation Unable to find CDP implementation matching 93. Unable to find version of CDP to use for . You may need to include a dependency on a specific version of the CDP using something similar to `org.seleniumhq.selenium:selenium-devtools-v86:4.0.0-rc-1` where the version (""v86"") matches the version of the chromium-based browser you're using and the version number of the artifact is the same as Selenium's. org.openqa.selenium.devtools.DevToolsException: You are using a no-op implementation of the CDP. The most likely reason for this is that Selenium was unable to find an implementation of the CDP protocol that matches your browser. Please be sure to include an implementation on the classpath, possibly by adding a new (maven) dependency of `org.seleniumhq.selenium:selenium-devtools-vNN:4.0.0-rc-1` where `NN` matches the major version of the browser you're using. Build info: version: '4.0.0-rc-1', revision: 'bc5511cbda' System info: host: 'LAPTOP-XXXXXX', ip: '192.168.XX.XX', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2' Driver info: DevTools Connection         at org.openqa.selenium.devtools.noop.NoOpDomains.target(NoOpDomains.java:59)         at org.openqa.selenium.devtools.DevTools.createSession(DevTools.java:91) ```  ## To Reproduce   Detailed steps to reproduce the behavior:  1. Install the latest version of Edge stable (93.0.961.47) and add the corresponding edge driver to `PATH`. 2. Initialize Selenium with the following codes: ```java         var driver = new EdgeDriver();         var chromeDevTools = driver.getDevTools();         chromeDevTools.createSession();         chromeDevTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty())); ``` 3. Run it in the IDE environment, such as IDEA, Eclipse, etc. It works normally. 4. Build artifact JAR file and execute the jar with `java -jar NAME_OF_JAR.jar`. 5. It outputs the error above. ## Expected behavior  It should work normally and output `Found exact CDP implementation for version 93` in the console.  ## Test script or set of commands reproducing this issue  pom.xml ```xml       4.0.0      com.example     Example     1.0-SNAPSHOT               11         11                                org.seleniumhq.selenium             selenium-java             4.0.0-rc-1             compile                               org.slf4j             slf4j-simple             1.7.32             compile                               org.seleniumhq.selenium             selenium-devtools-v93             4.0.0-rc-1             compile                 ```  TestBrowser.java ```java public class TestBrowser {     EdgeDriver driver;     DevTools chromeDevTools;      public TestBrowser() {         var options = new EdgeOptions();         driver = new EdgeDriver(options);         chromeDevTools = driver.getDevTools();         chromeDevTools.createSession();         chromeDevTools.send(Network.enable(Optional.empty(), Optional.empty(), Optional.empty()));     } } ``` ## Environment  OS: Windows 11 Browser: Edge Browser version: 93.0.961.47 Browser Driver version:  Edge Driver 93.0.961.44 Language Bindings version: Java 4.0.0-rc-1 Selenium Grid version (if applicable):","closed","","w568w","2021-09-14T05:16:37Z","2021-10-15T00:06:04Z"
"","9591","Selenium WebDriver hover() are not working on few elements in Chrome 91, everything working fine up-to chrome 89 || manual hovering working fine","## üêõ Bug Report  Selenium WebDriver hover() are not working on few elements in Chrome 91, everything working fine up-to chrome 89 but manual hovering working fine in Chrome 91. Ref: https://github.com/SeleniumHQ/selenium/issues/9588  div class=""abstract-tooltip-container cFWAbstractTooltip"" data-aura-class=""cFWAbstractTooltip""> button class=""slds-button_neutral slds-button"" role=""button"" aria-label=""Select From Dropdown Menu""> /div  Environment OS: Windows 10 Browser: Chrome Browser version: 91 Browser Driver version: Compatible with Chrome browser 91 Language Bindings version: Java 1.8 Selenium WebDriver version: 3.141.59","closed","","subrato29","2021-06-18T00:49:00Z","2021-09-05T08:01:02Z"
"","9776","Selenium Web driver does timeout when try to perform actions on window.open("""",""preview window"",'location=no,addressbar=0)","## üêõ Bug Report  Selenium Web Driver does generate window handle on a the new window which is created from a web page on Chrome.  However, it timesout when tried to perform any action on pop up.  The window on parent window was created using below command.  window.open("""", ""DesktopPreview"", 'top=450,left=450,width=450,height=450,location=no,toolbar=no,menubar=no,addressbar=0,titlebar=no,scrollbars=yes,resizable=yes');  ## To Reproduce Detailed steps to reproduce the behavior:  Open a web page which has a link which opens another tab where location, address and other attributes are set as no and it is used as preview template  window.open("""", ""DesktopPreview"", 'top=450,left=450,width=450,height=450,location=no,toolbar=no,menubar=no,addressbar=0,titlebar=no,scrollbars=yes,resizable=yes');  Selenium Web driver does timeout when try to perform actions on such driver  ## Expected behavior  Selenium Webdriver should not throw timeout exception if there is a window open with address location etc set as No  ## Test script or set of commands reproducing this issue  ChromeDriver newdriver = (ChromeDriver)driver.SwitchTo().Window((string)handle[1]);                 var handle1 = driver.CurrentWindowHandle;                 IOptions IO = driver.Manage();                 IO.Window.FullScreen();  ## Environment  OS: Windows10 Browser: Chrome Browser version: 70.0 Browser Driver version:ChromeDriver 2.43 Language Bindings version: C# Selenium Grid version (if applicable): N/A","closed","","SalmanShaik07","2021-08-31T17:46:41Z","2021-10-10T00:06:25Z"
"","9604","Selenium TimeoutException","## üêõ Bug Report  Selenium timeouts after running multiple tests.  Issue is found in selenium-4-beta2, beta-3 and beta-4 versions. ~5% of our sessions fail on these jar versions.  Exception : Error or timeout while getting Distributor status: null ``` exception.stacktrace=""java.util.concurrent.TimeoutException 	at java.util.concurrent.FutureTask.get(Unknown Source) 	at org.openqa.selenium.grid.router.GridStatusHandler.execute(GridStatusHandler.java:85) 	at org.openqa.selenium.remote.http.Route$TemplatizedRoute.handle(Route.java:192) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.grid.router.Router.execute(Router.java:91) 	at org.openqa.selenium.grid.web.CheckOriginHeader.lambda$apply$0(CheckOriginHeader.java:51) 	at org.openqa.selenium.grid.web.CheckContentTypeHeader.lambda$apply$0(CheckContentTypeHeader.java:54) 	at org.openqa.selenium.grid.web.EnsureSpecCompliantResponseHeaders.lambda$apply$0(EnsureSpecCompliantResponseHeaders.java:34) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:336) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:68) 	at org.openqa.selenium.remote.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:35) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.remote.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source) ```   ## To Reproduce  Issue is reproduced by running sessions multiple times.    ## Expected behavior  The selenium jar should be working properly even after running multiple tests.  ## Test script or set of commands reproducing this issue  Sample code for reproducing issues. We have to run below test multiple times ``` require 'rubygems' require 'selenium-webdriver' require 'date'  url = ""http://username:password@hub-cloud.browserstack.com/wd/hub""  caps = Selenium::WebDriver::Remote::Capabilities.new caps[""os""] = ""Windows"" caps[""os_version""] = ""10"" caps[""browser""] = ""Firefox"" caps[""browser_version""] = ""latest"" caps[""browserstack.local""] = ""false"" caps[""browserstack.selenium_version""] = ""4.0.0-beta-3"" caps['build'] = ""W10""  puts ""Loaded caps""  driver = Selenium::WebDriver.for(:remote,   :url => url,   :desired_capabilities => caps)  driver.navigate.to ""https://duckduckgo.com""  element = driver.find_element(:name, ""q"") element.send_keys ""BrowserStack"" element.submit  sleep 1  puts ""After sleep"" puts ""Title #{driver.title}""  sleep 1 driver.quit   ```  ## Environment  OS:  All Windows versions   Browser: Chrome Browser version: 89 Browser Driver version: NA Language Bindings version:  Na Selenium Grid version (if applicable): Na","closed","","dinsaw","2021-06-25T06:25:16Z","2022-01-26T00:09:57Z"
"","9023","Fix Selenium server produce zombie processes","## üêõ Bug Report  Selenium server produce many zombie processes!  ## To Reproduce  ```dockerfile FROM centos:8  RUN yum install -y epel-release RUN yum install -y wget java firefox chromium python3  ENV HOME /opt/selenium ENV SELENIUM_SERVER selenium-server-standalone-3.141.59.jar  RUN mkdir $HOME WORKDIR $HOME  # selenium server COPY $SELENIUM_SERVER  $HOME  COPY geckodriver /usr/bin COPY chromedriver /usr/bin  CMD java -jar $SELENIUM_SERVER ```  build docker image ```sh docker build  -t selenium . ```  run selenium server  ```sh docker run -d --rm -p4444:4444 --name selenium selenium ```  test script ```py from selenium import webdriver  COMMAND_EXECUTOR = 'http://127.0.0.1:4444/wd/hub'  def test_chrome_wd(*args):     opts = webdriver.ChromeOptions()     opts.add_argument('--no-sandbox')     opts.add_argument('--headless')     opts.add_argument('--disable-gpu')     opts.add_argument('--disable-dev-shm-usage')      wd = webdriver.Remote(COMMAND_EXECUTOR, options=opts)     url = 'https://www.baidu.com/'     wd.get(url)     assert wd.current_url == url     wd.quit()  ```  ## Expected behavior  No zombie processes.  ## Environment  OS: Linux Browser: Chrome Browser version: 87.0.4280.88 Browser Driver version:  87.0.4280.88 Language Bindings version: 1.8.0_272 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","hotbaby","2021-01-05T09:26:20Z","2021-09-05T08:27:42Z"
"","9527","Vulnerability: Selenium Node Remote File Upload on Firefox Profile (Firefox/geckodriver)","## üêõ Bug Report  Selenium sends profile information in a base64 encoded zip file. When it unzips the profile, it does it in an unsafe manner (allows overwrites, files to write outside of the unzip dir, etc).  ## To Reproduce  See POC Code: https://github.com/JonStratton/selenium-node-takeover-kit/blob/master/examples/selenium_node_upload_profile.rb  ## Expected behavior  Probably should safely unzip in the profile directory  ## Test script or set of commands reproducing this issue  See POC Code: https://github.com/JonStratton/selenium-node-takeover-kit/blob/master/examples/selenium_node_upload_profile.rb  ## Environment  OS: Linux Browser: Firefox Browser version: All it seems Browser Driver version: GekoDriver Language Bindings version: Ruby Selenium Grid version (if applicable): 3.141.59","closed","","JonStratton","2021-05-28T00:06:00Z","2021-09-05T07:58:56Z"
"","9548","During uploading of existing file: selenium.common.exceptions.InvalidArgumentException","## üêõ Bug Report  Selenium is telling me that an actual file currently in the system can't be found  During the process of uploading an existing while using selenium-webdriver, I did the test to find is the file actually exists to corroborate that I was actually uploading something and being consistent with it, my testing code:  ## To Reproduce   ``` def add_profile_picture(self, profile_picture):         local_photo_path = download_url_photo(profile_picture)         print(type(local_photo_path), local_photo_path)         file_inputs = WebDriverWait(self.driver, 5).until(             EC.presence_of_all_elements_located((                 By.XPATH,                 '//div/input[(@type=""file"")]'                             ))         )                 print(""Is filepath local_photo_path: "", os.path.isfile(local_photo_path))         print(""Is filepath os.path.abspath(local_photo_path): "", os.path.isfile(os.path.abspath(local_photo_path)))         file_inputs[0].send_keys(os.path.abspath(local_photo_path))  ```  #### The download_url_photo function is defined this way:  ``` def download_url_photo(url, filename=None):     final_path = None     base_path = '/tmp/'     use_custom_filename = filename is not None           response = requests.get(url)     if response.status_code == 200:         raw_data = response.content         parsed_url = urlparse(url)         if use_custom_filename:             final_path = filename         else:             final_path = base_path + path.basename(parsed_url.path)         with open(final_path, 'wb') as new_file:             new_file.write(raw_data)      if final_path:         delete_image_exif_data(final_path)      return final_path ```      As you can see, when I print the file location, the filepath gives me a True value, but the following error occurs: when I try to send_keys() to the file_inputs[0], the file_inputs[0] does exist, I've already checked it in various debugging processes.  ``` Is filepath local_photo_path:  True Is filepath os.path.abspath(local_photo_path):  True  ERROR [_CatchWebDriverError][204] invalid argument: File not found : /tmp/69f9dddf-6f69-490e-9ed3-d9a379e151af.jpg   (Session info: chrome=89.0.4389.90) selenium.common.exceptions.InvalidArgumentException: Message: invalid argument: File not found : /tmp/69f9dddf-6f69-490e-9ed3-d9a379e151af.jpg   (Session info: chrome=89.0.4389.90) Stacktrace: #0 0x56282084f2b9  ```    Reading the Selenium documentation, it seems I am doing it correctly, this is the actual selenium function: Detailed steps to reproduce the behavior:    ## Expected behavior  The image should be uploaded or at least Selenium should recognize it  ``` def send_keys(self, *value) -> None:     """"""Simulates typing into the element.      :Args:         - value - A string for typing, or setting form fields.  For setting           file inputs, this could be a local file path.      Use this to send simple key events or to fill out form fields::          form_textfield = driver.find_element(By.NAME, 'username')         form_textfield.send_keys(""admin"")      This can also be used to set file inputs.      ::          file_input = driver.find_element(By.NAME, 'profilePic')         file_input.send_keys(""path/to/profilepic.gif"")         # Generally it's better to wrap the file path in one of the methods         # in os.path to return the actual path to support cross OS testing.         # file_input.send_keys(os.path.abspath(""path/to/profilepic.gif""))      """"""     # transfer file to another machine only if remote driver is used     # the same behaviour as for java binding     print('This is send keys')     if self.parent._is_remote:         local_files = list(map(lambda keys_to_send:                                self.parent.file_detector.is_local_file(str(keys_to_send)),                                ''.join(map(str, value)).split('\n')))         if None not in local_files:             remote_files = []             for file in local_files:                 remote_files.append(self._upload(file))             value = '\n'.join(remote_files)      self._execute(Command.SEND_KEYS_TO_ELEMENT,                   {'text': """".join(keys_to_typing(value)),                    'value': keys_to_typing(value)})  ```  ## Environment  OS: Ubuntu 20.04  Browser:  Chrome  Browser version: Chrome=89.0.4389.90 Browser Driver version: Language Bindings version: Python  3.7.7  selenium==4.0.0b3 I am running inside a Docker container (version: ""3.6""), also using rabbitmq, celery services (django-celery-beat==2.1.0) and Django==3.1","closed","C-py,","dalvarezdc","2021-06-04T12:40:16Z","2021-09-05T08:01:00Z"
"","9658","Grid router doesn't acknowledge the restart of chrome nodes","## üêõ Bug Report  Selenium Grid 4 is setup in K8s cluster. after some chrome nodes get restarted for any reason (the livenessprobe fails), the newly created ones get registered again and the number of available Processes are shown correctly but, the available sessions don't get deleted. (see below image)  ![image](https://user-images.githubusercontent.com/58387199/125923819-051c75a3-6611-4e38-8d10-063d3531819a.png)     ## To Reproduce    let some chrome nodes running in K8s. after some restarting some of the chrome node pods, the sessions shown in the grid router UI is hanged and considers them as processing. the sessions are considered to be processing in the router and won;t get stooped automatically(probably because It cannot find the IP of the session its running in, after pod restart in K8s, the IP of the pod changes) that's why the grid doesn't accept any new requests to process.   ## Expected behavior  after pod restart, different components of grid should acknowledge the downing of chrome node correctly and delete the mapping from the session, even though the IP of chrome node doesn't exist.  ## Test script or set of commands reproducing this issue  Used the following K8s conf (newest version: 4.0.0-rc-1-prerelease-20210713) Note: there are some custom livenessprobe added to _selenium-router_ and _selenium-chrome-node_ due to [the problem with selenium-router](https://github.com/SeleniumHQ/docker-selenium/issues/1318) and performance downgrade problem with chrome node. ``` # To execute this yml file use this command in your local kubernetes environment `kubectl apply -f k8s-deployment-full-grid.yaml` #*************************************** #SELENIUM EVENT BUS #*************************************** apiVersion: v1 kind: Service metadata:   name: selenium-event-bus   labels:     name: selenium-event-bus     component: ""selenium-grid-4"" spec:   selector:     app: selenium-event-bus   ports:     - name: port1       protocol: TCP       port: 4442       targetPort: 4442     - name: port2       protocol: TCP       port: 4443       targetPort: 4443     - name: port3       protocol: TCP       port: 5557       targetPort: 5557  --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-event-bus-deployment   labels:     app: selenium-event-bus     name: selenium-event-bus     component: ""selenium-grid-4"" spec:   replicas: 1   selector:     matchLabels:       app: selenium-event-bus   template:     metadata:       labels:         app: selenium-event-bus         name: selenium-event-bus         component: ""selenium-grid-4""     spec:       containers:         - name: selenium-event-bus           image: selenium/event-bus:4.0.0-rc-1-prerelease-20210713           ports:             - containerPort: 4442               protocol: TCP             - containerPort: 4443               protocol: TCP             - containerPort: 5557               protocol: TCP           livenessProbe:             httpGet:               path: /status               port: 5557             initialDelaySeconds: 5             periodSeconds: 5 --- #*************************************** #SELENIUM SESSIONS MAP #*************************************** apiVersion: v1 kind: Service metadata:   name: selenium-sessions   labels:     name: selenium-sessions     component: ""selenium-grid-4"" spec:   selector:     app: selenium-sessions   ports:     - name: port1       protocol: TCP       port: 5556       targetPort: 5556  --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-sessions-deployment   labels:     app: selenium-sessions     name: selenium-sessions     component: ""selenium-grid-4"" spec:   replicas: 1   selector:     matchLabels:       app: selenium-sessions   template:     metadata:       labels:         app: selenium-sessions         name: selenium-sessions         component: ""selenium-grid-4""     spec:       containers:         - name: selenium-sessions           image: selenium/sessions:4.0.0-rc-1-prerelease-20210713           env:             - name: SE_EVENT_BUS_HOST               value: ""selenium-event-bus""             - name: SE_EVENT_BUS_PUBLISH_PORT               value: ""4442""             - name: SE_EVENT_BUS_SUBSCRIBE_PORT               value: ""4443""             - name: SE_OPTS               value: ""--log-level ALL""           ports:             - containerPort: 5556               protocol: TCP           livenessProbe:             httpGet:               path: /status               port: 5556             initialDelaySeconds: 5             periodSeconds: 5  --- #*************************************** #SELENIUM SESSION QUEUE #*************************************** apiVersion: v1 kind: Service metadata:   name: selenium-session-queue   labels:     name: selenium-session-queue     component: ""selenium-grid-4"" spec:   selector:     app: selenium-session-queue   ports:     - name: port1       protocol: TCP       port: 5559       targetPort: 5559 --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-session-queue-deployment   labels:     app: selenium-session-queue     name: selenium-session-queue     component: ""selenium-grid-4"" spec:   replicas: 1   selector:     matchLabels:       app: selenium-session-queue   template:     metadata:       labels:         app: selenium-session-queue         name: selenium-session-queue         component: ""selenium-grid-4""     spec:       containers:         - name: selenium-session-queue           image: selenium/session-queue:4.0.0-rc-1-prerelease-20210713           env:             - name: SE_EVENT_BUS_HOST               value: ""selenium-event-bus""             - name: SE_EVENT_BUS_PUBLISH_PORT               value: ""4442""             - name: SE_EVENT_BUS_SUBSCRIBE_PORT               value: ""4443""             - name: SE_OPTS               value: ""--log-level ALL""           ports:             - containerPort: 5556               protocol: TCP           livenessProbe:             httpGet:               path: /status               port: 5559             initialDelaySeconds: 5             periodSeconds: 5 --- #*************************************** #SELENIUM DISTRIBUTOR #*************************************** apiVersion: v1 kind: Service metadata:   name: selenium-distributor   labels:     name: selenium-distributor     component: ""selenium-grid-4"" spec:   selector:     app: selenium-distributor   ports:     - name: port1       protocol: TCP       port: 5553       targetPort: 5553  --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-distributor-deployment   labels:     app: selenium-distributor     name: selenium-distributor     component: ""selenium-grid-4"" spec:   replicas: 1   selector:     matchLabels:       app: selenium-distributor   template:     metadata:       labels:         app: selenium-distributor         name: selenium-distributor         component: ""selenium-grid-4""     spec:       containers:         - name: selenium-distributor           image: selenium/distributor:4.0.0-rc-1-prerelease-20210713           env:             - name: SE_EVENT_BUS_HOST               value: ""selenium-event-bus""             - name: SE_EVENT_BUS_PUBLISH_PORT               value: ""4442""             - name: SE_EVENT_BUS_SUBSCRIBE_PORT               value: ""4443""             - name: SE_SESSIONS_MAP_HOST               value: ""selenium-sessions""             - name: SE_SESSIONS_MAP_PORT               value: ""5556""             - name: SE_SESSION_QUEUE_HOST               value: ""selenium-session-queue""             - name: SE_SESSION_QUEUE_PORT               value: ""5559""             - name: SE_OPTS               value: ""--log-level ALL""           ports:             - containerPort: 5553               protocol: TCP           livenessProbe:             httpGet:               path: /status               port: 5553             initialDelaySeconds: 5             periodSeconds: 5 --- #*************************************** #SELENIUM ROUTER #*************************************** apiVersion: v1 kind: Service metadata:   name: selenium-router   labels:     name: selenium-router     component: ""selenium-grid-4"" spec:   selector:     app: selenium-router   ports:     - name: web       protocol: TCP       port: 4444       targetPort: 4444  --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-router-deployment   labels:     app: selenium-router     name: selenium-router     component: ""selenium-grid-4"" spec:   replicas: 1   selector:     matchLabels:       app: selenium-router   template:     metadata:       labels:         app: selenium-router         name: selenium-router         component: ""selenium-grid-4""     spec:       containers:         - name: selenium-router           image: selenium/router:4.0.0-rc-1-prerelease-20210713           env:             - name: SE_DISTRIBUTOR_HOST               value: ""selenium-distributor""             - name: SE_DISTRIBUTOR_PORT               value: ""5553""             - name: SE_SESSIONS_MAP_HOST               value: ""selenium-sessions""             - name: SE_SESSIONS_MAP_PORT               value: ""5556""             - name: SE_SESSION_QUEUE_HOST               value: ""selenium-session-queue""             - name: SE_SESSION_QUEUE_PORT               value: ""5559""             - name: SE_OPTS               value: ""--log-level ALL""            ports:             - containerPort: 4444               protocol: TCP           livenessProbe:             exec:               command:                 - /bin/sh                 - -c                 - |                   curl -X POST -H ""Content-Type: application/json"" --data '{""query"": ""{ grid { } }""}' --max-time 5 http://localhost:4444/graphql             initialDelaySeconds: 5             periodSeconds: 5 --- #*************************************** #SELENIUM CHROME NODE #*************************************** apiVersion: v1 kind: Service metadata:   name: selenium-chrome-node   labels:     name: selenium-chrome-node     component: ""selenium-grid-4"" spec:   selector:     app: selenium-chrome-node   ports:     - name: port1       protocol: TCP       port: 6900       targetPort: 5900  --- apiVersion: apps/v1 kind: Deployment metadata:   name: selenium-chrome-node-deployment   labels:     app: selenium-chrome-node     name: selenium-chrome-node     component: ""selenium-grid-4"" spec:   replicas: 38   selector:     matchLabels:       app: selenium-chrome-node   template:     metadata:       labels:         app: selenium-chrome-node         name: selenium-chrome-node         component: ""selenium-grid-4""     spec:       containers:         - name: selenium-chrome-node           image: selenium/node-chrome:4.0.0-rc-1-prerelease-20210713           env:             - name: SE_EVENT_BUS_HOST               value: ""selenium-event-bus""             - name: SE_EVENT_BUS_PUBLISH_PORT               value: ""4442""             - name: SE_EVENT_BUS_SUBSCRIBE_PORT               value: ""4443""             - name: SE_OPTS               value: ""--log /opt/selenium/logs.txt --log-level ALL""           ports:             - containerPort: 5553               protocol: TCP           livenessProbe:             exec:               command:                 - /bin/sh                 - -c                 - |                   #!/bin/sh                   curl localhost:5555/status                   SELENIUM_LOG_PATH=""/opt/selenium/logs.txt""                    grep -Eo '[0-9]{19}' $SELENIUM_LOG_PATH | head -20 |                   xargs -I {} bash -c 'if [ {} != 0000000000000000000 ]; then echo {}; fi' | head -1 | {                     read timestamp;                     randomNumber=$(awk -v min=1 -v max=60 'BEGIN{srand(); print int(min+rand()*(max-min+1))}')                     timestamp_1=$((timestamp/1000000000))                     timestamp_2=$((timestamp_1+3600+randomNumber))                     currenttimestamp=$(date +%s)                     if [ ""$currenttimestamp"" -gt ""$timestamp_2"" ]; then                       echo ""exiting with 1""                       exit 1;                     else                       echo ""exiting with 0""                       exit 0;                     fi                   }              initialDelaySeconds: 5             periodSeconds: 5           volumeMounts:             - name: dshm               mountPath: /dev/shm           resources:             requests:               memory: ""1Gi""               cpu: ""1""             limits:               memory: ""1Gi""               cpu: ""1""       volumes:         - name: dshm           emptyDir: { ""medium"": ""Memory"" } ```  ## Environment  OS: docker image Browser: Chrome Selenium Grid version (if applicable): 4.0.0-rc-1-prerelease-20210713","closed","C-grid,","yasha-dev1","2021-07-16T09:25:41Z","2021-09-23T00:05:35Z"
"","9378","4.0.0-beta-3 : Node not attaching to hub due to ""delay must be less than the maxDuration"" error","## üêõ Bug Report  Selenium Grid (4.0.0-beta-3 (revision fcfbc6ba25)) - using image 4.0.0-beta-3-prerelease-20210402 When deployed to k8s, both hub and node comes up, but following error is thrown in the node , due to which node is not attached to  Grid was deployed in standard hub/node mode.  See https://github.com/SeleniumHQ/selenium/issues/9226 for reference, it was fixed but same issue is showing up again.  **node log** ` [node] session-timeout = ""300"" override-max-sessions = false max-sessions = 1  Picked up JAVA_TOOL_OPTIONS: -Xmx700m 10:45:23.051 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:45:23.054 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:45:23.746 INFO [UnboundZmqEventBus.] - Connecting to tcp://test-selenium-hub:4442 and tcp://test-selenium-hub:4443 10:45:24.244 INFO [UnboundZmqEventBus.] - Sockets created 10:45:24.345 INFO [UnboundZmqEventBus.] - Event bus ready 10:45:24.743 INFO [NodeServer.createHandlers] - Reporting self as: http://10.5.12.193:5555 10:45:24.844 INFO [NodeOptions.getSessionFactories] - Detected 1 available processors 10:45:24.950 INFO [NodeOptions.discoverDrivers] - Discovered 1 driver(s) 10:45:25.144 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome"",""platformName"": ""LINUX""} 1 times 10:45:25.150 INFO [Node.] - Binding additional locator mechanisms: name, id java.lang.reflect.InvocationTargetException at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.openqa.selenium.grid.Bootstrap.runMain(Bootstrap.java:77) at org.openqa.selenium.grid.Bootstrap.main(Bootstrap.java:70) **Caused by: java.lang.IllegalStateException: delay must be less than the maxDuration** at net.jodah.failsafe.internal.util.Assert.state(Assert.java:38) at net.jodah.failsafe.RetryPolicy.withDelay(RetryPolicy.java:415) at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:196) at org.openqa.selenium.grid.node.httpd.NodeServer$1.start(NodeServer.java:186) at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:227) at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$4(TemplateGridCommand.java:129) at org.openqa.selenium.grid.Main.launch(Main.java:83) at org.openqa.selenium.grid.Main.go(Main.java:57) at org.openqa.selenium.grid.Main.main(Main.java:42) ... 6 more 2021-04-13 10:45:26,265 INFO exited: selenium-node (exit status 1; not expected)`  **hub log** ` 2021-04-13 10:45:01,694 INFO Included extra file ""/etc/supervisor/conf.d/selenium-grid-hub.conf"" during parsing 2021-04-13 10:45:01,696 INFO supervisord started with pid 8 2021-04-13 10:45:02,698 INFO spawned: 'selenium-grid-hub' with pid 10 Using SE_HUB_HOST: test-selenium-hub Using SE_HUB_PORT: 4444 2021-04-13 10:45:02,704 INFO success: selenium-grid-hub entered RUNNING state, process has stayed up for > than 0 seconds (startsecs) Picked up JAVA_TOOL_OPTIONS: -Xmx2024m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -Xms64M 10:45:02.941 INFO [LogManager$RootLogger.log] - Using the system default encoding 10:45:02.943 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 10:45:02.998 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://10.5.78.145:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://10.5.78.145:4443] 10:45:03.040 INFO [UnboundZmqEventBus.] - Connecting to tcp://10.5.78.145:4442 and tcp://10.5.78.145:4443 10:45:03.054 INFO [UnboundZmqEventBus.] - Sockets created 10:45:03.155 INFO [UnboundZmqEventBus.] - Event bus ready 10:45:03.602 INFO [Hub.execute] - Started Selenium Hub 4.0.0-beta-3 (revision fcfbc6ba25): http://test-selenium-hub:4444  ` ## To Reproduce  Just create a grid using 4.0.0-beta-3-prerelease-20210402 image   ## Expected behavior  node should be attached to the hub  ## Environment  OS: Linux Browser: Chrome Browser version: Google Chrome 89.0.4389.114  Browser Driver version: ChromeDriver 89.0.4389.23 (61b08ee2c50024bab004e48d2b1b083cdbdac579-refs/branch-heads/4389@{#294}) Language Bindings version: Java Selenium Grid version (if applicable): 4.0.0-beta-3-prerelease-20210402","closed","R-awaiting answer,","ambirag","2021-04-13T11:07:56Z","2021-10-01T00:07:26Z"
"","9001","Support Ruby 3.0","## üêõ Bug Report  Selenium Firefox webdriver (both 3.x and 4.alpha) does not work with Ruby 3. There could be multiple causes, but the main one is that `rexml` is now a bundled gem  ## Test script or set of commands reproducing this issue  ```rb #!/usr/bin/env ruby  require 'bundler/inline'  gemfile(true) do   source 'https://rubygems.org'    gem 'selenium-webdriver' end  require 'selenium/webdriver/firefox' ```  ## Expected behavior  Script ends without errors  ## Actual behavior  ```sh $ ./selenium.rb  Fetching gem metadata from https://rubygems.org/...... Resolving dependencies... Using bundler 2.2.3 Using rubyzip 2.3.0 Using childprocess 3.0.0 Using selenium-webdriver 3.142.7 ~/.rvm/gems/ruby-3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/firefox.rb:22:in `require': cannot load such file -- rexml/document (LoadError) 	from ~/.rvm/gems/ruby-3.0.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/firefox.rb:22:in `' 	from selenium.rb:9:in `require' 	from selenium.rb:9:in `' ```  ## Environment  OS: macOS 10.15.7 (19H114) Browser: n/a Browser version: n/a Browser Driver version: n/a Language Bindings version: Ruby 3.0 Selenium Grid version (if applicable): n/a","closed","C-rb,","tagliala","2020-12-27T11:39:08Z","2021-09-05T07:59:12Z"
"","9810","Selenium fails when I try create an edge driver","## üêõ Bug Report  Selenium fails when it tries to create an edge driver, even with Edge and msedgedriver installed. Note: A colleague can create an edge driver identically on Linux, so it might be an issue related to Big Sur.  ## To Reproduce  Detailed steps to reproduce the behavior:  1. Download msedgedriver version 93.0.961.38 (Edge) or 94.0.992.14 (Edge Beta) and put it in the path 2. Ensure Edge or Edge Beta is in its default location 3. Run the test  ## Expected behavior  The Edge browser is opened and the test continues  ## Test script or set of commands reproducing this issue  **How the driver is created:** ``` def register     Capybara.register_driver :selenium do |app|         Capybara::Selenium::Driver.new(             app,             browser: browser,             service: service,             capabilities: capabilities         )     end end ```  **capabilities** `[#nil}>, #""MSEdge""}, @profile=nil>]`  debugging *browser* Selenium::WebDriver.for(options[:browser], processed_options) => session not created: No matching capabilities found  **error** Selenium::WebDriver::Error::SessionNotCreatedError: session not created: No matching capabilities found  ## Environment  OS: macOS Big Sur version 11.5.2 Browser: Microsoft Edge / Microsoft Edge Beta Browser version: 93.0.961.38 (Edge) / 94.0.992.14 (Edge Beta) Browser Driver version: 93.0.961.38 (Edge) / 94.0.992.14 (Edge Beta) Language Bindings version: 4alpha6 Selenium Grid version (if applicable):","closed","D-edge,","celonicolosi","2021-09-10T14:53:54Z","2021-10-24T00:06:38Z"
"","9028","MacOS not working using Selenium and ChromeDriver87","## üêõ Bug Report  Selenium does not work on MacOS using ChromeDriver87, but it does on Windows and Linux  ## To Reproduce  Clone: https://github.com/jrovira037/SeleniumChromeDriverBugMacOS  And execute TestKt  ## Expected behavior  It shold not crash  ## Environment  OS: MacOS Big Sur Browser: Chrome Browser version: 87.0.4280.88 Browser Driver version: ChromeDriver 3.141.59 Language Bindings version: Kotlin 1.4","closed","OS-mac,","ropjov","2021-01-06T12:28:53Z","2021-09-05T08:25:09Z"
"","9729","Selenium cannot locate any elements","## üêõ Bug Report  Selenium cannot locate any elements on web app (Oracle's Customer Care & Billing - CC&B). The issue occures only on this web app.  Exception in thread ""main"" org.openqa.selenium.NoSuchElementException: Unable to locate element: #[Element_Id]  Only firefox is compatible with CC&B  ## To Reproduce  `driver.findElement(By.id(""[Element_Id]""))`  `driver.switchTo().frame(""[Frame_Name]"");`  ## Expected behavior  Finding element to continue script  ## What I have tried  Different OS - fedoraOS  Attempted to find an elements by, class, tagname and all the rest of the locators. Attempted to find frame first - WebDriver cant find it etiher Set waits to make sure app has time to load Turning off tracking protection in Firefox Different Firefox versions Different Selenium versions  Different Geckodriver versions  ## Environment  Selenium Client: 3.141.59 Geckodriver: 0.29.1 Firefox: 90.0.2 CC&B: 2.6.0.1.0 OS: Windows 10","closed","R-awaiting answer,","bartekjujka","2021-08-09T09:46:03Z","2021-10-22T00:06:55Z"
"","9837","IEDriverServer times out when opening a page in Edge in IE mode with Java","## üêõ Bug Report  See https://github.com/SeleniumHQ/selenium/issues/9793, the issue is exactly the same but using the Java selenium client.  ## To Reproduce  - Download IEDriverServer last version Win32_3.150.2 or x64_3.150.2 - Create a Java test project with selenium-java 3.141.59 as dependency - Create a class in that as per the test script below, which simply opens a page. - Run the test  The page is opened in Edge in Internet Explorer mode, but the script keeps waiting and ultimately times out with an exception. Following selenium calls will throw a connectionexception.  ## Expected behavior  The page is opened and control is handed back to the script without exceptions  ## Test script or set of commands reproducing this issue  ```java public static void main(String[] args) { 	System.setProperty(""webdriver.ie.driver"", ""IEDriverServer_x64_3.150.2.exe"");  	InternetExplorerOptions edgeIe11Options = new InternetExplorerOptions();  	Map ops = (Map) edgeIe11Options.getCapability(""se:ieOptions""); 	ops.put(""ie.edgechromium"", true); 	ops.put(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");  	InternetExplorerDriver driver = new InternetExplorerDriver(edgeIe11Options);  	driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);  	try { 		driver.get(""https://wikipedia.com""); 	} catch (TimeoutException e) { 		e.printStackTrace(); 	}  	driver.get(""https://google.com""); } ```  ## Environment  OS: Windows 10 (20H2) Browser: Edge in Internet Explorer compatibility mode Browser version: 93.0.961.47 64bit Browser Driver version: IEDriverServer 3.150.2 Language Bindings version: Java 11 Selenium Grid version (if applicable): N/A","closed","C-java,","alemures-work","2021-09-17T07:51:19Z","2021-11-04T00:06:10Z"
"","9793","IEDriverServer times out when opening a page in Edge in IE mode.","## üêõ Bug Report  See https://github.com/SeleniumHQ/selenium/issues/7833. The issue occurs in almost the same circumstances as described there, The difference is that Instead Internet Explorer, Edge is used in Internet Explorer mode, and a later version of IEDriverServer is used,   ## To Reproduce  - Download IEDriverServer version Win32_3.150.2 and put it in the path - Ensure Edge is in its default location - Create a .Net Core test project - Create a class in that as per the test script below, which simply opens a page. - Use NuGet package Selenium.WebDriver version 3.141.0 - Run the test  The page is opened in Edge in Internet Explorer mode,, but the script keeps waiting and ultimately times out with an exception.   ```Message:  Test method SeleniumTest.Experiments.SeleniumInternetExplorerTimeoutTest threw exception:  OpenQA.Selenium.WebDriverException: The HTTP request to the remote WebDriver server for URL http://localhost:60812/session/7d64b892-c78c-4e6d-b01c-ad46df6496ec/url timed out after 60 seconds. ---> System.Net.WebException: The operation has timed out.    Stack Trace:  HttpWebRequest.GetResponse() HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) --- End of inner exception stack trace --- HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo) HttpCommandExecutor.Execute(Command commandToExecute) DriverServiceCommandExecutor.Execute(Command commandToExecute) RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters) RemoteWebDriver.set_Url(String value) RemoteNavigator.GoToUrl(String url) Experiments.SeleniumInternetExplorerTimeoutTest() line 18 ``` ## Expected behavior  The page is opened and control is handed back to the script without exceptions  ## Test script or set of commands reproducing this issue  ```using Microsoft.VisualStudio.TestTools.UnitTesting; using OpenQA.Selenium.IE;  namespace SeleniumTest {     [TestClass]     public class Experiments     {         [TestMethod]         public void SeleniumInternetExplorerTimeoutTest()         {             var options = new InternetExplorerOptions();             options.AddAdditionalCapability(""ie.edgechromium"", true);             options.AddAdditionalCapability(""ie.edgepath"",                 ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");             var driver = new InternetExplorerDriver(options);             driver.Navigate().GoToUrl(""https://www.google.com"");             driver.Quit();         }     } } ```  ## Environment  OS: Windows 10 (1909) Browser: Edge in Internet Explorer compatibility mode Browser version: 92.0.902.84  Browser Driver version: IEDriverServer 3.150.2 Language Bindings version: .NET 3.141.0 Selenium Grid version (if applicable): N/A","closed","D-IE,","essenius","2021-09-04T15:58:33Z","2021-12-03T00:06:57Z"
"","9266","isDisplayed throws NullPointerException","## üêõ Bug Report  Running with java binding and Firefox, the framework occasionally throws NullPointerException on the isDisplayed call.  **Please see https://github.com/mozilla/geckodriver/issues/1825 for more information.** As stated from geckodriver team, the issue is apparently related to the custom JS that is executed with this method. The ticket also contains trace logs.   ## To Reproduce  Hard to provide steps, as it happens ""randomly"".  ## Expected behavior  Should not throw exception..  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 84.0.1 Browser Driver version: geckodriver 0.28.0 (c00d2b6acd3f 2020-11-03 16:29 +0200) Language Bindings version: java 3.141.59","closed","C-java,","atastrumf","2021-03-12T07:55:49Z","2021-09-05T08:01:14Z"
"","9286","latest selenium-webdriver no longer works with electron","## üêõ Bug Report  Running tests in electron using latest selenium-webdriver no longer works in selenium-webdriver 4.0.0-beta.1. They result in   ``` (node:20272) UnhandledPromiseRejectionWarning: SessionNotCreatedError: session not created: No matching capabilities found     at Object.throwDecodedError (C:\Downloads\MyCode\node_modules\selenium-webdriver\lib\error.js:517:15)     at parseHttpResponse (C:\Downloads\MyCode\node_modules\selenium-webdriver\lib\http.js:671:13)     at Executor.execute (C:\Downloads\MyCode\node_modules\selenium-webdriver\lib\http.js:597:28)     at processTicksAndRejections (internal/process/task_queues.js:97:5) ```  This used to work with selenium-webdriver 3.4.0. I am unsure whether this should be resolved in selenium, electron or chromedriver. Any input is appreciated.  ## To Reproduce  Detailed steps to reproduce the behavior:  - Follow instructions from https://www.electronjs.org/docs/tutorial/using-selenium-and-webdriver under 'Setting up with WebDriverJs'. The sample code works with selenium-webdriver 3.4.0 but not with 4.0.0-beta.1.  ## Expected behavior  I was hoping testing with electron would still work.  ## Test script or set of commands reproducing this issue  ```const webdriver = require('selenium-webdriver'); const ChildProcess = require('child_process'); const chromedriver = require('chromedriver');  const chromedriverProcess = ChildProcess.spawn(     chromedriver.path, // process path goes here     [], // arguments go here     {         stdio: 'inherit'     } ); const electronBinary = 'MyElectronBinary.exe'; const driver = new webdriver.Builder()     // The ""9515"" is the port opened by chrome driver.     .usingServer('http://localhost:9515')     .withCapabilities({         chromeOptions: {             // Here is the path to your Electron binary.             binary: electronBinary         }     })     .forBrowser('electron')     .build();  driver.get('http://www.google.com'); driver.findElement(webdriver.By.name('q')).sendKeys('webdriver'); driver.findElement(webdriver.By.name('btnG')).click(); driver.wait(() => {     return driver.getTitle().then((title) => {         return title === 'webdriver - Google Search';     }); }, 1000);  driver.quit(); ```  ## Environment  OS:  Windows 10.0.19042 Build 19042 Browser: electron (chromedriver) Browser version: electron 10.1.3 Browser Driver version: 85.0.4183.38 (9047dbc2c693f044042bbec5c91401c708c7c26a-refs/branch-heads/4183@{#779}) Language Bindings version: nodejs 12.14.1 Selenium Grid version (if applicable): /","closed","R-awaiting answer,","kr3l","2021-03-15T15:44:05Z","2021-09-05T08:12:14Z"
"","9475","Selenium 4.0.0-beta-3 - Parallel Threads with JUnit5 and JDK11/16 does not work","## üêõ Bug Report  Running selenium with parallel threads using JUnit 5 works with JDK 8, however it does not work reliably with JDK 11 or JDK 16.    With JDK > 8. I am seeing occasional additional threads (so 5 threads instead of 4) and occasional hanging.  Generally it never starts 4 threads in parallel, but three, then some hanging, then another single thread.  With JDK8 4 browser are opened as expected and the tests pass without issues.  ## To Reproduce  Ensure you have got JDK 11 or JDK 16 set up locally Check out https://github.com/Ardesco/Selenium-Maven-Template/tree/junit Run the project with `mvn clean verify -Dheadless=false -Dthreads=4 -Dbrowser=chrome -Dparallel=true`  If you can then switch to JDK 8 you can see it running as expected (I'm using jenv - https://www.jenv.be/ to switch between java versions locally)  ## Expected behaviour  I expect that running the tests in JDK11 or JDK 16 will work in the same way as running in JDK8.  4 threads should be started, all tests should pass and there should be no hanging.   ## Environment  OS: OSX 11.3.1 (Big Sur) Browser: Chrome Browser version: 90.0.4430.93 Browser Driver version: Chromedriver 89.0.4389.23 Language Bindings version: 4.0.0-beta-2 and 4.0.0-beta-3 Selenium Grid version (if applicable): N/A","closed","C-java,","Ardesco","2021-05-13T12:55:18Z","2021-09-05T07:50:17Z"
"","9188","Headless mode does not work in 4.0.0b1","## üêõ Bug Report  Running in non-X environment causes the following error:  ``` [1613588397.830][INFO]: Launching chrome: /usr/bin/google-chrome --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --enable-automation --enable-blink-features=ShadowDOMV0 --enable-logging --log-level=0 --no-first-run --no-service-autorun --password-store=basic --remote-debugging-port=0 --test-type=webdriver --use-mock-keychain --user-data-dir=/tmp/.com.google.Chrome.iYvAAX data:, mkdir: cannot create directory ‚Äò/.local‚Äô: Permission denied touch: cannot touch '/.local/share/applications/mimeapps.list': No such file or directory [2619:2619:0217/185959.352421:ERROR:browser_main_loop.cc(1438)] Unable to open X display. [1613588399.440][INFO]: [690fd84376bd17e319de37d312fc1c35] RESPONSE InitSession ERROR unknown error: Chrome failed to start: exited abnormally.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) [1613588399.440][DEBUG]: Log type 'driver' lost 0 entries on destruction [1613588399.440][DEBUG]: Log type 'browser' lost 0 entries on destruction  ```  ## To Reproduce Detailed steps to reproduce the behavior:  https://github.com/Dmitri-Sintsov/django-jinja-knockout/runs/1921312027?check_suite_focus=true  When running CI manually, headless mode is ignored, browser window is opening with X: pip3 install selenium==4.0.0b1  The same CI tests works fine in headless mode with selenium==4.0.0a7 and selenium-3.141.0  ## Expected behavior  Expected to run in headless mode not looking for X display.  ## Test script or set of commands reproducing this issue  One may run tests manually as described at: https://github.com/Dmitri-Sintsov/djk-sample  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Ubuntu 18.04.5 LTS Browser: Chrome Browser version: 88.0.4324.150 Browser Driver version: ChromeDriver 88.0.4324.96 (68dba2d8a0b149a1d3afac56fa74648032bcf46b-refs/branch-heads/4324@{#1784}) Language Bindings version: 4.0.0b1 Selenium Grid version (if applicable): Not applicable","closed","D-chrome,","Dmitri-Sintsov","2021-02-17T20:38:21Z","2021-09-05T08:15:47Z"
"","9719","got MemoryException in some cases","## üêõ Bug Report  Running `get()` command for some domains e.g. bet365.com, 365097365.com would end up `out of memory` exception. More precisely, it will exceed the timeout and then kinda freeze till it throws a memory exception error.     ## To Reproduce    Just try to run `get()` command for those cases and then run some other webdriver commands which need memory to perform, like _find_ commands.   ## Expected behavior  I expect to have all `` tags in p_tags values without any exception.  ## Test script or set of commands reproducing this issue   ``` from selenium import webdriver driver = webdriver.Firefox() driver.get(""https://www.bet365.com"") p_tags = driver.find_elements_by_tag_name(""p"") ```  ## Environment  OS: ubuntu 20.04 Browser: Firefox Browser version: 89.0 Browser Driver version: GeckoDriver 0.29.0 Language Bindings version: Python 3.9","closed","","GorgMish","2021-08-04T19:53:13Z","2021-09-05T09:36:32Z"
"","9298","Ruby implementation of print page expects snake-cased option and doesn‚Äôt transform it to camel-cased parameter","## üêõ Bug Report  Ruby implementation supports WebDriver print thanks to `#print_page` in:  * `Selenium::WebDriver::DriverExtensions::PrintsPage` ‚Äì currently applied to Chrome and Firefox drivers, and * `Selenium::WebDriver::Remote::Driver`.  They both call `Selenium::WebDriver::Remote::Bridge#print_page` by just passing given options to this method. However, they both check `:page_ranges` option and make sure it is set to an array.  There are some issues with this:  1. Ruby option `:page_ranges` is never transformed to a WebDriver parameter named `pageRanges`. 2. The print page command has additional camel-cased parameters and none of them are mentioned.  Therefore, you have to specify `#print_page` options using camel-cased keys (e.g., `:pageRanges` or `:shrinkToFit`) and cannot rely on enforcement of page ranges data structure.  ## To Reproduce  1. Start dedicated GeckoDriver with debug log level. 2. Start a Ruby runtime (e.g., IRB). 3. Require `selenium-webdriver` Ruby gem. 4. Create a new remote driver with Firefox capabilities and URL pointing to GeckoDriver started in the previous step. 5. Navigate to a document with multiple pages (e.g., by using data URL with content like this `12`). 6. Print the page by specifying an option hinted by the source code: `page_ranges: '1'`. 7. Check GeckoDriver log output. You can see it has received `POST /session/{session id}/print {""options"":{""page_ranges"":[""1""]}}` 8. Check the next line with transformation to Marionette command which shows `""pageRanges"":[]` is being passed.  ## Expected behavior  The code should either:  * transform snake-cased Ruby options to camel-cased WebDriver parameters to comply with WebDriver and its naming conventions, or * stop pretending it provides some value by enforcing a data structure of an option which is never going to be used.  ## Test script or set of commands reproducing this issue  ```rb require 'selenium-webdriver' driver = Selenium::WebDriver::Driver.for :remote, capabilities: :firefox, url: 'http://127.0.0.1:4444' # Or for inline log output instead of an independent GeckoDriver process: #Selenium::WebDriver.logger.level = :debug #driver = Selenium::WebDriver::Driver.for :firefox, service: Selenium::WebDriver::Firefox::Service.new(args: ['--log=debug']) driver.navigate.to 'data:text/html;base64,' + [   '12' ].pack('m').lines.map(&:chomp).join driver.print_page page_ranges: '1' # Notice page_ranges value # [GeckoDriver] webdriver::server	DEBUG	-> POST /session/00000000-0000-0000-0000-000000000000/print {""options"":{""page_ranges"":[""1""]}} # Notice pageRanges value # [GeckoDriver] Marionette	DEBUG	0 -> [0,3,""WebDriver:Print"",{""background"":false,""margin"":{""bottom"":1,""left"":1,""right"":1,""top"":1},""orientation"":""portrait"",""page"":{""height"":27.94,""width"":21.59},""pageRanges"":[],""scale"":1,""shrinkToFit"":true}] driver.quit ```  ## Environment  OS: macOS 11.2.3 Browser: Firefox Browser version: 86.0.1 Browser Driver version: GeckoDriver 0.29.0 Language Bindings version: Ruby 4.0.0.beta2 Selenium Grid version (if applicable): N/A  [spec-print-page]: https://www.w3.org/TR/2020/WD-webdriver2-20200824/#print-page","closed","C-rb,","f4z4onZH27","2021-03-17T21:26:11Z","2021-09-05T08:08:35Z"
"","9294","[JS] Request to get PerformanceResourceTiming errors out","## üêõ Bug Report  Requests to get `PerformanceResourceTiming` errors out for some particular websites possibly due to 4xx on some particular assets on Big Sur  Safari but same works for Catalina Safari  We get the error - >(node:68626) UnhandledPromiseRejectionWarning: JavascriptError: Cyclic object value     at Object.throwDecodedError (/Users/shubhamjajodia/tech/test_scripts/selenium/node_modules/selenium-webdriver/lib/error.js:517:15)     at parseHttpResponse (/Users/shubhamjajodia/tech/test_scripts/selenium/node_modules/selenium-webdriver/lib/http.js:671:13)     at Executor.execute (/Users/shubhamjajodia/tech/test_scripts/selenium/node_modules/selenium-webdriver/lib/http.js:597:28)     at processTicksAndRejections (internal/process/task_queues.js:97:5)     at async thenableWebDriverProxy.execute (/Users/shubhamjajodia/tech/test_scripts/selenium/node_modules/selenium-webdriver/lib/webdriver.js:731:17)     at async example (/Users/shubhamjajodia/tech/test_scripts/selenium/500.js:13:21) (node:68626) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2) (node:68626) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.    ## To Reproduce  >const {Builder, By, Key, until} = require('selenium-webdriver'); const { ServiceBuilder } = require('selenium-webdriver/chrome'); // const driverPath = '/Users/shubhamjajodia/Downloads/chromedriver' const serviceBuilder = new ServiceBuilder(driverPath); (async function example() {   let browser = new Builder()     .forBrowser('safari')     // .setChromeService(serviceBuilder)     .build();   try {     await browser.get('https://babytree.com')     const element = await browser.executeScript('return performance.getEntriesByType(""resource"")')  console.log(element);   } finally {     await browser.quit();   } })();     Detailed steps to reproduce the behavior:  Run the above node script on Big Sur  ## Expected behavior  For thr resource assets not available, it should skip it or print it on the screen instead of erroring out. Using Bigsur and Safari it fails for **some** websites like the one mentioned here. It also fails on chrome upto `selenium-webdriver@4.0.0-beta.1`  but started working for beta.2 for chrome(89.0.4389.82)  but not for others like safari or firefox  ## Test script or set of commands reproducing this issue  Mentioned above  ## Environment  OS:  OSX  Browser:  Safari Browser version:  14.0 Browser Driver version:  Language Bindings version:   Node v12.18.3 Selenium Grid version (if applicable):   selenium-webdriver@4.0.0-beta.2","closed","C-nodejs,","jajo-shubham","2021-03-17T07:07:29Z","2021-09-05T08:06:46Z"
"","8960","[Selenium 4] Request interception stops after around 40 seconds of script execution","## üêõ Bug Report  Request interception stops after around 40 seconds of script execution.  ## To Reproduce  1. Create WebDriver object 2. Create DevToolsSession and enable Network. 3. Add some request interceptor (with visible output) to the Network. 4. Run some simple script like cycled page reopeneng for one minute or more.  ## Expected behavior  Every time new request appears in the Network the interceptor shoulder be triggered.  ## Test script or set of commands reproducing this issue  var webDriver = new ChromeDriver(); var devToolsSession = webDriver.CreateDevToolsSession(); devToolsSession.Network.Enable(new EnableCommandSettings());  EventHandler requestIntercepted = (sender, e) => {         Console.WriteLine(e.Request.Url); };  RequestPattern requestPattern = new RequestPattern(); requestPattern.InterceptionStage = InterceptionStage.Request; requestPattern.ResourceType = ResourceType.Image; var setRequestInterceptionCommandSettings = new SetRequestInterceptionCommandSettings();         setRequestInterceptionCommandSettings.Patterns = new RequestPattern[] { requestPattern };         devToolsSession.Network.SetRequestInterception(setRequestInterceptionCommandSettings); devToolsSession.Network.RequestIntercepted += requestIntercepted;  while (true) {        webDriver.Url = ""https://translate.google.com/"";        Thread.Sleep(5000);        webDriver.Navigate().Refresh(); }  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 87 Browser Driver version: ChromeDriver 87 Language Bindings version: C# Net Core 2.1 Selenium version: 4.0.0‚Äëalpha07","closed","","l0kifs","2020-12-11T19:48:35Z","2021-09-05T08:01:10Z"
"","9352","Log level in RemoteWebDriver is effectively always INFO, regardless of what is set by the ""setLogLevel"" method.","## üêõ Bug Report  RemoteWebDriver writes all log entries via ""log(SessionId sessionId, String commandName, Object toLog, When when)"" method, regardless of which log level I've previously set via ""setLogLevel(Level level)"" method. This is due to the fact that only the ""level"" field of RemoteWebDriver is updated in the setLogLevel method, while the logger's (I'm referring to RemoteWebDriver's ""private static final Logger logger"") ""levelValue"" is not, and it's the latter that is used for calculation in the ""log"" method: `if (!logger.isLoggable(level)) {       return;     }` leads to Logger class: `public boolean isLoggable(Level level) {         if (level.intValue() < levelValue || levelValue == offValue) {             return false;         }         return true;     }` In the debugger I saw that Logger's levelValue is always 800 (INFO) regardless of what I set in RemoteWebDriver's ""level"" via the setLogLevel method.  ## To Reproduce  Set the log level to, for example, OFF: `((RemoteWebDriver) driver).setLogLevel(Level.OFF)` And then, for example execute a JS script on any webelement you have: `((JavascriptExecutor) driver).executeScript(""arguments[0].blur()"", element)`  You'll see that the output produces entries such as this one:  > kwi 02, 2021 5:38:04 PM org.openqa.selenium.remote.RemoteWebDriver log OFF: Executing: executeScript [b45386e1da2c1de7c17504ae7a6b02d7, executeScript {script=arguments[0].blur(), args=[{ELEMENT=0.9251080702755425-1, element-6066-11e4-a52e-4f735466cecf=0.9251080702755425-1}]}] kwi 02, 2021 5:38:05 PM org.openqa.selenium.remote.RemoteWebDriver log OFF: Executed: (Response: SessionID: b45386e1da2c1de7c17504ae7a6b02d7, Status: 0, Value: null)   ## Expected behavior  No log entries are produced from the RemoteWebDriver class.  ## Test script or set of commands reproducing this issue  See the ""To reproduce"" section.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 89.0.4389.82 (Official Build) (64-bit) Browser Driver version: chromedriver-windows:89.0.4389.23 Language Bindings version: Java 1.8, Groovy 3.0.7 Selenium Grid version (if applicable): Selenium 4.0.0-beta-2","closed","R-awaiting answer,","jimmylobo2","2021-04-02T15:39:37Z","2021-09-05T08:08:40Z"
"","9734","`execute_async_script` executes script twice if it causes browser navigation","## üêõ Bug Report  Related Capybara issue: https://github.com/teamcapybara/capybara/issues/2487  In our tests we use Capybara + selenium-webdriver and have a helper method `exec_js` which looks like this: ```ruby def exec_js(script, *args)     page.evaluate_async_script(       ""         (async function () {           #{script};         })         .apply(this, Array.from(arguments).slice(0, -1))         .then(arguments[arguments.length - 1])         .catch(arguments[arguments.length - 1]);       "",       *args     )   end ``` In some tests we trigger browser's back navigation via `exec_js ""window.history.back()""`. The thing is this script is being called twice (second time right after the previous page in browser history is loaded).  Actually, call can be simplified to `page.evaluate_async_script(""window.history.back(); arguments[0]()"")`.  Capybara maintainer [responded](https://github.com/teamcapybara/capybara/issues/2487#issuecomment-896918523) that `page.evaluate_async_script` is just a thin wrapper around the driver's method so I decided to open issue in this repo.    ## To Reproduce  Capybara code: ```ruby visit('/foo') visit('/bar') page.evaluate_async_script(""console.log('SCRIPT EXECUTED'); window.history.back(); arguments[0]()"") # Note two `console.log`s in the browser console # `/foo` is loaded instead of `/bar` ```  ## Expected behavior  Just a single navigation and a single `SCRIPT EXECUTED` entry in the console.  ## Environment  OS: Macos Big Sur 11.5.1 and Linux (on CI) Browser: Chrome 92.0.4515.131 Browser Driver version: chromedriver 92.0.4515.107 Language Bindings version: via Capybara 3.32.2   Selenium Grid version (if applicable):","closed","R-awaiting answer,","th0r","2021-08-11T15:43:06Z","2021-09-13T00:05:33Z"
"","9417","firefox profile is copied several times","## üêõ Bug Report  Python bindings .  When using an existing profile, I get a very long start. because  1. profile copied in `firefox_profile.FirefoxProfile` to temp dir `/webdriver-py-profilecopy` 2. temp  profile encode to zip in `to_capabilities` 3. An profile `/rust_mozprofile*` is created anyway   ## To Reproduce  `webdriver.Firefox(firefox_profile=r"""")`  ## Expected behavior  There should be 1 copy (or better not one)   ## Environment  OS: win 10 x64 Browser: Firefox  Browser version: 88.0 Browser Driver version: geckodriver 0.29.1 (970ef713fe58 2021-04-08 23:34 +0200) Language Bindings version: python 3.141.0","closed","needs-triaging,","vitidev","2021-04-23T17:58:10Z","2021-09-05T08:06:44Z"
"","9874","Selenium Grid 4 no concept of ""applicationName""","## üêõ Bug Report  prior to Gridv4 I was able to set the ""applicationName"" attribute when standing up a node. This allowed me to specify a particular browser for a test.  ``` -browser browserName='safari',version={browsers_version['safari']},platform=MAC,applicationName=mac_app1,maxInstances=15  ```  I could then specify this browser directly when calling the grid by again specifying the ""applicationName"" within my desired capabilities.  I do not see the ability to set this parameter when launching my nodes using Gridv4. Am I just missing something or is there another way to specify a certain browser when launching a test?","closed","","rschwass","2021-09-29T16:06:00Z","2021-10-30T00:06:07Z"
"","9505","perform() and reset_actions() in ActionChains not working selenium python","## üêõ Bug Report  perform() and reset_actions() in ActionChains not working  In that video, I explain more preciously  https://www.youtube.com/watch?v=_jR9IldgacQ  code link: https://github.com/sushen/MiracleExperiments/blob/master/tabeNavigation.py    ## To Reproduce     ```    import os import time from selenium import webdriver from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.chrome.options import Options from selenium.webdriver.common.keys import Keys import random   global chrome_options chrome_options = Options() chrome_options.add_argument(""--start-maximized"") chrome_options.add_argument('--profile-directory=Default') prefs = {""profile.default_content_setting_values.notifications"": 2} chrome_options.add_experimental_option(""prefs"", prefs) chrome_options.add_argument('disable-infobars') chrome_options.add_experimental_option(""useAutomationExtension"", False) chrome_options.add_experimental_option(""excludeSwitches"", [""enable-automation""])  google_search = [     ""1.' driver.switch_to.active_element' "",     ""2.this code is a one of important snippet for facebook automation."", ]  random_google_search = random.choice(google_search)   global driver driver = webdriver.Chrome(""chromedriver.exe"", chrome_options=chrome_options)   global actions actions = ActionChains(driver)  driver.get(""https://google.com"")  actions.send_keys(random_profile_post)        def navigation():     time.sleep(5)     actions.reset_actions()      driver.get(""https://google.com"")      actions.send_keys(random_profile_post)      total_tab = 3     sleep_time = 1     implicitly_wait_time = 4      actions.reset_actions()     driver.implicitly_wait(implicitly_wait_time)     time.sleep(sleep_time)      for i in range(total_tab):         actions.send_keys(Keys.TAB)         print(""Pressing * "" + str(i + 1) + "" * No Tab"")      actions.send_keys(Keys.ENTER)     actions.perform()   for i in range(10):     navigation()     print(""Pressing * "" + str(i + 1) + "" * st navigation function"")  ``` ## Environment  OS: Windows 10 Browser:  Chrome   Browser version: 90.0.4430.212  Browser Driver version: ChromeDriver 91.0.4472.19 Language Bindings version: Python 3.9","closed","","sushen","2021-05-22T03:16:39Z","2021-09-05T08:03:20Z"
"","9069","Page http://www.bet365.com never loads -- spins forever","## üêõ Bug Report  Page never loads.  ## To Reproduce  ``` import { Driver, Options, ServiceBuilder } from 'selenium-webdriver/chrome'; import { DriverService } from 'selenium-webdriver/remote';  (async function example() {     let options: Options = new Options();     options.setChromeBinaryPath(""C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"");     options.setProxy(null);      let driver: Driver = null;     try {         driver = Driver.createSession(options);          await driver.get('http://www.bet365.com'); //","closed","","emiliavanderwerf","2021-01-20T01:31:44Z","2021-09-05T08:24:59Z"
"","9387","Test Suite Run From Jenkins get stuck 2-3 time a week","## üêõ Bug Report  Our Selenium tests use grids with several nodes and are run on a daily basis. After we upgraded to selenium-server-4.0.0-prerelease-beta-3-d798b52c4c the tests started getting stuck several times a week.   Prior to the beginning of each test we make a request for the grid status to get the node IP from the response, for e.g. http://HUB_HOSTNAME:4447/wd/hub/status/  We ran the nodes with FINEST log level and I am attaching the logs from one of the nodes which, upon checking the grid status, looks as if is busy - see attached screenshots  **[NODE_Log_2.txt](https://github.com/SeleniumHQ/selenium/files/6325439/NODE_Log_2.txt)**  ![grid_status](https://user-images.githubusercontent.com/30794708/115032105-9b8d1500-9ed1-11eb-9239-672c3c8ee3e6.PNG) ![node](https://user-images.githubusercontent.com/30794708/115032156-ae074e80-9ed1-11eb-8a39-eb2379aee6a9.PNG)  I will now add the official beta 3 release jar to see if this will fix the problem  Grid Setup   Hub ``` start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-prerelease-beta-3-d798b52c4c.jar hub --port 4452 --publish-events tcp://HUB_IP:4457 --subscribe-events tcp://HUB_IP:4458 --healthcheck-interval 5000   ```  Node_1 ``` start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-prerelease-beta-3-d798b52c4c.jar node --detect-drivers true -I ""chrome"" -I ""edge"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4457 --subscribe-events tcp://HUB_IP:4458 --max-sessions 1 --session-timeout 190 --log-level FINEST --log ""\\path\NODE.log"" ```  ## Environment  OS: Windows 7 Browser: Chrome Browser version: 89.0.4389.90 Browser Driver version: 89.0.4389.23 Language Bindings version: jdk-11.0.9+11 Selenium Grid version (if applicable): Grid 4 (selenium-server-4.0.0-prerelease-beta-3-d798b52c4c.jar )","closed","R-awaiting answer,","hnestorova","2021-04-16T13:40:32Z","2021-10-16T00:06:18Z"
"","9087","Python Selenium Firefox Profile Not Work","## üêõ Bug Report  OS: Win 10 - 64 bit Firefox: 84 Python: 3.8.6 - 64 bit Selenium: 3.141.0 urllib3: 1.26.2 GeckoDriver:  29   ## Expected behavior  I want to use my own Firefox profile. I don't want to work with temp Firefox profiles in Windows. I don't want to use selenium at this time for Unit Testing. exactly i need to have the cache of previous settings/data/...  for fast loading and fast moving across the sites.  Also i created a new profile by Firefox profile manager:   `run --> firefox.exe -P` the name of new profile:  `selenium_profile` path of my own new profile:  `C:\\Users\\linux10\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\hcwbtozn.selenium_profile`   ## Test script or set of commands reproducing this issue  ```         binary = FirefoxBinary(""C:\\Program Files\\Mozilla Firefox\\firefox.exe"")         #self.driver = webdriver.Firefox(firefox_binary=binary, executable_path='C:\\geckodriver_v29.exe')         myProfile = webdriver.firefox.firefox_profile.FirefoxProfile(profile_directory='C:\\Users\\linux10\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\hcwbtozn.selenium_profile')         # myProfile = webdriver.FirefoxProfile('C:\\Users\\linux10\\AppData\\Roaming\\Mozilla\\Firefox\\Profiles\\hcwbtozn.selenium_profile')         self.driver = webdriver.Firefox(firefox_profile=myProfile, firefox_binary=binary, executable_path='C:\\geckodriver_v29.exe')          self.driver.maximize_window()         self.driver.implicitly_wait(20)         self.driver.set_page_load_timeout(20)         #self.driver.set_script_timeout(20)         print (""[+] Firefox Profiel Path:"", self.driver.firefox_profile.path) ``` but i see (it's a copy. it's not mine): `[+] Firefox Profiel Path: C:\Users\linux10\AppData\Local\Temp\tmpjqwksd76\webdriver-py-profilecopy`  ## GeckoDriver log: ``` 1611322329511	geckodriver	INFO	Listening on 127.0.0.1:59104 1611322332563	mozrunner::runner	INFO	Running command: ""C:\\Program Files\\Mozilla Firefox\\firefox.exe"" ""--marionette"" ""-foreground"" ""-no-remote"" ""-profile"" ""C:\\Users\\linux10\\AppData\\Local\\Temp\\rust_mozprofileLRbcJO"" Can't find symbol 'eglSwapBuffersWithDamageEXT'. Can't find symbol 'eglSetDamageRegionKHR'. console.warn: SearchSettings: ""get: No settings file exists, new profile?"" (new Error("""", ""(unknown module)"")) 1611322337355	Marionette	INFO	Listening on port 59112 1611322337856	Marionette	WARN	TLS certificate errors will be ignored for this session  JavaScript error: resource://activity-stream/lib/ASRouter.jsm, line 987: NS_ERROR_ILLEGAL_VALUE: Component returned failure code: 0x80070057 (NS_ERROR_ILLEGAL_VALUE) [nsIObserverService.removeObserver] 1611322343729	Marionette	INFO	Stopped listening on port 59112 ```  How to fix this issue !>?","closed","needs-triaging,","alimp5","2021-01-22T13:26:33Z","2021-09-05T08:21:39Z"
"","8935","AsyncHttpClient-1-4] WARN org.asynchttpclient.netty.handler.WebSocketHandler - onError","## üêõ Bug Report  OS: MAC ChromeDriver: 87.0.4280.88 Selenium alpha -7, selenium 4 alpha 6  log4j2: 2.14.0 maven: 3.7.0 testng 7.3.0  dependencies: selenium, maven, log4j2  When Tests run and it passes after method driver.quit it shows error in below However this error sometimes shows up sometimes not  :  [AsyncHttpClient-1-4] WARN org.asynchttpclient.netty.handler.WebSocketHandler - onError java.net.SocketException: Connection reset at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:345) at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:376) at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253) at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1134) at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.base/java.lang.Thread.run(Thread.java:830) Dec 04, 2020 2:11:45 AM org.openqa.selenium.remote.http.WebSocket$Listener onError WARNING: Connection reset java.net.SocketException: Connection reset at java.base/sun.nio.ch.SocketChannelImpl.throwConnectionReset(SocketChannelImpl.java:345) at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:376) at io.netty.buffer.PooledByteBuf.setBytes(PooledByteBuf.java:253) at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1134) at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:350) at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:151) at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.base/java.lang.Thread.run(Thread.java:830)   ## To Reproduce  To reproduce run your tests in your local machine simple test you will face this problem  I'm using mac and local test run. It passes and aftermethod it gives error.   Detailed steps to reproduce the behavior:  WebDriver driver = new ChromeDriver(); @BeforeTest public void setUp(){ driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS); driver.get(""https://signin.ebay.com/""); } @test public void findElementbyXpath(){ driver.findElement(By.xpath("".//*[@id='gh-p-1']/a"")).click(); } @AfterMethod public void afterMethod(){ driver.quit(); }  ## Expected behavior  it quits driver successfully.  ## Test script or set of commands reproducing this issue  classic 2 step test open browser navigate google.com close it   ## Environment  OS:  MAC Browser:  Chrome  Browser version: 87.0.4280.88 Browser Driver version: ChromeDriver 87.0.4280.88   Language Bindings version:  Java 8,11  Selenium Grid version (if applicable): Selenium 4 alpha 7 , selenium 4 alpha 6   TestNG 7.3.0","closed","C-java,","amiluslu","2020-12-03T23:21:40Z","2021-09-05T08:30:09Z"
"","9248","Keys Goes to a Loop when DOWN and UP is initiated.","## üêõ Bug Report  OS:  Windows 10 Browser: Chrome Browser version: 10.0.19042.804 Browser Driver version: Chrome Driver 88.0.4624.96 Language Bindings version: Python 3.9.0 (tags/v3.9.0:9cf6752, Oct  5 2020, 15:34:40) [MSC v.1927 64 bit (AMD64)] on win32  Issue : Below code when run through Pycharm sends ""SIVASiva"" to the element with Id ""RESULT_TextField-1"" Ideally it should send ""SIVAiva"". But the ""S"" is added to it.  ![SIVASiva](https://user-images.githubusercontent.com/64820113/110569601-b5914600-8122-11eb-9cc7-c17bec389cf2.png) Can we see why it goes to a loop to pick the ""S"" and resends it.   Code: ```py from selenium import webdriver from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.common.keys import Keys driver = webdriver.Chrome() driver.get('https://fs2.formsite.com/meherpavan/form2/index.html?1537702596407') driver.maximize_window()  actions = ActionChains(driver) #Trying to use Keys to convert s to S and send.  actions.key_down(Keys.SHIFT,driver.find_element_by_id(""RESULT_TextField-1"")).send_keys('s')  actions.perform() #Trying to send 'iva' as Upper case since the Key is still down. driver.find_element_by_id((""RESULT_TextField-1"")).send_keys('iva') #Making the keys back to UP,releasing the SHIFT. actions.key_up(Keys.SHIFT).perform() #Sending 'iva', but GUI has ""Siva"" sent driver.find_element_by_id((""RESULT_TextField-1"")).send_keys('iva') ```","closed","D-chrome,","Sivasundar-Nagarajan","2021-03-10T03:00:15Z","2021-09-05T08:12:22Z"
"","9353","[DOC] README: Bazel plugin for Intellij IDEA should be mandatory","## üêõ Bug Report  On the README it is reported:  > If you're working in IntelliJ, then we **highly recommend** installing the Bazel IJ plugin which is documented on its own site.  https://github.com/SeleniumHQ/selenium/blob/trunk/README.md#editing-code  But actually it seems to me that it should be mandatory: without the Bazel plugin I could not get IDEA to compile the java client (that's the only module I am interested in).  It was complaining about:  > [..]/selenium/java/client/src/org/openqa/selenium/devtools/v85/V85Log.java:23:44 java: package org.openqa.selenium.devtools.v85.log does not exist  Only after getting the plugin to work (which included downgrading IDEA to 2020.2, since the Bazel plugin is currently not supporting the latest 2020.3), I was finally able to compile and run the unit tests (which was my ultimate goal, for the kind of contributions I make).  Can you please update the README if it makes sense to you?  Thanks.   PS: Also, I had to comment out `javascript` and `typescript ` in `scripts/ij.bazelproject`   https://github.com/SeleniumHQ/selenium/blob/trunk/scripts/ij.bazelproject#L23  Otherwise I was getting an error and I was not be able to complete successfully the import procedure:    I'm wondering if that's because there are some unstated requirements in terms of Intellij IDEA plugins? If that is the case, it would be nice if you could also document that.  Thanks a lot.  Best, Alberto","closed","needs-triaging,","alb-i986","2021-04-03T16:15:27Z","2021-09-05T08:08:41Z"
"","9825","Ruby 3.0.1 - uninitialized constant Selenium::WebDriver::ServiceManager::URI","## üêõ Bug Report  On Ruby 3.0.1, when the stdlib `uri` package has not already been required, `selenium-webdriver v4.0.0.rc1` throws this error when creating a browser driver:  ``` /path/to/project/selenium/.bundle/ruby/3.0.0/gems/selenium-webdriver-4.0.0.rc1/lib/selenium/webdriver/common/service_manager.rb:73:in `uri': uninitialized constant Selenium::WebDriver::ServiceManager::URI (NameError) ```  This can be fixed by including the line `require ""uri""` at this line: https://github.com/SeleniumHQ/selenium/blob/trunk/rb/lib/selenium/webdriver.rb#L26, which I will open a PR for shortly.  ## To Reproduce  Executable steps are below, but this is the plain-language general idea:  * Create and navigate to a project directory * Initialize a Gemfile * Add a local Bundler configuration * Install gems * Create a Ruby script requiring `selenium-webdriver` and initializing a browser driver * Run the script with `bundle exec`  ## Expected behavior  * Firefox window appears briefly and then disappears * Program runs without errors  ## Test script or set of commands reproducing this issue   ### Installing a `geckodriver` binary - skip if not needed ```shell # Change this for your architecture - I'm on an M1 Mac (https://github.com/mozilla/geckodriver/releases) geckodriver_url=""https://github.com/mozilla/geckodriver/releases/download/v0.29.1/geckodriver-v0.29.1-macos-aarch64.tar.gz"" geckodriver_path=""$HOME/Downloads/geckodriver.tar.gz"" # Change this to a directory where `geckodriver` will be available to your `PATH` geckodriver_target=""$HOME/scripts""  mkdir -p $geckodriver_target curl -L $geckodriver_url -o $geckodriver_path gzip -d $geckodriver_path --stdout | tar -xvf  -C $geckodriver_target  unset geckodriver_url unset geckodriver_path ```  ### Reproduction script ```shell mkdir -p selenium_test && cd $_ bundle init bundle config --local set path .bundle  cat  Gemfile # frozen_string_literal: true  source ""https://rubygems.org""  ruby ""3.0.1""  gem ""selenium-webdriver"", ""4.0.0.rc1"" GEMFILE  bundle install  echo 3.0.1 > .ruby-version  cat  test.rb require ""selenium-webdriver"" browser = Selenium::WebDriver.for(:firefox) RB  bundle exec ruby test.rb ```  ## Environment  OS: macOS 11.5.2 Browser: Firefox Browser version: 92.0 build 20210903235534 Browser Driver version: geckodriver 0.29.1 (970ef713fe58 2021-04-08 23:34 +0200) Language Bindings version: Ruby 3.0.1","closed","C-rb,","flanger001","2021-09-14T15:44:21Z","2021-10-23T00:05:59Z"
"","9484","IE 11 keyboard events not setting metakey properties of input event","## üêõ Bug Report  On IE 11, when sending keys the shiftKey property of keyboard events never becomes true. Manually holding the shift key shown by a keydown listener shows shiftKey = true. When the event is sent by selenium, it does not.   ## To Reproduce   Detailed steps to reproduce the behavior: Using node.js 12.19 on windows 7 testing IE 11, webdriver cannot trigger hotkeys.   ## Expected behavior When you send the shiftkey the keydown event should register shiftKey: true.  ## Test script or set of commands reproducing this issue On a nearly empty test page with an input field. I have the following code looking for the hotkey shift+space.   https://jsfiddle.net/13uo6xcm/  I have tried an absurd amount of combination/permutations of the following and none of them will trigger the shift+space hotkey, because sending shift does not set the keydown event shiftKey to true.  ```Javascript const t1 = await waitForElementById(driver, ""t1""); let actions = driver.actions(); await actions.click(t1)     .keyDown(Key.SHIFT)     .perform(); await driver.sleep(20); await driver.actions()     .sendKeys(Key.SPACE)     .perform();  ```  ## Environment  OS: Windows 7 - IE 11   microsoft developer virtual box Browser: IE 11 Browser version: 11.0.9600.18860 Browser Driver version: 3.150.1.0 (32 bit) Language Bindings version: Node.js 4.0.0-beta.3","closed","R-awaiting answer,","hath995","2021-05-18T06:49:05Z","2021-09-05T07:50:24Z"
"","9146","InvalidSessionIdError and NoSuchWindowError","## üêõ Bug Report  Not sure if this is an issue with `webdriver-selenium` or `capybara` but since the error is `Selenium::WebDriver::Error::InvalidSessionIdError` I came here first.  ~When I add an image tag (with a local image) to my Rails view template, all browser tests fail with the same error~ > Selenium::WebDriver::Error::InvalidSessionIdError: Tried to run command without establishing a connection  ~Interestingly the fix seems to be to simply add CSS e.g. `max-width: 300px; height: auto;`.~  Note: I'm running firefox in headless mode    ## To Reproduce  Unfortunately I'm not able to reproduce it outside my repo, ~but I was able to isolate the error in very small commits.~    The logs output from the tests (ruby 2.6.6): ``` Error: UsersTest#test_signing_up: Selenium::WebDriver::Error::InvalidSessionIdError: Tried to run command without establishing a connection     test/system/users_test.rb:9:in `block (2 levels) in '     test/system/users_test.rb:8:in `block in ' Error: UsersTest#test_signing_up: Selenium::WebDriver::Error::InvalidSessionIdError: Tried to run command without establishing a connection     /builds/axelthegerman/buzz-me-in/vendor/bundle/ruby/2.6.0/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/response.rb:72:in `assert_ok' ... ``` Full output: https://pastebin.com/JEKvwiWQ  The logs from running the tests (ruby 2.7.2): ``` UsersTest#test_user_can_reset_the_password: Selenium::WebDriver::Error::NoSuchWindowError: Browsing context has been discarded     test/system/password_resets_test.rb:21:in `block in ' Error: UsersTest#test_user_can_reset_the_password: Selenium::WebDriver::Error::NoSuchWindowError: Browsing context has been discarded     WebDriverError@chrome://marionette/content/error.js:175:5     NoSuchWindowError@chrome://marionette/content/error.js:409:5     assert.that/   ===  I hope this helps, let me know if anything else would be useful and I'll try to provide that.  Thanks, Axel  EDIT: removed irrelevant details","closed","needs-triaging,","AxelTheGerman","2021-02-05T03:45:19Z","2021-09-05T08:19:07Z"
"","9004","drop not working","## üêõ Bug Report  Not dropping element to destination.  ## To Reproduce  **1. Record test in selenium IDE 2. Then save .side file 3. After run in CL selenium-side-runner**  > NOTE: Tried to run test in pytest and NUnit C# there is the same problem.  ## Expected behavior I put two console.log() with messages ""drag begins"" and ""drag end"" on each event respectively. So when testing by console, it shows nothing, but in log we can see that test passed.   ## Test script or set of commands reproducing this issue ``` {   ""id"": ""81bf1079-9a17-40f4-8388-71ed9634f9a8"",   ""version"": ""2.0"",   ""name"": ""dnd"",   ""url"": ""https://codesandbox.io/s/great-montalcini-8cs99"",   ""tests"": [{     ""id"": ""7b7ed6d6-bdfd-435a-a227-4384f261cae8"",     ""name"": ""dnd"",     ""commands"": [{       ""id"": ""66ac3b45-e9dc-44a6-b350-f7bda3e197a9"",       ""comment"": """",       ""command"": ""open"",       ""target"": ""https://codesandbox.io/s/great-montalcini-8cs99"",       ""targets"": [],       ""value"": """"     }, {       ""id"": ""e423e5db-dbef-4ac0-9f26-f59a4ef30fda"",       ""comment"": """",       ""command"": ""setWindowSize"",       ""target"": ""1552x840"",       ""targets"": [],       ""value"": """"     }, {       ""id"": ""0320ee04-5fbd-4d7b-9805-1eeae80f7945"",       ""comment"": """",       ""command"": ""selectFrame"",       ""target"": ""index=0"",       ""targets"": [         [""index=0""]       ],       ""value"": """"     }, {       ""id"": ""5fbedec6-4dc9-4acb-8759-3f76b038d226"",       ""comment"": """",       ""command"": ""dragAndDropToObject"",       ""target"": ""xpath=//div[@id='root']/div/div/div/div/div/div/div/table/tbody/tr/td"",       ""targets"": [         [""css=.ant-table-row:nth-child(1) > td:nth-child(1)"", ""css:finder""],         [""xpath=//div[@id='root']/div/div/div/div/div/div/div/table/tbody/tr/td"", ""xpath:idRelative""],         [""xpath=//td"", ""xpath:position""],         [""xpath=//td[contains(.,'Alice')]"", ""xpath:innerText""]       ],       ""value"": ""css=.ant-table-row:nth-child(2) > td:nth-child(1)""     }, {       ""id"": ""383c54e0-f6ae-4779-9d15-82b1aec42d44"",       ""comment"": """",       ""command"": ""pause"",       ""target"": ""15000"",       ""targets"": [],       ""value"": """"     }, {       ""id"": ""202779fe-ae81-4cf9-a5f2-873735276158"",       ""comment"": """",       ""command"": ""close"",       ""target"": """",       ""targets"": [],       ""value"": """"     }]   }],   ""suites"": [{     ""id"": ""1530b2aa-2bed-4593-ab65-fe5313c340a5"",     ""name"": ""Default Suite"",     ""persistSession"": false,     ""parallel"": false,     ""timeout"": 300,     ""tests"": [""7b7ed6d6-bdfd-435a-a227-4384f261cae8""]   }],   ""urls"": [""https://codesandbox.io/s/great-montalcini-8cs99""],   ""plugins"": [] } ```   ## Environment  OS: Windows 10 64x Browser: Chrome Browser version: 87.0.4280.88 Browser Driver version: ChromeDriver 87.0.4280.88 Selenium-side-runner v 3.17.0","closed","R-awaiting answer,","iamkabulov","2020-12-28T09:18:45Z","2021-09-05T08:27:39Z"
"","9384","Issue while automating keyboard shortcuts for iOS 14.4 and Appium 1.18.0","## üêõ Bug Report  Not able to automate keyboard shortcuts using ActionChains    ## To Reproduce  1. Open app 2. Pass the keyboard shortcut. 3. Keyboard shortcut should work as it should be with attached keyboard  Detailed steps to reproduce the behavior:  ## Expected behavior  Keyboard shortcut should have been passed on to app  ## Test script or set of commands reproducing this issue  action = ActionChains(appium_session.get_driver()) action.key_down(Keys.SHIFT).send_keys('E').key_up(Keys.SHIFT).perform()  ## Environment  OS:  iOS 14.4 Browser:  Browser version:  Browser Driver version:  Language Bindings version:  Python 3.8 Selenium Grid version (if applicable):  Appium 1.18.0  ## Error selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: Error Domain=com.facebook.WebDriverAgent Code=1 ""It is mandatory to have at least one gesture item defined for each action. Action with id 'mouse' contains none"" UserInfo={NSLocalizedDescription=It is mandatory to have at least one gesture item defined for each action. Action with id 'mouse' contains none}    [KeyBoardShortCutLogs.txt](https://github.com/SeleniumHQ/selenium/files/6321111/KeyBoardShortCutLogs.txt)","closed","","saharana27","2021-04-15T21:08:19Z","2021-09-05T08:08:30Z"
"","9746","Cookies do not allow None as a value for sameSite (python bindings)","## üêõ Bug Report  None is a valid value for the sameSite attribute of cookies, however setting a cookie to this value currently fails with an AssertionError: `assert cookie_dict['sameSite'] in ['Strict', 'Lax']`.  Some browsers default not-set to Lax, so just not setting the attribute instead is not an option. Simply changing this line: https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/webdriver.py#L1120 should fix the problem.  ## To Reproduce  ```python from selenium import webdriver  driver = webdriver.Chrome() driver.get(""https://example.org"") driver.add_cookie({""name"": ""abc"", ""sameSite"": ""None""}) ```  Detailed steps to reproduce the behavior:  - Save and run the code above.  ## Expected behavior  Cookie should be set with the correct attribute.  ## Environment  OS: All Browser: All Browser version: All Browser Driver version: All Language Bindings version: python-4.0.0b4","closed","C-py,","JannisBush","2021-08-18T17:23:25Z","2021-10-09T00:05:40Z"
"","9528","java.util.concurrent.TimeoutException thrown at random netty read timeouts with RemoteWebDriver","## üêõ Bug Report  Netty at random times gets a read timeout at. This happens at different selenium commands ( for example: WebDriver.switchTo().defaultContent, WebElement.click, WebDriver.switchTo().window, WebElement.sendKeys, WebDriver.get, Alert.accept ) and at random in a quite small percentage chance (","open","C-java,","rcesarlumis","2021-05-28T02:10:47Z","2022-08-03T20:12:50Z"
"","9689","Include link to license for net.jcip.annotations","## üêõ Bug Report  net.jcip.annotations are licensed under CC BY 2.5, and we use those transitively in the Selenium source. Because of this, they are packaged in the standalone jar. We should include a copy of the license in the jar.  ## To Reproduce  Unzip and look  ## Expected behavior  CC BY 2.5 license to be present  ## Test script or set of commands reproducing this issue  N/A  ## Environment  OS: N/A Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: 3.141.59 and 4.x Selenium Grid version (if applicable): N/A","closed","C-build,","shs96c","2021-07-28T07:22:36Z","2021-11-12T00:07:00Z"
"","9186","Navigating to a URL throws `CommandResponseException` with 'Invalid InterceptionId' when network monitoring is enabled (dotnet, v4.0.0b1)","## üêõ Bug Report  Navigating to a URL when network monitoring is enabled is crashing the test host. When running the test in debug, the following exception is shown: ``` OpenQA.Selenium.DevTools.CommandResponseException: 'Fetch.getResponseBody: Invalid InterceptionId.' This exception was originally thrown at this call stack:     OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(string, Newtonsoft.Json.Linq.JToken, System.Threading.CancellationToken, int?, bool)     System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()     System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task)     System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)     System.Runtime.CompilerServices.TaskAwaiter.GetResult()     OpenQA.Selenium.DevTools.DevToolsSession.SendCommand(TCommand, System.Threading.CancellationToken, int?, bool)     System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()     System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(System.Threading.Tasks.Task)     System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(System.Threading.Tasks.Task)     System.Runtime.CompilerServices.TaskAwaiter.GetResult()     ...     [Call Stack Truncated] ```  ## To Reproduce  ``` CSharp [Test] public async Task Test {     var driver = new ChromeDriver();     await driver.Manage().Network.StartMonitoring();     driver.Navigate().GoToUrl(""https://the-internet.herokuapp.com/""); } ```  Project file: ``` xml          netcoreapp3.1      false                                      ```  ## Expected behavior  Be able to navigate to the page.  ## Test script or set of commands reproducing this issue  Please see steps to reproduce above.  ## Environment  OS: Windows 10, build 19041.804 Browser: Chrome Browser version: 88.0.4324.150 Browser Driver version: ChromeDriver 88.0.4324.9600 Language Bindings version: dotnet 4.0.0b1 Selenium Grid version (if applicable): N/A","closed","C-dotnet,","shack05","2021-02-17T10:22:48Z","2021-09-05T08:15:53Z"
"","9059","Unable to capture SIGINT signal when importing selenium-webdriver","## üêõ Bug Report  My nodejs script is unable to capture `SIGTERM`/`SIGINT` when being exited. By trying to find the cause of the issue I have discovered that just calling `require('webdriver-selenium')` somehow breaks the signal handling.  ## To Reproduce  `index.js` ```javascript 'use strict';  const swd = require('selenium-webdriver');  function handleExit(signal) {     console.log(`Received ${signal}. Close my server properly.`);     process.exit(0); } process.on('SIGINT', handleExit); process.on('SIGQUIT', handleExit); process.on('SIGTERM', handleExit);  setInterval(console.log.bind(console, 'tick'), 500); ```  1. Launch `node index.js` 2. Hit `CTRL+C`  ## Expected behavior  I should receive `Received SIGINT. Close my server properly.` If I comment `const swd = require('selenium-webdriver');` everything works as expected.  ## Environment  OS:  Linux (Ubuntu 20.04) Node: v14 Language Bindings version: NodeJS 4.0.0-alpha.8","closed","C-nodejs,","atoppi","2021-01-18T18:43:28Z","2021-09-05T07:50:08Z"
"","9089","Remote WebDriver throws timeout navigating","## üêõ Bug Report  My grid and node instances running fine. I can also connect to the hub via ""http://123.456.789.0:4444/wd/hub"" Next I want to navigate to a URL but it does not work, it throws an timeout, even if I set the timeout to 3 mins. I tried on a Windows 2019 Server and fresh Linux machine (Ubuntu 20.04) with the selenium standalone server 4.0.0 alpha 2 (and alpha 7)  ## To Reproduce  for me: Install everything as needed, run grid and node on the same machine with default settings connect to the webdriver with the code below (C#)   ## Expected behavior  URL should load and should show me the page (only windows as Linux is vps)  ## Test script or set of commands reproducing this issue  ```csharp  ChromeOptions co = new ChromeOptions()          {             AcceptInsecureCertificates = true          };          co.AddArgument($""--headless"");          co.AddArguments(""--disable-extensions"",              ""--disable-breakpad"",              ""--disable-component-update"",              ""--disable-hang-monitor"",              ""--disable-logging"",             ""--disable-print-preview"",             ""--disable-metrics-reporting"",             ""--disable-dev-tools"",             ""--ssl-version-min=tl"",             ""--no-sandbox"",             ""--remote-debugging-port=9222"",             ""--disable-dev-shm-usage"",             ""--disable-metrics"");          co.AddArgument($""user-agent={UserData.CustomUserAgent}"");          var chromeDriverService = ChromeDriverService.CreateDefaultService();          chromeDriverService.HideCommandPromptWindow = true;           driver = new RemoteWebDriver(new Uri(""http://123.456.789.0:4444/wd/hub""), co.ToCapabilities(),TimeSpan.FromSeconds(60));          //driver = new ChromeDriver(chromeDriverService, co);          driver.Navigate().GoToUrl($""https://example.com/""); ```  ## Environment  OS: Host: Windows, Server: Linux/Windows Browser: Chrome Browser version: latest (88.0.4324.96) Browser Driver version: 88.0.4324.96 Language Bindings version: C# Selenium.WebDriver 4.0.0 alpha02 Selenium Grid version (if applicable): v.4.0.0-alpha-2","closed","needs-triaging,","Th3C0D3R","2021-01-22T20:19:19Z","2021-09-05T08:24:54Z"
"","9148","MoveToElement and DragAndDrop is not working in Selenium C#","## üêõ Bug Report  MoveToElement and DragAndDrop is not working in Selenium C#   ## To Reproduce  When I use DragAndDrop or MoveToElement not move the element to specified target place. The element is on mouse cursor and on this coordinates will be put.  Detailed steps to reproduce the behavior:  1. Use Actions.DragAndDrop(draggableFirst, dropZone)  ## Expected behavior  Move element to the target place  ## Test script or set of commands reproducing this issue  _driver.Navigate().GoToUrl(""http://www.seleniumeasy.com/test/drag-and-drop-demo.html"");  var draggableFirst =     _wait.Until(ExpectedConditions.ElementExists(         By.XPath("".//*[@id='todrag']//span[contains(text(),'Draggable 1')]""))); var dropZone = _wait.Until(ExpectedConditions.ElementIsVisible(By.Id(""mydropzone""))); var actions = new Actions(_driver); actions.ClickAndHold(draggableFirst)     .MoveToElement(dropZone)     .Release()     .Build()     .Perform();  //var a = new Actions(_driver); //a.DragAndDrop(draggableFirst, dropZone).Build().Perform();  ## Environment  OS: mcOS Big Sur version 11.2 Browser: Chrome Browser version: 88.0.4324.146 Browser Driver version: ChromeDriver  88.0.4324.9600 Language Bindings version: C# .NET 5.0","closed","C-dotnet,","Brzeczunio","2021-02-05T12:13:34Z","2021-09-05T08:19:00Z"
"","9060","Malicious browser startup parameter cause remote code execution","## üêõ Bug Report  Malicious browser startup parameter cause remote code execution  ## To Reproduce  1. we need to start up a selenium-server (regardless of role standalone or node). 2. we could access the website, such as these [search from zoomeye](https://www.zoomeye.org/searchResult?q=selenium%20%2Bserver:%22Jetty%22). 3. we try to build a new broswer with Malicious browser startup items that could execute codes. 4. bingo!  ## Expected behavior  the selenium-server will execute code what you set(it run with a calc.exe that i set to prove this vuln).  ## Test script or set of commands reproducing this issue  post the following packet to selenium-server ``` {     ""desiredCapabilities"": {         ""browserName"":""chrome"",         ""goog:chromeOptions"": {             ""args"":[""--headless"",""--no-sandbox"",""--xxxxxxxxx=calc.exe --""]         }     } } ``` there are millions of hosts open on the public network, and it would affect most hosts, so i replace the parameter with `xxxxx`    **please contact me for more detail**   ## Environment  Selenium Grid version : from 2.x to 4.x  It has nothing to do with the version of the browser, only related to the parameters when the browser is started. I hope to check the startup parameters of the browser later.","closed","","lemonvegetablefish","2021-01-19T03:21:59Z","2021-09-05T08:24:57Z"
"","9752","3.150.0: pytest is failing","## üêõ Bug Report  Looks like selenium is usiomg in test units private pytest type which has been removed from latest pytest (I'm using pytest 6.2.4). Look on https://github.com/pytest-dev/pytest/issues/8728  ## To Reproduce I'm trying to package your module as rpm packag. So I'm using typical in such case build, install and test cycle used on building package from non-root account: - ""setup.py build"" - ""setup.py install --root "" - ""pytest with PYTHONPATH pointing to sitearch and sitelib inside   ## Expected behavior  `pytest` at least should start executing teat units and it should be possible to test `selenium` using it because testing using only `tox` as `pytest` because is plugable offers testing agaist env with many addiotnal extension allowing keep code in better shape.  ## Test script or set of commands reproducing this issue  I'm trying to package your module as rpm packag. So I'm using typical in such case build, install and test cycle used on building package from non-root account: - ""setup.py build"" - ""setup.py install --root "" - ""pytest with PYTHONPATH pointing to sitearch and sitelib inside   ## Environment  OS: Linux/x86_64 Browser: N/A Browser version:  N/A Browser Driver version:  N/A Language Bindings version:  N/A Selenium Grid version (if applicable):  N/A  Output of the pytest: ```console + PYTHONDONTWRITEBYTECODE=1 + SETUPTOOLS_SCM_PRETEND_VERSION=3.150.0 + PYTHONPATH=/home/tkloczko/rpmbuild/BUILDROOT/python-selenium-3.150.0-2.fc35.x86_64/usr/lib64/python3.8/site-packages:/home/tkloczko/rpmbuild/BUILDROOT/python-selenium-3.150.0-2.fc35.x86_64/usr/lib/python3.8/site-packages + /usr/bin/pytest -ra ImportError while loading conftest '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/conftest.py'. conftest.py:25: in      from _pytest.skipping import MarkEvaluator E   ImportError: cannot import name 'MarkEvaluator' from '_pytest.skipping' (/usr/lib/python3.8/site-packages/_pyte ```","closed","","kloczek","2021-08-19T21:40:29Z","2021-10-05T00:05:54Z"
"","9751","3.150.0: is not sphinx 4.1.x ready (sphinx shows many warnings and errors)","## üêõ Bug Report  Latest phinx 4.1.2 shows many warning on generate documentation and looks like tox documenation process defined in tox.ini uses almost 3 years old sphinx 1.8.2.  ## To Reproduce Execute: ```console $ python3 setup.py build_sphinx -b man --build-dir build/sphinx ``` ## Expected behavior `selenium` should be latest sphinx rrady.  ## Environment  OS: Linu/x86/64 Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: N/A Selenium Grid version (if applicable): N/A  Output of the setuptools `build_sphinx` command ```console + /usr/bin/python3 setup.py build_sphinx -b man --build-dir build/sphinx running build_sphinx Running Sphinx v4.1.2 making output directory... done [autosummary] generating autosummary for: api.rst, common/selenium.common.exceptions.rst, index.rst, webdriver/selenium.webdriver.common.action_chains.rst, webdriver/selenium.webdriver.common.alert.rst, webdriver/selenium.webdriver.common.by.rst, webdriver/selenium.webdriver.common.desired_capabilities.rst, webdriver/selenium.webdriver.common.html5.application_cache.rst, webdriver/selenium.webdriver.common.keys.rst, webdriver/selenium.webdriver.common.proxy.rst, ..., webdriver_safari/selenium.webdriver.safari.webdriver.rst, webdriver_support/selenium.webdriver.support.abstract_event_listener.rst, webdriver_support/selenium.webdriver.support.color.rst, webdriver_support/selenium.webdriver.support.event_firing_webdriver.rst, webdriver_support/selenium.webdriver.support.expected_conditions.rst, webdriver_support/selenium.webdriver.support.select.rst, webdriver_support/selenium.webdriver.support.wait.rst, webdriver_webkitgtk/selenium.webdriver.webkitgtk.options.rst, webdriver_webkitgtk/selenium.webdriver.webkitgtk.service.rst, webdriver_webkitgtk/selenium.webdriver.webkitgtk.webdriver.rst Failed to import 'selenium.webdriver.chrome.webdriver': no module named selenium.webdriver.chrome.webdriver Failed to import 'selenium.webdriver.edge.service': no module named selenium.webdriver.edge.service Failed to import 'selenium.webdriver.common.action_chains': no module named selenium.webdriver.common.action_chains Failed to import 'selenium.webdriver.chrome.service': no module named selenium.webdriver.chrome.service Failed to import 'selenium.webdriver.support.expected_conditions': no module named selenium.webdriver.support.expected_conditions Failed to import 'selenium.webdriver.android.webdriver': no module named selenium.webdriver.android.webdriver Failed to import 'selenium.webdriver.support.abstract_event_listener': no module named selenium.webdriver.support.abstract_event_listener Failed to import 'selenium.webdriver.ie.webdriver': no module named selenium.webdriver.ie.webdriver Failed to import 'selenium.webdriver.support.color': no module named selenium.webdriver.support.color Failed to import 'selenium.webdriver.chromium.service': no module named selenium.webdriver.chromium.service Failed to import 'selenium.webdriver.phantomjs.webdriver': no module named selenium.webdriver.phantomjs.webdriver Failed to import 'selenium.webdriver.opera.webdriver': no module named selenium.webdriver.opera.webdriver Failed to import 'selenium.webdriver.support.event_firing_webdriver': no module named selenium.webdriver.support.event_firing_webdriver Failed to import 'selenium.webdriver.webkitgtk.service': no module named selenium.webdriver.webkitgtk.service Failed to import 'selenium.webdriver.remote.webdriver': no module named selenium.webdriver.remote.webdriver Failed to import 'selenium.webdriver.webkitgtk.webdriver': no module named selenium.webdriver.webkitgtk.webdriver Failed to import 'selenium.webdriver.remote.webelement': no module named selenium.webdriver.remote.webelement Failed to import 'selenium.webdriver.safari.webdriver': no module named selenium.webdriver.safari.webdriver Failed to import 'selenium.webdriver.chromium.options': no module named selenium.webdriver.chromium.options Failed to import 'selenium.webdriver.edge.webdriver': no module named selenium.webdriver.edge.webdriver Failed to import 'selenium.webdriver.firefox.webdriver': no module named selenium.webdriver.firefox.webdriver Failed to import 'selenium.webdriver.phantomjs.service': no module named selenium.webdriver.phantomjs.service Failed to import 'selenium.webdriver.edge.options': no module named selenium.webdriver.edge.options Failed to import 'selenium.webdriver.webkitgtk.options': no module named selenium.webdriver.webkitgtk.options Failed to import 'selenium.webdriver.support.select': no module named selenium.webdriver.support.select Failed to import 'selenium.webdriver.support.wait': no module named selenium.webdriver.support.wait Failed to import 'selenium.webdriver.chrome.options': no module named selenium.webdriver.chrome.options Failed to import 'selenium.webdriver.chromium.webdriver': no module named selenium.webdriver.chromium.webdriver Failed to import 'selenium.webdriver.safari.service': no module named selenium.webdriver.safari.service WARNING: [autosummary] failed to import 'selenium.webdriver.android.webdriver': no module named selenium.webdriver.android.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.chrome.options': no module named selenium.webdriver.chrome.options WARNING: [autosummary] failed to import 'selenium.webdriver.chrome.service': no module named selenium.webdriver.chrome.service WARNING: [autosummary] failed to import 'selenium.webdriver.chrome.webdriver': no module named selenium.webdriver.chrome.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.chromium.options': no module named selenium.webdriver.chromium.options WARNING: [autosummary] failed to import 'selenium.webdriver.chromium.service': no module named selenium.webdriver.chromium.service WARNING: [autosummary] failed to import 'selenium.webdriver.chromium.webdriver': no module named selenium.webdriver.chromium.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.common.action_chains': no module named selenium.webdriver.common.action_chains WARNING: [autosummary] failed to import 'selenium.webdriver.edge.options': no module named selenium.webdriver.edge.options WARNING: [autosummary] failed to import 'selenium.webdriver.edge.service': no module named selenium.webdriver.edge.service WARNING: [autosummary] failed to import 'selenium.webdriver.edge.webdriver': no module named selenium.webdriver.edge.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.firefox.webdriver': no module named selenium.webdriver.firefox.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.ie.webdriver': no module named selenium.webdriver.ie.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.opera.webdriver': no module named selenium.webdriver.opera.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.phantomjs.service': no module named selenium.webdriver.phantomjs.service WARNING: [autosummary] failed to import 'selenium.webdriver.phantomjs.webdriver': no module named selenium.webdriver.phantomjs.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.remote.webdriver': no module named selenium.webdriver.remote.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.remote.webelement': no module named selenium.webdriver.remote.webelement WARNING: [autosummary] failed to import 'selenium.webdriver.safari.service': no module named selenium.webdriver.safari.service WARNING: [autosummary] failed to import 'selenium.webdriver.safari.webdriver': no module named selenium.webdriver.safari.webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.support.abstract_event_listener': no module named selenium.webdriver.support.abstract_event_listener WARNING: [autosummary] failed to import 'selenium.webdriver.support.color': no module named selenium.webdriver.support.color WARNING: [autosummary] failed to import 'selenium.webdriver.support.event_firing_webdriver': no module named selenium.webdriver.support.event_firing_webdriver WARNING: [autosummary] failed to import 'selenium.webdriver.support.expected_conditions': no module named selenium.webdriver.support.expected_conditions WARNING: [autosummary] failed to import 'selenium.webdriver.support.select': no module named selenium.webdriver.support.select WARNING: [autosummary] failed to import 'selenium.webdriver.support.wait': no module named selenium.webdriver.support.wait WARNING: [autosummary] failed to import 'selenium.webdriver.webkitgtk.options': no module named selenium.webdriver.webkitgtk.options WARNING: [autosummary] failed to import 'selenium.webdriver.webkitgtk.service': no module named selenium.webdriver.webkitgtk.service WARNING: [autosummary] failed to import 'selenium.webdriver.webkitgtk.webdriver': no module named selenium.webdriver.webkitgtk.webdriver [autosummary] generating autosummary for: /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/common/selenium.common.exceptions.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.alert.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.by.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.desired_capabilities.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.html5.application_cache.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.keys.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.proxy.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.service.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.touch_actions.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.utils.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_firefox/selenium.webdriver.firefox.extension_connection.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_firefox/selenium.webdriver.firefox.firefox_binary.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_firefox/selenium.webdriver.firefox.firefox_profile.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_firefox/selenium.webdriver.firefox.options.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.command.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.errorhandler.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.mobile.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.remote_connection.rst, /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.utils.rst building [mo]: targets for 0 po files that are out of date building [man]: all manpages updating environment: [new config] 50 added, 0 changed, 0 removed reading sources... [100%] webdriver_webkitgtk/selenium.webdriver.webkitgtk.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:20: WARNING: autosummary: failed to import selenium.webdriver.common.action_chains /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:38: WARNING: autosummary: failed to import selenium.webdriver.support.abstract_event_listener /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:38: WARNING: autosummary: failed to import selenium.webdriver.support.color /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:38: WARNING: autosummary: failed to import selenium.webdriver.support.event_firing_webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:38: WARNING: autosummary: failed to import selenium.webdriver.support.expected_conditions /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:38: WARNING: autosummary: failed to import selenium.webdriver.support.select /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:38: WARNING: autosummary: failed to import selenium.webdriver.support.wait /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:52: WARNING: autosummary: failed to import selenium.webdriver.android.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:61: WARNING: autosummary: failed to import selenium.webdriver.chrome.options /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:61: WARNING: autosummary: failed to import selenium.webdriver.chrome.service /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:61: WARNING: autosummary: failed to import selenium.webdriver.chrome.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:72: WARNING: autosummary: failed to import selenium.webdriver.chromium.options /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:72: WARNING: autosummary: failed to import selenium.webdriver.chromium.service /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:72: WARNING: autosummary: failed to import selenium.webdriver.chromium.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:83: WARNING: autosummary: failed to import selenium.webdriver.edge.options /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:83: WARNING: autosummary: failed to import selenium.webdriver.edge.service /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:83: WARNING: autosummary: failed to import selenium.webdriver.edge.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:94: WARNING: autosummary: failed to import selenium.webdriver.firefox.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:107: WARNING: autosummary: failed to import selenium.webdriver.ie.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:116: WARNING: autosummary: failed to import selenium.webdriver.opera.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:125: WARNING: autosummary: failed to import selenium.webdriver.phantomjs.service /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:125: WARNING: autosummary: failed to import selenium.webdriver.phantomjs.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:135: WARNING: autosummary: failed to import selenium.webdriver.remote.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:135: WARNING: autosummary: failed to import selenium.webdriver.remote.webelement /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:150: WARNING: autosummary: failed to import selenium.webdriver.safari.service /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:150: WARNING: autosummary: failed to import selenium.webdriver.safari.webdriver /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:160: WARNING: autosummary: failed to import selenium.webdriver.webkitgtk.options /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:160: WARNING: autosummary: failed to import selenium.webdriver.webkitgtk.service /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/api.rst.rst:160: WARNING: autosummary: failed to import selenium.webdriver.webkitgtk.webdriver WARNING: autodoc: failed to import module 'action_chains' from module 'selenium.webdriver.common'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/common/action_chains.py"", line 27, in      from .actions.action_builder import ActionBuilder   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/common/actions/action_builder.py"", line 22, in      from .pointer_actions import PointerActions   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/common/actions/pointer_actions.py"", line 21, in      from .pointer_input import PointerInput   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/common/actions/pointer_input.py"", line 21, in      from selenium.webdriver.remote.webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.android.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.chrome.options' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.chrome.service' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.chrome.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.chromium.options' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.chromium.service' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.chromium.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.edge.options' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.edge.service' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.edge.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver' from module 'selenium.webdriver.firefox'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.ie.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.opera.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.phantomjs.service' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.phantomjs.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver' from module 'selenium.webdriver.remote'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webelement' from module 'selenium.webdriver.remote'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.safari.service' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.safari.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.support.abstract_event_listener' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.support.color' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.support.event_firing_webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.support.expected_conditions' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.support.select' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.support.wait' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.webkitgtk.options' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.webkitgtk.service' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  WARNING: autodoc: failed to import module 'webdriver.webkitgtk.webdriver' from module 'selenium'; the following exception was raised: Traceback (most recent call last):   File ""/usr/lib/python3.8/site-packages/sphinx/ext/autodoc/importer.py"", line 70, in import_module     return importlib.import_module(modname)   File ""/usr/lib64/python3.8/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1014, in _gcd_import   File """", line 991, in _find_and_load   File """", line 975, in _find_and_load_unlocked   File """", line 671, in _load_unlocked   File """", line 843, in exec_module   File """", line 219, in _call_with_frames_removed   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/__init__.py"", line 18, in      from .firefox.webdriver import WebDriver as Firefox  # noqa   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/firefox/webdriver.py"", line 28, in      from selenium.webdriver.remote.webdriver import WebDriver as RemoteWebDriver   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webdriver.py"", line 26, in      from .webelement import WebElement   File ""/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/webelement.py"", line 43, in      getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')   File ""/usr/lib64/python3.8/pkgutil.py"", line 638, in get_data     return loader.get_data(resource_name)   File """", line 1032, in get_data FileNotFoundError: [Errno 2] No such file or directory: '/home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/../../selenium/webdriver/remote/getAttribute.js'  looking for now-outdated files... none found pickling environment... done checking consistency... /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver/selenium.webdriver.common.action_chains.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_android/selenium.webdriver.android.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_chrome/selenium.webdriver.chrome.options.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_chrome/selenium.webdriver.chrome.service.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_chrome/selenium.webdriver.chrome.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_chromium/selenium.webdriver.chromium.options.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_chromium/selenium.webdriver.chromium.service.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_chromium/selenium.webdriver.chromium.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_edge/selenium.webdriver.edge.options.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_edge/selenium.webdriver.edge.service.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_edge/selenium.webdriver.edge.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_firefox/selenium.webdriver.firefox.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_ie/selenium.webdriver.ie.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_opera/selenium.webdriver.opera.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_phantomjs/selenium.webdriver.phantomjs.service.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_phantomjs/selenium.webdriver.phantomjs.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_remote/selenium.webdriver.remote.webelement.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_safari/selenium.webdriver.safari.service.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_safari/selenium.webdriver.safari.webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_support/selenium.webdriver.support.abstract_event_listener.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_support/selenium.webdriver.support.color.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_support/selenium.webdriver.support.event_firing_webdriver.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_support/selenium.webdriver.support.expected_conditions.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_support/selenium.webdriver.support.select.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_support/selenium.webdriver.support.wait.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_webkitgtk/selenium.webdriver.webkitgtk.options.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_webkitgtk/selenium.webdriver.webkitgtk.service.rst: WARNING: document isn't included in any toctree /home/tkloczko/rpmbuild/BUILD/selenium-selenium-3.150.0/py/docs/source/webdriver_webkitgtk/selenium.webdriver.webkitgtk.webdriver.rst: WARNING: document isn't included in any toctree done writing... python-selenium.3 { } done build succeeded, 116 warnings. ```","closed","","kloczek","2021-08-19T21:26:22Z","2021-09-20T00:05:53Z"
"","9803","RemoteWebDriver cannot be cast to HasDevTools","## üêõ Bug Report  It's not possible to use the DevTools with the RemoteDriver. I was told to use the HasDevTools Interface but it still not working when using a RemoteWebDriver (with a Grid)  ``` java.lang.ClassCastException: class org.openqa.selenium.remote.RemoteWebDriver cannot be cast to class org.openqa.selenium.devtools.HasDevTools (org.openqa.selenium.remote.RemoteWebDriver and org.openqa.selenium.devtools.HasDevTools are in unnamed module of loader 'app') ```  Detailed steps to reproduce the behavior:  webDriver is RemoteWebDriver which is used in a SeleniumGrid Environment.  Java:  `DevTools devTools = ((HasDevTools) webDriver).getDevTools();`  Kotlin:  `val devTools: DevTools = (webDriver as HasDevTools).devTools`  Used Selenium Version: 4.0.0-rc-1 (also tested with beta-3 and beta-4)  ## Environment  OS: Ubuntu 21 Browser: Chrome  Browser version: > 87 Browser Driver version: >87 Language Bindings version: Java","closed","C-java,","boris779","2021-09-08T08:38:36Z","2022-02-24T00:09:00Z"
"","9295","Selenium Grid gets stuck right after a screenshot of a failed test is taken","## üêõ Bug Report  It seems that, at times, as pointed in https://github.com/SeleniumHQ/selenium/issues/9171#issuecomment-797621950 the Selenium Grid gets stuck right after a screenshot of a failed test is taken  **The exception:** ``` 07:08:40    [testng] 2021-03-17 07:08:39 EET (Europe/Helsinki) running 'PRIVATE' on node 'http://PRIVATE:5555' 07:19:28    [testng] 2021-03-17 07:19:28 EET (Europe/Helsinki) GeneralVsFactsetImportBonds3.PRIVATE - QQ39QP-1I.png 07:19:28    [testng] org.openqa.selenium.WebDriverException: null value in entry: message=null 07:19:28    [testng] Build info: version: '4.0.0-beta-2', revision: '9c138bc189' 07:19:28    [testng] System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows Server 2008 R2', os.arch: 'amd64', os.version: '6.1', java.version: '11.0.9' 07:19:28    [testng] Driver info: org.openqa.selenium.remote.RemoteWebDriver 07:19:28    [testng] Command: [339713c9e3f8b4ef603828b0daa7e619, screenshot {}] 07:19:28    [testng] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.90, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\PRIVATE\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:51268}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: http://PRIVATE:5555/ses..., setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} 07:19:28    [testng] Session ID: 339713c9e3f8b4ef603828b0daa7e619 07:19:28    [testng] 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 07:19:28    [testng] 	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 07:19:28    [testng] 	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 07:19:28    [testng] 	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490) 07:19:28    [testng] 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:195) 07:19:28    [testng] 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:128) 07:19:28    [testng] 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52) 07:19:28    [testng] 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187) 07:19:28    [testng] 	at org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39) 07:19:28    [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:620) 07:19:28    [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:675) 07:19:28    [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:679) 07:19:28    [testng] 	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:355) 07:19:28    [testng] 	at PRIVATE.takeAPicture(PRIVATE.java:760) 07:19:28    [testng] 	at PRIVATE.ScreenshotListener.getScreenshot(ScreenshotListener.java:25) 07:19:28    [testng] 	at PRIVATE.ScreenshotListener.onTestFailure(ScreenshotListener.java:30) 07:19:28    [testng] 	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:96) 07:19:28    [testng] 	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:220) 07:19:28    [testng] 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:657) 07:19:28    [testng] 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174) 07:19:28    [testng] 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 07:19:28    [testng] 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822) 07:19:28    [testng] 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147) 07:19:28    [testng] 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 07:19:28    [testng] 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 07:19:28    [testng] 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 07:19:28    [testng] 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 07:19:28    [testng] 	at java.base/java.lang.Thread.run(Thread.java:834) ```  **WebDriver logs** ``` 212167b103f994db2b63ed88e3"",""spanId"": ""e855f37d833f54bb"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615956836138174614,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:53:56.338 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""80b113 3b3e0aa74083e733c63a5cbed8"",""spanId"": ""825782481dbb1401"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615956836337166794,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:54:41.638 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""144744 7e0bde100c7834ee3df4a68dd0"",""spanId"": ""700d62ec93d09fd4"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615956881637376968,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:54:41.742 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""588c6d 29bca8c243a355855ab0489a44"",""spanId"": ""3a9d1d105b370bc5"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615956881741158426,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:55:27.460 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""5aeecb 78ef52e8dd3d2c85761dee8854"",""spanId"": ""ac62bbbb14abadc7"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615956927460169185,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""79"",""http.scheme"": ""HTTP"",""http .status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0da a7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 (j ava windows)""}}  06:56:13.158 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""72d825 ad490bd8a9ef24af3c594d1a41"",""spanId"": ""c93385c5ce13640b"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615956973157558589,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""79"",""http.scheme"": ""HTTP"",""http .status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0da a7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 (j ava windows)""}}  06:57:00.900 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""a551a6 c08ad942519c43fb5477700c87"",""spanId"": ""8bdb96d652f6d268"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957020900450278,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:57:47.072 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""7326e0 0ce3b9a1d55ac453c74fa0e755"",""spanId"": ""15035a8a2bb8b190"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957067071130876,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:57:47.225 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""1bcd1c 7531f698d3b5ed92a7d5900bdc"",""spanId"": ""aebd677f5764b0af"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957067224598034,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:58:34.502 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""4f29df 821e81ae98573142202f93cfc6"",""spanId"": ""340bfc224ac91b0d"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957114501218142,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  06:59:22.752 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""4df2aa ebf50dfca5d5b65b9e630924f5"",""spanId"": ""4795105c13f5624c"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957162751104780,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:00:10.968 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""660587 eb5bdde089b12cc5687cfb9ccc"",""spanId"": ""613222a3ab0b42c4"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957210967613814,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""79"",""http.scheme"": ""HTTP"",""http .status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0da a7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 (j ava windows)""}}  07:01:00.068 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""61b564 e4fd7d927cd905d182a811c49d"",""spanId"": ""cf4763b18fac92a3"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957260066932362,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:03:13.209 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""e6ad12 0b029c8b6d65b7f9ae68c67aae"",""spanId"": ""2e4e1ace6d3d4ceb"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957393208253691,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:03:13.584 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""e49f13 bc33fe08ac0c97921c770cfd28"",""spanId"": ""9a2fe7a465c6b344"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957393584719335,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:04:00.359 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""829dd7 fbfd22c5ce56a2e2bb92f3e02b"",""spanId"": ""4c0bc965357ef401"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957440359228895,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:04:00.704 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""ba2284 6f55457bb3ad4822c985c7193a"",""spanId"": ""19fa5bd69c36d815"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957440703416395,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:04:47.927 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""3e5fb8 b5e116c24d2fde07e2988d7e98"",""spanId"": ""29bf03ebfc0460ba"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957487927079489,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:04:48.092 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""f7da04 e4681ec35560ac51997cbc8d28"",""spanId"": ""333b1ebc36b08113"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957488091740301,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:05:37.555 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""65cc88 c3324c719120ae00b45e65a139"",""spanId"": ""b9e9c339be12293c"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957537554840096,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:05:37.720 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""997b08 1b6f563efe3a3a93947e6366a8"",""spanId"": ""92c956c0bb060f4d"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957537718944908,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:06:23.903 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""2d636a 0239e536f07ada810ef059a4e0"",""spanId"": ""53e98e3b7c459f77"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957583902518420,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:06:24.016 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""9948bc 13b0bf996cbad9290ddd911f25"",""spanId"": ""716f6ef2d429cbd5"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957584014874171,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:07:11.771 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""9149f6 bbc4a9520205e739803a346255"",""spanId"": ""0d5fec3c09593268"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957631771365191,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:08:03.409 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""fe78db 20c1b179eefebff1213b947331"",""spanId"": ""19e673043fd2c2ba"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957683408786631,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:08:03.564 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""30b00e ca7d098d56e84a29f25af4c100"",""spanId"": ""3583ecb12c5f1df7"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957683563912497,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:10:51.554 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""dd337b bc2fe1fc9656f8865bc61493d0"",""spanId"": ""381c24e31ba3dbff"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957851553926369,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:10:51.706 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""740871 9338caabc3bbbb3974e66264fe"",""spanId"": ""b2623f2bfe512bd2"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957851705324765,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:12:13.750 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""138531 9bffb636373966c5e82adaa26c"",""spanId"": ""dc8f88a764bc9cd8"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957933749956903,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}}  07:12:13.961 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""8acd76 6420ef3b522a5ae7ce5ebed700"",""spanId"": ""fe59407affc85bb3"",""spanKind"": ""INTERNAL"", ""eventTime"": 1615957933961506386,""eventName"": ""HTTP request execution complete"", ""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.remot e.http.Route$PredicatedRoute"",""http.host"": ""PRIVATE:4449"",""http .method"": ""POST"",""http.request_content_length"": ""164"",""http.scheme"": ""HTTP"",""htt p.status_code"": 500,""http.target"": ""\u002fsession\u002f339713c9e3f8b4ef603828b0d aa7e619\u002fexecute\u002fsync"",""http.user_agent"": ""selenium\u002f4.0.0-beta-2 ( java windows)""}} ```   ## To Reproduce My setup is the following - I have several grids with hubs listening to different ports on a single Virtual Machine . For a single grid I would have:  Hub ``` start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-prerelease-beta-2-9c138bc189.jar hub --port 4452 --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 ```  Node_1 ``` start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-prerelease-beta-2-9c138bc189.jar node --detect-drivers true -I ""chrome"" -I ""edge"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1 ```  Detailed steps to reproduce the behavior:  ## Expected behavior No such exception is thrown  ## Environment  OS: Windows 7 Browser: Chrome Browser version: 89.0.4389.90 Browser Driver version: 89.0.4389.23 Language Bindings version: jdk-11.0.9+11 Selenium Grid version (if applicable): Grid 4 (selenium-server-4.0.0-prerelease-beta-2-9c138bc189.jar )","closed","C-grid,","hnestorova","2021-03-17T08:50:12Z","2021-09-05T08:08:45Z"
"","9312","Relax python dependencies in Selenium 4 beta","## üêõ Bug Report  It seems that the `trio`, `trio-websocket` and `urllib3` dependencies are pinned to an exact version, which can cause dependency resolution conflicts with other packages (and it also means that these packages couldn't be updated independently even in case of security vulnerabilities). It would be great if the versions could be relaxed.  ## To Reproduce  Detailed steps to reproduce the behavior:  ``` pip3 install selenium==4.0.0.b2.post1 pip3 install -U urllib3==1.26.3 ```  ## Expected behavior  I would expect that the dependency minor and patch versions can be updated without a dependency conflict.","closed","needs-triaging,","GergelyKalmar","2021-03-20T13:35:58Z","2021-09-05T08:10:44Z"
"","9861","Merging Capabilities to options does not work","## üêõ Bug Report  It seems that merging with` options.merge(caps)` is faulty in selenium 4  ## To Reproduce  create some capabilities (like browsername and version) create e.g. ChromeOptions try to merge the caps into options, most of them gets lost.  example code snippet:  ``` caps.setBrowserName(""chrome""); caps.setVersion(getBrowserVersion());  HashMap chromePrefs = new HashMap(); chromePrefs.put(""plugins.always_open_pdf_externally"", true); ChromeOptions options = new ChromeOptions(); options.setExperimentalOption(""prefs"", chromePrefs);  options.merge(caps); ```   Options are not merged:   ## Expected behavior  mergings capabilities to options should work as in selenium 3 When switching to selenium 3 with exact the same code (switch branch to selenium_3) merging works    ## Test script or set of commands reproducing this issue  Small Selenium project (run Configs are included!) https://github.com/boris779/selenium4_caps_bug/tree/main  ## Environment  OS: Ubuntu Browser: Chromium  Browser version: tested with 93, 92, 91 Browser Driver version: best fitting to the browsers (with webdrivermanager) Language Bindings version: Java 4.0.0-rc-1 Selenium Grid version (if applicable): 4.0.0-rc-1","closed","C-java,","boris779","2021-09-21T17:32:17Z","2021-10-29T00:06:11Z"
"","9262","Broken Edge webdriver","## üêõ Bug Report  It seems Microsoft has changed the name of its Webdriver binary file, but Selenium is still expecting the previous one, which results in an FileNotFoundException when `OpenQA.Selenium.Edge.EdgeDriver` instantiated.  ## To Reproduce - Download the webdriver from [here](https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/) - Instantiate the class with   	`webDriver = new OpenQA.Selenium.Edge.EdgeDriver();`  A `FileNotFound `exception is thrown.  It seems changing the value of `EdgeDriverService.MicrosoftWebDriverServiceFileName` constant would fix the problem, as suggested in this [Pull Request](https://github.com/SeleniumHQ/selenium/pull/9252)..  Artur.","closed","C-dotnet,","anebot","2021-03-11T11:23:48Z","2021-09-05T08:10:49Z"
"","9574","Passing 0x0 coordinates to set_window_rect results in an argument exception","## üêõ Bug Report  It seems like the change from ""x is None"" to ""not x"" causes an issue when passing 0x0 as coordinates to set_window_rect. It brings up the InvalidArgumentException even though the arguments are provided. https://github.com/SeleniumHQ/selenium/pull/8963  This issue was found when running ""Set Window Position"" from SeleniumLibrary 5.1.3 https://robotframework.org/SeleniumLibrary/SeleniumLibrary.html#Set%20Window%20Position  I noticed that running ""not 0"" where 0 is an int returns True and ""not '0'"" where ""0"" is a string returns False, so I'm not sure if it expects a string value. Even so, passing a string value from RobotFramework still seems to return the same issue.  ## To Reproduce  Run ""Set Window Position"" via SeleniumLibrary with x=0 and y=0  ## Expected behavior  Coordinates 0x0 should be accepted with integer 0s.  ## Test script or set of commands reproducing this issue  ``` *** Settings *** Library           SeleniumLibrary  *** Test Cases *** test_set_window_position     [Setup]    Open Browser    about:blank    chrome     [Teardown]    Close All Browsers     Set Window Position    ${0}    ${0} ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.106 Browser Driver version: 91.0.4472.101 Language Bindings version: Python 3.9.5, SeleniumLibrary 5.1.3","closed","C-py,","gnawleahcim","2021-06-15T03:00:26Z","2021-09-05T07:59:04Z"
"","9733","[Docker] [MacOS m1] Chrome failed to start: crashed","## üêõ Bug Report  It is impossible to launch WebDriver via docker in MacOS. Tried everything that I could find and also tried different combinations it terms of docker configs and code execution... Something similar (in terms of crashes also occurs with Firefox).  **Same code works fine on Windows 10.**  ``` WebDriverError: unknown error: Chrome failed to start: crashed.   (unknown error: DevToolsActivePort file doesn't exist)   (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.) Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53' System info: host: 'selenium', ip: '172.22.0.4', os.name: 'Linux', os.arch: 'amd64', os.version: '5.10.25-linuxkit', java.version: '1.8.0_292' Driver info: driver.version: unknown remote stacktrace: #0 0x00400062aa63  #1 0x00400039f458  #2 0x0040003c22e3  #3 0x0040003bde9f  #4 0x0040003f7b72  #5 0x0040003f1fd3  #6 0x0040003c8514  #7 0x0040003c9505  #8 0x004000656e2e  #9 0x00400066c886  #10 0x004000657d75  #11 0x00400066dd94  #12 0x00400064e8eb  #13 0x004000688cd8  #14 0x004000688e58  #15 0x0040006a2dfd  #16 0x0040023b6609 start_thread        at Object.checkLegacyResponse (node_modules/selenium-webdriver/lib/error.js:553:15)       at parseHttpResponse (node_modules/selenium-webdriver/lib/http.js:634:13)       at Executor.execute (node_modules/selenium-webdriver/lib/http.js:568:28)       at processTicksAndRejections (internal/process/task_queues.js:95:5) ```  ## To Reproduce  docker-compose.yml: ```yml selenium:     shm_size: '3gb'     container_name: selenium     hostname: selenium     image: selenium/standalone-chrome-debug     ports:       - 4444:4444       - 5900:5900  e2e:     container_name: e2e     hostname: e2e     build: infrastructure/images/e2e     working_dir: /srv     environment:       - SELENIUM_REMOTE_URL=http://selenium:4444/wd/hub     volumes:       - ./www/e2e:/srv ```   options.json ```json [     ""--headless"",     ""--no-sandbox"",     ""--disable-gpu"",     ""start-maximized"",     ""--disable-extensions"",     ""--incognito"" ] ```  ## Expected behavior  Test specs must execute.  ## Test script or set of commands reproducing this issue  ```javascript (async() => {     const driver = new Builder()         .forBrowser(""chrome"")         .setChromeOptions(chromeOptions)         .build();          driver.get(""https://google.com""); })(); ```  ## Environment  OS: MacOS 11.5 Browser: Chrome Browser version: 91 Browser Driver version: 92.0.4515.107 Language Bindings version: Javascript (4.0.0-beta.4) Selenium Grid version (if applicable): latest","closed","","Jeckerson","2021-08-10T18:07:15Z","2021-09-10T00:05:25Z"
"","9467","Bug when I use ruby to run selenium and firefox for my automation testing","## üêõ Bug Report  It consumes a lot of, actually much of CPU and memory during the start and failed at the end which is quite bizarre !  ## To Reproduce Detailed steps to reproduce the behavior: ## Test script or set of commands reproducing this issue  1. irb 2. require 'selenium-webdriver' 3. Selenium::WebDriver::Firefox::Service.driver_path = ""/geckodriver"" 4. options = Selenium::WebDriver::Firefox::Options.new(args: ['-headless'],log_level: :info) 5. driver = Selenium::WebDriver.for(:firefox,options:options) _#it will take a long time to start the browser, normally just a few seconds, but now it consumes almost 100 % CPU and up to 5 or 6 GB RAM given my machine is 8GB during the startup, at the end this step will proceed successfully_ 6. driver.navigate.to(""https://www.baidu.com"") _It failed at this step! Net::ReadTimeout: Net::ReadTimeout         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:176:in `rbuf_fill'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:154:in `readuntil'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/protocol.rb:164:in `readline'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:40:in `read_status_line'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http/response.rb:29:in `read_new'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1446:in `block in transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `catch'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1443:in `transport_request'         from /home/centos/.rvm/rubies/ruby-2.4.1/lib/ruby/2.4.0/net/http.rb:1416:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver         3.142.7/lib/selenium/webdriver/remote/http/default.rb:129:in `response_for'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/default.rb:82:in `request'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/http/common.rb:64:in `call'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/bridge.rb:167:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:567:in `execute'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/remote/w3c/bridge.rb:59:in `get'         from /home/centos/.rvm/gems/ruby-2.4.1/gems/selenium-webdriver-3.142.7/lib/selenium/webdriver/common/navigation.rb:32:in `to'         from (irb):9         from /home/centos/.rvm/rubies/ruby-2.4.1/bin/irb:11:in `' _ 8. my network to this website is : PING baidu.com (220.181.38.148) 56(84) bytes of data. 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=1 ttl=44 time=3.87 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=2 ttl=44 time=3.91 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=3 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=4 ttl=44 time=3.93 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=5 ttl=44 time=3.85 ms 64 bytes from 220.181.38.148 (220.181.38.148): icmp_seq=6 ttl=44 time=3.83 ms 9. I only use headless mode, when I switch to non-headless, it then will say: _Selenium::WebDriver::Error::UnknownError: invalid argument: can't kill an exited process_  ## Expected behavior It will start and run firefox browser quietly and swiftly  ## Environment  OS: Linux  3.10.0-1127.19.1.el7.x86_64 #1 SMP Tue Aug 25 17:23:54 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux, Centos7 Browser: Firefox Browser version: Mozilla Firefox 68.12.0esr Browser Driver version: geckodriver 0.26.0 (e9783a644016 2019-10-10 13:38 +0000) Language Bindings version: ruby 2.4.1","closed","R-awaiting answer,","ThomasSun001","2021-05-11T13:40:21Z","2021-09-05T08:03:32Z"
"","9704","Invalid port","## üêõ Bug Report  Invalid port error message and can not open chromeDriver  ## To Reproduce   Detailed steps to reproduce the behavior:  ## Expected behavior open the chrome driver then search on google    go to google page type ""codingdojo"" in the search bar , then click on search button   ## Test script or set of commands reproducing this issue  	public static void main(String[] args)  {  		System.setProperty(""webdriver.chrome.driver"",""C:\\Program Files\\chromedriver.exe""); 		//WebDriver driver=new ChromeDriver(); 		ChromeOptions options = new ChromeOptions(); 	    options.addArguments(""--lang=en-au"" ); 	    WebDriver driver=new ChromeDriver(options); 		driver.navigate().to(""http://google.com""); 		driver.manage().window().maximize(); 		driver.findElement(By.name(""q"")).sendKeys(""www.codingdojo.com""); 		driver.findElement(By.name(""btnK"")).submit(); 		 		driver.quit(); 	  	} ![Screenshot (31)](https://user-images.githubusercontent.com/82762715/127771022-a19599c4-8774-419c-853f-38adf9b7fa71.png)    Error message:  Invalid port. Exiting... ÿ£ÿ∫ÿ≥ÿ∑ÿ≥ ??, ???? ?:??:?? ŸÖ org.openqa.selenium.os.OsProcess checkForError SEVERE: org.apache.commons.exec.ExecuteException: Process exited with an error: 1 (Exit value: 1) Exception in thread ""main"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48' System info: host: 'LAPTOP-U79UBFFT', ip: '172.20.10.6', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.11' Driver info: driver.version: ChromeDriver 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:202) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:188) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:79) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)    ## Environment  OS:  Windows 10 Browser: Chrome  Browser version: Version 92.0.4515.107 Browser Driver version: ChromeDriver 92.0.4515.43 Language Bindings version:   Java 11 Selenium version (): selenium-server-standalone-3.9.1  ##Possible fix:  Change the language of  date and time from arabic to english in the system  ##After change the language it works ![Screenshot (32)](https://user-images.githubusercontent.com/82762715/127770940-d9e1f9ec-42a3-423d-ba64-7bd030dd36f7.png)","closed","R-awaiting answer,","asma94-8","2021-08-01T12:25:52Z","2021-10-11T00:06:03Z"
"","9420","Document requirement on Windows 10 to set Protected Mode for IE11","## üêõ Bug Report  In your wiki, under the instructions for configuring Internet Explorer, https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration, you state that _""On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value""_  I recently configured Internet Explorer 11 in Windows 10, and ended up finding that it also requires Protected Mode settings for each zone to be the same value.  As such, to avoid others spending time debugging this, please adapt that paragraph to something like: _""On IE 7 or higher on Windows Vista, Windows 7, or Windows 10, you must set the Protected Mode settings for each zone to be the same value""_  Thank you.","closed","D-IE,","Pitxyoki","2021-04-26T16:17:53Z","2021-09-05T08:03:36Z"
"","9102","[py] Remove legacy `ELEMENT` key from WebElement usage","## üêõ Bug Report  in the python code there is the `ELEMENT` key that was used for holding the uuid of the element returned from the driver. THis was changed in the w3c spec. It can now be removed  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Not sending too much info over the wire  ## Test script or set of commands reproducing this issue run `bazel test //py:unit` and `bazel test //py:test-firefox`  ## Environment  OS: All Browser: All Browser version: Browser Driver version: Language Bindings version: Python Selenium Grid version (if applicable):","closed","needs-triaging,","AutomatedTester","2021-01-26T12:01:52Z","2021-09-05T08:21:35Z"
"","9010","WebDriver.add_listener docstring example does not work in Python","## üêõ Bug Report  In the docstring of [`WebDriver.add_listener`](https://github.com/SeleniumHQ/selenium/blob/selenium-4.0.0-alpha-7/py/selenium/webdriver/remote/webdriver.py#L1503), the example usage does not work. The module `selenium.webdriver.common.devtools` is imported but does not exist. **This breaks all code related to cdp events in Python.**   ## To Reproduce  The full example:  ```python import asyncio  from selenium import webdriver from selenium.webdriver.common.bidi.console import Console   async def main(*args, **kwargs):     options = webdriver.ChromeOptions()     for flag in args + tuple(f'{k}={v}' for k, v in kwargs.items()):         options.add_argument(f'--{flag}')      driver = webdriver.Chrome(options=options)     driver.get('https://www.selenium.dev/')      try:         # The `Console.log` in the docstring example is incorrect as well         async with driver.add_listener(Console.ALL) as messages:             driver.execute_script(""console.log('I like cheese')"")          assert messages[""message""] == ""I love cheese""      finally:         try:             driver.quit()         except Exception:             pass   asyncio.run(main('headless')) ```  This results in:  ```python-traceback Traceback (most recent call last):   File ""/code/cdp_event_fail.py"", line 29, in      asyncio.run(main('headless'))   File ""/usr/lib/python3.9/asyncio/runners.py"", line 44, in run     return loop.run_until_complete(main)   File ""/usr/lib/python3.9/asyncio/base_events.py"", line 642, in run_until_complete     return future.result()   File ""/code/cdp_event_fail.py"", line 17, in main     async with driver.add_listener(Console.ALL) as messages:   File ""/usr/lib/python3.9/contextlib.py"", line 175, in __aenter__     return await self.gen.__anext__()   File ""/code/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 1522, in add_listener     async with self._get_bidi_connection():   File ""/usr/lib/python3.9/contextlib.py"", line 175, in __aenter__     return await self.gen.__anext__()   File ""/code/venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 1555, in _get_bidi_connection     cdp.import_devtools(version)   File ""/code/venv/lib/python3.9/site-packages/selenium/webdriver/common/bidi/cdp.py"", line 55, in import_devtools     devtools = importlib.import_module(""selenium.webdriver.common.devtools.v{}"".format(version))   File ""/usr/lib/python3.9/importlib/__init__.py"", line 127, in import_module     return _bootstrap._gcd_import(name[level:], package, level)   File """", line 1030, in _gcd_import   File """", line 1007, in _find_and_load   File """", line 972, in _find_and_load_unlocked   File """", line 228, in _call_with_frames_removed   File """", line 1030, in _gcd_import   File """", line 1007, in _find_and_load   File """", line 984, in _find_and_load_unlocked ModuleNotFoundError: No module named 'selenium.webdriver.common.devtools' ```  ## Expected behavior  No exceptions and assertion success.  ## Environment  Irrelevant, but for the sake of completeness:  OS: Ubuntu 20.04 Browser: Chrome  Browser version: 87 Browser Driver version: 87 Language Bindings version: Python 3.9","closed","C-py,","jorenham","2020-12-29T15:34:41Z","2021-09-05T08:27:41Z"
"","9436","FindElements after FindElement with simple mistake on parameters By","## üêõ Bug Report  In the Code below has miss-click error into class By, XPath(""serp-item""). `IList listenExeption = driver.FindElement(By.XPath(""/html/body/div[3]/div[1]/div[2]/div[1]/div[1]"")).FindElements(By.XPath(""serp-item"")); //ClassName`  ![image](https://user-images.githubusercontent.com/83610378/116925643-17bd8180-ac62-11eb-9df8-c132e6d37c79.png)    ## To Reproduce Detailed steps to reproduce the behavior:  Get all sub IWebElements of parent element and if do you put wrong xpath ex: ""serp-item"" you don't get exception. Ofc, if i used FindElements(By.ClassName(""serp-item"")); this worked correctly.  A clear and concise description of what you expected to happen.  I expected to happen exception or fail\crush test   ## Test script or set of commands reproducing this issue  `                IList listenExeption = driver.FindElement(By.XPath(""/html/body/div[3]/div[1]/div[2]/div[1]/div[1]"")).FindElements(By.ClassName(""serp-item"")); //ClassName                 Assert.IsTrue(listenExeption.Count > 1, ""Am i need always check that if not null :)?"");`  Full Test Example: https://gist.github.com/akumaSlavic/f2f802ec427de7eebfa6e6e8920ec3e5  ## Environment  OS: Windows 10 Browser: Chrome (chromedriver) Browser version: Version 90.0.4430.93 (Official Build) (64-bit) Browser Driver version: Version 90.0.4430.93 (Official Build) (64-bit) Language Bindings version: c#  Selenium Grid version (if applicable):  3.141.0","closed","","akumaSlavic","2021-05-03T20:22:27Z","2021-09-05T08:03:35Z"
"","9416","Issue when casting decorated WebDrivers to RemoteWebDriver or JavascriptExecutor","## üêõ Bug Report  In Selenium Java Since EventFiringWebDriver got deprecated in Beta 2 I changed my implementation to envelop my remoteWebDriver into to a decorated Webdriver using EventFiringDecorator. But i am having trouble whenever i have to cast it as a JavascriptExecutor or back to a remotewebdriver to access some values.   I get the following error:   ``` java.lang.ClassCastException: class jdk.proxy2.$Proxy18 cannot be cast to class org.openqa.selenium.remote.RemoteWebDriver (jdk.proxy2.$Proxy18 is in module jdk.proxy2 of loader 'app'; org.openqa.selenium.remote.RemoteWebDriver is in unnamed module of loader 'app') 	at com.peektraffic.spinnaker.TestNgTestBase.initDriver(TestNgTestBase.java:570) 	at com.peektraffic.spinnaker.TestNgTestBase.init(TestNgTestBase.java:169) 	at com.peektraffic.spinnaker.Roles.Test_SystemPermissions.systemPermissions_AES_VERBA_INFO_Display(Test_SystemPermissions.java:1180) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:567) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77) 	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) 	at java.base/java.lang.Thread.run(Thread.java:831) ```    ## To Reproduce    1. Create a new remote webdriver 2. implement a listener 3. decorate the remotewebdriver with EventFiringDecorator 4. cast the decorated driver into a JavascriptExecutor  or RemoteWebDriver     ## Expected behavior  object type is changed  ## Test script or set of commands reproducing this issue  ``` private void initDriver(DesiredCapabilities capabilities) throws Exception 	{ 		HashMap data = Testdata.get(); 		// BasicConfigurator.configure(); 		EventListener eventListener = new EventListener();  		RemoteWebDriver rem; 		Long start = System.currentTimeMillis(); 		while (true) 		{ 			if (System.currentTimeMillis() - start >= MAX_TRY_MS.get()) 			{ 				fail(threadId.get() + ""Couldn't Start driver within "" + MAX_TRY_MS.get() + "" ms.""); 			} 			try 			{ 				log(Status.INFO, ""Initializing EventFiringWebDriver.."");  				rem = new RemoteWebDriver(new URL(data.get(""REMOTE_HUB_LOCATION"")), capabilities);  				break; 			} 			catch (Exception e) 			{ 				Thread.sleep(5000); 				// log(Status.INFO, ""Exception ""+ e); 			}  		} 		System.out.println(((RemoteWebDriver)new EventFiringDecorator(eventListener).decorate(rem)).getSessionId()); 	} ```   ## Environment  OS: windows 10 Browser:  firefox Browser version: 86.0 Browser Driver version: GeckoDriver 0.29  Language Bindings version: java 4 beta 3  Selenium Grid version (if applicable): java 4 beta 3","closed","C-java,","adngzz","2021-04-23T15:50:11Z","2021-09-05T08:03:33Z"
"","9694","Deprecate `withCapabilities(capabilities)` method in Node JS Bindings","## üêõ Bug Report  In Selenium 4 we are deprecating the capabilities code in favour of the `Options` classes. The `withCapabilities(capabilities)` method in `javascript/node/selenium-webdriver/index.js` needs to be deprecated so that we can remove it in the future.  ## To Reproduce  The code in `javascript/node/selenium-webdriver/index.js#withCapabilities` needs deprecated and the tests related to that removed.  Detailed steps to reproduce the behavior:  ## Expected behavior  A message saying that we are deprecating the method and to use `set*Options` methods instead where * means the browser.  ## Test script or set of commands reproducing this issue  When the code is changed, the `SELENIUM_BROWSER=firefox bazel test //javascript/node/selenium-webdriver:tests` command should not have any failing tests  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","help wanted,","AutomatedTester","2021-07-29T14:00:20Z","2021-10-01T00:07:29Z"
"","9045","No way to set --timeout and --cleanUpCycle and session gets removed from map (browser gets closed) after 5 minutes of inactivity","## üêõ Bug Report  In Selenium 3 we could specify --timeout and --cleanUpCycle on hub level (https://stackoverflow.com/questions/43395659/properties-for-selenium-grid-hub-node-config). Currently, we cannot and, as a result, the browser gets closed after 5 minutes of inactivity  ## To Reproduce  Start a test case and add a sleep of 5 minutes -> the browser closes after the 5th minute  Detailed steps to reproduce the behavior:  ## Expected behavior  User is able to specify --timeout and --cleanUpCycle on hub level  ## Test script or set of commands reproducing this issue  Here is our setup:  **- Hub**  start C:/""Program Files""/Java/jdk-11.0.2/bin/java -jar selenium-server-4.0.0-alpha-7.jar hub --port 4452 --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456  **- Node**  start C:/""Program Files""/Java/jdk-11.0.2/bin/java -jar selenium-server-4.0.0-alpha-7.jar node --detect-drivers true --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1  **- Exception** ``` org.openqa.selenium.WebDriverException: org.openqa.selenium.NoSuchSessionException: Unable to find session with ID: 7b659b67eab2d68ecff99ee1c5afccd8 Build info: version: '4.0.0-alpha-7', revision: 'Unknown' System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows Server 2012 R2', os.arch: 'amd64', os.version: '6.3', java.version: '11.0.9' Driver info: driver.version: unknown Build info: version: '4.0.0-alpha-7', revision: 'Unknown' System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows Server 2016', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.9' Driver info: org.openqa.selenium.remote.RemoteWebDriver Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\qa\AppData\Local\T...}, goog:chromeOptions: {debuggerAddress: localhost:49306}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:options: {cdp: http://PRIVATE:5555/ses...}, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true} Session ID: 7b659b67eab2d68ecff99ee1c5afccd8 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:196) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:129) 	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:167) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:501) 	at org.openqa.selenium.remote.RemoteWebDriver$RemoteTargetLocator.defaultContent(RemoteWebDriver.java:957) ... Removed 20 stack frames ```  **- grid console output** ``` **15:34:59.551** INFO [LoggingOptions$1.lambda$export$0] - {""traceId"": ""1c942b588b7d f97dda07a8f1223a539f"",""spanId"": ""27a9f67d89744039"",""spanKind"": ""INTERNAL"",""event Time"": 1610544899550062455,""eventName"": ""Computed grid status"",""attributes"": {""g rid.status"": true,""http.status_code"": 200,""logger"": ""org.openqa.selenium.grid.ro uter.GridStatusHandler""}}  **15:40:02.501** INFO [LoggingOptions$1.lambda$export$0] - {""traceId"": ""c9eb0792d3e2 56804f08c2ffa509e011"",""spanId"": ""95a356e0c86dad46"",""spanKind"": ""INTERNAL"",""event Time"": 1610545202501132978,**""eventName"": ""Deleted session from local session map""** ,""attributes"": {""logger"": ""org.openqa.selenium.grid.sessionmap.local.LocalSessio nMap"",""session.id"": ""69740df4601817bf9b1be45961c99c10""}}  15:41:00.172 INFO [LoggingOptions$1.lambda$export$0] - {""traceId"": ""e847abeab1c3 3e9861bebe69faf583e7"",""spanId"": ""3ae3bc4e685df070"",""spanKind"": ""INTERNAL"",""event Time"": 1610545260170166760,""eventName"": ""Computed grid status"",""attributes"": {""g rid.status"": true,""http.status_code"": 200,""logger"": ""org.openqa.selenium.grid.ro uter.GridStatusHandler""}} ```  ## Environment  OS: Windows 7 Browser: IE, Chrome  Browser version: IE 11.0.9600.19356 IE Browser Driver version: 3.150.1 Browser version: Chrome 87.0.4280.141 Chrome Browser Driver version: 87.0.4280.88 Selenium Grid version : Grid 4 (4.0.0-alpha-7)","closed","C-grid,","hnestorova","2021-01-13T14:10:41Z","2021-09-05T08:12:19Z"
"","9025","By.classname works differently in Java and Python","## üêõ Bug Report  in Python multiple classes can be found by replacing space with '.'  **To Reproduce** **Python:**  ``` from selenium import webdriver  import time  from selenium.webdriver.support import expected_conditions as EC  driver = webdriver.Chrome() driver.get(""https://stackoverflow.com/questions/65579491/find-element-by-class-name-in-selenium-giving-error/65579606?noredirect=1#comment115946541_65579606"") time.sleep(5) elem = driver.find_element_by_class_name('overflow-x-auto.ml-auto.-secondary.grid.ai-center.list-reset.h100')  print(elem.get_attribute(""outerHTML""))   ```  **Java:**  		         ChromeDriver driver=new ChromeDriver(); 	driver.get(""https://stackoverflow.com/questions/65579491/find-element-by-class-name-in-selenium-giving-error/65579606?noredirect=1#comment115946541_65579606"");          WebElement a = driver.findElementByClassName(""overflow-x-auto.ml-auto.-secondary.grid.ai-center.list-reset.h100"");         System.out.print(a.getAttribute(""outerHTML""));   Detailed steps to reproduce the behavior:  ## behavior  In python script works fine   In Java noELement exception is thrown: ( it seems the functions add frontslash to the locator  ![image](https://user-images.githubusercontent.com/45095911/103657122-811cd480-4f8f-11eb-8b39-fdec197e91dc.png)  ![image](https://user-images.githubusercontent.com/45095911/103658119-cee60c80-4f90-11eb-8a1f-2b5cbd2c9f96.png)   ##Expected behavior:  Both should work as same  ## Environment  OS:  Browser:   Language Bindings version: Java and Python Selenium Grid version (if applicable):3.141.59","closed","I-cleanup,","praveendvd","2021-01-05T14:31:57Z","2021-09-05T08:25:06Z"
"","9347","No way to configure debug level and debug log file path on node level in Selenium Grid 4","## üêõ Bug Report  In previous Selenium grid versions, when needed, we were able to specify on node level the debug level to be applied as well as a path to the file with the debug logs. For example, we would set:  ``` java -Dwebdriver.ie.driver.loglevel=DEBUG -Dwebdriver.ie.driver.logfile=""\\PARENT_FOLDER\FOLDER\GRID-IE-DEBUG.log"" -Dwebdriver.ie.driver=""IEDriverServer.exe"" -jar selenium-server-standalone.jar -role node -hub http://HUB_NAME:4444/grid/register -browser browserName=""internet explorer"",platform=WINDOWS,maxInstances=1 -maxSession 1 ```  With Selenium Grid 4 , there seem to be no way to make such a configuration or at least I am not aware of such an approach.  ## To Reproduce  My setup is the following - I have several grids with hubs listening to different ports on a single Virtual Machine . For a single grid I would have:  Hub ``` start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-prerelease-beta-3-d798b52c4c.jar hub --port 4452 --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --healthcheck-interval 5000 ```  Node_1 ``` start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-prerelease-beta-3-d798b52c4c.jar node --detect-drivers true -I ""chrome"" -I ""edge"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1 --session-timeout 190  ```  ## Environment  OS: Windows 7 Browser: Chrome Browser version: 89.0.4389.90 Browser Driver version: 89.0.4389.23 Language Bindings version: jdk-11.0.9+11 Selenium Grid version (if applicable): Grid 4 (selenium-server-4.0.0-prerelease-beta-2-9c138bc189.jar )","closed","R-awaiting answer,","hnestorova","2021-03-30T13:50:01Z","2021-09-05T08:08:45Z"
"","9236","Make find_element_by_css_selector return None instead Exception","## üêõ Bug Report  In Javascript `document.querySelector('#selector')` return `null` if element not found so we can code like  ``` var element = document.querySelector('#selector'); if(element)     console.log(element.textContent); ```  But  `find_element_by_css_selector` will raise `NoSuchElementException` so we **can't use**  ``` element = driver.find_element_by_css_selector('#selector') if element:     print(element.text) ```  Do you think it is better to follow javascript style to return `None` instead `NoSuchElementException` so we don't need to put the code inside `try except` block ?  ## Environment  OS: Windows 10 Browser:  Chrome Browser version: 88.0.4324.190 Browser Driver version: ChromeDriver 88.0.4324.96 Language Bindings version: Python","closed","C-py,","ewwink","2021-03-04T16:41:59Z","2021-09-05T08:15:44Z"
"","8915","Java- ProfilesIni method error","## üêõ Bug Report  In java, when I call new ProfilesIni(), there is error. The problem is, that in class ProfilesIni , line 60: reader = new BufferedReader(new FileReader(profilesIni, Charset.defaultCharset())); FileReader method has only one argument. Argument Charset.defaultCharset() should be removed.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  In java, when I call new ProfilesIni(), there is error. The problem is, that in class ProfilesIni , line 60: reader = new BufferedReader(new FileReader(profilesIni, Charset.defaultCharset())); FileReader method has only one argument. Argument Charset.defaultCharset() should be removed.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 83.0 Browser Driver version: GeckoDriver 0.28.0 Language Bindings version: Java 1.8.0_241  Selenium Grid version (if applicable):","closed","","Edenpac","2020-11-27T09:57:42Z","2021-09-05T08:30:19Z"
"","9663","Add more tests for Select in JS bindings","## üêõ Bug Report  In https://github.com/SeleniumHQ/selenium/pull/9244 we had initial tests added for the new Select API. This is not complete and we could do with some help adding more tests.    ## To Reproduce  We need more tests so just running `SELENIUM_BROWSER=firefox bazel test //javascript/node/selenium-webdriver:tests` will not show failures   ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please run `SELENIUM_BROWSER=firefox bazel test //javascript/node/selenium-webdriver:tests` to get the tests running.  ## Environment  OS: ALL Browser: All, switch browser by changing firefox to the other browsers or remove the environment variable Browser version: ALL Browser Driver version: ALL Language Bindings version: JS Selenium Grid version (if applicable):","closed","I-stale,","AutomatedTester","2021-07-19T13:47:09Z","2022-06-09T00:11:17Z"
"","9162","setGeoLocation function not working","## üêõ Bug Report  Im using C# ```var driver = new ChromeDriver(_service, _options); driver.ExecuteChromeCommand(""Emulation.setGeolocationOverride"", _accountInfo.GeoParams); ``` Before chrome 87 this function runs correctly and set geolocation for me, however when upgrade to chrome 88 this command can not set geolocation for me. I tested in windows7 windows10    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior Set geolocation in chrome.  ## Test script or set of commands reproducing this issue  ```var driver = new ChromeDriver(_service, _options); driver.ExecuteChromeCommand(""Emulation.setGeolocationOverride"", _accountInfo.GeoParams); ```  ## Environment  OS:  windows10 windows7 Browser:  Chrome Browser version:  88.0.4324.150 Browser Driver version:  88.0.4324.96 Language Bindings version:   c# dotnet 5.0 Selenium Grid version (if applicable):   3.141.0 (the latest version found in nuget website)","closed","C-dotnet,","koujiangheng","2021-02-10T10:01:28Z","2021-09-05T08:19:04Z"
"","9511","RemoteWebDriver with RemoteAdress if try get LogType=performance produces exception","## üêõ Bug Report  If you try to get the LogType.PERFORMANCE then you get an exception: `InvalidArgumentException: invalid argument: log type 'performance' not found`  There was a fix for it: https://github.com/SeleniumHQ/selenium/commit/01bf9a0372b98a50026b6a4411504ce8341f3c51 but it is not available on the version I use.  ## To Reproduce  Detailed steps to reproduce the behavior:  ## Expected behavior  To get a list (possibly empty) of performance logs  ## Test script or set of commands reproducing this issue  ``` DesiredCapabilities desiredCapabilites = DesiredCapabilities.chrome() LoggingPreferences logPrefs = new LoggingPreferences() logPrefs.enable(LogType.PERFORMANCE, Level.ALL) desiredCapabilites.setCapability(CapabilityType.LOGGING_PREFS, logPrefs) RemoteWebDriver remoteWebDriver = new RemoteWebDriver(new URL( seleniumHost.toString() + ""/wd/hub""), capabilities); remoteWebDriver.get(""https://www.google.com/); System.out.println(remoteWebDriver.manage().logs().getAvailableLogTypes());         for (LogEntry entry : remoteWebDriver.manage().logs().get(LogType.PERFORMANCE)) {             System.out.println(entry.toString());         } ```  ## Environment  OS:  OSX 10.15.5 Browser:  Chrome Browser version: Version 90.0.4430.212 Browser Driver version: ChromeDriver 90.0.4430.24 Selenium Grid version (if applicable): 3.141.59","closed","","sabf81","2021-05-25T10:35:52Z","2021-09-05T08:01:16Z"
"","9666","Selenium leaks Threads","## üêõ Bug Report  If you create new webdriver instances and destroy it in a loop, selenium leaks more and more ""Driver Service Executor"" and ""Driver Command Executor"" threads.  After stepping into the code and debuging it, i found that DriverService#close() and DriverCommandExecutor#close() are never called to free the local instances of java.util.concurrent.ExecutorService.  ## To Reproduce  Its simple. Create new webdriver instances and shutdown it with WebDriver#quit() in a loop.   And then just use a tool like VisualVM to see more and more ""Driver Service Executor"" and ""Driver Command Executor"" threads are created and not freed. See my sample below:  ![image](https://user-images.githubusercontent.com/434996/126345490-6ade3518-2416-4d6b-a4ea-98f640d980b7.png)   ## Expected behavior  Release the ExecutorService instances within DriverService and DriverCommandExecutor after a WebDriver#quit() call.  ## Test script or set of commands reproducing this issue  ``` import java.io.File; import java.util.UUID;  import org.openqa.selenium.By; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebDriverException; import org.openqa.selenium.chrome.ChromeDriver; import org.openqa.selenium.chrome.ChromeOptions;   public class LeakTester {      public static void main( String[] args ) {          final File browserPath = new File( ""src/main/runtime/browsers/chrome_win_91.0.4464.5/chrome.exe"" );         final File driverPath = new File( ""src/main/runtime/browsers/chrome_win_91.0.4464.5/chromedriver.exe"" );          System.setProperty( ""webdriver.chrome.driver"", driverPath.getAbsolutePath() );          while ( true ) {             WebDriver driver = null;             try {                 ChromeOptions options = new ChromeOptions();                 options.setHeadless( true );                 options.setBinary( browserPath );                 options.addArguments( ""user-data-dir="" + new File( ""./target/leak-test-sessions/session-""                                                                    + UUID.randomUUID().toString() ).getAbsolutePath() );                 driver = new ChromeDriver( options );                  test( driver );                 driver.close();             }             catch ( WebDriverException ex ) {                 ex.printStackTrace();             }             finally {                 if ( driver != null ) {                     try {                         driver.quit();                         driver = null;                     }                     catch ( WebDriverException ex ) {                         ex.printStackTrace();                     }                 }             }         }     }      static void test( final WebDriver driver ) {         driver.get( ""https://www.selenium.dev/"" );         driver.findElement( By.className( ""download-button"" ) ).click();     } } ```  ## Environment  OS: Windows 10 Browser: chrome Browser version: 91.0.4464.5 Browser Driver version: chromedriver 91.0.4464.5 Language Bindings version: java 4.0.0-beta-4","closed","","kreyssel","2021-07-20T15:00:35Z","2021-09-05T07:50:27Z"
"","9035","Unsuccessfull creation of ChromeDriver ends in file lock on chromedriver.exe","## üêõ Bug Report  If I try to create ChromeDriver and some errors happens, (To reproduce, for example. uninstall chrome) driver object will be null which means I cannot do anything with it.  But chromedriver.exe is locked (Used by another process error on windows)   ## To Reproduce  Install chromedriver.exe and instantiate new ChromeDriver() but don't install chrome (unisntall it) -maybe the easiset way to make some error inside ChromeDriver contrcutor like this var chromeDriver= new ChromeDriver();  Detailed steps to reproduce the behavior:  Not to have chromedriver.exe locked  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue    Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version:  70.0.3538.110  Browser Driver version :ChromeDriver 2.43 Language Bindings version:  e.g.C# 8","closed","R-awaiting answer,","vladop","2021-01-11T13:32:51Z","2021-09-05T08:21:34Z"
"","8973","scroll-behavior: smooth breaks click","## üêõ Bug Report  If a page uses `style:‚Ä®html { scroll-behavior: smooth; }` ‚Ä®and you attempt to click an element which is currently outside of the viewport, Selenium throws a ElementClickInterceptedError.  ## To Reproduce  Smooth scrolling example page:¬†https://jsfiddle.net/o8eg7dwh/ Detailed steps to reproduce the behaviour: ‚Ä®Try to click button with id='test'  ## Expected behaviour  Selenium should scroll the element into the viewport and successfully click it.  ## Environment  OS: macOS 11.1 Browser: Chrome  Browser version: 87.0.4280.88 Browser Driver version: Chromedriver 87.0.4 Language Bindings version: Selenium WebDriver Node.JS 4.0.0-alpha.8","closed","R-awaiting answer,","trenowden","2020-12-16T12:14:25Z","2021-09-05T08:15:48Z"
"","9498","--session-timeout does not close the browser, if the browser is still trying to load the resource","## üêõ Bug Report  If a browser is still trying to load a resource and the timeout specified by `--session-timeout` is reached, the closing of the browser will fail, but the selenium server will reopen the slot potentially leading to many still opened stale browsers. (Same issue first opened in the docker repository: https://github.com/SeleniumHQ/docker-selenium/issues/1283)  ## To Reproduce   - Start selenium: `java -jar selenium-server-4.0.0-beta-3.jar standalone --session-timeout 5` (needs chrome and chrome driver in path, probably other browsers are affected too) - Start a web server that will take a long time to answer - Run a selenium script that tries to load a resource of the slow web server - Wait for the timeout - Result: closing fails (browser still opened), selenium has reopened the slot (http://localhost:4444/ui/index.html#/)  ## Expected behavior  Selenium closes the browser correctly after the session times out.  ## Test script or set of commands reproducing this issue  `server.py`: ```python from http.server import BaseHTTPRequestHandler,HTTPServer import time  class Handler(BaseHTTPRequestHandler):     def do_GET( self ):         time.sleep(6000)         self.send_response(200)         self.send_header( 'Content-type', 'text/html' )         self.end_headers()  httpd = HTTPServer( ('127.0.0.1', 8080), Handler ) httpd.serve_forever() ``` `test.py`: ```python import os from selenium import webdriver  grid_url = ""http://localhost:4444/wd/hub"" def get_driver():     return webdriver.Remote(         command_executor=grid_url,         options=webdriver.ChromeOptions()) try:         driver = get_driver()     driver.get(""http://127.0.0.1:8080"") except Exception as e:         print(e) ``` - Run `java -jar selenium-server-4.0.0-beta-3.jar standalone --session-timeout 5` - Run `python3 server.py` - Run `python3 test.py`  ## Environment  OS: Linux Browser: Chrome Browser version: 90.0.4430.212 Browser Driver version: ChromeDriver 90.0.4430.24 Language Bindings version: python-4.0.0.b3 Selenium Grid version (if applicable): 4.0.0-beta-3","closed","C-grid,","JannisBush","2021-05-21T11:02:00Z","2021-09-05T08:01:17Z"
"","8994","IE Window is getting closed during test execution in Windows 10 64 bit machine","## üêõ Bug Report  IE Window is getting closed during test execution in Windows 10 64 bit machine. I tried using IEDriverServer version 2.52, 3.7, 3.8 and 3.9.    ## To Reproduce    I have an application in which once user enters username and password and clicks login, Login window closes and application home page is displayed. When I tested this scenario in Windows 7 and IE 11 with IEDriverServer 2.52.2 version, everything worked as expected. But when I tried the same flow in Windows 10 64 bit and IE 11 (both 32 and 64) with Driver versions 2.52.2, 3.7 - 3.9, IE window is closing immediately after click on login button and I am getting 'Unable to get browser' NoSuchWindow Exception on execution of next command.   ## Expected behavior  Login window closes and application home window should be displayed.  ## Test script or set of commands reproducing this issue              driver = new InternetExplorerDriver();             driver.Navigate().GoToUrl();              driver.FindElement(By.XPath(""//input[@ID='UserName']"")).SendKeys();             driver.FindElement(By.XPath(""//input[@Id='Password']"")).SendKeys(","closed","R-awaiting answer,","csharsha","2020-12-22T20:08:24Z","2021-09-05T08:03:17Z"
"","8992","Selenium hangs for a minute sometimes on DELETE /session/{session_id}","## üêõ Bug Report  I've upgraded to latest `selenium/standalone-firefox:4.0.0-beta-1-prerelease-20201208` image and noticed that sometimes when I call `DELETE /session/{session_id}` Selenium hangs for 60 seconds and reports an error. When I repeat the failed call, I get an `invalid session id` error - that probably means that session was closed successfully by the previous call, regardless of the error it has reported.  ## To Reproduce  The bug occurs irregularly, but when it occurs - the way to reproduce is just: - call `GET /session/{session_id}/screenshot` - call `DELETE /session/{session_id}` where `{session_id}` is a valid ID of an open session.  ## Expected behavior  Session is closed, and no error is reported.  ## Test script or set of commands reproducing this issue  The bug occurs irregularly, but often enough and always after taking a screenshot. I wonder if [this bug](https://bugzilla.mozilla.org/show_bug.cgi?id=1477550) is related.  ## Environment  OS: Ubuntu + docker-compose Browser: Firefox Browser version: 83.0 Browser Driver version: GeckoDriver 0.28.0 Language Bindings version: custom PHP binding via HTTP Selenium Grid version (if applicable): 4.0-beta1  ## Logs Here's the related fragment of Selenium logs: ``` selenium_1       | 12:38:05.702 INFO [LoggingOptions$1.lambda$export$0] - {""traceId"": ""0d21265ccecf3d060418748465e335f6"",""spanId"": ""ccffd56469e25171"",""spanKind"": ""INTERNAL"",""eventTime"": 1608640685701260378,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.status_code"": 200,""http.target"": ""\u002fsession\u002f1d20c7da-477a-430a-92f4-01d7cae955c1\u002fscreenshot"",""http.flavor"": 1,""http.user_agent"": ""GuzzleHttp\u002f7"",""http.handler_class"": ""org.openqa.selenium.remote.http.Route$PredicatedRoute"",""http.method"": ""GET"",""http.host"": ""selenium:4444"",""http.scheme"": ""HTTP""}} selenium_1       |  selenium_1       | 1608640685711	Marionette	INFO	Stopped listening on port 44356 selenium_1       | console.warn: services.settings: main/partitioning-exempt-urls sync interrupted by shutdown selenium_1       | console.error: ""Could not load engine bing@search.mozilla.org: TypeError: AddonManagerInternal._getProviderByName(...) is undefined"" selenium_1       | console.error: ""Could not load engine ddg@search.mozilla.org: TypeError: AddonManagerInternal._getProviderByName(...) is undefined"" selenium_1       | console.warn: SearchService: ""_init: abandoning init due to shutting down"" selenium_1       | JavaScript error: resource://gre/modules/DeferredTask.jsm, line 215: Error: Unable to arm timer, the object has been finalized. selenium_1       | JavaScript error: resource://gre/modules/DeferredTask.jsm, line 215: Error: Unable to arm timer, the object has been finalized. selenium_1       | JavaScript error: resource://gre/modules/DeferredTask.jsm, line 215: Error: Unable to arm timer, the object has been finalized. selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/AsyncShutdown.jsm, line 554: uncaught exception: 2147500036 selenium_1       | JavaScript error: resource://gre/modules/osfile/osfile_async_front.jsm, line 426: Error: OS.File has been shut down. Rejecting post to stat selenium_1       | 12:39:05.786 WARN [SpanWrappedHttpHandler.execute] - Unable to execute request: NettyHttpHandler request execution error selenium_1       | java.lang.RuntimeException: NettyHttpHandler request execution error selenium_1       | 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:76) selenium_1       | 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) selenium_1       | 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) selenium_1       | 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49) selenium_1       | 	at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42) selenium_1       | 	at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56) selenium_1       | 	at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:60) selenium_1       | 	at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55) selenium_1       | 	at org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:100) selenium_1       | 	at org.openqa.selenium.grid.node.ProtocolConvertingSession.execute(ProtocolConvertingSession.java:75) selenium_1       | 	at org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:115) selenium_1       | 	at org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:317) selenium_1       | 	at org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35) selenium_1       | 	at org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:364) selenium_1       | 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_1       | 	at org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86) selenium_1       | 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) selenium_1       | 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) selenium_1       | 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_1       | 	at org.openqa.selenium.grid.node.Node.execute(Node.java:202) selenium_1       | 	at org.openqa.selenium.grid.web.CombinedHandler.execute(CombinedHandler.java:59) selenium_1       | 	at org.openqa.selenium.grid.web.RoutableHttpClientFactory$1.execute(RoutableHttpClientFactory.java:66) selenium_1       | 	at org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:100) selenium_1       | 	at org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:102) selenium_1       | 	at org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:364) selenium_1       | 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_1       | 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) selenium_1       | 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_1       | 	at org.openqa.selenium.grid.router.Router.execute(Router.java:90) selenium_1       | 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) selenium_1       | 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) selenium_1       | 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) selenium_1       | 	at org.openqa.selenium.grid.server.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:30) selenium_1       | 	at org.openqa.selenium.grid.server.WrapExceptions.lambda$apply$0(WrapExceptions.java:36) selenium_1       | 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) selenium_1       | 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:46) selenium_1       | 	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) selenium_1       | 	at java.util.concurrent.FutureTask.run(FutureTask.java:266) selenium_1       | 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) selenium_1       | 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) selenium_1       | 	at java.lang.Thread.run(Thread.java:748) selenium_1       | Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:31836 after 60000 ms selenium_1       | 	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357) selenium_1       | 	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928) selenium_1       | 	at org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206) selenium_1       | 	at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59) selenium_1       | 	... 40 more selenium_1       | Caused by: java.util.concurrent.TimeoutException: Request timeout to localhost/127.0.0.1:31836 after 60000 ms selenium_1       | 	at org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43) selenium_1       | 	at org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50) selenium_1       | 	at io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:672) selenium_1       | 	at io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:747) selenium_1       | 	at io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:472) selenium_1       | 	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) selenium_1       | 	... 1 more selenium_1       | 12:39:05.787 WARN [LoggingOptions$1.lambda$export$0] - {""traceId"": ""effb3ffb5ce42724dc93082fe7890237"",""spanId"": ""3f0409c167314677"",""spanKind"": ""INTERNAL"",""eventTime"": 1608640745785704841,""eventName"": ""exception"",""attributes"": {""http.target"": ""\u002fsession\u002f1d20c7da-477a-430a-92f4-01d7cae955c1"",""exception.type"": ""java.lang.RuntimeException"",""http.flavor"": 1,""http.user_agent"": ""GuzzleHttp\u002f7"",""exception.message"": ""Unable to execute request: NettyHttpHandler request execution error"",""http.handler_class"": ""org.openqa.selenium.remote.http.Route$PredicatedRoute"",""exception.stacktrace"": ""java.lang.RuntimeException: NettyHttpHandler request execution error\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:76)\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:49)\n\tat org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)\n\tat org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)\n\tat org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:60)\n\tat org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)\n\tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:100)\n\tat org.openqa.selenium.grid.node.ProtocolConvertingSession.execute(ProtocolConvertingSession.java:75)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.execute(SessionSlot.java:115)\n\tat org.openqa.selenium.grid.node.local.LocalNode.executeWebDriverCommand(LocalNode.java:317)\n\tat org.openqa.selenium.grid.node.ForwardWebDriverCommand.execute(ForwardWebDriverCommand.java:35)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:364)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:67)\n\tat org.openqa.selenium.remote.tracing.SpanWrappedHttpHandler.execute(SpanWrappedHttpHandler.java:86)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:67)\n\tat org.openqa.selenium.grid.node.Node.execute(Node.java:202)\n\tat org.openqa.selenium.grid.web.CombinedHandler.execute(CombinedHandler.java:59)\n\tat org.openqa.selenium.grid.web.RoutableHttpClientFactory$1.execute(RoutableHttpClientFactory.java:66)\n\tat org.openqa.selenium.grid.web.ReverseProxyHandler.execute(ReverseProxyHandler.java:100)\n\tat org.openqa.selenium.grid.router.HandleSession.execute(HandleSession.java:102)\n\tat org.openqa.selenium.remote.http.Route$PredicatedRoute.handle(Route.java:364)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:67)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:67)\n\tat org.openqa.selenium.grid.router.Router.execute(Router.java:90)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327)\n\tat org.openqa.selenium.remote.http.Route.execute(Route.java:67)\n\tat org.openqa.selenium.grid.server.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:30)\n\tat org.openqa.selenium.grid.server.WrapExceptions.lambda$apply$0(WrapExceptions.java:36)\n\tat org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64)\n\tat org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:46)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException: Request timeout to localhost\u002f127.0.0.1:31836 after 60000 ms\n\tat java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357)\n\tat java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1928)\n\tat org.asynchttpclient.netty.NettyResponseFuture.get(NettyResponseFuture.java:206)\n\tat org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:59)\n\t... 40 more\nCaused by: java.util.concurrent.TimeoutException: Request timeout to localhost\u002f127.0.0.1:31836 after 60000 ms\n\tat org.asynchttpclient.netty.timeout.TimeoutTimerTask.expire(TimeoutTimerTask.java:43)\n\tat org.asynchttpclient.netty.timeout.RequestTimeoutTimerTask.run(RequestTimeoutTimerTask.java:50)\n\tat io.netty.util.HashedWheelTimer$HashedWheelTimeout.expire(HashedWheelTimer.java:672)\n\tat io.netty.util.HashedWheelTimer$HashedWheelBucket.expireTimeouts(HashedWheelTimer.java:747)\n\tat io.netty.util.HashedWheelTimer$Worker.run(HashedWheelTimer.java:472)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\t... 1 more\n"",""http.method"": ""DELETE"",""http.host"": ""selenium:4444"",""http.scheme"": ""HTTP""}} selenium_1       |  selenium_1       | ExceptionHandler::GenerateDump cloned child 1365 selenium_1       | ExceptionHandler::SendContinueSignalToChild sent continue signal to child selenium_1       | ExceptionHandler::WaitForContinueSignal waiting for continue signal... selenium_1       | 12:39:09.969 INFO [LoggingOptions$1.lambda$export$0] - {""traceId"": ""fc363ec4fe25944138cc26bb1b264b24"",""spanId"": ""59415c52ff14b91e"",""spanKind"": ""INTERNAL"",""eventTime"": 1608640749969122282,""eventName"": ""Deleted session from local session map"",""attributes"": {""logger"": ""org.openqa.selenium.grid.sessionmap.local.LocalSessionMap"",""session.id"": ""1d20c7da-477a-430a-92f4-01d7cae955c1""}} ```","closed","","remorhaz","2020-12-22T13:18:13Z","2021-09-05T08:27:50Z"
"","9287","Selenium 4 k8s-deployment-full-grid.yaml not backward compatible with ""/wd/hub""","## üêõ Bug Report  I've deployed [k8s-deployment-full-grid.yaml](https://github.com/SeleniumHQ/docker-selenium/blob/trunk/k8s-deployment-full-grid.yaml) in local cluster but my Selenium3 tests keep failing with error Message: ""Unable to find handler for (POST) /wd/hub/session""  I suspect that is the kubernetes yaml file that is missing ""selenium/hub"".   ## To Reproduce  Detailed steps to reproduce the behavior: - deploy k8s-deployment-full-grid.yaml - run Remote Web Driver test using url http://...host...:4444/wd/hub""   ## Expected behavior  I would expect that the "".../wd/hub"" default url as used until Selenium3 would continue to work for backward compatibility.   ## Test script or set of commands reproducing this issue  Install kubernetes pods in dedicated namespace ```bash # create namespace kubectl create ns selenium  # Deploying all the grid components to kubernetes - 4.0.0-beta-2-prerelease-20210315 kubectl -n selenium apply -f https://raw.githubusercontent.com/SeleniumHQ/docker-selenium/trunk/k8s-deployment-full-grid.yaml  # Exposing the router kubectl -n selenium expose deployment selenium-router-deployment --type=LoadBalancer --port=4444  # check status curl -sS http://localhost:4444/status | jq -r '.value.ready' ```  Run test ```python python3 -c ' from selenium import webdriver firefox_options = webdriver.FirefoxOptions() driver = webdriver.Remote(     command_executor=""http://localhost:4444/wd/hub"",     options=firefox_options ) try:   driver.get(""http://www.google.com"")   driver.save_screenshot(""./screenshot.png"") finally:   driver.quit()  ' ``` Output: ``` Traceback (most recent call last):   File """", line 4, in    File ""/home/user/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/user/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/user/.local/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/user/.local/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 242, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: Unable to find handler for (POST) /wd/hub/session ```  If I change the remote url to use instead ""http://localhost:4444"" test executes normally.   ## Environment  OS: Windows 10, Docker Desktop with Kubernetes enabled Browser: Firefox Browser version: selenium/node-firefox:4.0.0-beta-2-prerelease-20210315","closed","needs-triaging,","josesa-xx","2021-03-15T22:59:40Z","2021-09-05T08:12:16Z"
"","9149","Selenium Grid - IE11 - Screenshot of Modal Dialog(overlay) is cropped","## üêõ Bug Report  I'm using Selenium Grid to run my tests against IE11 Browser. My Web application has a button within a iFrame, which when clicked opens up a modal dialog (overlay). Selenium Grid is able to interact with the buttons inside modal dialog and perform actions. But when I try to capture the entire modal dialog's screenshot, the top part of it is cropped off and the iFrame's content appears there.   Selenium Code:modalDialogRootElement.getScreenshotAs(OutputType.FILE)  I even tried to switch out of iFrame(after the modal dialog is opened) and capture the entire iFrame, it still fails i.e. iFrame is captured fine but the modal dialog top is cropped off.  The same code works in Chrome version 88.  Tried with both 32 bit and 64 bit IE web drivers of version: 3.150.1  ## Environment  OS: Windows 10 Browser: IE Browser version: 11 Browser Driver version: 3.150.1 Language Bindings version: Java 11 Selenium Grid version (if applicable): 3.141.59","closed","D-IE,","schowdary55","2021-02-05T19:58:33Z","2021-09-05T08:15:43Z"
"","9654","Opera support: capabilities.Capabilities.opera is not a function","## üêõ Bug Report  I'm using npm package ""selenium-webdriver"": ""4.0.0-beta.4"" The code is from https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/opera.js#L55  ```    const operaOptions: any = new opera.Options();    const service = new (opera).ServiceBuilder(""e2e/operadriver_mac64/operadriver"").build();    return await opera.Driver.createSession(operaOptions, service); ``` The result is:  ``` TypeError: capabilities.Capabilities.opera is not a function     at Options.toCapabilities (/node_modules/selenium-webdriver/opera.js:315:62)     at Function.createSession (/node_modules/selenium-webdriver/opera.js:367:22) ```  Changing the code to use `new chrome.Options()` fixes the issue, but this is just a temporary workaround.  ## To Reproduce  ```    const operaOptions: any = new opera.Options();    const service = new (opera).ServiceBuilder(""e2e/operadriver_mac64/operadriver"").build();    return await opera.Driver.createSession(operaOptions, service); ```  ## Expected behavior  Create a webdriver session.  ## Test script or set of commands reproducing this issue  ```    const operaOptions: any = new opera.Options();    const service = new (opera).ServiceBuilder(""e2e/operadriver_mac64/operadriver"").build();    return await opera.Driver.createSession(operaOptions, service); ```  ## Environment  OS: macOS 11.4 Browser: Opera Browser version: 77 Language Bindings version: ""selenium-webdriver"": ""4.0.0-beta.4""","closed","C-nodejs,","milen-yordanov","2021-07-14T16:18:43Z","2021-09-05T07:50:47Z"
"","9369","Opera actions issue with Selenium >=4.0.0b1","## üêõ Bug Report  I'm currently working with Robotframework 4 / Selenium 4.0b1 / 4.0b2 / 4.0b2post1 and seleniumLibrary 5.1.3 It's not possible do perform a click / sendkeys / ... etc with opera (v75 or v74) and their associate driver on selenium >= 4.0b1.  This works well with Selenium 4.0a7   ## To Reproduce  Open Opera browser , go to url, and then perform a click or a send keys with Robotframework :  Open Browser	https://github.com/SeleniumHQ/	Opera click Element	//span[@title='selenium']	  ## Expected behavior  Click should be perform. Instead it raised an error :   20210409 11:00:13.319 :  INFO : Opening browser 'Opera' to base url 'https://github.com/SeleniumHQ/'. 20210409 11:00:16.475 :  INFO : Clicking element '//span[@title='selenium']'. 20210409 11:00:16.846 :  INFO :  20210409 11:00:16.848 :  FAIL : AttributeError: 'dict' object has no attribute 'click'  and here is the TRACE :  11:00:16.848	FAIL	AttributeError: 'dict' object has no attribute 'click'	 11:00:16.848	DEBUG	Traceback (most recent call last):   File ""c:\python\lib\site-packages\SeleniumLibrary\__init__.py"", line 492, in run_keyword     return DynamicCore.run_keyword(self, name, args, kwargs)   File ""c:\python\lib\site-packages\robotlibcore.py"", line 103, in run_keyword     return self.keywords[name](*args, **(kwargs or {}))   File ""c:\python\lib\site-packages\SeleniumLibrary\keywords\element.py"", line 658, in click_element     self.find_element(locator).click()  ## Test script or set of commands reproducing this issue  Open Browser	   https://github.com/SeleniumHQ/	Opera click Element	   //span[@title='selenium']	  ## Environment  OS: Windows 10 Browser: Opera  Browser version: v74 or v75 Browser Driver version: v88.0.4324.104 or v89.0.4389.82 Language Bindings version: Python 3.7.4 / 3.9.1","closed","R-awaiting answer,","TSavin","2021-04-09T09:06:33Z","2021-09-05T08:08:33Z"
"","9176","SOCKS5 authentication not working","## üêõ Bug Report  I'm connecting to the target server via a SOCKS5 proxy that requires username/password authentication. I'm doing this with a patched version of  Selenium hub+node ``3.141.59`` that fixes the ""Long vs Integer"" bug with a merge from branch ``3.14.0-issue-6917-patch`` https://github.com/mablhq/selenium/commit/801be37639e0050d976dc2972fc236da334f175a. Still my connection is refused by the proxy. I can see from the Chrome logs ``chrome://net-export/`` that the proxy ip and port are correct, but I don't see any auth information so I can't tell if it's a Selenium or a Chrome problem.  Hub log:  ``` 21:32:28.586 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, goog:chromeOptions: {args: [user-data-dir=C:\srv\vlbdev..., --no-sandbox, user-agent=Mozilla/5.0 (Mac...], extensions: []}, proxy: {proxyType: manual, socksPassword: xxxxxx, socksProxy: 193.xxx.xxx.xxx:9183, socksUsername: xxxxxx, socksVersion: 5}} ```  Node log:  ``` 21:32:28.641 INFO [ActiveSessionFactory.apply] - Capabilities are: {   ""browserName"": ""chrome"",   ""goog:chromeOptions"": {     ""args"": [       ""user-data-dir=C:\\srv\\vlbdev\\somewhere"",       ""--no-sandbox"",       ""user-agent=Mozilla\u002f5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit\u002f537.36 (KHTML, like Gecko) Chrome\u002f80.0.3987.163 Safari\u002f537.36""     ],     ""extensions"": [     ]   },   ""proxy"": {     ""proxyType"": ""manual"",     ""socksPassword"": ""xxxxxxx"",     ""socksProxy"": ""193.xxx.xxx.xxx:9183"",     ""socksUsername"": ""xxxxxxx"",     ""socksVersion"": 5   } } ```  Error received on the client:  ``` org.openqa.selenium.WebDriverException:` unknown error: net::ERR_SOCKS_CONNECTION_FAILED  Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 88.0.4324.150, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: C:\srv\vlbdev\xxx...}, goog:chromeOptions: {debuggerAddress: localhost:54429}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(manual, socks=193.xxx..., setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true, webdriver.remote.sessionid: a315c24a74530f2d1b3ca73663f...} Session ID: a315c24a74530f2d1b3ca73663f7cd1d 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) 	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122) 	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277) ```   ## To Reproduce  Get a patched version of 3.141.59 (mine is here https://drive.google.com/drive/folders/1Z_7_ibx1eLJLrtiBERNrXelWaH-wW6y0?usp=sharing) Start hub and node with      java -jar selenium-server-standalone-3.141.59-issue-6917-patch.jar -role hub -timeout 300 -browserTimeout 60 -cleanUpCycle 10000 -newSessionWaitTimeout 20000      java -Dwebdriver.chrome.driver=""C:\somewhere\chromedriver.exe"" -jar selenium-server-standalone-3.141.59-issue-6917-patch.jar -role node -hub http://localhost:4444/grid/register -browser browserName=chrome,maxInstances=5 -maxSession 5 -registerCycle 10000  Start your java client using the patched ""api"" jar and set a proxy on the connection:  ``` Proxy proxy = new Proxy(); proxy.setSocksVersion(5); proxy.setSocksProxy(proxyHost + "":"" + proxyPort); proxy.setSocksUsername(proxyUser); proxy.setSocksPassword(proxyPassword); MutableCapabilities capability = new ChromeOptions(); capability.setCapability(CapabilityType.PROXY, proxy); WebDriver driver = new RemoteWebDriver(remoteAddress, capability); ... use driver to fetch a page ```  ## Expected behavior  The target server should be reached.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 88.0.4324.150 Browser Driver version: chromedriver-88.0.4324.96 Language Bindings version: Java 3.141.59 patched  Selenium Grid version (if applicable): 3.141.59 patched","closed","C-java,","xtianus","2021-02-14T21:19:30Z","2021-09-05T08:19:05Z"
"","9437","KeyError when using ChromeOptions","## üêõ Bug Report  I'm bad at selenium, but this error surprised me:  ``` In [2]: browser = create_browser()  --------------------------------------------------------------------------- KeyError                                  Traceback (most recent call last)  in  ----> 1 browser = create_browser()  ~/Programming/visa-appointments/selenium_tools.py in create_browser()       9       10     capabilities = options.to_capabilities() ---> 11     return webdriver.Remote(      12         ""127.0.0.1:4443"",      13         desired_capabilities=capabilities,  ~/.cache/pypoetry/virtualenvs/visa-appointments-fn1WhJaX-py3.8/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py in __init__(self, command_executor, desired_capabilities, browser_profile, proxy, keep_alive, file_detector, options)     155             warnings.warn(""Please use FirefoxOptions to set browser profile"",     156                           DeprecationWarning, stacklevel=2) --> 157         self.start_session(capabilities, browser_profile)     158         self._switch_to = SwitchTo(self)     159         self._mobile = Mobile(self)  ~/.cache/pypoetry/virtualenvs/visa-appointments-fn1WhJaX-py3.8/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py in start_session(self, capabilities, browser_profile)     250         parameters = {""capabilities"": w3c_caps,     251                       ""desiredCapabilities"": capabilities} --> 252         response = self.execute(Command.NEW_SESSION, parameters)     253         if 'sessionId' not in response:     254             response = response['value']  ~/.cache/pypoetry/virtualenvs/visa-appointments-fn1WhJaX-py3.8/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)     319         response = self.command_executor.execute(driver_command, params)     320         if response: --> 321             self.error_handler.check_response(response)     322             response['value'] = self._unwrap_value(     323                 response.get('value', None))  ~/.cache/pypoetry/virtualenvs/visa-appointments-fn1WhJaX-py3.8/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)     129                     status = value.get('error', None)     130                     if status is None: --> 131                         status = value[""status""]     132                         message = value[""value""]     133                         if not isinstance(message, basestring):  KeyError: 'status' ```  I think the problem is I'm using `ChromeOptions` with the Firefox driver, because if I dig into the stacktrace, I can learn that the `value_json` dict contains:  ``` {   ""value"": {     ""message"": ""Could not start a new session. No Node supports the required capabilities: Capabilities {browserName: chrome, goog:chromeOptions: {args: [headless, silent], extensions: [], w3c: false}}, Capabilities {browserName: chrome, goog:chromeOptions: {args: [headless, silent], extensions: [], w3c: false}, version: }\nBuild info: version: '4.0.0-beta-3', revision: '5d108f9a67'\nSystem info: host: '9315f0a993d2', ip: '172.17.0.8', os.name: 'Linux', os.arch: 'amd64', os.version: '5.8.0-44-generic', java.version: '1.8.0_282'\nDriver info: driver.version: unknown""   } } ```    ## To Reproduce  1. Launch a docker selenium driver  2. Run this code:  ``` def create_browser() -> webdriver.Chrome:     options = webdriver.ChromeOptions()     options.add_argument(""headless"")     options.add_argument(""silent"")     options.add_experimental_option(""w3c"", False)      capabilities = options.to_capabilities()     return webdriver.Remote(         ""127.0.0.1:4443"",         desired_capabilities=capabilities,         keep_alive=True,     ) ```  ## Expected behavior  I expect a better error message, not a crash.  #","closed","C-py,","mlissner","2021-05-04T05:14:37Z","2021-09-05T08:06:33Z"
"","9300","Setting max-sessions for Grid node doesn't work correctly","## üêõ Bug Report  I want to start a Grid node with a single type of browser and a fixed number of maximum sessions/instances, for example 7. I can do it fine with Selenium 3 like this: ``` java -Dwebdriver.gecko.driver=drivers\geckodriver.exe -jar selenium-server-standalone-3.14.0.jar -role node -maxSession 7 -browser browserName=""firefox"",maxInstances=7 ``` But I couldn't achieve it with Selenium 4 using a similar (per my understanding of the documentation) command: ``` java -Dwebdriver.gecko.driver=drivers\geckodriver.exe -jar selenium-server-4.0.0-beta-2.jar node --detect-drivers false --max-sessions 7 --driver-configuration name=""Firefox"" max-sessions=7 stereotype={\""browserName\"":\""firefox\""} ```  ## To Reproduce 1. Start the hub using `java -jar selenium-server-4.0.0-beta-2.jar hub` 2. Run the above command to start the node  ## Expected behavior A Firefox node that can run up to 7 Selenium tests in parallel.  ## Actual behavior I see that Firefox was added 2x5 times instead of 7 in the log: ``` 09:11:07.748 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 09:11:07.764 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 09:11:08.273 INFO [UnboundZmqEventBus.] - Connecting to tcp://*:4442 and tcp://*:4443 09:11:08.422 INFO [UnboundZmqEventBus.] - Sockets created 09:11:08.538 INFO [UnboundZmqEventBus.] - Event bus ready 09:11:08.943 INFO [NodeServer.createHandlers] - Reporting self as: http://x.x.x.x:5555 09:11:09.347 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox"",""platformName"": ""XP""} 5 times 09:11:09.350 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox"",""platformName"": ""XP""} 5 times 09:11:09.420 INFO [Node.] - Binding additional locator mechanisms: name, id 09:11:11.615 INFO [NodeServer$1.start] - Starting registration process for node id 36a5fd26-da4e-4753-9135-e1f689c6f5e4 09:11:11.620 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-2 (revision Unknown): http://x.x.x.x:5555 09:11:11.673 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 09:11:12.362 INFO [NodeServer.lambda$createHandlers$1] - Node has been added ``` I also see ""Stereotypes: 10"" and ""Max. Concurrency: 4"" in the Grid web console.  ## Environment  OS: Windows (any version) Browser: any Browser version: any Browser Driver version: latest Language Bindings version: 4.0.0-beta-2 Selenium Grid version (if applicable): 4.0.0-beta-2","closed","C-grid,","JohnA2","2021-03-18T13:48:10Z","2021-09-05T08:08:44Z"
"","9225","[Reactjs][GeckoDriver] O_CREAT"", _c.fs is undefined in ./node_modules/tmp/lib/tmp.js","## üêõ Bug Report  I want run Selenium inside a component but ""TypeError: _c.fs is undefined."" I got also ""TypeError: can't access property ""O_CREAT"", _c.fs is undefined""  ![image](https://user-images.githubusercontent.com/25374826/109525401-c9e59b00-7ab1-11eb-9e64-6d74dc2c5205.png)    ## To Reproduce create react app and use inside random/dummy component and above all: trigger this with button :)   copy/past ``` async function getHtml(url: string) {     const driver = await new Builder().forBrowser(""firefox"").build();     let res = """"     try {         await driver.get(url);         res = await driver.getPageSource();     }     finally {          await driver.quit();         return res     } } ```  ## Expected behavior  not throwing error and get the html.  ## Environment  OS: Windows 10? OSX Browser: Geckodriver Browser version: my browser version is Mozilla 86/87 Browser Driver version: GeckoDriver 0.29.0 Language Bindings version:  node v15.6","closed","C-nodejs,","c0ncentus","2021-03-01T16:17:50Z","2021-09-05T08:15:42Z"
"","9047","http://HOST:PORT/ui/index.html#/ does not show correct selenium version","## üêõ Bug Report  I use selenium 4 alpha 7 version but, when I load:  http://HOST:PORT/ui/index.html#/  I see selenium-4.0.0-alpha-6  ![image](https://user-images.githubusercontent.com/30794708/104464166-4f24f700-55bb-11eb-8b09-cc4ccdb82766.png)  ## Environment  OS: Windows 7 Browser: IE, Chrome Browser version: IE 11.0.9600.19356 IE Browser Driver version: 3.150.1 Browser version: Chrome 87.0.4280.141 Chrome Browser Driver version: 87.0.4280.88 Selenium Grid version : Grid 4 (4.0.0-alpha-7)","closed","C-grid,","hnestorova","2021-01-13T14:21:04Z","2021-09-05T08:21:31Z"
"","9860","Drag and drop issue on native events","## üêõ Bug Report  I try to automate tests on a drag and drop feature. I can't perform the drag and drop, the mouse is never released (and the target coordinates seems to be wrong)  I test this code with selenium 3.141.59 and selenium 4.0.0-rc-1, on the last stable chrome version.  Details: I already automate drag and drop feature testing without any issue. The difference seems to be here, the drag and drop is native, there is no external lib used to performed the drag and drop.  So I post you an exemple with the drag and drop on a w3schools page, with a completely simple code.  ## To Reproduce  ```java         @Test 	public void testDragNDrop() throws InterruptedException { 		// loading driver with io.github.bonigarcia.webdrivermanager 		WebDriverManager.chromedriver().setup(); 		// new Chrome driver 		final ChromeDriver driver = new ChromeDriver(); 		// navigate to url 		driver.navigate().to(""https://www.w3schools.com/html/html5_draganddrop.asp""); 		// accept cookies 		driver.findElement(By.cssSelector(""#accept-choices"")).click();  		// sourceElt: img to drag and drop 		final WebElement sourceElt = driver.findElement(By.cssSelector(""div#div1 > img#drag1"")); 		// targetElt: div to drop the img 		final WebElement targetElt = driver.findElement(By.cssSelector(""div#div2""));  		// use Actions API to drag and drop 		new Actions(driver) 		        .pause(500) 		        .dragAndDrop(sourceElt, targetElt) 		        .pause(500) 		        .perform();  		// a wait to see the result before end the test 		TimeUnit.SECONDS.sleep(5); 		driver.quit(); 	} ```   ## Expected behavior  Drag and drop should be correctly performed  Current result: the move to element reached a bad target coordinates and the mouse release is not performed.  PS: after some test, with clickAndHold / moveToElement/ Release actions it's not that the mouse release is not performed. It's after the mouse move, we cannot performed any new actions (release, another move,... nothing!)  ## Environment  OS: Ubuntu 20.04 / Windows 10 (on virtualbox)  Browser: Chrome   Browser version: e93.0.4577.82 Browser Driver version: loading driver with io.github.bonigarcia.webdrivermanager Language Bindings version: Java 3.141.59 / 4.0.0-rc-1","closed","G-w3c,","vduhautois","2021-09-21T15:45:53Z","2021-10-23T00:06:00Z"
"","9625","webelement.py:695: DeprecationWarning: encodestring() is a deprecated alias since 3.1, use encodebytes()","## üêõ Bug Report  I tried searching but I didn't find anything on this. I'm scared. Please fix this.  Selenium Remote 4.0.0-b3 / Python 3.8.10  ## To Reproduce  1. Install python latest. 2. Install selenium 4beta3. 3. Write some pytest tests 4. Run Tests that cause WebdriverRemote to connect to chrome-standalone docker image 5. See the error message 6. Panic  ## Expected behavior  My tests to run without any errors or warnings  ## Test script or set of commands reproducing this issue  It's just a general depreciation warning. Has someone marked it for the next release? If so you can close this.  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: I'm tired this is an issue in client Browser Driver version: Remote driver 4.0.0-b3 Language Bindings version: Python 3.8.10  Selenium Grid version (if applicable): chrome-standalone:91","closed","","wotsyula","2021-07-02T20:19:47Z","2021-09-05T07:58:56Z"
"","9326","Proxy auth is not working with chrome and nodejs","## üêõ Bug Report  I tried everything but cant success. How to use proxy authentication with Selenium? I tried these ways:  options.addArguments(""--proxy-server=http://username:pass@proxy_url"");  and  options.setProxy(proxy.manual({http: username:pass@proxy_url}));  These are not working.   ## Environment  OS: OSX Browser: Chrome Browser version: Latest Browser Driver version: Latest ChromeDriver Language Bindings version: Latest Nodejs","closed","","alicanso","2021-03-23T14:34:28Z","2021-09-05T08:10:40Z"
"","8987","Selenium close Websocket with code 1006 randomly","## üêõ Bug Report  I think Selenium closes the Websockets with code 1006 randomly, with Quit(). Which is an abnormal closure.  ## To Reproduce I think it's pretty easy to reproduce it with the latest version of Selenium. Just create a WS and a simple Test then Quit().  ## Expected behavior  WS should close with code 1006.  ## Environment  OS: Windows and Linux. Browser:  Chrome. Browser version: 87 Language Bindings version: C# & JS. Server : NodeJS, Express with Apollo.","closed","R-awaiting answer,","ZiedHf","2020-12-21T15:36:17Z","2021-09-05T08:27:52Z"
"","9618","Playing same test 10 times randomly crashes","## üêõ Bug Report  I play a test suite of 10 same tests.  When 7 or 8 tests finish as success, the others crash at the very same point but with different messages :   `Expected condition failed: waiting for element to be clickable: By.id: buttonClose (tried for 60 second(s) with 500 milliseconds interval)`  `no such window`  or  `stale element reference: element is not attached to the page document`  ## To Reproduce  Issue is reproduced by running sessions multiple times.  ## Expected behavior  As I use explicit waits, I guess the test should always suucceed.  ## Test script or set of commands reproducing this issue  The test :  - connect to a Dynamics 2015 CRM and authenticate (no problem with that) - detect an iframe then swith to it (no poblem with that) - click on a button inside the iFrame to close the popin (randomly fails)  ``` int timeout = 60; WebDriver driver = new ChromeDriver(); WebDriverWait wait = new WebDriverWait(driver, timeout); driver.manage().window().maximize(); driver.manage().deleteAllCookies(); driver.get(""http://login:password@website""); WebElement iFramePopinBienvenue = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(""InlineDialog_Iframe""))); driver.switchTo().frame(iFramePopinBienvenue); wait.until(ExpectedConditions.elementToBeClickable(By.id(""buttonClose""))).click(); driver.quit(); ```  Of course, when exception raises, it's always because of the line :  `wait.until(ExpectedConditions.elementToBeClickable(By.id(""buttonClose""))).click();`  ## Environment  OS: Windows 10 Browser: Chrome  Browser version:  91.0.4472.124 Browser Driver version: 91.0.4472.101 Language Bindings version: N/A Selenium Grid version (if applicable): N/A","closed","R-awaiting answer,","awissart","2021-06-29T09:09:32Z","2021-09-05T07:50:21Z"
"","9165","Robot 64 Doesn't Open in Headless Mode","## üêõ Bug Report  I made a python script using PyPI's Selenium to launch Robot 64 without any human interaction, it opens successfully however, when it's headless mode, it fails to open roblox without any errors raised on IDE.  ## Video   https://user-images.githubusercontent.com/59511669/107573254-0b2e0d80-6bcc-11eb-9cd3-ab8f4015a2cf.mp4    ## To Reproduce  Run the Script in headless mode.  ## Expected behavior  Open Robot 64 in headless mode  ## Test script or set of commands reproducing this issue  [Test Script](https://gist.githubusercontent.com/BluelyTASer/478a1f1a6231efd90233b46a2b7ac9b8/raw/f33bf3e08185d4cfca1b8324ecc4b91239865ddb/Robot%252064%2520Launcher.py)  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 88.0.4324.150 Browser Driver version: ChromeDriver 88.0.4324.96 (68dba2d8a0b149a1d3afac56fa74648032bcf46b-refs/branch-heads/4324@{#1784}) Language Bindings version: Python 3.7 Selenium Grid version (if applicable): Unknown","closed","needs-triaging,","BluelyTASer","2021-02-10T22:09:25Z","2021-09-05T08:19:09Z"
"","9501","Copy the chromeOption video file from --use-file-for-fake-video-capture and pass it to the Grid nodes","## üêõ Bug Report  I initially brought this up in WebdriverIO's Github [issues](https://github.com/webdriverio/webdriverio/issues/6891), but both the wdio developer and I think this issue must be related to Selenium Grid rather than WebdriverIO  **Environment**  - **WebdriverIO version:** `^6.10.5`  - **Mode:** Running tests agaisnt 3 nodes in Selenium Grid  - **Node.js version:** `v15.11.0`  - **NPM version:** `7.6.0`  - **Browser name and version:** `Chrome 99.0`  - **Platform name and version:** My setup is in macOS, but running the tests in Linux Selenium nodes  **Config of WebdriverIO** ``` exports.config = {     runner: 'local',     hostname: 'localhost',     port: 4444,     path: '/wd/hub',     headless: false,     specs: [         './test/specs/**/*.js'     ],     exclude: [         // 'path/to/excluded/files'     ],     maxInstances: 3,     capabilities: [{         maxInstances: 3,         browserName: 'chrome',         acceptInsecureCerts: true,         'goog:chromeOptions': {           args: [             '--use-fake-ui-for-media-stream',              '--use-fake-device-for-media-stream', ->          '--use-file-for-fake-video-capture=./video_1.y4m'           ],         }      }],     ....  ```  **Describe the bug** So here is the problem:  - When running the tests locally and 1 by 1 without involving Selenium grid, all the `goog:chromeOptions` options that I am passing (you can see above), are working and the webcam feed is showing the passed `video_1.y4m` video file:    - However the exact test logic but this time running against 3 Selenium grid's nodes instead, results in the `goog:chromeOptions` not being passed, and therefore the passed video file won't be displayed:     **To Reproduce** This is my `docker-compose` config that starts the Selenium Grid and 3 nodes:  ``` version: ""3"" services:   chrome:     image: selenium/node-chrome:4.0.0-beta-3-20210426     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     scale: 3     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - ""5900""    selenium-hub:     image: selenium/hub:4.0.0-beta-3-20210426     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```  **Expected behavior** I would expect the chrome options to be passed to the Selenium grid the same way it works locally.","closed","","mohsenny","2021-05-21T14:30:04Z","2021-09-05T08:03:23Z"
"","9500","Copy the chromeOption video file and pass it to the Grid nodes","## üêõ Bug Report  I initially brought this up in WebdriverIO's Github [issues](https://github.com/webdriverio/webdriverio/issues/6891), but both the wdio developer and I think this issue must be related to Selenium Grid rather than WebdriverIO  **Environment**  - **WebdriverIO version:** `^6.10.5`  - **Mode:** Running tests agaisnt 3 nodes in Selenium Grid  - **Node.js version:** `v15.11.0`  - **NPM version:** `7.6.0`  - **Browser name and version:** `Chrome 99.0`  - **Platform name and version:** My setup is in macOS, but running the tests in Linux Selenium nodes  **Config of WebdriverIO** ``` exports.config = {     runner: 'local',     hostname: 'localhost',     port: 4444,     path: '/wd/hub',     headless: false,     specs: [         './test/specs/**/*.js'     ],     exclude: [         // 'path/to/excluded/files'     ],     maxInstances: 3,     capabilities: [{         maxInstances: 3,         browserName: 'chrome',         acceptInsecureCerts: true,         'goog:chromeOptions': {           args: [             '--use-fake-ui-for-media-stream',              '--use-fake-device-for-media-stream', ->          '--use-file-for-fake-video-capture=./video_1.y4m'           ],         }      }],     ....  ```  **Describe the bug** So here is the problem:  - When running the tests locally and 1 by 1 without involving Selenium grid, all the `goog:chromeOptions` options that I am passing (you can see above), are working and the webcam feed is showing the passed `video_1.y4m` video file:    - However the exact test logic but this time running against 3 Selenium grid's nodes instead, results in the `goog:chromeOptions` not being passed, and therefore the passed video file won't be displayed:     **To Reproduce** This is my `docker-compose` config that starts the Selenium Grid and 3 nodes:  ``` version: ""3"" services:   chrome:     image: selenium/node-chrome:4.0.0-beta-3-20210426     volumes:       - /dev/shm:/dev/shm     depends_on:       - selenium-hub     scale: 3     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443     ports:       - ""5900""    selenium-hub:     image: selenium/hub:4.0.0-beta-3-20210426     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```  **Expected behavior** I would expect the chrome options to be passed to the Selenium grid the same way it works locally.","closed","","mohsenny","2021-05-21T14:21:47Z","2021-09-05T08:03:23Z"
"","9051","python selenium webdriver.quit() method can not kill chromedriver.exe process on windows sever 2016 on azure VM","## üêõ Bug Report  I have used python Selenium to wrote a web scraper to download files auto.when I ran it on my local PC,it worked well.but when I run it on my VM on Azure.The method webdriver.quit() kill all chrome.exe and browser closed successfully but can not kill chromedriver.exe process and this zombine process keep my CPU and memory usage very high.  I have given the full control permission to the windows user to the chromedriver.exe and what I have tried following is all failed to kill it:  - end the process in the task mananger (Access denied) - use taskkill /im chromedriver.exe /f in admin mode CMD(can not be terminated) - use kill -id pid in powershell admin mode(can not be terminated)  what I can do to kill this process for now is only reboot my VM. No same issue happened on my local PC(windows 10),So is this something about the OS or system setting?    ## To Reproduce    call quit() to end the webdriver on the Environment below  ## Expected behavior  chromedriver.exe process should be killed after calling webdriver.quit() method   ## Environment  OS:windows server 2016 Datacenter Browser:Chrome Browser version:87.0.4280.141 Browser Driver version:87.0.4280.88.0 Language Bindings version:Python 3.7.9 Selenium Grid version (if applicable):3.141.0","closed","R-awaiting answer,","dante1994888","2021-01-15T02:07:13Z","2021-09-05T08:21:30Z"
"","9280","Python - How to run execute_cdp_cmd for all tabs","## üêõ Bug Report  I have use execute_cdp_cmd to excute some script like change useragent for chromedriver. But it only work for first tab and not working for new tab. Anyone have the same problem as me?","closed","","lequanghiep74","2021-03-14T11:20:20Z","2021-09-05T08:12:20Z"
"","9329","Python - Function `execute_cdp_cmd` only work for first tab in chromedriver","## üêõ Bug Report  I have use `execute_cdp_cmd` to excute some script before loading website. But `execute_cdp_cmd` only work for first tab.  Step:  - When browser start and first tab open, `execute_cdp_cmd` work perfect.  - I click plus icon to open new tab. In second tab, `execute_cdp_cmd` not working - not run script.  - I close all tab and open new tab (first tab - only one tab), `execute_cdp_cmd` work perfect  My code: (source is js script like console.log) ``` import os import sys from time import sleep from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait, Select from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.keys import Keys from selenium.webdriver.remote.webdriver import WebDriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  source = """"""   alert('test') """"""  def init_webdriver():     dir_path = os.path.dirname(os.path.realpath(__file__))     driver_path = '/usr/local/bin/chromedriver'     driver = webdriver.Chrome(executable_path=driver_path)     driver.execute_cdp_cmd(""Page.addScriptToEvaluateOnNewDocument"", {       ""source"": source     })     return driver  if __name__ == '__main__':     init_webdriver().get('https://github.com')     sleep(5000000)  ```  Video demo: https://gyazo.com/3a54b80bbd94a71cbfd9133d646dd3ec  ## Environment  OS: MacOs 11.2.3 Browser: Chrome Browser version: 89 Browser Driver version:  ChromeDriver 89 Language Bindings version: python 3.9 Selenium Grid version (if applicable): lasted","closed","R-awaiting answer,","lequanghiep74","2021-03-24T07:21:11Z","2021-09-05T08:08:25Z"
"","9839","Grid custom capabilities don't work correctly","## üêõ Bug Report  I have two types of Grid nodes that use the exact same version of a browser. The first type is regular and the second has some special capability (in my case for example, it records a video). So I want to be able to decide which type of node each test should use by requesting a custom capability that is only defined by the second type of nodes.  ## To Reproduce  Start the hub and 3 nodes: `java -jar selenium-server-4.0.0-rc-1.jar hub` 1. A regular node that doesn't define any custom capabilities `java -jar selenium-server-4.0.0-rc-1.jar node --max-sessions 1 --port 5555` 2. A regular node that explicitly doesn't support a custom capability `java -jar selenium-server-4.0.0-rc-1.jar node --detect-drivers false --driver-configuration display-name=""Firefox (custom capability false)"" max-sessions=1 stereotype={\""browserName\"":\""firefox\"",\""custom-cap\"":false} --port 5556` 3. A special node that supports a custom capability `java -jar selenium-server-4.0.0-rc-1.jar node --detect-drivers false --driver-configuration display-name=""Firefox (custom capability true)"" max-sessions=1 stereotype={\""browserName\"":\""firefox\"",\""custom-cap\"":true} --port 5557`  Confirm that the custom capability is applied on the http://localhost:4444/status page: ``` {   ""value"": {     ""ready"": true,     ""message"": ""Selenium Grid ready."",     ""nodes"": [       {         ""id"": ""028ca108-bfc4-430e-806c-6477b6b8569e"",         ""uri"": ""http:\u002f\u002f...:5555"",         ""maxSessions"": 1,         ""osInfo"": {           ""arch"": ""x86"",           ""name"": ""Windows 10"",           ""version"": ""10.0""         },         ""heartbeatPeriod"": 60000,         ""availability"": ""UP"",         ""version"": ""4.0.0-rc-1 (revision bc5511cbda)"",         ""slots"": [           {             ""lastStarted"": ""2021-09-17T14:23:23.679Z"",             ""session"": null,             ""id"": {               ""hostId"": ""028ca108-bfc4-430e-806c-6477b6b8569e"",               ""id"": ""fdd41c10-1569-42b9-a4a6-6dc32f6fc337""             },             ""stereotype"": {               ""browserName"": ""firefox"",               ""platformName"": ""WIN10""             }           }         ]       },       {         ""id"": ""3d65ad55-68a2-4f62-a479-8e5d49cd36a3"",         ""uri"": ""http:\u002f\u002f...:5556"",         ""maxSessions"": 1,         ""osInfo"": {           ""arch"": ""x86"",           ""name"": ""Windows 10"",           ""version"": ""10.0""         },         ""heartbeatPeriod"": 60000,         ""availability"": ""UP"",         ""version"": ""4.0.0-rc-1 (revision bc5511cbda)"",         ""slots"": [           {             ""lastStarted"": ""2021-09-17T14:23:34.164Z"",             ""session"": null,             ""id"": {               ""hostId"": ""3d65ad55-68a2-4f62-a479-8e5d49cd36a3"",               ""id"": ""8fb56802-6aa7-487e-8976-7989d0d0f45c""             },             ""stereotype"": {               ""browserName"": ""firefox"",               ""custom-cap"": false,               ""platformName"": ""WIN10""             }           }         ]       },       {         ""id"": ""e2fd3475-7272-44f6-b3d5-78902ab796d8"",         ""uri"": ""http:\u002f\u002f...:5557"",         ""maxSessions"": 1,         ""osInfo"": {           ""arch"": ""x86"",           ""name"": ""Windows 10"",           ""version"": ""10.0""         },         ""heartbeatPeriod"": 60000,         ""availability"": ""UP"",         ""version"": ""4.0.0-rc-1 (revision bc5511cbda)"",         ""slots"": [           {             ""lastStarted"": ""2021-09-17T14:22:53.757Z"",             ""session"": null,             ""id"": {               ""hostId"": ""e2fd3475-7272-44f6-b3d5-78902ab796d8"",               ""id"": ""ea91915a-121c-4b92-a2ab-d79b336701ba""             },             ""stereotype"": {               ""browserName"": ""firefox"",               ""custom-cap"": true,               ""platformName"": ""WIN10""             }           }         ]       }     ]   } } ```  ## Expected behavior  I expect that when I run the below code, it will be executed only on the third node, but it runs on all 3 of them.  ## Test script or set of commands reproducing this issue  ``` FirefoxOptions options = new FirefoxOptions(); options.setCapability(""custom-cap"", true); WebDriver driver = new RemoteWebDriver(new URL(""http://localhost:4444""), options); driver.get(""http://example.com""); Thread.sleep(1000); driver.quit(); ```  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 92 Browser Driver version: GeckoDriver 0.29 Language Bindings version: Java 4.0.0-rc-1 Selenium Grid version (if applicable): 4.0.0-rc-1","closed","C-grid,","JohnA2","2021-09-17T15:19:35Z","2021-11-04T00:06:09Z"
"","9841","Geolocation access not working in Mac OS (selenium-java 4.0.0-rc-1)","## üêõ Bug Report  I have the following test that enables Geolocation access using capabilities for Chrome:  https://github.com/bonigarcia/webdrivermanager-basic/blob/master/src/test/java/io/github/bonigarcia/test/geolocation/GeolocationChromeTest.java  I am running these tests in GitHub Actions in three virtual environments:  * `ubuntu-latest` (Ubuntu 20.04). * `windows-latest` (Windows Server 2019). * `macos-latest` (macOS 10.15).  The test is working fine in Linux and Windows, but it is failing on Mac OS.  ## To Reproduce  Run this test on Mac OS (at least, on GitHub Actions):  https://github.com/bonigarcia/webdrivermanager-basic/blob/master/src/test/java/io/github/bonigarcia/test/geolocation/GeolocationChromeTest.java  For some reason, geolocation data is unavailable, and the page shows the following message:  ![geo-error-2](https://user-images.githubusercontent.com/5413013/133857553-ad404880-05ee-411f-82bf-502028126592.png)  The test execution logs are the following:  https://github.com/bonigarcia/webdrivermanager-basic/runs/3636953202  ## Expected behavior  In theory, the popup to access geolocation should be accepted using the experimental option `profile.default_content_setting_values.geolocation`. This seems to work nicely both in Linux and Windows. The test also makes an screenshot. In these operating systems, the screenshots is as follows (although in Mac OS is as shown before):  ![geolocation-ok](https://user-images.githubusercontent.com/5413013/133832786-67edf2a1-b0f5-422a-a7d4-8d201b33a123.png)  ## Test script or set of commands reproducing this issue  https://github.com/bonigarcia/webdrivermanager-basic/blob/master/src/test/java/io/github/bonigarcia/test/geolocation/GeolocationChromeTest.java  ## Environment  OS: macOS 10.15 (on GitHub Actions) Browser: Chrome Browser version: 93 Browser Driver version: chromedriver 93.0.4577.63 Language Bindings version: selenium-java 4.0.0-rc-1 Selenium Grid version (if applicable): -","closed","","bonigarcia","2021-09-17T18:01:30Z","2021-10-22T00:06:53Z"
"","9142","WebElement.isDisplayed() in not working consistently in FF 80.0!!","## üêõ Bug Report  I have recently upgraded to Selenium V3.141.49 and my tests gets executed on selenium Docker GRID V3.141.59 which has FF 80.0. I see my TC's are failing inconsistently and at the step where it is using WebElement.isDisplayed(). This worked good in all older versions of Selenium. During my TC execution I actually do a screengrab and I can see the element(in my case a Button) in the screenshot but somehow **isDisplayed()** is throwing false. Please help at the earliest!!   ## To Reproduce  This is not very consistent.. In some runs I see it going GREEN but in others the same is failing up!! As this is being executed on a private ENV I cannot share the logs.. I am sorry!!    ## Expected behavior  WebElement.isDislpayed() should return true when the element is actually there and visible!!  ## Test script or set of commands reproducing this issue    ## Environment  OS: LINUX Browser: FF  Browser version: 80.0 Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","mdshafiqrn479","2021-02-04T12:18:14Z","2021-09-05T08:19:02Z"
"","9221","Mocha fails to run tests running with selenium-webdriver version `4.0.0-beta.1`","## üêõ Bug Report  I have mocha tests that tests ui code using selenium,  got the following error since the last release  /var/lib/jenkins/workspace/SL.OnPremise.Agents.JavaScript-monorepo/test/agent-tests/cases/selenium/angular-7/node_modules/selenium-webdriver/lib/webdriver.js:1363     } catch {             ^  SyntaxError: Unexpected token {     at createScript (vm.js:80:10)     at Object.runInThisContext (vm.js:139:10)     at Module._compile (module.js:607:28)     at Object.Module._extensions..js (module.js:654:10)     at Module.load (module.js:556:32)     at tryModuleLoad (module.js:499:12)     at Function.Module._load (module.js:491:3)     at Module.require (module.js:587:17)     at require (internal/module.js:11:18)     at Object. (/var/lib/jenkins/workspace/SL.OnPremise.Agents.JavaScript-monorepo/test/agent-tests/cases/selenium/angular-7/node_modules/selenium-webdriver/lib/http.js:34:24)","closed","C-nodejs,","RoniSegal","2021-02-28T12:40:24Z","2021-09-05T08:15:39Z"
"","9406","Setting max session on a node doesn't work when being set in Amazon ECS service","## üêõ Bug Report  I have created selenium **Chrome** node and hub, 1 node and 1 hub in Amazon ECS, based on version 4.0.0-beta-3-prerelease-20210402. I have added environment variables:  SE_NODE_MAX_SESSIONS=4 SE_NODE_OVERRIDE_MAX_SESSIONS=true  I can see in amazon logs that max session parameter is accepted and set to 4, but when I check available slots, I see 1. I used 1vCPU, 2gbRAM setup. Details from other users trying this out can be seen [here](https://stackoverflow.com/questions/66742811/selenium-grid-4-session-not-reflecting) too.  Locally, when I use docker-compose, this setup works.  ## To Reproduce  Create 1 selenium node and hub in Amazon ECS, and set environment variables to:  SE_NODE_MAX_SESSIONS=4 SE_NODE_OVERRIDE_MAX_SESSIONS=true  ## Expected behavior  Available totalSlots: 4.  ## Environment  OS: Amazon Elastic Container Service (Linux) Selenium Grid version (if applicable): 4.0.0-beta-3-prerelease-20210402. Docker images used:  selenium/node-chrome:4.0.0-beta-3-prerelease-20210402 selenum/hub:4.0.0-beta-3-prerelease-20210402","closed","C-grid,","ibalosh","2021-04-21T13:26:55Z","2021-09-05T08:03:20Z"
"","9747","Grid4-beta4:  An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. java.lang.IllegalArgumentException: invalid hex byte 'or' at index 1 of '%org/jboss/version.properties'","## üêõ Bug Report  I have a Selenium-Hub running on Linux Host and I have some nodes running on Windows 10 VM which are registered to the Selenium-Hub. The Selenium-Hub and the nodes are running 24/7. I am running into an issue where the Selenium-Hub goes into an unresponsive mode after a while and throws the following exception in the Selenium-Hub log file:  ` 22:09:34.509 INFO [LoggingOptions.configureLogEncoding] - Using the system default encoding 22:09:34.528 INFO [LoggingOptions.getTracer] - Using null tracer 22:09:34.586 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://xxxxxxxxxx:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://xxxxxxxxxx:4443] 22:09:34.765 INFO [UnboundZmqEventBus.] - Connecting to tcp://xxxxxxxxxx:4442 and tcp://xxxxxxxxxx:4443 22:09:34.812 INFO [UnboundZmqEventBus.] - Sockets created 22:09:35.814 INFO [UnboundZmqEventBus.] - Event bus ready 22:09:36.891 INFO [Hub.execute] - Started Selenium Hub 4.0.0-beta-4 (revision 29f46d02dd): http://xxxxxxxxxx:4444 22:09:37.991 INFO [Node.] - Binding additional locator mechanisms: name, id 22:09:38.411 INFO [LocalDistributor.add] - Added node 26767121-c0e2-40cb-83b9-22029bac5529 at http://xxxxxxxxxx:5555. 22:09:38.527 INFO [GridModel.setAvailability] - Switching node 26767121-c0e2-40cb-83b9-22029bac5529 (uri: http://xxxxxxxxxx:5555) from DOWN to UP 22:09:49.163 INFO [Node.] - Binding additional locator mechanisms: name, id 22:09:49.168 INFO [LocalDistributor.add] - Added node 5d893626-457c-4b2c-993b-383217c6ed90 at http://xxxxxxxxxx:5555. 22:09:49.206 INFO [GridModel.setAvailability] - Switching node 5d893626-457c-4b2c-993b-383217c6ed90 (uri:   > http://xxxxxxxxxx:5555) from DOWN to UP  22:49:52.840 WARN [DefaultChannelPipeline.onUnhandledInboundException] - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception. java.lang.IllegalArgumentException: unterminated escape sequence at index 0 of: %.         at io.netty.handler.codec.http.QueryStringDecoder.decodeComponent(QueryStringDecoder.java:371)         at io.netty.handler.codec.http.QueryStringDecoder.path(QueryStringDecoder.java:189)         at org.openqa.selenium.netty.server.RequestConverter.createRequest(RequestConverter.java:145)         at org.openqa.selenium.netty.server.RequestConverter.channelRead0(RequestConverter.java:82)         at org.openqa.selenium.netty.server.RequestConverter.channelRead0(RequestConverter.java:51)         at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:102)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at org.openqa.selenium.netty.server.WebSocketUpgradeHandler.handleHttpRequest(WebSocketUpgradeHandler.java:105)         at org.openqa.selenium.netty.server.WebSocketUpgradeHandler.channelRead(WebSocketUpgradeHandler.java:75)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)         at io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler.channelRead(WebSocketServerExtensionHandler.java:102)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:93)         at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)         at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)         at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)         at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)         at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)         at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)         at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)         at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)         at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)         at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)         at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)         at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)         at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)         at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)         at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)         at java.base/java.lang.Thread.run(Thread.java:829) `  As a short-term fix, I am currently restarting the selenium-service on the Linux host whenever I see that exception getting printed out to the log-file.  Any suggestions on how can I add a long term fix to this or why I am seeing this exception would be really helpful!  ## Environment  Node running on OS: Windows 10 Selenium-Hub running on OS: Linux RHEL 8.4   Selenium Grid version: 4.0.0-beta-4","closed","","sushant0201","2021-08-19T15:25:49Z","2021-09-27T00:05:49Z"
"","9409","My python selenium script is not working anymore","## üêõ Bug Report  I have a script that downloads some info from a provider. It also downloads the webpage as pdf. Recently, I updated Chrome version and suddenly the script is not working anymore even after replacing the chromedriver.   ## To Reproduce  I cannot share the URL as this a private provider  ## Expected behavior  My script retrieves a private URL and downloads the webpage as pdf.   ## Test script or set of commands reproducing this issue  ``` import json from selenium import webdriver import os from selenium.webdriver.chrome.options import Options import shutil import time      try:          chrome_options = webdriver.ChromeOptions()      appState = {                   ""recentDestinations"": [                                         {""id"": ""Save as PDF"",                                           ""origin"": ""local"",                                           ""account"": """"}],                    ""selectedDestinationId"": ""Save as PDF"",                    ""version"": 2}                        preferences  = { 'download.default_directoryr': 'C:\\Users\\user\\Desktop',                     'printing.print_preview_sticky_settings.appState': json.dumps(appState),                      ""profile.default_content_settings.popups"": 0,                     ""directory_upgrade"": True}               chrome_options.add_experimental_option('prefs', preferences)     chrome_options.add_argument('--kiosk-printing')     chrome_options.add_argument('--user-agent=""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36""')      driver = webdriver.Chrome(""drivers/chromedriver.exe"", chrome_options=chrome_options)          delay = 45 # seconds     driver.get(url)     htmlbody = """"                     element = WebDriverWait(driver, delay).until(EC.element_to_be_clickable((By.ID, ""app"")))     htmlbody = element.get_attribute('innerHTML')     #print(htmlbody)     driver.execute_script('window.print();')     print(""Download complete"")          # moving the file to another dir           print(""File moved"")          driver.close() except TimeoutException:     print(""Html could not be fetched!"") return htmlbody ```   ## Environment  OS:  Windows 10 Browser:  Chrome Browser version:  90.0.4430.85 Browser Driver version:  ChromeDriver 90.0.4430.24 Selenium Grid version (if applicable):  3.141.0","closed","needs-triaging,","saurabhkankriya","2021-04-22T08:00:16Z","2021-09-20T00:05:51Z"
"","9594","Hub reporting no available nodes after a few hours","## üêõ Bug Report  I have a docker grid version 4 deployed on a docker swarm, consisting of one hub and 5 chrome nodes. The grid starts correctly and even runs tests as expected but after a few hours the hub reports that there are no available nodes. When I run a status check on the hub, it reports that it is not ready, however when I run a status check on the nodes (""_/readyz_"" and ""_/status_""), they report to be healthy and ready.  If I restart the hub, when it comes back up, it still cannot recognize the nodes. But, if I scale the nodes to zero and back up to 5, suddenly they are recognized by the hub and all is well again.  By the way, there are no errors on the hub and node logs.  ## To Reproduce  This is my docker-compose file below and I deploy the grid using ""docker stack deploy -c docker-compose.yml myapp""  ## Expected behavior  The hub should not lose the nodes, unless if the nodes' status reports that they are not healthy.  ## Test script reproducing this issue (when applicable)  ``` version: '3.9'  services:   chrome:     image: selenium/node-chrome:4.0.0     volumes:       - /dev/shm:/dev/shm     environment:       - SE_EVENT_BUS_HOST=myapp_hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443       - JAVA_OPTS=-Dwebdriver.chrome.whitelistedIps=       - SE_NODE_SESSION_TIMEOUT=60     ports:       - ""5555:5555""     networks:       - myapp-net     links:       - hub     deploy:       replicas: 5     entrypoint: bash -c 'SE_OPTS=""--host $$HOSTNAME"" /opt/bin/entry_point.sh'    hub:     image: selenium/hub:4.0.0     networks:       - myapp-net     environment:       - SE_OPTS=""--log-level FINE""     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```  ## Environment  OS: Centos 7 Docker-Selenium image version: selenium/hub:4.0.0  --> Docker version: 20.10.5 Docker-Compose version (if applicable): 1.26.2, build eefe0d31 Exact Docker command to start the containers (if using docker-compose, provide  the docker-compose file as well): docker stack deploy -c docker-compose.yml myapp","closed","C-grid,","sabelosimelane","2021-04-08T10:00:03Z","2021-09-25T00:05:34Z"
"","9784","NoClassDefFoundError after bumping to selenium-java 4.0.0 in Mac OS","## üêõ Bug Report  I have a couple of repositories using Selenium 4:  * https://github.com/bonigarcia/selenium-webdriver-java/ * https://github.com/bonigarcia/webdrivermanager/  I use GitHub Actions to run the tests in these repositories, using three different [virtual environments](https://github.com/actions/virtual-environments):  * `ubuntu-latest` (Ubuntu 20.04). * `windows-latest` (Windows Server 2019). * `macos-latest` (macOS 10.15).  After bumping to selenium-java 4.0.0-rc-1, several tests of the Mac OS workflow are failing due to `NoClassDefFoundError`, such as:  ``` java.lang.NoClassDefFoundError: Could not initialize class org.openqa.selenium.WebDriverException 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:571) ```  ... or:  ``` java.lang.NoClassDefFoundError: Could not initialize class org.openqa.selenium.net.HostIdentifier 	at io.github.bonigarcia.wdm.test.create.ChromeRemoteTest.setupClass(ChromeRemoteTest.java:41) ```   ## To Reproduce/Test script  I don't have a Mac OS machine to test it, but the error seems consistent in Mac OS (at least on GitHub Actions).  The test that fails are the following:  * 10 tests in selenium-webdriver-java. For instance: [FluentWaitJUnit4Test](https://github.com/bonigarcia/selenium-webdriver-java/blob/master/selenium-webdriver-junit4/src/test/java/io/github/bonigarcia/webdriver/junit4/ch3/wait/FluentWaitJUnit4Test.java) (see the complete [workflow traces](https://github.com/bonigarcia/selenium-webdriver-java/actions/runs/1193944103) and the [workflow setup](https://github.com/bonigarcia/selenium-webdriver-java/blob/master/.github/workflows/build.yml)). * 1 test in WebDriverManager: [ChromeRemoteTest](https://github.com/bonigarcia/webdrivermanager/blob/master/src/test/java/io/github/bonigarcia/wdm/test/create/ChromeRemoteTest.java) (see [workflow traces](https://github.com/bonigarcia/webdrivermanager/actions/runs/1193898533) and the [workflow setup](https://github.com/bonigarcia/webdrivermanager/blob/master/.github/workflows/build.yml)).   ## Environment  OS: macOS 10.15 (on GitHub Actions) Browser: Chrome Browser version: 93 Browser Driver version: chromedriver 93.0.4577.15 Language Bindings version: selenium-java 4.0.0-rc-1 Selenium Grid version (if applicable): 4.0.0-rc-1 (the dependency `org.seleniumhq.selenium:selenium-grid` is also used in WebDriverManager, but not in selenium-webdriver-java)","closed","C-java,","bonigarcia","2021-09-02T11:38:06Z","2021-12-25T00:06:56Z"
"","9197","FindElement Thread Disappers.","## üêõ Bug Report  I have a `ThreadPool` which brings a couple of Thread working on a function.  In the function there is a `IWebElement cElem = cItem.FindElement(By.CssSelector(""span.im_message_date_text""));` call, where the current Thread disappear.  In the function I ensured with a `lock(StaticReadonlyObject){}` that the one Selenium's function only gets called by one specific thread. Afterwards the Thread has to check the text and process it properly, that's the reason why I am using `ThreadPool`.   There isn't any Exception Thrown.  In Visual Studio Code, I checked every single **Common Language Runtime Exception** to ensure that.   I am not sure why and where this error could happen. Maybe something like this, where Sockets are blocked by the Framework [ServicePointManager.DefaultConnectionLimit](https://docs.microsoft.com/en-us/dotnet/api/system.net.servicepointmanager.defaultconnectionlimit?view=net-5.0#System_Net_ServicePointManager_DefaultConnectionLimit)  I logged the ChromeDriver - verbose - during the hole session. There are no more logs to write out from the Chrome, after the function get called.   The interesting thing is, that this code has worked 2 times during the whole debug/Bug report writing process.   I think that something get overloaded.    ## To Reproduce I took the time and made a file which makes the same as mine. [https://dotnetfiddle.net/ho7Ul5](https://dotnetfiddle.net/ho7Ul5)  ## Expected behaviour  I want the thread to do not disappear.   ## Test script or set of commands reproducing this issue  ## Environment  OS: Windows 10 Browser: Google Chrome Browser version: 88.0.4324.182 (Official Build) (64-bit) Browser Driver version: ChromeDriver 88.0.4324.96 Language Bindings version: C# - .Net 5 Selenium Grid version (if applicable): 3.141.0","closed","C-dotnet,","Rupert-com","2021-02-20T09:20:50Z","2021-09-05T08:08:41Z"
"","9072","Queued sessions inconsistent behaviour Grid V4 vs Grid V3","## üêõ Bug Report  I have 2 grids: - **3.141.59-20210105** - **4.0.0-beta-1-prerelease-20210114**  with 1 Chrome node. You can use the following docker compose file to spin up the same environment [docker-compose.yml.zip](https://github.com/SeleniumHQ/selenium/files/5842375/docker-compose.yml.zip)  I am sending 2 Chrome tests in parallel but experiencing different behaviour between Grid v3 vs Grid v4 [nunitProject.zip](https://github.com/SeleniumHQ/selenium/files/5842348/nunitProject.zip)  **Selenium 3 Grid behaviour** - Because there is just one node, 1 test is put into a queue waiting for the first one to be finished then it is executed successfully ![image](https://user-images.githubusercontent.com/20699180/105175738-3f0d9a00-5b1c-11eb-879c-f54ffa685afc.png) ![image](https://user-images.githubusercontent.com/20699180/105177278-5d749500-5b1e-11eb-9ba4-eaf1f0ead1c7.png)  Logs: [selenium3GridLogs.txt](https://github.com/SeleniumHQ/selenium/files/5842389/selenium3GridLogs.txt)  **Selenium 4 Grid behaviour** - First test is sent to the grid and executed properly - Second test is running and trying to create session, eventually times out.  After the first test is finished I can see graphql response saying there is available slot, yet it is not being assigned to my second test `{     ""data"": {         ""grid"": {             ""nodes"": [                 {                     ""id"": ""bb800483-fb81-4fea-849b-62ec4a23cb7b"",                     ""uri"": ""http://172.19.0.3:5555"",                     ""status"": ""UP"",                     ""sessions"": [],                     ""maxSession"": 1,                     ""capabilities"": ""[\n  {\n    \""slots\"": 1,\n    \""browserName\"": \""chrome\""\n  }\n]""                 }             ],             ""uri"": ""http://172.19.0.2:4444"",             ""totalSlots"": 1,             ""usedSlots"": 0,             ""sessionCount"": 0         }     } }`  ![image](https://user-images.githubusercontent.com/20699180/105175650-27361600-5b1c-11eb-8379-66eeba4fd7e0.png) - Furthermore there is no indication in Grid UI that node would be in use and no information about queued session either   ![image](https://user-images.githubusercontent.com/20699180/105175944-7aa86400-5b1c-11eb-8ddc-bd51f41e6cbc.png)  Logs: [seleniumGrid4Logs.txt](https://github.com/SeleniumHQ/selenium/files/5842440/seleniumGrid4Logs.txt)","closed","R-awaiting answer,","mcopjan","2021-01-20T12:53:26Z","2021-09-05T08:21:28Z"
"","9898","reset_action() does not work and previous actions don't seem to be cleared","## üêõ Bug Report  I had logged a bug report #8776, which was closed off as an issue with chromedriver and asking me to log bug with chromedriver. This is not the case. I tested this issue with Firefox(geckodriver) and Edge as well and see the same issue.  The details of the issue are as follows and is similar to the one reported in #6837 (which has been closed). I tested the code given in #6837, which seems to work now, but there are other situations where reset_actions() does not seem to work. To reproduce the issue that I am seeing, I modified the code included in #6837 as below `#from selenium.webdriver.chrome.options import Options #from selenium.webdriver.Firefox.options import Options from selenium import webdriver from selenium.webdriver import ActionChains   def action_chains_test():     #options = Options()     #driver = webdriver.Chrome(executable_path=r""C:\Users\DELL\Downloads\chromedriver_win32\chromedriver.exe"",options=options)     #driver = webdriver.Firefox(executable_path=r""C:\Users\DELL\Downloads\geckodriver-v0.30.0-win64\geckodriver.exe"")     driver = webdriver.Edge(executable_path=r""C:\Users\DELL\Downloads\edgedriver\msedgedriver.exe"")     driver.get('https://developer.mozilla.org/en-US/')     mouse = ActionChains(driver)          for x in range(3):         print('Iteration - {iter}'.format(iter=x))         elem = driver.find_element_by_id('technologies-button')         mouse.click(elem).perform()         mouse.reset_actions()         print('Pausing after Technologies button')         mouse.pause(2)              elem = driver.find_element_by_id('references-guides-button')         mouse.click(elem).perform()         mouse.reset_actions()         print('Pausing after Reference guides button')         mouse.pause(2)              elem = driver.find_element_by_id('feedback-button')         mouse.click(elem).perform()         mouse.reset_actions()         print('Pausing after Feedback button')         mouse.pause(2)     driver.close()  if __name__ == ""__main__"":     action_chains_test()`  In this code, I am opening https://developer.mozilla.org/en-US/ and clicking on ""Technologies"", ""References & Guides"", ""Feedback"" at the top of that page, in that order, in a loop of 3 iterations. After clicking on each item, I do reset_actions() to clean up the actions queue. I was expecting these there items to be clicked 3 items one after the other. But if you run the code, you can see  Each item is clicked many more times than three Sometimes ""Technologies"" get clicked after ""Reference & Guides"" which is not in line with the code First iteration has fewer clicks, second has few more and the third iteration has even more. So later iterations are having more number of click This shows the reset_actions() does not seem to work and the actions get piled up in the queue.  ## To Reproduce Run the above code and observe how the buttons ""Technologies"", ""References & Guides"", ""Feedback"" at the top of that page gets clicked. It does not seem to be in line with what was expected based on the code above.  Detailed steps to reproduce the behavior:  ## Expected behavior The expected behavious was that the buttons ""Technologies"", ""References & Guides"", ""Feedback"" would be clicked one after the other in that order, three times. But it is being clicked many more times and also in different order  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:","closed","C-py,","peterjv26","2021-10-11T09:42:34Z","2022-02-01T00:07:46Z"
"","9680","Actions : Combination of keys not working","## üêõ Bug Report  I had a problem performing a combination of send keys to print pages ```CTRL + P``` or ```CTRL + SHIFT + P```. I tested this two combinations, they open window system ""print"" or internal chrome window, and not work at all.  Any other combination like ```CTRL + A``` (to select all page) if they don't have any window, works.  ## To Reproduce  1 - Start chrome webdriver any URL (google.com) 2 -  Send combination of keys  ```Csharp private static IWebDriver _driver; ... _driver = new ChromeDriver("".""); _driver.Navigate().GoToUrl(""https://www.google.com""); _driver.Manage().Window.Maximize(); ... Actions actionProvider = new Actions(_driver); IAction action = actionProvider.KeyDown(Keys.LeftControl).KeyDown(""p"").Build(); action.Perform(); ```  ## Expected behavior  CTRL + P, open chrome window to download the file: ![image](https://user-images.githubusercontent.com/32251732/126800495-83e83427-d097-47e0-9ef0-7670409460eb.png)  CTRL + SHIFT + P, open windows to print the file : ![image](https://user-images.githubusercontent.com/32251732/126800386-614b6154-a256-4857-a1ef-8d94abc40255.png)  ## Environment  OS: Windows 10 Enterprise, Version 20H2 Browser: Chrome  Browser version: 92.0.4515.107 (Official Build) (64-bit) Browser Driver version: ChromeDriver 92.0.4515.4300 Selenium Driver : nuget Selenium.WebDriver 3.141.0 Language Bindings version: CSharp 4.0.1","closed","needs-triaging,","diegomontania","2021-07-23T15:14:27Z","2021-09-05T07:50:20Z"
"","9426","ModuleNotFoundError: relative_locator.py file is not downloaded to local library","## üêõ Bug Report  I checked the downloaded selenium library version 3.13, relative_locator.py is not downloaded, hence it prompt problem when import it      from selenium.webdriver.support.relative_locator import with_tag_name ModuleNotFoundError: No module named 'selenium.webdriver.support.relative_locator'   ## To Reproduce  import the relative_locator.py file     from selenium.webdriver.support.relative_locator import with_tag_name  Detailed steps to reproduce the behavior:  ## Expected behavior  expected to be able to call the with_tag_name function   ## Test script or set of commands reproducing this issue   Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  OSX Browser: Chrome Browser version:90.0.4430.85  Browser Driver version: Unknown Language Bindings version: Python 3.9","closed","","honjiaxuan","2021-04-28T07:24:31Z","2021-09-05T08:06:40Z"
"","9014","@ symbol copies clipboard data","## üêõ Bug Report  I am working on a django project with python 3.9. I tried to test my app with the latest selenium. I followed this tutorial: https://www.ordinarycoders.com/blog/article/testing-django-selenium  The send_keys() method changes the @ symbol in the test email address to the clipboard data. So if I copy ‚Äúasd‚Äù and than run the tests, I get testasdgmail.com instead of test@gmail.com.  If I copy @ and run the tests afterwards, the tests will pass.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Should be test@gmail.com.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  class PlayerFormTest(LiveServerTestCase):  	def testform(self): 		selenium = webdriver.Chrome() 		#Choose your url to visit 		selenium.get('http://127.0.0.1:8000/') 		#find the elements you need to submit form 		player_email = selenium.find_element_by_id('id_email') 	  		submit = selenium.find_element_by_id('submit_button')  		#populate the form with data 		player_email.send_keys('test@gmail.com')  		#submit form 		submit.send_keys(Keys.RETURN)  		#check result; page source looks at entire html document 		assert 'test@gmail.com' in selenium.page_source  ## Environment  OS: Windows 10 Browser: Chrome Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","bernat97","2020-12-30T23:57:07Z","2021-09-05T08:25:09Z"
"","9513","Ruby, Selenium proxy configuration is ignored if there is authentication values","## üêõ Bug Report  I am using Selenium Version: 4.0.0.beta2  When I set a proxy with authentication configuration in the URL looks like the proxy is ignored  ## To Reproduce  When I run this Ruby script:  ``` proxy = Selenium::WebDriver::Proxy.new(http: ""185.235.41.85:80"") cap = Selenium::WebDriver::Remote::Capabilities.chrome(proxy: proxy) driver = Selenium::WebDriver.for(:chrome, capabilities: cap) driver.navigate.to(""http://httpbin.org/ip"") puts ""content: #{driver.page_source}"" driver.close ```  I get the proper proxy ip:  ``` {   ""origin"": ""185.235.41.85"" }  ```  But when I run this one:  ``` proxy = Selenium::WebDriver::Proxy.new(http: ""API_KEY:@proxy.crawlera.com:8011"") cap = Selenium::WebDriver::Remote::Capabilities.chrome(proxy: proxy) driver = Selenium::WebDriver.for(:chrome, capabilities: cap) driver.navigate.to(""http://httpbin.org/ip"") puts ""content: #{driver.page_source}"" driver.close ```  it is returning my ip instead of the proxy IP  ## Expected behavior  I expect the selenium request to be sent through the proxy  ## Test script or set of commands reproducing this issue  See above  ## Environment  OS: MacOS Catalina Browser: Chrome Browser version: 90.0.4430.212 Browser Driver version: ""chromedriverVersion"":""90.0.4430.24"" Language Bindings version: ruby 3.0.1p64","closed","R-awaiting answer,","fguillen","2021-05-25T17:03:46Z","2021-09-05T07:59:10Z"
"","9140","Driver.Dispose() throws ""Object reference not set to an instance of an object"" in 4.0.0-beta-1-prerelease-20210201","## üêõ Bug Report  I am using c# Selenium binding version **4.0.0-alpha07** and trying to run a simple test on a grid **4.0.0-beta-1-prerelease-20210201**, noticed that Driver.Dispose() throws exception. Selenium grid seems to be holding the session and then eventually removing it as stale. A test code to reproduce this issue can be found here https://github.com/mcopjan/SeleniumConcurrentSessionTests  docker compose file [docker-compose_fullgrid.yml.zip](https://github.com/SeleniumHQ/selenium/files/5925153/docker-compose_fullgrid.yml.zip)  logs [DriverDisposeException_seleniumLogs.log](https://github.com/SeleniumHQ/selenium/files/5925164/DriverDisposeException_seleniumLogs.log)  Please note that previous prerelease **4.0.0-beta-1-prerelease-20210128** does not exhibit this issue.","closed","C-dotnet,","mcopjan","2021-02-04T10:53:04Z","2021-09-05T08:19:12Z"
"","9502","Selenium Sendkeys does not send full keys to React input field","## üêõ Bug Report  I am using Browser Stack to run my Selenium test. In the test, the SendKeys(""12345"") is used to type this number ""12345"" in the ""zipcode"" input field.  During test execution, when the send keys command enters 12345, it enters only the first character ""1"". Then the rest of the ""2345"" are not entered in the input field.  When it sends the key ""1"", the form validation kicks in and throws an error message that the zipcode entered is not correct and the sendKeys stops entering the rest of the input (""2345"")     Detailed steps to reproduce the behavior:  ## Test script or set of commands reproducing this issue  Tried various ways such as doing javascript focus() in the field to enter the next character but it did not help. All of the commands I put are executed fine in the BrowserStack logs but the recorded video showed it stops entering the rest of the zipcode after sending the first number in the zip code. The test executes all the commands but still does not do enter all 5 digits.   WebElement element = driver.findElement(By.cssSelector(""input[id\$=zipcode]""));  Attempt # 1:  JavascriptExecutor jsExecutor = (JavascriptExecutor) driver; jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""1"") // 1 is entered fine  jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""2"") // no more digits entered in teh input from there althought execution logs shows sending keys  jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""3"") jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""4"") jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""5"")  Attempt # 2: tried setting full 12345 number for the value attribute in the input and then triggered the focus and blur methods. It did not help  JavascriptExecutor jsExecutor = (JavascriptExecutor) driver;   jsExecutor.executeScript(""document.querySelector('input[id\$=complainantZip]').value='12345';"");   jsExecutor.executeScript(""document.querySelector('input[id\$=complainantZip]').focus();"");   jsExecutor.executeScript(""document.querySelector('input[id\$=complainantZip]').blur();"");*/  Can you please help why the sendkeys is not working ?  ##  Environment OS version:  iOS 14.4 Browser: Safari Browser Device: iPhone 12 Pro Appium version: 1.20.2 React version: 17.0.1","closed","R-awaiting answer,","KrishnaVivekanandan","2021-05-21T15:28:04Z","2021-09-05T08:01:12Z"
"","9472","does not pass args capability to geckodriver","## üêõ Bug Report  I am unable to append options to the `geckodriver` [args capability](https://developer.mozilla.org/en-US/docs/Web/WebDriver/Capabilities/firefoxOptions) via the [desired_capabilities](https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.firefox.webdriver) parameter.    ## To Reproduce  I am running this: ``` #!/usr/bin/env python  from selenium.webdriver import Firefox, DesiredCapabilities import time  capabilities = DesiredCapabilities.FIREFOX.copy() capabilities['args'] = [""-headless""]  print(capabilities)  webdriver = Firefox(desired_capabilities=capabilities) webdriver.get(""https://google.com"")  while 1:     time.sleep(0.1) ```  ## Expected behavior  A *headless* instance visiting `google.com`, as I gather from the [docs](https://developer.mozilla.org/en-US/docs/Web/WebDriver/Capabilities/firefoxOptions): the `-headless` string being one of the members of the `args` array should mandate that headlessness.  ## Actual behavior  A *visible* window.   ## Test script or set of commands reproducing this issue  Provided above.   ## Environment  OS: `Linux x86_64` Browser: `Firefox` Browser version: `Mozilla Firefox 88.0.1` Browser Driver version: `geckodriver 0.29.0` Language Bindings version: `Python`'s `selenium 3.141.0` [package](https://pypi.org/project/selenium/)  ## Additional info I have that other types of `args` are not passed either. For instance, `capabilities['args'] = [""-profile"", """"]` does not result in `geckodriver` using that existing profile, as suggested by [the docs](https://developer.mozilla.org/en-US/docs/Web/WebDriver/Capabilities/firefoxOptions) that it should.","closed","needs-triaging,","stuart-little","2021-05-13T04:27:02Z","2021-09-05T08:03:28Z"
"","9364","Webdriver opens browser with ""data:"" and times out","## üêõ Bug Report  I am trying to open chrome browser in my company network and navigating to http://www.google.com. From code it opens browser with ""data:"" and not doing anything until it timeout. But the same script works with headless. I get the same issue with edge browser as well  ## To Reproduce  System.setProperty(""webdriver.chrome.driver"", ""C:\\driver\\chromedriver.exe"");  ChromeOptions o = new ChromeOptions();   o.setBinary(""C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe"");         o.setExperimentalOption(""useAutomationExtension"", false);         o.addArguments(""--no-sandbox"");         o.addArguments(""--disable-extensions""); WebDriver driver = new ChromeDriver(o);  driver.get(""https://www.google.com"");  Error: [1617879375.127][SEVERE]: Timed out receiving message from renderer: 600.000 Exception in thread ""main"" org.openqa.selenium.SessionNotCreatedException: session not created from timeout: Timed out receiving message from renderer: 600.000   (Session info: chrome=88.0.4324.150)   (Driver info: chromedriver=2.43.600210 (68dcf5eebde37173d4027fa8635e332711d2874a),platform=Windows NT 10.0.18363 x86_64) (WARNING: The server did not provide any stacktrace information) Command duration or timeout: 600.96 seconds Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z' System info: host: 'GBMLVVCSW6604', ip: '', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161' Driver info: driver.version: ChromeDriver 	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) 	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source) 	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source) 	at java.lang.reflect.Constructor.newInstance(Unknown Source) 	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214) 	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$new$0(JsonWireProtocolResponse.java:53) 	at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$getResponseFunction$2(JsonWireProtocolResponse.java:91) 	at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:122) 	at java.util.stream.ReferencePipeline$3$1.accept(Unknown Source) 	at java.util.Spliterators$ArraySpliterator.tryAdvance(Unknown Source) 	at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source) 	at java.util.stream.AbstractPipeline.copyInto(Unknown Source) 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source) 	at java.util.stream.FindOps$FindOp.evaluateSequential(Unknown Source) 	at java.util.stream.AbstractPipeline.evaluate(Unknown Source) 	at java.util.stream.ReferencePipeline.findFirst(Unknown Source) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:125) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:73) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:212) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:130) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:181) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:168) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:157)","closed","R-awaiting answer,","arul1981","2021-04-08T10:59:05Z","2021-09-05T08:08:34Z"
"","9398","Webdriver is unable to click Authorize button on Install GitHub Apps window","## üêõ Bug Report  I am signing up for Org A using my GitHub credentials. Org A use OAuth type for signing up. When I click on Sign in with GitHub, I am asked to install and Authorize OrgA app on GitHub. I am trying to do this using Selenium WebDriver by providing GitHub username and password. I can login to GitHub but unable to click on 'Authorize ' button. Click event is not happening. Tried with Actions and JavaScript Executor.  Refer below details for more info.  Steps: 1. Go to OrgA Sign In page and click on Sign in with GitHub option. (This action redirects to GitHub Sign in page) 2. Provide username and password.  3. If this is first time login, GitHub will verify device. Verify device from received email.  4. Click 'Authorize ' button. Refer below screen. ![image](https://user-images.githubusercontent.com/7582696/115355280-232b9a00-a1d8-11eb-949f-bc213a0547db.png)  I am unable to click 'Authorize' button.  Getting same issue with chromedriver, msedgedriver and firefoxdriver  Other details: Platform=Windows 10 ScreenResolution=(1382, 744) ChromeBrowserVersion=90.0.4430.72 FirefoxBrowserVersion=85.0.2 MSEdgeBrowserVersion=89.0.774.77 ChromeDriverVersion:89.0.4389.23 MSEdgeDriverVersion:89.0.774.68 FirefoxDriverVersion:v0.29.1 Language Bindings version: Java 1.8.171","closed","R-awaiting answer,","shekharsvbhosale","2021-04-20T07:56:30Z","2021-09-05T08:06:43Z"
"","9314","Timeout set to 10 minutes, but timing out after 3 minutes","## üêõ Bug Report  I am setting the timeout to 10 minutes because I am using https://github.com/scrapinghub/crawlera-headless-proxy  I am seeing it timeout after 3 minutes (still downloading all of the JS/CSS files)  ## To Reproduce  Set page load timeout to 10 minutes  ## Expected behavior  Expecting it to timeout after 10 minutes, not 3.  ## Test script or set of commands reproducing this issue  ```java driver.manage().timeouts().pageLoadTimeout(Duration.ofMillis(600000)); driver.manage().timeouts().setScriptTimeout(Duration.ofMillis(600000));  try { driver.get(uRL.toExternalForm()); } catch (TimeoutException te2) { log.warn(""Chrome Driver thread timed out: "" + uRL.toExternalForm()); } ```  ## Environment  OS: Windows Browser: Chrome Browser version: Version 89.0.4389.90 (Official Build) (64-bit) Browser Driver version: ChromeDriver 89.0.4389.23 Language Bindings version: Java 8 Selenium Grid version (if applicable): Beta 2","closed","C-java,","githubuser100007","2021-03-21T04:08:32Z","2021-09-05T08:03:33Z"
"","9315","PageLoadStrategy.NONE or .EAGER doesn't seem to work","## üêõ Bug Report  I am setting the page loading strategy to NONE or EAGER, but I can see .CSS and .JS files being downloaded.  ## To Reproduce  See code below  ## Expected behavior  Expecting the CSS and JS files not to be downloaded.  ## Test script or set of commands reproducing this issue    ```java driver = createDriver(useProxy); 					try { 						driver.get(uRL.toExternalForm()); 					} catch (TimeoutException te2) { 			    		log.warn(""Chrome Driver thread timed out: "" + uRL.toExternalForm()); 					}      protected WebDriver createDriver(boolean useProxy) {     	     	ChromiumDriver driver = null; 		try {   	    	ChromeOptions options;   			if (isWindows) { 				 				options = new ChromeOptions();   				options.setBinary(""C:/Program Files (x86)/Google/Chrome/Application/chrome.exe""); //TODO make catalogControl 				 			} else { // linux 				 				options = new ChromeOptions();   				options.setBinary(""/usr/bin/chrome"");   			}  			//remove unexepectedalertexceptions 			options.addArguments(""--silent"", ""--headless"", ""--blink-settings=imagesEnabled=false"", ""--disable-blink-features"", ""--disable-blink-features=AutomationControlled"", ""--disable-gpu"", ""--no-sandbox"", ""--window-size=1920,1200"", ""--ignore-certificate-errors"", ""--disable-application-cache"");   			options.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);  			//ignore SSL certificate errors 			options.setCapability(CapabilityType.ACCEPT_SSL_CERTS, true); 	  		options.setCapability(CapabilityType.ACCEPT_INSECURE_CERTS, true); 	  		 	  		if (useProxy) { 	  			log.info(""creating proxy""); 				Proxy proxy = new Proxy();  				proxy.setHttpProxy(""localhost:3128"");  				proxy.setSslProxy(""localhost:3128"");  	            options.setCapability(CapabilityType.PROXY, proxy); 	  		} 	  		 			// no downloads 			Map chromePrefs = new HashMap(); 			chromePrefs.put(""download_restrictions"", 3); 			options.setExperimentalOption(""prefs"", chromePrefs);              LoggingPreferences logPrefs = new LoggingPreferences();             logPrefs.enable(LogType.PERFORMANCE, Level.ALL);             options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);             options.setCapability( ""goog:loggingPrefs"", logPrefs );              options.setPageLoadStrategy(PageLoadStrategy.NONE); // or EAGER, both are not working  			DriverService.Builder serviceBuilder = new ChromeDriverService.Builder().withSilent(true); 			ChromeDriverService chromeDriverService = (ChromeDriverService)serviceBuilder.build();   			if (!isWindows) { 				chromeDriverService.sendOutputTo(new FileOutputStream(""/dev/null"")); 			} 			 			//TODO: Need to be able to use a proxy 			 			int localRetryCount2 = 0; 			boolean lastRequestGood2 = false;         	while (localRetryCount2 < 3 && !lastRequestGood2){ 				try { 					driver = new ChromeDriver(chromeDriverService, options);  					// Inject Core Web Vitals scripts 					Map parameters = new HashMap(); 					parameters.put(""source"",webVitalsSnippet); 					driver.executeCdpCommand(""Page.addScriptToEvaluateOnNewDocument"", parameters);  					// Stop any unwanted downloading of *.pdf *.crdownload et al. files 					parameters = new HashMap(); 					parameters.put(""behavior"",""deny""); 					driver.executeCdpCommand(""Browser.setDownloadBehavior"", parameters); 					 					lastRequestGood2 = true;  				} catch (Exception e) { 					log.warn(""localRetryCount2: "" + localRetryCount2,e); 					Thread.sleep(5000); 					localRetryCount2++; 				}         	}         	         	if (!lastRequestGood2) {         		log.fatal(""Unable to create ChromeDriver after 3 retries..."");         	}         	         	if (useProxy) {         		                         driver.manage().timeouts().pageLoadTimeout(Duration.ofMillis(JAVASCRIPT_PROXY_PARSER_TIMEOUT_IN_MILLIS));         		driver.manage().timeouts().setScriptTimeout(Duration.ofMillis(JAVASCRIPT_PROXY_PARSER_TIMEOUT_IN_MILLIS));         	} else {         		driver.manage().timeouts().pageLoadTimeout(Duration.ofMillis(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS));         		driver.manage().timeouts().setScriptTimeout(Duration.ofMillis(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS));         	} 			 		} catch (Exception e) {  			log.error("""",e);  		} 		 		return driver;      } ```  ## Environment  OS: Windows Browser: Chrome Browser version: Version 89.0.4389.90 (Official Build) (64-bit) Browser Driver version: ChromeDriver 89.0.4389.23 Language Bindings version: Java 8 Selenium Grid version (if applicable): Beta 2","closed","C-java,","githubuser100007","2021-03-21T04:37:02Z","2021-09-05T08:10:31Z"
"","9159","Can not connect to the Service /usr/local/bin/geckodriver","## üêõ Bug Report  I am no longer able to achieve a successful instance of either chromedriver or geckodriver (both).    ```sh Traceback (most recent call last):                                                File ""~/projectfolder/scraper/test.py"", line 25, in      browser = webdriver.Firefox(options=options, service=service)                                                                                                 File ""/usr/lib/python3/dist-packages/selenium/webdriver/firefox/webdriver.py"", line 164, in __init__     self.service.start()                                                                                                                                          File ""/usr/lib/python3/dist-packages/selenium/webdriver/common/service.py"", line 104, in start     raise WebDriverException(""Can not connect to the Service %s"" % self.path)                                                                                   selenium.common.exceptions.WebDriverException: Message: Can not connect to the Service /usr/local/bin/geckodriver  ```  **Yes, I do have `127.0.0.1 localhost` in my /etc/hosts file, and the error is not dependent on which user I am running the script as.**  ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  Expected to get a running instance of webdriver to open up and navigate to the desired page.  ## Test script or set of commands reproducing this issue  For troubleshooting I am merely running a test script to get selenium to work. My code is as follows:     ```python #!/usr/bin/env python3 # -*- coding: utf-8 -*-  from selenium import webdriver #from selenium.webdriver.chrome.service import Service #from selenium.webdriver.chrome.options import Options from selenium.webdriver.firefox.service import Service from selenium.webdriver.firefox.options import Options  # Options options = Options()  ## Enable headless options.headless = False  # Specify custom geckodriver path #service = Service('bin/chromedriver') service = Service('/usr/local/bin/geckodriver')  # Test #browser = webdriver.Chrome(options=options, service=service) browser = webdriver.Firefox(options=options, service=service) browser.get('https://dev.to') print(browser.title) browser.quit() ``` All of which results in selenium timing out waiting for a instance of webdriver to start.  ## Environment  OS: Kali Linux Rolling Release Python: Python 3.9 Selenium Release: latest release Browser: ChromeDriver 88.0.4324.146 (406dc88511162d6598242f2c709be1414a042fb0-refs/branch-heads/4324@{#2088})","closed","C-py,","anoduck","2021-02-08T22:20:41Z","2021-09-05T08:19:06Z"
"","9889","Possible concurrency issue in DevTools","## üêõ Bug Report  I am intercepting traffic using the org.openqa.selenium.devtools.v93.fetch.Fetch class. In rare cases a TimeoutException ``Unable to process: {""method"":""Fetch.requestPaused"", ...`` is raised while calling Fetch.continueRequest.  I would suspect there an concurrency issue in the DevTools. The command is send and Selenium is waiting for the ""okay"" answer from the browser. Concurrently the browser is sending another ""Fetch.requestPaused"" event that can not be processed at this time.  ``` [WARNING] 00:00:30 Unable to process: {""method"":""Fetch.requestPaused"",""params"":{""requestId"":""interception-job-35.0"",""request"":{""url"":""https://**removed**"",""method"":""GET"",""headers"":{**removed**}]},""sessionId"":""0DC762612D7CDDB09AB67995EB18CC02""} [WARNING]          org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException [WARNING]          Build info: version: '4.0.0-rc-2', revision: '8d1e4aa5ae' [WARNING]          System info: host: '**removed**', ip: '**removed**', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12' [WARNING]          Driver info: driver.version: unknown [WARNING]          	at org.openqa.selenium.devtools.Connection.sendAndWait(Connection.java:161) [WARNING]          	at org.openqa.selenium.devtools.DevTools.send(DevTools.java:70) [WARNING]          	at **removed**.TestCase.lambda$__register_devtools$3(TestCase.java:146) [WARNING]          	at org.openqa.selenium.devtools.Connection.lambda$handle$6(Connection.java:288) [WARNING]          	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) [WARNING]          	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) [WARNING]          	at java.base/java.util.stream.ReferencePipeline$11$1.accept(ReferencePipeline.java:442) [WARNING]          	at java.base/java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1603) [WARNING]          	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) [WARNING]          	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) [WARNING]          	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) [WARNING]          	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) [WARNING]          	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) [WARNING]          	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) [WARNING]          	at org.openqa.selenium.devtools.Connection.handle(Connection.java:257) [WARNING]          	at org.openqa.selenium.devtools.Connection.access$200(Connection.java:58) [WARNING]          	at org.openqa.selenium.devtools.Connection$Listener.lambda$onText$0(Connection.java:199) [WARNING]          	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [WARNING]          	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [WARNING]          	at java.base/java.lang.Thread.run(Thread.java:829) [WARNING]          	... 1 skipped [WARNING]          Caused by: java.util.concurrent.TimeoutException [WARNING]          	at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1886) [WARNING]          	at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2021) [WARNING]          	at org.openqa.selenium.devtools.Connection.sendAndWait(Connection.java:150) [WARNING]          	... 19 more ```  The code in the TestCase.java is: ``` line 145:            // continuing the request  line 146:            devTools.send(Fetch.continueRequest( line 147:                    requestId, Optional.empty(), Optional.empty(), line 148:                    Optional.empty(), Optional.empty() line 149:            )); ```  ## To Reproduce  I am not able to reproduce, i will try when i am back to office in a view days.  ## Environment  OS: Windows 10 x64 Browser: Chrome Browser version: 94.0.4606.71 Browser Driver version: 94.0.4606.61 Language Bindings version: Java, Selenium 4 rc2 Selenium Grid version (if applicable):","closed","C-java,","joerg1985","2021-10-07T10:07:37Z","2022-02-08T00:07:49Z"
"","9595","Issues with decorated remotewebdrivers","## üêõ Bug Report  I am getting an error when trying perform an action(new Actions(decoratedRemoteDriver);) using a decorated remote driver. Also the issue from  case [9416](https://github.com/SeleniumHQ/selenium/issues/9416) about casting back to remotewebdriver from the decorated webdriver is still happening, do i reopen that case?  ```` [20][Firefox] Failure: org.openqa.selenium.json.JsonException: java.lang.reflect.InvocationTargetException Build info: version: '4.0.0-beta-4', revision: '29f46d02dd' System info: host: 'MTYLP111', ip: '10.1.249.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16' Driver info: org.openqa.selenium.remote.RemoteWebDriver Command: [f5415541-00ab-4449-a8f9-939f351b36da, actions {actions=[org.openqa.selenium.interactions.Sequence@4bcade81]}] Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 89.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20210527174632, moz:debuggerAddress: localhost:59093, moz:geckodriverVersion: 0.29.1, moz:headless: false, moz:processID: 3480, moz:profile: C:\Users\rgonzalezv\AppData..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, se:cdp: ws://10.1.3.27:4444/session..., se:cdpVersion: 85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify} Session ID: f5415541-00ab-4449-a8f9-939f351b36da [20][Firefox] Stacktrace: org.openqa.selenium.json.SimplePropertyDescriptor.lambda$getPropertyDescriptors$1(SimplePropertyDescriptor.java:107) org.openqa.selenium.json.JsonOutput.mapObject(JsonOutput.java:392) org.openqa.selenium.json.JsonOutput.lambda$new$31(JsonOutput.java:207) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) java.base/java.util.HashMap.forEach(HashMap.java:1425) org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169) java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) java.base/java.util.LinkedList$LLSpliterator.forEachRemaining(LinkedList.java:1242) java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) java.base/java.util.HashMap.forEach(HashMap.java:1425) org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.convertUsingMethod(JsonOutput.java:360) org.openqa.selenium.json.JsonOutput.lambda$new$16(JsonOutput.java:154) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.lambda$new$22(JsonOutput.java:169) java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179) java.base/java.util.Iterator.forEachRemaining(Iterator.java:133) java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596) org.openqa.selenium.json.JsonOutput.lambda$new$23(JsonOutput.java:169) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.lambda$new$24(JsonOutput.java:182) com.google.common.collect.SingletonImmutableBiMap.forEach(SingletonImmutableBiMap.java:65) org.openqa.selenium.json.JsonOutput.lambda$new$25(JsonOutput.java:177) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:287) org.openqa.selenium.json.JsonOutput.write(JsonOutput.java:278) org.openqa.selenium.json.Json.toJson(Json.java:42) org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:253) org.openqa.selenium.remote.codec.AbstractHttpCommandCodec.encode(AbstractHttpCommandCodec.java:127) org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:172) org.openqa.selenium.remote.TracedCommandExecutor.execute(TracedCommandExecutor.java:39) org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:612) org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:680) java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.base/java.lang.reflect.Method.invoke(Method.java:567) org.openqa.selenium.support.decorators.WebDriverDecorator.call(WebDriverDecorator.java:228) org.openqa.selenium.support.decorators.DefaultDecorated.call(DefaultDecorated.java:48) org.openqa.selenium.support.decorators.WebDriverDecorator.lambda$createProxy$0(WebDriverDecorator.java:287) jdk.proxy2/jdk.proxy2.$Proxy17.perform(Unknown Source) org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:617) org.openqa.selenium.interactions.Actions.perform(Actions.java:573) com.peektraffic.spinnaker.TestNgTestBase.initDriver(TestNgTestBase.java:591) com.peektraffic.spinnaker.TestNgTestBase.init(TestNgTestBase.java:164) com.peektraffic.spinnaker.Help.Test_Help.help_ExplorerIcon(Test_Help.java:139) java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78) java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) java.base/java.lang.reflect.Method.invoke(Method.java:567) org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598) org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:77) org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:15) java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130) java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630) java.base/java.lang.Thread.run(Thread.java:831) ````   ## To Reproduce   1. Create a new remote webdriver 2. implement a listener 3. decorate the remotewebdriver with EventFiringDecorator 4. Create a new Actions using the decorated driver 5. Perform the action    ## Expected behavior The code should behave the same regardless of if it is done by a remotewebdriver or a decorated remotewebdriver  ## Test script or set of commands reproducing this issue ```  		EventListener eventListener = new EventListener();  		 		Long start = System.currentTimeMillis(); 		while (true) 		{ 			if (System.currentTimeMillis() - start >= MAX_TRY_MS.get()) 			{ 				fail(threadId.get() + ""Couldn't Start driver within "" + MAX_TRY_MS.get() + "" ms.""); 			} 			try 			{ 				log(Status.INFO, ""Initializing EventFiringWebDriver.."");  				remoteDriver = new RemoteWebDriver(new URL(data.get(""REMOTE_HUB_LOCATION"")), capabilities);  				break; 			} 			catch (Exception e) 			{ 				Thread.sleep(5000); 				// log(Status.INFO, ""Exception ""+ e); 			}  		} 		remoteDriver.get(""http://www.google.com""); 		Actions Actions = new Actions(remoteDriver); 		Actions.moveToElement(remoteDriver.findElement(By.cssSelector(""body""))); 		Actions.click(); 		Actions.perform(); 		// envelop remotedriver into eventfiring webdriver 		log(Status.INFO, ""Remotewebdriver session ID : "" + remoteDriver.getSessionId()); 		log(Status.INFO, ""Driver: "" + remoteDriver.toString()); 		eventDriver.set(new EventFiringDecorator(eventListener).decorate(remoteDriver)); 		Actions Actionsdeco = new Actions(eventDriver.get()); 		Actionsdeco.moveToElement(eventDriver.get().findElement(By.cssSelector(""body""))); 		Actionsdeco.click();                 //crashes on the the perform below 		Actionsdeco.perform(); ```  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 85 Browser Driver version: GeckoDriver 0.29.1 Language Bindings version: Java Selenium 4 beta 4 Selenium Grid version (if applicable): Selenium 4 beta 4","closed","C-java,","adngzz","2021-06-18T14:43:25Z","2021-09-05T07:50:35Z"
"","9441","CDP capture HTTP request response codes errors","## üêõ Bug Report  I am following [this guide](https://applitools.com/blog/selenium-4-chrome-devtools/#h.bc0ghombcetz) to capture HTTP requests. When I try to log the response codes, I get an error. `java.util.NoSuchElementException: No value present`  Complete log: [out.zip](https://github.com/SeleniumHQ/selenium/files/6423635/out.zip)    ## To Reproduce    Detailed steps to reproduce the behavior:  See attached java code: [ResponseCodeTest.zip](https://github.com/SeleniumHQ/selenium/files/6423622/ResponseCodeTest.zip)  ## Expected behavior  A clear and concise description of what you expected to happen.  I would like the CDP to not throw errors. If the requested data is not available, supply something like `n/a` or even `null`.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Linux  Browser: Chromium  Browser version: 90.0.4430.72  Browser Driver version: 90.0.4430.24  Language Bindings version: Java 4.0.0-beta-3   Selenium Grid version (if applicable): n/a","closed","C-java,","SiKing","2021-05-04T20:10:30Z","2022-01-08T00:07:12Z"
"","9020","Inconsistent implementation of find element from element","## üêõ Bug Report  https://www.w3.org/TR/webdriver/#find-element-from-element  Does the search from found element includes the element itself or only what is inside it? From Specs rather first, I would say. The following example shows inconsistency in (at least) Java implementation of Selenium 3.    ## To Reproduce  DOM:  ```html  	Text  ```  ```java driver.get(""https://the-internet.herokuapp.com/""); WebElement root=driver.findElement(By.cssSelector(""#content"")); System.out.println(root.findElement(By.cssSelector(""h1"")).getText()); // Text System.out.println(root.findElement(By.cssSelector(""#content h1"")).getText()); // Text System.out.println(root.findElement(By.cssSelector(""#content"")).getText()); // org.openqa.selenium.NoSuchElementException      ```  The output lines 2 and 3 shows inconsistency: the former search is successful, the latter not.    ## Expected behavior  It's hard to get to what is expected (long live the ""specs by example"" approach). Intuitively I would expect both lines to fail, but the Spec (link above) rather suggests ""using the found element as __start node__"", so then it should be included in scope, isn't it - both lines pass. Anyway - consistency is expected.   ## Environment  Language Bindings version: Java 3.141.59","closed","needs-triaging,","vinogradoff","2021-01-03T23:49:18Z","2021-09-05T08:27:41Z"
"","9542","Unable to reproduce user behavior with selenium on Python","## üêõ Bug Report  Hi.  I am trying to register a user in this practice site: http://practice.automationtesting.in/my-account/  The process is very simple, write a user-email, write a password and then click on register button.  As user, you manually do the steps before describe and you could register a user. but if you do with selenium, you can't do it.  I discovered that manually you have a message about strong or weak password, and this message doesn't appear with selenium. But there are more. If I use record and play process with selenium IDE, I can reproduce the user behave, as I show in the video.  https://user-images.githubusercontent.com/37479902/120584864-1c16bf00-c407-11eb-914a-48fa00e22817.mov   I tried with Chrome and Firefox, but the result was the same.  So, I share technical information.  ``` OS: Windows 10 x64 Python: 3.9.3 Pytest: 6.2.4 Selenium: 3.141.0 Chrome:  91.0.4472.77 Firefox: 89.0 Selenium IDE: 3.17.0 ```  I also share the Python script: ``` import pytest from selenium import webdriver from selenium.common.exceptions import TimeoutException from selenium.webdriver.common.by import By from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.support import  expected_conditions as ec   driver = None def setup():     global driver     chrome_driver_path = #path to chrome driver     gecko_driver_path =  #path to gecko driver     url = 'http://practice.automationtesting.in/my-account/'      browser = 'chrome'     if browser == 'chrome':         driver = webdriver.Chrome(executable_path=chrome_driver_path)     elif browser == 'firefox':         driver = webdriver.Firefox(executable_path=gecko_driver_path)     else:         raise ValueError('Invalid Browser')      driver.maximize_window()     driver.set_page_load_timeout(10)     driver.implicitly_wait(5)     try:         driver.get(url)     except TimeoutException:         print('Page not load')         driver.quit()  def test_register_user():     test_data = {         'username' : 'user_mail_test@gmail.com',         'password' : 'StR0nGp4AsSw0Rd'     }     driver.find_element_by_id('reg_email').send_keys(test_data['username'])     driver.find_element_by_id('reg_password').send_keys(test_data['password'])     wait_driver = WebDriverWait(driver,5,0.2)     try:         button = wait_driver.until(ec.element_to_be_clickable((By.NAME,'register')))         button.click()     except TimeoutException:         pytest.fail('Register button is not clickable')   def teardown():     driver.quit() ``` To execute the script I use: ``` python -m pytest path\to\script.py ```  What could be happening?","closed","","dsgon","2021-06-03T05:35:34Z","2021-09-05T08:01:11Z"
"","8930","internal selenium guava confiltc","## üêõ Bug Report  Hi, when im importing selenium with gradle I have a strange conflict with guava versions. 30-jre is replaced by 28-android which causes to  `Exception in thread ""main"" java.lang.NoSuchMethodError: 'java.util.stream.Collector com.google.common.collect.ImmutableList.toImmutableList()' 	at org.openqa.selenium.chrome.ChromeOptions.asMap(ChromeOptions.java:292) 	at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:94) 	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68) 	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:131) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:144)`  ## To Reproduce  `dependencies {     implementation project("":commons:shared"")      api group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'     compile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.0.0-alpha-7'     //compile group: 'com.google.guava', name: 'guava', version: '30.0-jre' //even when override guava, the 28-android is used  }`  and call:  `RemoteWebDriver(URL(""http://localhost:4444/wd/hub""), ChromeOptions())`  Detailed steps to reproduce the behavior:  new project with gradle and java 11, use this build.gradle snipet  ## Expected behavior  guava not crash  OS: macos: 10.15.7","closed","needs-triaging,","PiotrBandurski","2020-12-02T17:43:49Z","2021-09-05T08:30:15Z"
"","9718","Some chrome tasks still running on background after quit() method called","## üêõ Bug Report  Hi, I tried to migrate our project to Selenium 4 (beta-4) and run all our scenarios. I faced the issue with still running chrome tasks (4-5 from 20) on background even if `quit()` method was called and browser windows were closed. This issue happens when i'm running tests in parallel.   Here is a log with some exceptions from Selenium itself. The exception is **_St√°vaj√≠c√≠ p≈ôipojen√≠ bylo vynucenƒõ ukonƒçeno vzd√°len√Ωm hostitelem_** which means **An existing connection was forcibly closed by the remote host**  These tasks takes a lot of CPU.  ![image](https://user-images.githubusercontent.com/15084479/128237172-5751d82b-7ab6-4291-b252-4c3b0d8a50c7.png)  ``` 20:15:14.910 [AsyncHttpClient-1-4] . TRACE WebSocket08FrameEncoder - Encoding WebSocket Frame opCode=8 length=26 20:15:14.910 [AsyncHttpClient-1-4] . TRACE LoggingHandler - [id: 0xcee2ef77, L:/127.0.0.1:64035 - R:localhost/127.0.0.1:65124] WRITE: 32B          +-------------------------------------------------+          |  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f | +--------+-------------------------------------------------+----------------+ |00000000| 88 9a 0c 92 4e ce 0f 7a 19 ab 6e d6 3c a7 7a f7 |....N..z..n.","closed","","hornyja4","2021-08-04T18:45:01Z","2021-09-05T09:36:31Z"
"","9616","Selenium hangs while initializing the RemoteWebDriver object after 16 test cases run without error.","## üêõ Bug Report  Hi, Selenium hangs while initializing the RemoteWebDriver object after 16 test cases run without error.    ## To Reproduce   ## Expected behavior  I am testing a network device's GUI which has capable of switching and routing. I have around 20 selenium test cases runing on the Jenkins environment daily. Recently my test cases started to hang on Jenkins. In the beginning I had no issue running my test cases but after the number of test cases reached 16, 17th test case is not starting because it hangs while creating the RemoteWebDriver object.  ## Test script or set of commands reproducing this issue  **These are the Chrome Options I use:**  ``` case ""chrome"": options = new ChromeOptions(); options.setPageLoadStrategy(PageLoadStrategy.NONE);  options.addArguments(""--no-proxy-server""); options.addArguments(""--no-sandbox""); options.addArguments(""--enable-automation""); options.addArguments(""--headless""); options.addArguments(""--disable-dev-shm-usage""); options.addArguments(""--disable-browser-side-navigation""); options.addArguments(""--ignore-certificate-errors""); options.addArguments(""--disable-gpu""); break; ```  **This is how initialize the remote web driver and the session.**  ``` 	try { 		URL rURL = new URL(webDriverUrl); 		baseWd = new RemoteWebDriver(rURL, options); // CODE HANGS HERE  10:41:29.524 INFO [RequestHandler.process] - Got a request to create a new session: Capabilities {browserName: chrome, goog:chromeOptions: {args: [--no-proxy-server, --no-sandbox, enable-automation, --headless, --disable-dev-shm-usage, --disable-browser-side-navi..., --ignore-certificate-errors, --disable-gpu], extensions: []}, pageLoadStrategy: none} > 10:41:29.525 DEBUG [ProxySet.getNewSession] - Available nodes: [http://127.0.0.1:5555] > 10:41:29.525 DEBUG [BaseRemoteProxy.getNewSession] - Trying to create a new session on node http://127.0.0.1:5555 > 10:41:29.525 INFO [TestSlot.getNewSession] - Trying to create a new session on test slot {server:CONFIG_UUID=e28171f1-ccb8-4b0b-8c81-f98b642fc5ba, seleniumProtocol=WebDriver, webdriver.chrome.driver=C:/WebDriver/bin/chromedriver.exe, browserName=chrome, takesScreenshot=false, maxInstances=10, platformName=WIN10, cleanSession=true, platform=WIN10} > 10:51:31.478 WARN [SessionCleanup.null] - session ext. key 12bcf7df07867b0d973e26690d61de40 has TIMED OUT due to client inactivity and will be released. > 10:51:31.487 WARN [DefaultRemoteProxy.beforeRelease] - Error releasing the resources on timeout for session ext. key 12bcf7df07867b0d973e26690d61de40  **And node logs:** > 10:41:29.539 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.BeginSession@395dc459 > 10:41:29.539 DEBUG [WebDriverServlet.lambda$handle$0] - /session: Executing POST on /session (handler: BeginSession) > 10:41:29.544 INFO [ActiveSessionFactory.apply] - Capabilities are: { >   ""browserName"": ""chrome"", >   ""goog:chromeOptions"": { >     ""args"": [ >       ""--no-proxy-server"", >       ""--no-sandbox"", >       ""--enable-automation"", >       ""--headless"", >       ""--disable-dev-shm-usage"", >       ""--disable-browser-side-navigation"", >       ""--ignore-certificate-errors"", >       ""--disable-gpu"" >     ], >     ""extensions"": [ >     ] >   }, >   ""pageLoadStrategy"": ""none"" > } > 10:41:29.544 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService) > 10:41:29.546 DEBUG [UrlChecker.waitUntilAvailable] - Waiting for [http://localhost:5831/status] > 10:41:29.547 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:5831/status > 10:41:30.061 DEBUG [UrlChecker.lambda$waitUntilAvailable$1] - Polling http://localhost:5831/status > 10:41:30.068 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@605447375 pairs: {GET /status HTTP/1.1: null}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:41:30.070 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@2556d5594 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 247}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} > 10:41:30.782 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C > 10:41:30.783 DEBUG [RemoteWebDriver.log] - Executing: newSession [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\ScalanceX\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:60218}, networkConnectionEnabled: false, pageLoadStrategy: none, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}}] > 10:41:30.783 DEBUG [RemoteWebDriver.log] - Executed: [null, newSession {desiredCapabilities=Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.106, chrome: {chromedriverVersion: 91.0.4472.19 (1bf021f248676..., userDataDir: C:\Users\ScalanceX\AppData\...}, goog:chromeOptions: {debuggerAddress: localhost:60218}, networkConnectionEnabled: false, pageLoadStrategy: none, platformName: windows, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}}] > 10:41:30.783 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 12bcf7df07867b0d973e26690d61de40 (org.openqa.selenium.chrome.ChromeDriverService) > 10:51:31.484 DEBUG [WebDriverServlet.handle] - Found handler: org.openqa.selenium.remote.server.commandhandler.NoSessionHandler@6b519ef4 > 10:51:31.486 DEBUG [WebDriverServlet.lambda$handle$0] - /session/12bcf7df07867b0d973e26690d61de40: Executing DELETE on /session/12bcf7df07867b0d973e26690d61de40 (handler: NoSessionHandler) > 10:51:31.527 INFO [ActiveSessions$1.onStop] - Removing session 12bcf7df07867b0d973e26690d61de40 (org.openqa.selenium.chrome.ChromeDriverService) > 10:51:31.531 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@38ddd3487 pairs: {DELETE /session/12bcf7df07867b0d973e26690d61de40 HTTP/1.1: null}{Cache-Control: no-cache}{Pragma: no-cache}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:51:31.557 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@361a2a234 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 14}{Content-Type: application/json; charset=utf-8}{cache-control: no-cache} > 10:51:31.558 DEBUG [ReverseProxyHandler.execute] - To downstream: {""value"":null} > 10:51:31.558 DEBUG [UrlChecker.waitUntilUnavailable] - Waiting for http://localhost:5831/shutdown > 10:51:31.559 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:5831/shutdown > 10:51:31.560 DEBUG [HttpURLConnection.writeRequests] - sun.net.www.MessageHeader@19570b945 pairs: {GET /shutdown HTTP/1.1: null}{User-Agent: Java/1.8.0_282}{Host: localhost:5831}{Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2}{Connection: keep-alive} > 10:51:31.581 DEBUG [HttpURLConnection.getInputStream0] - sun.net.www.MessageHeader@1790e6ce3 pairs: {null: HTTP/1.1 200 OK}{Content-Length: 40}{Content-Type: application/json; charset=utf-8} > 10:51:31.592 DEBUG [UrlChecker.lambda$waitUntilUnavailable$2] - Polling http://localhost:5831/shutdown  **Please let me know do you need anything else.** [hubLog.txt](https://github.com/SeleniumHQ/selenium/files/6731397/hubLog.txt) [nodeLog_shortned.txt](https://github.com/SeleniumHQ/selenium/files/6731398/nodeLog_shortned.txt)  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.114 (Official Build) (32-bit) Browser Driver version: ChromeDriver 91.0.4472.101 Language Bindings version: Java 3.141.59  Selenium Grid version: 3.141.59","closed","C-java,","burakdLabs","2021-06-29T07:12:10Z","2021-09-19T00:06:02Z"
"","9360","Driver closing issue with oauth authorization window","## üêõ Bug Report  Hi!  Our application is using oauth authorization with partners f.e. vk.com User presses authentication via vk, new window with login and password is opened. After filling the fields user presses login button and window closing automatically with sending authentication request.  So the issue is that after closing oauth window driveris closing too on any actions with webdriver, and creates new instance of webdriver  The code of the method:  public void switchToNextWindow() {         for (String winHandle : driver.getWindowHandles()) {             driver.switchTo().window(winHandle); // switch focus of WebDriver to the next found window handle         }     }  public static void withVkontakte(UserData user) {             kraken.perform().switchToNextWindow();             kraken.perform().fillField(Elements.Social.Vkontakte.loginField(),user.getLogin());             kraken.perform().fillField(Elements.Social.Vkontakte.passwordField(),user.getPassword());             kraken.perform().click(Elements.Social.Vkontakte.submitButton());         }  Detailed steps to reproduce the behavior:  ## Expected behavior After closing oauth window user focus should be switched to the old window automaticaly, or if a user has old window id he should has possibility to switch back by using code driver.switchTo().window(""windowId"");  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:MacOS 11.2 Browser: Chrome 89 Java: 11.0.8 Selenium: 3.8.1 seleniumChromeDriver: '3.14.0'  I tried in FireFox the same behavior","closed","R-awaiting answer,","vladimirWXW","2021-04-06T13:00:43Z","2021-09-05T08:06:31Z"
"","9847","Selenium 4 - Node taking 3 minutes to be registered as UP","## üêõ Bug Report  Hi there,  I'm running Selenium Grid 4 using the fully distributed mode on K8s running on GKE.  However, I have some issue with node taking a long time to be marked as UP.  As Dynamic Grid (https://github.com/SeleniumHQ/docker-selenium#dynamic-grid-) is not currently supported in Kubernetes, I wrote a cronjob that will automatically scale up & down the number of node depending on the number of sessions running & sessions in the queue.  While the script is working fine (it's scaling up & down depending on the number of tests), our tests are taking a very long time to run as some nodes would take a long time to be ready.  ## To Reproduce  I'm running the fully distributed mode using the following yaml file - https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/k8s-deployment-full-grid.yaml  Which is the same as the provided yaml file: https://github.com/SeleniumHQ/docker-selenium/blob/trunk/k8s-deployment-full-grid.yaml, I'm just adding namespace to make it easier to manage on my side.  I managed to reproduce this issue by manually scaling up/down the number of node (using `kubectl scale deployment`).   In order to track this issue, I wrote a small bash script to see how many of nodes are registered and how many are up or down. https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/check.sh  You can see all logs here https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/check-30.log  Please note, I started from a fresh new deployment of selenium to my k8s cluster using `kubectl apply -f k8s-deployment-full-grid.yaml`  Events (extract from https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/check-30.log)  - `Mon Sep 20 11:41:25 AEST 2021`: Started deployment of Selenium Grid to K8s. No node is ready yet. - `Mon Sep 20 11:41:48 AEST 2021`: Node is ready and marked as UP - `Mon Sep 20 11:44:51 AEST 2021`: Scaled up the number of replicas to 30 (`kubectl scale --replicas=30 deployment`) - `Mon Sep 20 11:44:57 AEST 2021`: After a few seconds, all 30 are marked as `UP` - `Mon Sep 20 11:47:04 AEST 2021`: Scaled down the number of replicas to 1. - `Mon Sep 20 11:50:54 AEST 2021`: Still waiting for grid to remove 2 node marked as `DOWN` - `Mon Sep 20 11:50:59 AEST 2021`: Scaled back the number of replicas to 30. - `Mon Sep 20 11:51:04 AEST 2021`: All 30 new nodes are added to the grid, but marked as `DOWN` - `Mon Sep 20 11:53:53 AEST 2021`: Only about 3 minutes later, all 30 nodes are marked as `UP`  I captured logs from a few nodes that you can see here: https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/chrome-node-1.log https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/chrome-node-2.log https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/chrome-node-3.log  As you can see, nodes have been added to the grid at ``` 01:51:01.874 INFO [NodeServer.lambda$createHandlers$2] - Node has been added ```  But are only marked as `UP` about 3 minutes later.  You can find the full log of the distributor here: https://github.com/gtaujeky/selenium-autoscaling-issue/blob/master/distributor.log  I'm not sure if my issue is related to https://github.com/SeleniumHQ/docker-selenium/issues/1337, as I have this issue with the latest version (4.0.0-rc-2-prerelease-20210916). I also tried to run the suggested version `4.0.0-rc-1-prerelease-20210618`, but have the same issue.  ## Expected behavior  It should take that long for a node to be marked as `UP` and ready to run tests  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Please see above  ## Environment  Selenium Grid version: 4.0.0-rc-2-prerelease-20210916","closed","C-java,","gtaujeky","2021-09-20T05:24:42Z","2022-03-09T00:11:46Z"
"","9067","set_certificate_bundle_path and some methods are missing in the remote_connection.py file","## üêõ Bug Report  Hi Team, I noticed that in Python selenium package(https://pypi.org/project/selenium/#files) some methods mentioned below are removed in the remote_connection.py, def get_certificate_bundle_path(cls): def set_certificate_bundle_path(cls, path): def get_remote_connection_headers(cls, parsed_url, keep_alive=False): def _get_proxy_url(self): def _get_connection_manager(self):  But the same methods are still in the Github package - https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py  If it is removed, could you please tell me how I can set custom CA path without set_certificate_bundle_path method.  ## To Reproduce  Detailed steps to reproduce the behavior:  1) Download the package from https://files.pythonhosted.org/packages/75/c4/e361c5659c558edbd391d322622d8d37ae1cf011cf42470455d54956a80f/selenium-3.14.1.tar.gz 2) Extract the file and go to selenium/webdriver and open remote_connection.py file 3) List out all the methods   ## Expected behavior  Those methods should be there def get_certificate_bundle_path(cls): def set_certificate_bundle_path(cls, path): def get_remote_connection_headers(cls, parsed_url, keep_alive=False): def _get_proxy_url(self): def _get_connection_manager(self):  ## Test script or set of commands reproducing this issue  I referred the Github url of Selenium package and those mentioned methods are still available. https://github.com/SeleniumHQ/selenium/blob/trunk/py/selenium/webdriver/remote/remote_connection.py  ## Environment  OS: Windows 10 Browser: Chrome Language Bindings version: Python 3.141.0  Selenium Grid version (if applicable):  3.14.1","closed","I-question,","SaravananRavi","2021-01-19T23:19:36Z","2021-09-05T08:24:58Z"
"","9439","Potential config setting for Edge","## üêõ Bug Report  Hey, I'm not entirely sure how to get edge working. I'm using python and behave. I have configs for 4 browsers setup like this:  ``` from selenium import webdriver from behave import fixture, use_fixture from behave.fixture import use_fixture_by_tag from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  @fixture(name='fixture.browser.firefox') def browser_firefox(ctx):   ctx.browser = webdriver.Remote(     desired_capabilities=DesiredCapabilities.FIREFOX,   )   yield ctx.browser   ctx.browser.quit()  @fixture(name='fixture.browser.chrome') def browser_chrome(ctx):   ctx.browser = webdriver.Remote(     desired_capabilities=DesiredCapabilities.CHROME,   )   yield ctx.browser   ctx.browser.quit()  @fixture(name='fixture.browser.opera') def browser_opera(ctx):   ctx.browser = webdriver.Remote(     desired_capabilities=DesiredCapabilities.OPERA,   )   yield ctx.browser   ctx.browser.quit()  @fixture(name='fixture.browser.edge') def browser_edge(ctx):   ctx.browser = webdriver.Remote(     desired_capabilities=DesiredCapabilities.EDGE,   )   yield ctx.browser   ctx.browser.quit()  ```  The error that I'm getting is  ``` HOOK-ERROR in before_tag(tag=fixture.browser.edge): KeyError: 'status'   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/behave/runner.py"", line 545, in run_hook     self.hooks[name](context, *args)   File ""features/environment.py"", line 14, in before_tag     david = use_fixture_by_tag(tag, ctx, fixture_registry)   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/behave/fixture.py"", line 275, in use_fixture_by_tag     use_fixture(fixture_func, context)   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/behave/fixture.py"", line 231, in use_fixture     return _setup_fixture(fixture_func, context, *fixture_args, **fixture_kwargs)   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/behave/fixture.py"", line 179, in _setup_fixture     setup_result = next(func_it) # SETUP-FIXTURE PART (may raise error)   File ""/home/davidm/repos/todos-tests/common/fixtures.py"", line 49, in browser_edge     ctx.browser = webdriver.Remote(   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 157, in __init__     self.start_session(capabilities, browser_profile)   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 252, in start_session     response = self.execute(Command.NEW_SESSION, parameters)   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py"", line 321, in execute     self.error_handler.check_response(response)   File ""/home/davidm/pyenvs/todos-test/lib/python3.8/site-packages/selenium/webdriver/remote/errorhandler.py"", line 130, in check_response     status = value[""status""] @fixture.browser.edge Feature: Todos  ```  I'm using docker and grid, specifically the [docker compose full grid](https://github.com/SeleniumHQ/docker-selenium/blob/trunk/docker-compose-v3-full-grid.yml)  This error is happening for me on both my linux mint and macOS. The other 3 browsers are all working fine. I suspect I could get around it with a config change thus why I'm posting here rather than on Microsoft's repo","closed","","dsm23","2021-05-04T11:09:23Z","2021-09-05T08:06:36Z"
"","9392","Typo to install the chrome driver on MacOs","## üêõ Bug Report  Hello, I spotted a very small typo in your Wiki.  On this page: https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver In the `Quick Installation` section, to install the driver on mac OS, you specified this commmand: `brew tap homebrew/cask && brew cask install chromedriver`. This syntax is now deprecated and should be changed to `brew install --cask chromedriver`.","closed","","VincentBrule","2021-04-19T07:30:07Z","2021-09-05T08:06:42Z"
"","8893",".NET 5 support","## üêõ Bug Report  Hello, I have tested Selenium.WebDriver in newly released .NET 5. I have tried Firefox and Chrome drivers and neither of them work.  When I converted the application back to .NET Core 3.1, it started to work again. I am not sure if the issue is in dotnet or Selenium but it seems like there is something wrong when the target address is being generated.  ## To Reproduce  It fails immediatelly when the driver is instantiated: `using var driver = new FirefoxDriver();` `using var driver = new ChromeDriver();`  Firefox driver complains that the communication has been refused by the host, although I checked multiple times that the port is open and there is no blocking via firewall.  Chrome driver complains that about security issue saying that I can access the driver only from localhost. But I am doing that.  ## Environment  OS: Windows 10 Browsers: Chrome 86.0.4240.198, Firefox 84 Browser Driver version: Chrome driver 87.0.4280.20, Firefox driver Gecko drivers 0.28.0 and 0.27.0 Language Bindings version: C#.NET5","closed","needs-triaging,","zitmen","2020-11-22T12:50:30Z","2021-09-05T08:30:26Z"
"","8959","[rb] - Adding/Editing Cookie issues (With suggestions)","## üêõ Bug Report  Happy to fix these myself in 1/many PR's but the `#add_cookie` method needs some love. Specifically around the following.  - W3C Response of adding a cookie with expiration in past is 200 null. But cookie isn't created. **What should this be doing?** - Error code when adding a cookie with Domain (Catch this earlier and throw nicer error in method) - No `#edit_cookie`. Lets create an API that allows you to do so by caching the original cookie values, deleting the existing one then replacing it with a new one with the newly modified values - `http_only` property not persisted and ignored in add method (This has been added by me recently in PR) - `sameSite` property error (This might not be something we can control, **so possibly ignore**).  ## To Reproduce  ```    cookie_manager.add_cookie(     {       :name=>""abcde"",       :value=>""3"",       :path=>""/"",       :domain=>Capybara.app_host, # This needs fixing / sanitizing out       :expires=>DateTime.now.to_i, # This needs catching before sending (Or editing at w3c level)       :same_site=>true,       :secure=>true,       :http_only=>true # This needs passing     }   ) ```  ## Expected behavior  Written in top  ## Test script or set of commands reproducing this issue  As given  ## Environment  Ruby Selenium 4alpha6 (Rest not relevant).","closed","C-rb,","luke-hill","2020-12-11T14:21:11Z","2021-09-05T08:25:02Z"
"","9249","Dropdown clicks not working","## üêõ Bug Report  Guys , i have been facing issues with dropdown clicks when test running its not click opening dropdown , scroll down and select the option.   it's not working when testing with selenium  I have been trying it on my website, datarecapp.herokuapp.com  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","R-awaiting answer,","SuperHuman12","2021-03-10T03:02:19Z","2021-09-05T08:12:16Z"
"","9551","Cannot execute the shadow jar file.","## üêõ Bug Report  Gradle run works fine, but when I run the shadow jar file an exception is thrown.  ## To Reproduce  1. add the following dependencies in gradle.  ```     implementation(""org.seleniumhq.selenium:selenium-java:4.0.0-beta-3"")     implementation(""org.seleniumhq.selenium:selenium-firefox-driver:4.0.0-beta-3"") ```  2. write a main kotlin function that tries to create a firefox webdriver.  ``` FirefoxDriver(         FirefoxOptions()             .setHeadless(true) ) ```  3. add the shadow jar plugin `id(""com.github.johnrengelman.shadow"") version ""7.0.0""` 4. Test `gradle run` , works fine. 5. Run shadow jar tasks. 6. Run `java -jar `, the following exception is thrown.  ![image](https://user-images.githubusercontent.com/25118271/120928809-e597b780-c718-11eb-88cb-e9b43c0dc804.png)  ## Expected behavior  Running shadow jar works fine.  ## Environment  OS: OSX Browser: Firefox Browser version: 89.0 Browser Driver version: GeckoDriver 0.23 Language Bindings version: Java 4.0.0-beta-3","closed","R-awaiting answer,","Jason5Lee","2021-06-06T14:48:06Z","2021-09-05T08:01:00Z"
"","9468","Returning const in execute_script results in Exception","## üêõ Bug Report  Global objects that are accessible via Firefox Console cannot be accessed with selenium. This only affects `const` it seems, i.e. `var` are visible to selenium. When trying to return these values using the `execute_script` function, a JavascriptException is thrown. The issue is specific to using the geckodriver. It works as expected using the chromedriver.  ## To Reproduce  1. In Python, create a driver instance and navigate to any website. ```py from selenium import webdriver driver = webdriver.Firefox() driver.get(https://google.com) ```  2. Add const via Firefox console: ```js const test_val = 'test' function return_test_val() {   return test_val; } ``` 3. In Python, execute the following: ```py driver.execute_script(""return test_val;"")   # This will result in a JavaScriptException driver.execute_script(""function return_test_val() {return test_val} return return_test_val;"")  # This will result in the same Exception driver.execute_script(""return return_test_val();"")  # This is working (function defined in Firefox console) ```  The exception raised: ```pytb --------------------------------------------------------------------------- JavascriptException                       Traceback (most recent call last)  in  ----> 1 driver.execute_script('return test_val;')  ~/miniconda3/envs/AutoTest/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py in execute_script(self, script, *args)     632             command = Command.EXECUTE_SCRIPT     633  --> 634         return self.execute(command, {     635             'script': script,     636             'args': converted_args})['value']  ~/miniconda3/envs/AutoTest/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py in execute(self, driver_command, params)     319         response = self.command_executor.execute(driver_command, params)     320         if response: --> 321             self.error_handler.check_response(response)     322             response['value'] = self._unwrap_value(     323                 response.get('value', None))  ~/miniconda3/envs/AutoTest/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py in check_response(self, response)     240                 alert_text = value['alert'].get('text')     241             raise exception_class(message, screen, stacktrace, alert_text) --> 242         raise exception_class(message, screen, stacktrace)     243      244     def _value_or_default(self, obj, key, default):  JavascriptException: Message: ReferenceError: test_val is not defined ```  Implications: - const values that are globally accessible via Firefox console cannot be retrieved with selenium - There is no way to access global consts unless writing a helper function in the Firefox console which contradicts the automatisation.    ## Expected behavior  `driver.execute_script(""return test_val"")` should return the const `test_val`. It should not result in an exception.  ## Environment  OS: Debian Buster Browser: Firefox Browser version: 78.10.0esr (64-bit) Browser Driver version: GeckoDriver 0.29.0 Language Bindings version: Python 3.9.4, selenium 3.141.0 selenium-wire 4.2.4 Selenium Grid version (if applicable): -","closed","D-firefox,","picciama","2021-05-11T23:43:46Z","2021-09-05T08:03:29Z"
"","9859","How to download the logs using ""devtools"" with ""Remote webdriver"" using selenium 4 rc1?","## üêõ Bug Report  Getting this exception from RemoteWebDriver.GetDevToolsSession() => **Unhandled Exception: OpenQA.Selenium.WebDriverException: Cannot find se:cdp capability for driver at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession(Int32 protocolVersion) at OpenQA.Selenium.Remote.RemoteWebDriver.GetDevToolsSession()**    ## To Reproduce  //Remote Webdriver  ChromeOptions chromeOptions = new ChromeOptions(); //chromeOptions.AddAdditionalOption(""RemoteDevToolsEndPointCapabilityName"", ""se:cdp""); //chromeOptions.AddAdditionalOption(""RemoteDevToolsVersionCapabilityName"", ""se:cdpVersion""); RemoteWebDriver driver = new RemoteWebDriver(new Uri(""http://localhost:9515""), chromeOptions); Console.WriteLine("">>>>>>>>>>>>>"" + driver.RemoteDevToolsEndPointCapabilityName); // -> this returns the string **se:cdp** Console.WriteLine("">>>>>>>>>>>>>"" + driver.RemoteDevToolsVersionCapabilityName); // -> this returns the string **se:cdpVersion** var devToolsSession = ((IDevTools)driver).GetDevToolsSession();// => this line throws the exception **""Cannot find se:cdp capability for driver""** if (devtoolsession != null) { //code }  ## Expected behavior  Required logs(browser console/network/javascript) should be extracted  ## Test script or set of commands reproducing this issue  above code + the following link in latest selenium 4 rc1, #9017 (comment)  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 93.0.4577.63 Browser Driver version: 93.0.4577.1500 Language Bindings version: dotnet 4.0.0-rc1","closed","R-awaiting answer,","Febbie15","2021-09-21T11:13:11Z","2021-11-05T00:06:19Z"
"","9720","Getting java.lang.NoSuchMethodError: org.openqa.selenium.WebElement.getDomAttribute(Ljava/lang/String;)Ljava/lang/String;in select class for Selenium 4.0.0-beta-4","## üêõ Bug Report  Getting java.lang.NoSuchMethodError: org.openqa.selenium.WebElement.getDomAttribute(Ljava/lang/String;)Ljava/lang/String; when using select class to select values from drop down for Selenium 4.0.0-beta-4    ## To Reproduce    Detailed steps to reproduce the behavior:  1. Use selenium 4.0.0-beta-4 version with Chrome 89 version 2. Use Select class for selecting value from drop down  ## Actual Behavior  Getting exception  ## Expected behavior  Drop down value should get select.  ## Test script or set of commands reproducing this issue  Select transactionStatus = new Select(driver.findElement(By.name(""PAID""))); transactionStatus.selectByValue(status);  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 89.0.4389.90 Language Bindings version:  Java 1.8","closed","R-awaiting answer,","vijaysri22","2021-08-05T05:05:40Z","2021-09-27T00:05:50Z"
"","9442","Unterminated String Error: driver.manage().logs().get(LogType.PERFORMANCE)","## üêõ Bug Report  Getting a JsonException: Unterminated string when attempting to retrieve the performance logs via  ``` driver.manage().logs().get(LogType.PERFORMANCE); ```  ## To Reproduce  1. Retrieve URL: https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned 2. Call driver.manage().logs().get(LogType.PERFORMANCE);   ## Expected behavior  Should not present error  ## Test script or set of commands reproducing this issue  ``` 		ChromiumDriver driver = null;      	ChromeOptions options = new ChromeOptions(); 		options.setBinary(""/usr/bin/chrome"");   		//remove unexepectedalertexceptions 		options.addArguments(""--silent"", ""--headless"", ""--blink-settings=imagesEnabled=false"", ""--disable-blink-features"", ""--disable-blink-features=AutomationControlled"", ""--disable-gpu"", ""--no-sandbox"", ""--window-size=1920,1200"", ""--ignore-certificate-errors"", ""--disable-application-cache"");   		options.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);          LoggingPreferences logPrefs = new LoggingPreferences();         logPrefs.enable(LogType.PERFORMANCE, Level.ALL);         options.setCapability(CapabilityType.LOGGING_PREFS, logPrefs);         options.setCapability( ""goog:loggingPrefs"", logPrefs );         options.setPageLoadStrategy(PageLoadStrategy.EAGER);  		DriverService.Builder serviceBuilder = new ChromeDriverService.Builder().withSilent(true); 		ChromeDriverService chromeDriverService = (ChromeDriverService)serviceBuilder.build();  		driver = new ChromeDriver(chromeDriverService, options);      	driver.manage().timeouts().pageLoadTimeout(Duration.ofMillis(JAVASCRIPT_PARSER_TIMEOUT_IN_MILLIS));     	driver.manage().timeouts().setScriptTimeout(Duration.ofMillis(JAVASCRIPT_SCRIPT_TIMEOUT_IN_MILLIS));  		URL uRL = new URL(""https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned""); 		try {  			driver.get(uRL.toExternalForm()); 			content = driver.getPageSource(); 			LogEntries logs = driver.manage().logs().get(LogType.PERFORMANCE);  		} catch (Exception e) { 			log.error(""["" + uRL.toExternalForm() + ""] log retrieval error"", e.getMessage()); 		}  ```  ## Error Produced  ``` 2021-05-05 00:45:16,298 ERROR [https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned] timed out.: org.openqa.selenium.json.JsonException: Unterminated string: {""message"":{""method"":""Network.requestWillBeSent"",""params"":{""documentURL"":""https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned"",""frameId"":""EB93FE7EE56B44A5FC9DEECD1D9A6717"",""hasUserGesture"":false,""initiator"":{""stack"":{""callFrames"":[{""columnNumber"":143415,""functionName"":""Xi"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":141656,""functionName"":""e.post"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":141133,""functionName"":""e.bundle"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":167633,""functionName"":""e.sendBundle"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":166823,""functionName"":""e._sendPendingBundle"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":166586,""functionName"":""e.maybeSendNextBundle"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":166380,""functionName"":""e.enqueueNextBundle"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":165794,""functionName"":""e.enqueueAndSendBundle"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":163674,""functionName"":""e.startPipeline"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":129679,""functionName"":"""",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":3613,""functionName"":"""",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":3718,""functionName"":"""",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""},{""columnNumber"":2443,""functionName"":""s"",""lineNumber"":2,""scriptId"":""19"",""url"":""https://edge.fullstory.com/s/fs.js""}]},""type"":""script""},""loaderId"":""978E2C78A12ED9FBF48B2C4042A3E3EC"",""request"":{""hasPostData"":true,""headers"":{""Content-Type"":""text/plain"",""Referer"":""https://squareup.com/"",""User-Agent"":""Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.190 Safari/537.36""},""initialPriority"":""High"",""method"":""POST"",""mixedContentType"":""none"",""postData"":""{\""Seq\"":1,\""When\"":49,\""Evts\"":[{\""Kind\"":25,\""Args\"":[\""https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned\"",\""\u003C!DOCTYPE html>\"",\""https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned\"",\""\""],\""When\"":49},{\""Kind\"":8198,\""Args\"":[false,1],\""When\"":49},{\""Kind\"":81,\""Args\"":[\""https://squareup.com/us/en/townsquare/why-plastic-straws-are-being-banned\"",\""navigate\""],\""When\"":49},{\""Kind\"":20,\""Args\"":[],\""When\"":49},{\""Kind\"":57,\""Args\"":[0,1620189903525,0,0,0,0,1620189903531,1620189903533,1620189903533,1620189903533,1620189903688,1620189903598,1620189903689,1620189904935,1620189904945,1620189904964,1620189908121,1620189908123,1620189908126,1620189910774,1620189910776,1620189910926],\""When\"":334},{\""Kind\"":21,\""Args\"":[],\""When\"":383},{\""Kind\"":58,\""Args\"":[0,true,1,true,2,true,5,true,7,true],\""When\"":519},{\""Kind\"":57,\""Args\"":[6,2190000000,15200000,12700000],\""When\"":519},{\""Kind\"":57,\""Args\"":[7,1620189903526],\""When\"":519},{\""Kind\"":58,\""Args\"":[3,true],\""When\"":520},{\""Kind\"":52,\""Args\"":[],\""When\"":540},{\""Kind\"":66,\""Args\"":[\""any-pointer\"",\""coarse\""],\""When\"":540},{\""Kind\"":66,\""Args\"":[\""any-hover\"",\""none\""],\""When\"":540},{\""Kind\"":66,\""Args\"":[\""pointer\"",\""none\""],\""When\"":540},{\""Kind\"":66,\""Args\"":[\""prefers-color-scheme\"",\""light\""],\""When\"":540},{\""Kind\"":2,\""Args\"":[-1,-1,[\""\u003C#document\"",\""[\"",\""\u003C!DOCTYPE\"",\"":name\"",\""html\"",\"":publicId\"",\""\"",\"":systemId\"",6,\""\u003CHTML\"",\"":_fs_masked\"",\""true\"",\"":class\"",\""country-US lang-en locale-en-US site-squareup lazyload-images show-time\"",\"":data-entry-id\"",\""7BaFsE02iMnBsWzmkQSNNn\"",\"":lang\"",\""en-US\"",1,\""\u003CHEAD\"",[10,2],1,\""\u003CMETA\"",[10,2],\"":http-equiv\"",\""Content-Type\"",\"":content\"",\""text/html; charset=utf-8\"",\""\u003C#text\"",\""\\n\"",[23,2],11,3,\""viewport\"",28,\""width=device-width, initial-scale=1, user-scalable=no, shrink-to-fit=no, viewport-fit=cover\"",[30,2],[32,3],3,\""format-detection\"",28,\""telephone=no\"",[30,2],\""\u003CLINK\"",\"":rel\"",\""icon\"",\"":href\"",\""https://xms-production-f.squarecdn.com/xms/assets/public-web-styles/favicon-770e0889aefd823056c7cdbb066a445be0f0754c1b4d4cba877e120fdbcb63e6.ico\"",[39,3],[10,2],3,\""sq:environment\"",28,\""{\\\""env\\\"":\\\""production\\\"",\\\""country_code\\\"":\\\""US\\\"",\\\""lang_code\\\"":\\\""en\\\"",\\\""locale\\\"":\\\""en-US\\\"",\\\""country_default_language\\\"":\\\""en\\\"",\\\""default_country\\\"":\\\""US\\\"",\\\""default_language\\\"":\\\""en\\\"",\\\""supported_countries\\\"":[\\\""AU\\\"",\\\""CA\\\"",\\\""GB\\\"",\\\""IE\\\"",\\\""JP\\\"",\\\""US\\\""],\\\""detected_country_code\\\"":\\\""us\\\"",\\\""available_languages\\\"":[\\\""en\\\"",\\\""en-AU\\\"",\\\""en-CA\\\"",\\\""en-GB\\\"",\\\""en-US\\\"",\\\""fr\\\"",\\\""fr-CA\\\"",\\\""es\\\"",\\\""es-US\\\"",\\\""ja\\\"",\\\""ja-JP\\\""]}\"",[55,4],[34,2],\""sq:tracking\"",28,\""{\\\""eventstream\\\"":\\\""xms\\\"",\\\""google_universal\\\"":[\\\""UA-9517040-46\\\""],\\\""autotrack\\\"":{\\\""page_view\\\"":true,\\\""link_click\\\"":true,\\\""scroll_depth\\\"":true},\\\""cdp\\\"":\\\""41ec1b68-21b1-4687-853a-f968e54134db\\\"",\\\""pageview_rawdata\\\"":{\\\""entry_id\\\"":\\\""7BaFsE02iMnBsWzmkQSNNn\\\""},\\\""full_story\\\"":\\\""12758A\\\""}\"",[64,5],3,\""sq:gtm\"",28,\""{\\\""enabled\\\"":true,\\\""domain\\\"":\\\""tealium-f.squarecdn.com\\\"",\\\""delay\\\"":1000}\"",[30,2],\""\u003CTITLE\"",[20,3],30,\"". Last 128 characters read: main\\\\\\\"":\\\\\\\""tealium-f.squarecdn.com\\\\\\\"",\\\\\\\""delay\\\\\\\"":1000}\\\"",[30,2],\\\""\\u003CTITLE\\\"",[20,3],30,\\\""ÔøΩ Build info: version: '4.0.0-beta-2', revision: 'Unknown' System info: host: 'ip-172-30-0-243.ec2.internal', ip: '172.30.0.243', os.name: 'Linux', os.arch: 'amd64', os.version: '4.14.225-168.357.amzn2.x86_64', java.version: '1.8.0_231' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [95a2d3788abfb80dee40c13431aadd99, getLog {type=performance}] Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.90, chrome: {chromedriverVersion: 88.0.4324.96 (68dba2d8a0b14..., userDataDir: /tmp/.com.google.Chrome.iWuNGV}, goog:chromeOptions: {debuggerAddress: localhost:39827}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: eager, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true} Session ID: 95a2d3788abfb80dee40c13431aadd99 ```  ## Environment  OS: AWS Linux 2 Browser: Chrome Browser version: Version 89.0.4389.90 (Official Build) (64-bit) Browser Driver version: ChromeDriver 89.0.4389.23 Language Bindings version: Java 8 Selenium Grid version (if applicable): Beta 2","closed","C-java,","githubuser100007","2021-05-05T05:05:22Z","2021-09-05T07:50:10Z"
"","9844","class org.openqa.selenium.remote.RemoteWebDriver cannot be cast to class org.openqa.selenium.html5.WebStorage","## üêõ Bug Report  From your test LocalStorageTest.java:  `LocalStorage local = ((WebStorage) driver).getLocalStorage();`  This works when using a local webdriver. When using a remote webdriver the following error is presented:  java.lang.ClassCastException: class org.openqa.selenium.remote.RemoteWebDriver cannot be cast to class org.openqa.selenium.html5.WebStorage (org.openqa.selenium.remote.RemoteWebDriver and org.openqa.selenium.html5.WebStorage are in unnamed module of loader 'app')  What does work is the 'hack' posted on [StackOverflow][1]:      RemoteExecuteMethod executeMethod = new RemoteExecuteMethod((RemoteWebDriver) driver);     RemoteWebStorage webStorage = new RemoteWebStorage(executeMethod);     LocalStorage storage = webStorage.getLocalStorage();     storage.setItem(""test"", ""test"");  [1]: https://stackoverflow.com/questions/57593369/webstorage-with-remotewebdriver/57603243#57603243","closed","","AgingOrange","2021-09-19T08:44:18Z","2021-10-21T00:06:21Z"
"","9122","[Selenium 4] [Grid] Node Registration Lack of Error for No Driver Path Set","## üêõ Bug Report  Follow up to #8752. When launching Selenium Grid Node, and failing to include the path to a Browser Driver like Chromedriver, the registration will hang indefinitely and not present any error on INFO (or greater) level.  This sent me down a rabbit hole of debugging open ports, etc.  Tested with this version of Grid: https://github.com/SeleniumHQ/docker-selenium/raw/beta-jars/selenium-server-4.0.0-prerelease-beta-1-02d5e641d5.jar  ## To Reproduce  1) Unset any browser drivers on path, such as `webdriver.chrome.driver` 2) Launch with just `java -jar selenium-server-4.0.0-prerelease-beta-1-02d5e641d5.jar node --publish-events tcp://IP:4442 --subscribe-events tcp://IP:4443`  Compare these two (IPs in example have been modified) Output is a powershell prompt.  **Broken (which just hangs on this output):** ``` PS C:\Windows\system32> $hubHost = ""1.2.3.4"" PS C:\Windows\system32> java -jar selenium-server-4.0.0-prerelease-beta-1-02d5e641d5.jar node --publish-events tcp://$($hubHost):4442 --subscribe-events tcp://$($hubHost):4443 21:11:38.528 INFO [LogManager$RootLogger.log] - Using the system default encoding 21:11:38.531 INFO [LoggingOptions.createTracer] - Using OpenTelemetry for tracing 21:11:38.671 INFO [UnboundZmqEventBus.] - Connecting to tcp://1.2.3.4:4442 and tcp://1.2.3.4:4443 21:11:38.723 INFO [UnboundZmqEventBus.] - Sockets created 21:11:38.726 INFO [UnboundZmqEventBus.lambda$new$7] - Bus started 21:11:39.029 INFO [NodeServer.createHandlers] - Reporting self as: http://5.6.7.8:5555 21:11:39.110 INFO [Node.] - Binding additional locator mechanisms: name, id 21:11:39.336 INFO [NodeServer$1.start] - Starting registration process for node id 924d7db1-844f-44ec-838c-e5a12592a8fb 21:11:39.337 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-1 (revision 02d5e641d5): http://5.6.7.8:5555 ```  **Working:** ``` PS C:\Windows\system32> $hubHost = ""1.2.3.4"" PS C:\Windows\system32> java -Dwebdriver.chrome.driver=C:\ProgramData\chromedriver_win32\chromedriver.exe -jar selenium-server-4.0.0-prerelease-beta-1-02d5e641d5.jar node --publish-events tcp://$($hubHost):4442 --subscribe-events tcp://$($hubHost):4443 21:15:34.048 INFO [LogManager$RootLogger.log] - Using the system default encoding 21:15:34.050 INFO [LoggingOptions.createTracer] - Using OpenTelemetry for tracing 21:15:34.178 INFO [UnboundZmqEventBus.] - Connecting to tcp://1.2.3.4:4442 and tcp://1.2.3.4:4443 21:15:34.231 INFO [UnboundZmqEventBus.] - Sockets created 21:15:34.233 INFO [UnboundZmqEventBus.lambda$new$7] - Bus started 21:15:34.532 INFO [NodeServer.createHandlers] - Reporting self as: http://5.6.7.8:5555 21:15:34.617 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 4 times 21:15:34.625 INFO [Node.] - Binding additional locator mechanisms: id, name 21:15:34.842 INFO [NodeServer$1.start] - Starting registration process for node id 355ecc3e-ed7b-4f75-b9ec-c6d521ef03b4 21:15:34.843 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-1 (revision 02d5e641d5): http://5.6.7.8:5555 21:15:35.953 INFO [NodeServer.lambda$createHandlers$1] - Node has been added ```  ## Expected behavior  An error message printed that could give a hint as to why the node never gets added. Perhaps something like: ""No browser driver on path""  ## Test script or set of commands reproducing this issue See above (reproduction)  ## Environment  OS: `Windows 10` Browser: `Chrome` Browser version: `86.0.4240.75` Browser Driver version: `86.0.4240.22` Language Bindings version: `n/a` Selenium Grid version (if applicable): `selenium-server-4.0.0-prerelease-beta-1-02d5e641d5.jar`","closed","C-java,","dylanlive","2021-01-29T21:45:35Z","2021-09-05T08:03:20Z"
"","9697","Firefox doesn't respect download path with Latin characters in","## üêõ Bug Report  Firefox doesn't respect download folder path profile when it contains Latin characters.  ## To Reproduce  Set a profile of Firefox using some Latin (with accented letter), in the test script is the ""√°"", on the Script.  ## Expected behavior  I would expect the file by saved into the folder  `/home/lab/Documents/UNICAMP/LabREI/Campus Sustent√°vel/Data analytics/Uso final da energia [GT5]/Databases`  but it's saved into  `/home/lab/Documents/UNICAMP/LabREI/Campus SustentAvel/Data analytics/Uso final da energia [GT5]/Databases`  when  I set the first path.  ## Test script or set of commands reproducing this issue  ```python from selenium import webdriver from selenium.webdriver.firefox.options import Options from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By  opts = Options()  DOWNLOAD_PATH = '/home/lab/Documents/UNICAMP/LabREI/Campus Sustent√°vel/Data analytics/Uso final da energia [GT5]/Databases' profile = webdriver.FirefoxProfile() profile.set_preference('browser.download.folderList', 2) profile.set_preference('browser.download.dir', DOWNLOAD_PATH) profile.set_preference('browser.download.lastDir', DOWNLOAD_PATH) profile.set_preference('browser.download.manager.showWhenStarting', False) profile.set_preference('browser.helperApps.neverAsk.saveToDisk',                        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'                        ';application/vnd.ms-excel'                        ';application/xls'                        ';application/xlsx')  browser = webdriver.Firefox(profile, options=opts, executable_path=GECKO_DRIVER_PATH) browser.get('https://filesamples.com/formats/xlsx') btn = browser.find_elements_by_class_name('btn-primary') btn[0].click() ```  ## Environment  OS: Ubuntu 20.04 Browser: Firefox Browser version: 90.0 (64-bit) Browser Driver version: GeckoDriver 0.29 Language Bindings version: Python 3.8 Selenium Grid version (if applicable): 3.141.0","closed","C-py,","hildogjr","2021-07-29T21:12:37Z","2021-12-12T00:07:21Z"
"","9350","File upload doesn't work for RemotewWebDriver","## üêõ Bug Report  File upload is not working using RemoteWebDriver. It is working fine running locally but fails on Remote.  Last working version **4.0.0-alpha05** Stop working since **4.0.0-alpha07** Still not working in **4.0.0-beta2**      Unable to upload file: System.NotImplementedException: unknown command: unknown command: session/eaee033d03861677627f084357ea877a/se/file        at OpenQA.Selenium.Remote.RemoteWebDriver.UnpackAndThrowOnError(Response errorResponse)        at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteWebDriver.InternalExecute(String driverCommandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteWebElement.Execute(String commandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteWebElement.UploadFile(String localFile)        at OpenQA.Selenium.Remote.RemoteWebElement.SendKeys(String text)        at SeleniumExtras.PageObjects.WebElementProxy.SendKeys(String text)  ## To Reproduce  `driver.FindElement(By.Id(""upload"")).SendKeys(file);`  ## Expected behavior  File uploaded successfully  ## Test script or set of commands reproducing this issue                      var chromeOptions = new ChromeOptions();                      chromeOptions.AddArguments(""headless"", ""--window-size=1920,1080"", ""--safebrowsing-disable-download-protection"");                      chromeOptions.AddUserProfilePreference(""download.default_directory"", ""/home/selenium/Downloads"");                     chromeOptions.AddUserProfilePreference(""download.prompt_for_download"", false);                     chromeOptions.AddUserProfilePreference(""download.directory_upgrade"", true);                     chromeOptions.AddUserProfilePreference(""safebrowsing.enabled"", false);                      chromeOptions.SetLoggingPreference(LogType.Browser, LogLevel.All);                     var driver = new RemoteWebDriver(new Uri(Browser.HubUri), chromeOptions);                      driver.Navigate().GoToUrl("""");                      IAllowsFileDetection fileDetectionDriver = (IAllowsFileDetection)driver;                     fileDetectionDriver.FileDetector = new LocalFileDetector();                      var file = """";                      driver.FindElement(By.Id(""upload"")).SendKeys(file);  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 89.0.4389.114 Browser Driver version: Selenium.WebDriver.ChromeDriver -Version 89.0.4389.2300 Language Bindings version: C# Selenium Grid version (if applicable): selenoid 1.10.3  ## Notes There is a separate bug (https://github.com/SeleniumHQ/selenium/issues/8524) that may be related but there are no steps how to deal with the above behavior.","closed","","VitaliiDolotov","2021-04-01T13:21:11Z","2021-09-05T08:01:06Z"
"","9804","ActionChain methods less robust in headless mode; asserts when element not in view (observed on Chrome)","## üêõ Bug Report  Experiencing code assert when using ActionChain methods running in headless mode. The assert appears to only occur when the target element is not in-view on the page.    This behavior **not** observed when in non-headless mode, and/or target element is in-view on the page.  Observed assert error: ``` ERROR. Exception encountered: : Message: move target out of bounds   (Session info: headless chrome=93.0.4577.63)     Encountered Exception: : 'NoneType' object is not iterable ```  Mitigation: Use of driver.execute_script(scrollIntoView) method to bring the target element in view, prior to ActionChain methods, appears to mitigate the assert behaviors  ## To Reproduce  1. Running in headless mode, perform following ActionChain methods on a viable element that is not in view: * actions = ActionChains(driver) * actions.move_to_element(element) * actions.move_by_offset( x, y).click().perform().","closed","","RussCarter-charter","2021-09-08T15:02:13Z","2021-10-10T00:06:27Z"
"","8882","ExpectedCondition.jsReturnsValue documentation does not correlate with implementation","## üêõ Bug Report  ExpectedCondition.jsReturnsValue documentation states that it returns true if the given script returns string but it returns the value returned by the script (I assume) if it's not an empty string or list, otherwise null.  https://github.com/SeleniumHQ/selenium/blob/9108b707376a29d57b43bb589eec11bda280e025/java/client/src/org/openqa/selenium/support/ui/ExpectedConditions.java#L1471  I think either the documentation or the implementation should be fixed.","closed","C-java,","npapp","2020-11-17T16:42:42Z","2021-09-05T08:27:44Z"
"","9668","Webelements inside the vue.js's fragment are not visible to Selenium webdriver","## üêõ Bug Report  Elements with attribute 'fragment' are not visible. Impossible to interact with child elements.  Root Cause vue.js uses a concept called Fragments to create more than one root node in a Vue component. This is done for Accessibility support which is necessary to allow assistive technology like screen readers to interpret web pages and applications, More about this in -> https://blog.logrocket.com/fragments-in-vue-js/  So, basically they are creating HTML tag that would not read as a node by the DOM and called it fragments.  Hence the webelements inside such fragments are not visible for Webdriver. This is more or less like a iframe inside html page where we do switchToIFrame and interact with it. Only that for Fragments there are no ways to make it visible to the webdriver.  PFA Screenshot of DOM snapshot containing the Fragment.  ![image](https://user-images.githubusercontent.com/55972871/126429657-939efdf3-3ae7-4948-8d30-f5191b6b83a2.png)  ## To Reproduce  https://jsfiddle.net/brantansp/bwdkx1tg/3/#&togetherjs=eM6k1p6Iaz  Detailed steps to reproduce the behavior:  System.out.println(webDriver.findElement(By.xpath(""((//div[@class='nested-list']/div)[1]//div)[4]"")).getText()); //returns null  ## Expected behavior  System.out.println(webDriver.findElement(By.xpath(""((//div[@class='nested-list']/div)[1]//div)[4]"")).getText()); //should return value  ## Test script or set of commands reproducing this issue  WebDriverManager.chromedriver().setup(); WebDriver webDriver = new ChromeDriver(); System.out.println(webDriver.findElement(By.xpath(""((//div[@class='nested-list']/div)[1]//div)[4]"")).getText());  ## Environment  OS: Windows 10 x64 Browser: Chrome Browser version: 89 Browser Driver version: ChromeDriver 89 Language Bindings version: Java 3.141.59","open","I-enhancement,","spbrantan","2021-07-21T04:38:49Z","2022-03-18T17:52:12Z"
"","8933","ETIMEDOUT on running protractor tests on a remote selenoid or selenium standalone","## üêõ Bug Report  During run test case on protractor using any selenium remote machine (it could be selenium standalone, or selenoid) the following error occurs from time to time:  ``` ETIMEDOUT connect ETIMEDOUT xx.xx.xx.xx:443           at ClientRequest. (/workdir/node_modules/selenium-webdriver/http/index.js:238:15)           at emitOne (events.js:116:13)           at ClientRequest.emit (events.js:211:7)           at TLSSocket.socketErrorListener (_http_client.js:387:9)           at emitOne (events.js:116:13)           at TLSSocket.emit (events.js:211:7)           at emitErrorNT (internal/streams/destroy.js:64:8)           at _combinedTickCallback (internal/process/next_tick.js:138:11)           at process._tickCallback (internal/process/next_tick.js:180:9)Error  ```  This looks the same issue which was fixed previously: https://github.com/SeleniumHQ/selenium/issues/8129  ### To Reproduce Detailed steps to reproduce the behavior:  1. Have a remote grid (selenium or selenoid would make no difference) deployed on the network, but not on your machine. 2. Running those test(-s) should from time to time display errors about ETIMEDOUT  Expected behavior Test(-s) run without this exception  ### Environment OS: Windows 10 Browser: Chrome  87.0.4280.66 Language: Javascript protractor 7.0 selenium standalone or selenoid","closed","needs-triaging,","StanislavKharchenko","2020-12-03T16:43:36Z","2021-09-05T08:30:13Z"
"","9380","Update name for Debian package in README","## üêõ Bug Report  Documentation bug: the README lists the Debian package for Chromedriver as being called chromium-chromedriver, but it appears to now be [chromium-driver](https://packages.debian.org/buster/chromium-driver).","closed","R-awaiting answer,","marnen","2021-04-13T22:14:08Z","2021-09-05T08:06:44Z"
"","9535","4.0.0-beta-3 Node to Hub connectivity issue when Hub is hosted in OpenShift and Node is outside","## üêõ Bug Report  Detailed steps to reproduce the behavior: Put selenium-server-4.0.0-beta-3.jar into a docker Image, run the Image in Openshift/Kubernetes. Start Hub in container with this command: ``` java -jar selenium-server-4.0.0-beta-3.jar hub Observe that the Hub appears to be running fine, IPs masked out: 14:59:58.804 INFO [LogManager$RootLogger.log] - Using the system default encoding 14:59:58.862 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 14:59:59.061 INFO [BoundZmqEventBus.] - XPUB binding to [binding to tcp://*:4442, advertising as tcp://x.x.x.x:4442], XSUB binding to [binding to tcp://*:4443, advertising as tcp://x.x.x.x:4443] 14:59:59.174 INFO [UnboundZmqEventBus.] - Connecting to tcp://x.x.x.x:4442 and tcp://x.x.x.x:4443 14:59:59.265 INFO [UnboundZmqEventBus.] - Sockets created 14:59:59.366 INFO [UnboundZmqEventBus.] - Event bus ready 15:00:00.802 INFO [Hub.execute] - Started Selenium Hub 4.0.0-beta-3 (revision 5d108f9a67): http://x.x.x.x:4444 ```  In OpenShift: Create Service for port 4444 and a Route. The Route looks like this and operates on port 80: http://selenium-grid-hub-ie.openshift_cluster_hostname When the above URL is accessed in a browser, Grid Hub Page opens fine: http://selenium-grid-hub-ie.openshift_cluster_hostname/ui/index.html#/ So far so good.  Now try to connect a Node that is hosted outside of OpenShift. Command: ``` java -jar selenium-server-4.0.0-beta-3.jar node --grid-url http://selenium-grid-hub-ie.openshift_cluster_hostname but the Node never connects, it keeps trying. It also does not show what Hub URL it is actually trying to connect to.  11:03:18.670 INFO [LogManager$RootLogger.log] - Using the system default encoding 11:03:18.670 INFO [OpenTelemetryTracer.createTracer] - Using OpenTelemetry for tracing 11:03:18.936 INFO [UnboundZmqEventBus.] - Connecting to tcp://*:4442 and tcp://*:4443 11:03:19.045 INFO [UnboundZmqEventBus.] - Sockets created 11:03:19.155 INFO [UnboundZmqEventBus.] - Event bus ready 11:03:19.405 INFO [NodeServer.createHandlers] - Reporting self as: http://x.x.x.x:5555 11:03:19.608 INFO [NodeOptions.getSessionFactories] - Detected 4 available processors 11:03:19.639 INFO [NodeOptions.discoverDrivers] - Discovered 2 driver(s) 11:03:19.670 INFO [NodeOptions.report] - Adding Internet Explorer for {""browserName"": ""internet explorer"",""platformName"": ""XP""} 1 times 11:03:19.670 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge"",""platformName"": ""XP""} 4 times 11:03:19.686 INFO [Node.] - Binding additional locator mechanisms: id, name 11:03:20.295 INFO [NodeServer$1.start] - Starting registration process for node id 01381a0f-aee0-42e8-ac02-87936d51450b 11:03:20.295 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-3 (revision 5d108f9a67): http://x.x.x.x:5555 11:03:20.311 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:03:30.331 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:03:40.333 INFO [NodeServer$1.lambda$start$1] - Sending registration event... ```   I also tried appending port to the URL: ``` java -jar selenium-server-4.0.0-beta-3.jar node --grid-url http://selenium-grid-hub-ie.openshift_cluster_hostname:80 ``` but no luck. Maybe it needs more that one port 4444 opened/forwarded? Documentation only mentions routers listening for new sessions on port 4444.  ## Expected behavior  Command: java -jar selenium-server-4.0.0-beta-3.jar node --grid-url http://selenium-grid-hub-ie.openshift_cluster_hostname should allow Node to connect. Node Log should show what Hub URL it is trying to connect to. The above configuration is working as expected when using Grid 3.","closed","","KrzysztofC","2021-06-01T16:14:18Z","2021-09-05T08:01:15Z"
"","9320","[dotnet] RelativeBy methods are inaccessible","## üêõ Bug Report  Currently, the RelativeBy methods (Near, LeftOf, etc) are non-static whereas the By methods (ClassName, LinkText) are.  The RelativeBy constructor is also protected, meaning the methods are inaccessible since you can't do `new RelativeBy().LeftOf()`.    ## To Reproduce    Detailed steps to reproduce the behavior: 1. Write a line of code to get a WebElement with a RelativeBy 2. Notice the object ref error  ## Expected behavior  The RelativeBy should be accessible in the same way that By is.  ## Test script or set of commands reproducing this issue  https://github.com/jordan-mace/relativeby-bug  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: N/A Browser version: N/A Browser Driver version: N/A Language Bindings version: dotnet 4.0.0-beta2 Selenium Grid version (if applicable):","closed","C-dotnet,","jordan-mace","2021-03-23T03:07:39Z","2021-09-05T08:06:42Z"
"","9415","ChromeDriver v90 not pathing user-data-dir option correctly","## üêõ Bug Report  ChromeDriver v90 introduced a bug that changes the location of relative paths used in the user-data-dir option to point to a different directory.  This means existing applications which use relative pathing on the profile directories with this option will fail upon upgrading to version 90.  ## To Reproduce    Detailed steps to reproduce the behavior:  When using chromedriver v90, create a folder in the same location as your chromedriver application named ""test"" and use the following option (C# example): chromeOptions.AddArgument(""user-data-dir=test"");  Run the application and see that you receive the following error: **Failed To Create Data Directory Google Chrome cannot read and write to its data directory: Test**   ## Expected behavior  This is expected to properly pick up the ""test"" folder and use it to store a chrome profile.  Note that this has been the behavior in version 89 and all other past versions that supported user-data-dir.  ## Test script or set of commands reproducing this issue  C#, Windows 10:  ``` // Create a folder named ""test"" in the same location as your application (and chromedriver) var chromeOptions = new ChromeOptions(); chromeOptions.AddArgument(""user-data-dir=test""); var driver = new ChromeDriver(chromeOptions); driver.Navigate().GoToUrl(""https://www.github.com""); ```  ## Environment  OS: Windows 10 Browser:  Chrome Browser version: 90.0.4430.85 Browser Driver version: 90.0.4430.24 Language Bindings version: N/A Selenium Grid version (if applicable): N/A","closed","","dougan778","2021-04-22T17:47:17Z","2021-09-05T08:03:24Z"
"","9414","ChromeDriver v90 no longer pathing user-data-dir option correctly","## üêõ Bug Report  ChromeDriver v90 introduced a bug that changes the location of relative paths used in the user-data-dir option to point to a different directory.  This means existing applications which use relative pathing on the profile directories with this option will fail upon upgrading to version 90.  ## To Reproduce    Detailed steps to reproduce the behavior:  When using chromedriver v90, create a folder in the same location as your chromedriver application named ""test"" and use the following option (C# example): chromeOptions.AddArgument(""user-data-dir=test"");  Run the application and see that you receive the following error: **Failed To Create Data Directory Google Chrome cannot read and write to its data directory: Test**   ## Expected behavior  This is expected to properly pick up the ""test"" folder and use it to store a chrome profile.  Note that this has been the behavior in version 89 and all other past versions that supported user-data-dir.  ## Test script or set of commands reproducing this issue  C#, Windows 10:  ``` // Create a folder named ""test"" in the same location as your application (and chromedriver) var chromeOptions = new ChromeOptions(); chromeOptions.AddArgument(""user-data-dir=test""); var driver = new ChromeDriver(chromeOptions); driver.Navigate().GoToUrl(""https://www.github.com""); ```  ## Environment  OS: Windows 10 Browser:  Chrome Browser version: 90.0.4430.85 Browser Driver version: 90.0.4430.24 Language Bindings version: N/A Selenium Grid version (if applicable): N/A","closed","","dougan778","2021-04-22T17:44:27Z","2021-09-05T08:06:44Z"
"","9254",".net selenium4.0.0  actions.Flick() no effect","## üêõ Bug Report  chrome Version :89 selenium:4.0 use action.flick() not effect.  code: `string driver_path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""Resources"");             ChromeDriverService driverService = ChromeDriverService.CreateDefaultService(driver_path,""chromedriver88.exe"");             var chromeOptions = new ChromeOptions();             chromeOptions.EnableMobileEmulation(""Nexus 6P"");             ChromeDriver chromeDriver = new ChromeDriver(driverService,chromeOptions);             chromeDriver.Navigate().GoToUrl(""http://www.baidu.com"");             IWebElement button = chromeDriver.FindElement(By.Id(""index-bn""));             TouchActions actions = new TouchActions(chromeDriver);             Thread.Sleep(5000);             actions.Flick(button, 10, -800, 300).Perform();`","closed","R-awaiting answer,","chenzanyu","2021-03-10T18:29:31Z","2021-09-05T08:15:39Z"
"","9789","Chrome driver does not close Driver Service Executor and Driver Command Executor threads","## üêõ Bug Report  Chrome driver does not close Driver Service Executor and Driver Command Executor threads ,and after some time produces   ``` java.lang.OutOfMemoryError: unable to create native thread: possibly out of memory or process/resource limits reached ```  ####  Error on Linux ``` Build info: version: '4.0.0-beta-4', revision: '29f46d02dd'    System info: host: '', ip: '', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-142-generic', java.version: '11.0.12'    Driver info: org.openqa.selenium.chrome.ChromeDriver    Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless, window-size=1400,1400, user-agent=test ..., --no-sandbox, --disable-dev-shm-usage], extensions: []}}], desiredCapabilities=Capabilities {--whitelisted-ips: , browserName: chrome, ensureCleanSession: true, goog:chromeOptions: {args: [--headless, window-size=1400,1400, user-agent=test ..., --no-sandbox, --disable-dev-shm-usage], extensions: []}}}]        at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:126)        at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:84)        at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:62)        at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)        at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:162)        at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:137)        at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:612)        at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:244)        at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:165)        at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:89)        at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:99)        at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:86)        at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:75)        ...        at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:779)        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)        at net.bull.javamelody.MonitoringSpringInterceptor.invoke(MonitoringSpringInterceptor.java:76)        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)        at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:750)        at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:692)        ...        at jdk.internal.reflect.GeneratedMethodAccessor100.invoke(Unknown Source)        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)        at java.base/java.lang.reflect.Method.invoke(Unknown Source)        at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)        at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)        at java.base/java.util.concurrent.FutureTask.runAndReset(Unknown Source)        at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)  ```  JConsole Threads (>200 Live Threads after 7 min, scheduled service execution fixed period  10s):   On Windows ``` Name: Driver Service Executor State: WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@41b0f2fc Total blocked: 0  Total waited: 29  Stack trace:  java.base@11.0.2/jdk.internal.misc.Unsafe.park(Native Method) java.base@11.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194) java.base@11.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081) java.base@11.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433) java.base@11.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054) java.base@11.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114) java.base@11.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) java.base@11.0.2/java.lang.Thread.run(Thread.java:834)     Name: Driver Command Executor State: WAITING on java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject@4909a6ea Total blocked: 0  Total waited: 3  Stack trace:  java.base@11.0.2/jdk.internal.misc.Unsafe.park(Native Method) java.base@11.0.2/java.util.concurrent.locks.LockSupport.park(LockSupport.java:194) java.base@11.0.2/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2081) java.base@11.0.2/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:433) java.base@11.0.2/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1054) java.base@11.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1114) java.base@11.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) java.base@11.0.2/java.lang.Thread.run(Thread.java:834) ```  Similar issues:  1. https://github.com/SeleniumHQ/selenium/issues/9224  2. https://github.com/SeleniumHQ/selenium/issues/9153  2. https://github.com/SeleniumHQ/selenium/issues/8028 3. https://github.com/SeleniumHQ/selenium/issues/7989  ## To Reproduce  This is just a possible way to reproduce it (we have a very similar setup in our scheduled service), i have not tested it:   `seleniumVersion = '4.0.0-beta-4'`  ```       for (int i = 0; i < 6000; i++) {    var driverContext = new EventFiringWebDriver(new ChromeDriver());    driverContext.close();    driverContext.quit(); } ```    ## Expected behavior Driver Service Executor and Driver Command Executor threads are closed.  ## Environment  OS: Linux, Windows 10  Browser: Chrome  Browser version: 93.0.4577.63 Browser Driver version: ChromeDriver 93.0.4577.15 Language Bindings version: Java 11.0.10 Selenium Grid version (if applicable): 4.0.0-beta-4   Netty version (if applicable): 4.1.67.Final","closed","needs-triaging,","ajurge","2021-09-03T07:11:26Z","2021-10-05T00:05:49Z"
"","9224","ChromeDriver does not close AsyncHttpClient threads","## üêõ Bug Report  Chrome driver does not close AsyncHttpClient threads and after some time produces   ``` java.lang.OutOfMemoryError: unable to create native thread: possibly out of memory or process/resource limits reached ```  ####  ``` Build info: version: '4.0.0-beta-1', revision: '9c03156c2b' System info: os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-128-generic', java.version: '11.0.10' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [null, newSession {desiredCapabilities=Capabilities {--whitelisted-ips: , browserName: chrome, ensureCleanSession: true}}] Capabilities {} 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:252) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:174) 	at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:82) ```  JConsole Threads (>200 Live Threads after 1 hour, scheduled service execution fixed period  30s):    ``` JName: AsyncHttpClient-234-1 State: RUNNABLE Total blocked: 0  Total waited: 0 Stack trace:  java.base@11.0.2/sun.nio.ch.WindowsSelectorImpl$SubSelector.poll0(Native Method) java.base@11.0.2/sun.nio.ch.WindowsSelectorImpl$SubSelector.poll(WindowsSelectorImpl.java:339) java.base@11.0.2/sun.nio.ch.WindowsSelectorImpl.doSelect(WindowsSelectorImpl.java:167) java.base@11.0.2/sun.nio.ch.SelectorImpl.lockAndDoSelect(SelectorImpl.java:124)    - locked io.netty.channel.nio.SelectedSelectionKeySet@6d364864    - locked sun.nio.ch.WindowsSelectorImpl@48886843 java.base@11.0.2/sun.nio.ch.SelectorImpl.select(SelectorImpl.java:141) app//io.netty.channel.nio.SelectedSelectionKeySetSelector.select(SelectedSelectionKeySetSelector.java:68) app//io.netty.channel.nio.NioEventLoop.select(NioEventLoop.java:810) app//io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:457) app//io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) app//io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) app//io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) java.base@11.0.2/java.lang.Thread.run(Thread.java:834) ```  Similar issues:  1. https://github.com/SeleniumHQ/selenium/issues/9153  2. https://github.com/SeleniumHQ/selenium/issues/8028 3. https://github.com/SeleniumHQ/selenium/issues/7989  ## To Reproduce  This is just a possible way to reproduce it (we have a very similar setup in our scheduled service), i have not tested it:   `seleniumVersion = '4.0.0-beta-1'` `nettyVersion = '4.1.59.Final'`  ```       for (int i = 0; i < 6000; i++) {    var driverContext = new EventFiringWebDriver(new ChromeDriver());    driverContext.close();    driverContext.quit(); } ```    ## Expected behavior This worked with: `seleniumVersion = '4.0.0-alpha-7'` `nettyVersion = '4.1.59.Final'`  ## Environment  OS: Linux, Windows 10  Browser: Chrome  Browser version: 88.0.4324.190 Browser Driver version: ChromeDriver 88.0.4324.96  Language Bindings version: Java 11.0.10 Selenium Grid version (if applicable): 4.0.0-beta-1   Netty version (if applicable): 4.1.59.Final","closed","C-java,","ajurge","2021-03-01T15:09:31Z","2021-09-05T08:15:45Z"
"","9108","driver.execute_script() - javascript return element","## üêõ Bug Report  Certain elements like `utag` will not be return via (which is working in javascript)   ## To Reproduce  Detailed steps to reproduce the behavior:  python3.8 pip install selenium==3.141.0   Why does selenium return utag[""data""] works but utag fails?  How to return/retrieve/export the whole utag object (via selenium in python)?  ``` typeof(dataLayer) ""object"" typeof(utag) ""object"" typeof(utag.db_log) ""object"" ```  `// on page https://tealium.com/`  ``` var testFunc = function(){         return dataLayer; }; testFunc () // works  var testFunc = function(){         return utag.data; }; testFunc () // works  var testFunc = function(){         return utag; }; testFunc () // works ```  ``` from selenium import webdriver driver = webdriver.Firefox() driver.get(""https://tealium.com"")   #jsObj = '''utag_err'''            # fails #jsObj = '''console.log( utag )''' # fails  jsObj = '''utag.data'''            # works  jsObj = '''utag[""data""]'''         # works  #jsObj = '''utag'''                # fails  searchTxt= f'''return {jsObj}''' browser.execute_script(  searchTxt )   ```  ## Expected behavior  like in testFunc the return of `utag` should work ( as it does with `utag[""data""]`)  ## Test script or set of commands reproducing this issue  see above please  ## Environment  OS: Linux Browser: Firefox, Chromium Browser version: 78.3.0esr (64-bit), Version 85.0.4183.121 (Developer Build) (64-bit) Browser Driver version: geckodriver 0.26.0 , ChromeDriver 88.0.4324.27 Language Bindings version:","closed","R-awaiting answer,","InLaw","2021-01-26T21:28:26Z","2021-09-05T08:21:37Z"
"","9895","RC2: Cannot initialize Select objects (for dropdowns) due to getDomAttribute method throwing UnsupportedOperationException","## üêõ Bug Report  Cannot initialize any Select object in Selenium RC2. The reason is the constructor in the Select class is calling the 'getDomAttribute' method to check whether this is a multi-value dropdown. However the 'getDomAttribute' method throws an UnsupportedOperationException. The 'getAttribute' method should be used instead in the Select constructor.  ## To Reproduce  Create a WebElement corresponding to the top level HTML element of a dropdown (the select tag). Then, create the corresponding Select object: Select dropdown = new Select(anyElement)  ## Expected behavior  The Select object is created and the tester can now interact with the dropdown represented by this object.  ## Test script or set of commands reproducing this issue  Select dropdown = new Select(anyElement)  ## Environment  OS: Windows 7 Browser: Chrome  Browser version: 94.0.4606.71 Browser Driver version: latest Language Bindings version: Java 11","closed","R-awaiting answer,","iamalittletester","2021-10-08T14:34:55Z","2021-12-10T00:06:48Z"
"","9703","cannot clone DesiredCapabilities with org.apache.commons.lang3.SerializationUtils","## üêõ Bug Report  cannot clone org.openqa.selenium.DesiredCapabilities with org.apache.commons.lang3.SerializationUtils.clone()  ``` org.apache.commons.lang3.SerializationException: IOException while reading or closing cloned object data  	at org.apache.commons.lang3.SerializationUtils.clone(SerializationUtils.java:98) 	at testing.SerializationTest.Test_serializeDesiredCapabilities(SerializationTest.java:12)         ... more Caused by: java.io.InvalidClassException: org.openqa.selenium.remote.DesiredCapabilities; no valid constructor 	at java.base/java.io.ObjectStreamClass$ExceptionInfo.newInvalidClassException(ObjectStreamClass.java:159) 	at java.base/java.io.ObjectStreamClass.checkDeserialize(ObjectStreamClass.java:875) 	at java.base/java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2140) 	at java.base/java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1668) 	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:482) 	at java.base/java.io.ObjectInputStream.readObject(ObjectInputStream.java:440) 	at org.apache.commons.lang3.SerializationUtils.clone(SerializationUtils.java:92) 	... 28 more  ```  ## To Reproduce  clone empty or filled DesiredCapabilities with SerializationUtils.clone()  ## Expected behavior  - no org.apache.commons.lang3.SerializationException is thrown - DesiredCapabilities are cloned successfully  ## Test script or set of commands reproducing this issue  ``` package testing;  import org.apache.commons.lang3.SerializationUtils; // Maven: org.apache.commons:commons-lang3:3.9 import org.openqa.selenium.remote.DesiredCapabilities; import org.testng.Assert; import org.testng.annotations.Test;  public class SerializationTest {     @Test     public void Test_serializeDesiredCapabilities() {         DesiredCapabilities dc = new DesiredCapabilities();         dc.setCapability(""k"", ""v""); // this line can be left out to reproduce         DesiredCapabilities clone = SerializationUtils.clone(dc);         Assert.assertNotNull(clone);     } }  ```  ## Environment OS : Windows 10, build 19042.1110 Language Bindings version : Java, Maven: org.seleniumhq.selenium:selenium-api:3.141.59 JDK / JVM : Azul JVM / JDK 11.0.8 Browser : any  ## Possible fix Make constructor org.openqa.selenium.AbstractCapabilities() public. This could be an implicit requirement of the implementations of java.io.ObjectStreamClass and java.io.ObjectOutputStream - at least for consumption of Serializable by org.apache.commons.lang3.SerializationUtils.","closed","R-awaiting answer,","gogro","2021-07-31T15:14:40Z","2021-09-27T00:05:51Z"
"","9589","Can't click any element inside an iframe which itself is a part of shadow DOM","## üêõ Bug Report  Cannot click an element that lies inside an iframe element which itself is a part of shadow DOM. First I read the shadowRoot property of the shadowHost element using ExecuteScript() method from under driver: `var root = (IWebElement)(driver as IJavaScriptExecutor).ExecuteScript(""return arguments[0].shadowRoot"");`  Then I am able to locate the iframe lying inside that shadowRoot element and switch to it like this: ``` var iframe = root.FindElement(By.TagName(""iframe"")); driver.SwitchTo().Frame(iframe); ``` Now, I can easily access any element. There is no problem with that: `var btnElement = driver.FindElement(By.CcsSelector(""button""));` _// **btnElement** contains a valid reference_  Now trying to click that element like this `btnElement.Click();` throws the **WebDriverException** saying **_""unknown error: no element reference returned by script""_**.  An interesting fact is that I can simulate Click with SendKeys(Keys.Enter) invoked from under the element (**btnElement** in this case). Js click performed in the folowing way: `(driver as IJavaScriptExecutor).ExecuteScript(""arguments[0].click();"", btnElement);` also works fine.  I also tried switching to earlier versions of Selenium WebDriver (down to 2.39.0) but got nowhere, - I was still able to reproduce the issue.  So, if you have any thoughts/ideas about what might cause the issue, please let me know. I would really appreciate any help!  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 91.0.4472.106 Browser Driver version: 91.0.4472.101 Language Bindings version: C#, 3.141.0","closed","","OrestKavnyi","2021-06-17T16:33:51Z","2021-09-05T08:01:03Z"
"","9462","Decorated web element breaks WebElementToJsonConverter","## üêõ Bug Report  Calling executeScript with a WebElement argument, does not work when using a RemoteWebDriver that was decorated. The decorated WebElement object is a proxy implementing the following interfaces: [interface org.openqa.selenium.WebElement, interface org.openqa.selenium.support.decorators.Decorated, interface org.openqa.selenium.SearchContext, interface org.openqa.selenium.interactions.Locatable, interface org.openqa.selenium.WrapsDriver, interface org.openqa.selenium.TakesScreenshot]  As you can see in WebElementToJsonConverter, this would enter no if and would cause the IllegalArgumentException at the end of the method.  ## Suggestions for fix  Option 1) modify the WebDriverDecorator to add WrapsElement to the WebElement being proxied, returning the Decorated.getOriginal() as a result. As WebElementToJson already treats WrapsElement, this should fix it.  Option 2) modify WebElementToJson  to check if arg instanceof Decorated, and in this case continue using Decorated.getOriginal(). This will be a RemoteWebElement in this case and can then be processed by the `if (arg instanceof RemoteWebElement)` already present in the WebElementToJson.  ## Environment Language Bindings version: Java 4.0.0-beta3 Browser: RemoteWebDriver using Firefox in selenium/standalone-firefox:4.0.0-beta-3-20210426 docker image.","closed","C-java,","rcesarlumis","2021-05-10T19:09:16Z","2021-09-05T08:03:32Z"
"","8912","ByIdOrName: unexpected behaviour of findElements","## üêõ Bug Report  By looking at the source code of [ByIdOrName](https://github.com/SeleniumHQ/selenium/blob/d7dfd8df53c2b96fe44c9bf06e91e8e793f0b4d2/java/client/src/org/openqa/selenium/support/ByIdOrName.java#L61) I noticed something I didn't expect.  ```   @Override   public List findElements(SearchContext context) {     List elements = new ArrayList();      // First: Find by id ...     elements.addAll(idFinder.findElements(context));     // Second: Find by name ...     elements.addAll(nameFinder.findElements(context));      return elements;   } ```  It is returning the sum of all the elements found, both by id AND by name. But I was expecting it to stop if the By.id returns any elements.  In code, I was expecting this:  ```   @Override   public List findElements(SearchContext context) {     // First: Find by id ...     foundById = idFinder.findElements(context);     if (!foundById.isEmpty()) {       return foundById;     }     // Second: Find by name ...     return nameFinder.findElements(context);   } ```  Or was that the intended behaviour?","closed","C-java,","alb-i986","2020-11-26T22:10:43Z","2021-09-05T08:30:17Z"
"","9766","search query URL issue on selenium.dev documentation page","## üêõ Bug Report  Broken search bar on the selenium.dev page adds /undefined to the url, causing a 404.   ### Steps to Reproduce:  1. Open Seleniums documentation page e.g: https://www.selenium.dev/selenium/docs/api/java/overview-summary.html  2. Click on the search bar (top-right corner) and enter a keyword like ""webdriver"" and click on the first suggested search result.  ## Expected behavior: I get redirected to the WebDriver documentations successfully.  ## Actual result: URL Path is https://www.selenium.dev/selenium/docs/api/java/undefined/org/openqa/selenium/WebDriver.html which brings up a 404. The issue is the ""undefined"" and removing it from the URL manually, fixes this.  ### Environment: Happens on both latest FF and Chrome. It's a server side issue so doesn't really matter.","closed","","KrischnaGabriel","2021-08-26T20:27:55Z","2021-09-27T00:05:46Z"
"","8906","Selenium Server ignores Firefox profile settings for auto selecting SSL client certificate","## üêõ Bug Report  Based on the relevant Firefox documentation and related posts found online, one (at least) of the following approaches is expected to propagate/create a Firefox profile configured to automatically select a client SSL certificate when running a selenium script against a remote Selenium Server node instance.    ## To Reproduce  Detailed steps to reproduce the behavior:  **Firefox certificate configuration**  1. Open Firefox on the local machine 2. Check the current profile name by navigating to `about:profiles`. Let's name the current profile `automation`. 3. Open a tab to `about:preferences#privacy` 4. Go to the `Certificates` section 5. Check `Select one automatically` 6. Uncheck `Query OCSP responder...` 7. Select `View Certificates...` 8. Import your client SSL certificate under `Your Certificates` 9. Navigate to the URL that requires the cert.  **Selenium Server node**  **Note:** In the following test setup both the hub and node are local, but the same configuration was tested on a distributed system as well.  Create a `nodeConfig.json` file for the Selenium Server node and configure the `capabilities` object with the profile/certificate settings:  ``` {   ""capabilities"":   [     {       ""browserName"": ""firefox"",       ""platform"": ""MAC"",       ""maxInstances"": 2,       ""acceptSslCerts"": true,	       ""firefox_profile"": ""automation"",       ""cleanSession"": true     }   ], ```  Run the node instance with:  `java -Dwebdriver.firefox.profile=automation -Dwebdriver.firefox.acceptSslCerts=true -jar selenium-server-standalone-3.141.59.jar -role node -port 4445 -hub http://localhost:4444`  or pointing the above config file:  `java -jar selenium-server-standalone-3.141.59.jar -role node -nodeConfig nodeConfig.json`  **Node.js script**  ```     var fs = require('fs');     var encodedProfile = fs         .readFileSync('/Users/MyUser/Library/Application\ Support/Firefox/Profiles/6pst39om.automation.zip')         .toString('base64');     const serverUrl = 'http://localhost:4444'; // Selenium Server hub     const options = new firefox.Options()         .setPreference('profile', encodedProfile)         .setAcceptInsecureCerts(true)         .setPreference(""security.default_personal_cert"", ""Select Automatically"")     const builder = new Builder();     return builder         .usingServer(serverUrl)         .withCapabilities(Capabilities.firefox()             .setPlatform('mac')         )         .setFirefoxOptions(options)         .build(); ```  **NOTE** `6pst39om.automation.zip` contains the zipped `6pst39om.automation` profile folder. I've tried both compressing the entire folder or just its content.  ## Expected behavior  The test selenium script above should be able to open Firefox and navigate to the URL that requires the pre-configured client certificate, without requesting any user interaction.  ## Test script or set of commands reproducing this issue  The test selenium script opens Firefox and navigates to the protected URL, but the server returns an access denied error.  ## Environment  OS: macOS Mojave 10.14.6 Browser: Firefox Browser version: 83.0 (64-bit) Browser Driver version: GeckoDriver 0.28.0 Language Bindings version: NodeJS 4.0.0-alpha.7 Selenium Grid version (if applicable): 3.141.59","closed","R-awaiting answer,","hurrikam","2020-11-25T11:32:37Z","2021-09-05T08:18:59Z"
"","9534","Unable to compile 4.0.0-beta3","## üêõ Bug Report  Attempting to update to selenium 4 from selenium 3.141.59.  I get the following build errors:  Cannot find symbol: org.openqa.selenium.By; org.openqa.selenium.WebDriver; org.openqa.selenium.WebElement; org.openqa.selenium.Point; org.openqa.selenium.Alert; org.openqa.selenium.JavascriptExecutor; org.openqa.selenium.Keys; org.openqa.selenium.OutputType; org.openqa.selenium.TakesScreenshot; org.openqa.selenium.TimeoutException; org.openqa.selenium.logging org.openqa.selenium.MutableCapabilities;  Package does not exist: org.openqa.selenium.support.ui org.openqa.selenium.interactions org.openqa.selenium.chrome org.openqa.selenium.edge org.openqa.selenium.firefox org.openqa.selenium.ie   ## Expected behavior  Able to do a maven build  ## Environment  OS: Windows 10 Language Bindings version: Java 4.0.0-beta-3  POM (versions): `		3.8.0 		3.0.1 		3.0.1 		1.6.0 		7.5.1 		3.2.12 		2.8.0 		1.9 		4.21.29 		4.0.0 		30.1.1-jre 		5.0.3 		5.1 		0.5.4 		1.1.1 		1.6.2 		5.8.0 		4.3.3 		1.3.1 		2.14.1 		2.14.1 		2.14.1 		8.4.1 		11.1.0.7.0 		5.4 		5.7.2 		4.3.3 		4.0.0-beta-3 		6.14.3 		4.7.1 		4.4.3 `","closed","needs-triaging,","gregma","2021-06-01T14:15:40Z","2021-09-05T08:01:16Z"
"","8961","Selenium Multiple Instances - Cannot start the driver service on http://localhost:port","## üêõ Bug Report  Attempting to launch multiple instances of Geckodriver or Chromedriver at once causes the following error:  ``` OpenQA.Selenium.WebDriverException: Cannot start the driver service on http://localhost:55867/        at OpenQA.Selenium.DriverService.Start()        at OpenQA.Selenium.Remote.DriverServiceCommandExecutor.Execute(Command commandToExecute)        at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)        at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)        at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities) ```  ## To Reproduce  ``` class Program     {         static void Main(string[] args)         {             for (int i = 1; i  DriverStuff());             }             Console.ReadLine();         }          public static void DriverStuff()         {             FirefoxDriver driver = new FirefoxDriver();             driver.Navigate().GoToUrl(""https://www.bing.com"");         }     } ```  Note: I found the ""limit"" of multiple instances at once varies based on what machine I test on. You may need to up the limit from 15 to 30 to reproduce.  While in practice i'm not launching 15 instances (i'm only launching 5 at once in Production via a scheduled task that starts a console application which makes 5 HTTP requests to a web service, which starts 5 selenium sessions), I'm still receiving this error on my Production server with only 5 instances.  Also note that this error only happens on my Production server 60% of the time or so, meaning most of the runs will fail because of this error, but other times i won't get this error and it will succeed.  ## Expected behavior  Successful launch of all instances without error.  ## Environment  OS: Windows 10, Windows Server 2016 Browser: Firefox, Chrome Browser Driver version: GeckoDriver 0.28.0, ChromeDriver 87.0.4280.88","closed","C-dotnet,","BainsDev","2020-12-12T05:46:03Z","2021-09-05T08:27:37Z"
"","9748","Groovy script fails to run in SoapUI open source version 5.6.0","## üêõ Bug Report  Attempting to launch a Firefox browser session as a SoapUI TestStep causes a NoSuchMethodError to occur when run using Ubuntu 20.04.2 LTS environment  ## To Reproduce  Detailed steps to reproduce the behavior:  1. Follow the Selenium installation directions including the installation of the geckodriver for a Linux or Windows OS 2. Install SoapUI open source version 5.6.0 3. Move copies of the Selenium JAR files to the SoapUI /bin/ext folder 4. Launch SoapUI 5. Create a SoapUI TestSuite 6. Create a SoapUI TestCase 7. Create a SoapUI TestStep using the provided test script 8. Start the TestStep  ## Expected behavior  A Firefox Browser window should open  ## Test script or set of commands reproducing this issue  ``` import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver;  def project = testRunner.testCase.testSuite.project;  String strNAESBPurchasedStandardsURI = project.getPropertyValue(""NAESBPurchasedStandardsURI""); log.info(""NAESB Purchased Standards Screen URI: "" + strNAESBPurchasedStandardsURI);  System.setProperty(""webdriver.gecko.driver"",""/usr/local/bin/geckodriver""); WebDriver driver = new FirefoxDriver(); context[""driver""] = driver; driver.get(strNAESBPurchasedStandardsURI); ``` ## Generated Stack Overflow  ``` Wed Aug 18 15:19:38 EDT 2021:ERROR:java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkState(ZLjava/lang/String;Ljava/lang/Object;)V    java.lang.NoSuchMethodError: com.google.common.base.Preconditions.checkState(ZLjava/lang/String;Ljava/lang/Object;)V    	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)    	at org.openqa.selenium.firefox.GeckoDriverService.access$000(GeckoDriverService.java:44)    	at org.openqa.selenium.firefox.GeckoDriverService$Builder.usingFirefoxBinary(GeckoDriverService.java:160)    	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:187)    	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:147)    	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:125)    	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)    	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)    	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)    	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)    	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)    	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:105)    	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)    	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:238)    	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:242)    	at Script1.run(Script1.groovy:11)    	at com.eviware.soapui.support.scripting.groovy.SoapUIGroovyScriptEngine.run(SoapUIGroovyScriptEngine.java:90)    	at com.eviware.soapui.impl.wsdl.teststeps.WsdlGroovyScriptTestStep.run(WsdlGroovyScriptTestStep.java:141)    	at com.eviware.soapui.impl.wsdl.panels.teststeps.GroovyScriptStepDesktopPanel$RunAction$1.run(GroovyScriptStepDesktopPanel.java:250)    	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)    	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)    	at java.base/java.lang.Thread.run(Thread.java:834) ```   ## Environment  OS: Ubuntu 20.04.2 LTS Browser: Firefox Browser version: 91.0 (64-bit) Mozilla Friefox for Ubuntu cononical -1.0 Browser Driver version: geckodriver-v.0.29.1-linux64 Language Bindings version: java 11.0.7 2020-04-14 LTS  Selenium Grid version (if applicable): NA","closed","R-awaiting answer,","dfcoffin","2021-08-19T16:53:23Z","2021-10-10T00:06:26Z"
"","9518","Configure Edge (IE Mode) using the Java version of Selenium and it doesn't launch Edge.","## üêõ Bug Report  Attempting to configure Edge (IE Mode) using the Java version of Selenium and it doesn't launch Edge.  ## To Reproduce  1. Use Edge in IE mode    https://docs.microsoft.com/en-us/deployedge/edge-ie-mode-policies  2. Follow the directions for the ‚ÄúRequired Configuration‚Äù    https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver  3. In test script, use Edge in IE mode by the following code -    InternetExplorerDriverService ieService = InternetExplorerDriverService.createDefaultService();    DesiredCapabilities caps = new DesiredCapabilities();   caps.setAcceptInsecureCerts(false);   caps.setBrowserName(""internet explorer"");   caps.setCapability(""ie.edgechromium"", true);   caps.setCapability(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");    InternetExplorerOptions options = new InternetExplorerOptions();   options.enablePersistentHovering();   options.ignoreZoomSettings();   options.requireWindowFocus();   options.setCapability(""ignoreProtectedModeSettings"", true);   WebDriver driver = new InternetExplorerDriver(ieService, options.merge(caps));  4. Open site which is already configured to open in Edge (IE Mode)  the result is  1. Internet Explorer launches and accesses the site (not MS Edge)  ## Expected behavior  Launch Edge browser in IE Mode  ## Test script or set of commands reproducing this issue  ``` @Test     public void Test1() throws InterruptedException {          System.out.println(""Setting up IEdriver "");         System.setProperty(""webdriver.ie.driver"", ""C:\\Users\\ofoxborn\\Desktop\\IE_Edge\\IEDriverServer.exe"");          InternetExplorerDriverService ieService = InternetExplorerDriverService.createDefaultService();          DesiredCapabilities caps = new DesiredCapabilities();         caps.setAcceptInsecureCerts(false);         caps.setBrowserName(""internet explorer"");         caps.setCapability(""ie.edgechromium"", true);         caps.setCapability(""ie.edgepath"", ""C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe"");          InternetExplorerOptions options = new InternetExplorerOptions();         options.enablePersistentHovering();         options.ignoreZoomSettings();         options.requireWindowFocus();         options.setCapability(""ignoreProtectedModeSettings"", true);         WebDriver driver = new InternetExplorerDriver(ieService, options.merge(caps));         driver.manage().window().maximize();         driver.get(""https://stage-aarpcompas.uhc.com/Compas/control"");          driver.manage().timeouts().pageLoadTimeout(40, TimeUnit.SECONDS);         driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);           Thread.sleep(5000);         System.out.println(""caps.getBrowserName() = "" + caps.getBrowserName());         System.out.println(""caps browserName = "" + caps.getCapability(""browserName""));          driver.quit();     } ```   ## Environment  OS: Windows 10 Browser: Microsoft Edge Browser version: Edge(90.0.818.66), IE11(11.329.19041.0) Browser Driver version: IEDriverServer 3.14.0 or 3.150.1 Language Bindings version: Java 3.151.0 JDK - 1.8","closed","D-edge,","richman555","2021-05-26T20:53:48Z","2022-02-24T00:09:01Z"
"","9349","org.openqa.selenium.ScriptTimeoutException in executeScript","## üêõ Bug Report  Asynchronous execution of javascript posted via WebDriver requires a script timeout but this should not impact Synchronous execution. The executeScript is timing out with ""org.openqa.selenium.ScriptTimeoutException"" exception due to a predominant script timeout set in milliseconds (1000 in my case) for executeAsyncScript in a method that executes well before the control comes to executeScript and this synchronous execution requires more than 1000ms.   PS: The setScriptTimeOut API is only intended to be applicable for executeAsyncScript atleast as per the documentation.    ## To Reproduce  1. set script time out to a very less value, 1000ms. 2. execute selenium webdriver for firefox implementation of executeScript that takes more than 1000ms. 3. a script timeout runtime exception is thrown.    ## Expected behavior  executeScript should not be impacted with script timeout value as it is applicable for asynchronous executeAsyncScript  ## Test script or set of commands reproducing this issue  ``` driver.manage().timeouts().setScriptTimeOut(1000, TimeUnit.MILLISECONDS); ((JavascriptExecutor) driver).executeScript(script); ```  ## Environment  OS:  Mac OSX Browser:  FireFox Browser version:  78.5 Browser Driver version:  GeckoDriver 0.28.0 Language Bindings version:  Java 3.141.59  Selenium Grid version (if applicable):","closed","R-awaiting answer,","MaheshDesineedi","2021-03-30T16:13:20Z","2021-09-05T08:06:45Z"
"","9233","Fail to load msedgedriver on macos when using Browser.EDGE as browser's name","## üêõ Bug Report  As title suggested.    ## To Reproduce  I am using the JavaScript binding package on macos.  Try to invoke `Builder` with edge(the chromium one), and here is the code  ```js import { Builder, By, Key, until, Browser } from ""selenium-webdriver""; (async function example() {   let driver = await new Builder().forBrowser(Browser.EDGE).build();   try {     await driver.get(""http://www.google.com/ncr"");     await driver.findElement(By.name(""q"")).sendKeys(""webdriver"", Key.RETURN);     await driver.wait(until.titleIs(""webdriver - Google Search""), 1000);   } finally {     await driver.quit();   } })(); ```  Run it in terminal and I got this  ```shell Error: The WebDriver for Edge could not be found on the current PATH. Please download the latest version of MicrosoftWebDriver.exe from https://developer.microsoft.com/en-us/microsoft-edge/tools/webdriver/ and ensure it can be found on your PATH. ```    ## Expected behavior  `msedgedriver` can be loaded and executed correctly when calling `Builder` with `Browser.EDGE`.  ## Why this is happening  It turned out that the `Browser.EDGE` is `'MicrosoftEdge'`, https://github.com/SeleniumHQ/selenium/blob/4464ac4f8230150824f6bf2e4075cd1f53a648c7/javascript/node/selenium-webdriver/lib/capabilities.js#L33 which cannot match `EDGE_CHROMIUM_BROWSER_NAME` in https://github.com/SeleniumHQ/selenium/blob/4464ac4f8230150824f6bf2e4075cd1f53a648c7/javascript/node/selenium-webdriver/edge.js#L96  This lead to `locateSynchronously` return `null` on macos https://github.com/SeleniumHQ/selenium/blob/4464ac4f8230150824f6bf2e4075cd1f53a648c7/javascript/node/selenium-webdriver/edge.js#L110-L120  ## Environment  OS: maxos Browser: msedge Browser version: 88.0.705.81 Browser Driver version: msedgedriver 88.0.705.81 Language Bindings version: JavaScript 4.0.0-beta.1 Selenium Grid version (if applicable): null  ## Question  So my question is: Am I using `Browser.EDGE` the wrong way? Is there another way to get edge's name without hard coding?","closed","R-awaiting answer,","liuyuchenzh","2021-03-03T10:56:07Z","2021-09-05T08:15:44Z"
"","9079","Selenium Prerelease Beta causes WebDriver exception","## üêõ Bug Report  As per https://github.com/SeleniumHQ/selenium/issues/8974#issuecomment-762957299 I tried running my tests with the newest selenium jars. However, with both new jars i started getting an exception when the test is about to open a menu in our application  ## Exception  ``` org.openqa.selenium.WebDriverException: Returned value cannot be converted to WebElement: {error=script timeout, message=Returned value cannot be converted to WebElement: {message=invalid selector: An invalid or illegal selector was specified   (Session info: chrome=87.0.4280.141)   (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.1.7601 SP1 x86_64)} Build info: version: '4.0.0-beta-1', revision: '02d5e641d5' System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '11.0.2' Driver info: driver.version: RemoteWebDriver, stacktrace=org.openqa.selenium.WebDriverException: Returned value cannot be converted to WebElement: {message=invalid selector: An invalid or illegal selector was specified   (Session info: chrome=87.0.4280.141)   (Driver info: chromedriver=2.36.540470 (e522d04694c7ebea4ba8821272dbef4f9b818c91),platform=Windows NT 6.1.7601 SP1 x86_64)} Build info: version: '4.0.0-beta-1', revision: '02d5e641d5' System info: host: 'PRIVATE', ip: 'PRIVATE', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '11.0.2' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354) 	at org.openqa.selenium.By$ByCssSelector.findElement(By.java:497) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:328) 	at org.openqa.selenium.grid.node.CustomLocatorHandler.execute(CustomLocatorHandler.java:202) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.grid.node.Node.execute(Node.java:220) 	at org.openqa.selenium.remote.http.Route$CombinedRoute.handle(Route.java:327) 	at org.openqa.selenium.remote.http.Route.execute(Route.java:67) 	at org.openqa.selenium.grid.web.AddWebDriverSpecHeaders.lambda$apply$0(AddWebDriverSpecHeaders.java:29) 	at org.openqa.selenium.grid.web.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.grid.web.ErrorFilter.lambda$apply$0(ErrorFilter.java:44) 	at org.openqa.selenium.remote.http.Filter$1.execute(Filter.java:64) 	at org.openqa.selenium.netty.server.SeleniumHandler.lambda$channelRead0$0(SeleniumHandler.java:44) 	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515) 	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:834) } Build info: version: '4.0.0-beta-1', revision: '02d5e641d5' System info: host: 'PRIVATE', ip: '172.18.68.193', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.2' Driver info: driver.version: RemoteWebDriver 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354) 	at org.openqa.selenium.By$ById.findElement(By.java:210) 	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:328) 	at PRIVATE$1.apply(PRIVATE.java:320) 	at PRIVATE$1.apply(PRIVATE.java:1) 	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:210) 	at PRIVATE.findElement(PRIVATE.java:318) 	at PRIVATE.openMenuByIdPath(PRIVATE.java:339) 	at PRIVATE.openSpecificMenu(PRIVATE.java:311) 	at PRIVATE.openList(PRIVATE.java:209) 	at PRIVATE.openListByType(PRIVATE.java:870) 	at PRIVATE.openObjectTypeList(PRIVATE.java:890) 	at PRIVATE(PRIVATE.java:403) 	at PRIVATE(PRIVATE.java:420) 	at PRIVATE(PRIVATE.java:136) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at java.base/java.lang.Thread.run(Thread.java:834) ``` ## Test script or set of commands reproducing this issue  start C:/""Program Files""/Java/jdk-11.0.2/bin/java -jar selenium-server-beta.jar hub --port 4452 --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456  Node start C:/""Program Files""/Java/jdk-11.0.2/bin/java -jar selenium-server-beta.jar node --detect-drivers true -I ""chrome"" -I ""edge"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1  ## Environment OS: Windows 7 Browser: IE, Chrome Browser version: IE 11.0.9600.19356 IE Browser Driver version: 3.150.1 Browser version: Chrome 87.0.4280.141 Chrome Browser Driver version: 87.0.4280.88 Selenium Grid version : Grid 4 (4.0.0-alpha-7)","closed","R-awaiting answer,","hnestorova","2021-01-21T11:15:42Z","2021-09-05T08:19:09Z"
"","9171","Selenium Prerelease Beta causes WebDriver exception- I/O exception (java.net.SocketException) or java.net.BindExceptioncaught when processing request to {}->http://HUB:4447","## üêõ Bug Report  As per https://github.com/SeleniumHQ/selenium/issues/8974#issuecomment-762957299 I tried running my tests from Jenkins with the newest selenium jars. However, after a period of an hour or so after the tests have been started, I start getting either:  06:10:38    [testng] 2021-02-13 06:10:35 EET (Europe/Helsinki) running 'Testc1' on node 'http://NODE_IP:5555' **06:11:08    [testng] - I/O exception (java.net.SocketException) caught when processing request to {}->http://HUB:4447: No buffer space available (maximum connections reached?): connect** 06:11:08    [testng] - Retrying request to {}->http://HUB:4447 06:11:08    [testng] - I/O exception (java.net.SocketException) caught when processing request to {}->http://HUB:4447: No buffer space available (maximum connections reached?): connect 06:11:08    [testng] - Retrying request to {}->http://HUB:4447 06:11:08    [testng] - I/O exception (java.net.SocketException) caught when processing request to {}->http://HUB:4447: No buffer space available (maximum connections reached?): connect 06:11:08    [testng] - Retrying request to {}->http://HUB:4447 06:11:44    [testng] 2021-02-13 06:11:40 EET (Europe/Helsinki) running Test227' on node 'http://NODE_IP:5555'  or:  07:34:15    [testng] 2021-02-13 07:34:11 EET (Europe/Helsinki) running 'Test1' on node 'http://NODE_IP:5555' **07:35:00    [testng] - I/O exception (java.net.BindException) caught when processing request to {}->http://HUB:4447: Address already in use: connect** 07:35:00    [testng] - Retrying request to {}->http://HUB:4447 07:35:28    [testng] Feb 13, 2021 7:35:26 AM org.openqa.selenium.remote.ProtocolHandshake createSession 07:35:28    [testng] INFO: Detected dialect: W3C 07:35:35    [testng] Feb 13, 2021 7:35:33 AM org.openqa.selenium.remote.ProtocolHandshake createSession 07:35:35    [testng] INFO: Detected dialect: W3C 07:36:34    [testng] Feb 13, 2021 7:36:32 AM org.openqa.selenium.remote.ProtocolHandshake createSession 07:36:34    [testng] INFO: Detected dialect: W3C 07:37:01    [testng]  07:37:01    [testng] =============================================== 07:37:01    [testng] Failed suite [Tests] 07:37:01    [testng] Total tests run: 626, Passes: 75, Failures: 14, **Skips: 537**   ## To Reproduce  My setup is the following - I have several grids with hubs listening to different ports on a single Virtual Machine . For a single grid I would have: **Hub** start C:/""Program Files""/Java/jdk-11.0.2/bin/java -jar selenium-server-beta.jar hub --port 4452 --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456  **Node** start C:/""Program Files""/Java/jdk-11.0.2/bin/java -jar selenium-server-beta.jar node --detect-drivers true -I ""chrome"" -I ""edge"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1  **TestNG xml** - note that for some  tags we have classes count greater than threads count and we also have parallel set to classes.  I tried adding more test tags so that number of classes in a tag does not exceed the available nodes (problem originally handled in https://github.com/SeleniumHQ/selenium/issues/8974), but this did not resolve the problem `                                                                                                                                                                             ` ![image](https://user-images.githubusercontent.com/30794708/107846145-1cecfc00-6dea-11eb-8b07-15747a8c1953.png)   ## Environment  OS: Windows 7 Browser: Edge, Chrome Edge Browser version: 88.0.705.63 Edge Browser Driver version:  88.0.705.50 Browser version: Chrome 88.0.4324.146 Chrome Browser Driver version: 88.0.4324.96 Selenium Grid version : Grid 4 (selenium-server-4.0.0-prerelease-beta-1-0f2429af7a.jar)","closed","R-awaiting answer,","hnestorova","2021-02-13T08:48:16Z","2021-09-05T08:12:21Z"
"","8897","Documentation down","## üêõ Bug Report  All links to documentation seem down, example:     I have not been able to access any link on www.selenium.dev. A DNS check returns:","closed","needs-triaging,","felixhageloh","2020-11-23T10:49:14Z","2021-09-05T08:30:26Z"
"","9567","driver.switch_to.alert can't get alert text","## üêõ Bug Report  alert = driver.switch_to.alert print(alert.text)   but alert.text cannot printed!     ## Environment  OS: Windows 10 Browser:Chrome Browser version: 91.0.4472.77 Browser Driver version: ChromeDriver 91 Language Bindings version: Python 3.7.4 32bit Selenium Grid version (if applicable): 4.0.0a7","closed","R-awaiting answer,","kdrkdrkdr","2021-06-13T03:20:02Z","2021-09-05T08:01:00Z"
"","9813","Chrome crashes when safebrowsing disabled","## üêõ Bug Report  After the last chrome update and chromedriver update, my code which used to work before then, crashes chrome when I turn off safebrowsing (I need it to be disabled because when safebrowsing is on it blocks my file downloads for some reason)   ## To Reproduce  C# Code: var chromeOptions = new ChromeOptions(); chromeOptions.AddUserProfilePreference(""safebrowsing"", ""disabled""); driver = new ChromeDriver(driverLocation, chromeOptions, TimeSpan.FromMinutes(3));  this reproduces the bug on windows 10 Pro version 21H1 build 19043.1165 .Net Core 3.1 with the latest Selenium.Webdriver  It will crush chrome immediately  ## Environment  OS: Windows 10 Pro version 21H1 build 19043.1165 Browser: Chrome Browser version: 93.0.4577.63 Browser Driver version: 93.0.4577.63 Language Bindings version: C# .Net core 3.1 [chromedriver.log](https://github.com/SeleniumHQ/selenium/files/7149403/chromedriver.log)","closed","","idan-h","2021-09-12T10:18:42Z","2021-10-15T00:06:06Z"
"","9507","The HTTP request to the remote WebDriver server for URL http://localhost:42607/session timed out after 60 seconds.","## üêõ Bug Report  After running this simple code (c#)         Process.Start(""msedge.exe"", ""www.google.com"" + ""-remote-debugging-port=9222"");         EdgeOptions options = new EdgeOptions() { DebuggerAddress = ""127.0.0.1:9222"" };         IWebDriver driver = new EdgeDriver( options );  appears error message:""The HTTP request to the remote WebDriver server for URL http://localhost:42607/session timed out after 60 seconds.""  ## To Reproduce  run the code above  ## Expected behavior  I've developed it few days ago and it worked till today...  ## Test script or set of commands reproducing this issue          Process.Start(""msedge.exe"", ""www.google.com"" + ""-remote-debugging-port=9222"");         EdgeOptions options = new EdgeOptions() { DebuggerAddress = ""127.0.0.1:9222"" };         IWebDriver driver = new EdgeDriver( options );  ## Environment  OS: Windows 10 Browser: Edge Browser version: 89.0.774.45 (Official build) (64-bit) Browser Driver version: Microsoft Edge Driver 89.0.774.45 Language Bindings version: c# 4.0.0-beta2","closed","C-dotnet,","stam3333","2021-05-23T14:58:20Z","2021-10-22T00:06:54Z"
"","9791","Timeout issue for chrome 93.0.4577.63","## üêõ Bug Report  After recent update of chrome to 93.x, getting timeout issue for chromedriver.  Same file is running fine locally but after executing it from jenkins below error is coming:  browser = webdriver.Chrome(executable_path=r""C:\python38\chromedriver.exe"") File ""c:\python38\lib\site-packages\selenium\webdriver\chrome\webdriver.py"", line 76, in init RemoteWebDriver.init( File ""c:\python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 157, in init self.start_session(capabilities, browser_profile) File ""c:\python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 252, in start_session response = self.execute(Command.NEW_SESSION, parameters) File ""c:\python38\lib\site-packages\selenium\webdriver\remote\webdriver.py"", line 321, in execute self.error_handler.check_response(response) File ""c:\python38\lib\site-packages\selenium\webdriver\remote\errorhandler.py"", line 242, in check_response raise exception_class(message, screen, stacktrace) selenium.common.exceptions.SessionNotCreatedException: Message: session not created from timeout: Timed out receiving message from renderer: 600.000 (Session info: chrome=93.0.4577.63)   OS:  Browser:  Browser version:  Browser Driver version:","closed","","kulkarnisuraj92","2021-09-03T10:49:35Z","2021-10-06T00:05:46Z"
"","9727","C# Client: Documentation: Clicking on a Link in the Table of Contents Does Not Make the Page Appear","## üêõ Bug Report  After clicking on a link in the table of contents on the left side of the [C# client documentation](https://www.selenium.dev/selenium/docs/api/dotnet/index.html), the right side of the browser does not show the requested content.  ## To Reproduce Detailed steps to reproduce the behavior: Before attempting to reproduce the issue, ensure that the browser window is fully maximized. I was unable to find a way to include a screenshot of my 2560x1390 browser window. 1. Launch a web browser (e.g. Firefox 90.0.2 (64-bit) on Windows Version 21H1) 2. Go to https://www.selenium.dev/selenium/docs/api/dotnet/index.html 3. Click on ""DriverOptions Class"" 4. Click on ""DriverOptions Constructor""  You can also reproduce the issue without maximizing the browser window: 1. Launch a web browser (e.g. Firefox 90.0.2 (64-bit) on Windows Version 21H1) 2. Go to https://www.selenium.dev/selenium/docs/api/dotnet/index.html 3. Click on ""DriverOptions Class"" 4. Click on ""DriverOptions Constructor"" 5. Repeatedly resize the browser window.  ## Expected behavior  I expected to see words appear in the blue portion of the web page. Instead, the browser requests the content (visible in the Developer Tools window) and fails to display it. There are no messages in the Developer Tools console.  ## Test script or set of commands reproducing this issue  See ""Detailed steps to reproduce the behavior""  ## Environment  OS: Windows 10 (21H1) Browser: Firefox  Browser version: 90.0.2 (64-bit)","closed","C-docs,","Zian","2021-08-08T23:38:22Z","2022-01-26T00:09:59Z"
"","9755","PrintOptions.AddPageToPrint and AddPageRangeToPrint do nothing","## üêõ Bug Report  AddPageToPrint and AddPageRangeToPrint set the internal PrintOptions.pageRanges member. PrintOptions.ToDictionary, used to serialize PrintOptions to send to the browser, does nothing with the pageRanges.  The code literally looks like this, with nothing in between the braces:  ... 	if (pageRanges.Count > 0) 	{ 	} ...  ## To Reproduce  C# code like this does nothing to filter pages:              var printOptions = new PrintOptions();             printOptions.AddPageRangeToPrint(""2-4"");             var printDoc = driver.Print(printOptions);             printDoc.SaveAsFile(""out.pdf"");  ## Expected behavior  I expect the printed pages to be filtered.  ## Test script or set of commands reproducing this issue  See repro steps above  ## Environment  OS: Win10 Browser: Edge Browser version: 92.0.902.78 Browser Driver version: 92.0.902.78 Language Bindings version: ? Selenium Grid version (if applicable): n/a","closed","needs-triaging,","bworline","2021-08-22T06:27:32Z","2021-09-26T00:06:13Z"
"","9137","BUG: Firefox - Geckodriver, forces new tabs to open in new browser windows; if adding firefox_profile options to driver!","## üêõ Bug Report  Adding `webdriver.FirefoxProfile()` profile options to driver, causes it to disallow opening new tabs within the current browser session and instead force opens new tabs in new browser windows.  ## To Reproduce  ```python from selenium import webdriver firefox_profile = webdriver.FirefoxProfile() driver = webdriver.Firefox(firefox_profile=firefox_profile) driver.execute_script(""window.open('about:blank');"") ``` --> will open every new tab in, a new browser window  ## Expected behavior  ```python from selenium import webdriver driver = webdriver.Firefox() driver.execute_script(""window.open('about:blank');"") ``` -- > will as expected, open the new tab in the current browser window.  ## Environment  OS: Windows 10 Browser: Firefox - selenium with geckodriver Browser version: 85.0 (64-Bit) Browser Driver version: Geckodriver - newest version Language Bindings version: Python 3.9.1 Selenium version: 3.141.0 for python","closed","C-py,","Avnsx","2021-02-03T15:31:48Z","2021-09-05T08:19:04Z"
"","9634","The HTTP request to the remote WebDriver server for URL http://localhost:4444/session timed out  using record driver options with dotnet","## üêõ Bug Report  Add option record option (se:*)  and connect remote hub ( url:4444)  then throw timeout.  but don't add record options , success.  ## To Reproduce  1. start dynamic grid docker-compose: https://github.com/SeleniumHQ/docker-selenium#configuration-example 2. add record video option 3. connect docker dynamic hub 4. throw timeout exception  Detailed steps to reproduce the behavior:  1. start dynamic grid docker-compose: https://github.com/SeleniumHQ/docker-selenium#configuration-example 2. drvier add options 3. driverOptions.AddAdditionalOption(""se:recordVideo"", true);  4. driverOptions.AddAdditionalOption(""se:timeZone"", ""US/Pacific""); 5. driverOptions.AddAdditionalOption(""se:screenResolution"", ""1920x1080""); 6. connect remote webdriver 7. driver = new RemoteWebDriver(new Uri(""http://dockerUrl""), driverOptions);  Steps to reproduce the behavior (including the command to start the containers):  ## Expected behavior https://github.com/namilkimfree/SeleniumDynamicissueTest  don't throw timeout exception,   (OpenQA.Selenium.WebDriverException: 'The HTTP request to the remote WebDriver server for URL http://gridhub:4444/session timed out after 60 seconds.'   ## Test script reproducing this issue (when applicable)  ```  private IWebDriver GetChromeDriver() {       var driverOptions = new ChromeOptions();        driverOptions.AddAdditionalOption(""se:recordVideo"", true);       driverOptions.AddAdditionalOption(""se:timeZone"", ""US/Pacific"");       driverOptions.AddAdditionalOption(""se:screenResolution"", ""1920x1080"");        var driver = new RemoteWebDriver(new Uri(""http://172.27.6.37:4444""), driverOptions)       {       };        return driver;   }  ``` ```  private void Test() {        var driver = GetChromeDriver();    -> throw timeout        driver.Navigate().GoToUrl(""anything url"");    }  ```   ``` *[dynamic grid docker.yml]  version: ""3"" services:   node-docker:     image: selenium/node-docker:4.0.0-rc-1-prerelease-20210618     volumes:       - ./assets:/opt/selenium/assets       - ./NodeDocker/config.toml:/opt/bin/config.toml     depends_on:       - selenium-hub     environment:       - SE_EVENT_BUS_HOST=selenium-hub       - SE_EVENT_BUS_PUBLISH_PORT=4442       - SE_EVENT_BUS_SUBSCRIBE_PORT=4443    selenium-hub:     image: selenium/hub:4.0.0-rc-1-prerelease-20210618     container_name: selenium-hub     ports:       - ""4442:4442""       - ""4443:4443""       - ""4444:4444"" ```   ```  *[confing.toml]  [docker]  configs = [     ""selenium/standalone-chrome:4.0.0-rc-1-prerelease-20210618"", ""{\""browserName\"": \""chrome\""}""     ] url = ""http://host.docker.internal:2375"" video-image = ""selenium/video:ffmpeg-4.3.1-20210426""  ```   ## Environment  OS: Windows 10  Docker-Selenium image version:  https://github.com/SeleniumHQ/docker-selenium/blob/trunk/docker-compose-v3-dynamic-grid.yml  Also provide the docker image id  --> Docker version:  Docker version 20.10.7, build f0df350 Docker-Compose version (if applicable): docker-compose version 1.29.2, build 5becea4c Exact Docker command to start the containers (if using docker-compose, provide  the docker-compose file as well): docker-compose -f .\docker-compose-v3-dynamic-grid.yml up -d in powersehll","closed","needs-triaging,","namilkimfree","2021-07-05T04:24:35Z","2021-09-05T07:58:57Z"
"","9271","InvalidArgumentException when setting timeouts for ChromeDriver","## üêõ Bug Report  According to the documentation setting a negative timeout will disable the timeout for pageLoadTimeout and setScriptTimeout, e.g.: > Sets the amount of time to wait for a page load to complete before throwing an error. If the timeout is negative, page loads can be indefinite.  -->  ## To Reproduce This can be reproduced with one of the following timeouts: driver.manage().timeouts().pageLoadTimeout(-1, TimeUnit.MINUTES); driver.manage().timeouts().setScriptTimeout(-1, TimeUnit.MINUTES);  ## Expected behavior I would expect that no InvalidArgumentException is thrown. If this is not a bug I would kindly ask to update the documentation.  ## Test script or set of commands reproducing this issue  ```java       System.setProperty(""webdriver.chrome.driver"", chromeDriverFileName);       ChromeOptions options = new ChromeOptions();       // set language explicitly so tests on different clients come to the same result       options.addArguments(""--lang=en"");       // disable extension as the Siemens Chrome Browser does not allow this extension       options.setExperimentalOption(""useAutomationExtension"", false);       var driver = new ChromeDriver(options);       driver.manage().timeouts().setScriptTimeout(-1, TimeUnit.MINUTES); ```  ## Environment  OS: Windows 10 1909 Browser: Chrome Browser version: 89 Browser Driver version: Chrome Driver 89.0.4389.23 Language Bindings version: Java 89.0.4389.23 Selenium Grid version (if applicable): n/a","closed","C-java,","wolframhaussig","2021-03-12T11:45:00Z","2021-09-05T08:12:15Z"
"","9842","Basic test using Firefox on Window occasionally fails (selenium-java 4.0.0-rc-1)","## üêõ Bug Report  A very basic [test](https://github.com/bonigarcia/selenium-webdriver-java/blob/master/selenium-webdriver-junit4/src/test/java/io/github/bonigarcia/webdriver/junit4/ch2/helloworld/HelloWorldFirefoxJUnit4Test.java) using Firefox and executed on Windows [fails](https://github.com/bonigarcia/selenium-webdriver-java/runs/3637003836?check_suite_focus=true) from time to time.  ## To Reproduce  I run this [test](https://github.com/bonigarcia/selenium-webdriver-java/blob/master/selenium-webdriver-junit4/src/test/java/io/github/bonigarcia/webdriver/junit4/ch2/helloworld/HelloWorldFirefoxJUnit4Test.java) in `windows-latest` (Windows Server 2019) on GitHub Actions. Randomly, it fails showing the following error traces (see the complete [execution logs](https://github.com/bonigarcia/selenium-webdriver-java/runs/3637003836?check_suite_focus=true)):  ``` Sep 17, 2021 10:05:34 PM org.openqa.selenium.os.OsProcess destroy INFO: Unable to drain process streams. Ignoring but the exception being swallowed follows. org.apache.commons.exec.ExecuteException: The stop timeout of 2000 ms was exceeded (Exit value: -559038737) 	at org.apache.commons.exec.PumpStreamHandler.stopThread(PumpStreamHandler.java:295) 	at org.apache.commons.exec.PumpStreamHandler.stop(PumpStreamHandler.java:181) 	at org.openqa.selenium.os.OsProcess.destroy(OsProcess.java:135) 	at org.openqa.selenium.os.CommandLine.destroy(CommandLine.java:152) 	at org.openqa.selenium.remote.service.DriverService.stop(DriverService.java:278) 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:151) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:244) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:166) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:205) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:193) 	at org.openqa.selenium.firefox.FirefoxDriver.(FirefoxDriver.java:171) 	at io.github.bonigarcia.webdriver.junit4.ch2.helloworld.HelloWorldFirefoxJUnit4Test.setup(HelloWorldFirefoxJUnit4Test.java:46) 	...  Sep 17, 2021 10:05:34 PM org.openqa.selenium.os.OsProcess destroy SEVERE: Unable to kill process java.lang.ProcessImpl@48d7ad8b Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 141.686 sec","closed","R-awaiting answer,","bonigarcia","2021-09-17T23:11:49Z","2021-10-22T00:06:49Z"
"","8917","Killing spawned processes","## üêõ Bug Report  A process spawning subrocess is not killing the whole chain   The issue is with marathon java driver. The bug is actually in the selenium core.  When a process spawning others, the other doesnt get killed when killing the root process  Here what i had to do overriding the selenium driver quit method.  Driver -> CommandLine -> OsProcess(has no direct access to the real process) -> WatchDog -> JavaProcess(the real one) -> Kill all  @Override 			public void quit() { 				Object process = ReflectionUtil.getFieldValue(commandLine,""process""); 				Object wd = ReflectionUtil.getFieldValue(process,""executeWatchdog""); 				Process rp = (Process) ReflectionUtil.getFieldValue(wd,""process""); 				rp.children().forEach(p -> p.destroyForcibly()); 				commandLine.destroy(); 				super.quit(); 			}","closed","C-java,","HenningL","2020-11-28T22:47:29Z","2021-09-05T08:27:37Z"
"","9306","Stray print in Python lib execute","## üêõ Bug Report  A clear and concise description of what the bug is: Opening a session with any driver and executing a range of actions utilizing the execute command (direct or indirect) causes a lot of unneeded lines in the console.   ## To Reproduce  ``` driver = Firefox(executable_path=r'.\geckodriver.exe',) driver.get(""https://example.com"") ```  observe in console: `http://127.0.0.1:64368/session`  This cannot be turned off by modifying the logger or driver specific logging settings  ## Expected behavior  \selenium\webdriver\remote\remote_connection.py line 373 has a print statement that  should be a LOGGER.info()  ## Environment  OS: Windows 10 Browser: Firefox (geckodriver) Browser version: 86.0.1 (64-bit) Browser Driver version: geckodriver 0.29.0  Language Bindings version: Python 3.8 Selenium Grid version (if applicable): 3.141.0","closed","needs-triaging,","mathijswesterhof","2021-03-18T21:54:47Z","2021-09-05T08:10:44Z"
"","9714","Selenium Grid not working with WebView2 application","## üêõ Bug Report  A clear and concise description of what the bug is. Selenium Grid not working with WebView2 application.    ## To Reproduce    Detailed steps to reproduce the behavior: Run the below c# code  ```csharp             EdgeOptions edgeOptions = new EdgeOptions();             edgeOptions.UseChromium = true;             edgeOptions.UseWebView = true;             edgeOptions.BinaryLocation = @""C:\MyWebView2App.exe"";             IWebDriver webDriver = new RemoteWebDriver(new Uri(""http://127.0.0.1:4444""),edgeOptions); ``` Below exception occurs: ``` OpenQA.Selenium.WebDriverException   HResult=0x80131500   Message=The HTTP request to the remote WebDriver server for URL http://127.0.0.1:4444/session timed out after 60 seconds.   Source=WebDriver   StackTrace:    at OpenQA.Selenium.Remote.HttpCommandExecutor.MakeHttpRequest(HttpRequestInfo requestInfo)    at OpenQA.Selenium.Remote.HttpCommandExecutor.Execute(Command commandToExecute)    at OpenQA.Selenium.Remote.RemoteWebDriver.Execute(String driverCommandToExecute, Dictionary`2 parameters)    at OpenQA.Selenium.Remote.RemoteWebDriver.StartSession(ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(ICommandExecutor commandExecutor, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities, TimeSpan commandTimeout)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, ICapabilities desiredCapabilities)    at OpenQA.Selenium.Remote.RemoteWebDriver..ctor(Uri remoteAddress, DriverOptions options)    at WebViewTesting.Program.Main(String[] args) in     This exception was originally thrown at this call stack:     [External Code]  Inner Exception 1: WebException: The operation has timed out. ``` ## Expected behavior A clear and concise description of what you expected to happen. webDriver  is initialized and the application is launched  ## Test script or set of commands reproducing this issue  The sample test project (WebViewTesting) and sample app (SampleApp) can be found in below git repo. https://github.com/pramodkeeliputti12345/pramodkeeliputti12345  1. Start selenium grid 4 (selenium-server-4.0.0-beta-4.jar) in standalone mode. 2. Load project WebViewTesting in visual studio 2019. 3. Copy 'SampleApp' folder under c drive. 4. Run the WebViewTesting application.   Exception occurse @ line number 16. (IWebDriver webDriver = new RemoteWebDriver(new Uri(""http://127.0.0.1:4444""),edgeOptions);)  What i am looking is to achieve the below functionality with Selenium Grid. https://docs.microsoft.com/en-us/microsoft-edge/webview2/how-to/webdriver  This works for EdgeDriver but not working for RemoteWebDriver.  ## Environment  OS:","closed","C-grid,","pramodkeeliputti12345","2021-08-03T19:27:32Z","2022-03-26T00:09:53Z"
"","9488","Grid with two Amazon Windows Instances: hub throws java.net.ConnectException: connection timed out: after adding the node","## üêõ Bug Report  A clear and concise description of what the bug is. **We have two Windows instances in Amazon and are trying to use one as a hub and node and the other as a node to connect to the first one. However, after the node gets connection, the below error is printed in the hub console:**  '11:28:23.899 INFO [Node.] - Binding additional locator mechanisms: id, name 11:28:23.899 INFO [LocalDistributor.add] - Added node 99eec165-506f-4a61-b379-3b2e72c3ab56 at http://NODE_IP:5555. 11:28:33.946 WARN [UnboundZmqEventBus.lambda$notifyListeners$10] - Caught exception from listener: org.openqa.selenium.events.EventListener@3f5ec77a java.io.UncheckedIOException: java.net.ConnectException: connection timed out: /10.146.226.253:5555         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.makeCall(NettyHttpHandler.java:79)         at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)         at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)         at org.openqa.selenium.remote.http.netty.NettyHttpHandler.execute(NettyHttpHandler.java:51)         at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)         at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:56)         at org.openqa.selenium.remote.http.netty.NettyClient.execute(NettyClient.java:103)         at org.openqa.selenium.remote.tracing.TracedHttpClient.execute(TracedHttpClient.java:55)         at org.openqa.selenium.grid.node.remote.RemoteNode.getStatus(RemoteNode.java:207)         at org.openqa.selenium.grid.distributor.local.LocalDistributor.add(LocalDistributor.java:233)         at org.openqa.selenium.grid.distributor.local.LocalDistributor.register(LocalDistributor.java:220)         at org.openqa.selenium.events.EventListener.accept(EventListener.java:43)         at org.openqa.selenium.events.EventListener.accept(EventListener.java:25)         at org.openqa.selenium.events.zeromq.UnboundZmqEventBus.lambda$notifyListeners$10(UnboundZmqEventBus.java:252)         at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)         at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)         at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)         at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)         at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.net.ConnectException: connection timed out: /NODE_IP:5555         at org.asynchttpclient.netty.channel.NettyConnectListener.onFailure(NettyConnectListener.java:179)         at org.asynchttpclient.netty.channel.NettyChannelConnector$1.onFailure(NettyChannelConnector.java:108)         at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:28)         at org.asynchttpclient.netty.SimpleChannelFutureListener.operationComplete(SimpleChannelFutureListener.java:20)         at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)         at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)         at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)         at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)         at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)         at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:609)         at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:117)         at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe$1.run(AbstractNioChannel.java:262)         at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98)'  **On the node side, in its console we see:** '11:28:23.553 INFO [NodeServer.execute] - Started Selenium node 4.0.0-beta-3 (revision 5d108f9a67): http://NODE_IP:5555 11:28:23.819 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:28:33.820 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:28:43.829 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:28:53.830 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:29:03.855 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:29:13.859 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:29:23.959 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:29:33.988 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:29:44.003 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:29:54.005 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:30:04.009 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:30:14.020 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:30:23.565 INFO [NodeServer$1.lambda$start$1] - Sending registration event... 11:30:23.565 INFO [NodeServer$1.lambda$start$1] - Sending registration event...'  ## Expected behavior  Both nodes connect successfully to the hub. I use the same configuration with VMs and it has no such problem  ## Test script or set of commands reproducing this issue  **Hub** start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-beta-3.jar hub --port 4452 --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --healthcheck-interval 5000  **Node (Hub instance)** start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-beta-3.jar node --detect-drivers true -I ""edge"" -I ""chrome"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1 --session-timeout 190  **Node (2nd instance)** start C:/""Program Files""/Java/jdk-11.0.9+11/bin/java -jar selenium-server-4.0.0-beta-3.jar node --detect-drivers true -I ""edge"" -I ""chrome"" -I ""internet explorer"" --publish-events tcp://HUB_IP:4455 --subscribe-events tcp://HUB_IP:4456 --max-sessions 1 --session-timeout 190  ## Environment  OS: Windows 7 Browser: Edge, Chrome Edge Browser version: Version 90.0.818.62 (Official build) (64-bit) Edge Browser Driver version: MSEdgeDriver 89.0.774.76 Browser version: Version 90.0.4430.212 (Official Build) (64-bit) Chrome Browser Driver version: ChromeDriver 90.0.4430.24  Selenium Grid version : Grid 4 ( selenium-server-4.0.0-beta-3.jar)","closed","R-awaiting answer,","hnestorova","2021-05-18T15:47:16Z","2021-09-05T08:03:22Z"
"","9217","Selenium 4 - addArguments method is not available when using edge.Options","## üêõ Bug Report  A clear and concise description of what the bug is.  When trying to configure the options for a Microsoft Edge driver, the addArguments method is not accessible like it is for Chrome/Firefox. This is in TypeScript 4.1.5.   ## To Reproduce Detailed steps to reproduce the behavior: In VSCode,   import * as webdriver from 'selenium-webdriver' import { Builder, By } from 'selenium-webdriver' import edge from 'selenium-webdriver/edge'  const options = new edge.Options() options.addArguments('headless')  I get the error: Property 'addArguments' does not exist on type 'Options'  ## Expected behavior  addArguments should be a supported method. I do not get the same error when using selenium-webdriver/chrome or selenium-webdriver/firefox. I noticed in the docs https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/edge_exports_Options.html that this function is not listed in the API for edge.Options. If this is intended, please advise on how to properly set options for Edge webdriver.    ## Environment  OS: Windows 10 Browser: Microsoft Edge Browser version:  Browser Driver version: - Language Bindings version: TypeScript 4.1.5 Selenium Grid version (if applicable): -","closed","C-nodejs,","JangaNA","2021-02-27T00:03:26Z","2021-09-05T08:15:46Z"
"","8972","Selenium Chrome Webdriver gets 408 time out error","## üêõ Bug Report  A clear and concise description of what the bug is.  Problem is getting HTTP 408 error every time when we execute the test. When we try manually there is no any problem on the URL tried lots of time, even one of them did not receive the error.  The Url we used is directed 2 times due to authorization  (LDAP login)  then comes the main page we need. I think I am facing this issue in the link below, but I could not find any solution  [https://sny.no/2018/08/webdriver-keepalive](url)  Also, there is an update in selenium change log but I dont know how to use it.   [https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/CHANGELOG](url) ctrl+f -> ""IsKeepAliveEnabled "" v3.14.0      Thanks in advance  ## To Reproduce  ## Fail Scenario: -User/pass is entered -Click the enter botton -Get the 408 error too quickly (20ms). (It is weird because I dont think any service configure its timeout lower than 20 milliseconds) -Additionally backend login service does not receive any login attempt from the frontend login service.    ##Success scenario; (Executed on the same setup) Success scenario; (Executed on the same setup)  refresh the same page opened by selenium -enter User/pass -Click the enter button -Successfully pass the test, I mean log-in is successful, not get any error.  -In backend login service log attempt logs can be seen   As you see from the above test, there is not any mistake for finding username, password and enter elements, the difference is who load the page. If the selenium driver loads the url, it gets a 408 error. If refresh same page then try to login, login is successful.  I am sure now the problem related to http headers. If driver.get(""loginUrl"") then login error with 408 code. If I refresh the page then enter same user/pass on same the browser then it is successful.  ## Expected behavior  to login successful like human clicks the enter button.   ## Test script or set of commands reproducing this issue      String user = ""myuser""     WebElement userElement = driver.findElement(By.cssSelector(USERNAME));     sendKeys(userElement, user);     String pass = ""myPass""     WebElement passElement = driver.findElement(By.cssSelector(PASSWORD));     sendKeys(passElement, pass);     Thread.sleep(60000); // put it here a sleep, Try to enter manually before webdriver click     driver.findElement(By.xpath(INPUT_VALUE_ENTER)).click();   ## Environment  OS: Windows10 Browser:  Chrome Browser version: 86.0.4240.183 Browser Driver version: 86.0.4240.183 Language Bindings version: Java 8 Selenium Grid version (if applicable): selenium-chrome-driver in pom version is 3.141.59","closed","R-awaiting answer,","fatihtepekoy","2020-12-16T12:05:45Z","2021-09-05T08:27:49Z"
"","9896","Window Resizing Issue","## üêõ Bug Report  A clear and concise description of what the bug is.  I am having trouble with resizing the windows when running test. I've noticed that I am able to navigate to different web pages and check for elements, but for some reason the commands that have to deal with resizing the browser don't work. I'm confused because I can resize the windows just fine with my other programs. Maybe multithreading is an issue?    ## To Reproduce Below I have attached some code with all the fluff snipped. Hopefully that's adequate.  ## Expected behavior  Browser resizes to the different specified sizes  ## Test script or set of commands reproducing this issue         using System;         using System.Threading;         using System.IO;         using System.Drawing;         using OpenQA.Selenium;         using OpenQA.Selenium.Chrome;         using OpenQA.Selenium.Firefox;         using OpenQA.Selenium.Edge;          static void Main(string[] args)           {             String Username = ""username"";             String Password = ""password"";              Thread t11 = new Thread(() => Chrome(Username , Password));             t11.Start();             Thread t12 = new Thread(() => Edge(Username , Password));             t12.Start();             Thread t13 = new Thread(() => Firefox(Username , Password));             t13.Start();         }         public static void Chrome(String Username, String Password)         {             String Browser = ""Chrome"";             IWebDriver chromedriverdesktop = new ChromeDriver();             Thread t21 = new Thread(() => desktop(Username , Password, chromedriverdesktop, Browser));             t21.Start();             IWebDriver chromedrivertablet = new ChromeDriver();             Thread t22 = new Thread(() => desktop(Username , Password, chromedrivertablet, Browser));             t22.Start();             IWebDriver chromedrivermobile = new ChromeDriver();             Thread t23 = new Thread(() => desktop(Username , Password, chromedrivermobile, Browser));             t23.Start();         }         public static void Edge(String Username, String Password)         {             String Browser = ""Edge"";             IWebDriver edgedriverdesktop = new EdgeDriver();             Thread t31 = new Thread(() => desktop(Username , Password, edgedriverdesktop, Browser));             t31.Start();             IWebDriver edgedrivertablet = new EdgeDriver();             Thread t32 = new Thread(() => desktop(Username , Password, edgedrivertablet, Browser));             t32.Start();             IWebDriver edgedrivermobile = new EdgeDriver();             Thread t33 = new Thread(() => desktop(Username , Password, edgedrivermobile, Browser));             t33.Start();         }         public static void Firefox(String Username, String Password)         {             String Browser = ""Firefox"";             IWebDriver firefoxdriverdesktop = new FirefoxDriver();             Thread t41 = new Thread(() => desktop(Username , Password, firefoxdriverdesktop, Browser));             t41.Start();             IWebDriver firefoxdrivertablet = new FirefoxDriver();             Thread t42 = new Thread(() => desktop(Username , Password, firefoxdrivertablet, Browser));             t42.Start();             IWebDriver firefoxdrivermobile = new FirefoxDriver();             Thread t43 = new Thread(() => desktop(Username , Password, firefoxdrivermobile, Browser));             t43.Start();         }         public static void desktop (String Username, String Password, IWebDriver driver, String Browser)         {             String FromFactor = ""desktop"";              //Set Up             driver.Manage().Window.Maximize();              driver.Navigate().GoToUrl(""https://www.google.com"");             Thread.Sleep(1000);             driver.Close();         }         public static void tablet (String Username, String Password, IWebDriver driver, String Browser)         {             String FormFactor = ""tablet"";              //Set Up             driver.Manage().Window.Size = new Size(1024 , 1366); //Ipad Pro Dimensions              driver.Navigate().GoToUrl(""https://www.google.com"");             Thread.Sleep(1000);             driver.Close();          }         public static void mobile (String Username, String Password, IWebDriver driver, String Browser)         {             String FormFactor = ""mobile"";              //Set Up             driver.Manage().Window.Size = new Size(375 , 812); //Iphone X Pro Dimensions              driver.Navigate().GoToUrl(""https://www.google.com"");             Thread.Sleep(1000);             driver.Close();         }   ## Environment  OS: Windows 10 Browser: Chrome, Edge, Firefox Browser version: Edge Version: 94.0.992.38 Firefox Version: 92.0 Chrome Version: 94.0.4606.54 Browser Driver version:","closed","needs-triaging,","MasterJim12","2021-10-08T15:26:29Z","2021-11-15T00:06:33Z"
"","9878","Drag and drop by offset","## üêõ Bug Report  A clear and concise description of what the bug is.  https://pypi.org/project/seletools/  This package provides only drag and drop. Do we have any such package for drag and drop by offset.    ## To Reproduce  Our Web have elements tagged with draggable = true, hence unable to use actionchains on those elements. By installing seletools package, able to drag and drop. But usecase require drag and drop by co-ordinates. Any suggestion will be helpful   Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windows 10 Browser:  Chrome  Browser version:  91.0.4472.114 Browser Driver version:  Chrome driver  Language Bindings version:  Python 3.9 Selenium Grid version (if applicable):   3.141.59","closed","needs-triaging,","karpagapriya-ramakrishnan","2021-09-30T12:51:03Z","2021-11-20T00:06:31Z"
"","9292","File upload broken","## üêõ Bug Report  A clear and concise description of what the bug is.  File upload with Chrome and Selenium 4.0.0b2 fails with:  ```pytb File ""/home/nijel/weblate/weblate/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py"", line 768, in _upload     raise e   File ""/home/nijel/weblate/weblate/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py"", line 759, in _upload     return self._execute(Command.UPLOAD_FILE, {'file': content})['value']   File ""/home/nijel/weblate/weblate/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webelement.py"", line 693, in _execute     return self._parent.execute(command, params)   File ""/home/nijel/weblate/weblate/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py"", line 369, in execute     self.error_handler.check_response(response)   File ""/home/nijel/weblate/weblate/.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py"", line 236, in check_response     raise exception_class(message, screen, stacktrace) selenium.common.exceptions.WebDriverException: Message: unknown command: unknown command: session/ef65ec6962b7f875385bacdb072ee837/se/file Stacktrace: #0 0x562d9d555069  #1 0x562d9d4f72d3  #2 0x562d9d281946  #3 0x562d9d2d575a  #4 0x562d9d2d5574  #5 0x562d9d257d75  #6 0x562d9d258fa3  #7 0x562d9d522bc4  #8 0x562d9d5315ea  #9 0x562d9d5312de  #10 0x562d9d53598a  #11 0x562d9d531e8b  #12 0x562d9d517ff0  #13 0x562d9d257bdf  #14 0x7f58aaa96d0a __libc_start_main #15 0x562d9d25672a _start ```  There are already some related issues like https://github.com/SeleniumHQ/selenium/issues/7666 or https://github.com/SeleniumHQ/selenium/issues/8735, but they really don't give any hints how to address this.  It is broken since https://github.com/SeleniumHQ/selenium/pull/8588, removing the `se/` prefix from the `Command.UPLOAD_FILE` fixes the behavior.  ## To Reproduce    Detailed steps to reproduce the behavior:  ```         element.send_keys(element._upload(""screenshot.png"")) ```  ## Expected behavior  The upload would work.  ## Test script or set of commands reproducing this issue  Reproducible in https://github.com/WeblateOrg/weblate CI: https://github.com/WeblateOrg/weblate/runs/2124766327?check_suite_focus=true  ## Environment  OS: Linux Browser: Chrome Browser version:89.0.4389.82 Browser Driver version: ChromeDriver 89.0.4389.82 Language Bindings version: Python 4.0.0b2 Selenium Grid version (if applicable):","closed","C-py,","nijel","2021-03-17T05:34:36Z","2021-09-05T08:10:48Z"
"","9843","Blank page after entering in credentials on Telus login page","## üêõ Bug Report  A clear and concise description of what the bug is.  After entering in (valid or invalid) credentials and submitting on https://smarthome-security.telus.com, the next page does not load.    ## To Reproduce    Detailed steps to reproduce the behavior:  1. Navigate to https://smarthome-security.telus.com/ 2. Enter in username and password 3. Hit enter  ## Expected behavior  When entering invalid credentials, the page would show saying that invalid credentials were entered. When entering valid credentials, you would navigate into the website.  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Same behaviour happens using either Selenium IDE, Python, and NodeJS  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Chrome 93.0.4577.63","closed","needs-triaging,","jaming98","2021-09-19T05:24:21Z","2021-10-20T00:06:16Z"
"","8929","WebElement freshness check incorrectly throws NoSuchElementException rather than StaleElementReferenceException  on Firefox 83","## üêõ Bug Report  A clear and concise description of what the bug is.  `WebElement` is documented that all interactions will force a freshness check and throw a `StaleElementReferenceException`  if the `WebElement` is no longer attached to the DOM.` some more commentart.  However when running with Firefox 83 a `NoSuchElementException` is thrown contrary to docs, and the illogical state that you already have the `WebElement`.  `NoSuchElementException` is also only documented to be thrown when using `findElementBy` methods  see discussion at https://github.com/jenkinsci/acceptance-test-harness/pull/625/files#r533578302 for more information  >I checked my docker images and it was working previously with Firefox 80, and got broken in Firefox 83. > Looking at the Firefox 82 changelog, I can find this of interest >> Element.setPointerCapture() throws the NotFoundError exception if the pointer id is invalid, as per the specification (bug 1662124). Previously it wrongly threw an InvalidPointerId exception. > > Which AFAIU could translate into StaleElementReferenceException vs. NoSuchElementException on selenium side.    ## To Reproduce    Detailed steps to reproduce the behavior:  e.g. ``` WebElement we = ...; we.click(); //  (to cause a page load) while (true)  {   try { we.isEnabled(); Thread.sleep(500L) }   catch (StaleElementException e) {    break; // the page is no longer displayed } ``  ## Expected behavior  the code waits in a loop until the element is no longer in the DOM.  ## Actual Behaviour  exception like:  ``` org.openqa.selenium.NoSuchElementException:   Web element reference not seen before: 1ec17ca6-ad5d-469a-ab36-c961982fc12a  For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html  Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'  System info: host: 'host', ip: '1.2.3.4', os.name: 'Linux', os.arch: 'amd64', os.version: '4.9.0-14-amd64', java.version: '1.8.0_275'  Driver info: org.openqa.selenium.firefox.FirefoxDriver  Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 83.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20201112153044, moz:geckodriverVersion: 0.28.0, moz:headless: false, moz:processID: 2132, moz:profile: /tmp/rust_mozprofileuBQERw, moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, platformVersion: 4.9.0-14-amd64, proxy: Proxy(manual, http=host, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}  Session ID: f9c3668c-306b-4710-ae8c-749f30cf0768  	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)  	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)  	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)  	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)  	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)  	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)  	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)  	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)  	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)  	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)  	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)  	at org.openqa.selenium.remote.RemoteWebElement.isEnabled(RemoteWebElement.java:156)  	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)  	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)  	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)  	at java.lang.reflect.Method.invoke(Method.java:498)  	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.lambda$new$0(EventFiringWebDriver.java:404)  	at com.sun.proxy.$Proxy37.isEnabled(Unknown Source)  	at org.openqa.selenium.support.events.EventFiringWebDriver$EventFiringWebElement.isEnabled(EventFiringWebDriver.java:457)```  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Linux Browser: Firefox Browser version: 83 Browser Driver version:  Language Bindings version: 3.141.59 Selenium Grid version (if applicable): N/A","closed","needs-triaging,","jtnord","2020-12-02T11:36:55Z","2021-09-05T08:30:15Z"
"","9175","Missing files isDisplayed.js getAttribute.js on 4.0.0b1 when python importing from git","## üêõ Bug Report  A clear and concise description of what the bug is.  ## To Reproduce `pip install -e 'git+git://github.com/SeleniumHQ/selenium.git#egg=selenium&subdirectory=py'`  `from selenium import webdriver` -> exception --------------------------------------------------------------------------- FileNotFoundError                         Traceback (most recent call last)  in  ----> 1 from selenium import webdriver  ---> 36 getAttribute_js = pkgutil.get_data(_pkg, 'getAttribute.js').decode('utf8')      37 isDisplayed_js = pkgutil.get_data(_pkg, 'isDisplayed.js').decode('utf8')  FileNotFoundError: [Errno 2] No such file or directory: '/home/jovyan/src/selenium/py/selenium/webdriver/remote/getAttribute.js' ---------------------------------------------------------------------------   ## Expected behavior no error at ` from selenium import webdriver` Copying isDisplayed.js getAttribute.js from 4.0.0.a7 fixes the error.   ## Environment https://github.com/SeleniumHQ/docker-selenium","closed","needs-triaging,","servusoft","2021-02-14T20:21:31Z","2021-09-05T08:19:05Z"
"","9152","Server has a memory leak, io.netty.buffer.PoolChunk consumes a lot of memory","## üêõ Bug Report  A clear and concise description of what the bug is.  ![image](https://user-images.githubusercontent.com/617090/107141461-df93f480-6939-11eb-88b8-ab979c731c47.png)  ## To Reproduce  Start a standalone selenium server, run a simple scenario (init a driver, find a link, click, quit) 10-15 times and create a heap dump.  It appears that we don't release the incoming message buffer properly.  For reference: A simiar issue in micronaut: https://github.com/micronaut-projects/micronaut-core/issues/2665  ## Environment  OS: Win10 Browser: any Browser version: any Browser Driver version: any Language Bindings version: Java Selenium Grid version (if applicable): 4.0-alpha-7","closed","I-performance,","barancev","2021-02-07T08:51:37Z","2021-09-05T08:15:46Z"
"","8974","No way to set maxSessions per browser type in Selenium Grid 4","## üêõ Bug Report  A clear and concise description of what the bug is.   In the previous grid version, we could specify maxSessions and instances like this: browser browserName=""chrome"",platform=WINDOWS,maxInstances=1 -maxSession 1  With Selenium Grid 4, up to now, I have not found a way to modify the default values which will be 1 for IE, 2 for Chrome and 2 for Edge.  ## To Reproduce add a node as: java -jar selenium-server-4.0.0-alpha-7.jar node --detect-drivers true --publish-events tcp://HOST_IP:PORT --subscribe-events tcp://HOST_IP:PORT  ## Expected behavior  Able to specify how many sessions per browser type are desired to run on a single node at the same time   ## Test script or set of commands reproducing this issue  N/A  ## Environment  OS: Windows 7 Browser: IE, Chrome and Edge Browser version: IE 11.0.9600.19356 Browser Driver version: 3.150.1 Selenium Grid version : Grid 4 (4.0.0-alpha-7)","closed","R-awaiting answer,","hnestorova","2020-12-16T12:21:04Z","2021-09-05T08:08:43Z"
"","8999","drop not working (react DnD)","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce   **In example I attached console.log in order to define, it works correctly or not. So when drag begins in console appears drag begins when dropping element to destination in console appears drag end.**     - when I attempting  drop  dragging element  it doesnot works, but in logs test passed 100%     Detailed steps to reproduce the behavior:  ## Expected behavior I put two console.log() with messages ""drag begin"" and ""drag end"" on each event respectively. So when testing by console, it shows that drag begins but not drag ends.  **Note : By hand and by Selenium IDE it works and console shows two events, and it works correctly.**  ## Test script or set of commands reproducing this issue - when I attempting  drop  dragging element  it doesnot works, but in logs test passed 100% , you can run test and be sure about it.  ``` python # Generated by Selenium IDE import pytest import time import json from selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.common.action_chains import ActionChains from selenium.webdriver.support import expected_conditions from selenium.webdriver.support.wait import WebDriverWait from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities  class TestDND2():   def setup_method(self, method):     self.driver = webdriver.Chrome()     self.vars = {}      def teardown_method(self, method):     self.driver.quit()      def test_dND2(self):     self.driver.get(""https://codesandbox.io/s/great-montalcini-8cs99"")     self.driver.set_window_size(1552, 840)     time.sleep(20)     self.driver.switch_to.frame(0)               dragged = self.driver.find_element(By.CSS_SELECTOR, "".ant-table-row[index='0']"")     dropped = self.driver.find_element(By.CSS_SELECTOR, "".ant-table-row[index='1']"")     actions = ActionChains(self.driver)     #actions.drag_and_drop(dragged, dropped).release(dragged).release().perform()     actions.click_and_hold(dragged).perform()     actions.move_to_element(dropped).perform()     actions.release(dropped).perform()     time.sleep(15)     self.driver.close() ``` ## Environment  OS:  Windows 10 OSX64  Browser: Chrome Browser version: 87.0.4280.88  Browser Driver version:  ChromeDriver 87.0.4280.88 Language Bindings version:  Pytest 6.1.2","closed","","iamkabulov","2020-12-25T05:11:42Z","2021-09-05T08:27:45Z"
"","9132","Node loses connection with hub when ElementNotFoundException should be thrown","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior: 1. Run test in RemoteWebDriver using the hub and node containers version 3.141.59. 2. Wait until the test should have an ElementNotFoundException. 3. See these exceptions: WARNING: WebDriverException thrown by findElement(...) org.openqa.selenium.json.JsonException: Unable to determine type from:","closed","R-awaiting answer,","OTB15","2021-02-02T11:16:37Z","2021-09-19T00:06:03Z"
"","8965","how to set proxy in java ,it not running","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment Bug Report  here is my proxy code in java:  ```         String pxo = ""175.42.68.187:9999"";         ChromeOptions options = new ChromeOptions();         Proxy proxy = new Proxy();         proxy.setHttpProxy(pxo);         options.setCapability(""proxy"", proxy); ``` but when chrome running ,i got thoes info,look at blew:  _chrome://version/_ ` Google Chrome | 87.0.4280.88¬†(Ê≠£ÂºèÁâàÊú¨)¬†Ôºà64 ‰ΩçÔºâ¬†(cohort: Stable) -- | -- ‰øÆËÆ¢ÁâàÊú¨ | 89e2380a3e36c3464b5dd1302349b1382549290d-refs/branch-heads/4280@{#1761} Êìç‰ΩúÁ≥ªÁªü | Windows¬†10 OS Version 1909 (Build 18363.1198) JavaScript | V8¬†8.7.220.29 Flash | 33.0.0.417 C:\Windows\system32\Macromed\Flash\pepflashplayer64_33_0_0_417.dll Áî®Êà∑‰ª£ÁêÜ | Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36 ÂëΩ‰ª§Ë°å | ""C:/Program Files/Google/Chrome/Application/chrome.exe"" --disable-background-networking --disable-backgrounding-occluded-windows --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor --disable-popup-blocking --disable-prompt-on-repost --disable-sync --enable-automation --enable-blink-features=ShadowDOMV0 --enable-logging --log-level=0 --no-first-run --no-service-autorun --password-store=basic **--proxy-server=http=175.42.68.187:9999** --remote-debugging-port=0 --test-type=webdriver --use-mock-keychain --user-data-dir=""C:\Users\yone\AppData\Local\Temp\scoped_dir41080_718675084"" --flag-switches-begin --flag-switches-end data:, ÂèØÊâßË°åÊñá‰ª∂Ë∑ØÂæÑ | C:\Program Files\Google\Chrome\Application\chrome.exe ‰∏™‰∫∫ËµÑÊñôË∑ØÂæÑ | C:\Users\yone\AppData\Local\Temp\scoped_dir41080_718675084\Default ÂÖ∂‰ªñÂèò‰Ωì | 5e3a236d-4113a79e  ` now ,i just jump a scan my ip address ,but it show me my ip is my local ip(isnt dynamic proxy ip ) ,like this,  ÊÇ®ÁöÑiPÂú∞ÂùÄÊòØÔºö[**139.228.171.15**] Êù•Ëá™Ôºö‰∏≠ÂõΩ‰∏äÊµ∑‰∏äÊµ∑ ËÅîÈÄö  and set driver.getCapability().merge(option) isnt running,  please tell me how to set a right proxy,and if you know how to set dynamic proxy that not restart chorme,pelase tell me ,thx a lot.","closed","R-awaiting answer,","pangoo-reuse","2020-12-13T07:10:34Z","2021-09-05T08:27:38Z"
"","8914","Java- Method ProfilesIni error","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: Windows 10 Browser: Firefox Browser version: 83.0 Browser Driver version: GeckoDriver 0.28.0 Language Bindings version: Java 1.8.0_241  Selenium Grid version (if applicable):    In java, when I call new ProfilesIni(), there is error. The problem is, that in class ProfilesIni , line 60: reader = new BufferedReader(new FileReader(profilesIni, Charset.defaultCharset())); FileReader method has only one argument. Argument Charset.defaultCharset() should be removed. Thanks","closed","","Edenpac","2020-11-27T09:51:21Z","2021-09-05T08:30:19Z"
"","9852","When passed in --allow-external-pages as Option Argument into Chrome browser and got ""Only local connections are allowed."" as prompt information.","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Windows 10 Browser:  Google Chrome Browser version:  93.0.4577.82  Browser Driver version: 93.0.4577.63 Language Bindings version:   Selenium Grid version (if applicable):  Selenium.WebDriver.3.141.0  Used version 93.0.4577.63 of ChromeDriver to start version 93.0.4577.82 (Official Build) (64-bit) of Google Chrome browser by passing --allow-external-pages as Option Argument. When Chrome browser was just starting, then got attached screenshot as result where ""Only local connections are allowed."" should not be presented based on selected option ![Selenium-Error](https://user-images.githubusercontent.com/28600846/134030191-94e65df5-09c7-4292-9886-c37d8da2d8bd.png) .","closed","","Allan-Wang-GitHub","2021-09-20T15:34:25Z","2021-10-22T00:06:50Z"
"","9529","headless","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","","ing670","2021-05-28T07:06:00Z","2021-09-05T08:03:15Z"
"","9443","bug","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","ghost","2021-05-05T08:59:30Z","2021-09-05T08:06:35Z"
"","9124","Bug","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","talk2emmzy","2021-01-31T08:59:14Z","2021-09-05T08:21:33Z"
"","9000","Md Samaun Manufacturing Web link www.haniya.com","## üêõ Bug Report  A clear and concise description of what the bug is.    ## To Reproduce    Detailed steps to reproduce the behavior:  ## Expected behavior  A clear and concise description of what you expected to happen.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS:  Browser:  Browser version:  Browser Driver version:  Language Bindings version:   Selenium Grid version (if applicable):","closed","needs-triaging,","mdsamaun","2020-12-25T10:32:10Z","2021-09-05T08:27:46Z"
"","9253",".net selenium  OpenQA.Selenium.WebDriverException:‚Äúinvalid session id‚Äù","## üêõ Bug Report  `string driver_path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""Resources"");             ChromeDriverService driverService = ChromeDriverService.CreateDefaultService(driver_path,""chromedriver88.exe"");             var chromeOptions = new ChromeOptions();             chromeOptions.UseSpecCompliantProtocol = false;             chromeOptions.AddArgument(""--auto-open-devtools-for-tabs"");             ChromeDriver chromeDriver = new ChromeDriver(driverService,chromeOptions);             chromeDriver.Navigate().GoToUrl(""http://www.baidu.com"");`  if setting chromeOptions.UseSpecCompliantProtocol = false .Will go wrong OpenQA.Selenium.WebDriverException:‚Äúinvalid session id‚Äù","closed","R-awaiting answer,","chenzanyu","2021-03-10T18:15:37Z","2021-09-05T08:12:15Z"
"","9476","passing -foreground by default can cause browser hangs","## üêõ Bug Report  `Selenium` automatically passes the `-foreground` command-line option to `firefox`. This can cause the browser to hang on an existing profile's starting page.   ## To Reproduce  You can see this with plain `firefox`: ``` firefox -P  -foreground www.google.com ``` will hang on your profile's homepage and never get to `google` (and the same happens with `-marionette`). On the other hand, either dropping `-foreground` or moving it *after* `www.google.com` (where it presumably no longer has an effect) will land you on `google`.   ## Expected behavior  Arriving at the desired page.   ## Test script or set of commands reproducing this issue  Provided above for plain `firefox` (nothing to do with `geckodriver`), but this can be triggered in `Selenium` with:  ``` #!/usr/bin/env python  from selenium.webdriver import Firefox, DesiredCapabilities from selenium.webdriver.firefox.options import Options  options = Options() options.add_argument(""-profile"") options.add_argument("""")  webdriver = Firefox(desired_capabilities=options.to_capabilities()) webdriver.get(""https://google.com"") ```  This will never reach `google`: it will instead hang on the profile's homepage. But because the problem is already in evidence when just calling the `firefox` binary (as demonstrated above, with the first command line I displayed), I do not believe that the hang is due to `geckodriver` choking on creating a new profile (as asserted [here](https://github.com/SeleniumHQ/selenium/issues/9474#issuecomment-840560721), for instance).   ## Environment  OS: `Linux x86_64` Browser: `Firefox` Browser version: `Mozilla Firefox 88.0.1` Browser Driver version: `geckodriver 0.29.0` Language Bindings version: `Python`'s `selenium 3.141.0` [package](https://pypi.org/project/selenium/)  ## Additional comments The `-foreground` command-line option seems to have been deprecated by `Mozilla`: it is nowhere to be found in `man firefox` or `firefox --help`, and there are precious few references online:  - [This](https://stackoverflow.com/q/47095128) SO discussion [links](https://developer.mozilla.org/en-US/docs/Mozilla/Command_Line_Options#-foreground) to an unmaintained `Mozilla` documentation page. - On the other hand, [this bug report](https://bugzilla.mozilla.org/show_bug.cgi?id=1415329) on `-foreground` has the following as its closing comment:  > --foreground is an OSX command line argument, we don't have it implemented for other platforms.  One of the earlier comments on there also mentions the option missing from `firefox --help`. The present bug report is a follow-up on [another](https://github.com/SeleniumHQ/selenium/issues/9474), that I think is being closed prematurely: `-foreground` appears to me to be an abandoned, undocumented option (at least away from `OSX`), and relying on its otherwise undocumented behavior cannot possibly be a good idea.   At the very least, one should have the option of not passing it when building the `webdriver`.","closed","needs-triaging,","stuart-little","2021-05-13T15:52:55Z","2021-09-05T08:03:28Z"
"","9203","chrome package missing from 4.0.0-beta-1 java binding","## üêõ Bug Report  `org.openqa.selenium.chrome` package is missing from `selenium-chrome-driver 4.0.0-beta-1`. When attempting to import, I receive a compilation error stating `Cannot resolve symbol 'chrome'`  ## To Reproduce  Detailed steps to reproduce the behavior:  **Add 4.0.0-beta-1 dependency**  ```xml                      org.seleniumhq.selenium             selenium-chrome-driver             4.0.0-beta-1          ```  **Import ChromeDriver**  ```java import org.openqa.selenium.chrome.ChromeDriver; ```  ## Expected behavior  `org.openqa.selenium.chrome` should be bundled with `selenium-chrome-driver 4.0.0-beta-1`  ## Test script or set of commands reproducing this issue  Simply attempt to import ChromeDriver with the 4.0.0-beta-1 dependency:  ```java import org.openqa.selenium.chrome.ChromeDriver; ```  ## Environment  OS: MacOS Browser: Chrome Browser version: N/A Browser Driver version: N/A Language Bindings version: Java 4.0.0 beta 1 Selenium Grid version (if applicable): N/A","closed","C-java,","angiejones","2021-02-23T19:47:53Z","2021-09-05T08:10:31Z"
"","9264","`logMutationEvents` does not work in JS bindings","## üêõ Bug Report  `logMutationEvents` does not work for me in the JavaScript bindings. The defined callback is never executed. When looking into the browser console of the controlled Chrome instance, the following error is logged:  ``` Uncaught ReferenceError: __webdriver_attribute is not defined ```  This does not seem to be caught by the tests, because the [test's assertions are located in the callback](https://github.com/SeleniumHQ/selenium/blob/4464ac4f8230150824f6bf2e4075cd1f53a648c7/javascript/node/selenium-webdriver/test/devtools_test.js#L89-L91) that is never executed.  ## To Reproduce  Execute the self-contained script mentioned below. Apart from executing `logMutationEvents`, it also prints the browser console logs.  ## Expected behavior  As the DOM of the page is being mutated during the script, the callback passed to `logMutationEvents` should be executed.  ## Test script or set of commands reproducing this issue  https://github.com/systemboogie/logmutation-events-bug  It just adapts [the test code for `logMutationEvents`](https://github.com/SeleniumHQ/selenium/blob/4464ac4f8230150824f6bf2e4075cd1f53a648c7/javascript/node/selenium-webdriver/test/devtools_test.js#L85-L101).  Run it with: 1. `npm install` 2. `npm start`  ## Environment  - OS: macOS - Browser: Chrome - Browser version: 89.0.4389.82 - Browser Driver version: 89.0.4389.23 - Language Bindings version: JavaScript 4.0.0-beta.1 - Selenium Grid version (if applicable): --","closed","C-nodejs,","systemboogie","2021-03-11T22:57:49Z","2021-09-05T08:10:50Z"
"","9381","UnsupportedOperationException","## üêõ Bug Report  `java.lang.UnsupportedOperationException 	at org.openqa.selenium.WebElement.getDomAttribute(WebElement.java:131) 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:52) 	at com.sun.proxy.$Proxy35.getDomAttribute(Unknown Source) 	at org.openqa.selenium.support.ui.Select.(Select.java:54) 	at infakt.pageobject.others.OrderingObrYourDataPage.setStartMonth(OrderingObrYourDataPage.java:163) `  ## To Reproduce i have select like this      the error i'm getting is in the line `new Select(BaseClass.driver().findElement(By.id(""form_data_start_on""))).selectByVisibleText(month);`    ## Environment  OS:  OSX11.2.3 Browser: Chrome Browser version: 89.0.4389.128 Browser Driver version: chromedriver 89.0.4389.23 Language Bindings version: Java Selenium-java: 4.0.0-beta-3 (in version 4.0.0-beta-1 it was ok)","closed","R-awaiting answer,","mmajcherczyk","2021-04-14T10:59:25Z","2021-09-05T08:06:46Z"
"","8928","detect-drivers and drivers options are not working correctly","## üêõ Bug Report  `detect-drivers` and `drivers` options are not working correctly   ## To Reproduce  I hope to only run chrome on a specific node (though it has other browsers installed for some reason.  If I set  ```toml [node] detect-drivers = ""false"" drivers = [""chrome""] ``` then no browser will be added.  If I set  ```toml [node] detect-drivers = ""true"" drivers = [""chrome""] ```  Then I will find that all browsers will be added, and chrome will be added twice. ``` 16:59:25.523 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 2 times 16:59:25.524 INFO [NodeOptions.report] - Adding Chrome for {""browserName"": ""chrome""} 2 times 16:59:25.525 INFO [NodeOptions.report] - Adding Edge for {""browserName"": ""MicrosoftEdge""} 2 times 16:59:25.525 INFO [NodeOptions.report] - Adding Safari for {""browserName"": ""safari""} 1 times 16:59:25.526 INFO [NodeOptions.report] - Adding Firefox for {""browserName"": ""firefox""} 2 times ```  Is there any combination that can just let me only have chrome enabled?   ## Expected behavior  Only chrome is added to grid.  ## Test script or set of commands reproducing this issue   ## Environment  Mac OS the latest build on the trunk (2020/12/01).","closed","C-java,","link89","2020-12-01T10:19:10Z","2021-09-05T08:27:55Z"
"","9421","GRAPHQ","## üêõ Bug Report  ``` curl -X POST -H ""Content-Type: application/json"" --data '{""query"":""{ session (id: """") { id, capabilities, startTime, uri, nodeId, nodeUri, sessionDurationMillis, slot { id, stereotype, lastStarted } } } ""}' -s  ```  keep getting this error: ‚Äúmessage‚Äù: ‚ÄúException while fetching data (/session) : No ongoing session found with the requested session id.‚Äú,  for sure this session id exist cause i see the id when i query the grid and i did the request the second i got the session_id from the web driver(chrome)     ## To Reproduce  build web driver connection  get the session id by code or do   ``` curl --location --request POST 'LINK_TO_GRAPHQL_ENDPOINT' \ --header 'Content-Type: application/json' \ --data-raw '{""query"":""query sessionsInfo {\n    sessionsInfo {\n        sessionQueueRequests \n        sessions{\n            id\n            capabilities\n            startTime\n            uri\n            nodeId\n            nodeUri\n            sessionDurationMillis\n            slot {\n                id\n                stereotype\n                lastStarted\n            }\n        }\n    }\n}"",""variables"":{}}' ```  replace   with the session id: curl -X POST -H ""Content-Type: application/json"" --data '{""query"":""{ session (id: """") { id, capabilities, startTime, uri, nodeId, nodeUri, sessionDurationMillis, slot { id, stereotype, lastStarted } } } ""}' -s    ## Expected behavior  ``` {     ""errors"": [         {             ""message"": ""Exception while fetching data (/session) : No ongoing session found with the requested session id."",             ""locations"": [                 {                     ""line"": 2,                     ""column"": 6                 }             ],             ""path"": [                 ""session""             ],             ""extensions"": {                 ""sessionId"": ""'8c86cb43abffe7c0cc5ef4ec4b6ed5fd'"",                 ""classification"": ""DataFetchingException""             }         }     ],     ""data"": null } ```   ## Environment  OS:  macOS Browser: Chrome Browser version: 89.0.4389.90 Browser Driver version: 89.0.4389.23 (61b08ee2c50024bab004e48d2b1b083cdbdac579-refs Language Bindings version:   Selenium Grid version (if applicable):  4.0.0-beta-3 (revision 909239cd9f)","closed","C-java,","rotemironsrc","2021-04-26T21:50:07Z","2021-09-05T07:58:54Z"
"","9630","Documentation and the typing of `findElement` on nodejs is confusing.","## üêõ Bug Report  [The doc](https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/edge_exports_Driver.html#findElement) says that `If the element cannot be found, a error.NoSuchEementError will be returned by the driver.` .  If the error is returned instead of thrown, the return type should be an union of `WebElement` and `error.NoSuchEementError` . But the return type of this function, `WebElementPromise` , after awaiting, only gives a `WebElement` instead of `WebElement | error.NoSuchElementError` .  It's about the documentation so no environment information is needed.","closed","C-docs,","Jason5Lee","2021-07-04T14:26:38Z","2021-09-05T07:59:01Z"
"","8887","[Grid] Dynamic grid is not able to parse docker image other than default domain","## üêõ Bug Report  [Grid] Dynamic grid is not able to parse docker image other than default domain  Node-docker console log: ``` 15:41:29.419 INFO [Docker.getImage] - Obtaining image: artifactory.testing.com/testing/standalone-chrome:latest 15:41:29.469 INFO [LoggingOptions$1.lambda$export$1] - {""traceId"": ""f52e2227ede30c212444ffdd477e2749"",""spanId"": ""24e819850ebe54dd"",""spanKind"": ""INTERNAL"",""eventTime"": 1605570089466920600,""eventName"": ""HTTP request received response"",""attributes"": {""http.status_code"": 200,""http.client_class"": ""org.openqa.selenium.remote.http.netty.NettyClient"",""http.url"": ""\u002fversion"",""http.method"": ""GET""}}  Exception in thread ""main"" java.lang.IllegalArgumentException: Unable to find class: org.openqa.selenium.grid.node.local.LocalNodeFactory 	at org.openqa.selenium.grid.config.Config.getClass(Config.java:74) 	at org.openqa.selenium.grid.config.MemoizedConfig.lambda$getClass$4(MemoizedConfig.java:99) 	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1688) 	at org.openqa.selenium.grid.config.MemoizedConfig.getClass(MemoizedConfig.java:95) 	at org.openqa.selenium.grid.node.config.NodeOptions.getNode(NodeOptions.java:72) 	at org.openqa.selenium.grid.node.httpd.NodeServer.execute(NodeServer.java:118) 	at org.openqa.selenium.grid.TemplateGridCommand.lambda$configure$2(TemplateGridCommand.java:98) 	at org.openqa.selenium.grid.Main.launch(Main.java:154) 	at org.openqa.selenium.grid.Main.go(Main.java:88) 	at org.openqa.selenium.grid.Main.main(Main.java:54) Caused by: java.lang.reflect.InvocationTargetException 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.lang.reflect.Method.invoke(Method.java:498) 	at org.openqa.selenium.grid.config.Config.getClass(Config.java:69) 	... 9 more Caused by: org.openqa.selenium.docker.DockerException: Unable to parse: artifactory.testing.com/testing/standalone-chrome:latest 	at org.openqa.selenium.docker.internal.Reference.parse(Reference.java:133) 	at org.openqa.selenium.docker.v1_40.V140Docker.getImage(V140Docker.java:66) 	at org.openqa.selenium.docker.Docker.lambda$getImage$0(Docker.java:51) 	at java.util.Optional.map(Optional.java:215) 	at org.openqa.selenium.docker.Docker.getImage(Docker.java:51) 	at org.openqa.selenium.grid.docker.DockerOptions.lambda$loadImages$2(DockerOptions.java:156) 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1604) 	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1596) 	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289) 	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056) 	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692) 	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:163) ``` ## To Reproduce  Steps to reproduce the behavior (including the command to start the containers):  Use standalone-chrome image(not in default domain) in config.yaml file: ```[docker] # Configs have a mapping between the Docker image to use and the capabilities that need to be matched to # start a container with the given image. configs = [     ""artifactory.testing.com/testing/standalone-chrome:latest"", ""{\""browserName\"": \""chrome\""}""     ]  # URL for connecting to the docker daemon # host.docker.internal works for macOS and Windows. # Linux could use --net=host in the `docker run` instruction or 172.17.0.1 in the URI below. # To have Docker listening through tcp on macOS, install socat and run the following command # socat -4 TCP-LISTEN:2375,fork UNIX-CONNECT:/var/run/docker.sock host = ""tcp://host.docker.internal:2375"" ```  Start the hub and node-docker using the below code:  [execution-with-hub--node-roles](https://github.com/SeleniumHQ/docker-selenium/tree/4.0.0-alpha-7-prerelease-20201009#execution-with-hub--node-roles )  ## Expected behavior node-docker should successfully register in hub.  ## Environment  OS: OSX 10.15.7 Docker-Selenium image version: 4.0.0-alpha-7-prerelease-20201009  Docker version: 19.03.8, build afacb8b Docker-Compose version (if applicable): N/A Exact Docker command to start the containers (if using docker-compose, provide  the docker-compose file as well): $ docker network create grid $ docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub:4.0.0-alpha-7-20201009 $ docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub \     -e SE_EVENT_BUS_PUBLISH_PORT=4442 \     -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 \     -v ${PWD}/config.toml:/opt/bin/config.toml \     selenium/node-docker:4.0.0-alpha-7-20201009","closed","C-grid,","olivia-hhe","2020-11-19T23:27:53Z","2021-09-05T08:31:24Z"
"","9201","4.0.0.b1 fails when testing file uploads","## üêõ Bug Report  4.0.0.b1 fails when testing file uploads. This worked in 4.0.0a7.  ## Test script or set of commands reproducing this issue  Baseline successful build on 2021-01-28 with selenium-4.0.0a7: https://github.com/Pylons/deformdemo/runs/1783717797?check_suite_focus=true  Failed build on 2021-02-22 with selenium-4.0.0b1: https://github.com/Pylons/deformdemo/runs/1949937935?check_suite_focus=true  Final successful build on 2021-02-22 with selenium-4.0.0a7: https://github.com/Pylons/deformdemo/runs/1950522237?check_suite_focus=true  ## Stacktrace of one of four similar test failures:  ``` ______________________ FileUploadTests.test_submit_filled ______________________  self =       def test_submit_filled(self):         # submit one first         path, filename = _getFile() >       findcss(""input[type=file]"").send_keys(path)  deformdemo/test.py:1466:  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  .tox/py/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:520: in send_keys     self._execute(Command.SEND_KEYS_TO_ELEMENT, .tox/py/lib/python3.8/site-packages/selenium/webdriver/remote/webelement.py:664: in _execute     return self._parent.execute(command, params) .tox/py/lib/python3.8/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute     self.error_handler.check_response(response) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _   self =  response = {'status': 400, 'value': '{""value"":{""error"":""invalid argument"",""message"":""File not found: /home/runner/work/deformdemo...//marionette/content/error.js:310:5\\ninteraction.uploadFiles@chrome://marionette/content/interaction.js:509:13\\n""}}'}      def check_response(self, response):         """"""         Checks that a JSON response from the WebDriver does not have an error.              :Args:          - response - The JSON response from the WebDriver server as a dictionary            object.              :Raises: If the response contains an error message.         """"""         status = response.get('status', None)         if not status or status == ErrorCode.SUCCESS:             return         value = None         message = response.get(""message"", """")         screen = response.get(""screen"", """")         stacktrace = None         if isinstance(status, int):             value_json = response.get('value', None)             if value_json and isinstance(value_json, str):                 import json                 try:                     value = json.loads(value_json)                     if len(value.keys()) == 1:                         value = value['value']                     status = value.get('error', None)                     if not status:                         status = value[""status""]                         message = value[""value""]                         if not isinstance(message, str):                             value = message                             message = message.get('message')                     else:                         message = value.get('message', None)                 except ValueError:                     pass              if status in ErrorCode.NO_SUCH_ELEMENT:             exception_class = NoSuchElementException         elif status in ErrorCode.NO_SUCH_FRAME:             exception_class = NoSuchFrameException         elif status in ErrorCode.NO_SUCH_WINDOW:             exception_class = NoSuchWindowException         elif status in ErrorCode.STALE_ELEMENT_REFERENCE:             exception_class = StaleElementReferenceException         elif status in ErrorCode.ELEMENT_NOT_VISIBLE:             exception_class = ElementNotVisibleException         elif status in ErrorCode.INVALID_ELEMENT_STATE:             exception_class = InvalidElementStateException         elif status in ErrorCode.INVALID_SELECTOR \                 or status in ErrorCode.INVALID_XPATH_SELECTOR \                 or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:             exception_class = InvalidSelectorException         elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:             exception_class = ElementNotSelectableException         elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:             exception_class = ElementNotInteractableException         elif status in ErrorCode.INVALID_COOKIE_DOMAIN:             exception_class = InvalidCookieDomainException         elif status in ErrorCode.UNABLE_TO_SET_COOKIE:             exception_class = UnableToSetCookieException         elif status in ErrorCode.TIMEOUT:             exception_class = TimeoutException         elif status in ErrorCode.SCRIPT_TIMEOUT:             exception_class = TimeoutException         elif status in ErrorCode.UNKNOWN_ERROR:             exception_class = WebDriverException         elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:             exception_class = UnexpectedAlertPresentException         elif status in ErrorCode.NO_ALERT_OPEN:             exception_class = NoAlertPresentException         elif status in ErrorCode.IME_NOT_AVAILABLE:             exception_class = ImeNotAvailableException         elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:             exception_class = ImeActivationFailedException         elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:             exception_class = MoveTargetOutOfBoundsException         elif status in ErrorCode.JAVASCRIPT_ERROR:             exception_class = JavascriptException         elif status in ErrorCode.SESSION_NOT_CREATED:             exception_class = SessionNotCreatedException         elif status in ErrorCode.INVALID_ARGUMENT:             exception_class = InvalidArgumentException         elif status in ErrorCode.NO_SUCH_COOKIE:             exception_class = NoSuchCookieException         elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:             exception_class = ScreenshotException         elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:             exception_class = ElementClickInterceptedException         elif status in ErrorCode.INSECURE_CERTIFICATE:             exception_class = InsecureCertificateException         elif status in ErrorCode.INVALID_COORDINATES:             exception_class = InvalidCoordinatesException         elif status in ErrorCode.INVALID_SESSION_ID:             exception_class = InvalidSessionIdException         elif status in ErrorCode.UNKNOWN_METHOD:             exception_class = UnknownMethodException         else:             exception_class = WebDriverException         if not value:             value = response['value']         if isinstance(value, str):             raise exception_class(value)         if message == """" and 'message' in value:             message = value['message']              screen = None         if 'screen' in value:             screen = value['screen']              stacktrace = None         st_value = value.get('stackTrace') or value.get('stacktrace')         if st_value:             if isinstance(st_value, str):                 stacktrace = st_value.split('\n')             else:                 stacktrace = []                 try:                     for frame in st_value:                         line = self._value_or_default(frame, 'lineNumber', '')                         file = self._value_or_default(frame, 'fileName', '')                         if line:                             file = ""%s:%s"" % (file, line)                         meth = self._value_or_default(frame, 'methodName', '')                         if 'className' in frame:                             meth = ""%s.%s"" % (frame['className'], meth)                         msg = ""    at %s (%s)""                         msg = msg % (meth, file)                         stacktrace.append(msg)                 except TypeError:                     pass         if exception_class == UnexpectedAlertPresentException:             alert_text = None             if 'data' in value:                 alert_text = value['data'].get('text')             elif 'alert' in value:                 alert_text = value['alert'].get('text')             raise exception_class(message, screen, stacktrace, alert_text) >       raise exception_class(message, screen, stacktrace) E       selenium.common.exceptions.InvalidArgumentException: Message: File not found: /home/runner/work/deformdemo/deformdemo/deformdemo/test.py E       Stacktrace: E       WebDriverError@chrome://marionette/content/error.js:181:5 E       InvalidArgumentError@chrome://marionette/content/error.js:310:5 E       interaction.uploadFiles@chrome://marionette/content/interaction.js:509:13 ```  ## Environment  OS: Ubuntu 18.04 and 20.04 LTS Browser: Firefox Browser version: Selenium/Firefox Browser Driver version: GeckoDriver 0.29.0 Language Bindings version: Python 3 Selenium Grid version (if applicable): See above  Deform and Deformdemo are open source projects. I am happy to share whatever information may be helpful to isolate the cause.","closed","C-py,","stevepiercy","2021-02-22T09:59:35Z","2021-09-05T08:01:09Z"
"","9509","4.0.0-beta-3 fails with SessionNotCreatedException when used together google api client libraries","## üêõ Bug Report  4.0.0-beta-3 fails with SessionNotCreatedException when used together google api client libraries.  selenium-java version 4.0.0-beta-3 alone works fine. But after I added the following additional dependencies to my project (per https://developers.google.com/gmail/api/quickstart/java), I got SessionNotCreatedException.  google-api-client 1.23.0 google-oauth-client-jetty 1.23.0 google-api-services-gmail v1-rev83-1.23.0  Downgrading selenium-java to version 3.141.59 fixed it.  ## To Reproduce  Use the following build.gradle.kts. All Selenium tests fail with SessionNotCreatedException.  plugins {     base     kotlin(""jvm"") version ""1.4.0""     kotlin(""plugin.serialization"") version ""1.4.0"" }  group = ""com.example.testing.web"" version = ""0.0.1""  repositories {     mavenCentral()     jcenter() }  dependencies {     implementation(kotlin(""stdlib-jdk8""))     implementation(""org.seleniumhq.selenium:selenium-java:4.0.0-beta-3"")     testImplementation(""org.testng:testng:7.4.0"")      // https://developers.google.com/gmail/api/quickstart/java     implementation(""com.google.api-client:google-api-client:1.23.0"")     implementation(""com.google.oauth-client:google-oauth-client-jetty:1.23.0"")     implementation(""com.google.apis:google-api-services-gmail:v1-rev83-1.23.0"") }  tasks {     compileKotlin {         kotlinOptions.jvmTarget = ""11""     }     compileTestKotlin {         kotlinOptions.jvmTarget = ""11""     } }  tasks.test {     useTestNG() }  Here is the SessionNotCreatedException.  Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.0.0-beta-3', revision: '5d108f9a67' System info: host: 'Nans-MacBook-Pro-2.local', ip: '192.168.0.108', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '11.0.1' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [null, newSession {desiredCapabilities=Capabilities {browserName: chrome}}] org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. Build info: version: '4.0.0-beta-3', revision: '5d108f9a67' System info: host: 'Nans-MacBook-Pro-2.local', ip: '192.168.0.108', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '11.0.1' Driver info: org.openqa.selenium.chrome.ChromeDriver Command: [null, newSession {desiredCapabilities=Capabilities {browserName: chrome}}] 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:637) 	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:251) 	at org.openqa.selenium.remote.RemoteWebDriver.(RemoteWebDriver.java:173) 	at org.openqa.selenium.chromium.ChromiumDriver.(ChromiumDriver.java:89) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:99) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:86) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:41) 	at com.example.testing.web.GithubHomePageTest.setUp(GithubHomePageTest.kt:17) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133) 	at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62) 	at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385) 	at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321) 	at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700) 	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527) 	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173) 	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46) 	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824) 	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146) 	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146) 	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128) 	at java.base/java.util.ArrayList.forEach(ArrayList.java:1540) 	at org.testng.TestRunner.privateRun(TestRunner.java:794) 	at org.testng.TestRunner.run(TestRunner.java:596) 	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377) 	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371) 	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332) 	at org.testng.SuiteRunner.run(SuiteRunner.java:276) 	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53) 	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96) 	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212) 	at org.testng.TestNG.runSuitesLocally(TestNG.java:1134) 	at org.testng.TestNG.runSuites(TestNG.java:1063) 	at org.testng.TestNG.run(TestNG.java:1031) 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141) 	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90) 	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) 	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) 	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) 	at com.sun.proxy.$Proxy2.stop(Unknown Source) 	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:133) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) 	at java.base/java.lang.reflect.Method.invoke(Method.java:566) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) 	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) 	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182) 	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164) 	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414) 	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64) 	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48) 	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) 	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) 	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56) 	at java.base/java.lang.Thread.run(Thread.java:834) Caused by: java.lang.NoSuchMethodError: com.google.common.base.Throwables.throwIfUnchecked(Ljava/lang/Throwable;)V 	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:145) 	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:619) 	... 64 more   ## Expected behavior  Selenium can start a browser w/o SessionNotCreatedException.  ## Test script or set of commands reproducing this issue  Please provide a test script to reproduce the issue you are reporting, if the  setup is more complex, GitHub repo links with are also OK.  Issues without a reproduction script are likely to stall and eventually be closed.  ## Environment  OS: macOS 10.13.6 Browser: Chrome Browser version: 90.0.4430.212 (Official Build) (x86_64) Browser Driver version: ChromeDriver 90.0.4430.24 Language Bindings version: selenium-java 4.0.0-beta-3 Selenium Grid version (if applicable): N/A","closed","R-awaiting answer,","nan-zhong","2021-05-25T05:07:25Z","2021-09-05T08:01:01Z"
"","9893","selenium4.0.0-rc2 can not work in windows 7?","## üêõ Bug Report  2021-10-08 14:19:25,641 ÔºöÁ±ªÂêç:FrmSpider ÊñπÊ≥ïÂêç:startWork ‰ø°ÊÅØ:Unexpected error creating WebSocket DevTools session. 2021-10-08 14:19:25,720 ÔºöÁ±ªÂêç:FrmSpider ÊñπÊ≥ïÂêç:startWork ‰ø°ÊÅØ:   Âú® OpenQA.Selenium.Chromium.ChromiumDriver.GetDevToolsSession(Int32 devToolsProtocolVersion)    Âú® OpenQA.Selenium.Chromium.ChromiumDriver.GetDevToolsSession()    Âú® seleniumTwitterAllInOne.FrmSpider.startWork()  `driver = new ChromeDriver(AppDomain.CurrentDomain.BaseDirectory, options, TimeSpan.FromMinutes(3));  IDevTools devTools = driver as IDevTools; session = devTools.GetDevToolsSession(); domains = session.GetVersionSpecificDomains();`   the program work will in windows 10  ## Environment  OS: Windows 7   x86  Browser: Chrome    Browser version: 94.0.4606.71 (Ê≠£ÂºèÁâàÊú¨) (32 ‰ΩçÂÖÉ)   Browser Driver version:  ChromeDriver 94.0.4606.61  Language Bindings version:  c#   .netframework 4.7.2  Selenium Grid version (if applicable): 4.0.0-rc2","closed","","stream1990","2021-10-08T06:31:05Z","2021-11-08T00:06:55Z"
"","9633","Exception in geckodriver","## üêõ Bug Report  /opt/geckodriver-0.29.1: 1: Syntax error: ""("" unexpected  ## To Reproduce  Build on arm64 (pi 4)  VERSION=local make standalone_firefox  run in docker  docker run -d -p 4444:4444 -p 7900:7900 --shm-size 2g selenium/standalone-firefox:local-20210704  ## Expected behavior  ``` /opt/geckodriver-0.29.1: 1: Syntax error: ""("" unexpected  16:40:04.203 INFO [LocalDistributor.newSession] - Session request received by the distributor:   [Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:firefoxOptions: {args: [], prefs: {}}}] /opt/geckodriver-0.29.1: 1: Syntax error: ""("" unexpected 16:40:04.398 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""a4da31f0ab634c88b36a18e639974c61"",""eventTime"": 1625416804383938433,""eventName"": ""exception"",""attributes"": {""exception.message"": ""Error while creating session with the driver service. Stopping driver service: Driver server process died prematurely.\nBuild info: version: '4.0.0-rc-1', revision: '23ece4f646'\nSystem info: host: '131924c739d1', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'aarch64', os.version: '5.12.10-1-MANJARO-ARM', java.version: '11.0.11'\nDriver info: driver.version: unknown"",""exception.stacktrace"": ""org.openqa.selenium.WebDriverException: Driver server process died prematurely.\nBuild info: version: '4.0.0-rc-1', revision: '23ece4f646'\nSystem info: host: '131924c739d1', ip: '172.17.0.2', os.name: 'Linux', os.arch: 'aarch64', os.version: '5.12.10-1-MANJARO-ARM', java.version: '11.0.11'\nDriver info: driver.version: unknown\n\tat org.openqa.selenium.remote.service.DriverService.start(DriverService.java:230)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:120)\n\tat org.openqa.selenium.grid.node.config.DriverServiceSessionFactory.apply(DriverServiceSessionFactory.java:63)\n\tat org.openqa.selenium.grid.node.local.SessionSlot.apply(SessionSlot.java:143)\n\tat org.openqa.selenium.grid.node.local.LocalNode.newSession(LocalNode.java:324)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.startSession(LocalDistributor.java:481)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor.newSession(LocalDistributor.java:408)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.handleNewSessionRequest(LocalDistributor.java:616)\n\tat java.base\u002fjava.util.Optional.ifPresent(Optional.java:183)\n\tat org.openqa.selenium.grid.distributor.local.LocalDistributor$NewSessionRunnable.run(LocalDistributor.java:580)\n\tat org.openqa.selenium.concurrent.Regularly$RetryingRunnable.run(Regularly.java:105)\n\tat java.base\u002fjava.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n\tat java.base\u002fjava.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base\u002fjava.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base\u002fjava.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base\u002fjava.lang.Thread.run(Thread.java:829)\n"",""exception.type"": ""org.openqa.selenium.WebDriverException"",""logger"": ""org.openqa.selenium.grid.node.config.DriverServiceSessionFactory"",""session.capabilities"": ""{\""acceptInsecureCerts\"": true,\""browserName\"": \""firefox\"",\""moz:firefoxOptions\"": {\""args\"": [  ],  \""prefs\"": {  }  },  \""se:vncEnabled\"": true  }\n""}}  16:40:04.495 WARN [SeleniumSpanExporter$1.lambda$export$0] - {""traceId"": ""a4da31f0ab634c88b36a18e639974c61"",""eventTime"": 1625416804490879277,""eventName"": ""HTTP request execution complete"",""attributes"": {""http.flavor"": 1,""http.handler_class"": ""org.openqa.selenium.grid.sessionqueue.local.LocalNewSessionQueue"",""http.host"": ""swarm-node2:4444"",""http.method"": ""POST"",""http.request_content_length"": ""427"",""http.scheme"": ""HTTP"",""http.status_code"": 500,""http.target"": ""\u002fsession"",""http.user_agent"": ""selenium\u002f4.0.0-beta-4 (java unix)""}} ```  ## Test script or set of commands reproducing this issue          FirefoxOptions firefoxOptions = new FirefoxOptions();         WebDriver driver = new RemoteWebDriver(new URL(""http://remote:4444""), firefoxOptions);         driver.get(""https://........com"");         String page = driver.getPageSource();         File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);         FileUtils.copyFile(scrFile, new File(""screenshot.png""));         driver.quit();         return ""ok"";  ## Environment  OS: Manjaro ARM 21.06 Browser: Firefox Browser Driver version: geckodriver-0.29.1 Language Bindings version: Java","closed","","andriusjakas","2021-07-04T17:29:14Z","2021-09-05T07:58:56Z"
"","9866","JSON::ParserError: unexpected token at 'Unable to route ....'","## üêõ Bug Report  **Description**  The error returned by the Selenium server is not in the expected format (JSON) under certain conditions.  Specifically, if a session has expired due to the browser session timeout being exceeded, and a remote client attempts an operation on the session, a plain text response may be returned like this:  `JSON::ParserError: 809: unexpected token at 'Unable to route (POST) /session/a4d35ecd4906f0ef90ad915764adb7c2/url'`  The message will vary depending on the client's request--it may be any of GET/POST/DELETE  ## To Reproduce  https://gist.github.com/zetetic/82766452f77b864d577aab67221d749e  See the README for instructions. There are two examples using RSpec that produce a correct response, wait until the browser timeout has been triggered, and then produce the error response.  ## Expected behavior  Client requests against the server HTTP endpoint should return JSON formatted responses.  ## Test script or set of commands reproducing this issue  see above  ## Environment  OS: Linux Browser: Chrome Browser version: 93.0.4577.63 Browser Driver version: ChromeDriver 93.0.4577.15  Language Bindings version: Ruby 4.0.0.rc1 Selenium Grid version (if applicable): Selenium Standalone 4.0.0-rc-2 (revision db2bb9ed96)","closed","needs-triaging,","zetetic","2021-09-23T18:37:54Z","2021-10-31T00:06:34Z"
"","9474","when using existing profile, cannot visit webpages due to -foreground being passed","## üêõ Bug Report  (this is a follow-up to [a recently-closed issue](https://github.com/SeleniumHQ/selenium/issues/9472#issue-890689154))  When I pass `-profile /some/location` to the driver the window that opens cannot visit the desired page with `webdriver.get(url)`. Rather, it stays on the initial homepage (blank for this particular profile).   ## To Reproduce  Run this: ``` #!/usr/bin/env python  from selenium.webdriver import Firefox, DesiredCapabilities from selenium.webdriver.firefox.options import Options import time  options = Options() options.add_argument(""-profile"") options.add_argument("""")  webdriver = Firefox(desired_capabilities=options.to_capabilities()) webdriver.get(""https://google.com"")  while 1:     time.sleep(0.1)  ```  ## Expected behavior  A window visiting `google.com`, using my existing profile.   ## Actual behavior  The browser does use my existing profile, as I can confirm by examining the resulting `geckodriver.log`, but the window stays stuck on the initial homepage (blank) rather than going to `google.com`  ## Test script or set of commands reproducing this issue  Provided above  ## Environment  OS: `Linux x86_64` Browser: `Firefox` Browser version: `Mozilla Firefox 88.0.1` Browser Driver version: `geckodriver 0.29.0` Language Bindings version: `Python`'s `selenium 3.141.0` [package](https://pypi.org/project/selenium/)  ## Additional info When I run that script the `geckodriver.log` says ``` 1620907601939   geckodriver     INFO    Listening on 127.0.0.1:44335 1620907601942   mozrunner::runner       INFO    Running command: ""/usr/bin/firefox"" ""--marionette"" ""-profile"" """" ""-foreground"" ""-no-remote"" ``` I have checked that I similarly hang on the homepage if I just run that command manually in a terminal: ``` $ firefox --marionette -profile """" -no-remote -foreground www.google.com ``` On the other hand, if I drop `-foreground`, I do get to `google.com`.","closed","needs-triaging,","stuart-little","2021-05-13T12:10:40Z","2021-09-05T08:03:31Z"
"","9423","Randomly getting ""chrome not reachable"" when creating new webdriver sessions","## üêõ Bug Report  ## To Reproduce It's hard to reproduce since it happens maybe every 10-20th full test run where we run 3 applications in parallel with 3 test files in parallel in each application using Protractors `shardTestFiles`.   I'm not looking for a solution handed on a silver platter, but I have been investigating this for years in our project and I would like to get to the bottom with in. I have checked every relevant issue everywhere containing ""chrome not reachable"" leading me nowhere. I have been debugging with Node, but since it rarely happens I have not yet had it happen while debugging. I can only the see the error afterward. ``` 06:28:58  [06:28:58] I/testLogger - [chrome #01-47] PID: 4095 06:28:58  [chrome #01-47] Specs: /opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/packages/web-app-edit/test/e2e/suite/part/alias.e2e-spec.ts 06:28:58  [chrome #01-47]  06:28:58  [chrome #01-47] [06:27:58] I/direct - Using ChromeDriver directly... 06:28:58  [chrome #01-47]  06:28:58  [chrome #01-47] /opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/selenium-webdriver/lib/error.js:546 06:28:58  [chrome #01-47]         throw new ctor(message); 06:28:58  [chrome #01-47]               ^ 06:28:58  [chrome #01-47] WebDriverError: chrome not reachable 06:28:58  [chrome #01-47]   (Driver info: chromedriver=89.0.4389.23 (61b08ee2c50024bab004e48d2b1b083cdbdac579-refs/branch-heads/4389@{#294}),platform=Linux 3.10.0-327.36.3.el7.x86_64 x86_64) 06:28:58  [chrome #01-47]     at Object.checkLegacyResponse (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/selenium-webdriver/lib/error.js:546:15) 06:28:58  [chrome #01-47]     at parseHttpResponse (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/selenium-webdriver/lib/http.js:509:13) 06:28:58  [chrome #01-47]     at /opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/selenium-webdriver/lib/http.js:441:30 06:28:58  [chrome #01-47]     at processTicksAndRejections (internal/process/task_queues.js:93:5) 06:28:58  [chrome #01-47] From: Task: WebDriver.createSession() 06:28:58  [chrome #01-47]     at Function.createSession (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/selenium-webdriver/lib/webdriver.js:771:26) 06:28:58  [chrome #01-47]     at Function.createSession (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/selenium-webdriver/chrome.js:761:15) 06:28:58  [chrome #01-47]     at Direct.getNewDriver (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/protractor/built/driverProviders/direct.js:77:33) 06:28:58  [chrome #01-47]     at Runner.createBrowser (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/protractor/built/runner.js:195:43) 06:28:58  [chrome #01-47]     at /opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/protractor/built/runner.js:339:29 06:28:58  [chrome #01-47]     at _fulfilled (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/q/q.js:834:54) 06:28:58  [chrome #01-47]     at /opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/q/q.js:863:30 06:28:58  [chrome #01-47]     at Promise.promise.promiseDispatch (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/q/q.js:796:13) 06:28:58  [chrome #01-47]     at /opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/q/q.js:556:49 06:28:58  [chrome #01-47]     at runSingle (/opt/oas/jenkins/slave/workspace/EB-Components_OAS_oas-web_master/node_modules/q/q.js:137:13) ```  I had an idea patching the code to make it retry if the creation fails, but it seems like the code for creating the driver is synchronous even though the execution in the end is async. I have a hard time understanding where the actual session is created with all the flows and executions going in. The driver instance is returned as a ControlFlow promise and not the driver itself. Really confusing for someone not familiar with the code.  Can someone familiar with this project help me with ideas how to debug what's going on? I've read suggestions that settings a custom --user-data-dir could fix this because the issue could be that profiles/sessions in chrome are reused. But I added a random user dir for each instance, and it still happens. I have also read that it could be because ports are reused and that one driver uses a already running drivers port, so when the first is closed the second loses it connection.  I would like to test this but I don't know where to set the custom port for this.  I guess this could also be the fault of ChromeDriver?  Thanks!   ## Environment  OS: Windows 10 1909 Browser: Puppeteer/Chromium (headless) Browser version: Chromium 89.0.4389.0 Browser Driver version: ChromeDriver 89.0.4389.23 Selenium-webdriver: 3.6.0","closed","D-chrome,","JonWallsten","2021-04-27T10:23:39Z","2021-09-05T08:06:30Z"
"","9134","documentation: sample code for selenium-webdriver does not run","## üêõ Bug Report  ## The sample code for selenium-webdriver has an extra ; in the middle of the code making it not able to execute. ``` https://www.selenium.dev/selenium/docs/api/javascript/index.html ```   ## To Reproduce  Under the Usage section of the page: ``` https://www.selenium.dev/selenium/docs/api/javascript/index.html ``` sample code ``` const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     await driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN);     await driver.wait(until.titleIs('webdriver - Google Search'), 1000);   } finally {     await driver.quit();   } })(); ```   ## Expected behavior The sample code should not have the extra ; in the middle of the driver.findElement function: ``` const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     await driver.findElement(By.name('q')).sendKeys('webdriver', Key.RETURN);     await driver.wait(until.titleIs('webdriver - Google Search'), 1000);   } finally {     await driver.quit();   } })(); ```","closed","","jamesnewking","2021-02-02T21:12:08Z","2021-09-05T08:21:29Z"
"","9017","[Selenium 4] [C#] RemoteWebDriver doesn't implement IDevTools","## üêõ Bug Report  ## Description  When trying to get devtools for RemoteWebdriver as IDevTools, null returned. When instead of RemoteWebdriver using ChromeDriver, everything works fine and able to create dev tools session. Looks that RemoteWebDriver doesn't implement IDevTools. [https://github.com/SeleniumHQ/selenium/blob/trunk/dotnet/src/webdriver/Remote/RemoteWebDriver.cs](url)  ## To Reproduce  Doesn't work - devTools are null ` var driver = new RemoteWebDriver(new Uri(_seleniumHubUrl), options.ToCapabilities(), TimeSpan.FromMinutes(2)); ` `var devTools = driver as IDevTools;` `devTools.CreateDevToolsSession()`  Works fine - devTools are not null `var driver = new ChromeDriver(Environment.CurrentDirectory, options, TimeSpan.FromMinutes(3));` `var devTools = driver as IDevTools;` `devTools.CreateDevToolsSession()`  ## Expected behavior  RemoteWebDriver implements IDevTools. Able to set up dev tools and create dev tools session for RemoteWebdriver  ## Environment  OS: Windows10 Browser: Chrome Browser version: 87 Browser Driver version: 87.0.4280.8800 Language Bindings version: C#  4.0.0-alpha07 Selenium Grid version (if applicable): 4.0.0-beta-1-prerelease-20201208","closed","C-dotnet,","szamacz","2020-12-31T11:28:59Z","2021-09-26T00:06:12Z"
"","9393","""WebDriverError: element click intercepted: Element is not clickable at point"" exception thrown when css smooth scroll is applied to html element.","## üêõ Bug Report  ""WebDriverError: element click intercepted: Element is not clickable at point"" exception thrown when css smooth scroll is applied to html element.  ## To Reproduce  Add style:   html:focus-within {   scroll-behavior: smooth; }  Write test that selects an input and adds a value. Make sure the input is below the fold so the browser window is forced to scroll down.  ## Expected behavior  Browser should scroll and allow input to be selected.  ## Environment  Session info: headless chrome=88.0.4324.182) Driver info: chromedriver=88.0.4324.96 (68dba2d8a0b149a1d3afac56fa74648032bcf46b-refs/branch-heads/4324@{#1784}),platform=Linux 4.14.128-87.105.amzn1.x86_64 x86_64","closed","R-awaiting answer,","monkeychops","2021-04-19T13:07:39Z","2021-09-05T08:06:32Z"
"","9726","Typo in a link in the documentation","## üêõ Bug Report  ![image](https://user-images.githubusercontent.com/29214635/128640672-9d908eb8-2b85-4626-a03b-7c8b1a3df85c.png)  The link that menu points to is https://github.com/seleniumhq/selenium//issues/new. Notice the double '//' between _selenium_ and _issues_.  ``` https://github.com/seleniumhq/selenium/issues/new https://github.com/seleniumhq/selenium//issues/new ```    ## To Reproduce    Detailed steps to reproduce the behavior:  1. Right click on the menu and copy link 2. Paste it anywhere else and see how it contains '//'  ## Expected behavior  I expect such link to not contain '//' and have it replaced by a single '/'  ## Test script or set of commands reproducing this issue  ## Environment","closed","","adriancuadrado","2021-08-08T17:52:09Z","2021-09-08T00:04:40Z"
"","9255",".Net Use action.Flick no effect of Chrome","## üêõ Bug Report   Use action.Flick no effect in CSharp  ## To Reproduce `            string driver_path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, ""Resources"");              ChromeDriverService driverService = ChromeDriverService.CreateDefaultService(driver_path,""chromedriver88.exe"");              var chromeOptions = new ChromeOptions();              chromeOptions.EnableMobileEmulation(""Nexus 6P"");              ChromeDriver chromeDriver = new ChromeDriver(driverService,chromeOptions);              chromeDriver.Navigate().GoToUrl(""http://www.baidu.com"");              IWebElement button = chromeDriver.FindElement(By.Id(""index-bn""));              TouchActions actions = new TouchActions(chromeDriver);              Thread.Sleep(5000);              actions.Flick(button, 10, -800, 300).Perform(); `  ## Environment  OS: Windows 10 Browser: Chrome  Browser version: 88.0.4324.96 Browser Driver version: 88.0.4324.96 Language Bindings version: CSharp(.Net5)","closed","C-dotnet,","chenzanyu","2021-03-10T19:03:01Z","2022-01-26T00:09:54Z"
"","9581","selenium can't drag Canvas elements","## üêõ Bug Report     There are abnormalities in the functions such as click, double-click, drag and drop of Canvas used by Selenium to automate testing. The specific reason is that Selenium cannot get the elements inside Canvas.  ## To Reproduce Exercising a page's dragging and dropping functionailty used to be simple with  Seleniums's Action Builder, but sadly ,it won't work with HTML5 drag and drop .  We use the selenium function 'Actions.dragAndDrop(source,target)'  to control the elements inside canvas,it dosen't work that way for selenium can't select the element .   ## Expected behavior   selenium can drap canvas elements  ## Test script or set of commands reproducing this issue  ``` Actions actions = new Action(driver); actions.dragAndDrop(source,target)Ôºõ ```  The code dosen't work ,also no exception.  ## Environment OS: Windows 10 Browser: Chrome Browser version: 90.0.4430.24 Browser Driver version:  90.0.4430.24   Language Bindings version:  Java 8  c","closed","G-w3c,","YinChunGuang","2021-06-16T04:20:21Z","2021-09-05T07:50:49Z"
"","9348","""TypeError: Wait condition must be a promise-like..."" persists in v4.0.0-beta.2","## üêõ Bug Report   We are still receiving  ``` TypeError: Wait condition must be a promise-like object, function, or a Condition object ```  despite having upgraded to `selenium-webdriver@^4.0.0-beta.2`. We are using a custom Jest environment to provide a global `driver: WebDriver` object. This seems like it's related to #5560 and #5749, opening a new issue [as suggested](https://github.com/SeleniumHQ/selenium/issues/5749#issuecomment-805644745.) by @diemol.  ## To Reproduce   The code that produces the error looks like this:  ```ts // login-page.ts import {By, WebDriver, until} from 'selenium-webdriver'  export class LoginPage {   constructor(driver: WebDriver) {     this.driver = driver   }   // ...    login = async () => {     await this.driver.wait(until.elementLocated(By.xpath('some-xpath')))     // ...   } } ```  ```ts // login-page.test.ts import {LoginPage} from './login-page'  describe('test suite', () => {   it('logs in', () => {     const page = new LoginPage(global.driver)     await driver.get('some-url')     await page.login()     // ...   }   // ... } ```  ## Expected behavior  The line runs without a `TypeError`.  ## Test script or set of commands reproducing this issue  I can work up a demo repo, if needed.  ## Environment  OS:  macOS 11.2.3 Browser:  Chrome Browser version:  89.0.4389.90 (Official Build) (x86_64) Browser Driver version:  chromedriver@^88.0.0 Language Bindings version:  Node 12.14.0 and selenium-webdriver@4.0.0-beta.2 Selenium Grid version (if applicable):  N/A","closed","C-nodejs,","clmay","2021-03-30T16:10:20Z","2022-06-13T00:13:36Z"
"","9338","The IE driver hangs when execute js command with special scenario.","## üêõ Bug Report   If I use js command with JavascriptExecutor to run the click, it will hang, could not back to run next step.  My test web site is special, it will auto close the tab when click button.    ## To Reproduce  [Logout.zip](https://github.com/SeleniumHQ/selenium/files/6210091/Logout.zip)   Detailed steps to reproduce the behavior: 1. open link 2. click close button with exeucte js click  ## Expected behavior  1. click the close button (the window will close)  2. return back to my code normal, then I could execute next step code.   ## Test script or set of commands reproducing this issue          WebDriver driver = new InternetExplorerDriver();         driver.get("" open the web link"");         WebElement element = driver.findElement(By.xpath(""//button[text()='Close']""));         JavascriptExecutor executor = (JavascriptExecutor) driver;         executor.executeScript(""arguments[0].click();"", element);    //      executor.executeAsyncScript(""arguments[0].click();"", element);  // this also can not work well         .... some code do next operation        ....   ## Environment  OS:  Windows 10 Browser: IE Browser version: 11 Browser Driver version: InternetExplorerDriver server (64-bit) 3.150.1.0 Language Bindings version: Java","closed","D-IE,","kaola89","2021-03-26T07:38:24Z","2022-03-17T00:09:24Z"
"","9730","ERROR: [...]webdriver/BUILD.bazel:269:11: in src attribute of nuget_push rule //dotnet/src/webdriver:publish: '//dotnet/src/webdriver:package' must produce a single file","## üêõ Bug Report   I need to build selenium on windows, I followed the instructions and the build is failing. What do I need to do to resolve the error?  ## To Reproduce  Install bazel using instructions from https://docs.bazel.build/versions/4.1.0/install-windows.html Put bazel in the `PATH` Install msys2 using instructions from https://www.msys2.org/ and update the package database Set the `BAZEL_SH` environment variable Run `pacman -S zip unzip patch diffutils git` per bazel guidance Install ruby via pacman Install windows version of ruby Install Java JDK and set path or JAVA_HOME to the install directory wget -c --no-cookies --no-check-certificate --header ""Cookie: oraclelicense=accept-securebackup-cookie"" https://edelivery.oracle.com/otn-pub/java/jdk/8u301-b09/d3c52aa6bfa54d3ca74e617f18309292/jdk-8u301-windows-x64.exe Install python for windows  cd d:\src\beta\selenium bazel build //dotnet/...   ## Results     =>Mon 08/09/2021 12:04:59.52=> d:\Src\Beta\selenium     bazel build //dotnet/...     Starting local Bazel server and connecting to it...     ERROR: D:/src/beta/selenium/dotnet/src/webdriver/BUILD.bazel:269:11: in src attribute of nuget_push rule //dotnet/src/webdriver:publish: '//dotnet/src/webdriver:package' must produce a single file     ERROR: D:/src/beta/selenium/dotnet/src/webdriver/BUILD.bazel:269:11: Analysis of target '//dotnet/src/webdriver:publish' failed     ERROR: Analysis of target '//dotnet/src/webdriver:publish' failed; build aborted:     INFO: Elapsed time: 13.222s     INFO: 0 processes.     FAILED: Build did NOT complete successfully (358 packages loaded, 13105 targets configured)      =>Mon 08/09/2021 12:05:17.99=> d:\Src\Beta\selenium   ##dotnet/src/webdriver/BUILD.bazel:269 through 273      nuget_push(         name = ""publish"",         src = "":package"",         api_key = ""//dotnet:nuget-api-key"",     )  ## Environment  OS: Microsoft Windows [Version 10.0.19042.985]","closed","needs-triaging,","Techtonictools","2021-08-09T18:22:23Z","2021-09-12T00:05:59Z"
"","9256","Can't take web element screenshots when element were found using EventFiringWebDriver","## üêõ Bug Report   ## To Reproduce  Detailed steps to reproduce the behavior: 1. Create a WebDriver 2. Create an EventFiringWebDriver with the web drive from step 1 3. Navigate to any page 4. Using the EventFiringWebDriver  web driver to find any element on the page 5. Try to get the screenshot from the element - `Screenshot failsShot = ((ITakesScreenshot)fails).GetScreenshot(); 6. Note the _Unable to cast object of type 'EventFiringWebElement' to type 'OpenQA.Selenium.ITakesScreenshot'_ exception ` ## Expected behavior  I would expect to be able to take a screenshot of an element, even if that element was found using a EventFiringWebDriver  ## Test script or set of commands reproducing this issue  ```             var driver = new ChromeDriver();             EventFiringWebDriver firingDriver = new EventFiringWebDriver(driver);             firingDriver.Navigate().GoToUrl(Url);              // Saves element image as expected             var works = driver.FindElement(By.LinkText(""About""));             Screenshot worksShot = ((ITakesScreenshot)works).GetScreenshot();             worksShot.SaveAsFile(""works.png"");              var fails = firingDriver.FindElement(By.LinkText(""About""));             // Fail with: Unable to cast object of type 'EventFiringWebElement' to type 'OpenQA.Selenium.ITakesScreenshot'             Screenshot failsShot = ((ITakesScreenshot)fails).GetScreenshot();             failsShot.SaveAsFile(""fails.png""); ```  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 88.0.4324.190  Browser Driver version: ChromeDriver 88.0.4324.9600 Language Bindings version: C# 3.141.0 and 4.0.0-beta1","closed","C-dotnet,","TroyWalshProf","2021-03-10T19:20:58Z","2021-09-05T08:10:47Z"
"","9189","ChromeDriver User-Data-Dir Double Windows.","## üêõ Bug Report   ## To Reproduce  - Create Chrome Options with param `user-data-dir=something` - Create a Basic Chrome Driver - Close your app. Leave the window open. - Start the app again.  You will get the error `user data directory is already in use`.  This is **NOT** my bug.   - A new Chrome Window Appears with no way to control it as its null.  ## Expected behavior  The behavior would be here that the new Chrome Window would not start since the process will be killed with `user data directory is already in use`.  Not only does the Window show up, but the driver instance is returned with a crash.  Now, as a developer I have no way to close this random window.  If a user has other chrome windows open, I will have force close all Chome applications.  I think a simple solution would be have the Chrome driver return but be a bad state, or close the window automatically/never open the window in the first place.","closed","needs-triaging,","STRATZ-Ken","2021-02-17T22:11:48Z","2021-09-05T08:15:52Z"
"","9662","Opera 77.0.4054.254 GetAttribute method always returns null","## üêõ Bug Report   ## To Reproduce   Search for an item and call the GetAttribute(""value"") method ## Expected behavior  The value specified in the method parameter should be returned ![image](https://user-images.githubusercontent.com/63465285/126120696-b014ad94-082e-4ee1-97ec-a2119f46360a.png)   ## Test script or set of commands reproducing this issue  none  ## Environment  OS: Selenoid Browser: Opera Browser version:  77.0.4054.254 Browser Driver version:  91.0.4472.77 Language Bindings version:  none Selenium Grid version (if applicable):  none Selenium version: 3.141.0","closed","needs-triaging,","bloodgang94","2021-07-19T07:20:25Z","2021-09-05T07:50:42Z"
"","9123","[selenium4] [chromedriver] Startup timeout","## üêõ Bug Report   ## Description  When I use selenium4 to launch multiple Chrome browsers at the same time, the following error may appear ``` Exception in thread ""Thread-9"" org.openqa.selenium.WebDriverException: Timed out waiting for driver server to start. Build info: version: '4.0.0-alpha-7', revision: 'de8579b6d5' System info: host: 'PC-20200910MRCL', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_212' Driver info: driver.version: unknown 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:210) 	at top.fols.winapp.zdfsp.CommandMain$3.run(CommandMain.java:459) Caused by: java.util.concurrent.ExecutionException: java.lang.RuntimeException: java.lang.InterruptedException 	at java.util.concurrent.CompletableFuture.reportGet(CompletableFuture.java:357) 	at java.util.concurrent.CompletableFuture.get(CompletableFuture.java:1915) 	at org.openqa.selenium.remote.service.DriverService.start(DriverService.java:204) 	... 1 more Caused by: java.lang.RuntimeException: java.lang.InterruptedException 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:95) 	at org.openqa.selenium.remote.service.DriverService.waitUntilAvailable(DriverService.java:227) 	at org.openqa.selenium.remote.service.DriverService.lambda$start$0(DriverService.java:193) 	at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590) 	at java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1582) 	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289) 	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056) 	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692) 	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157) Caused by: java.lang.InterruptedException 	at java.util.concurrent.FutureTask.awaitDone(FutureTask.java:404) 	at java.util.concurrent.FutureTask.get(FutureTask.java:204) 	at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:88) 	... 8 more ``` At first I thought it was a problem with my code, but I returned to selenium3 and started chrome without these errors.  ## To Reproduce  ``` //Normal start //Creating ChromeDriver directly without using ChromeDriverService is the same result for (int i = 0; i< 10; i++) { 	ChromeDriverService service = new ChromeDriverService.Builder() 			.usingDriverExecutable(new File(""C:\\documents\\360Sync\\JAVA\\Yzs\\ZiDongFaShiPin\\res\\webdriver\\chrome\\App\\chromedriver.exe"")) 			.usingAnyFreePort() 			.build(); 	service.start(); 	System.out.println(service.getUrl()); 	WebDriver webDriver = new ChromeDriver(service); 	webDriver.get(""http://www.baidu.com""); } ```  ``` //timeout //Creating ChromeDriver directly without using ChromeDriverService is the same result for (int i = 0; i< 10; i++) {    new Thread(){ 	   @Override 	   public void run() { 		   ChromeDriverService service = new ChromeDriverService.Builder() 				   .usingDriverExecutable(new File(""C:\\documents\\360Sync\\JAVA\\Yzs\\ZiDongFaShiPin\\res\\webdriver\\chrome\\App\\chromedriver.exe"")) 				   .usingAnyFreePort() 				   .build();  		   try { 			   service.start(); 		   } catch (IOException e) { 			   e.printStackTrace(); 		   } 		   System.out.println(service.getUrl()); 		   WebDriver webDriver = new ChromeDriver(service); 		   webDriver.get(""http://www.baidu.com""); 	   }    }.start(); } ```   ## Expected behavior Like selenium3, i can start multiple chrome browsers at the same time without timeout   ## Environment ``` OS: Windows 10 AND Windows7 Browser: Chrome? Browser version: 86.0.4240.75 Browser Driver version: ChromeDriver 86.0.4240.22 Language Bindings version: Java 1.8.0_212 ``` Selenium Grid version (if applicable): selenium4 alpha-7","closed","C-java,","sininit","2021-01-30T01:43:28Z","2021-09-05T08:19:12Z"
"","9269","4.0.0.b1  chromeheadless - fails on linux ubuntu","## üêõ Bug Report    ## To Reproduce   just start with the following  ```         elif os.environ['WEBDRIVER'] == 'ChromeHeadless':             options = webdriver.ChromeOptions()             options.add_argument('--no-sandbox')             options.add_argument('--headless')             options.add_argument('--disable-gpu')             options.add_argument('--log-level=3')             #options.add_argument('--incognito')             options.add_argument('--default-shm-size=32m')             options.add_argument('--disable-translate')             options.add_argument('--disable-extensions')             options.add_argument(""--proxy-server='direct://'"")             options.add_argument(""--proxy-bypass-list=*"")             if os.environ.get('WEBDRIVER_LANG'):                 options.add_experimental_option('prefs', {'intl.accept_languages': os.environ.get('WEBDRIVER_LANG')})             d = DesiredCapabilities.CHROME  # for console logging             d['goog:loggingPrefs'] = { 'browser':'ALL' }             driver = webdriver.Chrome(options=options, desired_capabilities=d) ```   ## Environment  OS:  ubuntu 16.04lts Browser:  ChromeHeadless Browser version:  89.0.4389.23 Browser Driver version:  chromedriver 89.0.4389.23 (latest available) Language Bindings version:   python 3.9.1    if I install `selenium==4.0.0.a7` it works fine.  This works fine in full browser mode in windows, I do not have any running Xwindows on linux","closed","","fenchu","2021-03-12T09:54:22Z","2021-09-05T08:12:21Z"
"","9516","C# Driver returns 404 in iframe elements if you use --auto-open-devtools-for-tabs","## üêõ Bug Report      ## To Reproduce  Start browser as following  ``` ChromeOptions options = new ChromeOptions(); options.AddArguments(""--auto-open-devtools-for-tabs""); IWebDriver webDriver = new ChromeDriver(""C:\\Programs2\\chromedriver_win32"", options); webDriver.Manage().Window.Maximize(); return webDriver; ```  1. Let it load a sample page with an iframe in it. Here dev tools should be already opened automatically. 2. Open a new tab and let webdriver focus on that. 3. Return back to original window. 4. Switch to iframe. 5. Try to find element by id inside that iframe. 6. Observe it returns 404. 7. If you don't add `--auto-open-devtools-for-tabs` it works.  ## Expected behavior  It should return element instead of 404 error.    ## Environment  OS: Windows 10 Browser: Chrome Browser version: Chrome 90  Browser Driver version: ChromeDriver 90.0.4430.24","closed","R-awaiting answer,","reyou","2021-05-26T16:03:40Z","2021-09-05T08:01:01Z"
"","9419","Document requirement on Windows 10 to set Protected Mode","## üêõ (Documentation) Bug Report  In your wiki, under the instructions for configuring Internet Explorer, https://github.com/SeleniumHQ/selenium/wiki/InternetExplorerDriver#required-configuration, you state that _""On IE 7 or higher on Windows Vista or Windows 7, you must set the Protected Mode settings for each zone to be the same value""_  I recently configured Internet Explorer 11 in Windows 10, and ended up finding that it also requires Protected Mode settings for each zone to be the same value.  As such, to avoid others spending time debugging this, please adapt that paragraph to something like: _""On IE 7 or higher on Windows Vista, Windows 7, or Windows 10, you must set the Protected Mode settings for each zone to be the same value""_  Thank you.","closed","","Pitxyoki","2021-04-26T16:15:34Z","2021-09-05T08:06:42Z"
"","9628","`npm install selenium-webdriver/edge --save` doesn't go through proxy and fail.","## To Reproduce  Being in a network environment that can only access WLAN through proxy. Having `HTTP_PROXY` and `HTTPS_PROXY` env set, having `proxy` and `https_proxy` configured in `.npmrc` , and having proxy set in OS setting. Try to run `npm install selenium-webdriver/edge --save` .  ## Expected behavior  The package is installed through the proxy.  ## Actual behavior  `npm` quit with error:  ``` ‚ÄâWARN‚Äâ HEAD https://github.com/selenium-webdriver/edge error (ETIMEDOUT). Will retry in 10 milliseconds. 5 retries left. ‚ÄâWARN‚Äâ HEAD https://github.com/selenium-webdriver/edge error (ETIMEDOUT). Will retry in 60 milliseconds. 4 retries left. ‚ÄâERROR‚Äâ Command failed with exit code 128: git ls-remote git+ssh://git@github.com/selenium-webdriver/edge.git HEAD ERROR: Repository not found. fatal: Could not read from remote repository.  Please make sure you have the correct access rights and the repository exists. ```  By looking at the proxy log it seems that GitHub is not accessed through the proxy.  ## Environment  OS: macOS Big Sur 11.3","closed","","Jason5Lee","2021-07-04T01:50:33Z","2021-09-05T07:59:03Z"
"","9692","Download without confirmation on Firefox Linux (javascript generated file)","## Environment  OS: Ubuntu 20.04 Browser: Firefox Browser version: 90.0 (64-bit) Browser Driver version:  GeckoDriver 0.29 Language Bindings version: Python 3.8 Selenium Grid version (if applicable): 3.141.0  ## Expected behaviour  I want to automatic download some XLSX file from a webpage using Python without Firefox ask me for confirmation. I tried the [Selenium tutorial](https://selenium-python.readthedocs.io/faq.html?highlight=download#how-to-auto-save-files-using-custom-firefox-profile) as bellow:  ```python from selenium import webdriver from selenium.webdriver.firefox.options import Options from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC from selenium.webdriver.common.by import By  opts = Options()  profile = webdriver.FirefoxProfile() profile.set_preference('browser.download.folderList', 2) profile.set_preference('browser.download.dir', MY_PATH) profile.set_preference('browser.download.manager.showWhenStarting', False) profile.set_preference('browser.helperApps.neverAsk.saveToDisk',                        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'                        ';application/vnd.ms-excel'                        ';application/xls'                        ';application/xlsx')   browser = webdriver.Firefox(profile, options=opts, executable_path=DRIVER_PATH) browser.get('https://filesamples.com/formats/xlsx') btn = browser.find_elements_by_class_name('btn-primary') btn[0].click() ```  ## Wrong behaviour  This code works fine in the used above site. The problem is when I use in my company website where the file is generated through a JavaScript action (the click action generate a process windows, at the end the file is asked to be saved).  ```html  ```  ![image](https://user-images.githubusercontent.com/2211474/127489141-fa815000-5cd8-4f27-b772-80306e979568.png)  ![image](https://user-images.githubusercontent.com/2211474/127489031-c1a4a7de-a513-494b-9cbb-85240847b3f5.png)  How to make the given `profile` act in this download? Is this a bug or a missing configuration mine?","closed","","hildogjr","2021-07-29T12:14:08Z","2021-09-05T07:50:15Z"
"","8955","mutation-listener.js file missing in published NPM package","## Bug report  There is the **mutation-listener.js** file missing in the [**selenium-webdriver@4.0.0-alpha.8** package](https://www.npmjs.com/package/selenium-webdriver) published to NPM.  Trying to listen to DOM mutations fails with the following error: ``` Error: ENOENT: no such file or directory, open '../../cdp-support/mutation-listener.js'     at Object.openSync (node:fs:487:3)     at Object.readFileSync (node:fs:388:35)     at Driver.logMutationEvents (/Users/marcus.noll/Documents/git/selenium-webdriver-bug/node_modules/selenium-webdriver/chromium.js:888:33)     at processTicksAndRejections (node:internal/process/task_queues:93:5)     at async example (/Users/marcus.noll/Documents/git/selenium-webdriver-bug/index.js:7:9) {   errno: -2,   syscall: 'open',   code: 'ENOENT',   path: '../../cdp-support/mutation-listener.js' }  ```  ## To reproduce  I just stripped down [the test code for `logMutationEvents`](https://github.com/SeleniumHQ/selenium/blob/07cd99c6811d13f4906f941c1d6936fcd5999baa/javascript/node/selenium-webdriver/test/chrome/devtools_test.js#L120-L135) and changed it to work with the published NPM package.  Find it here: https://github.com/systemboogie/logmutation-events-bug  Run it with: 1. `npm install` 2. `npm start`  ## Expected behavior  **mutation-listener.js** is contained in the NPM package and it's therefore possible to use `logMutationEvents` without error.  ## Environment  Browser: Chrome","closed","C-nodejs,","systemboogie","2020-12-10T21:25:15Z","2021-09-05T08:30:07Z"
"","9888","Unable to launch the driver after upgrading to version 4.0.0-alpha-7","##  Unable to launch the driver with version 4.0.0-alpha-7  Trying to launch the driver with Selenium 4.0.0-alpha-7 version but getting unexpected error.  ## To Reproduce  **Earlier maven dependency**: ```     org.seleniumhq.selenium    selenium-java    3.141.59  ```  **Updated maven dependency**:  ```     org.seleniumhq.selenium    selenium-java    4.0.0-alpha-7  ```  **Code**:  ``` System.setProperty(""webdriver.chrome.driver"", ""path to chromeDriver""); WebDriver driver = new ChromeDriver(); driver.get(""https://www.google.com""); ```  **Error**: ``` Exception in thread ""main"" java.lang.AbstractMethodError: org.openqa.selenium.remote.service.DriverService$Builder.createArgs()Lcom/google/common/collect/ImmutableList; 	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:358) 	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:119) 	at org.openqa.selenium.chrome.ChromeDriver.(ChromeDriver.java:105) ``` ## Expected behavior  Chrome driver should be launched and should navigated to google.  ## Environment  OS: Windows 10 Browser: Chrome Browser version: 92.0.4515.107 Browser Driver version: ChromeDriver 92.0.4515.107 Language Bindings version: Java 1.8  Selenium Grid version (if applicable): No IDE: Eclipse  **Note**:   - I created a sample project from scratch by with version `4.0.0-alpha-7` and that is working fine (able to launch driver successfully) but issue occurs when upgrading from ` 3.14` to `4.0.0-alpha-7` - I did force update for the Maven project - Cleaned and rebuilt the project","closed","","geethub17","2021-10-06T19:46:52Z","2021-11-06T00:06:11Z"
"","9496","Sendkeys does not send full keys to Reach input field","##  Environment OS version:  iOS 14.4 Browser: Safari Browser Device: iPhone 12 Pro Appium version: 1.20.2  React version: 17.0.1  ## Description  I am using Browser Stack to run my Selenium test. In the test, the SendKeys(""12345"") is used to type this number ""12345"" in the ""zipcode"" input field.  During test execution, when the send keys command enters 12345, it enters only the first character ""1"". Then the rest of the ""2345"" are not entered in the input field.  When it sends the key ""1"", the form validation kicks in and throws an error message that the zipcode entered is not correct and the sendKeys stops entering the rest of the input (""2345"")     Detailed steps to reproduce the behavior:  ## Test script or set of commands reproducing this issue  Tried various ways such as doing javascript focus() in the field to enter the next character but it did not help. All of the commands I put are executed fine in the BrowserStack logs but the recorded video showed it stops entering the rest of the zipcode after sending the first number in the zip code. The test executes all the commands but still does not do enter all 5 digits.   WebElement element = driver.findElement(By.cssSelector(""input[id\$=zipcode]""));  Attempt # 1:  JavascriptExecutor jsExecutor = (JavascriptExecutor) driver; jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""1"") // 1 is entered fine  jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""2"") // no more digits entered in teh input from there althought execution logs shows sending keys  jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""3"") jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""4"") jsExecutor.executeScript(""arguments[0].focus()"", element); element.sendKeys(""5"")  Attempt # 2: tried setting full 12345 number for the value attribute in the input and then triggered the focus and blur methods. It did not help  JavascriptExecutor jsExecutor = (JavascriptExecutor) driver;   jsExecutor.executeScript(""document.querySelector('input[id\$=complainantZip]').value='12345';"");   jsExecutor.executeScript(""document.querySelector('input[id\$=complainantZip]').focus();"");   jsExecutor.executeScript(""document.querySelector('input[id\$=complainantZip]').blur();"");*/  Can you please help why the sendkeys is not working ?","closed","","KrishnaVivekanandan","2021-05-20T11:39:26Z","2021-09-05T08:03:24Z"
"","9133","documentation: sample code for selenium-webdriver does not run","# The sample code for selenium-webdriver has an extra ; in the middle of the code making it not able to execute. ``` https://www.selenium.dev/selenium/docs/api/javascript/index.html ```   ## To Reproduce  Under the Usage section of the page: ``` https://www.selenium.dev/selenium/docs/api/javascript/index.html ``` sample code ``` const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     await driver.findElement(By.name('q'));.sendKeys('webdriver', Key.RETURN);     await driver.wait(until.titleIs('webdriver - Google Search'), 1000);   } finally {     await driver.quit();   } })(); ```   ## Expected behavior The sample code should not have the extra ; in the middle of the driver.findElement function: ``` const {Builder, By, Key, until} = require('selenium-webdriver');  (async function example() {   let driver = await new Builder().forBrowser('firefox').build();   try {     await driver.get('http://www.google.com/ncr');     await driver.findElement(By.name('q')).sendKeys('webdriver', Key.RETURN);     await driver.wait(until.titleIs('webdriver - Google Search'), 1000);   } finally {     await driver.quit();   } })(); ```","closed","","jamesnewking","2021-02-02T21:09:00Z","2021-09-05T08:21:29Z"
"","9725","Typo in a link in the documentation","![image](https://user-images.githubusercontent.com/29214635/128640672-9d908eb8-2b85-4626-a03b-7c8b1a3df85c.png)  The link that menu points to is https://github.com/seleniumhq/selenium//issues/new. Notice the double '//' between _selenium_ and _issues_.  ``` https://github.com/seleniumhq/selenium/issues/new https://github.com/seleniumhq/selenium//issues/new ```","closed","","adriancuadrado","2021-08-08T17:40:22Z","2021-09-08T00:04:40Z"
"","9833","Failed to import atoms module","","closed","needs-triaging,","goodboychik","2021-09-16T13:05:21Z","2021-10-17T00:06:55Z"
"","9627","-","-","closed","","cvcci","2021-07-04T00:55:06Z","2021-09-05T07:59:03Z"
"","9624","Implement script pinning in Ruby","","closed","C-rb,","p0deje","2021-07-02T16:20:05Z","2021-09-05T07:58:58Z"
"","9623","Implement Shadow DOM API in Ruby","","closed","C-rb,","p0deje","2021-07-02T16:19:47Z","2021-09-05T07:59:00Z"
"","9345","Provide W3C-complaint API for setting `timeouts` in capabilities","","closed","C-rb,","p0deje","2021-03-29T22:39:24Z","2021-09-05T08:08:33Z"
"","9243","Exception occured: org.openqa.selenium.ElementNotInteractableException: element not interactable","","closed","","PriyankaRCM","2021-03-08T13:46:01Z","2021-09-05T08:15:39Z"
"","9082","While executing Selenium script in server using jenkins  got an error.","","closed","","meka-dharma","2021-01-22T05:13:35Z","2021-09-05T08:24:57Z"
"","8926","Sel","","closed","","Leoniduss","2020-12-01T03:11:52Z","2021-09-05T08:30:16Z"